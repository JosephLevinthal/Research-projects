== TEST (2019-05-16 20:57:32) 
-- CODE:
#Digito de um numero inteiro positivo
z = int(input("Digite um numero inteiro positivo: "))
stz = str(z)
nd = len(stz)
print(z)
print(stz)
print(nd)
#i=0

#while(z > 0):
#	un = z//10
	
-- OUTPUT:
0
0
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 20:57:53) 
-- CODE:
#Digito de um numero inteiro positivo
z = int(input("Digite um numero inteiro positivo: "))
stz = str(z)
nd = len(stz)
print(z)
print(stz)
print(nd)
#i=0

#while(z > 0):
#	un = z//10
	
-- OUTPUT:
0
0
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 20:58:13) 
-- CODE:
#Digito de um numero inteiro positivo
z = int(input("Digite um numero inteiro positivo: "))
stz = str(z)
nd = len(stz)
print(z)
print(stz)
print(nd)
#i=0

#while(z > 0):
#	un = z//10
	
-- OUTPUT:
0
0
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 21:17:20) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))
z = num
sum = 0 
nd = len(str(z))
while (z > 0):
	un = z%10
	sum = sum + un**nd
	z = z//10
if(num == sum):	
	print(ok)
else:
	print(n)
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(ok)
NameError: name 'ok' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 21:17:50) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))
z = num
sum = 0 
nd = len(str(z))
while (z > 0):
	un = z%10
	sum = sum + un**nd
	z = z//10
if(num == sum):	
	print("ok")
else:
	print("n")
	
	
-- OUTPUT:
ok
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 21:17:58) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))
z = num
sum = 0 
nd = len(str(z))
while (z > 0):
	un = z%10
	sum = sum + un**nd
	z = z//10
if(num == sum):	
	print("ok")
else:
	print("n")
	
	
-- OUTPUT:
ok
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 21:18:10) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))
z = num
sum = 0 
nd = len(str(z))
while (z > 0):
	un = z%10
	sum = sum + un**nd
	z = z//10
if(num == sum):	
	print("ok")
else:
	print("n")
	
	
-- OUTPUT:
ok
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-17 11:24:11) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))
z = num
sum = 0 
nd = len(str(z))
while (z > 0):
	un = z%10
	sum = sum + un**nd
	z = z//10
	num = int(input("Digite um numero inteiro positivo: "))
if(num == sum):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
	
	
-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-17 11:25:28) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))
z = num
sum = 0 
nd = len(str(z))
while (z > 0):
	un = z%10
	sum = sum + un**nd
	z = z//10
	if(num == sum):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
	
	
-- ERROR:
File "XXXX", line 11
    print("ARMSTRONG")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-17 11:25:46) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))
z = num
sum = 0 
nd = len(str(z))
while (z > 0):
	un = z%10
	sum = sum + un**nd
	z = z//10
if(num == sum):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
	
	
-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-17 11:40:43) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))
z = num
sum = 0 
nd = len(str(z))
while (z > 0):
	un = z%10
	sum = sum + un**nd
	z = z//10
	if(num == sum):	
		print("ARMSTRONG")
	else:
		print("NAO ARMSTRONG")
	num = int(input("Digite um numero inteiro positivo: "))
	
-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-17 11:41:18) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))
z = num
sum = 0 
nd = len(str(z))
while (z > 0):
	un = z%10
	sum = sum + un**nd
	z = z//10
	num = int(input("Digite um numero inteiro positivo: "))
	if(num == sum):	
		print("ARMSTRONG")
	else:
		print("NAO ARMSTRONG")
	
	
-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 10:03:45) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))
z = num
sum = 0 
nd = len(str(z))
while (z > 0):
	un = z%10
	sum = sum + un**nd
	z = z//10
	num = int(input("Digite um numero inteiro positivo: "))
	if(num == sum):	
		print("ARMSTRONG")
	else:
		print("NAO ARMSTRONG")
	
	
-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 10:05:33) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))
z = num
sum = 0 
nd = len(str(z))
while (z > 0):
	num = int(input("Digite um numero inteiro positivo: "))
	un = z%10
	sum = sum + un**nd
	z = z//10
	if(num == sum):	
		print("ARMSTRONG")
	else:
		print("NAO ARMSTRONG")
	
	
-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 10:07:06) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))
z = num
soma = 0 
nd = len(str(z))
while (z > 0):
#	num = int(input("Digite um numero inteiro positivo: "))
	un = z%10
	soma = soma + un**nd
	z = z//10
	print(un)
	print(soma)
	print(z)
	
	
	#if(num == sum):	
	#	print("ARMSTRONG")
	#else:
	#	print("NAO ARMSTRONG")
	
	
-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 10:08:23) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))
z = num
soma = 0 
nd = len(str(z))
while (z > 0):
#	num = int(input("Digite um numero inteiro positivo: "))
	un = z%10
	soma = soma + un**nd
	z = z//10
	print(un)
	print(soma)
	print(z)
	
	
	#if(num == sum):	
	#	print("ARMSTRONG")
	#else:
	#	print("NAO ARMSTRONG")
	
	
-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 10:09:40) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))
z = num
soma = 0 
nd = len(str(z))
while (z > 0):
#	num = int(input("Digite um numero inteiro positivo: "))
	un = z%10
	soma = soma + un**nd
	z = z//10
	print(un)
	print(soma)
	print(z)
	if(num == sum):	
		print("ARMSTRONG")
	else:
		print("NAO ARMSTRONG")
	
	
-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 10:09:57) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))
z = num
soma = 0 
nd = len(str(z))
while (z > 0):
#	num = int(input("Digite um numero inteiro positivo: "))
	un = z%10
	soma = soma + un**nd
	z = z//10
	print(un)
	print(soma)
	print(z)
	if(num == soma):	
		print("ARMSTRONG")
	else:
		print("NAO ARMSTRONG")
	
	
-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 10:11:08) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))
z = num
soma = 0 
nd = len(str(z))
while (z > 0):
#	num = int(input("Digite um numero inteiro positivo: "))
	un = z%10
	soma = soma + un**nd
	z = z//10
	print(soma)
	print(num)
	if(num == soma):	
		print("ARMSTRONG")
	else:
		print("NAO ARMSTRONG")
	
	
-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 10:11:20) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))
z = num
soma = 0 
nd = len(str(z))
while (z > 0):
#	num = int(input("Digite um numero inteiro positivo: "))
	un = z%10
	soma = soma + un**nd
	z = z//10
	print(soma)
	print(num)
	if(num == soma):	
		print("ARMSTRONG")
	else:
		print("NAO ARMSTRONG")
	
	
-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 10:11:39) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))
z = num
soma = 0 
nd = len(str(z))
while (z > 0):
	num = int(input("Digite um numero inteiro positivo: "))
	un = z%10
	soma = soma + un**nd
	z = z//10
	print(soma)
	print(num)
	if(num == soma):	
		print("ARMSTRONG")
	else:
		print("NAO ARMSTRONG")
	
	
-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 10:14:03) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))
z = num
soma = 0 
nd = len(str(z))
while (z > 0):
	un = z%10
	soma = soma + un**nd
	z = z//10
	print(soma)
	print(num)
	if(num == soma):	
		print("ARMSTRONG")
	else:
		print("NAO ARMSTRONG")
num = int(input("Digite um numero inteiro positivo: "))		
	
	
-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 10:14:47) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))
z = num
soma = 0 
nd = len(str(z))
while (z > 0):
	un = z%10
	soma = soma + un**nd
	z = z//10
	print(soma)
	print(num)
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
		
	
	
-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 10:15:07) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))
z = num
soma = 0 
nd = len(str(z))
while (z > 0):
	un = z%10
	soma = soma + un**nd
	z = z//10
	print(soma)
	print(num)
	num = int(input("Digite um numero inteiro positivo: "))
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
		
	
	
-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 10:18:45) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))
num = num
soma = 0 
nd = len(str(num))
while (num > 0):
	un = num%10
	soma = soma + un**nd
	num =num//10
	print(soma)
	print(num)
	num = int(input("Digite um numero inteiro positivo: "))
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
		
	
	
-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 10:21:13) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))
num = z
soma = 0 
nd = len(str(num))
while (z > 0):
	un = z%10
	soma = soma + un**nd
	z = z//10
	print(soma)
	print(num)
	num = int(input("Digite um numero inteiro positivo: "))
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
		
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    num = z
NameError: name 'z' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 10:40:36) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))
z = num
soma = 0 
nd = len(str(z))
while (z > 0):
	un = z%10
	soma = soma + un**nd
	z = z//10
	print(soma)
	print(num)
	#z = int(input("Digite um numero inteiro positivo: "))
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
		
	
	
-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 10:40:51) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))
z = num
soma = 0 
nd = len(str(z))
while (z > 0):
	un = z%10
	soma = soma + un**nd
	z = z//10
	print(soma)
	print(num)
	#z = int(input("Digite um numero inteiro positivo: "))
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
		
	
	
-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 10:40:57) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))
z = num
soma = 0 
nd = len(str(z))
while (z > 0):
	un = z%10
	soma = soma + un**nd
	z = z//10
	print(soma)
	print(num)
	#z = int(input("Digite um numero inteiro positivo: "))
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
		
	
	
-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 10:41:22) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))
z = num
soma = 0 
nd = len(str(z))
while (z > 0):
	un = z%10
	soma = soma + un**nd
	z = z//10
	print(soma)
	print(num)
	#z = int(input("Digite um numero inteiro positivo: "))
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
		
	
	
-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 10:41:45) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))
z = num
soma = 0 
nd = len(str(z))
while (z > 0):
	un = z%10
	soma = soma + un**nd
	z = z//10
	print(soma)
	print(num)
	#z = int(input("Digite um numero inteiro positivo: "))
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
		
	
	
-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 10:42:10) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))
z = num
soma = 0 
nd = len(str(z))
while (z > 0):
	un = z%10
	soma = soma + un**nd
	z = z//10
	print(soma)
	print(num)
	#z = int(input("Digite um numero inteiro positivo: "))
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
		
	
	
-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 10:55:28) 
-- CODE:
#Digito de um numero inteiro positivo
def Armstron_Number(num):
	z = num
	soma = 0 
	nd = len(str(z))
	while (z > 0):
		un = z%10
		soma = soma + un**nd
		z = z//10
		print(soma)
		print(num)

num = int(input("Digite um numero inteiro positivo: "))	
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    if(num == soma):	
NameError: name 'soma' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-21 08:39:37) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	
z = num
soma = 0 
nd = len(str(z))
while (z > 0):
	un = z%10
	soma = soma + un**nd
	z = z//10
	print(soma)
	print(num)
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
	
-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-21 08:39:46) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	
z = num
soma = 0 
nd = len(str(z))
while (z > 0):
	un = z%10
	soma = soma + un**nd
	z = z//10
	print(soma)
	print(num)
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
	
-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-21 08:40:32) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	
z = num
soma = 0 
nd = len(str(z))
while (z > 0):
	un = z%10
	soma = soma + un**nd
	z = z//10
	print(soma)
	print(num)
	num = int(input("Digite um numero inteiro positivo: "))
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
	
-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-21 08:41:15) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	
z = num
soma = 0 
nd = len(str(z))
while (z > 0):
	un = z%10
	soma = soma + un**nd
	z = z//10
	print(soma)
	print(num)
	z = int(input("Digite um numero inteiro positivo: "))
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
	
-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-21 08:50:48) 
-- CODE:
#Digito de um numero inteiro positivo
#num = int(input("Digite um numero inteiro positivo: "))	
z = num
soma = 0 
nd = len(str(z))
while (z > 0):
	un = z%10
	soma = soma + un**nd
	z = z//10
	print(soma)
	print(num)
	num = int(input("Digite um numero inteiro positivo: "))
	num = z
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    z = num
NameError: name 'num' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-21 08:51:01) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	
z = num
soma = 0 
nd = len(str(z))
while (z > 0):
	un = z%10
	soma = soma + un**nd
	z = z//10
	print(soma)
	print(num)
	num = int(input("Digite um numero inteiro positivo: "))
	num = z
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
	
-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-21 15:59:48) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	
num = num
soma = 0 
nd = len(str(z))
while (num > 0):
	un = z%10
	soma = soma + un**nd
	num = num//10
	print(soma)
	print(num)
	num = int(input("Digite um numero inteiro positivo: "))
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    nd = len(str(z))
NameError: name 'z' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-21 16:00:24) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	
num = num
soma = 0 
nd = len(str(z))
while (num > 0):
	un = z%10
	soma = soma + un**nd
	num = num//10
	print(soma)
	print(num)
	#num = int(input("Digite um numero inteiro positivo: "))
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    nd = len(str(z))
NameError: name 'z' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-21 16:01:29) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	
z = num
soma = 0 
nd = len(str(z))
while (num > 0):
	un = z%10
	soma = soma + un**nd
	z = z//10
	print(soma)
	print(num)
	#num = int(input("Digite um numero inteiro positivo: "))
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
	
-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-21 16:02:37) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	
z = num
soma = 0 
nd = len(str(z))
while (z > 0):
	un = z%10
	soma = soma + un**nd
	z = z//10
	print(soma)
	print(num)
	#num = int(input("Digite um numero inteiro positivo: "))
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
	
-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-21 16:02:47) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	
z = num
soma = 0 
nd = len(str(z))
while (z > 0):
	un = z%10
	soma = soma + un**nd
	z = z//10
	print(soma)
	print(num)
	#num = int(input("Digite um numero inteiro positivo: "))
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
	
-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-21 16:02:57) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	
z = num
soma = 0 
nd = len(str(z))
while (z > 0):
	un = z%10
	soma = soma + un**nd
	z = z//10
	print(soma)
	print(num)
	#num = int(input("Digite um numero inteiro positivo: "))
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
	
-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-21 16:03:31) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	
z = num
soma = 0 
nd = len(str(z))
while (z > 0):
	un = z%10
	soma = soma + un**nd
	z = z//10
	print(soma)
	print(num)
	num = int(input("Digite um numero inteiro positivo: "))
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
	
-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-21 17:33:11) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	
z = num
soma = 0 
nd = len(str(z))
while (z > 0):
	un = z%10
	soma = soma + un**nd
	z = z//10
	print(soma)
	print(num)
	#num = int(input("Digite um numero inteiro positivo: "))
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
	
-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-21 17:33:19) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	
z = num
soma = 0 
nd = len(str(z))
while (z > 0):
	un = z%10
	soma = soma + un**nd
	z = z//10
	print(soma)
	print(num)
	#num = int(input("Digite um numero inteiro positivo: "))
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
	
-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-21 17:33:49) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	
z = num
soma = 0 
nd = len(str(z))
while (z > 0):
	un = z%10
	soma = soma + un**nd
	z = z//10
	print(soma)
	print(num)
	num = int(input("Digite um numero inteiro positivo: "))
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
	
-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-21 17:35:11) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	
z = num
soma = 0 
nd = len(str(z))
while (z > 0):
	un = z%10
	soma = soma + un**nd
	z = z//10
	print(soma)
	print(num)
	num = int(input("Digite um numero inteiro positivo: "))
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
	
-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-21 17:35:40) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	
z = num
soma = 0 
nd = len(str(z))
while (z > 0):
	un = z%10
	soma = soma + un**nd
	z = z//10
	print(soma)
	print(num)
	num = int(input("Digite um numero inteiro positivo: "))
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
	
-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-21 17:37:06) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	
z = num
soma = 0 
nd = len(str(z))
while (z > 0):
	un = z%10
	soma = soma + un**nd
	z = z//10
	print(soma)
	print(num)
	num = int(input("Digite um numero inteiro positivo: "))
	if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
	
-- ERROR:
File "XXXX", line 14
    print("ARMSTRONG")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-21 17:37:39) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	
z = num
soma = 0 
nd = len(str(z))
while (z > 0):
	un = z%10
	soma = soma + un**nd
	z = z//10
	print(soma)
	print(num)
	num = int(input("Digite um numero inteiro positivo: "))
	if(num == soma):	
		print("ARMSTRONG")
	else:
		print("NAO ARMSTRONG")
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
	
-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-21 17:38:21) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	
z = num
soma = 0 
nd = len(str(z))
while (z > 0):
	un = z%10
	soma = soma + un**nd
	z = z//10
	#print(soma)
	#print(num)
	num = int(input("Digite um numero inteiro positivo: "))
	if(num == soma):	
		print("ARMSTRONG")
	else:
		print("NAO ARMSTRONG")
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
	
-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-21 22:43:58) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	

while (num > 0):
	num = num
	soma = 0
	nd = len(str(z))
	un = z%10
	soma = soma + un**nd
	num = num//10
	if(num == soma and num >0 ):	
		print("ARMSTRONG")
	else:
		print("NAO ARMSTRONG")
	num = int(input("Digite um numero inteiro positivo: "))	
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 16, in <module>
    if(num == soma):	
NameError: name 'soma' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-21 22:44:28) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	

while (num > 0):
	num = num
	soma = 0
	nd = len(str(num))
	un = num%10
	soma = soma + un**nd
	num = num//10
	if(num == soma and num >0 ):	
		print("ARMSTRONG")
	else:
		print("NAO ARMSTRONG")
	num = int(input("Digite um numero inteiro positivo: "))	
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 16, in <module>
    if(num == soma):	
NameError: name 'soma' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-25 17:38:21) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	

while (num > 0):
	num = num
	soma = 0
	nd = len(str(num))
	un = num%10
	soma = soma + un**nd
	num = num//10
	if(num == soma and num >0 ):	
		print("ARMSTRONG")
	else:
		print("NAO ARMSTRONG")
	num = int(input("Digite um numero inteiro positivo: "))	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 16, in <module>
    if(num == soma):	
NameError: name 'soma' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-25 17:39:26) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	

while (num > 0):
	num = num
	soma = 0
	nd = len(str(num))
	un = num%10
	soma = soma + un**nd
	num = num//10
	print(soma)
	print(num)
	if(num == soma and num >0 ):	
		print("ARMSTRONG")
	else:
		print("NAO ARMSTRONG")
	num = int(input("Digite um numero inteiro positivo: "))	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 16, in <module>
    if(num == soma):	
NameError: name 'soma' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-25 17:39:47) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	

while (num > 0):
	num = num
	soma = 0
	nd = len(str(num))
	un = num%10
	soma = soma + un**nd
	num = num//10
	print(soma)
	print(num)
#	if(num == soma and num >0 ):	
#		print("ARMSTRONG")
#	else:
#		print("NAO ARMSTRONG")
#	num = int(input("Digite um numero inteiro positivo: "))	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 16, in <module>
    if(num == soma):	
NameError: name 'soma' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-25 17:44:41) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	

while (num > 0):
	z = num
	soma = 0
	nd = len(str(num))
	un = num%10
	soma = soma + un**nd
	z = z//10
	print(soma)
	print(num)
#	if(num == soma and num >0 ):	
#		print("ARMSTRONG")
#	else:
#		print("NAO ARMSTRONG")
#	num = int(input("Digite um numero inteiro positivo: "))	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 16, in <module>
    if(num == soma):	
NameError: name 'soma' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-25 17:47:17) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	
z = num
while (z > 0):
	z = num
	soma = 0
	nd = len(str(num))
	un = num%10
	soma = soma + un**nd
	z = z//10
	print(soma)
	print(num)
	print(z)
#	if(num == soma and num >0 ):	
#		print("ARMSTRONG")
#	else:
#		print("NAO ARMSTRONG")
#	num = int(input("Digite um numero inteiro positivo: "))	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 16, in <module>
    if(num == soma):	
NameError: name 'soma' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-25 17:47:39) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	
z = num
while (z > 0):
	z = num
	soma = 0
	nd = len(str(num))
	un = num%10
	soma = soma + un**nd
	z = z//10
	print(soma)
	print(num)
	print(z)
#	if(num == soma and num >0 ):	
#		print("ARMSTRONG")
#	else:
#		print("NAO ARMSTRONG")
#	num = int(input("Digite um numero inteiro positivo: "))	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 16, in <module>
    if(num == soma):	
NameError: name 'soma' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-25 18:03:32) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	
z = num
while (z > 0):
	soma = 0
	z = num
	num_dig = len(str(num))
	unidade = z%10
	soma = soma + unidade**num_dig
	z = z//10
	num = int(input("Digite um numero inteiro positivo: "))
print(num)
print(z)
#	if(num == soma and num >0 ):	
#		print("ARMSTRONG")
#	else:
#		print("NAO ARMSTRONG")
		

-- OUTPUT:
0
0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-25 18:04:32) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	

while (num > 0):
	soma = 0
	z = num
	num_dig = len(str(num))
	unidade = z%10
	soma = soma + unidade**num_dig
	z = z//10
	num = int(input("Digite um numero inteiro positivo: "))
print(num)
print(z)
#	if(num == soma and num >0 ):	
#		print("ARMSTRONG")
#	else:
#		print("NAO ARMSTRONG")
		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    print(z)
NameError: name 'z' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-25 18:04:58) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	

while (num > 0):
	soma = 0
	z = num
	num_dig = len(str(num))
	unidade = z%10
	soma = soma + unidade**num_dig
	z = z//10
	num = int(input("Digite um numero inteiro positivo: "))
print(num)
print(z)
#	if(num == soma and num >0 ):	
#		print("ARMSTRONG")
#	else:
#		print("NAO ARMSTRONG")
		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    print(z)
NameError: name 'z' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-25 18:05:21) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	

while (num > 0):
	soma = 0
	z = num
	num_dig = len(str(num))
	unidade = z%10
	soma = soma + unidade**num_dig
	z = z//10
	num = int(input("Digite um numero inteiro positivo: "))
	print(num)
	print(z)
#	if(num == soma and num >0 ):	
#		print("ARMSTRONG")
#	else:
#		print("NAO ARMSTRONG")
		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    print(z)
NameError: name 'z' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-25 18:05:37) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	

while (num > 0):
	soma = 0
	z = num
	num_dig = len(str(num))
	unidade = z%10
	soma = soma + unidade**num_dig
	z = z//10
	print(num)
	print(z)
	num = int(input("Digite um numero inteiro positivo: "))
#	if(num == soma and num >0 ):	
#		print("ARMSTRONG")
#	else:
#		print("NAO ARMSTRONG")
		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    print(z)
NameError: name 'z' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-25 18:09:47) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	
num = z
while (z > 0):
	soma = 0
	z = z
	num_dig = len(str(num))
	unidade = z%10
	soma = soma + unidade**num_dig
	z = z//10
	print(num)
	print(z)
	num = int(input("Digite um numero inteiro positivo: "))
	num = z
#	if(num == soma and num >0 ):	
#		print("ARMSTRONG")
#	else:
#		print("NAO ARMSTRONG")
		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    num = z
NameError: name 'z' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-25 18:10:19) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	
z  = num
while (z > 0):
	soma = 0
	z = z
	num_dig = len(str(num))
	unidade = z%10
	soma = soma + unidade**num_dig
	z = z//10
	print(num)
	print(z)
	num = int(input("Digite um numero inteiro positivo: "))
	z = num
#	if(num == soma and num >0 ):	
#		print("ARMSTRONG")
#	else:
#		print("NAO ARMSTRONG")
		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    num = z
NameError: name 'z' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-25 18:10:29) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	
z  = num
while (z > 0):
	soma = 0
	z = z
	num_dig = len(str(num))
	unidade = z%10
	soma = soma + unidade**num_dig
	z = z//10
	print(num)
	print(z)
	num = int(input("Digite um numero inteiro positivo: "))
	z = num
#	if(num == soma and num >0 ):	
#		print("ARMSTRONG")
#	else:
#		print("NAO ARMSTRONG")
		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    num = z
NameError: name 'z' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 15:48:44) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	
z  = num
soma = 0
while (z > 0):
	pot = size(num)
	unidade = z%10
	soma = soma + unidade**pot
	z = z//10
print(soma)	

	#	num = int(input("Digite um numero inteiro positivo: "))
#	if(num == soma and num >0 ):	
#		print("ARMSTRONG")
#	else:
#		print("NAO ARMSTRONG")
		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    num = z
NameError: name 'z' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 15:49:15) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	
z  = num
soma = 0
while (z > 0):
	pot = len(str(num))
	unidade = z%10
	soma = soma + unidade**pot
	z = z//10
print(soma)	

	#	num = int(input("Digite um numero inteiro positivo: "))
#	if(num == soma and num >0 ):	
#		print("ARMSTRONG")
#	else:
#		print("NAO ARMSTRONG")
		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    num = z
NameError: name 'z' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 15:49:36) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	
z  = num
soma = 0
while (z > 0):
	pot = len(str(num))
	unidade = z%10
	soma = soma + unidade**pot
	z = z//10
print(soma)	

	#	num = int(input("Digite um numero inteiro positivo: "))
#	if(num == soma and num >0 ):	
#		print("ARMSTRONG")
#	else:
#		print("NAO ARMSTRONG")
		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    num = z
NameError: name 'z' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 15:50:22) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	
z  = num
soma = 0
while (z > 0):
	pot = len(str(num))
	unidade = z%10
	soma = soma + unidade**pot
	z = z//10
	print(unidade)
	print(soma)	

	#	num = int(input("Digite um numero inteiro positivo: "))
#	if(num == soma and num >0 ):	
#		print("ARMSTRONG")
#	else:
#		print("NAO ARMSTRONG")
		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    num = z
NameError: name 'z' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 15:51:23) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	
z  = num
soma = 0
while (z > 0):
	pot = len(str(num))
	unidade = z%10
	soma = soma + unidade**pot
	z = z//10

print(soma)	

	#	num = int(input("Digite um numero inteiro positivo: "))
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
	

-- OUTPUT:
0
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 15:51:30) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	
z  = num
soma = 0
while (z > 0):
	pot = len(str(num))
	unidade = z%10
	soma = soma + unidade**pot
	z = z//10

print(soma)	

	#	num = int(input("Digite um numero inteiro positivo: "))
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
	

-- OUTPUT:
0
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 15:52:27) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	
z  = num
soma = 0
while (z > 0):
	pot = len(str(num))
	unidade = z%10
	soma = soma + unidade**pot
	z = z//10

	num = int(input("Digite um numero inteiro positivo: "))
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
	

-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 15:56:01) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	
z  = num
while (z > 0):
	soma = 0
	pot = len(str(num))
	unidade = z%10
	soma = soma + unidade**pot
	z = z//10
	num = int(input("Digite um numero inteiro positivo: "))
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    if(num == soma):	
NameError: name 'soma' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 15:57:22) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	
z  = num
while (z > 0):
	soma = 0
	pot = len(str(num))
	unidade = z%10
	soma = soma + unidade**pot
	z = z//10
	print(z)
	num = int(input("Digite um numero inteiro positivo: "))
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    if(num == soma):	
NameError: name 'soma' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 15:58:19) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	
z  = num
while (z > 0):
	soma = 0
	pot = len(str(num))
	unidade = z%10
	soma = soma + unidade**pot
	z = z//10
	print(z)
	num = int(input("Digite um numero inteiro positivo: "))
		if(num == soma):	
			print("ARMSTRONG")
		else:
			print("NAO ARMSTRONG")
	

-- ERROR:
File "XXXX", line 12
    if(num == soma):	
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 15:58:32) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	
z  = num
while (z > 0):
	soma = 0
	pot = len(str(num))
	unidade = z%10
	soma = soma + unidade**pot
	z = z//10
	print(z)
	num = int(input("Digite um numero inteiro positivo: "))
	if(num == soma):	
		print("ARMSTRONG")
	else:
		print("NAO ARMSTRONG")
	

-- ERROR:
File "XXXX", line 12
    if(num == soma):	
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 15:59:07) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	
z  = num
while (z > 0):
	soma = 0
	pot = len(str(num))
	unidade = z%10
	soma = soma + unidade**pot
	z = z//10
	print(z)
	if(num == soma):	
		print("ARMSTRONG")
	else:
		print("NAO ARMSTRONG")
	
	num = int(input("Digite um numero inteiro positivo: "))

-- ERROR:
File "XXXX", line 12
    if(num == soma):	
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 15:59:25) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	
z  = num
while (z > 0):
	soma = 0
	pot = len(str(num))
	unidade = z%10
	soma = soma + unidade**pot
	z = z//10
	print(z)
	if(num == soma):	
		print("ARMSTRONG")
	else:
		print("NAO ARMSTRONG")
	
	num = int(input("Digite um numero inteiro positivo: "))

-- ERROR:
File "XXXX", line 12
    if(num == soma):	
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 15:59:40) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	
z  = num
while (z > 0):
	soma = 0
	pot = len(str(num))
	unidade = z%10
	soma = soma + unidade**pot
	z = z//10
	if(num == soma):	
		print("ARMSTRONG")
	else:
		print("NAO ARMSTRONG")
	
	num = int(input("Digite um numero inteiro positivo: "))

-- ERROR:
File "XXXX", line 12
    if(num == soma):	
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 16:00:26) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	
z = num
while (z > 0):
	soma = 0
	pot = len(str(num))
	unidade = z%10
	soma = soma + unidade**pot
	z = z//10
	if(num == soma):	
		print("ARMSTRONG")
	else:
		print("NAO ARMSTRONG")
	
	num = int(input("Digite um numero inteiro positivo: "))

-- ERROR:
File "XXXX", line 12
    if(num == soma):	
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 16:00:53) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	
z = num
while (z > 0):
	soma = 0
	pot = len(str(num))
	unidade = z%10
	soma = soma + unidade**pot
	z = z//10
	if(num == soma):	
		print("ARMSTRONG")
	else:
		print("NAO ARMSTRONG")
	
	num = int(input("Digite um numero inteiro positivo: "))

-- ERROR:
File "XXXX", line 12
    if(num == soma):	
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 16:01:12) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	
z = num
while (z > 0):
	soma = 0
	pot = len(str(num))
	unidade = z%10
	soma = soma + unidade**pot
	z = z//10
	print(z)
	if(num == soma):	
		print("ARMSTRONG")
	else:
		print("NAO ARMSTRONG")
	
	num = int(input("Digite um numero inteiro positivo: "))

-- ERROR:
File "XXXX", line 12
    if(num == soma):	
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 16:04:14) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	

if(num > 0):
	z = num
	while (z > 0):
		soma = 0
		pot = len(str(num))
		unidade = z%10
		soma = soma + unidade**pot
		z = z//10
		print(z)
	if(num == soma):	
		print("ARMSTRONG")
	else:
		print("NAO ARMSTRONG")
	
	num = int(input("Digite um numero inteiro positivo: "))

-- ERROR:
File "XXXX", line 12
    if(num == soma):	
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 16:12:51) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	

while (z > 0):
	soma = 0
	pot = len(str(num))
	unidade = z%10
	soma = soma + unidade**pot
	z = z//10
	
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
	
	#num = int(input("Digite um numero inteiro positivo: "))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    while (z > 0):
NameError: name 'z' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 16:13:05) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	
z = num
while (z > 0):
	soma = 0
	pot = len(str(num))
	unidade = z%10
	soma = soma + unidade**pot
	z = z//10
	
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
	
	#num = int(input("Digite um numero inteiro positivo: "))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    if(num == soma):	
NameError: name 'soma' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 16:13:32) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	
z = num
soma = 0
while (z > 0):
	pot = len(str(num))
	unidade = z%10
	soma = soma + unidade**pot
	z = z//10
	
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
	
	#num = int(input("Digite um numero inteiro positivo: "))

-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 16:13:37) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	
z = num
soma = 0
while (z > 0):
	pot = len(str(num))
	unidade = z%10
	soma = soma + unidade**pot
	z = z//10
	
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
	
	#num = int(input("Digite um numero inteiro positivo: "))

-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 16:13:48) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	
z = num
soma = 0
while (z > 0):
	pot = len(str(num))
	unidade = z%10
	soma = soma + unidade**pot
	z = z//10
	
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
	
	#num = int(input("Digite um numero inteiro positivo: "))

-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 16:15:42) 
-- CODE:
#Digito de um numero inteiro positivo
#num = int(input("Digite um numero inteiro positivo: "))	

#z = num
#soma = 0
#while (z > 0):
#	pot = len(str(num))
#	unidade = z%10
#	soma = soma + unidade**pot
#	z = z//10
#if(num == soma):	
#	print("ARMSTRONG")
#else:
#	print("NAO ARMSTRONG")
	#num = int(input("Digite um numero inteiro positivo: "))

#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	

z = num
soma = 0
while (z > 0):
	pot = len(str(num))
	unidade = z%10
	soma = soma + unidade**pot
	z = z//10
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")

	num = int(input("Digite um numero inteiro positivo: "))	
-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 16:16:26) 
-- CODE:
#Digito de um numero inteiro positivo
#num = int(input("Digite um numero inteiro positivo: "))	

#z = num
#soma = 0
#while (z > 0):
#	pot = len(str(num))
#	unidade = z%10
#	soma = soma + unidade**pot
#	z = z//10
#if(num == soma):	
#	print("ARMSTRONG")
#else:
#	print("NAO ARMSTRONG")
	#num = int(input("Digite um numero inteiro positivo: "))

#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	

z = num
soma = 0
while (z > 0):
	pot = len(str(num))
	unidade = z%10
	soma = soma + unidade**pot
	z = z//10
	if(num == soma):	
		print("ARMSTRONG")
	else:
		print("NAO ARMSTRONG")
	num = int(input("Digite um numero inteiro positivo: "))	
-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 16:17:11) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	

z = num
soma = 0
while (z > 0):
	pot = len(str(num))
	unidade = z%10
	soma = soma + unidade**pot
	z = z//10
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
	#num = int(input("Digite um numero inteiro positivo: "))


-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 16:17:39) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	

z = num
soma = 0
while (z > 0):
	pot = len(str(num))
	unidade = z%10
	soma = soma + unidade**pot
	z = z//10
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
	#num = int(input("Digite um numero inteiro positivo: "))


-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 16:18:15) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	

z = num
soma = 0
while (z > 0):
	pot = len(str(num))
	unidade = z%10
	soma = soma + unidade**pot
	z = z//10
if(num == soma):	
	print("ARMSTRONG")
else:
	print("NAO ARMSTRONG")
	num = int(input("Digite um numero inteiro positivo: "))


-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 16:18:35) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	

z = num
soma = 0
while (z > 0):
	pot = len(str(num))
	unidade = z%10
	soma = soma + unidade**pot
	z = z//10
	if(num == soma):	
		print("ARMSTRONG")
	else:
		print("NAO ARMSTRONG")
	num = int(input("Digite um numero inteiro positivo: "))


-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 16:20:42) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	

z = num
soma = 0
while (z > 0):
	pot = len(str(num))
	unidade = z%10
	soma = soma + unidade**pot
	z = z//10
	if(num == soma):	
		print("ARMSTRONG")
	else:
		print("NAO ARMSTRONG")
	#num = int(input("Digite um numero inteiro positivo: "))


-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 16:40:19) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	

while(num != -1):
	z =  num
	while (z > 0):
		pot = len(str(num))
		unidade = z%10
		soma = soma + unidade**pot
		z = z//10
	if(num == soma):	
		print("ARMSTRONG")
	else:
		print("NAO ARMSTRONG")
	num = int(input("Digite um numero inteiro positivo: "))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    if(num == soma):	
NameError: name 'soma' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 16:40:36) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	

while(num != -1):
	z =  num
	soma = 0
	while (z > 0):
		pot = len(str(num))
		unidade = z%10
		soma = soma + unidade**pot
		z = z//10
	if(num == soma):	
		print("ARMSTRONG")
	else:
		print("NAO ARMSTRONG")
	num = int(input("Digite um numero inteiro positivo: "))


-- OUTPUT:
ARMSTRONG
ARMSTRONG
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-28 16:41:16) 
-- CODE:
#Digito de um numero inteiro positivo
num = int(input("Digite um numero inteiro positivo: "))	

while(num != -1):
	z =  num
	soma = 0
	while (z > 0):
		pot = len(str(num))
		unidade = z%10
		soma = soma + unidade**pot
		z = z//10
	if(num == soma):	
		print("ARMSTRONG")
	else:
		print("NAO ARMSTRONG")
	num = int(input("Digite um numero inteiro positivo: "))


-- EXECUTION TIME:
0.225225
-- TEST CASE 1:
---- input:
0
1
153
-1
---- correct output:
ARMSTRONG
ARMSTRONG
ARMSTRONG
---- user output:
ARMSTRONG
ARMSTRONG
ARMSTRONG
-- TEST CASE 2:
---- input:
100
101
102
103
-1
---- correct output:
NAO ARMSTRONG
NAO ARMSTRONG
NAO ARMSTRONG
NAO ARMSTRONG
---- user output:
NAO ARMSTRONG
NAO ARMSTRONG
NAO ARMSTRONG
NAO ARMSTRONG
-- TEST CASE 3:
---- input:
1634
1635
8208
8209
-1
---- correct output:
ARMSTRONG
NAO ARMSTRONG
ARMSTRONG
NAO ARMSTRONG
---- user output:
ARMSTRONG
NAO ARMSTRONG
ARMSTRONG
NAO ARMSTRONG
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
