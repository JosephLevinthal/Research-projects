== TEST (2019-06-11 17:28:33) 
-- CODE:
from numpy import * 

nf= array(eval(input('numero de faltas:')))
vet= zeros(6, dtype=int)

for i in range(size(nfaltas)):
	if(nf[i]==2):
		vet[0]= vet[0] + 1
	elif( nf[i]==3):
		vet[1]= vet[1] + 1
	elif(nf[i]==4):
		vet[2]= vet[2] + 1
	elif(nf[i]==5):
		vet[3]= vet[3] + 1
	elif(nf[i]==6):
		vet[4]= vet[4] + 1
	elif(nf[i]==7):
		vet[5]= vet[5] + 1
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 17:28:57) 
-- CODE:
from numpy import * 

nf= array(eval(input('numero de faltas:')))
vet= zeros(6, dtype=int)

for i in range(size(nf)):
	if(nf[i]==2):
		vet[0]= vet[0] + 1
	elif( nf[i]==3):
		vet[1]= vet[1] + 1
	elif(nf[i]==4):
		vet[2]= vet[2] + 1
	elif(nf[i]==5):
		vet[3]= vet[3] + 1
	elif(nf[i]==6):
		vet[4]= vet[4] + 1
	elif(nf[i]==7):
		vet[5]= vet[5] + 1
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 17:45:52) 
-- CODE:
from numpy import * 

nf= array(eval(input('numero de faltas:')))
vet= zeros(6, dtype=int)

for i in range(size(nf)):
	if(nf[i]==2):
		vet[0]= vet[0] + 1
	elif( nf[i]==3):
		vet[1]= vet[1] + 1
	elif(nf[i]==4):
		vet[2]= vet[2] + 1
	elif(nf[i]==5):
		vet[3]= vet[3] + 1
	elif(nf[i]==6):
		vet[4]= vet[4] + 1
	elif(nf[i]==7):
		vet[5]= vet[5] + 1
for i in range(size(vet)):
	vet[i]=(vet[i]/sum(vet))*100
print(round(1, vet))
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 17:46:15) 
-- CODE:
from numpy import * 

nf= array(eval(input('numero de faltas:')))
vet= zeros(6, dtype=int)

for i in range(size(nf)):
	if(nf[i]==2):
		vet[0]= vet[0] + 1
	elif( nf[i]==3):
		vet[1]= vet[1] + 1
	elif(nf[i]==4):
		vet[2]= vet[2] + 1
	elif(nf[i]==5):
		vet[3]= vet[3] + 1
	elif(nf[i]==6):
		vet[4]= vet[4] + 1
	elif(nf[i]==7):
		vet[5]= vet[5] + 1
for i in range(size(vet)):
	vet[i]=(vet[i]/sum(vet))*100
print(vet)
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 17:48:19) 
-- CODE:
from numpy import * 

nf= array(eval(input('numero de faltas:')))
vet= zeros(6, dtype=int)

for i in range(size(nf)):
	if(nf[i]==2):
		vet[0]= vet[0] + 1
	elif( nf[i]==3):
		vet[1]= vet[1] + 1
	elif(nf[i]==4):
		vet[2]= vet[2] + 1
	elif(nf[i]==5):
		vet[3]= vet[3] + 1
	elif(nf[i]==6):
		vet[4]= vet[4] + 1
	elif(nf[i]==7):
		vet[5]= vet[5] + 1
for i in range(size(vet)):
	vet[i]=((vet[i])/sum(vet))*100
print(vet)
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 17:50:31) 
-- CODE:
from numpy import * 

nf= array(eval(input('numero de faltas:')))
vet= zeros(6, dtype=int)

for i in range(size(nf)):
	if(nf[i]==2):
		vet[0]= vet[0] + 1
	elif( nf[i]==3):
		vet[1]= vet[1] + 1
	elif(nf[i]==4):
		vet[2]= vet[2] + 1
	elif(nf[i]==5):
		vet[3]= vet[3] + 1
	elif(nf[i]==6):
		vet[4]= vet[4] + 1
	elif(nf[i]==7):
		vet[5]= vet[5] + 1
total = sum(vet)		
for i in range(size(vet)):
	
	vet[i]=((vet[i])/total)*100
print(vet)
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 17:50:49) 
-- CODE:
from numpy import * 

nf= array(eval(input('numero de faltas:')))
vet= zeros(6, dtype=int)

for i in range(size(nf)):
	if(nf[i]==2):
		vet[0]= vet[0] + 1
	elif( nf[i]==3):
		vet[1]= vet[1] + 1
	elif(nf[i]==4):
		vet[2]= vet[2] + 1
	elif(nf[i]==5):
		vet[3]= vet[3] + 1
	elif(nf[i]==6):
		vet[4]= vet[4] + 1
	elif(nf[i]==7):
		vet[5]= vet[5] + 1
total = sum(vet)		
for i in range(size(vet)):
	
	vet[i]=((vet[i])/total)*100
print(vet)
	
	
-- EXECUTION TIME:
1.27412
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[18  0  0 18 25 37]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[ 4  8 16 20 20 32]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[15  7 23  7 15 30]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 17:51:05) 
-- CODE:
from numpy import * 

nf= array(eval(input('numero de faltas:')))
vet= zeros(6, dtype=int)

for i in range(size(nf)):
	if(nf[i]==2):
		vet[0]= vet[0] + 1
	elif( nf[i]==3):
		vet[1]= vet[1] + 1
	elif(nf[i]==4):
		vet[2]= vet[2] + 1
	elif(nf[i]==5):
		vet[3]= vet[3] + 1
	elif(nf[i]==6):
		vet[4]= vet[4] + 1
	elif(nf[i]==7):
		vet[5]= vet[5] + 1
total = sum(vet)		
for i in range(size(vet)):
	
	vet[i]=((vet[i])/total)*100
print(round(1, vet))
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 17:51:58) 
-- CODE:
from numpy import * 

nf= array(eval(input('numero de faltas:')))
vet= zeros(6, dtype=int)

for i in range(size(nf)):
	if(nf[i]==2):
		vet[0]= vet[0] + 1
	elif( nf[i]==3):
		vet[1]= vet[1] + 1
	elif(nf[i]==4):
		vet[2]= vet[2] + 1
	elif(nf[i]==5):
		vet[3]= vet[3] + 1
	elif(nf[i]==6):
		vet[4]= vet[4] + 1
	elif(nf[i]==7):
		vet[5]= vet[5] + 1
total = sum(vet)		
for i in range(size(vet)):
	
	vet[i]=((vet[i])/total)*100
print(round(vet, 1))
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 17:52:29) 
-- CODE:
from numpy import * 

nf= array(eval(input('numero de faltas:')))
vet= zeros(6, dtype=int)

for i in range(size(nf)):
	if(nf[i]==2):
		vet[0]= vet[0] + 1
	elif( nf[i]==3):
		vet[1]= vet[1] + 1
	elif(nf[i]==4):
		vet[2]= vet[2] + 1
	elif(nf[i]==5):
		vet[3]= vet[3] + 1
	elif(nf[i]==6):
		vet[4]= vet[4] + 1
	elif(nf[i]==7):
		vet[5]= vet[5] + 1
from math import *
		total = sum(vet)		
for i in range(size(vet)):
	
	vet[i]=((vet[i])/total)*100
print(round(vet, 1))
	
	
-- ERROR:
File "XXXX", line 20
    total = sum(vet)		
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 17:52:36) 
-- CODE:
from numpy import * 

nf= array(eval(input('numero de faltas:')))
vet= zeros(6, dtype=int)

for i in range(size(nf)):
	if(nf[i]==2):
		vet[0]= vet[0] + 1
	elif( nf[i]==3):
		vet[1]= vet[1] + 1
	elif(nf[i]==4):
		vet[2]= vet[2] + 1
	elif(nf[i]==5):
		vet[3]= vet[3] + 1
	elif(nf[i]==6):
		vet[4]= vet[4] + 1
	elif(nf[i]==7):
		vet[5]= vet[5] + 1
from math import *
total = sum(vet)		
for i in range(size(vet)):
	
	vet[i]=((vet[i])/total)*100
print(round(vet, 1))
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 17:54:38) 
-- CODE:
from numpy import * 

nf= array(eval(input('numero de faltas:')))
vet= zeros(6, dtype=int)

for i in range(size(nf)):
	if(nf[i]==2):
		vet[0]= vet[0] + 1
	elif( nf[i]==3):
		vet[1]= vet[1] + 1
	elif(nf[i]==4):
		vet[2]= vet[2] + 1
	elif(nf[i]==5):
		vet[3]= vet[3] + 1
	elif(nf[i]==6):
		vet[4]= vet[4] + 1
	elif(nf[i]==7):
		vet[5]= vet[5] + 1

total = sum(vet)		
for i in range(size(vet)):
	
	vet[i]=((vet[i])/total)*100
print(round(vet[i], 1))
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 17:55:31) 
-- CODE:
from numpy import * 

nf= array(eval(input('numero de faltas:')))
vet= zeros(6, dtype=int)

for i in range(size(nf)):
	if(nf[i]==2):
		vet[0]= vet[0] + 1
	elif( nf[i]==3):
		vet[1]= vet[1] + 1
	elif(nf[i]==4):
		vet[2]= vet[2] + 1
	elif(nf[i]==5):
		vet[3]= vet[3] + 1
	elif(nf[i]==6):
		vet[4]= vet[4] + 1
	elif(nf[i]==7):
		vet[5]= vet[5] + 1

total = sum(vet)		
for i in range(size(vet)):
	
	vet[i]=round((((vet[i])/total)*100), 1)
print(vet)
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 17:55:43) 
-- CODE:
from numpy import * 

nf= array(eval(input('numero de faltas:')))
vet= zeros(6, dtype=int)

for i in range(size(nf)):
	if(nf[i]==2):
		vet[0]= vet[0] + 1
	elif( nf[i]==3):
		vet[1]= vet[1] + 1
	elif(nf[i]==4):
		vet[2]= vet[2] + 1
	elif(nf[i]==5):
		vet[3]= vet[3] + 1
	elif(nf[i]==6):
		vet[4]= vet[4] + 1
	elif(nf[i]==7):
		vet[5]= vet[5] + 1

total = sum(vet)		
for i in range(size(vet)):
	
	vet[i]=round((((vet[i])/total)*100), 1)
print(vet)
	
	
-- EXECUTION TIME:
1.20709
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[18  0  0 18 25 37]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[ 4  8 16 20 20 32]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[15  7 23  7 15 30]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 17:55:50) 
-- CODE:
from numpy import * 

nf= array(eval(input('numero de faltas:')))
vet= zeros(6, dtype=int)

for i in range(size(nf)):
	if(nf[i]==2):
		vet[0]= vet[0] + 1
	elif( nf[i]==3):
		vet[1]= vet[1] + 1
	elif(nf[i]==4):
		vet[2]= vet[2] + 1
	elif(nf[i]==5):
		vet[3]= vet[3] + 1
	elif(nf[i]==6):
		vet[4]= vet[4] + 1
	elif(nf[i]==7):
		vet[5]= vet[5] + 1

total = sum(vet)		
for i in range(size(vet)):
	
	vet[i]=round((((vet[i])/total)*100), 1)
print(vet)
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 17:58:01) 
-- CODE:
from numpy import * 

nf= array(eval(input('numero de faltas:')))
vet= zeros(6, dtype=int)

for i in range(size(nf)):
	if(nf[i]==2):
		vet[0]= vet[0] + 1
	elif( nf[i]==3):
		vet[1]= vet[1] + 1
	elif(nf[i]==4):
		vet[2]= vet[2] + 1
	elif(nf[i]==5):
		vet[3]= vet[3] + 1
	elif(nf[i]==6):
		vet[4]= vet[4] + 1
	elif(nf[i]==7):
		vet[5]= vet[5] + 1

total = sum(vet)		
for i in range(size(vet)):
	
	vet[i]=((vet[i])/total)*100
print(arround(vet, 1))
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 17:58:11) 
-- CODE:
from numpy import * 

nf= array(eval(input('numero de faltas:')))
vet= zeros(6, dtype=int)

for i in range(size(nf)):
	if(nf[i]==2):
		vet[0]= vet[0] + 1
	elif( nf[i]==3):
		vet[1]= vet[1] + 1
	elif(nf[i]==4):
		vet[2]= vet[2] + 1
	elif(nf[i]==5):
		vet[3]= vet[3] + 1
	elif(nf[i]==6):
		vet[4]= vet[4] + 1
	elif(nf[i]==7):
		vet[5]= vet[5] + 1

total = sum(vet)		
for i in range(size(vet)):
	
	vet[i]=((vet[i])/total)*100
print(around(vet, 1))
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 17:58:40) 
-- CODE:
from numpy import * 

nf= array(eval(input('numero de faltas:')))
vet= zeros(6, dtype=int)

for i in range(size(nf)):
	if(nf[i]==2):
		vet[0]= vet[0] + 1
	elif( nf[i]==3):
		vet[1]= vet[1] + 1
	elif(nf[i]==4):
		vet[2]= vet[2] + 1
	elif(nf[i]==5):
		vet[3]= vet[3] + 1
	elif(nf[i]==6):
		vet[4]= vet[4] + 1
	elif(nf[i]==7):
		vet[5]= vet[5] + 1

total = sum(vet)		
for i in range(size(vet)):
	
	vet[i]=((vet[i])/total)*100
print(around(vet, 1))
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 18:04:19) 
-- CODE:
from numpy import * 

nf= array(eval(input('numero de faltas:')))
vet= zeros(6, dtype=int)

for i in range(size(nf)):
	if(nf[i]==2):
		vet[0]= vet[0] + 1
	elif( nf[i]==3):
		vet[1]= vet[1] + 1
	elif(nf[i]==4):
		vet[2]= vet[2] + 1
	elif(nf[i]==5):
		vet[3]= vet[3] + 1
	elif(nf[i]==6):
		vet[4]= vet[4] + 1
	elif(nf[i]==7):
		vet[5]= vet[5] + 1

total = sum(vet)		
for i in range(size(vet)):
	
	vet[i]=((vet[i])/total)*100
print(around(vet, 1))
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 18:05:27) 
-- CODE:
from numpy import * 

nf= array(eval(input('numero de faltas:')))
vet= zeros(6, dtype=int)

for i in range(size(nf)):
	if(nf[i]==2):
		vet[0]= vet[0] + 1
	elif( nf[i]==3):
		vet[1]= vet[1] + 1
	elif(nf[i]==4):
		vet[2]= vet[2] + 1
	elif(nf[i]==5):
		vet[3]= vet[3] + 1
	elif(nf[i]==6):
		vet[4]= vet[4] + 1
	elif(nf[i]==7):
		vet[5]= vet[5] + 1

total = sum(vet)		
for i in range(size(vet)):
	
	vet[i]=(round((vet[i])/total)*100, 1)
print(vet)
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 18:05:37) 
-- CODE:
from numpy import * 

nf= array(eval(input('numero de faltas:')))
vet= zeros(6, dtype=int)

for i in range(size(nf)):
	if(nf[i]==2):
		vet[0]= vet[0] + 1
	elif( nf[i]==3):
		vet[1]= vet[1] + 1
	elif(nf[i]==4):
		vet[2]= vet[2] + 1
	elif(nf[i]==5):
		vet[3]= vet[3] + 1
	elif(nf[i]==6):
		vet[4]= vet[4] + 1
	elif(nf[i]==7):
		vet[5]= vet[5] + 1

total = sum(vet)		
for i in range(size(vet)):
	
	vet[i]=round((vet[i])/total)*100, 1
print(vet)
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 18:05:57) 
-- CODE:
from numpy import * 

nf= array(eval(input('numero de faltas:')))
vet= zeros(6, dtype=int)

for i in range(size(nf)):
	if(nf[i]==2):
		vet[0]= vet[0] + 1
	elif( nf[i]==3):
		vet[1]= vet[1] + 1
	elif(nf[i]==4):
		vet[2]= vet[2] + 1
	elif(nf[i]==5):
		vet[3]= vet[3] + 1
	elif(nf[i]==6):
		vet[4]= vet[4] + 1
	elif(nf[i]==7):
		vet[5]= vet[5] + 1

total = sum(vet)		
for i in range(size(vet)):
	
	vet[i]=round(((vet[i])/total)*100, 1)
print(vet)
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 18:06:37) 
-- CODE:
from numpy import * 

nf= array(eval(input('numero de faltas:')))
vet= zeros(6, dtype=int)

for i in range(size(nf)):
	if(nf[i]==2):
		vet[0]= vet[0] + 1
	elif( nf[i]==3):
		vet[1]= vet[1] + 1
	elif(nf[i]==4):
		vet[2]= vet[2] + 1
	elif(nf[i]==5):
		vet[3]= vet[3] + 1
	elif(nf[i]==6):
		vet[4]= vet[4] + 1
	elif(nf[i]==7):
		vet[5]= vet[5] + 1

total = sum(vet)		
for i in range(size(vet)):
	
	vet[i]=round(vet[i]/total*100, 1)
print(vet)
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 18:07:04) 
-- CODE:
from numpy import * 

nf= array(eval(input('numero de faltas:')))
vet= zeros(6, dtype=int)

for i in range(size(nf)):
	if(nf[i]==2):
		vet[0]= vet[0] + 1
	elif( nf[i]==3):
		vet[1]= vet[1] + 1
	elif(nf[i]==4):
		vet[2]= vet[2] + 1
	elif(nf[i]==5):
		vet[3]= vet[3] + 1
	elif(nf[i]==6):
		vet[4]= vet[4] + 1
	elif(nf[i]==7):
		vet[5]= vet[5] + 1

total = sum(vet)		
for i in range(size(vet)):
	
	vet=round(vet[i]/total*100, 1)
print(vet)
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 18:07:30) 
-- CODE:
from numpy import * 

nf= array(eval(input('numero de faltas:')))
vet= zeros(6, dtype=int)

for i in range(size(nf)):
	if(nf[i]==2):
		vet[0]= vet[0] + 1
	elif( nf[i]==3):
		vet[1]= vet[1] + 1
	elif(nf[i]==4):
		vet[2]= vet[2] + 1
	elif(nf[i]==5):
		vet[3]= vet[3] + 1
	elif(nf[i]==6):
		vet[4]= vet[4] + 1
	elif(nf[i]==7):
		vet[5]= vet[5] + 1

total = sum(vet)		
for i in range(size(vet)):
	
	vet=round((vet[i]/total)*100, 1)
print(vet)
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 18:07:45) 
-- CODE:
from numpy import * 

nf= array(eval(input('numero de faltas:')))
vet= zeros(6, dtype=int)

for i in range(size(nf)):
	if(nf[i]==2):
		vet[0]= vet[0] + 1
	elif( nf[i]==3):
		vet[1]= vet[1] + 1
	elif(nf[i]==4):
		vet[2]= vet[2] + 1
	elif(nf[i]==5):
		vet[3]= vet[3] + 1
	elif(nf[i]==6):
		vet[4]= vet[4] + 1
	elif(nf[i]==7):
		vet[5]= vet[5] + 1

total = sum(vet)		
for i in range(size(vet)):
	
	vet[i]=round((vet[i]/total)*100, 1)
print(vet)
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 18:07:56) 
-- CODE:
from numpy import * 

nf= array(eval(input('numero de faltas:')))
vet= zeros(6, dtype=int)

for i in range(size(nf)):
	if(nf[i]==2):
		vet[0]= vet[0] + 1
	elif( nf[i]==3):
		vet[1]= vet[1] + 1
	elif(nf[i]==4):
		vet[2]= vet[2] + 1
	elif(nf[i]==5):
		vet[3]= vet[3] + 1
	elif(nf[i]==6):
		vet[4]= vet[4] + 1
	elif(nf[i]==7):
		vet[5]= vet[5] + 1

total = sum(vet)		
for i in range(size(vet)):
	
	vet[i]=round((vet[i]/total)*100, 1)
print(vet)
	
	
-- EXECUTION TIME:
1.08458
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[18  0  0 18 25 37]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[ 4  8 16 20 20 32]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[15  7 23  7 15 30]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 18:09:40) 
-- CODE:
from numpy import * 

nf= array(eval(input('numero de faltas:')))
vet= zeros(6, dtype=int)

for i in range(size(nf)):
	if(nf[i]==2):
		vet[0]= vet[0] + 1
	elif( nf[i]==3):
		vet[1]= vet[1] + 1
	elif(nf[i]==4):
		vet[2]= vet[2] + 1
	elif(nf[i]==5):
		vet[3]= vet[3] + 1
	elif(nf[i]==6):
		vet[4]= vet[4] + 1
	elif(nf[i]==7):
		vet[5]= vet[5] + 1

total = sum(vet)		
for i in range(size(vet)):
	
	vet[i]=round(((vet[i]/total)*100), 1)
print(vet)
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 18:10:21) 
-- CODE:
from numpy import * 

nf= array(eval(input('numero de faltas:')))
vet= zeros(6, dtype=float)

for i in range(size(nf)):
	if(nf[i]==2):
		vet[0]= vet[0] + 1
	elif( nf[i]==3):
		vet[1]= vet[1] + 1
	elif(nf[i]==4):
		vet[2]= vet[2] + 1
	elif(nf[i]==5):
		vet[3]= vet[3] + 1
	elif(nf[i]==6):
		vet[4]= vet[4] + 1
	elif(nf[i]==7):
		vet[5]= vet[5] + 1

total = sum(vet)		
for i in range(size(vet)):
	
	vet[i]=round(((vet[i]/total)*100), 1)
print(vet)
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 18:10:56) 
-- CODE:
from numpy import * 

nf= array(eval(input('numero de faltas:')))
vet= zeros(6, dtype=float)

for i in range(size(nf)):
	if(nf[i]==2):
		vet[0]= vet[0] + 1
	elif( nf[i]==3):
		vet[1]= vet[1] + 1
	elif(nf[i]==4):
		vet[2]= vet[2] + 1
	elif(nf[i]==5):
		vet[3]= vet[3] + 1
	elif(nf[i]==6):
		vet[4]= vet[4] + 1
	elif(nf[i]==7):
		vet[5]= vet[5] + 1

total = sum(vet)		
for i in range(size(vet)):
	
	vet[i]=round(((vet[i]/total)*100), 1)
print(vet)
	
	
-- EXECUTION TIME:
0.878445
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[18.8  0.   0.  18.8 25.  37.5]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[ 4.  8. 16. 20. 20. 32.]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[15.4  7.7 23.1  7.7 15.4 30.8]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 14:08:49) 
-- CODE:
from numpy import * 

nf= array(eval(input('numero de faltas:')))
vet= zeros(6, dtype=float)

for i in range(size(nf)):
	if(nf[i]==2):
		vet[0]= vet[0] + 1
	elif( nf[i]==3):
		vet[1]= vet[1] + 1
	elif(nf[i]==4):
		vet[2]= vet[2] + 1
	elif(nf[i]==5):
		vet[3]= vet[3] + 1
	elif(nf[i]==6):
		vet[4]= vet[4] + 1
	elif(nf[i]==7):
		vet[5]= vet[5] + 1

total = sum(vet)		
for i in range(size(vet)):
	
	vet[i]=round(((vet[i]/total)*100), 1)
print(vet)
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
