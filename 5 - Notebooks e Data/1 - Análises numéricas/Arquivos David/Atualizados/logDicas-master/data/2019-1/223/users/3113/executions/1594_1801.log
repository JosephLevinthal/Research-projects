== TEST (2019-03-26 17:01:24) 
-- CODE:
a="abra"
p=input("")
s=input()
b=(a+p)*4
print
-- OUTPUT:
16.7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:01:32) 
-- CODE:
a="abra"
p=input("")
s=input()
b=(a+p)*4
print(b)
-- OUTPUT:
abralivroabralivroabralivroabralivro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:01:44) 
-- CODE:
a="abra"
p=input("")
s=input()
b=(a+p)*4
print(b)
-- EXECUTION TIME:
0.199228
-- TEST CASE 1:
---- input:
livro
8
---- correct output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
---- user output:
abralivroabralivroabralivroabralivro
-- TEST CASE 2:
---- input:
carro
2
---- correct output:
Abra carro Abra carro
---- user output:
abracarroabracarroabracarroabracarro
-- TEST CASE 3:
---- input:
caixa
1
---- correct output:
Abra caixa
---- user output:
abracaixaabracaixaabracaixaabracaixa
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:02:06) 
-- CODE:
a="abra"
p=input("")
s=input()
b=(a+p)*s
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    b=(a+p)*s
TypeError: can't multiply sequence by non-int of type 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:02:17) 
-- CODE:
a="abra"
p=input("")
s=input("")
b=(a+p)*s
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    b=(a+p)*s
TypeError: can't multiply sequence by non-int of type 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:02:48) 
-- CODE:
a="abra"
p=input("")
b=(a+p)
print(b)
-- OUTPUT:
abralivro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:03:13) 
-- CODE:
a="abra"
p=input("")
b=(a)+(p)
print(b)
-- OUTPUT:
abralivro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:03:31) 
-- CODE:
a="abra"
p=input("")
b=(a,+p)
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    b=(a,+p)
TypeError: bad operand type for unary +: 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:04:23) 
-- CODE:
a="Abra"
p=input("")
s=int(input())
b=(a+p)
print(b)
-- OUTPUT:
Abralivro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:04:28) 
-- CODE:
a="Abra"
p=input("")
s=int(input())
b=(a+p)*s
print(b)
-- OUTPUT:
AbralivroAbralivroAbralivroAbralivroAbralivroAbralivroAbralivroAbralivro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:04:42) 
-- CODE:
a="Abra"
p=input("")
s=int(input())
b=(a+p)
r=b*s
print(b)
-- OUTPUT:
Abralivro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:04:56) 
-- CODE:
a="Abra"
p=input("")
s=int(input())
b=(a+p)
r=b*s
print(r
-- ERROR:
File "XXXX", line 7
    
           ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:05:03) 
-- CODE:
a="Abra"
p=input("")
s=int(input())
b=(a+p)
r=b*s
print(r)
-- OUTPUT:
AbralivroAbralivroAbralivroAbralivroAbralivroAbralivroAbralivroAbralivro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:05:09) 
-- CODE:
a="Abra"
p=input("")
s=int(input())
b=(a+p)
r=b*s
print(r)
-- EXECUTION TIME:
0.246117
-- TEST CASE 1:
---- input:
livro
8
---- correct output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
---- user output:
AbralivroAbralivroAbralivroAbralivroAbralivroAbralivroAbralivroAbralivro
-- TEST CASE 2:
---- input:
carro
2
---- correct output:
Abra carro Abra carro
---- user output:
AbracarroAbracarro
-- TEST CASE 3:
---- input:
caixa
1
---- correct output:
Abra caixa
---- user output:
Abracaixa
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:05:59) 
-- CODE:

p=input("")
a="Abra",p
s=int(input())
r=b*s
print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    r=b*s
NameError: name 'b' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:06:12) 
-- CODE:

p=input("")
a="Abra",p
s=int(input())
r=a*s
print(r)
-- OUTPUT:
('Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro')
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:06:19) 
-- CODE:

p=input("")
a="Abra",p
s=int(input())
r=a*s
print(r)
-- OUTPUT:
('Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro')
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:06:20) 
-- CODE:

p=input("")
a="Abra",p
s=int(input())
r=a*s
print(r)
-- EXECUTION TIME:
0.127885
-- TEST CASE 1:
---- input:
livro
8
---- correct output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
---- user output:
('Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro')
-- TEST CASE 2:
---- input:
carro
2
---- correct output:
Abra carro Abra carro
---- user output:
('Abra', 'carro', 'Abra', 'carro')
-- TEST CASE 3:
---- input:
caixa
1
---- correct output:
Abra caixa
---- user output:
('Abra', 'caixa')
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:06:21) 
-- CODE:

p=input("")
a="Abra",p
s=int(input())
r=a*s
print(r)
-- EXECUTION TIME:
0.204257
-- TEST CASE 1:
---- input:
livro
8
---- correct output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
---- user output:
('Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro')
-- TEST CASE 2:
---- input:
carro
2
---- correct output:
Abra carro Abra carro
---- user output:
('Abra', 'carro', 'Abra', 'carro')
-- TEST CASE 3:
---- input:
caixa
1
---- correct output:
Abra caixa
---- user output:
('Abra', 'caixa')
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:06:21) 
-- CODE:

p=input("")
a="Abra",p
s=int(input())
r=a*s
print(r)
-- OUTPUT:
('Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro')
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:08:24) 
-- CODE:

p=input(,"")
a="Abra"
s=int(input())

print((a+p)*s)
-- ERROR:
File "XXXX", line 2
    p=input(,"")
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:08:29) 
-- CODE:

p=input("")
a="Abra"
s=int(input())

print((a+p)*s)
-- OUTPUT:
AbralivroAbralivroAbralivroAbralivroAbralivroAbralivroAbralivroAbralivro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:09:08) 
-- CODE:

p=input("")
a="Abra"
s=int(input())
f=a,p
print(f*s)
-- OUTPUT:
('Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro')
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:15:57) 
-- CODE:
var1="Abra"
var2=input("")
var3=var1+var2
print(var3)
-- OUTPUT:
Abralivro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:22:06) 
-- CODE:
var1="Abra"
var2=input("")
var3=var1+var2
print("var3",var3)
-- OUTPUT:
var3 Abralivro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:24:42) 
-- CODE:
var1="Abra"
var2=input("")
var3=var1+"var2"
print(var3)
-- OUTPUT:
Abravar2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:24:50) 
-- CODE:
var1="Abra"
var2=input("")
var3=var1+"var2"
print(var3)
-- OUTPUT:
Abravar2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:24:55) 
-- CODE:
var1="Abra"
var2=input("")
var3=var1+var2
print(var3)
-- OUTPUT:
Abralivro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:25:28) 
-- CODE:
var2=input("")
var3="abra" + var2
print(var3)
-- OUTPUT:
abralivro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:25:41) 
-- CODE:
var2=input("")
var3= "abra" + var2
print(var3)
-- OUTPUT:
abralivro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:28:02) 
-- CODE:
var1=int(input(""))
var2=input("")
var3= "abra" + " " +var2
var4=var3*var1
print(var4)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    var1=int(input(""))
ValueError: invalid literal for int() with base 10: 'livro'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:28:24) 
-- CODE:
var2=input("")
var1=int(input(""))
var3= "abra" + " " +var2
var4=var3*var1
print(var4)
-- OUTPUT:
abra livroabra livroabra livroabra livroabra livroabra livroabra livroabra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:28:45) 
-- CODE:
var2=input("")
var1=int(input(""))
var3= "abra" + " " +var2
var4=var3*" " * var1
print(var4)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    var4=var3*" " * var1
TypeError: can't multiply sequence by non-int of type 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:29:12) 
-- CODE:
var2=input("")
var1=int(input(""))
var3= "abra" + " " +var2
print(var3*var2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(var3*var2)
TypeError: can't multiply sequence by non-int of type 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:29:26) 
-- CODE:
var2=input("")
var1=int(input(""))
var3= "abra" + " " +var2
print(var3*var1)
-- OUTPUT:
abra livroabra livroabra livroabra livroabra livroabra livroabra livroabra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:30:59) 
-- CODE:
var2=input("")
var1=int(input(""))
var3= "abra" + " " +var2
print(var3*" "*var2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(var3*" "*var2)
TypeError: can't multiply sequence by non-int of type 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:31:12) 
-- CODE:
var2=input("")
var1=int(input(""))
var3= "abra" + " " +var2
print(var3*" "*var1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(var3*" "*var1)
TypeError: can't multiply sequence by non-int of type 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:32:37) 
-- CODE:
var1=input("  ")
var2=int(input(""))
var3= "abra" + " " +var1
var4=
print(var3)
-- ERROR:
File "XXXX", line 4
    var4=
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:32:48) 
-- CODE:
var1=input("  ")
var2=int(input(""))
var3= "abra" + " " +var1

print(var3*var1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(var3*var1)
TypeError: can't multiply sequence by non-int of type 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:33:05) 
-- CODE:
var1=input("")
var2=int(input("  "))
var3= "abra" + " " +var1

print(var3*var2)
-- OUTPUT:
abra livroabra livroabra livroabra livroabra livroabra livroabra livroabra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:33:10) 
-- CODE:
var1=input("")
var2=int(input("  "))
var3= "abra" + " " +var1

print(var3*var2)
-- EXECUTION TIME:
0.195447
-- TEST CASE 1:
---- input:
livro
8
---- correct output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
---- user output:
abra livroabra livroabra livroabra livroabra livroabra livroabra livroabra livro
-- TEST CASE 2:
---- input:
carro
2
---- correct output:
Abra carro Abra carro
---- user output:
abra carroabra carro
-- TEST CASE 3:
---- input:
caixa
1
---- correct output:
Abra caixa
---- user output:
abra caixa
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:33:19) 
-- CODE:
var1=input("")
var2=int(input("  "))
var3= "abra" + " " +var1

print(var3*" "var2)
-- ERROR:
File "XXXX", line 5
    print(var3*" "var2)
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:33:26) 
-- CODE:
var1=input("")
var2=int(input("  "))
var3= "abra" + " " +var1

print(var3" "*var2)
-- ERROR:
File "XXXX", line 5
    print(var3" "*var2)
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:33:31) 
-- CODE:
var1=input("")
var2=int(input("  "))
var3= "abra" + " " +var1

print(var3*" "*var2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(var3*" "*var2)
TypeError: can't multiply sequence by non-int of type 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:33:51) 
-- CODE:
var1=input("")
var2=int(input("  "))
var3= "abra" + " " +var1
var4=var3*" "*var2
print(var4)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    var4=var3*" "*var2
TypeError: can't multiply sequence by non-int of type 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:34:00) 
-- CODE:
var1=input("")
var2=int(input(""))
var3= "abra" + " " +var1
var4=var3*" "*var2
print(var4)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    var4=var3*" "*var2
TypeError: can't multiply sequence by non-int of type 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 17:58:45) 
-- CODE:
var1=input("")
var2=int(input(""))
var3= "Abra" + " " +var1
var4=var3*var2
print(var4)
-- OUTPUT:
Abra livroAbra livroAbra livroAbra livroAbra livroAbra livroAbra livroAbra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 17:58:48) 
-- CODE:
var1=input("")
var2=int(input(""))
var3= "Abra" + " " +var1
var4=var3*var2
print(var4)
-- OUTPUT:
Abra livroAbra livroAbra livroAbra livroAbra livroAbra livroAbra livroAbra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 17:59:29) 
-- CODE:
var1=input("")
var2=int(input(""))
var3= "Abra" + " " +var1 +" "
var4=var3*var2
print(var4)
-- OUTPUT:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 17:59:38) 
-- CODE:
var1=input("")
var2=int(input(""))
var3= "Abra" + " " +var1 +" "
var4=var3*var2
print(var4)
-- EXECUTION TIME:
0.220121
-- TEST CASE 1:
---- input:
livro
8
---- correct output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
---- user output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
-- TEST CASE 2:
---- input:
carro
2
---- correct output:
Abra carro Abra carro
---- user output:
Abra carro Abra carro
-- TEST CASE 3:
---- input:
caixa
1
---- correct output:
Abra caixa
---- user output:
Abra caixa
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
