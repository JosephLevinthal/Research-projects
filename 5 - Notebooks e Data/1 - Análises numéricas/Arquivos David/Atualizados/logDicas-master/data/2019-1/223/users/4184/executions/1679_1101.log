== TEST (2019-04-30 16:08:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("odeio payton: "))
y=input("odeio codebench: ")
print("Entradas:" , x,",",y )

if (x==500) or (x>500) and (y==0,44) or (y==0,65):
	print("valor total: Residencial")
elif (x==100) or (x>100) and (y==0,55) or (y==0,60):
	print("valor total: Comercial")
elif (x==5000) or (x>5000) and (y==0,55) or (y==0,60):
	print("valor total: Industrial")
else:
	print("valor total: Invalidos")
	
-- OUTPUT:
Entradas: -56.0 , I
valor total: Residencial
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:10:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("odeio payton: "))
y=input("odeio codebench: ")
print("Entradas:" , x,"KWh", y,"tipo")

if (x==500) or (x>500) and (y==0,44) or (y==0,65):
	print("valor total: Residencial")
elif (x==100) or (x>100) and (y==0,55) or (y==0,60):
	print("valor total: Comercial")
elif (x==5000) or (x>5000) and (y==0,55) or (y==0,60):
	print("valor total: Industrial")
else:
	print("valor total: Invalidos")
	
-- OUTPUT:
Entradas: -56.0 KWh I tipo
valor total: Residencial
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:10:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("odeio payton: "))
y=input("odeio codebench: ")
print("Entradas:" , x,"KWh", y,"tipo")

if (x==500) or (x>500) and (y==0,44) or (y==0,65):
	print("valor total: Residencial")
elif (x==100) or (x>100) and (y==0,55) or (y==0,60):
	print("valor total: Comercial")
elif (x==5000) or (x>5000) and (y==0,55) or (y==0,60):
	print("valor total: Industrial")
else:
	print("valor total: Invalidos")
	
-- OUTPUT:
Entradas: -56.0 KWh I tipo
valor total: Residencial
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:12:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("odeio payton: "))
y=input("odeio codebench: ")
print("Entradas:" , x,"KWh e tipo" , y",")

if (x==500) or (x>500) and (y==0,44) or (y==0,65):
	print("valor total: Residencial")
elif (x==100) or (x>100) and (y==0,55) or (y==0,60):
	print("valor total: Comercial")
elif (x==5000) or (x>5000) and (y==0,55) or (y==0,60):
	print("valor total: Industrial")
else:
	print("valor total: Invalidos")
	
-- ERROR:
File "XXXX", line 6
    print("Entradas:" , x,"KWh e tipo" , y",")
                                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:12:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("odeio payton: "))
y=input("odeio codebench: ")
print("Entradas:" , x,"KWh e tipo" , y)

if (x==500) or (x>500) and (y==0,44) or (y==0,65):
	print("valor total: Residencial")
elif (x==100) or (x>100) and (y==0,55) or (y==0,60):
	print("valor total: Comercial")
elif (x==5000) or (x>5000) and (y==0,55) or (y==0,60):
	print("valor total: Industrial")
else:
	print("valor total: Invalidos")
	
-- OUTPUT:
Entradas: -56.0 KWh e tipo I
valor total: Residencial
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:14:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("odeio payton: "))
y=input("odeio codebench: ")
print("Entradas:" , x,"KWh e tipo" , y)

if (x==500) or (x>500) and (y==0,44) or (y==0,65):
	print("valor total:" ) (x*y)
elif (x==100) or (x>100) and (y==0,55) or (y==0,60):
	print("valor total: Comercial")
elif (x==5000) or (x>5000) and (y==0,55) or (y==0,60):
	print("valor total: Industrial")
else:
	print("valor total: Invalidos")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print("valor total:" ) (x*y)
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:23:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("odeio payton: "))
y=input("odeio codebench: ")
print("Entradas:" , x,"KWh e tipo" , y)

if (x==500) or (x>500) and (y==0,44) or (y==0,65):
	print("valor total:" )
elif (x==100) or (x>100) and (y==0,55) or (y==0,60):
	print("valor total: Comercial")
elif (x==5000) or (x>5000) and (y==0,55) or (y==0,60):
	print("valor total: Industrial")
else:
	print("valor total: Invalidos")
	
-- OUTPUT:
Entradas: -56.0 KWh e tipo I
valor total:
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
