== TEST (2019-04-25 10:59:47) 
-- CODE:
x = float(input("Informe o valor de x: "))
a = float(input("Informe o valor de a: "))
b = float(input("Informe o valor de b: "))

if (x >= a and x <= b):
	print ("x pertence ao intervalo a, b")
elif (b <= a):
	print ("Entradas a e b invalidas")
else:
	print ("x nao pertence ao intervalo a, b")


-- OUTPUT:
x nao pertence ao intervalo a, b
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:59:59) 
-- CODE:
x = float(input("Informe o valor de x: "))
a = float(input("Informe o valor de a: "))
b = float(input("Informe o valor de b: "))

if (x >= a and x <= b):
	print ("x pertence ao intervalo a, b")
elif (b <= a):
	print ("Entradas a e b invalidas")
else:
	print ("x nao pertence ao intervalo a, b")


-- EXECUTION TIME:
0.219536
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
x nao pertence ao intervalo a, b
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas a e b invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
x pertence ao intervalo a, b
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:43:24) 
-- CODE:
x = float(input("digite um valor para x:"))
a = float(input("digite um valor para a:"))
b = float(input("digite un valor para b:"))

if( x >= a and x <= b):
	print(x,"pertence ao intervalo",a,",",b)
elif(x < a or x):
	print(x,"nao pertence ao intervalo",a,",",b)
print("Entradas",a,"e",b,"invalidas")
-- EXECUTION TIME:
0.134837
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
Entradas 3.0 e 4.0 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
Entradas 1.1 e 22.2 invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:44:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite um valor para x:"))
a = float(input("digite um valor para a:"))
b = float(input("digite un valor para b:"))

if( x >= a and x <= b):
	print(x,"pertence ao intervalo",a,",",b)
elif(x < a or x):
	print(x,"nao pertence ao intervalo",a,",",b)
print("Entradas",a,"e",b,"invalidas")
-- EXECUTION TIME:
0.191718
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
Entradas 3.0 e 4.0 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
Entradas 1.1 e 22.2 invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:45:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite um valor para x:"))
a = float(input("digite um valor para a:"))
b = float(input("digite un valor para b:"))

if( x >= a and x <= b):
	print(x,"pertence ao intervalo",a,",",b)
elif(x < a or x):
	print(x,"nao pertence ao intervalo",a,",",b)
print("Entradas",a,"e",b,"invalidas")
-- EXECUTION TIME:
0.147208
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
Entradas 3.0 e 4.0 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
Entradas 1.1 e 22.2 invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:47:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite um valor para x:"))
a = float(input("digite um valor para a:"))
b = float(input("digite un valor para b:"))

if( x >= a and x <= b):
	print(x,"pertence ao intervalo",a,",",b)
elif(x < a or x):
	print(x,"nao pertence ao intervalo",a,",",b)
print("Entradas",a,"e",b,"invalidas")
-- EXECUTION TIME:
0.161841
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
digite um valor para x:digite um valor para a:digite un valor para b:2.0 nao pertence ao intervalo 3.0 , 4.0
Entradas 3.0 e 4.0 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
digite um valor para x:digite um valor para a:digite un valor para b:5.5 nao pertence ao intervalo 6.5 , 3.5
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
digite um valor para x:digite um valor para a:digite un valor para b:6.5 pertence ao intervalo 1.1 , 22.2
Entradas 1.1 e 22.2 invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:48:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite um valor para x:"))
a = float(input("digite um valor para a:"))
b = float(input("digite un valor para b:"))

if( x >= a and x <= b):
	print(x,"pertence ao intervalo",a,",",b)
elif(x < a or x):
	print(x,"nao pertence ao intervalo",a,",",b)
print("Entradas",a,"e",b,"invalidas")
-- EXECUTION TIME:
0.179565
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
Entradas 3.0 e 4.0 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
Entradas 1.1 e 22.2 invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:49:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite um valor para x:"))
a = float(input("digite um valor para a:"))
b = float(input("digite un valor para b:"))

if( x >= a and x <= b):
	print(x,"pertence ao intervalo",a,",",b)
elif(x < a or x):
	print(x,"nao pertence ao intervalo",a,",",b)
else:
print("Entradas",a,"e",b,"invalidas")
-- EXECUTION TIME:
0.196022
-- ERROR:
  File "/home/codebench/codes/1679/1103/main.py", line 13
    print("Entradas",a,"e",b,"invalidas")
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:23:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite um valor para x:"))
a = float(input("digite um valor para a:"))
b = float(input("digite un valor para b:"))

if( x >= a and x <= b):
	print(x, "pertence ao intervalo", a",", b)
elif(x < a or x):
	print(x, "nao pertence ao intervalo", a",", b)
else:
	print("Entradas", a, "e", b, "invalidas")
-- ERROR:
File "XXXX", line 9
    print(x, "pertence ao intervalo", a",", b)
                                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:24:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite um valor para x:"))
a = float(input("digite um valor para a:"))
b = float(input("digite un valor para b:"))

if( x >= a and x <= b):
	print(x, "pertence ao intervalo", a,",", b)
elif(x < a or x):
	print(x, "nao pertence ao intervalo", a",", b)
else:
	print("Entradas", a, "e", b, "invalidas")
-- ERROR:
File "XXXX", line 11
    print(x, "nao pertence ao intervalo", a",", b)
                                             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:24:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite um valor para x:"))
a = float(input("digite um valor para a:"))
b = float(input("digite un valor para b:"))

if( x >= a and x <= b):
	print(x, "pertence ao intervalo", a,",", b)
elif(x < a or x):
	print(x, "nao pertence ao intervalo", a,",", b)
else:
	print("Entradas", a, "e", b, "invalidas")
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:25:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite um valor para x:"))
a = float(input("digite um valor para a:"))
b = float(input("digite un valor para b:"))

if( x >= a and x <= b):
	print(x, "pertence ao intervalo", a,",", b)
elif(x < a or x):
	print(x, "nao pertence ao intervalo", a,",", b)
else:
	print("Entradas", a, "e", b, "invalidas")
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:26:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite um valor para x:"))
a = float(input("digite um valor para a:"))
b = float(input("digite un valor para b:"))

if( x >= a and x <= b):
	print(x, "pertence ao intervalo", a,",", b)
elif(x < a or x > b):
	print(x, "nao pertence ao intervalo", a,",", b)
else:
	print("Entradas", a, "e", b, "invalidas")
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 19:26:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite um valor para x:"))
a = float(input("digite um valor para a:"))
b = float(input("digite un valor para b:"))

if( x >= a and x <= b):
	print(x, "pertence ao intervalo", a,",", b)
elif(x < a or x > b):
	print(x, "nao pertence ao intervalo", a,",", b)
else:
	print("Entradas", a, "e", b, "invalidas")
-- EXECUTION TIME:
0.259222
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 19:32:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite um valor para x:"))
a = float(input("digite um valor para a:"))
b = float(input("digite un valor para b:"))

if(b <= a):
	print("Entradas",a,"e",b,"invalidas")
elif(x < a or x > b):
	print(x,"nao pertence ao intervalo",a,",",b)
elif( x >= a and x <= b):
	print(x,"pertence ao intervalo",a,",",b)

questão 9
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("digite a cordenada x:"))
y = float(input("digite a cordenada y:"))

if((x == 0) and (y == 0)):
	print("Origem")
elif((x == 0) and (y != 0)):
	print("Eixo Y")
elif((y == 0) and (x != 0)):
	print("Eixo X")
elif((y > 0) and (x > 0)):
	print("Q1")
elif((y > 0) and (x < 0)):
	print("Q2")
elif((y < 0) and (x < 0)):
	print("Q3")
elif((y < 0) and (x > 0)):
	print("Q4")
-- EXECUTION TIME:
0.210981
-- ERROR:
  File "/home/codebench/codes/1679/1103/main.py", line 15
    quest\xe3o 9
            ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 19:33:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite um valor para x:"))
a = float(input("digite um valor para a:"))
b = float(input("digite un valor para b:"))

if(b <= a):
	print("Entradas",a,"e",b,"invalidas")
elif(x < a or x > b):
	print(x,"nao pertence ao intervalo",a,",",b)
elif( x >= a and x <= b):
	print(x,"pertence ao intervalo",a,",",b)

-- EXECUTION TIME:
0.172795
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
