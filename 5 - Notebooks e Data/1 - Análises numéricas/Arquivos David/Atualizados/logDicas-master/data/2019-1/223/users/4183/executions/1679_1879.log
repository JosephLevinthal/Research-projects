== TEST (2019-04-25 23:14:04) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
E = float(input("Horas extras: "))
F = float(input("Horas de falta: "))
print(E, "extras e", F, "de falta")

H = he - (1/4) * hf
if (H > 400):
	G = 500
else:
	G = 100
print("R$", G)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    H = he - (1/4) * hf
NameError: name 'he' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 23:14:37) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
E = float(input("Horas extras: "))
F = float(input("Horas de falta: "))
H = he - (1/4) * hf

print(E, "extras e", F, "de falta")

if (H > 400):
	G = 500
else:
	G = 100
	
print("R$", G)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    H = he - (1/4) * hf
NameError: name 'he' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 23:15:01) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
E = float(input("Horas extras: "))
F = float(input("Horas de falta: "))
H = E - (1/4) * F

print(E, "extras e", F, "de falta")

if (H > 400):
	G = 500
else:
	G = 100
	
print("R$", G)
	
-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 23:15:12) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
E = float(input("Horas extras: "))
F = float(input("Horas de falta: "))
H = E - (1/4) * F

print(E, "extras e", F, "de falta")

if (H > 400):
	G = 500
else:
	G = 100
	
print("R$", G)
	
-- EXECUTION TIME:
0.124208
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 100
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 100
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 23:18:05) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
E = float(input("Horas extras: "))
F = float(input("Horas de falta: "))
H = E - (1/4) * F

print(E, "extras e", F, "de falta")

if (E <= 0 or H <= 0):
	print("Entradas invalidas")
elif (H > 400):
	G = 500
else:
	G = 100
	
print("R$", G)
	
-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 23:18:15) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
E = float(input("Horas extras: "))
F = float(input("Horas de falta: "))
H = E - (1/4) * F

print(E, "extras e", F, "de falta")

if (E <= 0 or H <= 0):
	print("Entradas invalidas")
elif (H > 400):
	G = 500
else:
	G = 100
	
print("R$", G)
	
-- EXECUTION TIME:
0.250442
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 100
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 100
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 23:18:51) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
E = float(input("Horas extras: "))
F = float(input("Horas de falta: "))
H = E - (1/4) * F

print(E, "extras e", F, "de falta")

if (E <= 0 or H <= 0):
	print("Entradas invalidas")
elif (H > 400):
	G = 500
else:
	G = 100
	
print("R$", round(G,2))
	
-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 23:19:02) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
E = float(input("Horas extras: "))
F = float(input("Horas de falta: "))
H = E - (1/4) * F

print(E, "extras e", F, "de falta")

if (E <= 0 or H <= 0):
	print("Entradas invalidas")
elif (H > 400):
	G = 500
else:
	G = 100
	
print("R$", round(G,2))
	
-- EXECUTION TIME:
0.129982
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 100
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 100
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 23:19:11) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
E = float(input("Horas extras: "))
F = float(input("Horas de falta: "))
H = E - (1/4) * F

print(E, "extras e", F, "de falta")

if (E <= 0 or H <= 0):
	print("Entradas invalidas")
elif (H > 400):
	G = 500
else:
	G = 100
	
print("R$", round(G,2))
	
-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 23:20:40) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
E = float(input("Horas extras: "))
F = float(input("Horas de falta: "))
H = E - (1/4) * F

print(E, "extras e", F, "de falta")

if (E <= 0 or H <= 0):
	print("Entradas invalidas")
elif (H > 400):
	print("R$", round(500,2))
else:
	print("R$", round(100,2))
	

	
-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 23:20:48) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
E = float(input("Horas extras: "))
F = float(input("Horas de falta: "))
H = E - (1/4) * F

print(E, "extras e", F, "de falta")

if (E <= 0 or H <= 0):
	print("Entradas invalidas")
elif (H > 400):
	print("R$", round(500,2))
else:
	print("R$", round(100,2))
	

	
-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 23:20:54) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
E = float(input("Horas extras: "))
F = float(input("Horas de falta: "))
H = E - (1/4) * F

print(E, "extras e", F, "de falta")

if (E <= 0 or H <= 0):
	print("Entradas invalidas")
elif (H > 400):
	print("R$", round(500,2))
else:
	print("R$", round(100,2))
	

	
-- EXECUTION TIME:
0.200639
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 100
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 100
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 23:21:11) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
E = float(input("Horas extras: "))
F = float(input("Horas de falta: "))
H = E - ((1/4) * F)

print(E, "extras e", F, "de falta")

if (E <= 0 or H <= 0):
	print("Entradas invalidas")
elif (H > 400):
	print("R$", round(500,2))
else:
	print("R$", round(100,2))
	

	
-- EXECUTION TIME:
0.20329
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 100
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 100
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:52:46) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
E = float(input("Horas extras: "))
F = float(input("Horas de falta: "))
H = E - ((1/4) * F)

print(E, "extras e", F, "de falta")

if (E <= 0 or H <= 0):
	print("Entradas invalidas")
elif (H > 400):
	print("R$", round(500,2))
else:
	print("R$", round(100,2))
	

	
-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 23:53:03) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
E = float(input("Horas extras: "))
F = float(input("Horas de falta: "))
H = E - ((1/4) * F)

print(E, "extras e", F, "de falta")

if (E <= 0 or H <= 0):
	print("Entradas invalidas")
elif (H > 400):
	print("R$", round(500,2))
else:
	print("R$", round(100,2))
	

	
-- EXECUTION TIME:
0.204621
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 100
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 100
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 23:54:01) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
E = float(input("Horas extras: "))
F = float(input("Horas de falta: "))
H = E - ((1/4) * F)

print(E, "extras e", F, "de falta")

if (E <= 0 and F <= 0):
	print("Entradas invalidas")
elif (H > 400):
	print("R$", round(500,2))
else:
	print("R$", round(100,2))
	

	
-- EXECUTION TIME:
0.13771
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 100
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 100
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 23:58:26) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
E = float(input("Horas extras: "))
F = float(input("Horas de falta: "))
H = E - ((1/4) * F)

if (E <= 0 and F <= 0):
	print("Entradas invalidas")
	
elif (H > 400):
	print(E, "extras e", F, "de falta")
	print("R$", round(500,2))
else:
	print(E, "extras e", F, "de falta")
	print("R$", round(100,2))
	

	
-- EXECUTION TIME:
0.1845
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 100
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 100
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:58:55) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
E = float(input("Horas extras: "))
F = float(input("Horas de falta: "))
if (E <= 0 and F <= 0):
	print("Entradas invalidas")

H = E - ((1/4) * F)
	
elif (H > 400):
	print(E, "extras e", F, "de falta")
	print("R$", round(500,2))
else:
	print(E, "extras e", F, "de falta")
	print("R$", round(100,2))
	

	
-- ERROR:
File "XXXX", line 9
    elif (H > 400):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:07:28) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
E = float(input("Horas extras: "))
F = float(input("Horas de falta: "))
if (E <= 0 and F <= 0):
	print("Entradas invalidas")

H = E - ((1/4) * F)
	
if (H > 400):
	print(E, "extras e", F, "de falta")
	print("R$", round(500,2))
else:
	print(E, "extras e", F, "de falta")
	print("R$", round(100,2))
	

	
-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:07:45) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
E = float(input("Horas extras: "))
F = float(input("Horas de falta: "))
if (E <= 0 and F <= 0):
	print("Entradas invalidas")

H = E - ((1/4) * F)
	
if (H > 400):
	print(E, "extras e", F, "de falta")
	print("R$", round(500,2))
else:
	print(E, "extras e", F, "de falta")
	print("R$", round(100,2))
	

	
-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:08:07) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
E = float(input("Horas extras: "))
F = float(input("Horas de falta: "))
if (E <= 0 and F <= 0):
	print("Entradas invalidas")

H = E - ((1/4) * F)
	
if (H > 400):
	print(E, "extras e", F, "de falta")
	print("R$", round(500,2))
else:
	print(E, "extras e", F, "de falta")
	print("R$", round(100,2))
	

	
-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:08:17) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
E = float(input("Horas extras: "))
F = float(input("Horas de falta: "))
if (E <= 0 and F <= 0):
	print("Entradas invalidas")

H = E - ((1/4) * F)
	
if (H > 400):
	print(E, "extras e", F, "de falta")
	print("R$", round(500,2))
else:
	print(E, "extras e", F, "de falta")
	print("R$", round(100,2))
	

	
-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:08:25) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
E = float(input("Horas extras: "))
F = float(input("Horas de falta: "))
if (E <= 0 and F <= 0):
	print("Entradas invalidas")

H = E - ((1/4) * F)
	
if (H > 400):
	print(E, "extras e", F, "de falta")
	print("R$", round(500,2))
else:
	print(E, "extras e", F, "de falta")
	print("R$", round(100,2))
	

	
-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 00:08:35) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
E = float(input("Horas extras: "))
F = float(input("Horas de falta: "))
if (E <= 0 and F <= 0):
	print("Entradas invalidas")

H = E - ((1/4) * F)
	
if (H > 400):
	print(E, "extras e", F, "de falta")
	print("R$", round(500,2))
else:
	print(E, "extras e", F, "de falta")
	print("R$", round(100,2))
	

	
-- EXECUTION TIME:
0.137804
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 100
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 100
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:43:18) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
E = float(input("Horas extras: "))
F = float(input("Horas de falta: "))
if (E <= 0 and F <= 0):
	print("Entradas invalidas")

else:
	(H = E - ((1/4) * F)
	
if (H > 400):
	print(E, "extras e", F, "de falta")
	print("R$", round(500,2))
else:
	print(E, "extras e", F, "de falta")
	print("R$", round(100,2))
	

	
-- EXECUTION TIME:
0.188587
-- ERROR:
  File "/home/codebench/codes/1679/1879/main.py", line 8
    (H = E - ((1/4) * F)
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:54:32) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
E = float(input("Horas extras: "))
F = float(input("Horas de falta: "))
if (E < 0 and F < 0):
	print("Entradas invalidas")

else:
	H = E - ((1/4) * F
	
if (H <= 400):
	print(E, "extras e", F, "de falta")
	print("R$", round(100,2))
else:
	print(E, "extras e", F, "de falta")
	print("R$", round(500,2))
	

	
-- ERROR:
File "XXXX", line 10
    if (H <= 400):
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:54:49) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
E = float(input("Horas extras: "))
F = float(input("Horas de falta: "))
if (E < 0 and F < 0):
	print("Entradas invalidas")

else:
	H = E - ((1/4) * F
	
	if (H <= 400):
		print(E, "extras e", F, "de falta")
		print("R$", round(100,2))
	else:
		print(E, "extras e", F, "de falta")
		print("R$", round(500,2))


	
-- ERROR:
File "XXXX", line 10
    if (H <= 400):
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:55:32) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
E = float(input("Horas extras: "))
F = float(input("Horas de falta: "))
if (E < 0 and F < 0):
	print("Entradas invalidas")

else:
	H = E - ((1/4) * F
	
if (H <= 400):
	print(E, "extras e", F, "de falta")
	print("R$", round(100,2))
else:
		print(E, "extras e", F, "de falta")
		print("R$", round(500,2))


	
-- ERROR:
File "XXXX", line 10
    if (H <= 400):
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:56:20) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
E = float(input("Horas extras: "))
F = float(input("Horas de falta: "))
if (E < 0 and F < 0):
	print("Entradas invalidas")

else:
	H = E - ((1/4) * F
	
if (H > 400):
	print(E, "extras e", F, "de falta")
	print("R$", round(500,2))
else:
		print(E, "extras e", F, "de falta")
		print("R$", round(100,2))


	
-- ERROR:
File "XXXX", line 10
    if (H > 400):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:57:50) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
E = float(input("Horas extras: "))
F = float(input("Horas de falta: "))
if (E < 0 and F < 0):
	print("Entradas invalidas")

else:
	H = E - (1/4) * F
	
if (H > 400):
	print(E, "extras e", F, "de falta")
	print("R$", round(500,2))
else:
		print(E, "extras e", F, "de falta")
		print("R$", round(100,2))


	
-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:58:02) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
E = float(input("Horas extras: "))
F = float(input("Horas de falta: "))
if (E < 0 and F < 0):
	print("Entradas invalidas")

else:
	H = E - (1/4) * F
	
if (H > 400):
	print(E, "extras e", F, "de falta")
	print("R$", round(500,2))
else:
		print(E, "extras e", F, "de falta")
		print("R$", round(100,2))


	
-- EXECUTION TIME:
0.20223
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 100
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 100
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:17:56) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
E = float(input("Horas extras: "))
F = float(input("Horas de falta: "))
if (E < 0 and F < 0):
	print("Entradas invalidas")

else:
	H = E - ((1/4) * F)
	
if (H > 400):
	print(E, "extras e", F, "de falta")
	print("R$", round(500,2))
else:
		print(E, "extras e", F, "de falta")
		print("R$", round(100,2))


	
-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:18:09) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
E = float(input("Horas extras: "))
F = float(input("Horas de falta: "))
if (E < 0 and F < 0):
	print("Entradas invalidas")

else:
	H = E - ((1/4) * F)
	
if (H > 400):
	print(E, "extras e", F, "de falta")
	print("R$", round(500,2))
else:
		print(E, "extras e", F, "de falta")
		print("R$", round(100,2))


	
-- EXECUTION TIME:
0.158171
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 100
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 100
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:37:18) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
E = float(input("Horas extras: "))
F = float(input("Horas de falta: "))
if (E > 0 and F > 0):
	

else:
	H = E - ((1/4) * F)
	
if (H > 400):
	print(E, "extras e", F, "de falta")
	print("R$", round(500,2))
else:
		print(E, "extras e", F, "de falta")
		print("R$", round(100,2))


	
-- ERROR:
File "XXXX", line 7
    else:
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:41:18) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
E = float(input("Horas extras: "))
F = float(input("Horas de falta: "))

H = E - ((1/4) * F)
	
if (H > 400):
	print(E, "extras e", F, "de falta")
	print("R$", round(500,2))
else:
	print(E, "extras e", F, "de falta")
	print("R$", round(100,2))


	
-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:41:27) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
E = float(input("Horas extras: "))
F = float(input("Horas de falta: "))

H = E - ((1/4) * F)
	
if (H > 400):
	print(E, "extras e", F, "de falta")
	print("R$", round(500,2))
else:
	print(E, "extras e", F, "de falta")
	print("R$", round(100,2))


	
-- EXECUTION TIME:
0.211464
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 100
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 100
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:41:44) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
E = float(input("Horas extras: "))
F = float(input("Horas de falta: "))

H = E - ((1/4) * F)
	
if (H > 400):
	print(E, "extras e", F, "de falta")
	print("R$", round(500.0,2))
else:
	print(E, "extras e", F, "de falta")
	print("R$", round(100.0,2))


	
-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:41:56) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
E = float(input("Horas extras: "))
F = float(input("Horas de falta: "))

H = E - ((1/4) * F)
	
if (H > 400):
	print(E, "extras e", F, "de falta")
	print("R$", round(500.0,2))
else:
	print(E, "extras e", F, "de falta")
	print("R$", round(100.0,2))


	
-- EXECUTION TIME:
0.147223
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500.0
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 100.0
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 100.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
