== TEST (2019-05-23 16:51:58) 
-- CODE:
a='aaaaa'
b=2*a
print()
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 16:52:02) 
-- CODE:
a='aaaaa'
b=2*a
print(b)
-- OUTPUT:
aaaaaaaaaa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 16:52:14) 
-- CODE:
a='fkjaljkglsjgaljfglaaaaaa'
b=2*a
print(b)
-- OUTPUT:
fkjaljkglsjgaljfglaaaaaafkjaljkglsjgaljfglaaaaaa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 16:52:23) 
-- CODE:
a='fkjaljkglsjgaljfglaaaaaa'
b=52*a
print(b)
-- OUTPUT:
fkjaljkglsjgaljfglaaaaaafkjaljkglsjgaljfglaaaaaafkjaljkglsjgaljfglaaaaaafkjaljkglsjgaljfglaaaaaafkjaljkglsjgaljfglaaaaaafkjaljkglsjgaljfglaaaaaafkjaljkglsjgaljfglaaaaaafkjaljkglsjgaljfglaaaaaafkjaljkglsjgaljfglaaaaaafkjaljkglsjgaljfglaaaaaafkjaljkglsjgaljfglaaaaaafkjaljkglsjgaljfglaaaaaafkjaljkglsjgaljfglaaaaaafkjaljkglsjgaljfglaaaaaafkjaljkglsjgaljfglaaaaaafkjaljkglsjgaljfglaaaaaafkjaljkglsjgaljfglaaaaaafkjaljkglsjgaljfglaaaaaafkjaljkglsjgaljfglaaaaaafkjaljkglsjgaljfglaaaaaafkjaljkglsjgaljfglaaaaaafkjaljkglsjgaljfglaaaaaafkjaljkglsjgaljfglaaaaaafkjaljkglsjgaljfglaaaaaafkjaljkglsjgaljfglaaaaaafkjaljkglsjgaljfglaaaaaafkjaljkglsjgaljfglaaaaaafkjaljkglsjgaljfglaaaaaafkjaljkglsjgaljfglaaaaaafkjaljkglsjgaljfglaaaaaafkjaljkglsjgaljfglaaaaaafkjaljkglsjgaljfglaaaaaafkjaljkglsjgaljfglaaaaaafkjaljkglsjgaljfglaaaaaafkjaljkglsjgaljfglaaaaaafkjaljkglsjgaljfglaaaaaafkjaljkglsjgaljfglaaaaaafkjaljkglsjgaljfglaaaaaafkjaljkglsjgaljfglaaaaaafkjaljkglsjgaljfglaaaaaafkjaljkglsjgaljfglaaaaaafkjaljkglsjgaljf
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 16:52:36) 
-- CODE:
a='7777777777hjhjhjjhjjhhjhhhjhjhhj'
b=52*a
print(b)
-- OUTPUT:
7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj77777777
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 16:52:47) 
-- CODE:
a='7777777777hjhjhjjhjjhhjhhhjhjhhj'
b=211111*a
print(b)
-- OUTPUT:
7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj7777777777hjhjhjjhjjhhjhhhjhjhhj77777777
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 16:53:22) 
-- CODE:
a='***********'
b=20*a
print(b)
-- OUTPUT:
****************************************************************************************************************************************************************************************************************************
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 16:53:32) 
-- CODE:
a='******////////++++++*****'
b=20*a
print(b)
-- OUTPUT:

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 16:53:40) 
-- CODE:
a='******////////++++++*****'
b=200000
print(b)
-- OUTPUT:
200000
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 16:53:46) 
-- CODE:
a='******////////++++++*****'
b=200000*a
print(b)
-- OUTPUT:

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 16:54:01) 
-- CODE:
a='******////////++++++*****'
b=200000*a -2520**a
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    b=200000*a -2520**a
TypeError: unsupported operand type(s) for ** or pow(): 'int' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 16:56:42) 
-- CODE:
n=input('digite:  ')
vec=''
i=0
while(i<size(n)):
	x=i
	y=i+3
	vec=vec + n[x:y]+ '.'
	i=i+3
print(vec)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    while(i<size(n)):
NameError: name 'size' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 16:57:03) 
-- CODE:
n=input('digite:  ')
vec=''
i=0
while(i<len(n)):
	x=i
	y=i+3
	vec=vec + n[x:y]+ '.'
	i=i+3
print(vec)

-- OUTPUT:
123.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-28 16:58:04) 
-- CODE:
n=input('digite:  ')
vec=''
i=0
while(i<len(n)):
	x=i
	y=i+3
	vec=vec + n[x:y]+ '.'
	i=i+3
print(vec[0:-1])

-- EXECUTION TIME:
0.132012
-- TEST CASE 1:
---- input:
123
---- correct output:
123
---- user output:
123
-- TEST CASE 2:
---- input:
123456789000987654321
---- correct output:
123.456.789.000.987.654.321
---- user output:
123.456.789.000.987.654.321
-- TEST CASE 3:
---- input:
987654321
---- correct output:
987.654.321
---- user output:
987.654.321
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 16:58:06) 
-- CODE:
n=input('digite:  ')
vec=''
i=0
while(i<len(n)):
	x=i
	y=i+3
	vec=vec + n[x:y]+ '.'
	i=i+3
print(vec[0:-1])

-- OUTPUT:
123
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 16:58:11) 
-- CODE:
n=input('digite:  ')
vec=''
i=0
while(i<len(n)):
	x=i
	y=i+3
	vec=vec + n[x:y]+ '.'
	i=i+3
print(vec[0:-1])

-- OUTPUT:
123
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 16:58:25) 
-- CODE:
n=input('digite:  ')
vec=''
i=0
while(i<len(n)):
	x=i
	y=i+3
	vec=vec + n[x:y]+ '.'
	i=i+3
print(vec[0:-1])

-- OUTPUT:
123
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-28 16:58:38) 
-- CODE:
n=input('digite:  ')
vec=''
i=0
while(i<len(n)):
	x=i
	y=i+3
	vec=vec + n[x:y]+ '.'
	i=i+3
print(vec[0:-1])

-- EXECUTION TIME:
0.154534
-- TEST CASE 1:
---- input:
123
---- correct output:
123
---- user output:
123
-- TEST CASE 2:
---- input:
123456789000987654321
---- correct output:
123.456.789.000.987.654.321
---- user output:
123.456.789.000.987.654.321
-- TEST CASE 3:
---- input:
987654321
---- correct output:
987.654.321
---- user output:
987.654.321
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-28 16:58:43) 
-- CODE:
n=input('digite:  ')
vec=''
i=0
while(i<len(n)):
	x=i
	y=i+3
	vec=vec + n[x:y]+ '.'
	i=i+3
print(vec[0:-1])

-- EXECUTION TIME:
0.15894
-- TEST CASE 1:
---- input:
123
---- correct output:
123
---- user output:
123
-- TEST CASE 2:
---- input:
123456789000987654321
---- correct output:
123.456.789.000.987.654.321
---- user output:
123.456.789.000.987.654.321
-- TEST CASE 3:
---- input:
987654321
---- correct output:
987.654.321
---- user output:
987.654.321
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-28 16:58:50) 
-- CODE:
n=input('digite:  ')
vec=''
i=0
while(i<len(n)):
	x=i
	y=i+3
	vec=vec + n[x::y]+ '.'
	i=i+3
print(vec[0:-1])

-- EXECUTION TIME:
0.163161
-- TEST CASE 1:
---- input:
123
---- correct output:
123
---- user output:
1
-- TEST CASE 2:
---- input:
123456789000987654321
---- correct output:
123.456.789.000.987.654.321
---- user output:
1470963.406.76.0.9.6.3
-- TEST CASE 3:
---- input:
987654321
---- correct output:
987.654.321
---- user output:
963.6.3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-28 16:58:53) 
-- CODE:
n=input('digite:  ')
vec=''
i=0
while(i<len(n)):
	x=i
	y=i+3
	vec=vec + n[x:y]+ '.'
	i=i+3
print(vec[0:-1])

-- EXECUTION TIME:
0.157764
-- TEST CASE 1:
---- input:
123
---- correct output:
123
---- user output:
123
-- TEST CASE 2:
---- input:
123456789000987654321
---- correct output:
123.456.789.000.987.654.321
---- user output:
123.456.789.000.987.654.321
-- TEST CASE 3:
---- input:
987654321
---- correct output:
987.654.321
---- user output:
987.654.321
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
