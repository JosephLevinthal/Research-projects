== TEST (2019-04-25 17:23:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("Consumo de energia: "))
t=input("Tipo de instalacao: ").upper()
print("Entradas: ",c,"kWh e tipo", t)
if((t=='R')and(c<=500)):
	valor=c*0.44
elif((t=='R')and(c>500)):
	valor=c*0.65
elif((t=='C')and(c<=1000)):
	valor=c*0.55
elif((t=='R')and(c>1000)):
	valor=c*0,60
elif((t=='I')and(c<=5000)):
	valor=c*0,55
elif((t=='I')and(c>5000)):
	valor=c*0,6
else:
	valor='Dados invalidos'
print(valor)
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
(-0.0, 55)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:24:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("Consumo de energia: "))
t=input("Tipo de instalacao: ").upper()
print("Entradas: ",c,"kWh e tipo", t)
if((t=='R')and(c<=500)):
	valor=c*0.44
elif((t=='R')and(c>500)):
	valor=c*0.65
elif((t=='C')and(c<=1000)):
	valor=c*0.55
elif((t=='R')and(c>1000)):
	valor=c*0,60
elif((t=='I')and(c<=5000)):
	valor=c*0,55
elif((t=='I')and(c>5000)):
	valor=c*0,6
else:
	valor='Dados invalidos'
print(valor)
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
(-0.0, 55)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:28:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("Consumo de energia: "))
t=input("Tipo de instalacao: ").upper()
print("Entradas: ",c,"kWh e tipo", t)
if((t=='R')and(c<=500)):
	valor=c/0.44
elif((t=='R')and(c>500)):
	valor=c/0.65
elif((t=='C')and(c<=1000)):
	valor=c/0.55
elif((t=='R')and(c>1000)):
	valor=c/0.6
elif((t=='I')and(c<=5000)):
	valor=c/0.56
elif((t=='I')and(c>5000)):
	valor=c/0.6
else:
	valor='Dados invalidos'
print("Valor total: R$ ",valor)
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Valor total: R$  -99.99999999999999
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:33:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("Consumo de energia: "))
t=input("Tipo de instalacao: ").upper()
print("Entradas: ",c,"kWh e tipo", t)
if((t=='R')and(c<=500)):
	valor=c*0.44
elif((t=='R')and(c>500)):
	valor=c*0.65
elif((t=='C')and(c<=1000)):
	valor=c*0.55
elif((t=='R')and(c>1000)):
	valor=c*0.6
elif((t=='I')and(c<=5000)):
	valor=c*0.56
elif((t=='I')and(c>5000)):
	valor=c*0.6
else:
	valor='Dados invalidos'
print("Valor total: R$ ",valor)
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Valor total: R$  -31.360000000000003
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:35:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("Consumo de energia: "))
t=input("Tipo de instalacao: ").upper()
print("Entradas: ",c,"kWh e tipo", t)
if((t=='R')and(c<=500)):
	valor=c*0.44
elif((t=='R')and(c>500)):
	valor=c*0.65
elif((t=='C')and(c<=1000)):
	valor=c*0.55
elif((t=='R')and(c>1000)):
	valor=c*0.6
elif((t=='I')and(c<=5000)):
	valor=c*0.56
elif((t=='I')and(c>5000)):
	valor=c*0.6
else:
	valor='Dados invalidos'
round(valor, 2)
print("Valor total: R$ ", valor)
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Valor total: R$  -31.360000000000003
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:36:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("Consumo de energia: "))
t=input("Tipo de instalacao: ").upper()
print("Entradas: ",c,"kWh e tipo", t)
if((t=='R')and(c<=500)):
	valor=c*0.44
elif((t=='R')and(c>500)):
	valor=c*0.65
elif((t=='C')and(c<=1000)):
	valor=c*0.55
elif((t=='R')and(c>1000)):
	valor=c*0.6
elif((t=='I')and(c<=5000)):
	valor=c*0.56
elif((t=='I')and(c>5000)):
	valor=c*0.6
else:
	valor='Dados invalidos'

print(round("Valor total: R$ ", valor, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 22, in <module>
    print(round("Valor total: R$ ", valor, 2))
TypeError: round() takes at most 2 arguments (3 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:38:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("Consumo de energia: "))
t=input("Tipo de instalacao: ").upper()
print("Entradas: ",c,"kWh e tipo", t)
if((t=='R')and(c<=500)):
	valor=round(c*0.44, 2)
elif((t=='R')and(c>500)):
	valor=round(c*0.65, 2)
elif((t=='C')and(c<=1000)):
	valor=round(c*0.55, 2)
elif((t=='R')and(c>1000)):
	valor=round(c*0.6, 2)
elif((t=='I')and(c<=5000)):
	valor=round(c*0.56, 2)
elif((t=='I')and(c>5000)):
	valor=round(c*0.6, 2)
else:
	valor='Dados invalidos'

print("Valor total: R$ ", valor, 2)
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Valor total: R$  -31.36 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:38:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("Consumo de energia: "))
t=input("Tipo de instalacao: ").upper()
print("Entradas: ",c,"kWh e tipo", t)
if((t=='R')and(c<=500)):
	valor=round(c*0.44, 2)
elif((t=='R')and(c>500)):
	valor=round(c*0.65, 2)
elif((t=='C')and(c<=1000)):
	valor=round(c*0.55, 2)
elif((t=='R')and(c>1000)):
	valor=round(c*0.6, 2)
elif((t=='I')and(c<=5000)):
	valor=round(c*0.56, 2)
elif((t=='I')and(c>5000)):
	valor=round(c*0.6, 2)
else:
	valor='Dados invalidos'

print("Valor total: R$ ", valor)
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Valor total: R$  -31.36
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:38:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("Consumo de energia: "))
t=input("Tipo de instalacao: ").upper()
print("Entradas: ",c,"kWh e tipo", t)
if((t=='R')and(c<=500)):
	valor=round(c*0.44, 2)
elif((t=='R')and(c>500)):
	valor=round(c*0.65, 2)
elif((t=='C')and(c<=1000)):
	valor=round(c*0.55, 2)
elif((t=='R')and(c>1000)):
	valor=round(c*0.6, 2)
elif((t=='I')and(c<=5000)):
	valor=round(c*0.56, 2)
elif((t=='I')and(c>5000)):
	valor=round(c*0.6, 2)
else:
	valor='Dados invalidos'

print("Valor total: R$ ", valor)
-- EXECUTION TIME:
0.152543
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo I
Valor total: R$  -31.36
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo R
Valor total: R$  621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:39:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("Consumo de energia: "))
t=input("Tipo de instalacao: ").upper()
print("Entradas: ",c,"kWh e tipo", t)
if((t=='R')and(c<=500)):
	valor=round(c*0.44, 2)
elif((t=='R')and(c>500)):
	valor=round(c*0.65, 2)
elif((t=='C')and(c<=1000)):
	valor=round(c*0.55, 2)
elif((t=='R')and(c>1000)):
	valor=round(c*0.6, 2)
elif((t=='I')and(c<=5000)):
	valor=round(c*0.56, 2)
elif((t=='I')and(c>5000)):
	valor=round(c*0.6, 2)
else:
	valor='Dados invalidos'

print("Valor total: R$ ", valor)
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Valor total: R$  -31.36
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:39:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("Consumo de energia: "))
t=input("Tipo de instalacao: ").upper()
print("Entradas: ",c,"kWh e tipo", t)
if((t=='R')and(c<=500)):
	valor=round(c*0.44, 2)
elif((t=='R')and(c>500)):
	valor=round(c*0.65, 2)
elif((t=='C')and(c<=1000)):
	valor=round(c*0.55, 2)
elif((t=='R')and(c>1000)):
	valor=round(c*0.6, 2)
elif((t=='I')and(c<=5000)):
	valor=round(c*0.56, 2)
elif((t=='I')and(c>5000)):
	valor=round(c*0.6, 2)
else:
	print('Dados invalidos')

print("Valor total: R$ ", valor)
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Valor total: R$  -31.36
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:41:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("Consumo de energia: "))
t=input("Tipo de instalacao: ").upper()
print("Entradas: ",c,"kWh e tipo", t)
if((t=='R')and(c<=500)):
	valor=round(c*0.44, 2)
elif((t=='R')and(c>500)):
	valor=round(c*0.65, 2)
elif((t=='C')and(c<=1000)):
	valor=round(c*0.55, 2)
elif((t=='R')and(c>1000)):
	valor=round(c*0.6, 2)
elif((t=='I')and(c<=5000)):
	valor=round(c*0.56, 2)
elif((t=='I')and(c>5000)):
	valor=round(c*0.6, 2)
else:
	print('Dados invalidos')

print("Valor total: R$ ", valor)
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Valor total: R$  -31.36
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:42:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("Consumo de energia: "))
t=input("Tipo de instalacao: ").upper()
print("Entradas: ",c,"kWh e tipo", t)
if((t=='R')and(c<=500)):
	valor=round(c*0.44, 2)
elif((t=='R')and(c>500)):
	valor=round(c*0.65, 2)
elif((t=='C')and(c<=1000)):
	valor=round(c*0.55, 2)
elif((t=='R')and(c>1000)):
	valor=round(c*0.6, 2)
elif((t=='I')and(c<=5000)):
	valor=round(c*0.56, 2)
elif((t=='I')and(c>5000)):
	valor=round(c*0.6, 2)
else:
	print('Dados invalidos')

print("Valor total: R$ ", valor)
-- EXECUTION TIME:
0.173561
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo I
Valor total: R$  -31.36
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo R
Valor total: R$  621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:42:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("Consumo de energia: "))
t=input("Tipo de instalacao: ").upper()
print("Entradas: ",c,"kWh e tipo", t)
if((t=='R')and(c<=500)):
	valor=round(c*0.44, 2)
elif((t=='R')and(c>500)):
	valor=round(c*0.65, 2)
elif((t=='C')and(c<=1000)):
	valor=round(c*0.55, 2)
elif((t=='R')and(c>1000)):
	valor=round(c*0.6, 2)
elif((t=='I')and(c<=5000)):
	valor=round(c*0.56, 2)
elif((t=='I')and(c>5000)):
	valor=round(c*0.6, 2)
else:
	print("Dados invalidos")

print("Valor total: R$ ", valor)
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Valor total: R$  -31.36
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:43:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("Consumo de energia: "))
t=input("Tipo de instalacao: ").upper()
print("Entradas: ",c,"kWh e tipo", t)
if((t=='R')and(c<=500)):
	valor=round(c*0.44, 2)
elif((t=='R')and(c>500)):
	valor=round(c*0.65, 2)
elif((t=='C')and(c<=1000)):
	valor=round(c*0.55, 2)
elif((t=='R')and(c>1000)):
	valor=round(c*0.6, 2)
elif((t=='I')and(c<=5000)):
	valor=round(c*0.56, 2)
elif((t=='I')and(c>5000)):
	valor=round(c*0.6, 2)
else:
	print("Dados invalidos")
print("Valor total: R$ ", valor)
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Valor total: R$  -31.36
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:43:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("Consumo de energia: "))
t=input("Tipo de instalacao: ").upper()
print("Entradas: ",c,"kWh e tipo", t)
if((t=='R')and(c<=500)):
	valor=round(c*0.44, 2)
elif((t=='R')and(c>500)):
	valor=round(c*0.65, 2)
elif((t=='C')and(c<=1000)):
	valor=round(c*0.55, 2)
elif((t=='R')and(c>1000)):
	valor=round(c*0.6, 2)
elif((t=='I')and(c<=5000)):
	valor=round(c*0.56, 2)
elif((t=='I')and(c>5000)):
	valor=round(c*0.6, 2)
else:
	print("Dados invalidos")
print("Valor total: R$ ", valor)
-- EXECUTION TIME:
0.147926
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo I
Valor total: R$  -31.36
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo R
Valor total: R$  621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:43:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("Consumo de energia: "))
t=input("Tipo de instalacao: ").upper()
print("Entradas: ",c,"kWh e tipo", t)
if((t=='R')and(c<=500)):
	valor=round(c*0.44, 2)
elif((t=='R')and(c>500)):
	valor=round(c*0.65, 2)
elif((t=='C')and(c<=1000)):
	valor=round(c*0.55, 2)
elif((t=='R')and(c>1000)):
	valor=round(c*0.6, 2)
elif((t=='I')and(c<=5000)):
	valor=round(c*0.56, 2)
elif((t=='I')and(c>5000)):
	valor=round(c*0.6, 2)
else:
	print("Dados invalidos")
print("Valor total: R$ ", valor)
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Valor total: R$  -31.36
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:43:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("Consumo de energia: "))
t=input("Tipo de instalacao: ").upper()
print("Entradas: ",c,"kWh e tipo", t)
if((t=='R')and(c<=500)):
	valor=round(c*0.44, 2)
elif((t=='R')and(c>500)):
	valor=round(c*0.65, 2)
elif((t=='C')and(c<=1000)):
	valor=round(c*0.55, 2)
elif((t=='R')and(c>1000)):
	valor=round(c*0.6, 2)
elif((t=='I')and(c<=5000)):
	valor=round(c*0.56, 2)
elif((t=='I')and(c>5000)):
	valor=round(c*0.6, 2)
else:
	print("Dados invalidos")
print("Valor total: R$ ", valor)
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Valor total: R$  -31.36
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:44:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("Consumo de energia: "))
t=input("Tipo de instalacao: ").upper()
print("Entradas: ",c,"kWh e tipo", t)
if((t=='R')and(c<=500)):
	valor=round(c*0.44, 2)
elif((t=='R')and(c>500)):
	valor=round(c*0.65, 2)
elif((t=='C')and(c<=1000)):
	valor=round(c*0.55, 2)
elif((t=='R')and(c>1000)):
	valor=round(c*0.6, 2)
elif((t=='I')and(c<=5000)):
	valor=round(c*0.56, 2)
elif((t=='I')and(c>5000)):
	valor=round(c*0.6, 2)
else:
	print("Dados invalidos")
print("Valor total: R$ ",valor)
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Valor total: R$  -31.36
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:44:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("Consumo de energia: "))
t=input("Tipo de instalacao: ").upper()
print("Entradas: ",c,"kWh e tipo", t)
if((t=='R')and(c<=500)):
	valor=round(c*0.44, 2)
elif((t=='R')and(c>500)):
	valor=round(c*0.65, 2)
elif((t=='C')and(c<=1000)):
	valor=round(c*0.55, 2)
elif((t=='R')and(c>1000)):
	valor=round(c*0.6, 2)
elif((t=='I')and(c<=5000)):
	valor=round(c*0.56, 2)
elif((t=='I')and(c>5000)):
	valor=round(c*0.6, 2)
else:
	print("Dados invalidos")
print("Valor total: R$ ",valor)
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Valor total: R$  -31.36
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:27:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("Consumo de energia: "))
t=input("Tipo de instalacao: ").upper()
print("Entradas: ",c,"kWh e tipo", t)
if((t=='R')and(c<=500)):
	valor=round(c*0.44, 2)
	print("Valor total: R$ ",valor)
elif((t=='R')and(c>500)):
	valor=round(c*0.65, 2)
	print("Valor total: R$ ",valor)
elif((t=='C')and(c<=1000)):
	valor=round(c*0.55, 2)
	print("Valor total: R$ ",valor)
elif((t=='R')and(c>1000)):
	valor=round(c*0.6, 2)
	print("Valor total: R$ ",valor)
elif((t=='I')and(c<=5000)):
	valor=round(c*0.56, 2)
	print("Valor total: R$ ",valor)
elif((t=='I')and(c>5000)):
	valor=round(c*0.6, 2)
	print("Valor total: R$ ",valor)
else:
	valor='Dados invalidos'
	print(valor)

-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Valor total: R$  -31.36
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:27:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("Consumo de energia: "))
t=input("Tipo de instalacao: ").upper()
print("Entradas: ",c,"kWh e tipo", t)
if((t=='R')and(c<=500)):
	valor=round(c*0.44, 2)
	print("Valor total: R$ ",valor)
elif((t=='R')and(c>500)):
	valor=round(c*0.65, 2)
	print("Valor total: R$ ",valor)
elif((t=='C')and(c<=1000)):
	valor=round(c*0.55, 2)
	print("Valor total: R$ ",valor)
elif((t=='R')and(c>1000)):
	valor=round(c*0.6, 2)
	print("Valor total: R$ ",valor)
elif((t=='I')and(c<=5000)):
	valor=round(c*0.56, 2)
	print("Valor total: R$ ",valor)
elif((t=='I')and(c>5000)):
	valor=round(c*0.6, 2)
	print("Valor total: R$ ",valor)
else:
	valor='Dados invalidos'
	print(valor)

-- EXECUTION TIME:
0.245243
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo I
Valor total: R$  -31.36
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo R
Valor total: R$  621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:27:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("Consumo de energia: "))
t=input("Tipo de instalacao: ").upper()
print("Entradas: ",c,"kWh e tipo", t)
if((t=='R')and(c<=500)):
	valor=round(c*0.44, 2)
	print("Valor total: R$ ",valor)
elif((t=='R')and(c>500)):
	valor=round(c*0.65, 2)
	print("Valor total: R$ ",valor)
elif((t=='C')and(c<=1000)):
	valor=round(c*0.55, 2)
	print("Valor total: R$ ",valor)
elif((t=='R')and(c>1000)):
	valor=round(c*0.6, 2)
	print("Valor total: R$ ",valor)
elif((t=='I')and(c<=5000)):
	valor=round(c*0.56, 2)
	print("Valor total: R$ ",valor)
elif((t=='I')and(c>5000)):
	valor=round(c*0.6, 2)
	print("Valor total: R$ ",valor)
else:
	valor='Dados invalidos'
	print(valor)

-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Valor total: R$  -31.36
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:28:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("Consumo de energia: "))
t=input("Tipo de instalacao: ").upper()
print("Entradas:",c,"kWh e tipo", t)
if((t=='R')and(c<=500)):
	valor=round(c*0.44, 2)
	print("Valor total: R$ ",valor)
elif((t=='R')and(c>500)):
	valor=round(c*0.65, 2)
	print("Valor total: R$ ",valor)
elif((t=='C')and(c<=1000)):
	valor=round(c*0.55, 2)
	print("Valor total: R$ ",valor)
elif((t=='R')and(c>1000)):
	valor=round(c*0.6, 2)
	print("Valor total: R$ ",valor)
elif((t=='I')and(c<=5000)):
	valor=round(c*0.56, 2)
	print("Valor total: R$ ",valor)
elif((t=='I')and(c>5000)):
	valor=round(c*0.6, 2)
	print("Valor total: R$ ",valor)
else:
	valor='Dados invalidos'
	print(valor)

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$  -31.36
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:28:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("Consumo de energia: "))
t=input("Tipo de instalacao: ").upper()
print("Entradas:",c,"kWh e tipo", t)
if((t=='R')and(c<=500)):
	valor=round(c*0.44, 2)
	print("Valor total: R$ ",valor)
elif((t=='R')and(c>500)):
	valor=round(c*0.65, 2)
	print("Valor total: R$ ",valor)
elif((t=='C')and(c<=1000)):
	valor=round(c*0.55, 2)
	print("Valor total: R$ ",valor)
elif((t=='R')and(c>1000)):
	valor=round(c*0.6, 2)
	print("Valor total: R$ ",valor)
elif((t=='I')and(c<=5000)):
	valor=round(c*0.56, 2)
	print("Valor total: R$ ",valor)
elif((t=='I')and(c>5000)):
	valor=round(c*0.6, 2)
	print("Valor total: R$ ",valor)
else:
	valor='Dados invalidos'
	print(valor)

-- EXECUTION TIME:
0.138793
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$  -31.36
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$  621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 15:54:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("Consumo de energia: "))
t=input("Tipo de instalacao: ").upper()
print("Entradas:",c,"kWh e tipo", t)
if((t=='R')and(c<=500)):
	valor=round(c*0.44, 2)
	print("Valor total: R$ ",valor)
elif((t=='R')and(c>500)):
	valor=round(c*0.65, 2)
	print("Valor total: R$ ",valor)
elif((t=='C')and(c<=1000)):
	valor=round(c*0.55, 2)
	print("Valor total: R$ ",valor)
elif((t=='R')and(c>1000)):
	valor=round(c*0.6, 2)
	print("Valor total: R$ ",valor)
elif((t=='I')and(c<=5000)):
	valor=round(c*0.56, 2)
	print("Valor total: R$ ",valor)
elif((t=='I')and(c>5000)):
	valor=round(c*0.6, 2)
	print("Valor total: R$ ",valor)
else:
	valor='Dados invalidos'
	print(valor)

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$  -31.36
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 15:54:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("Consumo de energia: "))
t=input("Tipo de instalacao: ").upper()
print("Entradas:",c,"kWh e tipo", t)
if((t=='R')and(c<=500)):
	valor=round(c*0.44, 2)
	print("Valor total: R$ ",valor)
elif((t=='R')and(c>500)):
	valor=round(c*0.65, 2)
	print("Valor total: R$ ",valor)
elif((t=='C')and(c<=1000)):
	valor=round(c*0.55, 2)
	print("Valor total: R$ ",valor)
elif((t=='R')and(c>1000)):
	valor=round(c*0.6, 2)
	print("Valor total: R$ ",valor)
elif((t=='I')and(c<=5000)):
	valor=round(c*0.56, 2)
	print("Valor total: R$ ",valor)
elif((t=='I')and(c>5000)):
	valor=round(c*0.6, 2)
	print("Valor total: R$ ",valor)
else:
	valor='Dados invalidos'
	print(valor)

-- EXECUTION TIME:
0.233965
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$  -31.36
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$  621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 15:54:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("Consumo de energia: "))
t=input("Tipo de instalacao: ").upper()
print("Entradas:",c,"kWh e tipo", t)
if((t=='R')and(c<=500)):
	valor=round(c*0.44, 2)
	print("Valor total: R$ ",valor)
elif((t=='R')and(c>500)):
	valor=round(c*0.65, 2)
	print("Valor total: R$ ",valor)
elif((t=='C')and(c<=1000)):
	valor=round(c*0.55, 2)
	print("Valor total: R$ ",valor)
elif((t=='R')and(c>1000)):
	valor=round(c*0.6, 2)
	print("Valor total: R$ ",valor)
elif((t=='I')and(c<=5000)):
	valor=round(c*0.56, 2)
	print("Valor total: R$ ",valor)
elif((t=='I')and(c>5000)):
	valor=round(c*0.6, 2)
	print("Valor total: R$ ",valor)
else:
	valor='Dados invalidos'
	print(valor)

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$  -31.36
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 15:54:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("Consumo de energia: "))
t=input("Tipo de instalacao: ").upper()
print("Entradas:",c,"kWh e tipo", t)
if((t=='R')and(c<=500)):
	valor=round(c*0.44, 2)
	print("Valor total: R$ ",valor)
elif((t=='R')and(c>500)):
	valor=round(c*0.65, 2)
	print("Valor total: R$ ",valor)
elif((t=='C')and(c<=1000)):
	valor=round(c*0.55, 2)
	print("Valor total: R$ ",valor)
elif((t=='R')and(c>1000)):
	valor=round(c*0.6, 2)
	print("Valor total: R$ ",valor)
elif((t=='I')and(c<=5000)):
	valor=round(c*0.56, 2)
	print("Valor total: R$ ",valor)
elif((t=='I')and(c>5000)):
	valor=round(c*0.6, 2)
	print("Valor total: R$ ",valor)
else:
	valor='Dados invalidos'
	print(valor)

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$  -31.36
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 15:54:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("Consumo de energia: "))
t=input("Tipo de instalacao: ").upper()
print("Entradas:",c,"kWh e tipo", t)
if((t=='R')and(c<=500)):
	valor=round(c*0.44, 2)
	print("Valor total: R$ ",valor)
elif((t=='R')and(c>500)):
	valor=round(c*0.65, 2)
	print("Valor total: R$ ",valor)
elif((t=='C')and(c<=1000)):
	valor=round(c*0.55, 2)
	print("Valor total: R$ ",valor)
elif((t=='R')and(c>1000)):
	valor=round(c*0.6, 2)
	print("Valor total: R$ ",valor)
elif((t=='I')and(c<=5000)):
	valor=round(c*0.56, 2)
	print("Valor total: R$ ",valor)
elif((t=='I')and(c>5000)):
	valor=round(c*0.6, 2)
	print("Valor total: R$ ",valor)
else:
	valor='Dados invalidos'
	print(valor)

-- EXECUTION TIME:
0.196887
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$  -31.36
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$  621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
