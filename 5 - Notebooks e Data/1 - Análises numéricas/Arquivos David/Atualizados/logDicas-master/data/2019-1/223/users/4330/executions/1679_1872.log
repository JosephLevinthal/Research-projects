== SUBMITION (2019-04-29 01:46:12) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x=float(input("Digite a coordenada x: "))
y=float(float("Digite a coordenada y: "))

if((x==0) and (y==0)):
	print("Origem")
elif((x==0) and (y!=0)):
	print("eixo Y")
elif((y==0) and (x!=0)):
	print("Eixo X")
elif((y>0) and (x>0)):
	print("Q1")
elif((y>0) and (x<0)):
	print("Q2")
elif((y<0) and (x<0)):
	print("Q3")
elif((y<0) and (x>0)):
	print("Q4")
-- EXECUTION TIME:
0.182565
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1872/main.py", line 3, in <module>
    y=float(float("Digite a coordenada y: "))
ValueError: could not convert string to float: 'Digite a coordenada y: '

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 01:46:13) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x=float(input("Digite a coordenada x: "))
y=float(float("Digite a coordenada y: "))

if((x==0) and (y==0)):
	print("Origem")
elif((x==0) and (y!=0)):
	print("eixo Y")
elif((y==0) and (x!=0)):
	print("Eixo X")
elif((y>0) and (x>0)):
	print("Q1")
elif((y>0) and (x<0)):
	print("Q2")
elif((y<0) and (x<0)):
	print("Q3")
elif((y<0) and (x>0)):
	print("Q4")
-- EXECUTION TIME:
0.194324
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1872/main.py", line 3, in <module>
    y=float(float("Digite a coordenada y: "))
ValueError: could not convert string to float: 'Digite a coordenada y: '

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 01:46:15) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x=float(input("Digite a coordenada x: "))
y=float(float("Digite a coordenada y: "))

if((x==0) and (y==0)):
	print("Origem")
elif((x==0) and (y!=0)):
	print("eixo Y")
elif((y==0) and (x!=0)):
	print("Eixo X")
elif((y>0) and (x>0)):
	print("Q1")
elif((y>0) and (x<0)):
	print("Q2")
elif((y<0) and (x<0)):
	print("Q3")
elif((y<0) and (x>0)):
	print("Q4")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    y=float(float("Digite a coordenada y: "))
ValueError: could not convert string to float: 'Digite a coordenada y: '
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 01:46:29) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x=float(input("Digite a coordenada x: "))
y=float(float("Digite a coordenada y: "))

if((x==0) and (y==0)):
	print("Origem")
elif((x==0) and (y!=0)):
	print("eixo Y")
elif((y==0) and (x!=0)):
	print("Eixo X")
elif((y>0) and (x>0)):
	print("Q1")
elif((y>0) and (x<0)):
	print("Q2")
elif((y<0) and (x<0)):
	print("Q3")
elif((y<0) and (x>0)):
	print("Q4")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    y=float(float("Digite a coordenada y: "))
ValueError: could not convert string to float: 'Digite a coordenada y: '
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 01:46:58) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x=float(input("Digite a coordenada x: "))
y=float(input("Digite a coordenada y: "))

if((x==0) and (y==0)):
	print("Origem")
elif((x==0) and (y!=0)):
	print("eixo Y")
elif((y==0) and (x!=0)):
	print("Eixo X")
elif((y>0) and (x>0)):
	print("Q1")
elif((y>0) and (x<0)):
	print("Q2")
elif((y<0) and (x<0)):
	print("Q3")
elif((y<0) and (x>0)):
	print("Q4")
-- OUTPUT:
Q4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 01:47:58) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x=float(input("Digite a coordenada x: "))
y=float(input("Digite a coordenada y: "))

if((x==0) and (y==0)):
	print("Origem")
elif((x==0) and (y!=0)):
	print("eixo Y")
elif((y==0) and (x!=0)):
	print("Eixo X")
elif((y>0) and (x>0)):
	print("Q1")
elif((y>0) and (x<0)):
	print("Q2")
elif((y<0) and (x<0)):
	print("Q3")
elif((y<0) and (x>0)):
	print("Q4")
-- EXECUTION TIME:
0.190643
-- TEST CASE 1:
---- input:
4.5
-2.2
---- correct output:
Q4
---- user output:
Q4
-- TEST CASE 2:
---- input:
0.1
0
---- correct output:
Eixo X
---- user output:
Eixo X
-- TEST CASE 3:
---- input:
0.0
0.0
---- correct output:
Origem
---- user output:
Origem
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 01:47:59) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x=float(input("Digite a coordenada x: "))
y=float(input("Digite a coordenada y: "))

if((x==0) and (y==0)):
	print("Origem")
elif((x==0) and (y!=0)):
	print("eixo Y")
elif((y==0) and (x!=0)):
	print("Eixo X")
elif((y>0) and (x>0)):
	print("Q1")
elif((y>0) and (x<0)):
	print("Q2")
elif((y<0) and (x<0)):
	print("Q3")
elif((y<0) and (x>0)):
	print("Q4")
-- EXECUTION TIME:
0.199722
-- TEST CASE 1:
---- input:
4.5
-2.2
---- correct output:
Q4
---- user output:
Q4
-- TEST CASE 2:
---- input:
0.1
0
---- correct output:
Eixo X
---- user output:
Eixo X
-- TEST CASE 3:
---- input:
0.0
0.0
---- correct output:
Origem
---- user output:
Origem
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 01:48:15) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x=float(input("Digite a coordenada x: "))
y=float(input("Digite a coordenada y: "))

if((x==0) and (y==0)):
	print("Origem")
elif((x==0) and (y!=0)):
	print("Eixo Y")
elif((y==0) and (x!=0)):
	print("Eixo X")
elif((y>0) and (x>0)):
	print("Q1")
elif((y>0) and (x<0)):
	print("Q2")
elif((y<0) and (x<0)):
	print("Q3")
elif((y<0) and (x>0)):
	print("Q4")
-- OUTPUT:
Q4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 01:48:22) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x=float(input("Digite a coordenada x: "))
y=float(input("Digite a coordenada y: "))

if((x==0) and (y==0)):
	print("Origem")
elif((x==0) and (y!=0)):
	print("Eixo Y")
elif((y==0) and (x!=0)):
	print("Eixo X")
elif((y>0) and (x>0)):
	print("Q1")
elif((y>0) and (x<0)):
	print("Q2")
elif((y<0) and (x<0)):
	print("Q3")
elif((y<0) and (x>0)):
	print("Q4")
-- EXECUTION TIME:
0.168604
-- TEST CASE 1:
---- input:
4.5
-2.2
---- correct output:
Q4
---- user output:
Q4
-- TEST CASE 2:
---- input:
0.1
0
---- correct output:
Eixo X
---- user output:
Eixo X
-- TEST CASE 3:
---- input:
0.0
0.0
---- correct output:
Origem
---- user output:
Origem
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
