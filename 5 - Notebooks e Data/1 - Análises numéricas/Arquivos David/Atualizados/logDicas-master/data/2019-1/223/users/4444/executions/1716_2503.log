== TEST (2019-05-07 16:34:33) 
-- CODE:
x = 0
while (x <= 5):
	print(x)
	x = x + 1
-- OUTPUT:
0
1
2
3
4
5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 16:34:33) 
-- CODE:
x = 0
while (x <= 5):
	print(x)
	x = x + 1
-- OUTPUT:
0
1
2
3
4
5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 16:34:55) 
-- CODE:
x = 0
while (x <= 5):
	print(x)
	x = x + 2
-- OUTPUT:
0
2
4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 16:34:55) 
-- CODE:
x = 0
while (x <= 5):
	print(x)
	x = x + 2
-- OUTPUT:
0
2
4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 16:35:27) 
-- CODE:
x = 1
while (x <= 100):
	print(x)
	x = x + 1 
-- OUTPUT:
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 16:35:42) 
-- CODE:
x = 90
while (x <= 100):
	print(x)
	x = x + 1 
-- OUTPUT:
90
91
92
93
94
95
96
97
98
99
100
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 16:35:51) 
-- CODE:
x = 90
while (x <= 100):
	print(x)
	x = x + 2 
-- OUTPUT:
90
92
94
96
98
100
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 16:36:06) 
-- CODE:
x = -5
while (x <= 5):
	print(x)
	x = x + 2 
-- OUTPUT:
-5
-3
-1
1
3
5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 16:36:12) 
-- CODE:
x = -5
while (x <= 5):
	print(x)
	x = x + 1
-- OUTPUT:
-5
-4
-3
-2
-1
0
1
2
3
4
5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 16:36:33) 
-- CODE:
x = 10
while (x >= 5):
	print(x)
	x = x - 1
-- OUTPUT:
10
9
8
7
6
5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 16:44:25) 
-- CODE:
cont = 0 # Contador de alunos aprovados
nota = 1.23 # Valor arbitrário para iniciar laco
while (nota >= 0 and nota <= 10):
	nota = float(input("Digite a nota do aluno"))
	if (nota >= 5.0 and nota <= 10):
		cont = cont + 1
print("Passaram: ", cont)
-- OUTPUT:
Passaram:  0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 16:44:36) 
-- CODE:
cont = 0 # Contador de alunos aprovados
nota = 1.23 # Valor arbitrário para iniciar laco
while (nota >= 0 and nota <= 10):
	nota = float(input("Digite a nota do aluno"))
	if (nota >= 5.0 and nota <= 10):
		cont = cont + 1
print("Passaram: ", cont)
-- OUTPUT:
Passaram:  0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 16:44:43) 
-- CODE:
cont = 0 # Contador de alunos aprovados
nota = 1.23 # Valor arbitrário para iniciar laco
while (nota >= 0 and nota <= 10):
	nota = float(input("Digite a nota do aluno"))
	if (nota >= 5.0 and nota <= 10):
		cont = cont + 1
print("Passaram: ", cont)
-- OUTPUT:
Passaram:  0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-07 16:44:44) 
-- CODE:
cont = 0 # Contador de alunos aprovados
nota = 1.23 # Valor arbitrário para iniciar laco
while (nota >= 0 and nota <= 10):
	nota = float(input("Digite a nota do aluno"))
	if (nota >= 5.0 and nota <= 10):
		cont = cont + 1
print("Passaram: ", cont)
-- EXECUTION TIME:
0.167998
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
Passaram:  0
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
Passaram:  0
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:
Passaram:  0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 16:44:50) 
-- CODE:
cont = 0 # Contador de alunos aprovados
nota = 1.23 # Valor arbitrário para iniciar laco
while (nota >= 0 and nota <= 10):
	nota = float(input("Digite a nota do aluno"))
	if (nota >= 5.0 and nota <= 10):
		cont = cont + 1
print("Passaram: ", cont)
-- OUTPUT:
Passaram:  0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 16:46:18) 
-- CODE:
cont = 0 # Contador de alunos aprovados
nota = 1.23 # Valor arbitrário para iniciar laco
while (nota >= 0 and nota <= 10):
	nota = float(input("Digite a nota do aluno"))
	if (nota >= 5.0 and nota <= 10):
		cont = cont + 1
print("Passaram: ", cont)
-- OUTPUT:
Passaram:  0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 16:46:37) 
-- CODE:
cont = 0 # Contador de alunos aprovados
nota = 99999.23 # Valor arbitrário para iniciar laco
while (nota >= 0 and nota <= 10):
	nota = float(input("Digite a nota do aluno"))
	if (nota >= 5.0 and nota <= 10):
		cont = cont + 1
print("Passaram: ", cont)
-- OUTPUT:
Passaram:  0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 16:46:47) 
-- CODE:
cont = 0 # Contador de alunos aprovados
nota = 9.23 # Valor arbitrário para iniciar laco
while (nota >= 0 and nota <= 10):
	nota = float(input("Digite a nota do aluno"))
	if (nota >= 5.0 and nota <= 10):
		cont = cont + 1
print("Passaram: ", cont)
-- OUTPUT:
Passaram:  0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 16:47:02) 
-- CODE:
cont = 0 # Contador de alunos aprovados
nota = 9.23 # Valor arbitrário para iniciar laco
while (nota >= 0 and nota <= 10):
	nota = float(input("Digite a nota do aluno>  "))
	if (nota >= 5.0 and nota <= 10):
		cont = cont + 1
print("Passaram: ", cont)
-- OUTPUT:
Passaram:  0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 16:47:17) 
-- CODE:
cont = 0 # Contador de alunos aprovados
nota = 3.23 # Valor arbitrário para iniciar laco
while (nota >= 0 and nota <= 10):
	nota = float(input("Digite a nota do aluno>  "))
	if (nota >= 5.0 and nota <= 10):
		cont = cont + 1
print("Passaram: ", cont)
-- OUTPUT:
Passaram:  0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 16:48:41) 
-- CODE:
cont = 0 # Contador de alunos aprovados
nota = 3.23 # Valor arbitrário para iniciar laco
while (nota >= 0 and nota <= 10):
	nota = float(input("Digite a nota do aluno>  "))
	if (nota >= 5.0 and nota <= 10):
		cont = cont + 1
print("Passaram:", cont)
-- OUTPUT:
Passaram: 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 16:48:46) 
-- CODE:
cont = 0 # Contador de alunos aprovados
nota = 3.23 # Valor arbitrário para iniciar laco
while (nota >= 0 and nota <= 10):
	nota = float(input("Digite a nota do aluno>  "))
	if (nota >= 5.0 and nota <= 10):
		cont = cont + 1
print("Passaram:", cont)
-- OUTPUT:
Passaram: 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 16:48:54) 
-- CODE:
cont = 0 # Contador de alunos aprovados
nota = 3.23 # Valor arbitrário para iniciar laco
while (nota >= 0 and nota <= 10):
	nota = float(input("Digite a nota do aluno>  "))
	if (nota >= 5.0 and nota <= 10):
		cont = cont + 1
print("Passaram:",cont)
-- OUTPUT:
Passaram: 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 16:49:06) 
-- CODE:
cont = 0 # Contador de alunos aprovados
nota = 3.23 # Valor arbitrário para iniciar laco
while (nota >= 0 and nota <= 10):
	nota = float(input("Digite a nota do aluno>  "))
	if (nota >= 5.0 and nota <= 10):
		cont = cont + 1
print("Passaram:",cont)
-- OUTPUT:
Passaram: 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 16:49:44) 
-- CODE:
cont = 0 # Contador de alunos aprovados
nota = 3.23 # Valor arbitrário para iniciar laco
while (nota >= 0 and nota <= 10):
	nota = float(input("Digite a nota do aluno>  "))
	if (nota >= 5.0 and nota <= 10):
		cont = cont + 1
print("Passaram:",round(cont,5))
-- OUTPUT:
Passaram: 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 16:50:01) 
-- CODE:
cont = 0 # Contador de alunos aprovados
nota = 3.23 # Valor arbitrário para iniciar laco
while (nota >= 0 and nota <= 10):
	nota = float(input("Digite a nota do aluno>  "))
	if (nota >= 5.0 and nota <= 10):
		cont = cont + 1
print("Passaram:",round(cont,5))
-- OUTPUT:
Passaram: 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 16:50:18) 
-- CODE:
cont = 0 # Contador de alunos aprovados
nota = 3.23 # Valor arbitrário para iniciar laco
while (nota >= 0 and nota <= 10):
	nota = float(input("Digite a nota do aluno>  "))
	if (nota >= 5.0 and nota <= 10):
		cont = cont + 1
print("Passaram:",cont)
-- OUTPUT:
Passaram: 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 16:55:00) 
-- CODE:
cont = 0 # Contador de aprovados
nota = 3.23 # Valor arbitrário para iniciar laco
while ( 0 <= nota <= 0):
	nota = float(input("Digite a nota do aluno>  "))
	if (nota >= 5.0 and nota <= 10):
		cont = cont + 1
print("Passaram:",cont)
-- OUTPUT:
Passaram: 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 16:55:05) 
-- CODE:
cont = 0 # Contador de aprovados
nota = 3.23 # Valor arbitrário para iniciar laco
while ( 0 <= nota <= 0):
	nota = float(input("Digite a nota do aluno>  "))
	if (nota >= 5.0 and nota <= 10):
		cont = cont + 1
print("Passaram:",cont)
-- OUTPUT:
Passaram: 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 16:55:08) 
-- CODE:
cont = 0 # Contador de aprovados
nota = 3.23 # Valor arbitrário para iniciar laco
while ( 0 <= nota <= 0):
	nota = float(input("Digite a nota do aluno>  "))
	if (nota >= 5.0 and nota <= 10):
		cont = cont + 1
print("Passaram:",cont)
-- OUTPUT:
Passaram: 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 16:55:27) 
-- CODE:
cont = 0 # Contador de aprovados
nota = 3.23 # Valor arbitrário para iniciar laco
while (0 <= nota <= 10):
	nota = float(input("Digite a nota do aluno>  "))
	if (nota >= 5.0 and nota <= 10):
		cont = cont + 1
print("Passaram:",cont)
-- OUTPUT:
Passaram: 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 16:55:34) 
-- CODE:
cont = 0 # Contador de aprovados
nota = 3.23 # Valor arbitrário para iniciar laco
while (0 <= nota <= 10):
	nota = float(input("Digite a nota do aluno>  "))
	if (nota >= 5.0 and nota <= 10):
		cont = cont + 1
print("Passaram:",cont)
-- OUTPUT:
Passaram: 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 16:55:45) 
-- CODE:
cont = 0 # Contador de aprovados
nota = 3.23 # Valor arbitrário para iniciar laco
while (0 <= nota <= 10):
	nota = float(input("Digite a nota do aluno>  "))
	if (nota >= 5.0 and nota <= 10):
		cont = cont + 1
print("Passaram:",cont)
-- OUTPUT:
Passaram: 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 16:55:51) 
-- CODE:
cont = 0 # Contador de aprovados
nota = 3.23 # Valor arbitrário para iniciar laco
while (0 <= nota <= 10):
	nota = float(input("Digite a nota do aluno>  "))
	if (nota >= 5.0 and nota <= 10):
		cont = cont + 1
print("Passaram:",cont)
-- OUTPUT:
Passaram: 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 16:55:51) 
-- CODE:
cont = 0 # Contador de aprovados
nota = 3.23 # Valor arbitrário para iniciar laco
while (0 <= nota <= 10):
	nota = float(input("Digite a nota do aluno>  "))
	if (nota >= 5.0 and nota <= 10):
		cont = cont + 1
print("Passaram:",cont)
-- OUTPUT:
Passaram: 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 16:57:54) 
-- CODE:
cont = 0 # Conta no. de alunos
soma = 0 # Acumula soma das notas
nota = float(input("Digite a nota do aluno: "))
while (nota >= 0 and nota <= 10):
	soma = soma + nota # Acumula nota
	cont = cont + 1 # Atualiza no. de notas
	nota = float(input("Digite a nota do aluno: "))
if (cont > 0):
	print(round(soma/cont, 2))
-- OUTPUT:
Passaram: 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 16:58:08) 
-- CODE:
cont = 0 # Conta no. de alunos
soma = 0 # Acumula soma das notas
nota = float(input("Digite a nota do aluno: "))
while (nota >= 0 and nota <= 10):
	soma = soma + nota # Acumula nota
	cont = cont + 1 # Atualiza no. de notas
	nota = float(input("Digite a nota do aluno: "))
if (cont > 0):
	print(round(soma/cont, 2))
-- OUTPUT:
Passaram: 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 16:58:12) 
-- CODE:
cont = 0 # Conta no. de alunos
soma = 0 # Acumula soma das notas
nota = float(input("Digite a nota do aluno: "))
while (nota >= 0 and nota <= 10):
	soma = soma + nota # Acumula nota
	cont = cont + 1 # Atualiza no. de notas
	nota = float(input("Digite a nota do aluno: "))
if (cont > 0):
	print(round(soma/cont, 2))
-- OUTPUT:
Passaram: 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 16:58:18) 
-- CODE:
cont = 0 # Conta no. de alunos
soma = 0 # Acumula soma das notas
nota = float(input("Digite a nota do aluno: "))
while (nota >= 0 and nota <= 10):
	soma = soma + nota # Acumula nota
	cont = cont + 1 # Atualiza no. de notas
	nota = float(input("Digite a nota do aluno: "))
if (cont > 0):
	print(round(soma/cont, 2))
-- OUTPUT:
Passaram: 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 13:38:17) 
-- CODE:
cont = 0 # Conta no. de alunos

soma = 0 # Acumula soma das notas

nota = float(input("Digite a nota do aluno: "))

while (nota >= 0 and nota <= 10):
	soma = soma + nota # Acumula nota
	cont = cont + 1 # Atualiza no. de notas
	nota = float(input("Digite a nota do aluno: "))
if (cont > 0):
	print(round(soma/cont, 2))
-- OUTPUT:
Passaram: 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 13:38:19) 
-- CODE:
cont = 0 # Conta no. de alunos

soma = 0 # Acumula soma das notas

nota = float(input("Digite a nota do aluno: "))

while (nota >= 0 and nota <= 10):
	soma = soma + nota # Acumula nota
	cont = cont + 1 # Atualiza no. de notas
	nota = float(input("Digite a nota do aluno: "))
if (cont > 0):
	print(round(soma/cont, 2))
-- EXECUTION TIME:
0.39914
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:

-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:

-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 13:38:20) 
-- CODE:
cont = 0 # Conta no. de alunos

soma = 0 # Acumula soma das notas

nota = float(input("Digite a nota do aluno: "))

while (nota >= 0 and nota <= 10):
	soma = soma + nota # Acumula nota
	cont = cont + 1 # Atualiza no. de notas
	nota = float(input("Digite a nota do aluno: "))
if (cont > 0):
	print(round(soma/cont, 2))
-- EXECUTION TIME:
0.55023
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:

-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:

-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 13:38:20) 
-- CODE:
cont = 0 # Conta no. de alunos

soma = 0 # Acumula soma das notas

nota = float(input("Digite a nota do aluno: "))

while (nota >= 0 and nota <= 10):
	soma = soma + nota # Acumula nota
	cont = cont + 1 # Atualiza no. de notas
	nota = float(input("Digite a nota do aluno: "))
if (cont > 0):
	print(round(soma/cont, 2))
-- EXECUTION TIME:
0.714238
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:

-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:

-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 13:38:20) 
-- CODE:
cont = 0 # Conta no. de alunos

soma = 0 # Acumula soma das notas

nota = float(input("Digite a nota do aluno: "))

while (nota >= 0 and nota <= 10):
	soma = soma + nota # Acumula nota
	cont = cont + 1 # Atualiza no. de notas
	nota = float(input("Digite a nota do aluno: "))
if (cont > 0):
	print(round(soma/cont, 2))
-- EXECUTION TIME:
0.412842
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:

-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:

-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 13:38:21) 
-- CODE:
cont = 0 # Conta no. de alunos

soma = 0 # Acumula soma das notas

nota = float(input("Digite a nota do aluno: "))

while (nota >= 0 and nota <= 10):
	soma = soma + nota # Acumula nota
	cont = cont + 1 # Atualiza no. de notas
	nota = float(input("Digite a nota do aluno: "))
if (cont > 0):
	print(round(soma/cont, 2))
-- EXECUTION TIME:
0.361119
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:

-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:

-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:50:26) 
-- CODE:
num1 = int(input('Entre com o valor inicial: '))
num2 = int(input('Entre com o valor final: '))
soma = 0
while num1 <= num2:
	if num1 % 2 == 0:
		soma = soma + num1
		num1 = num1 + 1
print('A soma eh', soma)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    num2 = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:50:37) 
-- CODE:
num1 = int(input('Entre com o valor inicial: '))
num2 = int(input('Entre com o valor final: '))
soma = 0
while num1 <= num2:
	if num1 % 2 == 0:
		soma = soma + num1
		num1 = num1 + 1
	print('A soma eh', soma)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    num2 = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:50:52) 
-- CODE:
num1 = int(input('Entre com o valor inicial: '))
num2 = int(input('Entre com o valor final: '))
soma = 0
while num1 <= num2:
	if num1 % 2 == 0:
		soma = soma + num1
		num1 = num1 + 1
	print('A soma eh', soma)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    num2 = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:50:53) 
-- CODE:
num1 = int(input('Entre com o valor inicial: '))
num2 = int(input('Entre com o valor final: '))
soma = 0
while num1 <= num2:
	if num1 % 2 == 0:
		soma = soma + num1
		num1 = num1 + 1
	print('A soma eh', soma)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    num2 = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:51:05) 
-- CODE:
num1 = int(input('Entre com o valor inicial: '))
num2 = int(input('Entre com o valor final: '))
soma = 0
while num1 <= num2:
	if num1 % 2 == 0:
		soma = soma + num1
	num1 = num1 + 1
print('A soma eh', soma)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    num2 = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:52:02) 
-- CODE:
num1 = int(input('Entre com o valor inicial: '))
num2 = int(input('Entre com o valor final: '))
soma = 0
while num1 <= num2:
	if num1 % 2 == 0:
		soma = soma + num1
	num1 = num1 + 1
print('A soma eh', soma)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    num2 = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 19:03:06) 
-- CODE:
i = 1 
while True:
	i = i + 1
print(i)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    num2 = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 19:05:37) 
-- CODE:
for variavel in range(6):
print(variavel) 
-- ERROR:
File "XXXX", line 2
    print(variavel) 
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 19:05:45) 
-- CODE:
for variavel in range(6):
	print(variavel) 
-- OUTPUT:
0
1
2
3
4
5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 19:08:16) 
-- CODE:
for variavel in range(6):
	print(variavel) 
-- OUTPUT:
0
1
2
3
4
5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 19:08:26) 
-- CODE:
for variavel in range(6):
print(variavel) 
	
-- ERROR:
File "XXXX", line 2
    print(variavel) 
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 19:08:27) 
-- CODE:
for variavel in range(6):
print(variavel) 
	
-- ERROR:
File "XXXX", line 2
    print(variavel) 
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 19:08:27) 
-- CODE:
for variavel in range(6):
print(variavel) 
	
-- ERROR:
File "XXXX", line 2
    print(variavel) 
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 16:36:16) 
-- CODE:
n = int(input("repeticao do termo: "))
soma = 0
i = 0
expoente = 0
sinal = 1
while(i<n):
	d = ((2*i)+1)*(3**expoente)
	x = 12**(1/2)*(sinal*1)/d
	soma = soma + x 
	i= i+1
	sinal = sinal *(-1)
	expoente = expoente + 1
print(round(soma, 8))
	
-- EXECUTION TIME:
0.964698
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
3.14159265
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
3.14159265
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:
3.14159266
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 16:36:32) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 3

while (cont < valor):
	# Denominador
	x = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

	
-- EXECUTION TIME:
0.771309
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:

-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:

-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:
Informe o valor de aproximacoes:
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 16:38:23) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 3

while (cont < valor):
	# Denominador
	x = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

	
-- ERROR:
File "XXXX", line 2
    print(variavel) 
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 16:38:53) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 3

while (cont < valor):
	# Denominador
	x = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))


	
-- EXECUTION TIME:
0.840931
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
3.14159275
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
Informe o valor de aproximacoes: 3.14161607
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:
Informe o valor de aproximacoes: 3.14151899
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 16:38:54) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 3

while (cont < valor):
	# Denominador
	x = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))


	
-- OUTPUT:
3.14159275
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 16:39:27) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 3

while (cont < valor):
	# Denominador
	x = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))


	
-- EXECUTION TIME:
0.820312
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
3.14159275
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
3.14161607
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:
3.14151899
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 16:39:40) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 3

while (cont < valor):
	# Denominador
	x = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))


	
-- EXECUTION TIME:
1.37267
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
3.14159275
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
3.14161607
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:
3.14161607
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 16:39:41) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 3

while (cont < valor):
	# Denominador
	x = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))


	
-- EXECUTION TIME:
4.05025
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
3.14159275
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
3.14161607
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:
3.14151899
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 16:39:41) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 3

while (cont < valor):
	# Denominador
	x = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))


	
-- EXECUTION TIME:
5.01959
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
3.14161607
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
3.14161607
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:
3.14151899
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 16:39:42) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 3

while (cont < valor):
	# Denominador
	x = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))


	
-- EXECUTION TIME:
5.302
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
3.14161607
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
3.14151899
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:
3.14151899
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 16:39:42) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 3

while (cont < valor):
	# Denominador
	x = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))


	
-- EXECUTION TIME:
5.15926
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
3.14161607
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
3.14161607
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 16:39:42) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 3

while (cont < valor):
	# Denominador
	x = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))


	
-- EXECUTION TIME:
6.31978
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
3.14161607
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
3.14151899
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 16:39:54) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 3

while (cont < valor):
	# Denominador
	x = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))


	
-- OUTPUT:
3.14159275
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 16:40:07) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 4

while (cont < valor):
	# Denominador
	x = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))


	
-- EXECUTION TIME:
0.704036
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
4.14159275
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
4.14161607
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:
4.14151899
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 16:40:08) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 4

while (cont < valor):
	# Denominador
	x = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))


	
-- OUTPUT:
4.14159275
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 16:40:30) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 4

while (cont < valor):
	# Denominador
	x = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))


	
-- EXECUTION TIME:
1.43953
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
4.14159275
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
4.14161607
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:
4.14151899
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 16:40:31) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 4

while (cont < valor):
	# Denominador
	x = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))


	
-- EXECUTION TIME:
2.80249
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
4.14159275
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
4.14161607
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:
4.14151899
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 16:40:31) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 4

while (cont < valor):
	# Denominador
	x = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))


	
-- EXECUTION TIME:
3.15143
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
4.14161607
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
4.14161607
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:
4.14151899
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 16:40:31) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 4

while (cont < valor):
	# Denominador
	x = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))


	
-- EXECUTION TIME:
4.02943
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
4.14161607
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
4.14151899
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 16:41:40) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 4

while (cont < valor):
	# Denominador
	x = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))


	
-- OUTPUT:
4.14159275
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 16:41:55) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 4

while (cont < valor):
	# Denominador
	x = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,1))


	
-- OUTPUT:
4.1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 16:42:08) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 4

while (cont < valor):
	# Denominador
	x = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,0))


	
-- OUTPUT:
4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 16:42:16) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 4

while (cont < valor):
	# Denominador
	x = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,0))


	
-- EXECUTION TIME:
0.824552
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
4.0
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
4.0
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:
4.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 16:42:32) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 3

while (cont < valor):
	# Denominador
	x = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))


	
-- EXECUTION TIME:
0.756778
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
3.14159275
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
3.14161607
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:
3.14159275
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 16:42:37) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 3

while (cont < valor):
	# Denominador
	x = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))


	
-- EXECUTION TIME:
1.43937
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
3.14159275
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
3.14161607
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:
3.14151899
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 16:42:38) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 3

while (cont < valor):
	# Denominador
	x = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))


	
-- EXECUTION TIME:
2.63223
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1716/2503/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 16:42:38) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 3

while (cont < valor):
	# Denominador
	x = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))


	
-- EXECUTION TIME:
2.50285
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
3.14161607
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
3.14151899
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 16:42:41) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 0

# Variavel acumuladora
aprox = 3

while (cont < valor):
	# Denominador
	x = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))


	
-- EXECUTION TIME:
0.671254
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1716/2503/main.py", line 14, in <module>
    aprox = aprox + (-1) ** (cont + 1) * 4 / x
ZeroDivisionError: division by zero

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 16:42:41) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 0

# Variavel acumuladora
aprox = 3

while (cont < valor):
	# Denominador
	x = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))


	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    aprox = aprox + (-1) ** (cont + 1) * 4 / x
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 16:42:52) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 3

while (cont < valor):
	# Denominador
	x = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))


	
-- OUTPUT:
3.14159275
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 16:43:07) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 4

while (cont < valor):
	# Denominador
	x = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))


	
-- EXECUTION TIME:
0.739461
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
4.14159275
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
4.14161607
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:
4.14151899
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 16:46:02) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 4

while (cont < valor):
	# Denominador
	x = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))


	
-- EXECUTION TIME:
0.857746
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
4.14159275
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
4.14161607
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:
4.14151899
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 16:50:55) 
-- CODE:
valor = int(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 4

while (cont < valor):
	# Denominador
	x = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))


	
-- EXECUTION TIME:
0.800422
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
4.14159275
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
4.14161607
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:
4.14151899
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 16:51:03) 
-- CODE:
valor = int(input("Informe o valor de aproximacoes: "))

# Variavel contadora
i=0
cont = 1

# Variavel acumuladora
aprox = 4

while (cont < valor):
	# Denominador
	x = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))


	
-- EXECUTION TIME:
0.742374
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
4.14159275
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
4.14161607
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:
4.14151899
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 16:51:11) 
-- CODE:
valor = int(input("Informe o valor de aproximacoes: "))

# Variavel contadora
i=0
cont = 1

# Variavel acumuladora
aprox = 4

while (cont < valor):
	# Denominador
	x = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))


	
-- EXECUTION TIME:
1.09488
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
4.14159275
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
4.14161607
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:
4.14151899
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 16:51:12) 
-- CODE:
valor = int(input("Informe o valor de aproximacoes: "))

# Variavel contadora
i=0
cont = 1

# Variavel acumuladora
aprox = 4

while (cont < valor):
	# Denominador
	x = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))


	
-- EXECUTION TIME:
2.24265
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
4.14159275
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
4.14151899
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:
4.14151899
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 16:51:12) 
-- CODE:
valor = int(input("Informe o valor de aproximacoes: "))

# Variavel contadora
i=0
cont = 1

# Variavel acumuladora
aprox = 4

while (cont < valor):
	# Denominador
	x = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))


	
-- EXECUTION TIME:
2.11331
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
4.14161607
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
4.14151899
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:
4.14151899
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 16:53:24) 
-- CODE:
valor = int(input("Informe o valor de aproximacoes: "))

# Variavel contadora
i=0
pi = 0


while (i< valor):
	# Denominador
	pi = pi + (4/(2*i +1))*(-1)**1
	i=i+1
print (round(pi,8))


	
-- EXECUTION TIME:
0.828198
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
-13.75233433
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
-10.10927707
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:
-9.34349054
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 16:54:05) 
-- CODE:
n = int(input("Informe o valor de aproximacoes: "))

# Variavel contadora
i=0
pi=0

while (i< n):
	pi = pi + (4/(2*i +1))*(-1)**1
	i=i+1
print (round(pi,8))


	
-- EXECUTION TIME:
0.787574
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
-13.75233433
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
-10.10927707
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:
-9.34349054
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 16:54:12) 
-- CODE:
n = int(input("Informe o valor de aproximacoes: "))

# Variavel contadora
i=0
pi=0

while (i< n):
	pi = pi + (4/(2*i +1))*(-1)**1
	i=i+1
print (round(pi,8))


	
-- OUTPUT:
-13.75233433
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 16:55:23) 
-- CODE:
n = int(input("Informe o valor de aproximacoes: "))

# Variavel contadora
i=0
pi=0

while (i< n):
	pi = pi + (4/(2*i))*(-1)**1
	i=i+1
print (round(pi,8))


	
-- EXECUTION TIME:
1.06342
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1716/2503/main.py", line 8, in <module>
    pi = pi + (4/(2*i))*(-1)**1
ZeroDivisionError: division by zero

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 16:55:23) 
-- CODE:
n = int(input("Informe o valor de aproximacoes: "))

# Variavel contadora
i=0
pi=0

while (i< n):
	pi = pi + (4/(2*i))*(-1)**1
	i=i+1
print (round(pi,8))


	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    pi = pi + (4/(2*i))*(-1)**1
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 16:55:23) 
-- CODE:
n = int(input("Informe o valor de aproximacoes: "))

# Variavel contadora
i=0
pi=0

while (i< n):
	pi = pi + (4/(2*i))*(-1)**1
	i=i+1
print (round(pi,8))


	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    pi = pi + (4/(2*i))*(-1)**1
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 16:55:26) 
-- CODE:
n = int(input("Informe o valor de aproximacoes: "))

# Variavel contadora
i=0
pi=0

while (i< n):
	pi = pi + (4/(2*i))*(-1)**1
	i=i+1
print (round(pi,8))


	
-- EXECUTION TIME:
2.53511
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1716/2503/main.py", line 8, in <module>
    pi = pi + (4/(2*i))*(-1)**1
ZeroDivisionError: division by zero

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 16:55:26) 
-- CODE:
n = int(input("Informe o valor de aproximacoes: "))

# Variavel contadora
i=0
pi=0

while (i< n):
	pi = pi + (4/(2*i))*(-1)**1
	i=i+1
print (round(pi,8))


	
-- EXECUTION TIME:
1.91532
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1716/2503/main.py", line 8, in <module>
    pi = pi + (4/(2*i))*(-1)**1
ZeroDivisionError: division by zero

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 16:55:28) 
-- CODE:
n = int(input("Informe o valor de aproximacoes: "))

# Variavel contadora
i=0
pi=0

while (i< n):
	pi = pi + (4/(2*i))*(-1)**1
	i=i+1
print (round(pi,8))


	
-- EXECUTION TIME:
4.68912
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1716/2503/main.py", line 8, in <module>
    pi = pi + (4/(2*i))*(-1)**1
ZeroDivisionError: division by zero

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 16:55:29) 
-- CODE:
n = int(input("Informe o valor de aproximacoes: "))

# Variavel contadora
i=0
pi=0

while (i< n):
	pi = pi + (4/(2*i))*(-1)**1
	i=i+1
print (round(pi,8))


	
-- EXECUTION TIME:
4.87237
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1716/2503/main.py", line 8, in <module>
    pi = pi + (4/(2*i))*(-1)**1
ZeroDivisionError: division by zero

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 16:55:29) 
-- CODE:
n = int(input("Informe o valor de aproximacoes: "))

# Variavel contadora
i=0
pi=0

while (i< n):
	pi = pi + (4/(2*i))*(-1)**1
	i=i+1
print (round(pi,8))


	
-- EXECUTION TIME:
4.63535
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1716/2503/main.py", line 8, in <module>
    pi = pi + (4/(2*i))*(-1)**1
ZeroDivisionError: division by zero

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 16:55:32) 
-- CODE:
n = int(input("Informe o valor de aproximacoes: "))

# Variavel contadora
i=0
pi=0

while (i< n):
	pi = pi + (4/(2*i))*(-1)**1
	i=i+1
print (round(pi,8))


	
-- EXECUTION TIME:
3.83576
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1716/2503/main.py", line 8, in <module>
    pi = pi + (4/(2*i))*(-1)**1
ZeroDivisionError: division by zero

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 16:55:33) 
-- CODE:
n = int(input("Informe o valor de aproximacoes: "))

# Variavel contadora
i=0
pi=0

while (i< n):
	pi = pi + (4/(2*i))*(-1)**1
	i=i+1
print (round(pi,8))


	
-- EXECUTION TIME:
2.83057
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1716/2503/main.py", line 8, in <module>
    pi = pi + (4/(2*i))*(-1)**1
ZeroDivisionError: division by zero

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 16:55:33) 
-- CODE:
n = int(input("Informe o valor de aproximacoes: "))

# Variavel contadora
i=0
pi=0

while (i< n):
	pi = pi + (4/(2*i))*(-1)**1
	i=i+1
print (round(pi,8))


	
-- EXECUTION TIME:
2.19163
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1716/2503/main.py", line 8, in <module>
    pi = pi + (4/(2*i))*(-1)**1
ZeroDivisionError: division by zero

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 16:56:15) 
-- CODE:
n = int(input("Informe o valor de aproximacoes: "))

# Variavel contadora
i=0
pi=0

while (i< n):
	pi = pi + (4/(2*i))*(-1)**1
	i=i+1
print (round(pi,8))


	
-- EXECUTION TIME:
0.917313
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1716/2503/main.py", line 8, in <module>
    pi = pi + (4/(2*i))*(-1)**1
ZeroDivisionError: division by zero

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 16:56:16) 
-- CODE:
n = int(input("Informe o valor de aproximacoes: "))

# Variavel contadora
i=0
pi=0

while (i< n):
	pi = pi + (4/(2*i))*(-1)**1
	i=i+1
print (round(pi,8))


	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    pi = pi + (4/(2*i))*(-1)**1
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 16:56:49) 
-- CODE:
n = int(input("Informe o valor de aproximacoes: "))

# Variavel contadora
i=0
pi=0

while (i< n):
	pi = pi + (4/(2*i+1))*(-1)**1
	i=i+1
print (round(pi,8))


	
-- EXECUTION TIME:
0.916859
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
-13.75233433
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
-10.10927707
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:
Informe o valor de aproximacoes: -9.34349054
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 16:56:50) 
-- CODE:
n = int(input("Informe o valor de aproximacoes: "))

# Variavel contadora
i=0
pi=0

while (i< n):
	pi = pi + (4/(2*i+1))*(-1)**1
	i=i+1
print (round(pi,8))


	
-- OUTPUT:
-13.75233433
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 16:57:36) 
-- CODE:
n = int(input("Informe o valor de aproximacoes: "))

# Variavel contadora
i=0
pi=0

while (i< n):
	pi = pi + (4/(2*i+1))*(1)**1
	i=i+1
print (round(pi,8))


	
-- EXECUTION TIME:
0.818572
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
13.75233433
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
10.10927707
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:
9.34349054
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 16:57:49) 
-- CODE:
n = int(input("Informe o valor de aproximacoes: "))

# Variavel contadora
i=0
pi=0

while (i< n):
	pi = pi + (4/(2*i+1))*(-1)**1
	i=i+1
print (round(pi,8))


	
-- OUTPUT:
-13.75233433
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 16:58:25) 
-- CODE:
n = int(input("Informe o valor de aproximacoes: "))

# Variavel contadora
i=0
pi=0

while (i< n):
	pi = pi + (4/(2*i+1))*(-1)**1
	i=i-1
print (round(pi,8))


	
-- OUTPUT:
-13.75233433
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 17:08:36) 
-- CODE:
n = int(input("Informe o valor de aproximacoes: "))

# Variavel contadora
i=0
pi=0

while (i< n):
	pi = pi + (4/(2*i+1))*(-1)**1
	i=i-1
print (round(pi,8))


	
-- EXECUTION TIME:
613.632
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:

-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
OCI runtime exec failed: exec failed: cannot exec a container that has stopped: unknown
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 17:08:42) 
-- CODE:
n = int(input("Informe o valor de aproximacoes: "))

i=0
pi=0

while (i< n):
	pi = pi + (4/(2*i+1))*(-1)**1
	i=i+1
print (round(pi,8))


	
-- EXECUTION TIME:
0.858076
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
-13.75233433
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
-10.10927707
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:
-9.34349054
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 17:08:49) 
-- CODE:
n = int(input("Informe o valor de aproximacoes: "))

i=0
pi=0

while (i< n):
	pi = pi + (4/(2*i+1))*(-1)**1
	i=i+1
print (round(pi,8))


	
-- OUTPUT:
-13.75233433
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 17:09:09) 
-- CODE:
n = float(input("Informe o valor de aproximacoes: "))

i=0
pi=0

while (i< n):
	pi = pi + (4/(2*i+1))*(-1)**1
	i=i+1
print (round(pi,8))


	
-- OUTPUT:
-13.75233433
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 17:09:17) 
-- CODE:
n = float(input("Informe o valor de aproximacoes: "))

i=0
pi=0

while (i< n):
	pi = pi + (4/(2*i+1))*(-1)**1
	i=i+1
print (round(pi,8))


	
-- EXECUTION TIME:
0.695549
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
-13.75233433
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
-10.10927707
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:
-9.34349054
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 17:09:33) 
-- CODE:
n=int(input("Informe o valor de aproximacoes: "))

i=0
pi=0

while (i< n):
	pi = pi + (4/(2*i+1))*(-1)**1
	i=i+1
print (round(pi,8))


	
-- OUTPUT:
-13.75233433
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 17:09:46) 
-- CODE:
n=int(input("Informe o valor de aproximacoes: "))

i=0
pi=0

while (i< n):
	pi = pi + (4/(2*i+1))*(-1)**1
	i=i+1
print (round(-pi,8))


	
-- EXECUTION TIME:
0.76829
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
13.75233433
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
10.10927707
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:
9.34349054
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 17:09:50) 
-- CODE:
n=int(input("Informe o valor de aproximacoes: "))

i=0
pi=0

while (i< n):
	pi = pi + (4/(2*i+1))*(-1)**1
	i=i+1
print (round(pi,8))


	
-- OUTPUT:
-13.75233433
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 17:10:23) 
-- CODE:
n=int(input("Informe o valor de aproximacoes: "))

i=0
pi=0

while (i< n):
	pi = pi + (-4/(2*i+1))*(-1)**1
	i=i+1
print (round(pi,8))


	
-- EXECUTION TIME:
0.677827
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
13.75233433
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
10.10927707
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:
9.34349054
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 17:11:24) 
-- CODE:
n=int(input("Informe o valor de aproximacoes: "))

i=0
pi=0

while (i< n):
	pi = pi + (4/(2*i+1))*(-1)**i
	i=i+1
print (round(pi,8))


	
-- EXECUTION TIME:
0.745334
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
3.13423981
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
3.09616153
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:
3.20818565
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
