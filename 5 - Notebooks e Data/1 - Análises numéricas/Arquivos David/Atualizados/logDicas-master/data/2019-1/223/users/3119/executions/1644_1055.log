== TEST (2019-04-04 20:04:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*

#Entradas
v = float(input("Qual a velocidade inicial? "))
a = radians(float(input("Qual o angulo? ")))
d = float(input("Distancia entres os dois: "))

g = 9.8

R = (v)**2 * sin(2*a)/g

if(abs(R - d <= 0.1)):
	mensagem = "sim"
else:
	mensagem = "nao"
-- OUTPUT:
INSUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 20:05:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*

#Entradas
v = float(input("Qual a velocidade inicial? "))
a = radians(float(input("Qual o angulo? ")))
d = float(input("Distancia entres os dois: "))

g = 9.8

R = (v)**2 * sin(2*a)/g

if(abs(R - d <= 0.1)):
	mensagem = "sim"
else:
	mensagem = "nao"
print(mensagem)	
-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 20:05:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*

#Entradas
v = float(input("Qual a velocidade inicial? "))
a = radians(float(input("Qual o angulo? ")))
d = float(input("Distancia entres os dois: "))

g = 9.8

R = (v)**2 * sin(2*a)/g

if(abs(R - d <= 0.1)):
	mensagem = "sim"
else:
	mensagem = "nao"
print(mensagem)	
-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 20:06:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*

#Entradas
v = float(input("Qual a velocidade inicial? "))
a = radians(float(input("Qual o angulo? ")))
d = float(input("Distancia entres os dois: "))

g = 9.8

R = ((v**2) * sin(2*a))/g

if(abs(R - d <= 0.1)):
	mensagem = "sim"
else:
	mensagem = "nao"
print(mensagem)	
-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-04 20:06:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*

#Entradas
v = float(input("Qual a velocidade inicial? "))
a = radians(float(input("Qual o angulo? ")))
d = float(input("Distancia entres os dois: "))

g = 9.8

R = ((v**2) * sin(2*a))/g

if(abs(R - d <= 0.1)):
	mensagem = "sim"
else:
	mensagem = "nao"
print(mensagem)	
-- EXECUTION TIME:
0.22507
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
sim
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 20:06:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*

#Entradas
v = float(input("Qual a velocidade inicial? "))
a = radians(float(input("Qual o angulo? ")))
d = float(input("Distancia entres os dois: "))

g = 9.8

R = ((v**2) * sin(2*a))/g

if(abs(R - d <= 0.1)):
	mensagem = "sim"
else:
	mensagem = "nao"
print(mensagem)	
-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 20:07:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*

#Entradas
v = float(input("Qual a velocidade inicial? "))
a = radians(float(input("Qual o angulo? ")))
d = float(input("Distancia entres os dois: "))

g = 9.8

R = ((v**2) * sin(2*a))/g

if(abs(R - d) <= 0.1):
	mensagem = "sim"
else:
	mensagem = "nao"
print(mensagem)	
-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-04 20:07:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*

#Entradas
v = float(input("Qual a velocidade inicial? "))
a = radians(float(input("Qual o angulo? ")))
d = float(input("Distancia entres os dois: "))

g = 9.8

R = ((v**2) * sin(2*a))/g

if(abs(R - d) <= 0.1):
	mensagem = "sim"
else:
	mensagem = "nao"
print(mensagem)	
-- EXECUTION TIME:
0.216165
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
