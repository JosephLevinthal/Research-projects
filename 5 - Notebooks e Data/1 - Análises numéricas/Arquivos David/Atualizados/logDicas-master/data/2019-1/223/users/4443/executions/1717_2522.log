== TEST (2019-05-19 20:00:26) 
-- CODE:
n = int(input("digite um numero inteiro positivo: "))

soma = 1+1/3
t = 1
while(t < n):
	parcela = 1+ (t/(2*t+1))
	soma = soma*parcela
	t = t+1
	
pi = 2*soma
print(round(soma, 10))
-- OUTPUT:
34.7034616316
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 20:01:31) 
-- CODE:
n = int(input("digite um numero inteiro positivo: "))

soma = 1+(1/3)
t = 1
while(t < n):
	parcela = 1+ (t/(2*t+1))
	soma = soma*parcela
	t = t+1
	
pi = 2*soma
print(round(soma, 10))
-- OUTPUT:
34.7034616316
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 20:02:06) 
-- CODE:
n = int(input("digite um numero inteiro positivo: "))

soma = 1+(1/3)
t = 1
while(t < n):
	parcela = 1+ (t/(2*t+1))
	soma = soma*parcela
	t = t+1
	
pi = 2*soma
print(round(pi, 10))
-- OUTPUT:
69.4069232631
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 20:02:19) 
-- CODE:
n = int(input("digite um numero inteiro positivo: "))

soma = 1+(1/3)
t = 1
while(t < n):
	parcela = 1+ (t/(2*t+1))
	soma = soma*parcela
	t = t+1
	
pi = 2*soma
print(round(pi, 10))
-- OUTPUT:
69.4069232631
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 20:25:59) 
-- CODE:
n = int(input("digite um numero inteiro positivo: "))

soma = 1.5
t = 1
while(t < n):
	parcela = 1 + (t/(2*t+1))
	soma = soma*parcela
	t = t+1
	
pi = 2*soma
print(round(pi, 10))
-- OUTPUT:
78.082788671
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 20:27:29) 
-- CODE:
n = int(input("digite um numero inteiro positivo: "))

soma = 1.5
t = 0
while(t < n):
	parcela = 1 + (t/(2*t+1))
	soma = soma*parcela
	t = t+1
	
pi = 2*soma
print(round(pi, 10))
-- OUTPUT:
78.082788671
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 20:27:36) 
-- CODE:
n = int(input("digite um numero inteiro positivo: "))

soma = 1.5
t = 0
while(t < n):
	parcela = 1 + (t/(2*t+1))
	soma = soma*parcela
	t = t+1
	
pi = 2*soma
print(round(pi, 10))
-- OUTPUT:
78.082788671
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 20:32:10) 
-- CODE:
n = int(input("digite um numero inteiro positivo: "))

soma = 1.5
t = n
while(t > 1):
	parcela = 1 + (t/(2*t+1))
	soma = soma*parcela
	t = t-1
	
pi = 2*soma
print(round(pi, 10))
-- OUTPUT:
86.4488017429
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 20:32:18) 
-- CODE:
n = int(input("digite um numero inteiro positivo: "))

soma = 1.5
t = n
while(t > 1):
	parcela = 1 + (t/(2*t+1))
	soma = soma*parcela
	t = t-1
	
pi = 2*soma
print(round(pi, 10))
-- OUTPUT:
86.4488017429
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 20:32:43) 
-- CODE:
n = int(input("digite um numero inteiro positivo: "))

soma = 1.5
t = n
while(t > 1):
	parcela = 1 + (t/(2*t+1))
	soma = soma*parcela
	t = t-1
	print(parcela)
	print(soma)
	print(t)
	
pi = 2*soma
print(round(pi, 10))
-- OUTPUT:
1.4761904761904763
2.2142857142857144
9
1.4736842105263157
3.263157894736842
8
1.4705882352941178
4.798761609907121
7
1.4666666666666668
7.038183694530445
6
1.4615384615384617
10.286576168929113
5
1.4545454545454546
14.962292609351437
4
1.4444444444444444
21.612200435729854
3
1.4285714285714286
30.874572051042648
2
1.4
43.22440087145971
1
86.4488017429
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 20:32:50) 
-- CODE:
n = int(input("digite um numero inteiro positivo: "))

soma = 1.5
t = n
while(t > 1):
	parcela = 1 + (t/(2*t+1))
	soma = soma*parcela
	t = t-1
	print(parcela)
	print(soma)
	print(t)
	
pi = 2*soma
print(round(pi, 10))
-- OUTPUT:
1.4761904761904763
2.2142857142857144
9
1.4736842105263157
3.263157894736842
8
1.4705882352941178
4.798761609907121
7
1.4666666666666668
7.038183694530445
6
1.4615384615384617
10.286576168929113
5
1.4545454545454546
14.962292609351437
4
1.4444444444444444
21.612200435729854
3
1.4285714285714286
30.874572051042648
2
1.4
43.22440087145971
1
86.4488017429
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 21:09:38) 
-- CODE:
n = int(input("digite um numero inteiro positivo: "))

soma = 1.5
t = n

while(t > 1):
	parcela = 1 + (t-1/(2*t-1))
	soma = soma*parcela
	t = t-1
	print(parcela)
	print(soma)
	print(t)
	
pi = 2*soma
print(round(pi, 10))
-- OUTPUT:
10.947368421052632
16.42105263157895
9
9.941176470588236
163.24458204334368
8
8.933333333333334
1458.3182662538702
7
7.923076923076923
11554.367801857587
6
6.909090909090909
79830.17754010696
5
5.888888888888889
470111.04551396327
4
4.857142857142858
2283396.5067821075
3
3.8
8676906.725772008
2
2.666666666666667
23138417.935392026
1
46276835.87078405
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 21:23:19) 
-- CODE:
n = int(input("digite um numero inteiro positivo: "))

soma = 1.5
t = n

while(t > 1):
	parcela = 1 + ((t-1)/(2*t-1))
	soma = soma*parcela
	t = t-1
	print(parcela)
	print(soma)
	print(t)
	
pi = 2*soma
print(round(pi, 10))
-- OUTPUT:
1.4736842105263157
2.2105263157894735
9
1.4705882352941178
3.2507739938080493
8
1.4666666666666668
4.767801857585139
7
1.4615384615384617
6.968325791855205
6
1.4545454545454546
10.135746606334843
5
1.4444444444444444
14.640522875816995
4
1.4285714285714286
20.915032679738566
3
1.4
29.28104575163399
2
1.3333333333333333
39.04139433551198
1
78.082788671
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 21:24:09) 
-- CODE:
n = int(input("digite um numero inteiro positivo: "))

soma = 1.5
t = n

while(t > 1):
	parcela = 1 + ((t-1)/(2*t-1))
	soma = soma*parcela
	t = t-1
	print(parcela)
	print(soma)
	print(t)
pi = 2*soma
print(round(pi, 10))
-- OUTPUT:
1.4736842105263157
2.2105263157894735
9
1.4705882352941178
3.2507739938080493
8
1.4666666666666668
4.767801857585139
7
1.4615384615384617
6.968325791855205
6
1.4545454545454546
10.135746606334843
5
1.4444444444444444
14.640522875816995
4
1.4285714285714286
20.915032679738566
3
1.4
29.28104575163399
2
1.3333333333333333
39.04139433551198
1
78.082788671
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 21:24:40) 
-- CODE:
n = int(input("digite um numero inteiro positivo: "))

soma = 1.5
t = n

while(t > 1):
	parcela = 1 + ((t-1)/(2*t-1))
	soma = soma*parcela
	t = t-1
	print(parcela)
	print(soma)
	print(t)
pi = soma
print(round(pi, 10))
-- OUTPUT:
1.4736842105263157
2.2105263157894735
9
1.4705882352941178
3.2507739938080493
8
1.4666666666666668
4.767801857585139
7
1.4615384615384617
6.968325791855205
6
1.4545454545454546
10.135746606334843
5
1.4444444444444444
14.640522875816995
4
1.4285714285714286
20.915032679738566
3
1.4
29.28104575163399
2
1.3333333333333333
39.04139433551198
1
39.0413943355
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 21:28:02) 
-- CODE:
n = int(input("digite um numero inteiro positivo: "))

soma = 1.15
t = n

while(t > 1):
	parcela = 1 + ((t-1)/(2*t-1))
	soma = soma*parcela
	t = t-1
	print(parcela)
	print(soma)
	print(t)
pi = soma
print(round(pi, 10))
-- OUTPUT:
1.4736842105263157
1.6947368421052629
9
1.4705882352941178
2.4922600619195046
8
1.4666666666666668
3.6553147574819405
7
1.4615384615384617
5.34238310708899
6
1.4545454545454546
7.770739064856713
5
1.4444444444444444
11.224400871459697
4
1.4285714285714286
16.034858387799567
3
1.4
22.448801742919393
2
1.3333333333333333
29.931735657225857
1
29.9317356572
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 21:28:39) 
-- CODE:
n = int(input("digite um numero inteiro positivo: "))

soma = 1.15
t = n

while(t > 1):
	parcela = 1 + ((t-1)/(2*t-1))
	soma = soma*parcela
	t = t-1
	print(parcela)
	print(soma)
	print(t)
pi = 2*soma
print(round(pi, 10))
-- OUTPUT:
1.4736842105263157
1.6947368421052629
9
1.4705882352941178
2.4922600619195046
8
1.4666666666666668
3.6553147574819405
7
1.4615384615384617
5.34238310708899
6
1.4545454545454546
7.770739064856713
5
1.4444444444444444
11.224400871459697
4
1.4285714285714286
16.034858387799567
3
1.4
22.448801742919393
2
1.3333333333333333
29.931735657225857
1
59.8634713145
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 21:28:51) 
-- CODE:
n = int(input("digite um numero inteiro positivo: "))

soma = 1.15
t = n

while(t > 1):
	parcela = 1 + ((t-1)/(2*t-1))
	soma = soma*parcela
	t = t-1
	print(parcela)
	print(soma)
	print(t)
pi = 2*soma
print(round(pi, 10))
-- OUTPUT:
1.4736842105263157
1.6947368421052629
9
1.4705882352941178
2.4922600619195046
8
1.4666666666666668
3.6553147574819405
7
1.4615384615384617
5.34238310708899
6
1.4545454545454546
7.770739064856713
5
1.4444444444444444
11.224400871459697
4
1.4285714285714286
16.034858387799567
3
1.4
22.448801742919393
2
1.3333333333333333
29.931735657225857
1
59.8634713145
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 22:52:40) 
-- CODE:
n = int(input("digite um numero inteiro positivo: "))

soma = 1.5
t = n

while(t > 1):
	parcela = (((t-1)*soma)/(2*t-1))+1
	soma = soma*parcela
	t = t-1
	print(parcela)
	print(soma)
	print(t)
pi = 2*soma
print(round(pi, 10))
-- OUTPUT:
1.7105263157894737
2.5657894736842106
9
2.2074303405572753
5.663801531693009
8
3.6431073814567374
20.633837167216775
7
10.523309461792358
217.13625389485512
6
99.69829722493414
21648.114779118026
5
9622.384346274679
208306480.77694282
4
89274207.04726121
1.8596395894167132e+16
3
7438558357666854.0
1.3833037610103849e+32
2
4.611012536701283e+31
6.3784309840849204e+63
1
1.2756861968169841e+64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 22:52:49) 
-- CODE:
n = int(input("digite um numero inteiro positivo: "))

soma = 1.5
t = n

while(t > 1):
	parcela = (((t-1)*soma)/(2*t-1))+1
	soma = soma*parcela
	t = t-1
	print(parcela)
	print(soma)
	print(t)
pi = 2*soma
print(round(pi, 10))
-- OUTPUT:
1.7105263157894737
2.5657894736842106
9
2.2074303405572753
5.663801531693009
8
3.6431073814567374
20.633837167216775
7
10.523309461792358
217.13625389485512
6
99.69829722493414
21648.114779118026
5
9622.384346274679
208306480.77694282
4
89274207.04726121
1.8596395894167132e+16
3
7438558357666854.0
1.3833037610103849e+32
2
4.611012536701283e+31
6.3784309840849204e+63
1
1.2756861968169841e+64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 22:56:11) 
-- CODE:
n = int(input("digite um numero inteiro positivo: "))

soma = 1.5
t = n

while(t > 1):
	parcela = ((t*soma)/(2*t+1))+1
	soma = soma*parcela
	t = t-1
	print(parcela)
	print(soma)
	print(t)
pi = 2*soma
print(round(pi, 10))
-- OUTPUT:
1.7142857142857144
2.5714285714285716
9
2.2180451127819554
5.7035445757250285
8
3.684020976811778
21.011977859152037
7
10.805589667604284
227.04681085078323
6
105.79083577728457
24019.471880471403
5
10918.941763850638
262267214.66131523
4
116563207.5161401
3.0570707767246948e+16
3
1.3101731900248692e+16
4.005292171673198e+32
2
1.6021168686692793e+32
6.416946152186642e+64
1
1.2833892304373283e+65
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 22:56:18) 
-- CODE:
n = int(input("digite um numero inteiro positivo: "))

soma = 1.5
t = n

while(t > 1):
	parcela = ((t*soma)/(2*t+1))+1
	soma = soma*parcela
	t = t-1
	print(parcela)
	print(soma)
	print(t)
pi = 2*soma
print(round(pi, 10))
-- OUTPUT:
1.7142857142857144
2.5714285714285716
9
2.2180451127819554
5.7035445757250285
8
3.684020976811778
21.011977859152037
7
10.805589667604284
227.04681085078323
6
105.79083577728457
24019.471880471403
5
10918.941763850638
262267214.66131523
4
116563207.5161401
3.0570707767246948e+16
3
1.3101731900248692e+16
4.005292171673198e+32
2
1.6021168686692793e+32
6.416946152186642e+64
1
1.2833892304373283e+65
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 22:57:10) 
-- CODE:
n = int(input("digite um numero inteiro positivo: "))

soma = 1.5
t = n

while(t => 1):
	parcela = ((t*soma)/(2*t+1))+1
	soma = soma*parcela
	t = t-1
	print(parcela)
	print(soma)
	print(t)
pi = 2*soma
print(round(pi, 10))
-- ERROR:
File "XXXX", line 6
    while(t => 1):
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 22:57:20) 
-- CODE:
n = int(input("digite um numero inteiro positivo: "))

soma = 1.5
t = n

while(t >= 1):
	parcela = ((t*soma)/(2*t+1))+1
	soma = soma*parcela
	t = t-1
	print(parcela)
	print(soma)
	print(t)
pi = 2*soma
print(round(pi, 10))
-- OUTPUT:
1.7142857142857144
2.5714285714285716
9
2.2180451127819554
5.7035445757250285
8
3.684020976811778
21.011977859152037
7
10.805589667604284
227.04681085078323
6
105.79083577728457
24019.471880471403
5
10918.941763850638
262267214.66131523
4
116563207.5161401
3.0570707767246948e+16
3
1.3101731900248692e+16
4.005292171673198e+32
2
1.6021168686692793e+32
6.416946152186642e+64
1
2.1389820507288806e+64
1.3725732640020982e+129
0
2.7451465280041963e+129
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 22:59:02) 
-- CODE:
n = int(input("digite um numero inteiro positivo: "))

soma = 1.5
t = n

while(t >= 1):
	soma = ((t*soma)/(2*t+1))+1
	t = t-1
	print(soma)
	print(t)
pi = 2*soma
print(round(pi, 10))
-- OUTPUT:
1.7142857142857144
9
1.81203007518797
8
1.8527200353825741
7
1.8646026831785345
6
1.8605858537747082
5
1.8457208426248672
4
1.820320374499941
3
1.7801373033571175
2
1.712054921342847
1
1.5706849737809492
0
3.1413699476
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 22:59:14) 
-- CODE:
n = int(input("digite um numero inteiro positivo: "))

soma = 1.5
t = n

while(t >= 1):
	soma = ((t*soma)/(2*t+1))+1
	t = t-1
	print(soma)
	print(t)
pi = 2*soma
print(round(pi, 10))
-- OUTPUT:
1.7142857142857144
9
1.81203007518797
8
1.8527200353825741
7
1.8646026831785345
6
1.8605858537747082
5
1.8457208426248672
4
1.820320374499941
3
1.7801373033571175
2
1.712054921342847
1
1.5706849737809492
0
3.1413699476
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 22:59:34) 
-- CODE:
n = int(input("digite um numero inteiro positivo: "))

soma = 1.5
t = n

while(t >= 1):
	soma = ((t*soma)/(2*t+1))+1
	t = t-1
	print(soma)
	print(t)
pi = 2*soma
print(round(pi, 10))
-- OUTPUT:
1.7142857142857144
9
1.81203007518797
8
1.8527200353825741
7
1.8646026831785345
6
1.8605858537747082
5
1.8457208426248672
4
1.820320374499941
3
1.7801373033571175
2
1.712054921342847
1
1.5706849737809492
0
3.1413699476
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 22:59:46) 
-- CODE:
n = int(input("digite um numero inteiro positivo: "))

soma = 1.5
t = n

while(t >= 1):
	soma = ((t*soma)/(2*t+1))+1
	t = t-1
	print(soma)
	print(t)
pi = 2*soma
print(round(pi, 10))
-- OUTPUT:
1.7142857142857144
9
1.81203007518797
8
1.8527200353825741
7
1.8646026831785345
6
1.8605858537747082
5
1.8457208426248672
4
1.820320374499941
3
1.7801373033571175
2
1.712054921342847
1
1.5706849737809492
0
3.1413699476
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 23:00:05) 
-- CODE:
n = int(input("digite um numero inteiro positivo: "))

soma = 1.5
t = n

while(t >= 1):
	soma = ((t*soma)/(2*t+1))+1
	t = t-1
pi = 2*soma
print(round(pi, 10))
-- OUTPUT:
3.1413699476
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-19 23:00:17) 
-- CODE:
n = int(input("digite um numero inteiro positivo: "))

soma = 1.5
t = n

while(t >= 1):
	soma = ((t*soma)/(2*t+1))+1
	t = t-1
pi = 2*soma
print(round(pi, 10))
-- EXECUTION TIME:
0.199544
-- TEST CASE 1:
---- input:
10
---- correct output:
3.1413699476
---- user output:
3.1413699476
-- TEST CASE 2:
---- input:
150
---- correct output:
3.1415926536
---- user output:
3.1415926536
-- TEST CASE 3:
---- input:
100
---- correct output:
3.1415926536 
---- user output:
3.1415926536
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
