== TEST (2019-05-02 16:27:27) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if ((d1 >= 1) and (d1 <= 6)):
if ((d2 >= 1) and (d2 <= 6)):
	
	if(d1+d2 = 12):
		d = d1+d2+1
	elif(d1 +d2 <5):
		d = (d1+d2+1)*r
	elif ((d1 + d2 >= 5) and (d1 + d2 < 12):
		d = d1*d2
	else:
		d = "Entrada invalida"


-- ERROR:
File "XXXX", line 6
    if ((d2 >= 1) and (d2 <= 6)):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:27:38) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if ((d1 >= 1) and (d1 <= 6)):
if ((d2 >= 1) and (d2 <= 6)):
	
	if(d1+d2 = 12):
		d = d1+d2+1
	elif(d1 +d2 <5):
		d = (d1+d2+1)*r
	elif ((d1 + d2 >= 5) and (d1 + d2 < 12):
		d = d1*d2
	else:
		d = "Entrada invalida"


-- ERROR:
File "XXXX", line 6
    if ((d2 >= 1) and (d2 <= 6)):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:27:42) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if ((d1 >= 1) and (d1 <= 6)):
if ((d2 >= 1) and (d2 <= 6)):
	
	if(d1+d2 = 12):
		d = d1+d2+1
	elif(d1 +d2 <5):
		d = (d1+d2+1)*r
	elif ((d1 + d2 >= 5) and (d1 + d2 < 12):
		d = d1*d2
	else:
		d = "Entrada invalida"

print(d)
-- ERROR:
File "XXXX", line 6
    if ((d2 >= 1) and (d2 <= 6)):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:27:48) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if ((d1 >= 1) and (d1 <= 6)):
	
if ((d2 >= 1) and (d2 <= 6)):
	
	if(d1+d2 = 12):
		d = d1+d2+1
	elif(d1 +d2 <5):
		d = (d1+d2+1)*r
	elif ((d1 + d2 >= 5) and (d1 + d2 < 12):
		d = d1*d2
	else:
		d = "Entrada invalida"

print(d)
-- ERROR:
File "XXXX", line 7
    if ((d2 >= 1) and (d2 <= 6)):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:27:53) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if ((d1 >= 1) and (d1 <= 6)):
	
if ((d2 >= 1) and (d2 <= 6)):
	
	if(d1+d2 = 12):
		d = d1+d2+1
	elif(d1 +d2 <5):
		d = (d1+d2+1)*r
	elif ((d1 + d2 >= 5) and (d1 + d2 < 12):
		d = d1*d2
	else:
		d = "Entrada invalida"

print(d)
-- ERROR:
File "XXXX", line 7
    if ((d2 >= 1) and (d2 <= 6)):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:27:55) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if ((d1 >= 1) and (d1 <= 6)):
	

	
	if(d1+d2 = 12):
		d = d1+d2+1
	elif(d1 +d2 <5):
		d = (d1+d2+1)*r
	elif ((d1 + d2 >= 5) and (d1 + d2 < 12):
		d = d1*d2
	else:
		d = "Entrada invalida"

print(d)
-- ERROR:
File "XXXX", line 9
    if(d1+d2 = 12):
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:28:00) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if ((d1 >= 1) and (d1 <= 6)):
	

	
	if(d1+d2 = 12):
		d = d1+d2+1
	elif(d1 +d2 <5):
		d = (d1+d2+1)*r
	elif ((d1 + d2 >= 5) and (d1 + d2 < 12):
		d = d1*d2
	else:
		d = "Entrada invalida"

print(d)
-- ERROR:
File "XXXX", line 9
    if(d1+d2 = 12):
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:28:03) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if ((d1 >= 1) and (d1 <= 6)):
	
	if(d1+d2 = 12):
		d = d1+d2+1
	elif(d1 +d2 <5):
		d = (d1+d2+1)*r
	elif ((d1 + d2 >= 5) and (d1 + d2 < 12):
		d = d1*d2
	else:
		d = "Entrada invalida"

print(d)
-- ERROR:
File "XXXX", line 7
    if(d1+d2 = 12):
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:28:05) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if ((d1 >= 1) and (d1 <= 6)):
	
	if(d1+d2 = 12):
		d = d1+d2+1
	elif(d1 +d2 <5):
		d = (d1+d2+1)*r
	elif ((d1 + d2 >= 5) and (d1 + d2 < 12):
		d = d1*d2
	else:
		d = "Entrada invalida"

print(d)
-- ERROR:
File "XXXX", line 7
    if(d1+d2 = 12):
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:28:22) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if ((d1 >= 1) and (d1 <= 6)):
	
	if(d1 + d2 = 12):
		d = d1+d2+1
	elif(d1 +d2 <5):
		d = (d1+d2+1)*r
	elif ((d1 + d2 >= 5) and (d1 + d2 < 12):
		d = d1*d2
	else:
		d = "Entrada invalida"

print(d)
-- ERROR:
File "XXXX", line 7
    if(d1 + d2 = 12):
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:28:23) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if ((d1 >= 1) and (d1 <= 6)):
	
	if(d1 + d2 = 12):
		d = d1+d2+1
	elif(d1 +d2 <5):
		d = (d1+d2+1)*r
	elif ((d1 + d2 >= 5) and (d1 + d2 < 12):
		d = d1*d2
	else:
		d = "Entrada invalida"

print(d)
-- ERROR:
File "XXXX", line 7
    if(d1 + d2 = 12):
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:28:27) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if ((d1 >= 1) and (d1 <= 6)):
	
	elif(d1 + d2 = 12):
		d = d1+d2+1
	elif(d1 +d2 <5):
		d = (d1+d2+1)*r
	elif ((d1 + d2 >= 5) and (d1 + d2 < 12):
		d = d1*d2
	else:
		d = "Entrada invalida"

print(d)
-- ERROR:
File "XXXX", line 7
    elif(d1 + d2 = 12):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:28:28) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if ((d1 >= 1) and (d1 <= 6)):
	
	elif(d1 + d2 = 12):
		d = d1+d2+1
	elif(d1 +d2 <5):
		d = (d1+d2+1)*r
	elif ((d1 + d2 >= 5) and (d1 + d2 < 12):
		d = d1*d2
	else:
		d = "Entrada invalida"

print(d)
-- ERROR:
File "XXXX", line 7
    elif(d1 + d2 = 12):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:28:36) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if ((d1 >= 1) and (d1 <= 6)):
	
elif(d1 + d2 = 12):
		d = d1+d2+1
elif(d1 +d2 <5):
		d = (d1+d2+1)*r
elif ((d1 + d2 >= 5) and (d1 + d2 < 12):
		d = d1*d2
else:
		d = "Entrada invalida"

print(d)
-- ERROR:
File "XXXX", line 7
    elif(d1 + d2 = 12):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:28:43) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))
	
if(d1 + d2 = 12):
		d = d1+d2+1
elif(d1 +d2 <5):
		d = (d1+d2+1)*r
elif ((d1 + d2 >= 5) and (d1 + d2 < 12):
		d = d1*d2
else:
		d = "Entrada invalida"

print(d)
-- ERROR:
File "XXXX", line 5
    if(d1 + d2 = 12):
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:28:45) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))
	
if(d1 + d2 = 12):
		d = d1+d2+1
elif(d1 +d2 <5):
		d = (d1+d2+1)*r
elif ((d1 + d2 >= 5) and (d1 + d2 < 12):
		d = d1*d2
else:
		d = "Entrada invalida"

print(d)
-- ERROR:
File "XXXX", line 5
    if(d1 + d2 = 12):
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:29:00) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))
	
if (d1 + d2 = 12):
		d = d1+d2+1
elif(d1 +d2 <5):
		d = (d1+d2+1)*r
elif ((d1 + d2 >= 5) and (d1 + d2 < 12):
		d = d1*d2
else:
		d = "Entrada invalida"

print(d)
-- ERROR:
File "XXXX", line 5
    if (d1 + d2 = 12):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:29:09) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))
	

elif(d1 +d2 <5):
		d = (d1+d2+1)*r
elif ((d1 + d2 >= 5) and (d1 + d2 < 12):
		d = d1*d2
else:
		d = "Entrada invalida"

print(d)
-- ERROR:
File "XXXX", line 6
    elif(d1 +d2 <5):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:29:17) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))
	
if (d1 + d2 = 12):
		d = d1+d2+1
elif(d1 + d2 <5):
		d = (d1+d2+1)*r
elif ((d1 + d2 >= 5) and (d1 + d2 < 12):
		d = d1*d2
else:
		d = "Entrada invalida"

print(d)
-- ERROR:
File "XXXX", line 5
    if (d1 + d2 = 12):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:29:33) 
-- CODE:
a = int(input("dado A:"))
b = int(input("dado B:"))
r = int(input("rodadas:"))
	
if (a + b = 12):
		d = d1+d2+1
elif(d1 + d2 <5):
		d = (d1+d2+1)*r
elif ((d1 + d2 >= 5) and (d1 + d2 < 12):
		d = d1*d2
else:
		d = "Entrada invalida"

print(d)
-- ERROR:
File "XXXX", line 5
    if (a + b = 12):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:29:35) 
-- CODE:
a = int(input("dado A:"))
b = int(input("dado B:"))
r = int(input("rodadas:"))
	
if (a + b = 12):
		d = d1+d2+1
elif(d1 + d2 <5):
		d = (d1+d2+1)*r
elif ((d1 + d2 >= 5) and (d1 + d2 < 12):
		d = d1*d2
else:
		d = "Entrada invalida"

print(d)
-- ERROR:
File "XXXX", line 5
    if (a + b = 12):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:29:57) 
-- CODE:
a = int(input("dado A:"))
b = int(input("dado B:"))
r = int(input("rodadas:"))
	
if (a + b = 12):
		d = a+b+1
elif(a + b <5):
		d = (a+b+1)*r
elif ((a + b >= 5) and (a + b < 12):
		d = d1*d2
else:
		d = "Entrada invalida"

print(d)
-- ERROR:
File "XXXX", line 5
    if (a + b = 12):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:30:11) 
-- CODE:
a = int(input("dado A:"))
b = int(input("dado B:"))
r = int(input("rodadas:"))
	
if (a + b = 12):
		d = a+b+1
elif(a + b <5):
		d = (a+b+1)*r
elif ((a + b >= 5) and (a + b < 12):
		d = d1*d2
else:
		d = "Entrada invalida"

print(d)
-- ERROR:
File "XXXX", line 5
    if (a + b = 12):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:31:21) 
-- CODE:
a = int(input("dado A:"))
b = int(input("dado B:"))
r = int(input("rodadas:"))
	
if (a + b = 12):
		d = a+b+1
elif(a + b <5):
		d = (a+b+1)*r
elif ((a + b >= 5) and (a + b < 12):
		d = d1*d2
else:
		d = "Entrada invalida"

print(d)
-- ERROR:
File "XXXX", line 5
    if (a + b = 12):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:31:22) 
-- CODE:
a = int(input("dado A:"))
b = int(input("dado B:"))
r = int(input("rodadas:"))
	
if (a + b = 12):
		d = a+b+1
elif(a + b <5):
		d = (a+b+1)*r
elif ((a + b >= 5) and (a + b < 12):
		d = d1*d2
else:
		d = "Entrada invalida"

print(d)
-- ERROR:
File "XXXX", line 5
    if (a + b = 12):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:31:24) 
-- CODE:
a = int(input("dado A:"))
b = int(input("dado B:"))
r = int(input("rodadas:"))
	
if (a + b = 12):
		d = a+b+1
elif(a + b <5):
		d = (a+b+1)*r
elif ((a + b >= 5) and (a + b < 12):
		d = d1*d2
else:
		d = "Entrada invalida"

print(d)
-- ERROR:
File "XXXX", line 5
    if (a + b = 12):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:31:27) 
-- CODE:
a = int(input("dado A:"))
b = int(input("dado B:"))
r = int(input("rodadas:"))
	
if (a + b = 12):
		d = a+b+1
elif(a + b <5):
		d = (a+b+1)*r
elif ((a + b >= 5) and (a + b < 12):
		d = d1*d2
else:
		d = "Entrada invalida"

print(d)
-- ERROR:
File "XXXX", line 5
    if (a + b = 12):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:32:29) 
-- CODE:
a = int(input("dado A:"))
b = int(input("dado B:"))
r = int(input("rodadas:"))
	
if (a + b = 12):
	a = "CONSTRICAO"
	d = a+b+1
elif(a + b <5):
	a = "POLEN"
	d = (a+b+1)*r
elif ((a + b >= 5) and (a + b < 12):
		d = d1*d2
else:
		d = "Entrada invalida"

print(d)
-- ERROR:
File "XXXX", line 5
    if (a + b = 12):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:32:32) 
-- CODE:
a = int(input("dado A:"))
b = int(input("dado B:"))
r = int(input("rodadas:"))
	
if (a + b = 12):
	a = "CONSTRICAO"
	d = a+b+1
elif(a + b <5):
	a = "POLEN"
	d = (a+b+1)*r
elif ((a + b >= 5) and (a + b < 12):
		d = d1*d2
else:
		d = "Entrada invalida"

print(d)
-- ERROR:
File "XXXX", line 5
    if (a + b = 12):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:32:45) 
-- CODE:
a = int(input("dado A:"))
b = int(input("dado B:"))
r = int(input("rodadas:"))
	
if (a + b = 12):
	a = "CONSTRICAO"
	d = a+b+1
elif(a + b <5):
	a = "POLEN"
	d = (a+b+1)*r
elif ((a + b >= 5) and (a + b < 12):
	a = "FRAQUEZA"
	d = d1*d2
else:
		d = "Entrada invalida"

print(d)
-- ERROR:
File "XXXX", line 5
    if (a + b = 12):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:33:02) 
-- CODE:
a = int(input("dado A:"))
b = int(input("dado B:"))
r = int(input("rodadas:"))
	
if (a + b = 12):
	a = "CONSTRICAO"
	d = a+b+1
elif(a + b <5):
	a = "POLEN"
	d = (a+b+1)*r
elif ((a + b >= 5) and (a + b < 12):
	a = "FRAQUEZA"
	d = d1*d2
else:
		d = "Entrada invalida"

print(d)
-- ERROR:
File "XXXX", line 5
    if (a + b = 12):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:33:07) 
-- CODE:
a = int(input("dado A:"))
b = int(input("dado B:"))
r = int(input("rodadas:"))
	
if (a + b = 12):
	d = a+b+1
elif(a + b <5):
	a = "POLEN"
	d = (a+b+1)*r
elif ((a + b >= 5) and (a + b < 12):
	a = "FRAQUEZA"
	d = d1*d2
else:
		d = "Entrada invalida"

print(d)
-- ERROR:
File "XXXX", line 5
    if (a + b = 12):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:33:23) 
-- CODE:
a = int(input("dado A:"))
b = int(input("dado B:"))
r = int(input("rodadas:"))
	
if (a + b = 12):
	a = "CONSTRICAO"
	d = a+b+1
elif(a + b <5):
	a = "POLEN"
	d = (a+b+1)*r
elif ((a + b >= 5) and (a + b < 12):
	a = "FRAQUEZA"
	d = d1*d2
else:
		d = "Entrada invalida"

print(d)
-- ERROR:
File "XXXX", line 5
    if (a + b = 12):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:33:32) 
-- CODE:
a = int(input("dado A:"))
b = int(input("dado B:"))
r = int(input("rodadas:"))
	
if (a + b == 12):
	a = "CONSTRICAO"
	d = a+b+1
elif(a + b <5):
	a = "POLEN"
	d = (a+b+1)*r
elif ((a + b >= 5) and (a + b < 12):
	a = "FRAQUEZA"
	d = d1*d2
else:
		d = "Entrada invalida"

print(d)
-- ERROR:
File "XXXX", line 11
    elif ((a + b >= 5) and (a + b < 12):
                                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:33:37) 
-- CODE:
a = int(input("dado A:"))
b = int(input("dado B:"))
r = int(input("rodadas:"))
	
if (a + b == 12):
	a = "CONSTRICAO"
	d = a+b+1
elif(a + b <5):
	a = "POLEN"
	d = (a+b+1)*r
elif ((a + b >= 5) and (a + b < 12):
	a = "FRAQUEZA"
	d = d1*d2
else:
		d = "Entrada invalida"

print(d)
-- ERROR:
File "XXXX", line 11
    elif ((a + b >= 5) and (a + b < 12):
                                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:33:45) 
-- CODE:
a = int(input("dado A:"))
b = int(input("dado B:"))
r = int(input("rodadas:"))
	
if (a + b == 12):
	a = "CONSTRICAO"
	d = a+b+1
elif(a + b <5):
	a = "POLEN"
	d = (a+b+1)*r
elif ((a + b >= 5) and (a + b < 12)):
	a = "FRAQUEZA"
	d = d1*d2
else:
		d = "Entrada invalida"

print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    d = d1*d2
NameError: name 'd1' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:33:52) 
-- CODE:
a = int(input("dado A:"))
b = int(input("dado B:"))
r = int(input("rodadas:"))
	
if (a + b == 12):
	a = "CONSTRICAO"
	d = a+b+1
elif(a + b <5):
	a = "POLEN"
	d = (a+b+1)*r
elif ((a + b >= 5) and (a + b < 12)):
	a = "FRAQUEZA"
	d = d1*d2
else:
		d = "Entrada invalida"
print(a)
print(d)
-- EXECUTION TIME:
0.180488
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1715/3060/main.py", line 13, in <module>
    d = d1*d2
NameError: name 'd1' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:33:53) 
-- CODE:
a = int(input("dado A:"))
b = int(input("dado B:"))
r = int(input("rodadas:"))
	
if (a + b == 12):
	a = "CONSTRICAO"
	d = a+b+1
elif(a + b <5):
	a = "POLEN"
	d = (a+b+1)*r
elif ((a + b >= 5) and (a + b < 12)):
	a = "FRAQUEZA"
	d = d1*d2
else:
		d = "Entrada invalida"
print(a)
print(d)
-- EXECUTION TIME:
0.143244
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1715/3060/main.py", line 13, in <module>
    d = d1*d2
NameError: name 'd1' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:33:54) 
-- CODE:
a = int(input("dado A:"))
b = int(input("dado B:"))
r = int(input("rodadas:"))
	
if (a + b == 12):
	a = "CONSTRICAO"
	d = a+b+1
elif(a + b <5):
	a = "POLEN"
	d = (a+b+1)*r
elif ((a + b >= 5) and (a + b < 12)):
	a = "FRAQUEZA"
	d = d1*d2
else:
		d = "Entrada invalida"
print(a)
print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    d = d1*d2
NameError: name 'd1' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:34:08) 
-- CODE:
a = int(input("dado A:"))
b = int(input("dado B:"))
r = int(input("rodadas:"))
	
if (a + b == 12):
	a = "CONSTRICAO"
	d = a+b+1
elif(a + b <5):
	a = "POLEN"
	d = (a+b+1)*r
elif ((a + b >= 5) and (a + b < 12)):
	a = "FRAQUEZA"
	d = d1*d2
else:
		d = "Entrada invalida"
print(a)
print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    d = d1*d2
NameError: name 'd1' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:34:16) 
-- CODE:
a = int(input("dado A:"))
b = int(input("dado B:"))
r = int(input("rodadas:"))
	
if (a + b == 12):
	a = "CONSTRICAO"
	d = a+b+1
elif(a + b <5):
	a = "POLEN"
	d = (a+b+1)*r
elif ((a + b >= 5) and (a + b < 12)):
	a = "FRAQUEZA"
	d = d1*d2
else:
		d = "Entrada invalida"
print(a)
print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    d = d1*d2
NameError: name 'd1' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:34:28) 
-- CODE:
a = int(input("dado A:"))
b = int(input("dado B:"))
r = int(input("rodadas:"))
	
if (a + b == 12):
	a = "CONSTRICAO"
	d = a+b+1
elif(a + b <5):
	a = "POLEN"
	d = (a+b+1)*r
elif ((a + b >= 5) and (a + b < 12)):
	a = "FRAQUEZA"
	d = d1*d2
else:
		d = "Entrada invalida"
print(a)
print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    d = d1*d2
NameError: name 'd1' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:35:26) 
-- CODE:
a = int(input("dado A:"))
b = int(input("dado B:"))
r = int(input("rodadas:"))
	
if ((a + b == 12) and (r >=1) and (r <=12)):
	a = "CONSTRICAO"
	d = a+b+1
elif(a + b <5):
	a = "POLEN"
	d = (a+b+1)*r
elif ((a + b >= 5) and (a + b < 12)):
	a = "FRAQUEZA"
	d = d1*d2
else:
		d = "Entrada invalida"
print(a)
print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    d = d1*d2
NameError: name 'd1' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:35:33) 
-- CODE:
a = int(input("dado A:"))
b = int(input("dado B:"))
r = int(input("rodadas:"))
	
if ((a + b == 12) and (r >=1) and (r <=12)):
	a = "CONSTRICAO"
	d = a+b+1
elif(a + b <5):
	a = "POLEN"
	d = (a+b+1)*r
elif ((a + b >= 5) and (a + b < 12)):
	a = "FRAQUEZA"
	d = d1*d2
else:
		d = "Entrada invalida"
print(a)
print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    d = d1*d2
NameError: name 'd1' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:36:32) 
-- CODE:
a = int(input("dado A:"))
b = int(input("dado B:"))
r = int(input("rodadas:"))
	
if ((a + b == 12) and (r >=1) and (r <=12)):
	a = "CONSTRICAO"
	d = a+b+1
elif ((a + b <5) and (r >=1) and (r <=12)):
	a = "POLEN"
	d = (a+b+1)*r
elif ((a + b >= 5) and (a + b < 12) and (r>=1) and (r <=12)):
	a = "FRAQUEZA"
	d = d1*d2
else:
		d = "Entrada invalida"
print(a)
print(d)
-- EXECUTION TIME:
0.15249
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1715/3060/main.py", line 13, in <module>
    d = d1*d2
NameError: name 'd1' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:36:33) 
-- CODE:
a = int(input("dado A:"))
b = int(input("dado B:"))
r = int(input("rodadas:"))
	
if ((a + b == 12) and (r >=1) and (r <=12)):
	a = "CONSTRICAO"
	d = a+b+1
elif ((a + b <5) and (r >=1) and (r <=12)):
	a = "POLEN"
	d = (a+b+1)*r
elif ((a + b >= 5) and (a + b < 12) and (r>=1) and (r <=12)):
	a = "FRAQUEZA"
	d = d1*d2
else:
		d = "Entrada invalida"
print(a)
print(d)
-- EXECUTION TIME:
0.135771
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1715/3060/main.py", line 13, in <module>
    d = d1*d2
NameError: name 'd1' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:36:33) 
-- CODE:
a = int(input("dado A:"))
b = int(input("dado B:"))
r = int(input("rodadas:"))
	
if ((a + b == 12) and (r >=1) and (r <=12)):
	a = "CONSTRICAO"
	d = a+b+1
elif ((a + b <5) and (r >=1) and (r <=12)):
	a = "POLEN"
	d = (a+b+1)*r
elif ((a + b >= 5) and (a + b < 12) and (r>=1) and (r <=12)):
	a = "FRAQUEZA"
	d = d1*d2
else:
		d = "Entrada invalida"
print(a)
print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    d = d1*d2
NameError: name 'd1' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:36:54) 
-- CODE:
a = int(input("dado A:"))
b = int(input("dado B:"))
r = int(input("rodadas:"))
	
if ((a + b == 12) and (r >=1) and (r <=12)):
	a = "CONSTRICAO"
	d = a+b+1
elif ((a + b <5) and (r >=1) and (r <=12)):
	a = "POLEN"
	d = (a+b+1)*r
elif ((a + b >= 5) and (a + b < 12) and (r>=1) and (r <=12)):
	a = "FRAQUEZA"
	d = d1*d2
else:
		d = "Entrada invalida"
print(a)
print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    d = d1*d2
NameError: name 'd1' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:37:31) 
-- CODE:
a = int(input("dado A:"))
b = int(input("dado B:"))
r = int(input("rodadas:"))
	
if ((a + b == 12):
	a = "CONSTRICAO"
	d = a+b+1
elif ((a + b <5):
	a = "POLEN"
	d = (a+b+1)*r
elif ((a + b >= 5):
	a = "FRAQUEZA"
	d = d1*d2
else:
		d = "Entrada invalida"
print(a)
print(d)
-- EXECUTION TIME:
0.229772
-- ERROR:
  File "/home/codebench/codes/1715/3060/main.py", line 5
    if ((a + b == 12):
                     ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:37:31) 
-- CODE:
a = int(input("dado A:"))
b = int(input("dado B:"))
r = int(input("rodadas:"))
	
if ((a + b == 12):
	a = "CONSTRICAO"
	d = a+b+1
elif ((a + b <5):
	a = "POLEN"
	d = (a+b+1)*r
elif ((a + b >= 5):
	a = "FRAQUEZA"
	d = d1*d2
else:
		d = "Entrada invalida"
print(a)
print(d)
-- ERROR:
File "XXXX", line 5
    if ((a + b == 12):
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:37:33) 
-- CODE:
a = int(input("dado A:"))
b = int(input("dado B:"))
r = int(input("rodadas:"))
	
if ((a + b == 12):
	a = "CONSTRICAO"
	d = a+b+1
elif ((a + b <5):
	a = "POLEN"
	d = (a+b+1)*r
elif ((a + b >= 5):
	a = "FRAQUEZA"
	d = d1*d2
else:
		d = "Entrada invalida"
print(a)
print(d)
-- ERROR:
File "XXXX", line 5
    if ((a + b == 12):
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:37:39) 
-- CODE:
a = int(input("dado A:"))
b = int(input("dado B:"))
r = int(input("rodadas:"))
	
if (a + b == 12):
	a = "CONSTRICAO"
	d = a+b+1
elif (a + b <5):
	a = "POLEN"
	d = (a+b+1)*r
elif (a + b >= 5):
	a = "FRAQUEZA"
	d = d1*d2
else:
		d = "Entrada invalida"
print(a)
print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    d = d1*d2
NameError: name 'd1' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:38:26) 
-- CODE:
a = int(input("dado A:"))
b = int(input("dado B:"))
r = int(input("rodadas:"))

	elif (a + b == 12):
		a = "CONSTRICAO"
		d = a+b+1
	elif (a + b <5):
		a = "POLEN"
		d = (a+b+1)*r
	elif (a + b >= 5):
		a = "FRAQUEZA"
		d = d1*d2
	else:
		d = "Entrada invalida"
print(a)
print(d)
-- ERROR:
File "XXXX", line 5
    elif (a + b == 12):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:38:29) 
-- CODE:
a = int(input("dado A:"))
b = int(input("dado B:"))
r = int(input("rodadas:"))

	elif (a + b == 12):
		a = "CONSTRICAO"
		d = a+b+1
	elif (a + b <5):
		a = "POLEN"
		d = (a+b+1)*r
	elif (a + b >= 5):
		a = "FRAQUEZA"
		d = d1*d2
	else:
		d = "Entrada invalida"
print(a)
print(d)
-- ERROR:
File "XXXX", line 5
    elif (a + b == 12):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:38:49) 
-- CODE:
a = int(input("dado A:"))
b = int(input("dado B:"))
r = int(input("rodadas:"))

if ((a >=1) and (a <=6)):
	elif (a + b == 12):
		a = "CONSTRICAO"
		d = a+b+1
	elif (a + b <5):
		a = "POLEN"
		d = (a+b+1)*r
	elif (a + b >= 5):
		a = "FRAQUEZA"
		d = d1*d2
	else:
		d = "Entrada invalida"
print(a)
print(d)
-- ERROR:
File "XXXX", line 6
    elif (a + b == 12):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:38:50) 
-- CODE:
a = int(input("dado A:"))
b = int(input("dado B:"))
r = int(input("rodadas:"))

if ((a >=1) and (a <=6)):
	elif (a + b == 12):
		a = "CONSTRICAO"
		d = a+b+1
	elif (a + b <5):
		a = "POLEN"
		d = (a+b+1)*r
	elif (a + b >= 5):
		a = "FRAQUEZA"
		d = d1*d2
	else:
		d = "Entrada invalida"
print(a)
print(d)
-- ERROR:
File "XXXX", line 6
    elif (a + b == 12):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:38:55) 
-- CODE:
a = int(input("dado A:"))
b = int(input("dado B:"))
r = int(input("rodadas:"))

if ((a >=1) and (a <=6)):
	elif (a + b == 12):
		a = "CONSTRICAO"
		d = a+b+1
	elif (a + b <5):
		a = "POLEN"
		d = (a+b+1)*r
	elif (a + b >= 5):
		a = "FRAQUEZA"
		d = d1*d2
	else:
		d = "Entrada invalida"
print(a)
print(d)
-- ERROR:
File "XXXX", line 6
    elif (a + b == 12):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:38:55) 
-- CODE:
a = int(input("dado A:"))
b = int(input("dado B:"))
r = int(input("rodadas:"))

if ((a >=1) and (a <=6)):
	elif (a + b == 12):
		a = "CONSTRICAO"
		d = a+b+1
	elif (a + b <5):
		a = "POLEN"
		d = (a+b+1)*r
	elif (a + b >= 5):
		a = "FRAQUEZA"
		d = d1*d2
	else:
		d = "Entrada invalida"
print(a)
print(d)
-- ERROR:
File "XXXX", line 6
    elif (a + b == 12):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:38:56) 
-- CODE:
a = int(input("dado A:"))
b = int(input("dado B:"))
r = int(input("rodadas:"))

if ((a >=1) and (a <=6)):
	elif (a + b == 12):
		a = "CONSTRICAO"
		d = a+b+1
	elif (a + b <5):
		a = "POLEN"
		d = (a+b+1)*r
	elif (a + b >= 5):
		a = "FRAQUEZA"
		d = d1*d2
	else:
		d = "Entrada invalida"
print(a)
print(d)
-- ERROR:
File "XXXX", line 6
    elif (a + b == 12):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:40:12) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if ((d1 >=1) and (d1 <=6)):
	elif (d1 + d2 == 12):
		a = "CONSTRICAO"
		d = d1+d2+1
	elif (d1 + d2 <5):
		a = "POLEN"
		d = (d1+d2+1)*r
	elif (d1 + d2 >= 5):
		a = "FRAQUEZA"
		d = d1*d2
	else:
		d = "Entrada invalida"
print(a)
print(d)
-- ERROR:
File "XXXX", line 6
    elif (d1 + d2 == 12):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:40:13) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if ((d1 >=1) and (d1 <=6)):
	elif (d1 + d2 == 12):
		a = "CONSTRICAO"
		d = d1+d2+1
	elif (d1 + d2 <5):
		a = "POLEN"
		d = (d1+d2+1)*r
	elif (d1 + d2 >= 5):
		a = "FRAQUEZA"
		d = d1*d2
	else:
		d = "Entrada invalida"
print(a)
print(d)
-- ERROR:
File "XXXX", line 6
    elif (d1 + d2 == 12):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:40:27) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

elif (d1 + d2 == 12):
	a = "CONSTRICAO"
	d = d1+d2+1
elif (d1 + d2 <5):
	a = "POLEN"
	d = (d1+d2+1)*r
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2
else:
	d = "Entrada invalida"
print(a)
print(d)
-- ERROR:
File "XXXX", line 5
    elif (d1 + d2 == 12):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:40:30) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

elif (d1 + d2 == 12):
	a = "CONSTRICAO"
	d = d1+d2+1
elif (d1 + d2 <5):
	a = "POLEN"
	d = (d1+d2+1)*r
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2
else:
	d = "Entrada invalida"
print(a)
print(d)
-- ERROR:
File "XXXX", line 5
    elif (d1 + d2 == 12):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:40:35) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if (d1 + d2 == 12):
	a = "CONSTRICAO"
	d = d1+d2+1
elif (d1 + d2 <5):
	a = "POLEN"
	d = (d1+d2+1)*r
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2
else:
	d = "Entrada invalida"
print(a)
print(d)
-- OUTPUT:
FRAQUEZA
15
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:40:36) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if (d1 + d2 == 12):
	a = "CONSTRICAO"
	d = d1+d2+1
elif (d1 + d2 <5):
	a = "POLEN"
	d = (d1+d2+1)*r
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2
else:
	d = "Entrada invalida"
print(a)
print(d)
-- OUTPUT:
FRAQUEZA
15
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:40:37) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if (d1 + d2 == 12):
	a = "CONSTRICAO"
	d = d1+d2+1
elif (d1 + d2 <5):
	a = "POLEN"
	d = (d1+d2+1)*r
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2
else:
	d = "Entrada invalida"
print(a)
print(d)
-- EXECUTION TIME:
0.116603
-- TEST CASE 1:
---- input:
5
3
8
---- correct output:
FRAQUEZA
15
---- user output:
FRAQUEZA
15
-- TEST CASE 2:
---- input:
7
8
5
---- correct output:
Entrada invalida
---- user output:
FRAQUEZA
56
-- TEST CASE 3:
---- input:
1
1
9
---- correct output:
POLEN
27
---- user output:
POLEN
27
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:40:37) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if (d1 + d2 == 12):
	a = "CONSTRICAO"
	d = d1+d2+1
elif (d1 + d2 <5):
	a = "POLEN"
	d = (d1+d2+1)*r
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2
else:
	d = "Entrada invalida"
print(a)
print(d)
-- EXECUTION TIME:
0.121321
-- TEST CASE 1:
---- input:
5
3
8
---- correct output:
FRAQUEZA
15
---- user output:
FRAQUEZA
15
-- TEST CASE 2:
---- input:
7
8
5
---- correct output:
Entrada invalida
---- user output:
FRAQUEZA
56
-- TEST CASE 3:
---- input:
1
1
9
---- correct output:
POLEN
27
---- user output:
POLEN
27
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:40:38) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if (d1 + d2 == 12):
	a = "CONSTRICAO"
	d = d1+d2+1
elif (d1 + d2 <5):
	a = "POLEN"
	d = (d1+d2+1)*r
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2
else:
	d = "Entrada invalida"
print(a)
print(d)
-- EXECUTION TIME:
0.155857
-- TEST CASE 1:
---- input:
5
3
8
---- correct output:
FRAQUEZA
15
---- user output:
FRAQUEZA
15
-- TEST CASE 2:
---- input:
7
8
5
---- correct output:
Entrada invalida
---- user output:
FRAQUEZA
56
-- TEST CASE 3:
---- input:
1
1
9
---- correct output:
POLEN
27
---- user output:
POLEN
27
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:40:38) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if (d1 + d2 == 12):
	a = "CONSTRICAO"
	d = d1+d2+1
elif (d1 + d2 <5):
	a = "POLEN"
	d = (d1+d2+1)*r
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2
else:
	d = "Entrada invalida"
print(a)
print(d)
-- OUTPUT:
FRAQUEZA
15
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:40:51) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if (d1 + d2 == 12):
	a = "CONSTRICAO"
	d = d1+d2+1
elif (d1 + d2 <5):
	a = "POLEN"
	d = (d1+d2+1)*r
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2
else:
	d = "Entrada invalida"
print(a)
print(d)
-- OUTPUT:
FRAQUEZA
15
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:40:56) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if (d1 + d2 == 12):
	a = "CONSTRICAO"
	d = d1+d2+1
elif (d1 + d2 <5):
	a = "POLEN"
	d = (d1+d2+1)*r
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2
else:
	d = "Entrada invalida"
print(a)
print(d)
-- OUTPUT:
FRAQUEZA
15
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:41:01) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if (d1 + d2 == 12):
	a = "CONSTRICAO"
	d = d1+d2+1
elif (d1 + d2 <5):
	a = "POLEN"
	d = (d1+d2+1)*r
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2
else:
	d = "Entrada invalida"
print(a)
print(d)
-- EXECUTION TIME:
0.132358
-- TEST CASE 1:
---- input:
5
3
8
---- correct output:
FRAQUEZA
15
---- user output:
FRAQUEZA
15
-- TEST CASE 2:
---- input:
7
8
5
---- correct output:
Entrada invalida
---- user output:
FRAQUEZA
56
-- TEST CASE 3:
---- input:
1
1
9
---- correct output:
POLEN
27
---- user output:
POLEN
27
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:42:08) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if ((d1 < 0) or (d2 < 0)):
	d = "Entrada invalida"

elif (d1 + d2 == 12):
	a = "CONSTRICAO"
	d = d1+d2+1
elif (d1 + d2 <5):
	a = "POLEN"
	d = (d1+d2+1)*r
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2

print(a)
print(d)
-- EXECUTION TIME:
0.204236
-- TEST CASE 1:
---- input:
5
3
8
---- correct output:
FRAQUEZA
15
---- user output:
FRAQUEZA
15
-- TEST CASE 2:
---- input:
7
8
5
---- correct output:
Entrada invalida
---- user output:
FRAQUEZA
56
-- TEST CASE 3:
---- input:
1
1
9
---- correct output:
POLEN
27
---- user output:
POLEN
27
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:42:09) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if ((d1 < 0) or (d2 < 0)):
	d = "Entrada invalida"

elif (d1 + d2 == 12):
	a = "CONSTRICAO"
	d = d1+d2+1
elif (d1 + d2 <5):
	a = "POLEN"
	d = (d1+d2+1)*r
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2

print(a)
print(d)
-- EXECUTION TIME:
0.139321
-- TEST CASE 1:
---- input:
5
3
8
---- correct output:
FRAQUEZA
15
---- user output:
FRAQUEZA
15
-- TEST CASE 2:
---- input:
7
8
5
---- correct output:
Entrada invalida
---- user output:
FRAQUEZA
56
-- TEST CASE 3:
---- input:
1
1
9
---- correct output:
POLEN
27
---- user output:
POLEN
27
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:42:13) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if ((d1 < 0) or (d2 < 0)):
	d = "Entrada invalida"
elif (d1 + d2 == 12):
	a = "CONSTRICAO"
	d = d1+d2+1
elif (d1 + d2 <5):
	a = "POLEN"
	d = (d1+d2+1)*r
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2

print(a)
print(d)
-- OUTPUT:
FRAQUEZA
15
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:42:29) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if ((d1 =< 0) or (d2 =< 0)):
	d = "Entrada invalida"
elif (d1 + d2 == 12):
	a = "CONSTRICAO"
	d = d1+d2+1
elif (d1 + d2 <5):
	a = "POLEN"
	d = (d1+d2+1)*r
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2

print(a)
print(d)
-- ERROR:
File "XXXX", line 5
    if ((d1 =< 0) or (d2 =< 0)):
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:42:30) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if ((d1 =< 0) or (d2 =< 0)):
	d = "Entrada invalida"
elif (d1 + d2 == 12):
	a = "CONSTRICAO"
	d = d1+d2+1
elif (d1 + d2 <5):
	a = "POLEN"
	d = (d1+d2+1)*r
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2

print(a)
print(d)
-- ERROR:
File "XXXX", line 5
    if ((d1 =< 0) or (d2 =< 0)):
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:42:34) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if ((d1 =< 0) or (d2 =< 0)):
	d = "Entrada invalida"
elif (d1 + d2 == 12):
	a = "CONSTRICAO"
	d = d1+d2+1
elif (d1 + d2 <5):
	a = "POLEN"
	d = (d1+d2+1)*r
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2

print(a)
print(d)
-- ERROR:
File "XXXX", line 5
    if ((d1 =< 0) or (d2 =< 0)):
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:42:42) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if ((d1 <= 0) or (d2 <= 0)):
	d = "Entrada invalida"
elif (d1 + d2 == 12):
	a = "CONSTRICAO"
	d = d1+d2+1
elif (d1 + d2 <5):
	a = "POLEN"
	d = (d1+d2+1)*r
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2

print(a)
print(d)
-- EXECUTION TIME:
0.137843
-- TEST CASE 1:
---- input:
5
3
8
---- correct output:
FRAQUEZA
15
---- user output:
FRAQUEZA
15
-- TEST CASE 2:
---- input:
7
8
5
---- correct output:
Entrada invalida
---- user output:
FRAQUEZA
56
-- TEST CASE 3:
---- input:
1
1
9
---- correct output:
POLEN
27
---- user output:
POLEN
27
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:42:42) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if ((d1 <= 0) or (d2 <= 0)):
	d = "Entrada invalida"
elif (d1 + d2 == 12):
	a = "CONSTRICAO"
	d = d1+d2+1
elif (d1 + d2 <5):
	a = "POLEN"
	d = (d1+d2+1)*r
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2

print(a)
print(d)
-- OUTPUT:
FRAQUEZA
15
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:42:43) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if ((d1 <= 0) or (d2 <= 0)):
	d = "Entrada invalida"
elif (d1 + d2 == 12):
	a = "CONSTRICAO"
	d = d1+d2+1
elif (d1 + d2 <5):
	a = "POLEN"
	d = (d1+d2+1)*r
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2

print(a)
print(d)
-- EXECUTION TIME:
0.163296
-- TEST CASE 1:
---- input:
5
3
8
---- correct output:
FRAQUEZA
15
---- user output:
FRAQUEZA
15
-- TEST CASE 2:
---- input:
7
8
5
---- correct output:
Entrada invalida
---- user output:
dado A:dado B:rodadas:FRAQUEZA
56
-- TEST CASE 3:
---- input:
1
1
9
---- correct output:
POLEN
27
---- user output:
dado A:dado B:rodadas:POLEN
27
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:42:46) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if ((d1 <= 0) or (d2 <= 0)):
	d = "Entrada invalida"
elif (d1 + d2 == 12):
	a = "CONSTRICAO"
	d = d1+d2+1
elif (d1 + d2 <5):
	a = "POLEN"
	d = (d1+d2+1)*r
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2

print(a)
print(d)
-- OUTPUT:
FRAQUEZA
15
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:43:49) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

elif (d1 + d2 == 12):
	a = "CONSTRICAO"
	d = d1+d2+1
elif (d1 + d2 <5):
	a = "POLEN"
	d = (d1+d2+1)*r
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2
elif ((d1 > 6) or (d1 <1)):
	d = "Entrada invalida"

print(a)
print(d)
-- EXECUTION TIME:
0.160723
-- ERROR:
  File "/home/codebench/codes/1715/3060/main.py", line 5
    elif (d1 + d2 == 12):
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:43:49) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

elif (d1 + d2 == 12):
	a = "CONSTRICAO"
	d = d1+d2+1
elif (d1 + d2 <5):
	a = "POLEN"
	d = (d1+d2+1)*r
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2
elif ((d1 > 6) or (d1 <1)):
	d = "Entrada invalida"

print(a)
print(d)
-- ERROR:
File "XXXX", line 5
    elif (d1 + d2 == 12):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:43:54) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if (d1 + d2 == 12):
	a = "CONSTRICAO"
	d = d1+d2+1
elif (d1 + d2 <5):
	a = "POLEN"
	d = (d1+d2+1)*r
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2
elif ((d1 > 6) or (d1 <1)):
	d = "Entrada invalida"

print(a)
print(d)
-- OUTPUT:
FRAQUEZA
15
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:44:17) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if (d1 + d2 == 12):
	a = "CONSTRICAO"
	d = d1+d2+1
elif (d1 + d2 <5):
	a = "POLEN"
	d = (d1+d2+1)*r
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2
elif ((d1 > 6) or (d1 <1) or (d2 < 1) or (d2 >6)):
	d = "Entrada invalida"

print(a)
print(d)
-- EXECUTION TIME:
0.150518
-- TEST CASE 1:
---- input:
5
3
8
---- correct output:
FRAQUEZA
15
---- user output:
FRAQUEZA
15
-- TEST CASE 2:
---- input:
7
8
5
---- correct output:
Entrada invalida
---- user output:
FRAQUEZA
56
-- TEST CASE 3:
---- input:
1
1
9
---- correct output:
POLEN
27
---- user output:
POLEN
27
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:44:18) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if (d1 + d2 == 12):
	a = "CONSTRICAO"
	d = d1+d2+1
elif (d1 + d2 <5):
	a = "POLEN"
	d = (d1+d2+1)*r
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2
elif ((d1 > 6) or (d1 <1) or (d2 < 1) or (d2 >6)):
	d = "Entrada invalida"

print(a)
print(d)
-- EXECUTION TIME:
0.158418
-- TEST CASE 1:
---- input:
5
3
8
---- correct output:
FRAQUEZA
15
---- user output:
FRAQUEZA
15
-- TEST CASE 2:
---- input:
7
8
5
---- correct output:
Entrada invalida
---- user output:
FRAQUEZA
15
-- TEST CASE 3:
---- input:
1
1
9
---- correct output:
POLEN
27
---- user output:
FRAQUEZA
15
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:44:18) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if (d1 + d2 == 12):
	a = "CONSTRICAO"
	d = d1+d2+1
elif (d1 + d2 <5):
	a = "POLEN"
	d = (d1+d2+1)*r
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2
elif ((d1 > 6) or (d1 <1) or (d2 < 1) or (d2 >6)):
	d = "Entrada invalida"

print(a)
print(d)
-- OUTPUT:
FRAQUEZA
15
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:44:19) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if (d1 + d2 == 12):
	a = "CONSTRICAO"
	d = d1+d2+1
elif (d1 + d2 <5):
	a = "POLEN"
	d = (d1+d2+1)*r
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2
elif ((d1 > 6) or (d1 <1) or (d2 < 1) or (d2 >6)):
	d = "Entrada invalida"

print(a)
print(d)
-- EXECUTION TIME:
0.253016
-- TEST CASE 1:
---- input:
5
3
8
---- correct output:
FRAQUEZA
15
---- user output:
FRAQUEZA
15
-- TEST CASE 2:
---- input:
7
8
5
---- correct output:
Entrada invalida
---- user output:
FRAQUEZA
56
-- TEST CASE 3:
---- input:
1
1
9
---- correct output:
POLEN
27
---- user output:
dado A:dado B:rodadas:FRAQUEZA
56
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:44:19) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if (d1 + d2 == 12):
	a = "CONSTRICAO"
	d = d1+d2+1
elif (d1 + d2 <5):
	a = "POLEN"
	d = (d1+d2+1)*r
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2
elif ((d1 > 6) or (d1 <1) or (d2 < 1) or (d2 >6)):
	d = "Entrada invalida"

print(a)
print(d)
-- EXECUTION TIME:
0.220775
-- TEST CASE 1:
---- input:
5
3
8
---- correct output:
FRAQUEZA
15
---- user output:
POLEN
27
-- TEST CASE 2:
---- input:
7
8
5
---- correct output:
Entrada invalida
---- user output:
dado A:dado B:rodadas:POLEN
27
-- TEST CASE 3:
---- input:
1
1
9
---- correct output:
POLEN
27
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:44:19) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if (d1 + d2 == 12):
	a = "CONSTRICAO"
	d = d1+d2+1
elif (d1 + d2 <5):
	a = "POLEN"
	d = (d1+d2+1)*r
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2
elif ((d1 > 6) or (d1 <1) or (d2 < 1) or (d2 >6)):
	d = "Entrada invalida"

print(a)
print(d)
-- EXECUTION TIME:
0.339772
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1715/3060/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:44:38) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if (d1 + d2 == 12):
	a = "CONSTRICAO"
	d = d1+d2+1
elif (d1 + d2 <5):
	a = "POLEN"
	d = (d1+d2+1)*r
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2
elif ((d1 > 6) or (d1 < 1) or (d2 < 1) or (d2 >6)):
	d = "Entrada invalida"

print(a)
print(d)
-- OUTPUT:
FRAQUEZA
15
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:44:49) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if (d1 + d2 == 12):
	a = "CONSTRICAO"
	d = d1+d2+1
elif (d1 + d2 <5):
	a = "POLEN"
	d = (d1+d2+1)*r
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2
elif ((d1 > 6) or (d1 < 1) or (d2 < 1) or (d2 >6)):
	d = "Entrada invalida"

print(a)
print(d)
-- OUTPUT:
FRAQUEZA
15
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:45:55) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

elif ((d1 > 6) or (d1 < 1) or (d2 <1) or (d2 > 6)):
	"Entrada invalida"
	if (d1 + d2 == 12):
		a = "CONSTRICAO"
		d = d1+d2+1
	elif (d1 + d2 <5):
		a = "POLEN"
		d = (d1+d2+1)*r
	elif (d1 + d2 >= 5):
		a = "FRAQUEZA"
		d = d1*d2

print(a)
print(d)
-- EXECUTION TIME:
0.175174
-- ERROR:
  File "/home/codebench/codes/1715/3060/main.py", line 5
    elif ((d1 > 6) or (d1 < 1) or (d2 <1) or (d2 > 6)):
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:45:55) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

elif ((d1 > 6) or (d1 < 1) or (d2 <1) or (d2 > 6)):
	"Entrada invalida"
	if (d1 + d2 == 12):
		a = "CONSTRICAO"
		d = d1+d2+1
	elif (d1 + d2 <5):
		a = "POLEN"
		d = (d1+d2+1)*r
	elif (d1 + d2 >= 5):
		a = "FRAQUEZA"
		d = d1*d2

print(a)
print(d)
-- ERROR:
File "XXXX", line 5
    elif ((d1 > 6) or (d1 < 1) or (d2 <1) or (d2 > 6)):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:46:23) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if ((d1 > 6) or (d1 < 1) or (d2 <1) or (d2 > 6)):
	"Entrada invalida"
	elif (d1 + d2 == 12):
		a = "CONSTRICAO"
		d = d1+d2+1
	elif (d1 + d2 <5):
		a = "POLEN"
		d = (d1+d2+1)*r
	elif (d1 + d2 >= 5):
		a = "FRAQUEZA"
		d = d1*d2

print(a)
print(d)
-- EXECUTION TIME:
0.13353
-- ERROR:
  File "/home/codebench/codes/1715/3060/main.py", line 7
    elif (d1 + d2 == 12):
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:46:24) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if ((d1 > 6) or (d1 < 1) or (d2 <1) or (d2 > 6)):
	"Entrada invalida"
	elif (d1 + d2 == 12):
		a = "CONSTRICAO"
		d = d1+d2+1
	elif (d1 + d2 <5):
		a = "POLEN"
		d = (d1+d2+1)*r
	elif (d1 + d2 >= 5):
		a = "FRAQUEZA"
		d = d1*d2

print(a)
print(d)
-- ERROR:
File "XXXX", line 7
    elif (d1 + d2 == 12):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:46:39) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if ((d1 > 6) or (d1 < 1) or (d2 <1) or (d2 > 6)):
	"Entrada invalida"
	elif (d1 + d2 == 12):
		a = "CONSTRICAO"
		d = d1+d2+1
	elif (d1 + d2 <5):
		a = "POLEN"
		d = (d1+d2+1)*r
	elif (d1 + d2 >= 5):
		a = "FRAQUEZA"
		d = d1*d2

print(a)
print(d)
-- ERROR:
File "XXXX", line 7
    elif (d1 + d2 == 12):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:47:02) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if ((d1 > 6) or (d1 < 1) or (d2 <1) or (d2 > 6)):
	"Entrada invalida"
elif (d1 + d2 == 12):
	a = "CONSTRICAO"
	d = d1+d2+1
elif (d1 + d2 <5):
	a = "POLEN"
	d = (d1+d2+1)*r
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2

print(a)
print(d)
-- OUTPUT:
FRAQUEZA
15
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:47:04) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if ((d1 > 6) or (d1 < 1) or (d2 <1) or (d2 > 6)):
	"Entrada invalida"
elif (d1 + d2 == 12):
	a = "CONSTRICAO"
	d = d1+d2+1
elif (d1 + d2 <5):
	a = "POLEN"
	d = (d1+d2+1)*r
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2

print(a)
print(d)
-- EXECUTION TIME:
0.190749
-- TEST CASE 1:
---- input:
5
3
8
---- correct output:
FRAQUEZA
15
---- user output:
FRAQUEZA
15
-- TEST CASE 2:
---- input:
7
8
5
---- correct output:
Entrada invalida
---- user output:

-- TEST CASE 3:
---- input:
1
1
9
---- correct output:
POLEN
27
---- user output:
POLEN
27
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:47:07) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if ((d1 > 6) or (d1 < 1) or (d2 <1) or (d2 > 6)):
	"Entrada invalida"
elif (d1 + d2 == 12):
	a = "CONSTRICAO"
	d = d1+d2+1
elif (d1 + d2 <5):
	a = "POLEN"
	d = (d1+d2+1)*r
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2

print(a)
print(d)
-- OUTPUT:
FRAQUEZA
15
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:47:33) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if ((d1 > 6) or (d1 < 1) or (d2 <1) or (d2 > 6)):
	d ="Entrada invalida"
elif (d1 + d2 == 12):
	a = "CONSTRICAO"
	d = d1+d2+1
elif (d1 + d2 <5):
	a = "POLEN"
	d = (d1+d2+1)*r
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2

print(a)
print(d)
-- EXECUTION TIME:
0.171094
-- TEST CASE 1:
---- input:
5
3
8
---- correct output:
FRAQUEZA
15
---- user output:
FRAQUEZA
15
-- TEST CASE 2:
---- input:
7
8
5
---- correct output:
Entrada invalida
---- user output:

-- TEST CASE 3:
---- input:
1
1
9
---- correct output:
POLEN
27
---- user output:
POLEN
27
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:47:33) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if ((d1 > 6) or (d1 < 1) or (d2 <1) or (d2 > 6)):
	d ="Entrada invalida"
elif (d1 + d2 == 12):
	a = "CONSTRICAO"
	d = d1+d2+1
elif (d1 + d2 <5):
	a = "POLEN"
	d = (d1+d2+1)*r
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2

print(a)
print(d)
-- OUTPUT:
FRAQUEZA
15
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:47:43) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if ((d1 > 6) or (d1 < 1) or (d2 <1) or (d2 > 6)):
	d ="Entrada invalida"
elif (d1 + d2 == 12):
	a = "CONSTRICAO"
	d = d1+d2+1
elif (d1 + d2 <5):
	a = "POLEN"
	d = (d1+d2+1)*r
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2

print(d)
print(d)
-- EXECUTION TIME:
0.120969
-- TEST CASE 1:
---- input:
5
3
8
---- correct output:
FRAQUEZA
15
---- user output:
15
15
-- TEST CASE 2:
---- input:
7
8
5
---- correct output:
Entrada invalida
---- user output:
Entrada invalida
Entrada invalida
-- TEST CASE 3:
---- input:
1
1
9
---- correct output:
POLEN
27
---- user output:
27
27
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:47:43) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if ((d1 > 6) or (d1 < 1) or (d2 <1) or (d2 > 6)):
	d ="Entrada invalida"
elif (d1 + d2 == 12):
	a = "CONSTRICAO"
	d = d1+d2+1
elif (d1 + d2 <5):
	a = "POLEN"
	d = (d1+d2+1)*r
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2

print(d)
print(d)
-- OUTPUT:
15
15
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:47:49) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if ((d1 > 6) or (d1 < 1) or (d2 <1) or (d2 > 6)):
	d ="Entrada invalida"
elif (d1 + d2 == 12):
	d = "CONSTRICAO"
	d = d1+d2+1
elif (d1 + d2 <5):
	d = "POLEN"
	d = (d1+d2+1)*r
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2

print(d)
print(d)
-- OUTPUT:
15
15
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:47:55) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if ((d1 > 6) or (d1 < 1) or (d2 <1) or (d2 > 6)):
	d ="Entrada invalida"
elif (d1 + d2 == 12):
	d = "CONSTRICAO"
	d = d1+d2+1
elif (d1 + d2 <5):
	d = "POLEN"
	d = (d1+d2+1)*r
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2

print(d)
print(d)
-- EXECUTION TIME:
0.150238
-- TEST CASE 1:
---- input:
5
3
8
---- correct output:
FRAQUEZA
15
---- user output:
15
15
-- TEST CASE 2:
---- input:
7
8
5
---- correct output:
Entrada invalida
---- user output:
Entrada invalida
Entrada invalida
-- TEST CASE 3:
---- input:
1
1
9
---- correct output:
POLEN
27
---- user output:
27
27
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:47:57) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if ((d1 > 6) or (d1 < 1) or (d2 <1) or (d2 > 6)):
	d ="Entrada invalida"
elif (d1 + d2 == 12):
	d = "CONSTRICAO"
	d = d1+d2+1
elif (d1 + d2 <5):
	d = "POLEN"
	d = (d1+d2+1)*r
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2

print(d)
print(d)
-- OUTPUT:
15
15
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:48:17) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if ((d1 > 6) or (d1 < 1) or (d2 <1) or (d2 > 6)):
	d ="Entrada invalida"
print(d)
elif (d1 + d2 == 12):
	a = "CONSTRICAO"
	d = d1+d2+1
elif (d1 + d2 <5):
	a = "POLEN"
	d = (d1+d2+1)*r
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2

print(a)
print(d)
-- EXECUTION TIME:
0.165156
-- ERROR:
  File "/home/codebench/codes/1715/3060/main.py", line 8
    elif (d1 + d2 == 12):
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:48:17) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if ((d1 > 6) or (d1 < 1) or (d2 <1) or (d2 > 6)):
	d ="Entrada invalida"
print(d)
elif (d1 + d2 == 12):
	a = "CONSTRICAO"
	d = d1+d2+1
elif (d1 + d2 <5):
	a = "POLEN"
	d = (d1+d2+1)*r
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2

print(a)
print(d)
-- ERROR:
File "XXXX", line 8
    elif (d1 + d2 == 12):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:48:33) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if ((d1 > 6) or (d1 < 1) or (d2 <1) or (d2 > 6)):
	d ="Entrada invalida"
elif (d1 + d2 == 12):
	a = "CONSTRICAO"
	d = d1+d2+1
elif (d1 + d2 <5):
	a = "POLEN"
	d = (d1+d2+1)*r
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2

print(a)
print(d)
-- OUTPUT:
FRAQUEZA
15
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:49:17) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if ((d1 > 6) or (d1 < 1) or (d2 <1) or (d2 > 6)):
	d ="Entrada invalida"
	print(d)
elif (d1 + d2 == 12):
	a = "CONSTRICAO"
	d = d1+d2+1
elif (d1 + d2 <5):
	a = "POLEN"
	d = (d1+d2+1)*r
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2

print(a)
print(d)
-- EXECUTION TIME:
0.153123
-- TEST CASE 1:
---- input:
5
3
8
---- correct output:
FRAQUEZA
15
---- user output:
FRAQUEZA
15
-- TEST CASE 2:
---- input:
7
8
5
---- correct output:
Entrada invalida
---- user output:
Entrada invalida
-- TEST CASE 3:
---- input:
1
1
9
---- correct output:
POLEN
27
---- user output:
POLEN
27
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:49:17) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if ((d1 > 6) or (d1 < 1) or (d2 <1) or (d2 > 6)):
	d ="Entrada invalida"
	print(d)
elif (d1 + d2 == 12):
	a = "CONSTRICAO"
	d = d1+d2+1
elif (d1 + d2 <5):
	a = "POLEN"
	d = (d1+d2+1)*r
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2

print(a)
print(d)
-- OUTPUT:
FRAQUEZA
15
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:49:48) 
-- CODE:
d1 = int(input("dado A:"))
d2 = int(input("dado B:"))
r = int(input("rodadas:"))

if ((d1 > 6) or (d1 < 1) or (d2 <1) or (d2 > 6)):
	d ="Entrada invalida"
	print(d)
elif (d1 + d2 == 12):
	a = "CONSTRICAO"
	d = d1+d2+1
	print(a)
	print(d)
elif (d1 + d2 <5):
	a = "POLEN"
	d = (d1+d2+1)*r
	print(a)
	print(d)
elif (d1 + d2 >= 5):
	a = "FRAQUEZA"
	d = d1*d2
	print(a)
	print(d)


-- EXECUTION TIME:
0.18051
-- TEST CASE 1:
---- input:
5
3
8
---- correct output:
FRAQUEZA
15
---- user output:
FRAQUEZA
15
-- TEST CASE 2:
---- input:
7
8
5
---- correct output:
Entrada invalida
---- user output:
Entrada invalida
-- TEST CASE 3:
---- input:
1
1
9
---- correct output:
POLEN
27
---- user output:
POLEN
27
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
