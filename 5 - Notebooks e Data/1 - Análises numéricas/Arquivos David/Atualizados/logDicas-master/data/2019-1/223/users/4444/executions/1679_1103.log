== TEST (2019-04-23 16:23:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=2
b=2
c=2
=print(a==b)and (b==c)

-- ERROR:
File "XXXX", line 7
    =print(a==b)and (b==c)
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 16:24:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=2
b=2
c=2
=print((a==b)and (b==c))

-- ERROR:
File "XXXX", line 7
    =print((a==b)and (b==c))
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 16:24:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=2
b=2
c=2
=print((a==b)and (b==c))

-- ERROR:
File "XXXX", line 7
    =print((a==b)and (b==c))
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 16:24:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=2
b=2
c=2
=print((a==b)and(b==c))


-- ERROR:
File "XXXX", line 7
    =print((a==b)and(b==c))
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 16:35:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=2
b=2
c=2
= print((a==b)and(b==c))



-- ERROR:
File "XXXX", line 7
    = print((a==b)and(b==c))
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:30:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######
x=float(input('digite x: ")
a=float(input('digite a: ")
b=float(input('digite b: ")

if (a <= x) and  (x<= b):
				  print("x",'percente ao intervalo', a, 'e', b )
		
	
				 
				 



				 				  

				  





-- ERROR:
File "XXXX", line 5
    x=float(input('digite x: ")
                              ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:30:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######
x=float(input('digite x: ')
a=float(input('digite a: ')
b=float(input('digite b: ')

if (a <= x) and  (x<= b):
				  print("x",'percente ao intervalo', a, 'e', b )
		
	
				 
				 



				 				  

				  





-- ERROR:
File "XXXX", line 6
    a=float(input()
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:31:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if (a <= x) and  (x<= b):
				  print("x",'percente ao intervalo', a, 'e', b )
		
	
				 
				 



				 				  

				  





-- ERROR:
File "XXXX", line 6
    a=float(input()
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:31:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if (a <= x) and  (x<= b):
				  print("x",'percente ao intervalo', a, 'e', b )
		
	
				 
				 



				 				  

				  





-- EXECUTION TIME:
0.128468
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:

-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:

-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
x percente ao intervalo 1.1 e 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:34:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if (a <= x) and  (x<= b):
				  print("x",'percente ao intervalo', a, 'e', b )
elif:()"x",'npercente ao intervalo', a, 'e', b )
	
if ( b <= a):
	print('Entradas",a "e', b 'invalidas')
	
		
	
				 
				 



				 				  

				  





-- ERROR:
File "XXXX", line 11
    elif:()"x",'npercente ao intervalo', a, 'e', b )
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:34:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if (a <= x) and  (x<= b):
				  print("x",'percente ao intervalo', a, 'e', b )
	
if ( b <= a):
	print('Entradas",a "e', b 'invalidas')
	
		
	
				 
				 



				 				  

				  





-- ERROR:
File "XXXX", line 13
    print('Entradas",a "e', b 'invalidas')
                                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:35:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if (a <= x) and  (x<= b):
				  print("x",'percente ao intervalo', a, 'e', b )
	

		
	
				 
				 



				 				  

				  





-- ERROR:
File "XXXX", line 13
    print('Entradas",a "e', b 'invalidas')
                                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:37:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if (a <= x) and  (x<= b):
				  print("x",'percente ao intervalo', a, 'e', b )
elif (a > x) and ( x > b):
	print("x",' nao percente ao intervalo', a, 'e', b )
	

	

		
	
				 
				 



				 				  

				  





-- ERROR:
File "XXXX", line 13
    print('Entradas",a "e', b 'invalidas')
                                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:37:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if (a <= x) and  (x<= b):
				  print("x",'percente ao intervalo', a, 'e', b )
elif (a > x) and ( x > b):
	print("x",' nao percente ao intervalo', a, 'e', b )
	

	

		
	
				 
				 



				 				  

				  





-- ERROR:
File "XXXX", line 13
    print('Entradas",a "e', b 'invalidas')
                                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:39:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if (a <= x) and  (x<= b):
				  print("x",'percente ao intervalo', a, 'e', b )
elif (a > x) and ( x > b):
	print("x",' nao percente ao intervalo', a, 'e', b )
elif: (b <= a):
		print ('Entradas',a 'e',b 'invalidas')
	

	

		
	
				 
				 



				 				  

				  





-- EXECUTION TIME:
0.170879
-- ERROR:
  File "/home/codebench/codes/1679/1103/main.py", line 13
    elif: (b <= a):
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:39:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if (a <= x) and  (x<= b):
				  print("x",'percente ao intervalo', a, 'e', b )
elif (a > x) and ( x > b):
	print("x",' nao percente ao intervalo', a, 'e', b )
elif: (b <= a):
		print ('Entradas',a 'e',b 'invalidas')
	

	

		
	
				 
				 



				 				  

				  





-- ERROR:
File "XXXX", line 13
    elif: (b <= a):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:39:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if (a <= x) and  (x<= b):
				  print("x",'percente ao intervalo', a, 'e', b )
elif (a > x) and ( x > b):
	print("x",' nao percente ao intervalo', a, 'e', b )
elif (b <= a):
		print ('Entradas',a 'e',b 'invalidas')
	

	

		
	
				 
				 



				 				  

				  





-- EXECUTION TIME:
0.178607
-- ERROR:
  File "/home/codebench/codes/1679/1103/main.py", line 14
    print ('Entradas',a 'e',b 'invalidas')
                          ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:39:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if (a <= x) and  (x<= b):
				  print("x",'percente ao intervalo', a, 'e', b )
elif (a > x) and ( x > b):
	print("x",' nao percente ao intervalo', a, 'e', b )
elif (b <= a):
		print ('Entradas',a 'e',b 'invalidas')
	

	

		
	
				 
				 



				 				  

				  





-- EXECUTION TIME:
0.148282
-- ERROR:
  File "/home/codebench/codes/1679/1103/main.py", line 14
    print ('Entradas',a 'e',b 'invalidas')
                          ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:39:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if (a <= x) and  (x<= b):
				  print("x",'percente ao intervalo', a, 'e', b )
elif (a > x) and ( x > b):
	print("x",' nao percente ao intervalo', a, 'e', b )
elif (b <= a):
		print ('Entradas',a 'e',b 'invalidas')
	

	

		
	
				 
				 



				 				  

				  





-- ERROR:
File "XXXX", line 14
    print ('Entradas',a 'e',b 'invalidas')
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:40:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if (a <= x) and  (x<= b):
	print("x",'percente ao intervalo', a, 'e', b )
elif (a > x) and ( x > b):
	print("x",' nao percente ao intervalo', a, 'e', b )
elif (b <= a):
	print('Entradas',a 'e',b 'invalidas')
	

	

		
	
				 
				 



				 				  

				  





-- ERROR:
File "XXXX", line 14
    print('Entradas',a 'e',b 'invalidas')
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:40:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if (a <= x) and  (x<= b):
	print("x",'percente ao intervalo', a, 'e', b )
elif (a > x) and ( x > b):
	print("x",' nao percente ao intervalo', a, 'e', b )
elif (b <= a):
	print('Entradas invalidas')
	

	

		
	
				 
				 



				 				  

				  





-- ERROR:
File "XXXX", line 14
    print('Entradas',a 'e',b 'invalidas')
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:40:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if (a <= x) and  (x<= b):
	print("x",'percente ao intervalo', a, 'e', b )
elif (a > x) and ( x > b):
	print("x",' nao percente ao intervalo', a, 'e', b )
elif (b <= a):
	print('Entradas invalidas')
	

	

		
	
				 
				 



				 				  

				  





-- ERROR:
File "XXXX", line 14
    print('Entradas',a 'e',b 'invalidas')
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:40:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if (a <= x) and  (x<= b):
	print("x",'percente ao intervalo', a, 'e', b )
elif (a > x) and ( x > b):
	print("x",' nao percente ao intervalo', a, 'e', b )
elif (b <= a):
	print('Entradas invalidas')
	

	

		
	
				 
				 



				 				  

				  





-- ERROR:
File "XXXX", line 14
    print('Entradas',a 'e',b 'invalidas')
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:42:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if(a <= x) and  (x<= b):
	print("x",'percente ao intervalo', a, 'e', b )
elif (x < a) and ( x > b):
	print("x",' nao percente ao intervalo', a, 'e', b )
elif (b <= a):
	print('Entradas invalidas')
	

	

		
	
				 
				 



				 				  

				  





-- ERROR:
File "XXXX", line 14
    print('Entradas',a 'e',b 'invalidas')
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:42:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if(a <= x) and  (x<= b):
	print("x",'percente ao intervalo', a, 'e', b )
elif (x < a) and ( x > b):
	print("x",' nao percente ao intervalo', a, 'e', b )
elif (b <= a):
	print('Entradas invalidas')
	

	

		
	
				 
				 



				 				  

				  





-- ERROR:
File "XXXX", line 14
    print('Entradas',a 'e',b 'invalidas')
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:42:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if(a <= x) and  (x<= b):
	print("x",'percente ao intervalo', a, 'e', b )
elif (x < a) and ( x > b):
	print("x",' nao percente ao intervalo', a, 'e', b )
elif (b <= a):
	print('Entradas invalidas')
	

	

		
	
				 
				 



				 				  

				  





-- ERROR:
File "XXXX", line 14
    print('Entradas',a 'e',b 'invalidas')
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:43:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if(a <= x) and  (x<= b):
	print("x",'percente ao intervalo', a, 'e', b )
elif (x < a) and ( x > b):
	print("x",' nao percente ao intervalo', a, 'e', b )
elif (b <= a):
	print('Entradas invalidas')
	

	

		
	
				 
				 



				 				  

				  





-- ERROR:
File "XXXX", line 14
    print('Entradas',a 'e',b 'invalidas')
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:44:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if(a <= x) and  (x<= b):
	print("x",'percente ao intervalo', a, 'e', b )
elif (x < a) or ( x > b):
	print("x",' nao percente ao intervalo', a, 'e', b )
elif (b <= a):
	print('Entradas invalidas')
	

	

		
			
				 
				 



				 				  

				  





-- EXECUTION TIME:
0.135015
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
x  nao percente ao intervalo 3.0 e 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
x  nao percente ao intervalo 6.5 e 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
x percente ao intervalo 1.1 e 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:44:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if(a <= x) and  (x<= b):
	print("x",'percente ao intervalo', a, 'e', b )
elif (x < a) or ( x > b):
	print("x",' nao percente ao intervalo', a, 'e', b )
elif (b <= a):
	print('Entradas invalidas')
	

	

		
			
				 
				 



				 				  

				  





-- OUTPUT:
x  nao percente ao intervalo 3.0 e 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:44:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if(a <= x) and  (x<= b):
	print("x",'percente ao intervalo', a, 'e', b )
elif (x < a) or ( x > b):
	print("x",' nao percente ao intervalo', a, 'e', b )
elif (b <= a):
	print('Entradas invalidas')
	

	

		
			
				 
				 



				 				  

				  





-- OUTPUT:
x  nao percente ao intervalo 3.0 e 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:44:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if(a <= x) and  (x<= b):
	print("x",'percente ao intervalo', a, 'e', b )
elif (x < a) or ( x > b):
	print("x",' nao percente ao intervalo', a, 'e', b )
elif (b <= a):
	print('Entradas invalidas')
	

	

		
			
				 
				 



				 				  

				  





-- OUTPUT:
x  nao percente ao intervalo 3.0 e 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:45:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if(a <= x) and  (x<= b):
	print("x",'percente ao intervalo', a, 'e', b )
elif (x < a) or ( x > b):
	print("x",' nao percente ao intervalo', a, 'e', b )
elif (b <= a):
	print('Entradas', a 'e', b 'invalidas')
	

	

		
			
				 
				 



				 				  

				  





-- ERROR:
File "XXXX", line 14
    print('Entradas', a 'e', b 'invalidas')
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:45:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if(a <= x) and  (x<= b):
	print("x",'percente ao intervalo', a, 'e', b )
elif (x < a) or ( x > b):
	print("x",' nao percente ao intervalo', a, 'e', b )
else (b <= a):
	print('Entradas', a 'e', b 'invalidas')
	

	

		
			
				 
				 



				 				  

				  





-- ERROR:
File "XXXX", line 13
    else (b <= a):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:46:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if(a <= x) and  (x<= b):
	print("x",'percente ao intervalo', a, 'e', b )
elif (x < a) or ( x > b):
	print("x",' nao percente ao intervalo', a, 'e', b )
else (b <= a):
	print('Entradas', a 'e', b 'invalidas')
	

	

		
			
				 
				 



				 				  

				  





-- ERROR:
File "XXXX", line 13
    else (b <= a):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:47:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if(a <= x) and  (x<= b):
	print("x",'percente ao intervalo', a, 'e', b )
elif (x < a) or ( x > b):
	print("x",' nao percente ao intervalo', a, 'e', b )
elif (b <= a):
	print('Entradas', a 'e', b 'invalidas')
	

	

		
			
				 
				 



				 				  

				  





-- ERROR:
File "XXXX", line 14
    print('Entradas', a 'e', b 'invalidas')
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:48:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if(a <= x) and  (x<= b):
	print("x",'percente ao intervalo', a, 'e', b )
elif (x < a) or ( x > b):
	print("x",' nao percente ao intervalo', a, 'e', b )
elif (b <= a):
	print('Entradas', a, 'e', b 'invalidas')
	

	

		
			
				 
				 



				 				  

				  





-- ERROR:
File "XXXX", line 14
    print('Entradas', a, 'e', b 'invalidas')
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:48:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if(a <= x) and  (x<= b):
	print("x",'percente ao intervalo', a, 'e', b )
elif (x < a) or ( x > b):
	print("x",' nao percente ao intervalo', a, 'e', b )
elif (b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
	

	

		
			
				 
				 



				 				  

				  





-- OUTPUT:
x  nao percente ao intervalo 3.0 e 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:49:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if(a <= x) and  (x<= b):
	print(x,'percente ao intervalo', a, 'e', b )
elif (x < a) or ( x > b):
	print(x,'nao percente ao intervalo', a, 'e', b )
elif (b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
	

	

		
			
				 
				 



				 				  

				  





-- OUTPUT:
2.0 nao percente ao intervalo 3.0 e 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:49:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if(a <= x) and  (x<= b):
	print(x,'percente ao intervalo', a, 'e', b )
elif (x < a) or ( x > b):
	print(x,'nao percente ao intervalo', a, 'e', b )
elif (b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
	

	

		
			
				 
				 



				 				  

				  





-- OUTPUT:
2.0 nao percente ao intervalo 3.0 e 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:49:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if(a <= x) and  (x<= b):
	print(x,'percente ao intervalo', a, 'e', b )
elif (x < a) or ( x > b):
	print(x,'nao percente ao intervalo', a, 'e', b )
elif (b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
	

	

		
			
				 
				 



				 				  

				  





-- EXECUTION TIME:
0.150837
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao percente ao intervalo 3.0 e 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao percente ao intervalo 6.5 e 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 percente ao intervalo 1.1 e 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:50:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######

x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if(a <= x) and  (x<= b):
	print(x,'percente ao intervalo', a, 'e', b )
elif (x < a) or ( x > b):
	print(x,'nao percente ao intervalo', a, 'e', b )
elif (b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
	

	

		
			
				 
				 



				 				  

				  





-- OUTPUT:
2.0 nao percente ao intervalo 3.0 e 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:50:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######

x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if(a <= x) and  (x<= b):
	print(x,'percente ao intervalo', a, 'e', b )
elif (x < a) or ( x > b):
	print(x,'nao percente ao intervalo', a, 'e', b )
elif (b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
	

	

		
			
				 
				 



				 				  

				  





-- OUTPUT:
2.0 nao percente ao intervalo 3.0 e 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:50:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######

x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if(a <= x) and  (x<= b):
	print(x,'percente ao intervalo', a, 'e', b )
elif (x < a) or ( x > b):
	print(x,'nao percente ao intervalo', a, 'e', b )
elif (b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
	

	

		
			
				 
				 



				 				  

				  





-- OUTPUT:
2.0 nao percente ao intervalo 3.0 e 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:51:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######

x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if(a <= x) and  (x<= b):
	print(x,'percente ao intervalo', a, 'e', b )
elif (x < a) and ( x > b):
	print(x,'nao percente ao intervalo', a, 'e', b )
elif (b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
	

	

		
			
				 
				 



				 				  

				  





-- EXECUTION TIME:
0.147058
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:

-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao percente ao intervalo 6.5 e 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 percente ao intervalo 1.1 e 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:51:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######

x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if(a <= x) and  (x<= b):
	print(x,'percente ao intervalo', a, 'e', b )
elif (x < a) or ( x > b):
	print(x,'nao percente ao intervalo', a, 'e', b )
elif (b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
	

	

		
			
				 
				 



				 				  

				  





-- EXECUTION TIME:
0.123531
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao percente ao intervalo 3.0 e 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
digite x: digite a: digite b: 5.5 nao percente ao intervalo 6.5 e 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
digite x: digite a: digite b: 6.5 percente ao intervalo 1.1 e 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:51:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######

x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if(a <= x) and  (x<= b):
	print(x,'percente ao intervalo', a, 'e', b )
elif (x < a) or ( x > b):
	print(x,'nao percente ao intervalo', a, 'e', b )
elif (b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
	

	

		
			
				 
				 



				 				  

				  





-- OUTPUT:
2.0 nao percente ao intervalo 3.0 e 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:52:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######

x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if(a <= x) and  (x<= b):
	print(x,'percente ao intervalo', a, ',', b )
elif (x < a) or ( x > b):
	print(x,'nao percente ao intervalo', a, ',', b )
elif (b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
	

	

		
			
				 
				 



				 				  

				  





-- EXECUTION TIME:
0.155251
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao percente ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao percente ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 percente ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:52:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######

x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if(a <= x) and  (x<= b):
	print(x,'percente ao intervalo', a, ',', b )
elif (x < a) or ( x > b):
	print(x,'nao percente ao intervalo', a, ',', b )
elif (b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
	

	

		
			
				 
				 



				 				  

				  





-- OUTPUT:
2.0 nao percente ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:53:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######

x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if(a <= x) and  (x<= b):
	print(x,'percente ao intervalo', a, ',', b )
elif (x < a) or ( x > b):
	print(x,'nao percente ao intervalo', a, ',', b )
elif (b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
	

	

		
			
				 
				 



				 				  

				  





-- EXECUTION TIME:
0.150739
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao percente ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao percente ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 percente ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:53:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######

x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if(a <= x) and  (x<= b):
	print(x,'percente ao intervalo', a, ',', b )
elif (x < a) or ( x > b):
	print(x,'nao percente ao intervalo', a, ',', b )
elif (b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
	

	

		
			
				 
				 



				 				  

				  





-- OUTPUT:
2.0 nao percente ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:53:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######

x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if(a <= x) and  (x<= b):
	print(x,'percente ao intervalo', a, ',', b )
elif (x < a) or ( x > b):
	print(x,'nao percente ao intervalo', a, ',', b )
elif (b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
	

	

		
			
				 
				 



				 				  

				  





-- OUTPUT:
2.0 nao percente ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:55:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######

x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if (b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
if(a <= x) and  (x<= b):
	print(x,'percente ao intervalo', a, ',', b )
elif (x < a) or ( x > b):
	print(x,'nao percente ao intervalo', a, ',', b )
	

	

		
			
				 
				 



				 				  

				  





-- EXECUTION TIME:
0.167687
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao percente ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
5.5 nao percente ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 percente ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:55:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######

x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if (b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
	if(a <= x) and  (x<= b):
	print(x,'percente ao intervalo', a, ',', b )
	elif (x < a) or ( x > b):
	print(x,'nao percente ao intervalo', a, ',', b )
	

	

		
			
				 
				 



				 				  

				  





-- EXECUTION TIME:
0.14294
-- ERROR:
  File "/home/codebench/codes/1679/1103/main.py", line 13
    print(x,'percente ao intervalo', a, ',', b )
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:55:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######

x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if (b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
	if(a <= x) and  (x<= b):
		print(x,'percente ao intervalo', a, ',', b )
	elif (x < a) or ( x > b):
		print(x,'nao percente ao intervalo', a, ',', b )
	

	

		
			
				 
				 



				 				  

				  





-- EXECUTION TIME:
0.122631
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:

-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
5.5 nao percente ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:56:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######

x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if (b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
	if(a <= x) and  (x<= b):
		print(x,'percente ao intervalo', a, ',', b )
	elif (x < a) or ( x > b):
		print(x,'nao percente ao intervalo', a, ',', b )
	

	

		
			
				 
				 



				 				  

				  





-- OUTPUT:
2.0 nao percente ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:56:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######

x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if (b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
	
	if(a <= x) and  (x<= b):
		print(x,'percente ao intervalo', a, ',', b )
	elif (x < a) or ( x > b):
		print(x,'nao percente ao intervalo', a, ',', b )
	

	

		
			
				 
				 



				 				  

				  





-- OUTPUT:
2.0 nao percente ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:57:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######

x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if (b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
	
if(a <= x) and  (x<= b):
	print(x,'percente ao intervalo', a, ',', b )
elif (x < a) or ( x > b):
	print(x,'nao percente ao intervalo', a, ',', b )
	

	

		
			
				 
				 



				 				  

				  





-- EXECUTION TIME:
0.141248
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao percente ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
5.5 nao percente ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 percente ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:57:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######

x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if (b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
	
if(a <= x) and  (x<= b):
	print(x,'percente ao intervalo', a, ',', b )
elif (x < a) or ( x > b):
	print(x,'nao percente ao intervalo', a, ',', b )
	

	

		
			
				 
				 



				 				  

				  





-- EXECUTION TIME:
0.210569
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao percente ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
5.5 nao percente ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 percente ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:57:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######

x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if (b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
	
if(a <= x) and  (x<= b):
	print(x,'percente ao intervalo', a, ',', b )
elif (x < a) or ( x > b):
	print(x,'nao percente ao intervalo', a, ',', b )
	

	

		
			
				 
				 



				 				  

				  





-- OUTPUT:
2.0 nao percente ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:58:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######

x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if (b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
	
if(a <= x) and  (x<= b):
	print(x,'percente ao intervalo', a, ',', b )
elif (x < a) or ( x > b):
	print(x,'nao percente ao intervalo', a, ',', b )
	

	

		
			
				 
				 



				 				  

				  





-- OUTPUT:
2.0 nao percente ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:59:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######

x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if (b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
if(a <= x) and  (x<= b):
	print(x,'percente ao intervalo', a, ',', b )
elif (x < a) or ( x > b):
	print(x,'nao percente ao intervalo', a, ',', b )
	

	

		
			
				 
				 



				 				  

				  





-- EXECUTION TIME:
0.131407
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao percente ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
5.5 nao percente ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 percente ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:59:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
#entradas - x a e b ######

x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if (b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
if(a <= x) and  (x<= b):
	print(x,'percente ao intervalo', a, ',', b )
elif (x < a) and ( x > b):
	print(x,'nao percente ao intervalo', a, ',', b )
	

	

		
			
				 
				 



				 				  

				  





-- EXECUTION TIME:
0.147952
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:

-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
5.5 nao percente ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 percente ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:00:42) 
-- CODE:
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if(a <= x) and  (x<= b):
	print(x,'percente ao intervalo', a, ',', b )

elif (x < a) and ( x > b):
	print(x,'nao percente ao intervalo', a, ',', b )

elif (b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
	

	

		
			
				 
				 



				 				  

				  





-- OUTPUT:
2.0 nao percente ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:01:09) 
-- CODE:
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if(a <= x) and  (x<= b):
	print(x,'percente ao intervalo', a, ',', b )

elif (x < a) or ( x > b):
	print(x,'nao percente ao intervalo', a, ',', b )

elif (b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
	

	

		
			
				 
				 



				 				  

				  





-- OUTPUT:
2.0 nao percente ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:04:00) 
-- CODE:
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if (b <= a):
	print('Entradas', a, 'e', b, 'invalidas')

if(a <= x) and  (x<= b):
	print(x,'percente ao intervalo', a, ',', b )

else:
	print(x,'nao percente ao intervalo', a, ',', b )

	

	

		
			
				 
				 



				 				  

				  





-- EXECUTION TIME:
0.170246
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao percente ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
5.5 nao percente ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 percente ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:04:36) 
-- CODE:
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if (b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
if(a <= x) and  (x<= b):
	print(x,'percente ao intervalo', a, ',', b )
else:
	print(x,'nao percente ao intervalo', a, ',', b )

	

	

		
			
				 
				 



				 				  

				  





-- EXECUTION TIME:
0.208102
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao percente ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
5.5 nao percente ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 percente ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:06:06) 
-- CODE:
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if (b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
elif(a <= x) and  (x<= b):
	print(x,'percente ao intervalo', a, ',', b )
else:
	print(x,'nao percente ao intervalo', a, ',', b )

	

	

		
			
				 
				 



				 				  

				  





-- EXECUTION TIME:
0.165113
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao percente ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 percente ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:06:10) 
-- CODE:
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if (b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
elif(a <= x) and  (x<= b):
	print(x,'percente ao intervalo', a, ',', b )
else:
	print(x,'nao percente ao intervalo', a, ',', b )

	

	

		
			
				 
				 



				 				  

				  





-- OUTPUT:
2.0 nao percente ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:06:15) 
-- CODE:
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if (b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
elif(a <= x) and  (x<= b):
	print(x,'percente ao intervalo', a, ',', b )
else:
	print(x,'nao percente ao intervalo', a, ',', b )

	

	

		
			
				 
				 



				 				  

				  





-- OUTPUT:
2.0 nao percente ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:06:27) 
-- CODE:
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if (b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
elif(a <= x) and  (x<= b):
	print(x,'percente ao intervalo', a, ',', b )
else:
	print(x,'nao percente ao intervalo', a, ',', b )

	

	

		
			
				 
				 



				 				  

				  





-- OUTPUT:
2.0 nao percente ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:06:38) 
-- CODE:
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if (b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
elif(a <= x) and  (x<= b):
	print(x,'percente ao intervalo', a, ',', b )
else:
	print(x,'nao percente ao intervalo', a, ',', b )

	

	

		
			
				 
				 



				 				  

				  





-- OUTPUT:
2.0 nao percente ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:08:04) 
-- CODE:
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if (b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
elif(a <= x) and  (x<= b):
	print(x,'percente ao intervalo', a,',', b )
else:
	print(x,'nao percente ao intervalo', a,',', b )

	

	

		
			
				 
				 



				 				  

				  





-- EXECUTION TIME:
0.163742
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao percente ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 percente ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:08:08) 
-- CODE:
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if (b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
elif(a <= x) and  (x<= b):
	print(x,'percente ao intervalo', a,',', b )
else:
	print(x,'nao percente ao intervalo', a,',', b )

	

	

		
			
				 
				 



				 				  

				  





-- OUTPUT:
2.0 nao percente ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:09:38) 
-- CODE:
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if (b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
elif(a <= x) and  (x<= b):
	print(x,'percente ao intervalo',a,',', b )
else:
	print(x,'nao percente ao intervalo',a,',', b )

	

	

		
			
				 
				 



				 				  

				  





-- EXECUTION TIME:
0.166873
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao percente ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 percente ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:10:06) 
-- CODE:
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if (b <= a):
	print('Entradas', a, 'e',b, 'invalidas')
elif(a <= x) and  (x<= b):
	print(x,'percente ao intervalo',a,',',b )
else:
	print(x,'nao percente ao intervalo',a,',',b )

	

	

		
			
				 
				 



				 				  

				  





-- EXECUTION TIME:
0.178752
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao percente ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 percente ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:10:11) 
-- CODE:
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if (b <= a):
	print('Entradas', a, 'e',b, 'invalidas')
elif(a <= x) and  (x<= b):
	print(x,'percente ao intervalo',a,',',b )
else:
	print(x,'nao percente ao intervalo',a,',',b )

	

	

		
			
				 
				 



				 				  

				  





-- OUTPUT:
2.0 nao percente ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:10:41) 
-- CODE:
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))

if (b <= a):
	print('Entradas', a, 'e',b, 'invalidas')
elif(a <= x) and  (x<= b):
	print(x,'percente ao intervalo',a,',',b )
else:
	print(x,'nao percente ao intervalo',a,',',b )

	

	

		
			
				 
				 



				 				  

				  





-- OUTPUT:
2.0 nao percente ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:11:42) 
-- CODE:
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))
if (b <= a):
	print('Entradas', a, 'e',b, 'invalidas')
elif(a <= x) and  (x<= b):
	print(x,'percente ao intervalo',a,',',b )
else:
	print(x,'nao percente ao intervalo',a,',',b )

	

	

		
			
				 
				 



				 				  

				  





-- EXECUTION TIME:
0.147632
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao percente ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 percente ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:13:48) 
-- CODE:
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))
if(b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
elif(a <= x) and  (x<= b):
	print(x,'percente ao intervalo', a,',', b)
else:
	print(x, 'nao percente ao intervalo', a, ',', b)

	

	

		
			
				 
				 



				 				  

				  





-- EXECUTION TIME:
0.135554
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao percente ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 percente ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:13:53) 
-- CODE:
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))
if(b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
elif(a <= x) and  (x<= b):
	print(x,'percente ao intervalo', a,',', b)
else:
	print(x, 'nao percente ao intervalo', a, ',', b)

	

	

		
			
				 
				 



				 				  

				  





-- EXECUTION TIME:
0.227127
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao percente ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 percente ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:14:04) 
-- CODE:
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))
if(b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
elif(a <= x) and (x<= b):
	print(x,'percente ao intervalo', a,',', b)
else:
	print(x, 'nao percente ao intervalo', a, ',', b)

	

	

		
			
				 
				 



				 				  

				  





-- EXECUTION TIME:
0.143521
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao percente ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 percente ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:15:00) 
-- CODE:
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))
if(b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
elif(a <= x) and (x<= b):
	print(x,'percente ao intervalo', a,',', b)
else:
	print(x, 'nao percente ao intervalo', a, ',', b)

	

	

		
			
				 
				 



				 				  

				  





-- OUTPUT:
2.0 nao percente ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:15:04) 
-- CODE:
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))
if(b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
elif(a <= x) and (x<= b):
	print(x,'percente ao intervalo', a,',', b)
else:
	print(x, 'nao percente ao intervalo', a, ',', b)

	

	

		
			
				 
				 



				 				  

				  





-- OUTPUT:
2.0 nao percente ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:15:28) 
-- CODE:
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))
if(b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
elif(a <= x) and (x<= b):
	print(x,'percente ao intervalo', a,',', b)
else:
	print(x, 'nao percente ao intervalo', a, ',', b)

	

	

		
			
				 
				 



				 				  

				  





-- EXECUTION TIME:
0.173996
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao percente ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 percente ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:15:56) 
-- CODE:
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))
if(b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
elif(a <= x) and (x<= b):
	print(x,'percente ao intervalo', a,',', b)
else:
	print(x, 'nao percente ao intervalo', a, ',', b)

	

	

		
			
				 
				 



				 				  

				  





-- EXECUTION TIME:
0.14545
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao percente ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 percente ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:19:20) 
-- CODE:
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))
if(b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
elif(a <= x) and (x<= b):
	print(x,'percente ao intervalo', a,',', b)
else:
	print(x, 'nao percente ao intervalo', a, ',', b)

	

	

		
			
				 
				 



				 				  

				  





-- OUTPUT:
2.0 nao percente ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:19:40) 
-- CODE:
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))
if(b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
elif(a <= x) and (x<= b):
	print(x,'percente ao intervalo', a,',', b)
else:
	print(x, 'nao percente ao intervalo', a, ',', b)

	

	

		
			
				 
				 



				 				  

				  





-- OUTPUT:
2.0 nao percente ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:20:44) 
-- CODE:
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))
if(b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
elif(a <= x) and (x<= b):
	print(x,'percente ao intervalo', a,',', b)
else:
	print(x, 'nao percente ao intervalo', a, ',', b)

	

	

		
			
				 
				 



				 				  

				  





-- OUTPUT:
2.0 nao percente ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:22:20) 
-- CODE:
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))
if(b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
elif((a <= x) and (x<= b)):
	print(x,'percente ao intervalo', a,',', b)
else:
	print(x, 'nao percente ao intervalo', a, ',', b)

	

	

		
			
				 
				 



				 				  

				  





-- EXECUTION TIME:
0.13968
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao percente ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 percente ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:22:24) 
-- CODE:
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))
if(b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
elif((a <= x) and (x<= b)):
	print(x,'percente ao intervalo', a,',', b)
else:
	print(x, 'nao percente ao intervalo', a, ',', b)

	

	

		
			
				 
				 



				 				  

				  





-- EXECUTION TIME:
0.140126
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao percente ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 percente ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:22:42) 
-- CODE:
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))
if(b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
elif((a <= x) and (x<= b)):
	print(x,' percente ao intervalo ', a,',', b)
else:
	print(x, 'nao percente ao intervalo', a, ',', b)

	

	

		
			
				 
				 



				 				  

				  





-- EXECUTION TIME:
0.239279
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao percente ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5  percente ao intervalo  1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:22:51) 
-- CODE:
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))
if(b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
elif((a <= x) and (x<= b)):
	print(x,' percente ao intervalo ', a,',', b)
else:
	print(x,'nao percente ao intervalo', a, ',', b)

	

	

		
			
				 
				 



				 				  

				  





-- EXECUTION TIME:
0.162373
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao percente ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5  percente ao intervalo  1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:22:53) 
-- CODE:
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))
if(b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
elif((a <= x) and (x<= b)):
	print(x,' percente ao intervalo ', a,',', b)
else:
	print(x,'nao percente ao intervalo', a, ',', b)

	

	

		
			
				 
				 



				 				  

				  





-- EXECUTION TIME:
0.151453
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao percente ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5  percente ao intervalo  1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:23:20) 
-- CODE:
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))
if(b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
elif((a <= x) and (x<= b)):
	print(x,' percente ao intervalo ', a,',', b)
else:
	print(x,'nao percente ao intervalo', a, ',', b)

	

	

		
			
				 
				 



				 				  

				  





-- OUTPUT:
2.0 nao percente ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:24:25) 
-- CODE:
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))
if(b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
elif(a <= x <= b):
	print(x,' percente ao intervalo ', a,',', b)
else:
	print(x,'nao percente ao intervalo', a, ',', b)

	

	

		
			
				 
				 



				 				  

				  





-- EXECUTION TIME:
0.138579
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao percente ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5  percente ao intervalo  1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:24:43) 
-- CODE:
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))
if(b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
elif((a <= x<= b) and ()):
	print(x,' percente ao intervalo ', a,',', b)
else:
	print(x,'nao percente ao intervalo', a, ',', b)

	

	

		
			
				 
				 



				 				  

				  





-- OUTPUT:
2.0 nao percente ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:25:06) 
-- CODE:
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))
if(b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
elif(a <= x <= b):
	print(x,' percente ao intervalo ', a,',', b)
else:
	print(x,'nao percente ao intervalo', a, ',', b)

	

	

		
			
				 
				 



				 				  

				  





-- OUTPUT:
2.0 nao percente ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:25:46) 
-- CODE:
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))
if(b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
elif(a <= x <= b):
	print(x,'percente ao intervalo', a,',', b)
else:
	print(x,'nao percente ao intervalo', a, ',', b)

	

	

		
			
				 
				 



				 				  

				  





-- EXECUTION TIME:
0.223447
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao percente ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 percente ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:26:02) 
-- CODE:
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))
if(b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
elif(a <= x <= b):
	print(x,'percente ao intervalo', a,',', b)
else:
	print(x,'nao percente ao intervalo', a, ',', b)

	

	

		
			
				 
				 



				 				  

				  





-- EXECUTION TIME:
0.142284
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao percente ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 percente ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:26:03) 
-- CODE:
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))
if(b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
elif(a <= x <= b):
	print(x,'percente ao intervalo', a,',', b)
else:
	print(x,'nao percente ao intervalo', a, ',', b)

	

	

		
			
				 
				 



				 				  

				  





-- OUTPUT:
2.0 nao percente ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:26:46) 
-- CODE:
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))
if(b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
elif(a < x < b):
	print(x,'percente ao intervalo', a,',', b)
else:
	print(x,'nao percente ao intervalo', a, ',', b)

	

	

		
			
				 
				 



				 				  

				  





-- EXECUTION TIME:
0.165475
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao percente ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 percente ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:26:54) 
-- CODE:
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))
if(b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
elif(a<x<b):
	print(x,'percente ao intervalo', a,',', b)
else:
	print(x,'nao percente ao intervalo', a, ',', b)

	

	

		
			
				 
				 



				 				  

				  





-- EXECUTION TIME:
0.212457
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao percente ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 percente ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:27:00) 
-- CODE:
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))
if(b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
elif(a < x < b ):
	print(x,'percente ao intervalo', a,',', b)
else:
	print(x,'nao percente ao intervalo', a, ',', b)

	

	

		
			
				 
				 



				 				  

				  





-- EXECUTION TIME:
0.14566
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao percente ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 percente ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:27:30) 
-- CODE:
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))
if(b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
elif( a <= x <= b ):
	print(x,'percente ao intervalo', a,',', b)
else:
	print(x,'nao percente ao intervalo', a, ',', b)

	

	

		
			
				 
				 



				 				  

				  





-- EXECUTION TIME:
0.152298
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao percente ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 percente ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:28:24) 
-- CODE:
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))
if(b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
elif( a <= x <= b ):
	print(x,'pertence ao intervalo', a,',', b)
else:
	print(x,'nao pertence ao intervalo', a, ',', b)

	

	

		
			
				 
				 



				 				  

				  





-- EXECUTION TIME:
0.13234
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
