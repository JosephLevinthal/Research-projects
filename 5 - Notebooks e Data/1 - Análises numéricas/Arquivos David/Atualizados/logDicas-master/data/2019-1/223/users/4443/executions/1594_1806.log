== TEST (2019-03-28 08:39:46) 
-- CODE:
# Leitura de um numero de pessoas de um grupo:
n = int(input("Digite o numero de pessoas do grupo: ")
# Probabilidade de duas pessoas fazerem aniversario no mesmo dia:
p = 1 -((365!)/(365-n))! * (1/365**n)
print(p*100)		  
-- ERROR:
File "XXXX", line 4
    p = 1 -((365!)/(365-n))! * (1/365**n)
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 08:40:54) 
-- CODE:
# Leitura de um numero de pessoas de um grupo:
n = int(input("Digite o numero de pessoas do grupo: ")
# Probabilidade de duas pessoas fazerem aniversario no mesmo dia:
p = 1 -(365!/(365 - n))! * 1/365**n
print(p*100)		  
-- ERROR:
File "XXXX", line 4
    p = 1 -(365!/(365 - n))! * 1/365**n
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 08:41:29) 
-- CODE:
from math import *
# Leitura de um numero de pessoas de um grupo:
n = int(input("Digite o numero de pessoas do grupo: ")
# Probabilidade de duas pessoas fazerem aniversario no mesmo dia:
p = 1 -(365!/(365 - n))! * 1/365**n
print(p*100)		  
-- ERROR:
File "XXXX", line 5
    p = 1 -(365!/(365 - n))! * 1/365**n
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 08:41:58) 
-- CODE:
from math import *
# Leitura de um numero de pessoas de um grupo:
n = int(input("Digite o numero de pessoas do grupo: ")
# Probabilidade de duas pessoas fazerem aniversario no mesmo dia:
p(n) = 1 -(365!/(365 - n))! * 1/365**n
print(p(n)*100)		  
-- ERROR:
File "XXXX", line 5
    p(n) = 1 -(365!/(365 - n))! * 1/365**n
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 08:42:17) 
-- CODE:
from math import *
# Leitura de um numero de pessoas de um grupo:
n = int(input("Digite o numero de pessoas do grupo: ")
# Probabilidade de duas pessoas fazerem aniversario no mesmo dia:
prob = 1 -(365!/(365 - n))! * 1/365**n
print(prob*100)		  
-- ERROR:
File "XXXX", line 5
    prob = 1 -(365!/(365 - n))! * 1/365**n
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 08:42:50) 
-- CODE:
from math import *
# Leitura de um numero de pessoas de um grupo:
n = int(input("Digite o numero de pessoas do grupo: ")
# Probabilidade de duas pessoas fazerem aniversario no mesmo dia:
a = 1 - (365!/(365 - n))! * 1/365**n
print(a*100)		  
-- ERROR:
File "XXXX", line 5
    a = 1 - (365!/(365 - n))! * 1/365**n
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 08:43:36) 
-- CODE:
from math import *
# Leitura de um numero de pessoas de um grupo:
n = int(input("Digite o numero de pessoas do grupo: ")
# Probabilidade de duas pessoas fazerem aniversario no mesmo dia:
a = 1 - ((365!/(365 - n))! * 1/365**n)
print(a*100)		  
-- ERROR:
File "XXXX", line 5
    a = 1 - ((365!/(365 - n))! * 1/365**n)
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 08:57:52) 
-- CODE:
from math import *
# Leitura de um numero de pessoas de um grupo:
n = int(input("Digite o numero de pessoas do grupo: ")
# Probabilidade de duas pessoas fazerem aniversario no mesmo dia:
a = 365!/(365 - n)!
b = 1/365**n
prob = 1 - a*b
print(prob * 100)		  
-- ERROR:
File "XXXX", line 5
    a = 365!/(365 - n)!
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 08:58:42) 
-- CODE:
from math import *
# Leitura de um numero de pessoas de um grupo:
n = int(input("Digite o numero de pessoas do grupo: ")
# Probabilidade de duas pessoas fazerem aniversario no mesmo dia:
a = factorial(365)/factorial(365 - n)
b = 1/365**n
prob = 1 - a*b
print(prob * 100)		  
-- ERROR:
File "XXXX", line 5
    a = factorial(365)/factorial(365 - n)
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 08:59:11) 
-- CODE:
from math import *

# Leitura de um numero de pessoas de um grupo:
n = int(input("Digite o numero de pessoas do grupo: ")
# Probabilidade de duas pessoas fazerem aniversario no mesmo dia:
a = factorial(365)/factorial(365 - n)
b = 1/365**n
prob = 1 - a*b
print(prob * 100)		  
-- ERROR:
File "XXXX", line 6
    a = factorial(365)/factorial(365 - n)
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 08:59:51) 
-- CODE:
from math import *

# Leitura de um numero de pessoas de um grupo:
n = int(input("Digite o numero de pessoas do grupo: ")
# Probabilidade de duas pessoas fazerem aniversario no mesmo dia:
a = factorial(365)
print(a)

-- ERROR:
File "XXXX", line 6
    a = factorial(365)
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 09:00:26) 
-- CODE:
from math import *

# Leitura de um numero de pessoas de um grupo:
n = int(input("Digite o numero de pessoas do grupo: ")
# Probabilidade de duas pessoas fazerem aniversario no mesmo dia:
a = factorial(n)
print(a)

-- ERROR:
File "XXXX", line 6
    a = factorial(n)
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 09:01:17) 
-- CODE:
from math import factorial()

a = factorial(10)
print(a)

-- ERROR:
File "XXXX", line 1
    from math import factorial()
                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 09:01:31) 
-- CODE:
from math import factorial

a = factorial(10)
print(a)

-- OUTPUT:
3628800
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 09:03:41) 
-- CODE:
from math import factorial
# Leitura do numero de pessoas
n = int(input("Digite o numero de pessoas: "))
# Leitura do numero de pessoas
a = factorial(n)
print(a)

-- OUTPUT:
479001600
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 11:47:24) 
-- CODE:
from math import factorial
# Leitura do numero de pessoas
n = int(input("Digite o numero de pessoas: "))
# Calculo da probabilidade de dois aniversariantes no mesmo dia
p = 1 - ((factorial(365)/factorial(365 - n)) * 1/365**n)
print(p)

-- OUTPUT:
0.16702478883806438
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 11:48:21) 
-- CODE:
from math import factorial
# Leitura do numero de pessoas
n = int(input("Digite o numero de pessoas: "))
# Calculo da probabilidade de dois aniversariantes no mesmo dia
p = round(1 - ((factorial(365)/factorial(365 - n)) * 1/365**n), 2)
print(p)

-- OUTPUT:
0.17
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 11:48:41) 
-- CODE:
from math import factorial
# Leitura do numero de pessoas
n = int(input("Digite o numero de pessoas: "))
# Calculo da probabilidade de dois aniversariantes no mesmo dia
p = round(1 - ((factorial(365)/factorial(365 - n)) * 1/365**n), 2)
print(p*100)

-- OUTPUT:
17.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 11:48:56) 
-- CODE:
from math import factorial
# Leitura do numero de pessoas
n = int(input("Digite o numero de pessoas: "))
# Calculo da probabilidade de dois aniversariantes no mesmo dia
p = round(1 - ((factorial(365)/factorial(365 - n)) * 1/365**n), 2)
print(p*100)

-- EXECUTION TIME:
0.169791
-- TEST CASE 1:
---- input:
12
---- correct output:
16.7
---- user output:
17.0
-- TEST CASE 2:
---- input:
24
---- correct output:
53.83
---- user output:
54.0
-- TEST CASE 3:
---- input:
99
---- correct output:
100.0
---- user output:
100.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 11:49:58) 
-- CODE:
from math import factorial
# Leitura do numero de pessoas
n = int(input("Digite o numero de pessoas: "))
# Calculo da probabilidade de dois aniversariantes no mesmo dia
p = round(1 - ((factorial(365)/factorial(365 - n)) * 1/365**n), 2)
print(p * 100)

-- OUTPUT:
17.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 11:50:31) 
-- CODE:
from math import factorial
# Leitura do numero de pessoas
n = int(input("Digite o numero de pessoas: "))
# Calculo da probabilidade de dois aniversariantes no mesmo dia
p = float(round(1 - ((factorial(365)/factorial(365 - n)) * 1/365**n), 2))
print(p * 100)

-- OUTPUT:
17.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 11:50:55) 
-- CODE:
from math import factorial
# Leitura do numero de pessoas
n = float(input("Digite o numero de pessoas: "))
# Calculo da probabilidade de dois aniversariantes no mesmo dia
p = round(1 - ((factorial(365)/factorial(365 - n)) * 1/365**n), 2)
print(p * 100)

-- OUTPUT:
17.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 11:51:47) 
-- CODE:
from math import factorial
# Leitura do numero de pessoas
n = float(input("Digite o numero de pessoas: "))
# Calculo da probabilidade de dois aniversariantes no mesmo dia
p = 1 - ((factorial(365)/factorial(365 - n)) * 1/365**n)
p1 = round(p)
print(p1 * 100)

-- OUTPUT:
17.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 11:51:59) 
-- CODE:
from math import factorial
# Leitura do numero de pessoas
n = float(input("Digite o numero de pessoas: "))
# Calculo da probabilidade de dois aniversariantes no mesmo dia
p = 1 - ((factorial(365)/factorial(365 - n)) * 1/365**n)
p1 = round(p, 2)
print(p1 * 100)

-- OUTPUT:
17.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 11:53:13) 
-- CODE:
from math import factorial
# Leitura do numero de pessoas
n = float(input("Digite o numero de pessoas: "))
# Calculo da probabilidade de dois aniversariantes no mesmo dia
p = 1 - ((factorial(365)/factorial(365 - n)) * 1/365**n)
p1 = float(round(p, 2))
print(p1 * 100)

-- OUTPUT:
17.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 11:53:35) 
-- CODE:
from math import factorial
# Leitura do numero de pessoas
n = float(input("Digite o numero de pessoas: "))
# Calculo da probabilidade de dois aniversariantes no mesmo dia
p = 1 - ((factorial(365)//factorial(365 - n)) * 1//365**n)
p1 = float(round(p, 2))
print(p1 * 100)

-- OUTPUT:
100.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 11:53:52) 
-- CODE:
from math import factorial
# Leitura do numero de pessoas
n = float(input("Digite o numero de pessoas: "))
# Calculo da probabilidade de dois aniversariantes no mesmo dia
p = 1 - ((factorial(365)/factorial(365 - n)) * 1/365**n)
p1 = float(round(p, 2))
print(p1 * 100)

-- OUTPUT:
17.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 11:54:33) 
-- CODE:
from math import factorial
# Leitura do numero de pessoas
n = int(input("Digite o numero de pessoas: "))
# Calculo da probabilidade de dois aniversariantes no mesmo dia
p = 1 - ((factorial(365)/factorial(365 - n)) * 1/365**n)
p1 = float(round(p, 2))
print(p1 * 100)

-- OUTPUT:
17.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 11:55:04) 
-- CODE:
from math import factorial
# Leitura do numero de pessoas
n = int(input("Digite o numero de pessoas: "))
# Calculo da probabilidade de dois aniversariantes no mesmo dia
p = float(1 - ((factorial(365)/factorial(365 - n)) * 1/365**n))
p1 = (round(p, 2))
print(p1 * 100)

-- OUTPUT:
17.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 11:56:34) 
-- CODE:
from math import factorial
# Leitura do numero de pessoas
n = int(input("Digite o numero de pessoas: "))
# Calculo da probabilidade de dois aniversariantes no mesmo dia
p = float(1 - ((factorial(365)/factorial(365 - n)) * 1/365**n))
p1 = (round(p, 2))
print(p1)

-- OUTPUT:
0.17
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 11:57:06) 
-- CODE:
from math import factorial
# Leitura do numero de pessoas
n = int(input("Digite o numero de pessoas: "))
# Calculo da probabilidade de dois aniversariantes no mesmo dia
p = float(1 - ((factorial(365)//factorial(365 - n)) * 1//365**n))
p1 = (round(p, 2))
print(p1 * 100)

-- OUTPUT:
100.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 11:57:21) 
-- CODE:
from math import factorial
# Leitura do numero de pessoas
n = int(input("Digite o numero de pessoas: "))
# Calculo da probabilidade de dois aniversariantes no mesmo dia
p = float(1 - ((factorial(365)/factorial(365 - n)) * 1//365**n))
p1 = (round(p, 2))
print(p1 * 100)

-- OUTPUT:
100.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 11:58:28) 
-- CODE:
from math import factorial
# Leitura do numero de pessoas
n = float(input("Digite o numero de pessoas: "))
# Calculo da probabilidade de dois aniversariantes no mesmo dia
p = 1 - ((factorial(365)/factorial(365 - n)) * 1/365**n)
p1 = (round(p, 2))
print(p1 * 100)

-- OUTPUT:
17.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 16:20:58) 
-- CODE:
from math import factorial
# Leitura do numero de pessoas
n = float(input("Digite o numero de pessoas: "))
# Calculo da probabilidade de dois aniversariantes no mesmo dia
p = 1 - ((factorial(365)/factorial(365 - n)) * 1/365**n)
p1 = (round(p, 2))
print(p1 * 100)

-- OUTPUT:
17.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 16:22:19) 
-- CODE:
from math import factorial
# Leitura do numero de pessoas
n = float(input("Digite o numero de pessoas: "))
# Calculo da probabilidade de dois aniversariantes no mesmo dia
p = 1 - ((factorial(365)/factorial(365 - n)) * 1/365**n)

print(round(p * 100), 2)

-- OUTPUT:
17 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 16:24:10) 
-- CODE:
from math import factorial
# Leitura do numero de pessoas
n = float(input("Digite o numero de pessoas: "))
# Calculo da probabilidade de dois aniversariantes no mesmo dia
p = 1 - ((factorial(365)/factorial(365 - n)) * (1/365**n))

print(round(p * 100), 2)

-- OUTPUT:
17 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 16:24:48) 
-- CODE:
from math import factorial
# Leitura do numero de pessoas
n = float(input("Digite o numero de pessoas: "))
# Calculo da probabilidade de dois aniversariantes no mesmo dia
p = 1 - ((factorial(365)/factorial(365 - n)) * (1/365**n))

print(round(p), 2)

-- OUTPUT:
0 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 21:13:13) 
-- CODE:
from math import factorial
# Leitura do numero de pessoas
n = float(input("Digite o numero de pessoas: "))
# Calculo da probabilidade de dois aniversariantes no mesmo dia
p = 1 - ((factorial(365)/factorial(365 - n)) * (1/365**n))

print(round(p, 2))

-- OUTPUT:
0.17
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 21:13:39) 
-- CODE:
from math import factorial
# Leitura do numero de pessoas
n = float(input("Digite o numero de pessoas: "))
# Calculo da probabilidade de dois aniversariantes no mesmo dia
p = 1 - ((factorial(365)/factorial(365 - n)) * (1/365**n))

print(round(p*100, 2))

-- OUTPUT:
16.7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 21:14:01) 
-- CODE:
from math import factorial
# Leitura do numero de pessoas
n = float(input("Digite o numero de pessoas: "))
# Calculo da probabilidade de dois aniversariantes no mesmo dia
p = 1 - ((factorial(365)/factorial(365 - n)) * (1/365**n))

print(round(p*100, 2))

-- EXECUTION TIME:
0.144173
-- TEST CASE 1:
---- input:
12
---- correct output:
16.7
---- user output:
16.7
-- TEST CASE 2:
---- input:
24
---- correct output:
53.83
---- user output:
53.83
-- TEST CASE 3:
---- input:
99
---- correct output:
100.0
---- user output:
100.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
