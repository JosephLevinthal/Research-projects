== SUBMITION (2019-03-21 17:28:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import sqrt()

x = float(input("comprimento lados: "))
s = (3x/2)

A = sqrt(s(s-a)(s-b)(s-c))
-- EXECUTION TIME:
0.157055
-- ERROR:
  File "/home/codebench/codes/1595/1016/main.py", line 4
    from math import sqrt()
                         ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 17:28:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import sqrt()

x = float(input("comprimento lados: "))
s = (3x/2)

A = sqrt(s(s-a)(s-b)(s-c))

print(round(A,5))
-- EXECUTION TIME:
0.211582
-- ERROR:
  File "/home/codebench/codes/1595/1016/main.py", line 4
    from math import sqrt()
                         ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 17:28:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import sqrt()

x = float(input("comprimento lados: "))
s = (3x/2)

A = sqrt(s(s-a)(s-b)(s-c))

print(round(A,5))
-- ERROR:
File "XXXX", line 4
    from math import sqrt()
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 17:29:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import sqrt

x = float(input("comprimento lados: "))
s = (3x/2)

A = sqrt(s(s-a)(s-b)(s-c))

print(round(A,5))
-- EXECUTION TIME:
0.279031
-- ERROR:
  File "/home/codebench/codes/1595/1016/main.py", line 8
    s = (3x/2)
          ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 17:29:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import sqrt

x = float(input("comprimento lados: "))
s = (3x/2)

A = sqrt(s(s-a)(s-b)(s-c))

print(round(A,5))
-- ERROR:
File "XXXX", line 8
    s = (3x/2)
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 17:29:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import sqrt

x = float(input("comprimento lados: "))
s = (x+x+x / 2)

A = sqrt(s(s-a)(s-b)(s-c))

print(round(A,5))
-- EXECUTION TIME:
0.13944
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1595/1016/main.py", line 10, in <module>
    A = sqrt(s(s-a)(s-b)(s-c))
NameError: name 'a' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 17:29:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import sqrt

x = float(input("comprimento lados: "))
s = (x+x+x / 2)

A = sqrt(s(s-a)(s-b)(s-c))

print(round(A,5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    A = sqrt(s(s-a)(s-b)(s-c))
NameError: name 'a' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 17:30:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import sqrt

a = float(input("comprimento lado1: "))
b = float(input("comprimento lado2: "))
c = float(input("comprimento lado3: "))

A = sqrt(s(s-a)(s-b)(s-c))

print(round(A,5))
-- EXECUTION TIME:
0.177256
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1595/1016/main.py", line 11, in <module>
    A = sqrt(s(s-a)(s-b)(s-c))
NameError: name 's' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 17:30:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import sqrt

a = float(input("comprimento lado1: "))
b = float(input("comprimento lado2: "))
c = float(input("comprimento lado3: "))

A = sqrt(s(s-a)(s-b)(s-c))

print(round(A,5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    A = sqrt(s(s-a)(s-b)(s-c))
NameError: name 's' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 17:30:37) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import sqrt

a = float(input("comprimento lado1: "))
b = float(input("comprimento lado2: "))
c = float(input("comprimento lado3: "))

s = (a + b + c)/2

A = sqrt(s(s-a)(s-b)(s-c))

print(round(A,5))
-- EXECUTION TIME:
0.140462
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1595/1016/main.py", line 13, in <module>
    A = sqrt(s(s-a)(s-b)(s-c))
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 17:30:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import sqrt

a = float(input("comprimento lado1: "))
b = float(input("comprimento lado2: "))
c = float(input("comprimento lado3: "))

s = ((a + b + c)/2)

A = sqrt(s(s-a)(s-b)(s-c))

print(round(A,5))
-- EXECUTION TIME:
0.151144
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1595/1016/main.py", line 13, in <module>
    A = sqrt(s(s-a)(s-b)(s-c))
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 17:30:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import sqrt

a = float(input("comprimento lado1: "))
b = float(input("comprimento lado2: "))
c = float(input("comprimento lado3: "))

s = ((a + b + c)/2)

A = sqrt(s(s-a)(s-b)(s-c))

print(round(A,5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    A = sqrt(s(s-a)(s-b)(s-c))
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 17:31:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import sqrt

a = int(input("comprimento lado1: "))
b = int(input("comprimento lado2: "))
c = int(input("comprimento lado3: "))

s = ((a + b + c)/2)

A = sqrt(s(s-a)(s-b)(s-c))

print(round(A,5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 17:31:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import sqrt

a = int(input("comprimento lado1: "))
b = int(input("comprimento lado2: "))
c = int(input("comprimento lado3: "))

s = ((a + b + c)/2)

A = sqrt(s(s-a)(s-b)(s-c))

print(round(A,5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 17:32:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import sqrt

a = int(input("comprimento lado1: "))
b = int(input("comprimento lado2: "))
c = int(input("comprimento lado3: "))

s = ((a + b + c)/2)

print(round(sqrt( s ( s - a )( s - b ) ( s - c ),5))

-- EXECUTION TIME:
0.180926
-- ERROR:
  File "/home/codebench/codes/1595/1016/main.py", line 14
    
                                                        ^
SyntaxError: unexpected EOF while parsing

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 17:32:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import sqrt

a = int(input("comprimento lado1: "))
b = int(input("comprimento lado2: "))
c = int(input("comprimento lado3: "))

s = ((a + b + c)/2)

print(round(sqrt( s ( s - a )( s - b ) ( s - c ),5))

-- ERROR:
File "XXXX", line 14
    
                                                        ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 17:32:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import sqrt

a = int(input("comprimento lado1: "))
b = int(input("comprimento lado2: "))
c = int(input("comprimento lado3: "))

s = ((a + b + c)/2)

print(round(sqrt( s ( s - a )( s - b ) ( s - c ),5))
-- ERROR:
File "XXXX", line 14
    
                                                        ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 17:33:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import sqrt

a = int(input("comprimento lado1: "))
b = int(input("comprimento lado2: "))
c = int(input("comprimento lado3: "))

s = ((a + b + c)/2)

print(s)
-- EXECUTION TIME:
0.188095
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1595/1016/main.py", line 7, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 17:33:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import sqrt

a = int(input("comprimento lado1: "))
b = int(input("comprimento lado2: "))
c = int(input("comprimento lado3: "))

s = ((a + b + c)/2)

print(s)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 17:34:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import sqrt

a = int(input("comprimento lado1: "))
b = int(input("comprimento lado2: "))
c = int(input("comprimento lado3: "))

s = ((a + b + c)/2)

A = sqrt( s * ( s - a ) * ( s - b ) * ( s - c ))

print(round(A,5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 17:34:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import sqrt

a = int(input("comprimento lado1: "))
b = int(input("comprimento lado2: "))
c = int(input("comprimento lado3: "))

s = ((a + b + c)/2)

A = sqrt( s * ( s - a ) * ( s - b ) * ( s - c ))

print(round(A,5))
-- EXECUTION TIME:
0.186552
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1595/1016/main.py", line 7, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 17:35:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import sqrt

a = int(input("comprimento lado1: "))
b = int(input("comprimento lado2: "))
c = int(input("comprimento lado3: "))

s = ((a + b + c)/2)

A = sqrt( s * ( s - a ) * ( s - b ) * ( s - c ))

print(round(A,5))
-- EXECUTION TIME:
0.123535
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1595/1016/main.py", line 7, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 17:35:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import sqrt

a = int(input("comprimento lado1: "))
b = int(input("comprimento lado2: "))
c = int(input("comprimento lado3: "))

s = ((a + b + c)/2)

A = sqrt( s * ( s - a ) * ( s - b ) * ( s - c ))

print(round(A,5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 17:36:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import sqrt

a = int(input("comprimento lado1: "))
b = int(input("comprimento lado2: "))
c = int(input("comprimento lado3: "))

s = ((a + b + c)/2)

A = sqrt( s * ( s - a ) * ( s - b ) * ( s - c ))

print(round(A,6))

-- EXECUTION TIME:
0.130174
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1595/1016/main.py", line 7, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 17:36:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import sqrt

a = int(input("comprimento lado1: "))
b = int(input("comprimento lado2: "))
c = int(input("comprimento lado3: "))

s = ((a + b + c)/2)

A = sqrt( s * ( s - a ) * ( s - b ) * ( s - c ))

print(round(A,4))

-- EXECUTION TIME:
0.132021
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1595/1016/main.py", line 7, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 17:36:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import sqrt

a = int(input("comprimento lado1: "))
b = int(input("comprimento lado2: "))
c = int(input("comprimento lado3: "))

s = ((a + b + c)/2)

A = sqrt( s * ( s - a ) * ( s - b ) * ( s - c ))

print(round(A,5))
-- EXECUTION TIME:
0.152105
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1595/1016/main.py", line 7, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 17:41:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import sqrt

a = float(input("comprimento lado1: "))
b = float(input("comprimento lado2: "))
c = float(input("comprimento lado3: "))

s = ((a + b + c)/2)

A = sqrt( s * ( s - a ) * ( s - b ) * ( s - c ))

print(round(A,5))
-- EXECUTION TIME:
0.201064
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.41967
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
comprimento lado1: comprimento lado2: comprimento lado3: 600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
comprimento lado1: comprimento lado2: comprimento lado3: 709.16654
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 17:41:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import sqrt

a = float(input("comprimento lado1: "))
b = float(input("comprimento lado2: "))
c = float/(input("comprimento lado3: "))

s = ((a + b + c)/2)

A = sqrt( s * ( s - a ) * ( s - b ) * ( s - c ))

print(round(A,5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    c = float/(input())
TypeError: unsupported operand type(s) for /: 'type' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 17:41:27) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import sqrt

a = float(input("comprimento lado1: "))
b = float(input("comprimento lado2: "))
c = float(input("comprimento lado3: "))

s = ((a + b + c)/2)

A = sqrt( s * ( s - a ) * ( s - b ) * ( s - c ))

print(round(A,5))
-- EXECUTION TIME:
0.183974
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.41967
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709.16654
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 17:41:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import sqrt

a = float(input("comprimento lado1: "))
b = float(input("comprimento lado2: "))
c = float(input("comprimento lado3: "))

s = ((a + b + c)/2)

A = sqrt( s * ( s - a ) * ( s - b ) * ( s - c ))

print(round(A,5))
-- OUTPUT:
69.41967
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 02:23:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import sqrt

a = float(input("comprimento lado1: "))
b = float(input("comprimento lado2: "))
c = float(input("comprimento lado3: "))

s = ((a + b + c)/2)

A = sqrt( s * ( s - a ) * ( s - b ) * ( s - c ))

print(round(A,5))
-- EXECUTION TIME:
0.152873
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.41967
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709.16654
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 17:39:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import sqrt

a = float(input("comprimento lado1: "))
b = float(input("comprimento lado2: "))
c = float(input("comprimento lado3: "))

s = ((a + b + c)/2)

A = sqrt( s * ( s - a ) * ( s - b ) * ( s - c ))

print(round(A,5))
-- EXECUTION TIME:
0.276574
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.41967
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709.16654
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 22:21:13) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import sqrt

a = float(input("comprimento lado1: "))
b = float(input("comprimento lado2: "))
c = float(input("comprimento lado3: "))

s = ((a + b + c)/2)

A = sqrt( s * ( s - a ) * ( s - b ) * ( s - c ))

print(round(A,5))
-- OUTPUT:
69.41967
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
