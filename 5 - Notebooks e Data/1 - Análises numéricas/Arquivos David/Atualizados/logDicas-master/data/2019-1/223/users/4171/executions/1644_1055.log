== TEST (2019-04-06 02:30:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

v0 = float(input("velocidade inicial: "))
a = float(input("angulo: "))
D = float(input("distância horizontal: "))
g = 9.8

R = (v0**2 * sin(a + a))/9.8

print(R)
-- OUTPUT:
1.1923595072005144
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 02:30:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

v0 = float(input("velocidade inicial: "))
a = float(input("angulo: "))
D = float(input("distancia horizontal: "))
g = 9.8

R = (v0**2 * sin(a + a))/9.8

print(R)
-- OUTPUT:
1.1923595072005144
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 02:31:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

v0 = float(input("velocidade inicial: "))
a = radians(float(input("angulo: ")))
D = float(input("distancia horizontal: "))
g = 9.8

R = (v0**2 * sin(a + a))/9.8


print(R)
-- OUTPUT:
11.2482865705094
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 02:31:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

v0 = float(input("velocidade inicial: "))
a = radians(float(input("angulo: ")))
D = float(input("distancia horizontal: "))
g = 9.8

R = (v0**2 * sin(a + a))/9.8


print(R)
-- EXECUTION TIME:
0.150598
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
11.2482865705094
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
velocidade inicial: angulo: distancia horizontal: 49.91357750773639
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 02:31:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

v0 = float(input("velocidade inicial: "))
a = radians(float(input("angulo: ")))
D = float(input("distancia horizontal: "))
g = 9.8

R = (v0**2 * sin(a + a))/9.8


print(R)
-- OUTPUT:
11.2482865705094
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 02:32:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

v0 = float(input("velocidade inicial: "))
a = radians(float(input("angulo: ")))
D = float(input("distancia horizontal: "))
g = 9.8

R = (v0**2 * sin(a + a))/9.8

if D < R:
	print("sim")
else:
	print("nao")

-- EXECUTION TIME:
0.139506
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 02:32:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

v0 = float(input("velocidade inicial: "))
a = radians(float(input("angulo: ")))
D = float(input("distancia horizontal: "))
g = 9.8

R = (v0**2 * sin(a + a))/9.8

if D < R:
	print("sim")
else:
	print("nao")

-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 02:33:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

v0 = float(input("velocidade inicial: "))
a = radians(float(input("angulo: ")))
D = float(input("distancia horizontal: "))
g = 9.8

R = (v0**2 * sin(a + a))/9.8

if D < R + 0.01:
	print("sim")
else:
	print("nao")

-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 02:34:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

v0 = float(input("velocidade inicial: "))
a = radians(float(input("angulo: ")))
D = float(input("distancia horizontal: "))

g = 9.8

R = (v0**2 * sin(a + a))/g

if D < R + 0.01:
	print("sim")
else:
	print("nao")

-- EXECUTION TIME:
0.158451
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 02:36:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

v0 = float(input("velocidade inicial: "))
a = radians(float(input("angulo: ")))
D = float(input("distancia horizontal: "))

g = 9.8

R = (v0**2 * sin(a + a))/g

if R + 0.01 > D:
	print("nao")
else:
	print("sim")

-- EXECUTION TIME:
0.193797
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
sim
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 02:36:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

v0 = float(input("velocidade inicial: "))
a = radians(float(input("angulo: ")))
D = float(input("distancia horizontal: "))

g = 9.8

R = (v0**2 * sin(a + a))/g

if R + 0.01 > D:
	print("nao")
else:
	print("sim")

-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 02:36:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

v0 = float(input("velocidade inicial: "))
a = radians(float(input("angulo: ")))
D = float(input("distancia horizontal: "))

g = 9.8

R = (v0**2 * sin(a + a))/g

if R + 0.01 > D:
	print("sim")
else:
	print("nao")

-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 02:36:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

v0 = float(input("velocidade inicial: "))
a = radians(float(input("angulo: ")))
D = float(input("distancia horizontal: "))

g = 9.8

R = (v0**2 * sin(a + a))/g

if R + 0.01 > D:
	print("sim")
else:
	print("nao")

-- EXECUTION TIME:
0.135801
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 02:37:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

v0 = float(input("velocidade inicial: "))
a = radians(float(input("angulo: ")))
D = float(input("distancia horizontal: "))

g = 9.8

R = (v0**2 * sin(a + a))/g

if R + 0.1 > D:
	print("sim")
else:
	print("nao")

-- EXECUTION TIME:
0.108204
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 22:57:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

v0 = float(input("velocidade inicial: "))
a = radians(float(input("angulo: ")))
D = float(input("distancia horizontal: "))

g = 9.8

R = (v0**2 * sin(a + a))/g

if R > D:
	print("sim")
else:
	print("nao")

-- EXECUTION TIME:
0.190704
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
velocidade inicial: angulo: distancia horizontal: nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 22:57:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

v0 = float(input("velocidade inicial: "))
a = radians(float(input("angulo: ")))
D = float(input("distancia horizontal: "))

g = 9.8

R = (v0**2 * sin(a + a))/g

if R + 0.1 > D:
	print("sim")
else:
	print("nao")

-- EXECUTION TIME:
0.144253
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
