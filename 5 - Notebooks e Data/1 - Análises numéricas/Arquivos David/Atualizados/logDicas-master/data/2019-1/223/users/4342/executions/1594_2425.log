== TEST (2019-03-19 16:33:40) 
-- CODE:
consumo=int(str(input("consumo em km/l")))
distancia=S
combustivel=C
consumo=int(S/C)
if distancia=20 , combustivel=5
print(consumo)
-- ERROR:
File "XXXX", line 5
    if distancia=20 , combustivel=5
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:33:53) 
-- CODE:
consumo=int(str(input("consumo em km/l")))
distancia=S
combustivel=C
consumo=int(S/C)
print(consumo)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    consumo=int(str(input()))
ValueError: invalid literal for int() with base 10: '28.572'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:34:38) 
-- CODE:
consumo=int(str(input("consumo em km/l")))
distancia=S
combustivel=C
consumo=int(S/C)
if distancia=20
combustivel=5
print(consumo)
-- ERROR:
File "XXXX", line 5
    if distancia=20
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:35:39) 
-- CODE:
consumo=int(str(input("consumo em km/l")))
distancia=S
combustivel=C
consumo=int(S/C)
if distancia=500
combustivel=35
print((round(consumo, 3))
-- ERROR:
File "XXXX", line 5
    if distancia=500
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:35:52) 
-- CODE:
consumo=int(str(input("consumo em km/l")))
distancia=S
combustivel=C
consumo=int(S/C)
distancia=500
combustivel=35
print((round(consumo, 3))
-- ERROR:
File "XXXX", line 8
    
                             ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:36:34) 
-- CODE:
consumo=int(str(input("consumo em km/l")))
distancia=500
combustivel=35
consumo=int(S/C)
print((round(consumo, 3))
-- ERROR:
File "XXXX", line 6
    
                             ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:36:42) 
-- CODE:
consumo=int(str(input("consumo em km/l")))
distancia=500
combustivel=35
consumo=int(S/C)
print((round(consumo, 3)
-- ERROR:
File "XXXX", line 6
    
                            ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:36:54) 
-- CODE:
consumo=int(str(input("consumo em km/l")))
distancia=500
combustivel=35
consumo=int(S/C)
print(round(int(consumo, 3))
-- ERROR:
File "XXXX", line 6
    
                                ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:37:05) 
-- CODE:
consumo=int(str(input("consumo em km/l")))
distancia=500
combustivel=35
consumo=int(S/C)
print(round(int(consumo, 3))
-- ERROR:
File "XXXX", line 6
    
                                ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:37:09) 
-- CODE:
consumo=int(str(input("consumo em km/l")))
distancia=500
combustivel=35
consumo=int(S/C)
print(round(int(consumo, 3)))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    consumo=int(str(input()))
ValueError: invalid literal for int() with base 10: '28.572'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:38:22) 
-- CODE:
distancia=500
combustivel=35
consumo=int"(S/C)km/l"
print(round(int(consumo, 3)))
-- ERROR:
File "XXXX", line 3
    consumo=int"(S/C)km/l"
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:38:54) 
-- CODE:
distancia=500
combustivel=35
consumo=int(distancia/combustivel)"km/l"
print(round(int(consumo, 3)))
-- ERROR:
File "XXXX", line 3
    consumo=int(distancia/combustivel)"km/l"
                                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:39:01) 
-- CODE:
distancia=500
combustivel=35
consumo=int(distancia/combustivel)
print(round(int(consumo, 3)))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(round(int(consumo, 3)))
TypeError: int() can't convert non-string with explicit base
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:39:14) 
-- CODE:
distancia=500
combustivel=35
consumo=int(distancia/combustivel)
print(round(int(consumo, 3)))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(round(int(consumo, 3)))
TypeError: int() can't convert non-string with explicit base
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:39:47) 
-- CODE:
distancia=500
combustivel=35
consumo=int(distancia/combustivel)
print(round(int(consumo, 3))
-- ERROR:
File "XXXX", line 5
    
                                ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:39:49) 
-- CODE:
distancia=500
combustivel=35
consumo=int(distancia/combustivel)
print(round(int(consumo, 3)
-- ERROR:
File "XXXX", line 5
    
                               ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:40:01) 
-- CODE:
distancia=500
combustivel=35
consumo=int(distancia/combustivel)
print(round(int(consumo, 3))
-- ERROR:
File "XXXX", line 5
    
                                ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:40:49) 
-- CODE:
distancia=500
combustivel=35
consumo=int(distancia/combustivel)
print(round(int(consumo, 3))
-- ERROR:
File "XXXX", line 5
    
                                ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:41:12) 
-- CODE:
distancia=500
combustivel=35
consumo=int(distancia/combustivel)
print(round((consumo, 3))
-- ERROR:
File "XXXX", line 5
    
                             ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:41:24) 
-- CODE:
distancia=500
combustivel=35
consumo=int(distancia/combustivel)
print(round(consumo, 3))
-- OUTPUT:
14
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:41:43) 
-- CODE:
distancia=500
combustivel=35
consumo=int(distancia/combustivel)
print(round(consumo,3))
-- OUTPUT:
14
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:41:50) 
-- CODE:
distancia=500
combustivel=35
consumo=int(distancia/combustivel)
print(round(consumo, 3))
-- OUTPUT:
14
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:41:56) 
-- CODE:
distancia=500
combustivel=35
consumo=int(distancia//combustivel)
print(round(consumo, 3))
-- OUTPUT:
14
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:42:00) 
-- CODE:
distancia=500
combustivel=35
consumo=int(distancia/combustivel)
print(round(consumo, 3))
-- OUTPUT:
14
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:42:46) 
-- CODE:
distancia=500
combustivel=35
consumo=int(distancia/combustivel)
print(round(consumo, 2))
-- OUTPUT:
14
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:43:09) 
-- CODE:
distancia=500
combustivel=35
consumo=int(distancia/combustivel)
print(round(consumo, 3))
-- OUTPUT:
14
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:43:20) 
-- CODE:
distancia=500
combustivel=35
consumo=int(distancia/combustivel)
print(consumo)

-- OUTPUT:
14
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:43:31) 
-- CODE:
distancia=500
combustivel=35
consumo=int(distancia/combustivel)
print(round(consumo, 3))

-- OUTPUT:
14
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 17:54:31) 
-- CODE:
distancia=500
combustivel=35
consumo=int(distancia/combustivel)
print(round(consumo, 3))

-- OUTPUT:
14
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 17:55:24) 
-- CODE:
distancia=500
combustivel=35
consumo=int(distancia/combustivel)
print(round(int(consumo, 3))

-- ERROR:
File "XXXX", line 5
    
                                ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 17:55:59) 
-- CODE:
distancia=500
combustivel=35
consumo=int(distancia/combustivel)
print(round(int, 3))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(round(int, 3))
TypeError: type type doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 17:56:13) 
-- CODE:
distancia=500
combustivel=35
consumo=int(distancia/combustivel)
print(round(consumo, 3))

-- OUTPUT:
14
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 17:56:51) 
-- CODE:
distancia=500
combustivel=35
int=(distancia/combustivel)
print(round(int, 3))

-- OUTPUT:
14.286
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 17:57:12) 
-- CODE:
distancia=500
combustivel=35
int=(distancia/combustivel)
print(round(int, 3))"km/l"

-- ERROR:
File "XXXX", line 4
    print(round(int, 3))"km/l"
                             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 17:58:05) 
-- CODE:
distancia=500
combustivel=35
int=(distancia/combustivel)
print(round(int, 3))

-- OUTPUT:
14.286
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-19 17:58:07) 
-- CODE:
distancia=500
combustivel=35
int=(distancia/combustivel)
print(round(int, 3))

-- EXECUTION TIME:
0.147756
-- TEST CASE 1:
---- input:
28.572
2
---- correct output:
14.286 km/l
---- user output:
14.286
-- TEST CASE 2:
---- input:
2254
124.4
---- correct output:
18.119 km/l
---- user output:
14.286
-- TEST CASE 3:
---- input:
4554
464.6
---- correct output:
9.802 km/l
---- user output:
14.286
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 17:59:04) 
-- CODE:
distancia=500
combustivel=35
int=(distancia/combustivel)str(mk/l)
print(round(int, 3))

-- ERROR:
File "XXXX", line 3
    int=(distancia/combustivel)str(mk/l)
                                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 17:59:16) 
-- CODE:
distancia=500
combustivel=35
int=(distancia/combustivel)str"km/l"
print(round(int, 3))

-- ERROR:
File "XXXX", line 3
    int=(distancia/combustivel)str"km/l"
                                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 18:00:09) 
-- CODE:
distancia=500
combustivel=35
int=input(km/l(distancia/combustivel))
print(round(int, 3))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    int=input(km/l(distancia/combustivel))
NameError: name 'km' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 18:00:20) 
-- CODE:
distancia=500
combustivel=35
int=input(distancia/combustivel)
print(round(int, 3))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(round(int, 3))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 18:00:30) 
-- CODE:
distancia=500
combustivel=35
int=(distancia/combustivel)
print(round(int, 3))

-- OUTPUT:
14.286
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 16:49:06) 
-- CODE:
S=input("s:")
CG=input("cg:")
CM=(S/CG)
print(round(CM, 3))"km/l"
-- ERROR:
File "XXXX", line 4
    print(round(CM, 3))"km/l"
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 16:49:26) 
-- CODE:
S=input("s:")
CG=input("cg:")
CM=(S/CG)
print(round(CM, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    CM=(S/CG)
TypeError: unsupported operand type(s) for /: 'str' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 16:49:51) 
-- CODE:
S=int(input("s:"))
CG=int(input("cg:"))
CM=(S/CG)
print(round(CM, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    S=int(input())
ValueError: invalid literal for int() with base 10: '28.572'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 16:50:05) 
-- CODE:
S=int(input("s:"))
CG=int(input("cg:"))
CM=(S/CG)
print(round(CM, 3)), "km/l"
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    S=int(input())
ValueError: invalid literal for int() with base 10: '28.572'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 16:50:19) 
-- CODE:
S=int(input("s:"))
CG=int(input("cg:"))
CM=(S/CG)
print(round(CM, 3)) + "km/l"
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    S=int(input())
ValueError: invalid literal for int() with base 10: '28.572'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 16:51:08) 
-- CODE:
S=int(input("s:"))
CG=int(input("cg:"))
CM=(S/CG) 
	mensagem= CM +"km/l"
print(round(CM, 3))
-- ERROR:
File "XXXX", line 4
    mensagem= CM +"km/l"
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 16:51:14) 
-- CODE:
S=int(input("s:"))
CG=int(input("cg:"))
CM=(S/CG) 
mensagem= CM +"km/l"
print(round(CM, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    S=int(input())
ValueError: invalid literal for int() with base 10: '28.572'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 16:51:33) 
-- CODE:
S=int(input("s:"))
CG=int(input("cg:"))
CM=(S/CG) +"km/l"
print(round(CM, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    S=int(input())
ValueError: invalid literal for int() with base 10: '28.572'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 16:51:48) 
-- CODE:
S=float(input("s:"))
CG=float(input("cg:"))
CM=(S/CG) +"km/l"
print(round(CM, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    CM=(S/CG) +"km/l"
TypeError: unsupported operand type(s) for +: 'float' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 16:55:10) 
-- CODE:
S=float(input("s:"))
CG=float(input("cg:"))
CM=(/CG)
print(round(CM, 3)) + km/l
-- ERROR:
File "XXXX", line 3
    CM=(/CG)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 16:55:17) 
-- CODE:
S=float(input("s:"))
CG=float(input("cg:"))
CM=(S/CG)
print(round(CM, 3)) + km/l
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(round(CM, 3)) + km/l
NameError: name 'km' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 16:55:37) 
-- CODE:
S=float(input("s:"))
CG=float(input("cg:"))
CM=(S/CG) + "km/l"
print(round(CM, 3)) 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    CM=(S/CG) + "km/l"
TypeError: unsupported operand type(s) for +: 'float' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 16:56:41) 
-- CODE:
S=float(input("s:"))
CG=float(input("cg:"))
CM=(S/CG) 
print(CM) + "km/l"
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(CM) + "km/l"
TypeError: unsupported operand type(s) for +: 'NoneType' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 16:57:04) 
-- CODE:
S=float(input("s:"))
CG=float(input("cg:"))
CM= "km/l" + (S/CG) 
print(CM) 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    CM= "km/l" + (S/CG) 
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 16:57:09) 
-- CODE:
S=float(input("s:"))
CG=float(input("cg:"))
CM= "km/l " + (S/CG) 
print(CM) 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    CM= "km/l " + (S/CG) 
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:02:22) 
-- CODE:
S=float(input("s:"))
CG=float(input("cg:"))
x=float(input("s:"))
CM=(S/CG)+x
print(round(CM, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    x=float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:02:44) 
-- CODE:
S=float(input("s:"))
CG=float(input("cg:"))
x=input("s:")
CM=(S/CG)+x
print(round(CM, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    x=input()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:07:15) 
-- CODE:
S=float(input("s:"))
CG=float(input("cg:"))
CM=(S/CG)
x= CM + "km/l"
print(round(CM, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    x= CM + "km/l"
TypeError: unsupported operand type(s) for +: 'float' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:07:45) 
-- CODE:
S=float(input("s:"))
CG=float(input("cg:"))
CM=(S/CG)
x="km/l"
print(round(CM, 3)) + x
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(round(CM, 3)) + x
TypeError: unsupported operand type(s) for +: 'NoneType' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:08:33) 
-- CODE:
S=float(input("s:"))
CG=float(input("cg:"))
CM=(S/CG)
x=float(input("x:"))
print(round(CM, 3)+ x)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    x=float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:08:52) 
-- CODE:
S=float(input("s:"))
CG=float(input("cg:"))
CM=(S/CG)
x=input("x:")
print(round(CM, 3)+ x)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    x=input()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:08:59) 
-- CODE:
S=float(input("s:"))
CG=float(input("cg:"))
CM=(S/CG)
x=input("x:")
print(round(CM, 3)+ x)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    x=input()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:34:58) 
-- CODE:
S=float(input("s:"))
CG=float(input("cg:"))
CM=(S/CG)
print(round(CM, 3)
-- ERROR:
File "XXXX", line 5
    
                      ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:35:04) 
-- CODE:
S=float(input("s:"))
CG=float(input("cg:"))
CM=(S/CG)
print(round(CM, 3))
-- OUTPUT:
14.286
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:36:20) 
-- CODE:
S=float(input("s:"))
CG=float(input("cg:"))
x=input("a:")
CM=(S/CG) + x
print(round(CM, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    x=input()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:36:59) 
-- CODE:
S=float(input("s:"))
CG=float(input("cg:"))
CM=(S/CG) + "km/l"
print(round(CM, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    CM=(S/CG) + "km/l"
TypeError: unsupported operand type(s) for +: 'float' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:37:31) 
-- CODE:
S=float(input("s:"))
CG=float(input("cg:"))
CM=(S/CG)
msg= CM + "km/l"
print(round(msg, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    msg= CM + "km/l"
TypeError: unsupported operand type(s) for +: 'float' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:37:53) 
-- CODE:
S=float(input("s:"))
CG=float(input("cg:"))
CM=(S/CG)
msg= "km/l" + CM
print(round(msg, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    msg= "km/l" + CM
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:38:47) 
-- CODE:
S=float(input("s:"))
CG=float(input("cg:"))
CM=(S/CG)
msg= (CM + "km/l")
print(round(msg, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    msg= (CM + "km/l")
TypeError: unsupported operand type(s) for +: 'float' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:39:44) 
-- CODE:
S=float(input("s:"))
CG=float(input("cg:"))
CM=float(S/CG)
msg= (CM + "km/l")
print(round(msg, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    msg= (CM + "km/l")
TypeError: unsupported operand type(s) for +: 'float' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:40:15) 
-- CODE:
S=input("s:"))
CG=input("cg:"))
CM=(S/CG)
msg= (CM + "km/l")
print(round(msg, 3))
-- ERROR:
File "XXXX", line 1
    S=input())
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:40:21) 
-- CODE:
S=input("s:")
CG=input("cg:")
CM=(S/CG)
msg= (CM + "km/l")
print(round(msg, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    CM=(S/CG)
TypeError: unsupported operand type(s) for /: 'str' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:40:56) 
-- CODE:
S=int(input("s:"))
CG=int(input("cg:"))
CM=(S/CG)
msg= (CM + "km/l")
print(round(msg, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    S=int(input())
ValueError: invalid literal for int() with base 10: '28.572'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:41:37) 
-- CODE:
S=float(input("s:"))
CG=float(input("cg:"))
CM=(S/CG)
msg= CM + "km/l"
print(msg) 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    msg= CM + "km/l"
TypeError: unsupported operand type(s) for +: 'float' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:41:48) 
-- CODE:
S=float(input("s:"))
CG=float(input("cg:"))
CM=(S/CG)
msg= CM 
print(msg) 
-- OUTPUT:
14.286
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:42:04) 
-- CODE:
S=float(input("s:"))
CG=float(input("cg:"))
CM=(S/CG)
msg= CM 
print(round(msg, 3)) 
-- OUTPUT:
14.286
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:42:46) 
-- CODE:
S=float(input("s:"))
CG=float(input("cg:"))
CM=(S/CG)
print(round(CM, 3)) + ("km/l")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(round(CM, 3)) + ("km/l")
TypeError: unsupported operand type(s) for +: 'NoneType' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
