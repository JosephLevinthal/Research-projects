== SUBMITION (2019-06-06 10:23:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
t1 = radians(float(input('latitude  do ponto 1: ')))
g1 = radians(float(input('longitude  do ponto 1: ')))
t2 = radians(float(input('latitude  do ponto 2: ')))
g2 =  radians(float(input('longitude  do ponto 2: ')))
R = 6371.01
d = R * acos(sin(t1)* sin(t2) + cos(t1)* cos(t2) * cos(g1 - g2))

print(round(d, 2))
-- EXECUTION TIME:
0.759079
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/1055/main.py", line 8, in <module>
    g2 =  radians(float(input()))
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 10:24:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
t1 = radians(float(input('latitude  do ponto 1: ')))
g1 = radians(float(input('longitude  do ponto 1: ')))
t2 = radians(float(input('latitude  do ponto 2: ')))
g2 = radians(float(input('longitude  do ponto 2: ')))
R = 6371.01
d = R * acos(sin(t1)* sin(t2) + cos(t1)* cos(t2) * cos(g1 - g2))

print(round(d, 2))
-- EXECUTION TIME:
0.855466
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/1055/main.py", line 8, in <module>
    g2 = radians(float(input()))
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 10:25:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*

t1 = radians(float(input('latitude  do ponto 1: ')))
g1 = radians(float(input('longitude  do ponto 1: ')))
t2 = radians(float(input('latitude  do ponto 2: ')))
g2 = radians(float(input('longitude  do ponto 2: ')))
R = 6371.01
d = R * acos(sin(t1)* sin(t2) + cos(t1)* cos(t2) * cos(g1 - g2))

print(round(d, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    g2 = radians(float(input()))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 10:25:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*

t1 = radians(float(input('latitude  do ponto 1: ')))
g1 = radians(float(input('longitude  do ponto 1: ')))
t2 = radians(float(input('latitude  do ponto 2: ')))
g2 = radians(float(input('longitude  do ponto 2: ')))
R = 6371.01
d = R * acos(sin(t1)* sin(t2) + cos(t1)* cos(t2) * cos(g1 - g2))

print(round(d, 2))
-- EXECUTION TIME:
0.711514
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/1055/main.py", line 9, in <module>
    g2 = radians(float(input()))
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 10:33:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*

v1 = float(input('inicial: '))
ang =radians(float(input('angulo: ')))
d = float(input('distancia: '))
g = 9.8
R = ((((v1)**2) * sin(2* ang))/(g))
if(abs(d - R) <= 0.1):
	print('sim')
else:
	print('nao')
-- EXECUTION TIME:
0.828693
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
inicial: angulo: distancia: sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
inicial: angulo: distancia: nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 10:34:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*

v1 = float(input('inicial: '))
ang = radians(float(input('angulo: ')))
D = float(input('distancia: '))
g = 9.8
R = ((((v1)**2 ) * sin(2* ang))/(g))
if(abs(D - R) <= 0.1):
	print('sim')
else:
	print('nao')
-- EXECUTION TIME:
0.742941
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
