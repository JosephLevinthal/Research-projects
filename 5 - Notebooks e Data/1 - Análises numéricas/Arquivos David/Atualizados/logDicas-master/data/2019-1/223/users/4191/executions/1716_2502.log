== TEST (2019-05-15 15:07:39) 
-- CODE:
from math import sqrt
n=int(input("Quantidades de termos: "))
r=sqrt(12)
expoente=0
denominador=1
cont=0
sinal=1
while(cont<n):
	r=r*(sinal*(1/(denominador*(3**expoente)))
	sinal=sinal*(-1)
	denominador=denominador+2
	expoente=expoente+1
	cont=cont+1
print(round(r, 8))		  
		  
	  
		  														
-- ERROR:
File "XXXX", line 10
    sinal=sinal*(-1)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:08:07) 
-- CODE:
from math import sqrt
n=int(input("Quantidades de termos: "))
r=sqrt(12)
expoente=0
denominador=1
cont=0
sinal=1
while(cont<n):
	r=r*(sinal*(1/(denominador*(3**expoente)))
	sinal=sinal*-1
	denominador=denominador+2
	expoente=expoente+1
	cont=cont+1
print(round(r, 8))		  
		  
	  
		  														
-- ERROR:
File "XXXX", line 10
    sinal=sinal*-1
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:08:15) 
-- CODE:
from math import sqrt
n=int(input("Quantidades de termos: "))
r=sqrt(12)
expoente=0
denominador=1
cont=0
sinal=1
while(cont<n):
	r=r*(sinal*(1/(denominador*(3**expoente))))
	sinal=sinal*-1
	denominador=denominador+2
	expoente=expoente+1
	cont=cont+1
print(round(r, 8))		  
		  
	  
		  														
-- OUTPUT:
-0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 15:08:29) 
-- CODE:
from math import sqrt
n=int(input("Quantidades de termos: "))
r=sqrt(12)
expoente=0
denominador=1
cont=0
sinal=1
while(cont<n):
	r=r*(sinal*(1/(denominador*(3**expoente))))
	sinal=sinal*-1
	denominador=denominador+2
	expoente=expoente+1
	cont=cont+1
print(round(r, 8))		  
		  
	  
		  														
-- EXECUTION TIME:
0.172633
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
-0.0
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
-0.0
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:08:36) 
-- CODE:
from math import sqrt
n=int(input("Quantidades de termos: "))
r=sqrt(12)
expoente=0
denominador=1
cont=0
sinal=1
while(cont<n):
	r=r*(sinal*(1/(denominador*(3**expoente))))
	sinal=sinal*-1
	denominador=denominador+2
	expoente=expoente+1
	cont=cont+1
print(round(r, 8))		  
		  
	  
		  														
-- OUTPUT:
-0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:09:28) 
-- CODE:
from math import sqrt
n=int(input("Quantidades de termos: "))
r=1
expoente=0
denominador=1
cont=0
sinal=1
while(cont<n):
	r=r*(sinal*(1/(denominador*(3**expoente))))
	sinal=sinal*-1
	denominador=denominador+2
	expoente=expoente+1
	cont=cont+1
r=sqrt(12)*r	
print(round(r, 8))		  
		  
	  
		  														
-- OUTPUT:
-0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:09:43) 
-- CODE:
from math import sqrt
n=int(input("Quantidades de termos: "))
r=1
expoente=0
denominador=1
cont=0
sinal=1
while(cont<n):
	r=r*(sinal*(1/(denominador*(3**expoente))))
	sinal=sinal*-1
	denominador=denominador+2
	expoente=expoente+1
	cont=cont+1
r=sqrt(12)*r	
print(round(r, 8))		  
		  
	  
		  														
-- OUTPUT:
-0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:09:48) 
-- CODE:
from math import sqrt
n=int(input("Quantidades de termos: "))
r=1
expoente=0
denominador=1
cont=0
sinal=1
while(cont<n):
	r=r*(sinal*(1/(denominador*(3**expoente))))
	sinal=sinal*-1
	denominador=denominador+2
	expoente=expoente+1
	cont=cont+1
r=sqrt(12)*r	
print(round(r, 8))		  
		  
	  
		  														
-- OUTPUT:
-0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:10:02) 
-- CODE:
from math import sqrt
n=int(input("Quantidades de termos: "))
r=1
expoente=0
denominador=1
cont=0
sinal=1
while(cont<n):
	r=r*(sinal*(1/(denominador*(3**expoente))))
	sinal=sinal*(-1)
	denominador=denominador+2
	expoente=expoente+1
	cont=cont+1
r=sqrt(12)*r	
print(round(r, 8))		  
		  
	  
		  														
-- OUTPUT:
-0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:11:29) 
-- CODE:
from math import sqrt
n=int(input("Quantidades de termos: "))
r=1
expoente=0
denominador=1
cont=0
sinal=1
while(cont<n):
	r=r*sinal*(1/(denominador*(3**expoente)))
	sinal=sinal*(-1)
	denominador=denominador+2
	expoente=expoente+1
	cont=cont+1
r=sqrt(12)*r	
print(round(r, 8))		  
		  
	  
		  														
-- OUTPUT:
-0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 10:31:08) 
-- CODE:
from math import sqrt
n=int(input("Quantidades de termos: "))
r=1
expoente=0
denominador=1
cont=0
sinal=1
while(cont<n):
	r=r*sinal*(1/(denominador*(3**expoente)))
	sinal=sinal*(-1)
	denominador=denominador+2
	expoente=expoente+1
	cont=cont+1
r=sqrt(12)*r	
print(round(r, 8))		  
		  
	  
		  														
-- OUTPUT:
-0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 10:31:21) 
-- CODE:
from math import sqrt
n=int(input("Quantidades de termos: "))
r=1
expoente=0
denominador=1
cont=0
sinal=1
while(cont<n):
	r=r*sinal*(1/(denominador*(3**expoente)))
	sinal=sinal*(-1)
	denominador=denominador+2
	expoente=expoente+1
	cont=cont+1
r=sqrt(12)*r	
print(round(r, 8))		  
		  
	  
		  														
-- OUTPUT:
-0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 10:31:32) 
-- CODE:
from math import sqrt
n=int(input("Quantidades de termos: "))
r=1
expoente=0
denominador=1
cont=1
sinal=1
while(cont<n):
	r=r*sinal*(1/(denominador*(3**expoente)))
	sinal=sinal*(-1)
	denominador=denominador+2
	expoente=expoente+1
	cont=cont+1
r=sqrt(12)*r	
print(round(r, 8))		  
		  
	  
		  														
-- OUTPUT:
-0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 10:31:39) 
-- CODE:
from math import sqrt
n=int(input("Quantidades de termos: "))
r=1
expoente=0
denominador=1
cont=1
sinal=1
while(cont<n):
	r=r*sinal*(1/(denominador*(3**expoente)))
	sinal=sinal*(-1)
	denominador=denominador+2
	expoente=expoente+1
	cont=cont+1
r=sqrt(12)*r	
print(round(r, 8))		  
		  
	  
		  														
-- EXECUTION TIME:
0.181444
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
-0.0
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
-0.0
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
-0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 10:31:43) 
-- CODE:
from math import sqrt
n=int(input("Quantidades de termos: "))
r=1
expoente=0
denominador=1
cont=1
sinal=1
while(cont<n):
	r=r*sinal*(1/(denominador*(3**expoente)))
	sinal=sinal*(-1)
	denominador=denominador+2
	expoente=expoente+1
	cont=cont+1
r=sqrt(12)*r	
print(round(r, 8))		  
		  
	  
		  														
-- OUTPUT:
-0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 10:31:50) 
-- CODE:
from math import sqrt
n=int(input("Quantidades de termos: "))
r=1
expoente=0
denominador=1
cont=1
sinal=1
while(cont<n):
	r=r*sinal*(1/(denominador*(3**expoente)))
	sinal=sinal*(-1)
	denominador=denominador+2
	expoente=expoente+1
	cont=cont+1
r=sqrt(12)*r	
print(round(r, 8))		  
		  
	  
		  														
-- OUTPUT:
-0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 10:32:16) 
-- CODE:
from math import sqrt
n=int(input("Quantidades de termos: "))
r=sqrt(12)
expoente=0
denominador=1
cont=1
sinal=1
while(cont<n):
	r=r*sinal*(1/(denominador*(3**expoente)))
	sinal=sinal*(-1)
	denominador=denominador+2
	expoente=expoente+1
	cont=cont+1

print(round(r, 8))		  
		  
	  
		  														
-- OUTPUT:
-0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 10:32:28) 
-- CODE:
from math import sqrt
n=int(input("Quantidades de termos: "))
r=sqrt(12)
expoente=0
denominador=1
cont=1
sinal=1
while(cont<n):
	r=r+r*sinal*(1/(denominador*(3**expoente)))
	sinal=sinal*(-1)
	denominador=denominador+2
	expoente=expoente+1
	cont=cont+1

print(round(r, 8))		  
		  
	  
		  														
-- OUTPUT:
6.26870169
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 10:32:39) 
-- CODE:
from math import sqrt
n=int(input("Quantidades de termos: "))
r=sqrt(12)
expoente=0
denominador=1
cont=1
sinal=1
while(cont<n):
	r=r+r*sinal*(1/(denominador*(3**expoente)))
	sinal=sinal*(-1)
	denominador=denominador+2
	expoente=expoente+1
	cont=cont+1

print(round(r, 8))		  
		  
	  
		  														
-- OUTPUT:
6.26870169
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 10:33:39) 
-- CODE:
from math import sqrt
n=int(input("Quantidades de termos: "))
r=1
expoente=0
denominador=1
cont=1
sinal=1
while(cont<n):
	r=r+r*sinal*(1/(denominador*(3**expoente)))
	sinal=sinal*(-1)
	denominador=denominador+2
	expoente=expoente+1
	cont=cont+1
r=sqrt(12)*r
print(round(r, 8))		  
		  
	  
		  														
-- OUTPUT:
6.26870169
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 10:33:52) 
-- CODE:
from math import sqrt
n=int(input("Quantidades de termos: "))
r=1
expoente=0
denominador=1
cont=1
sinal=1
while(cont<n):
	r=r+r*sinal*(1/(denominador*(3**expoente)))
	sinal=sinal*(-1)
	denominador=denominador+2
	expoente=expoente+1
	cont=cont+1
r=sqrt(12)*r
print(round(r, 8))		  
		  
	  
		  														
-- OUTPUT:
6.26870169
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 10:33:58) 
-- CODE:
from math import sqrt
n=int(input("Quantidades de termos: "))
r=1
expoente=0
denominador=1
cont=1
sinal=1
while(cont<n):
	r=r+r*sinal*(1/(denominador*(3**expoente)))
	sinal=sinal*(-1)
	denominador=denominador+2
	expoente=expoente+1
	cont=cont+1
r=sqrt(12)*r
print(round(r, 8))		  
		  
	  
		  														
-- EXECUTION TIME:
0.167339
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
6.26870169
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
6.26870553
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
6.26885334
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 10:34:14) 
-- CODE:
from math import sqrt
n=int(input("Quantidades de termos: "))
r=1
expoente=0
denominador=1
cont=1
sinal=1
while(cont<n):
	r=r+sinal*(1/(denominador*(3**expoente)))
	sinal=sinal*(-1)
	denominador=denominador+2
	expoente=expoente+1
	cont=cont+1
r=sqrt(12)*r
print(round(r, 8))		  
		  
	  
		  														
-- OUTPUT:
6.60569213
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 10:34:25) 
-- CODE:
from math import sqrt
n=int(input("Quantidades de termos: "))
r=1
expoente=0
denominador=1
cont=1
sinal=1
while(cont<n):
	r=r+sinal*(1/(denominador*(3**expoente)))
	sinal=sinal*(-1)
	denominador=denominador+2
	expoente=expoente+1
	cont=cont+1
r=sqrt(12)*r
print(round(r, 8))		  
		  
	  
		  														
-- OUTPUT:
6.60569213
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 10:34:34) 
-- CODE:
from math import sqrt
n=int(input("Quantidades de termos: "))
r=1
expoente=0
denominador=1
cont=1
sinal=1
while(cont<n):
	r=r+sinal*(1/(denominador*(3**expoente)))
	sinal=sinal*(-1)
	denominador=denominador+2
	expoente=expoente+1
	cont=cont+1
r=sqrt(12)*r
print(round(r, 8))		  
		  
	  
		  														
-- OUTPUT:
6.60569213
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 15:19:35) 
-- CODE:
from math import sqrt
n=int(input("Quantidades de termos: "))
r=0
expoente=0
denominador=1
cont=1
sinal=1
while(cont<n):
	r=r+sinal*(1/(denominador*(3**expoente)))
	sinal=sinal*(-1)
	denominador=denominador+2
	expoente=expoente+1
	cont=cont+1
r=sqrt(12)*r
print(round(r, 8))		  
		  
	  
		  														
-- OUTPUT:
3.14159051
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 15:21:42) 
-- CODE:
from math import sqrt
n=int(input("Quantidades de termos: "))
r=0
expoente=0
denominador=1
cont=1
sinal=1
while(cont<n):
	r=r+sinal*(1/(denominador*(3**expoente)))
	sinal=sinal*(-1)
	denominador=denominador+2
	expoente=expoente+1
	cont=cont+1
   r=sqrt(12)*r
print(round(r, 8))		  
		  
	  
		  														
-- ERROR:
File "XXXX", line 14
    r=sqrt(12)*r
               ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 15:22:33) 
-- CODE:
from math import sqrt
n=int(input("Quantidades de termos: "))
r=0
expoente=0
denominador=1
cont=1
sinal=1
while(cont<n):
	r=sqrt(12)*(+sinal*(1/(denominador*(3**expoente))))
	sinal=sinal*(-1)
	denominador=denominador+2
	expoente=expoente+1
	cont=cont+1
print(round(r, 8))		  
		  
	  
		  														
-- OUTPUT:
-9.26e-06
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 15:22:46) 
-- CODE:
from math import sqrt
n=int(input("Quantidades de termos: "))
r=0
expoente=0
denominador=1
cont=1
sinal=1
while(cont<n):
	r=sqrt(12)*(sinal*(1/(denominador*(3**expoente))))
	sinal=sinal*(-1)
	denominador=denominador+2
	expoente=expoente+1
	cont=cont+1
print(round(r, 8))		  
		  
	  
		  														
-- OUTPUT:
-9.26e-06
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 15:26:05) 
-- CODE:
from math import sqrt
n=int(input("Quantidades de termos: "))
r=0
expoente=0
denominador=1
cont=0
sinal=1
while(cont<n):
	r=sqrt(12)*(sinal*(1/(denominador*(3**expoente))))
	sinal=sinal*(-1)
	denominador=denominador+2
	expoente=expoente+1
	cont=cont+1
print(round(r, 8))		  
		  
	  
		  														
-- OUTPUT:
2.79e-06
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 15:30:39) 
-- CODE:
from math import sqrt
n=int(input("Quantidades de termos: "))
r=0
expoente=0
denominador=1
cont=0
sinal=1
while(cont<n):
	r=sqrt(12)*(sinal*(1/(denominador*(3**expoente))))
	sinal=sinal*(-1)
	denominador=denominador+2
	expoente=expoente+1
	cont=cont+1
print(round(r, 8))		  
		  
	  
		  														
-- OUTPUT:
2.79e-06
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 15:30:39) 
-- CODE:
from math import sqrt
n=int(input("Quantidades de termos: "))
r=0
expoente=0
denominador=1
cont=0
sinal=1
while(cont<n):
	r=sqrt(12)*(sinal*(1/(denominador*(3**expoente))))
	sinal=sinal*(-1)
	denominador=denominador+2
	expoente=expoente+1
	cont=cont+1
print(round(r, 8))		  
		  
	  
		  														
-- OUTPUT:
2.79e-06
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 15:30:40) 
-- CODE:
from math import sqrt
n=int(input("Quantidades de termos: "))
r=0
expoente=0
denominador=1
cont=0
sinal=1
while(cont<n):
	r=sqrt(12)*(sinal*(1/(denominador*(3**expoente))))
	sinal=sinal*(-1)
	denominador=denominador+2
	expoente=expoente+1
	cont=cont+1
print(round(r, 8))		  
		  
	  
		  														
-- OUTPUT:
2.79e-06
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 15:31:52) 
-- CODE:
from math import sqrt
n=int(input("Quantidades de termos: "))
r=1
expoente=0
denominador=1
cont=0
sinal=1
while(cont<n):
	r=r+sqrt(12)*(sinal*(1/(denominador*(3**expoente))))
	sinal=sinal*(-1)
	denominador=denominador+2
	expoente=expoente+1
	cont=cont+1
print(round(r, 8))		  
		  
	  
		  														
-- OUTPUT:
4.1415933
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 15:44:04) 
-- CODE:
from math import sqrt
n=int(input("Quantidades de termos: "))
r=0
expoente=0
denominador=1
cont=0
sinal=1
while(cont<n):
	r=r+sqrt(12)*(sinal*(1/(denominador*(3**expoente))))
	sinal=sinal*(-1)
	denominador=denominador+2
	expoente=expoente+1
	cont=cont+1
print(round(r, 8))		  
		  
	  
		  														
-- OUTPUT:
3.1415933
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 15:44:08) 
-- CODE:
from math import sqrt
n=int(input("Quantidades de termos: "))
r=0
expoente=0
denominador=1
cont=0
sinal=1
while(cont<n):
	r=r+sqrt(12)*(sinal*(1/(denominador*(3**expoente))))
	sinal=sinal*(-1)
	denominador=denominador+2
	expoente=expoente+1
	cont=cont+1
print(round(r, 8))		  
		  
	  
		  														
-- OUTPUT:
3.1415933
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 15:44:14) 
-- CODE:
from math import sqrt
n=int(input("Quantidades de termos: "))
r=0
expoente=0
denominador=1
cont=0
sinal=1
while(cont<n):
	r=r+sqrt(12)*(sinal*(1/(denominador*(3**expoente))))
	sinal=sinal*(-1)
	denominador=denominador+2
	expoente=expoente+1
	cont=cont+1
print(round(r, 8))		  
		  
	  
		  														
-- EXECUTION TIME:
0.174538
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.1415933
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.14159266
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
3.14156872
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
