== TEST (2019-03-28 21:54:37) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = int(input())

u = var//1000

print(u)
-- OUTPUT:
9
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 21:54:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = int(input())

u = var//1

print(u)
-- OUTPUT:
9173
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 21:55:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = int(input())

u = var//0.1

print(u)
-- OUTPUT:
91729.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 21:55:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = int(input())

u = var//10

print(u)
-- OUTPUT:
917
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 21:55:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = int(input())

u = var//100

print(u)
-- OUTPUT:
91
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 21:56:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = int(input())

u = 10//var

print(u)
-- OUTPUT:
91
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 21:56:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = int(input())

u = 1000//var

print(u)
-- OUTPUT:
91
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 21:56:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = int(input())

u = var//1000

print(u)
-- OUTPUT:
9
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 21:57:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = int(input())

u = var%1000

print(u)
-- OUTPUT:
173
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 21:58:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = int(input())

milhar = var//1000
centena = var - (var%1000)
print(milhar)
print(centena)
-- OUTPUT:
9
9000
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 21:59:27) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = int(input())

milhar = var//1000
centena = (var%1000)
print(milhar)
print(centena)
-- OUTPUT:
9
173
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 21:59:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = int(input())

milhar = var//1000
centena = (var%1000)//100
print(milhar)
print(centena)
-- OUTPUT:
9
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 22:00:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = int(input())

milhar = var//1000
centena = (var%1000)//100
print(milhar)
print(centena)
-- OUTPUT:
9
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 22:01:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = int(input())

milhar = var//1000
centena = (var%1000)//100
dezena = (var%1000)//10
print(milhar)
print(centena)
print(dezena)
-- OUTPUT:
9
1
17
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 22:01:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = int(input())

milhar = var//1000
centena = (var%1000)//100
dezena = (var%1000)%10
print(milhar)
print(centena)
print(dezena)
-- OUTPUT:
9
1
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 22:03:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = int(input())

milhar = var//1000
centena = (var%1000)//100
dezena = (var%100)
unidade = (var%1000)%10
print(milhar)
print(centena)
print(dezena)
print(unidade)
-- OUTPUT:
9
1
73
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 22:03:40) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = int(input())

milhar = var//1000
centena = (var%1000)//100
dezena = (var//100)
unidade = (var%1000)%10
print(milhar)
print(centena)
print(dezena)
print(unidade)
-- OUTPUT:
9
1
91
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 22:04:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = int(input())

milhar = var//1000
centena = (var%1000)//100
dezena = (var%100)
unidade = (var%1000)%10
print(milhar)
print(centena)
print(dezena)
print(unidade)
-- OUTPUT:
9
1
73
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 22:04:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = int(input())

milhar = var//1000
centena = (var%1000)//100
dezena = (var%1000)//10
unidade = (var%1000)%10
print(milhar)
print(centena)
print(dezena)
print(unidade)
-- OUTPUT:
9
1
17
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 22:05:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = int(input())

milhar = var//1000
centena = (var%1000)//100
dezena = (var%1000)//1
unidade = (var%1000)%10
print(milhar)
print(centena)
print(dezena)
print(unidade)
-- OUTPUT:
9
1
173
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 22:06:08) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = int(input())

milhar = var//1000
centena = (var%1000)//100
dezena = (var%1000)%100
unidade = (var%1000)%10
print(milhar)
print(centena)
print(dezena)
print(unidade)
-- OUTPUT:
9
1
73
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 22:06:27) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = int(input())

milhar = var//1000
centena = (var%1000)//100
dezena = (var//1000)%100
unidade = (var%1000)%10
print(milhar)
print(centena)
print(dezena)
print(unidade)
-- OUTPUT:
9
1
9
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 22:07:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = int(input())

milhar = var//1000
centena = (var%1000)//100
dezena = (var//1000)%10
unidade = (var%1000)%10
print(milhar)
print(centena)
print(dezena)
print(unidade)
-- OUTPUT:
9
1
9
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 22:07:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = int(input())

milhar = var//1000
centena = (var%1000)//100
dezena = (var//1000)%10
unidade = (var%1000)%10
print(milhar)
print(centena)
print(dezena)
print(unidade)
-- OUTPUT:
9
1
9
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 22:07:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = int(input())

milhar = var//1000
centena = (var%1000)//100
dezena = (var//1000)%10
unidade = (var%1000)%10
print(milhar)
print(centena)
print(dezena)
print(unidade)
-- OUTPUT:
9
1
9
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 22:08:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = int(input())

milhar = var//1000
centena = (var%1000)//100
dezena = (var//1000)
unidade = (var%1000)%10
print(milhar)
print(centena)
print(dezena)
print(unidade)
-- OUTPUT:
9
1
9
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 22:08:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = int(input())

milhar = var//1000
centena = (var%1000)//100
dezena = (var%1000)
unidade = (var%1000)%10
print(milhar)
print(centena)
print(dezena)
print(unidade)
-- OUTPUT:
9
1
173
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 22:09:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = int(input())

milhar = var//1000
centena = (var%1000)//100
dezena = (var//10)
unidade = (var%1000)%10
print(milhar)
print(centena)
print(dezena)
print(unidade)
-- OUTPUT:
9
1
917
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 22:09:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = int(input())

milhar = var//1000
centena = (var%1000)//100
dezena = (var%1000)
unidade = (var%1000)%10
print(milhar)
print(centena)
print(dezena)
print(unidade)
-- OUTPUT:
9
1
173
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 22:13:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = int(input())

milhar = var//1000
centena = (var%1000)//100
dezena = (var%1000)%1
unidade = (var%1000)%10
print(milhar)
print(centena)
print(dezena)
print(unidade)
-- OUTPUT:
9
1
0
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 22:13:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = int(input())

milhar = var//1000
centena = (var%1000)//100
dezena = (var%100)%10
unidade = (var%1000)%10
print(milhar)
print(centena)
print(dezena)
print(unidade)
-- OUTPUT:
9
1
3
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 22:14:05) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = int(input())

milhar = var//1000
centena = (var%1000)//100
dezena = (var%100)
unidade = (var%1000)%10
print(milhar)
print(centena)
print(dezena)
print(unidade)
-- OUTPUT:
9
1
73
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 22:14:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = int(input())

milhar = var//1000
centena = (var%1000)//100
dezena = (var%10)
unidade = (var%1000)%10
print(milhar)
print(centena)
print(dezena)
print(unidade)
-- OUTPUT:
9
1
3
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 22:14:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = int(input())

milhar = var//1000
centena = (var%1000)//100
dezena = (var%1000)
unidade = (var%1000)%10
print(milhar)
print(centena)
print(dezena)
print(unidade)
-- OUTPUT:
9
1
173
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 22:15:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = int(input())

milhar = var//1000
centena = (var%1000)//100
dezena = (var%1000)
unidade = (var%1000)%10
print(milhar)
print(centena)
print(dezena)
print(unidade)
-- OUTPUT:
9
1
173
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 22:15:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = int(input())

milhar = var//1000
centena = (var%1000)//100
dezena = (var%1000)
unidade = (var%1000)%10
print(milhar)
print(centena)
print(dezena)
print(unidade)
-- OUTPUT:
9
1
173
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 22:16:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = int(input())

milhar = var//1000
centena = (var%1000)//100
dezena = (var%100)//10
unidade = (var%1000)%10
print(milhar)
print(centena)
print(dezena)
print(unidade)
-- OUTPUT:
9
1
7
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 22:16:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = int(input())

milhar = var//1000
centena = (var%1000)//100
dezena = (var%100)//10
unidade = (var%1000)%10
print(milhar)
print(centena)
print(dezena)
print(unidade)
-- EXECUTION TIME:
0.194336
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
9
1
7
3
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
1
0
1
0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 22:16:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = int(input())

milhar = var//1000
centena = (var%1000)//100
dezena = (var%100)//10
unidade = (var%1000)%10
print(milhar)
print(centena)
print(dezena)
print(unidade)
-- OUTPUT:
9
1
7
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 22:17:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = int(input())

milhar = var//1000
centena = (var%1000)//100
dezena = (var%100)//10
unidade = (var%1000)%10
print(milhar+centena+dezena+unidade)

-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 22:17:24) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = int(input())

milhar = var//1000
centena = (var%1000)//100
dezena = (var%100)//10
unidade = (var%1000)%10
print(milhar+centena+dezena+unidade)

-- EXECUTION TIME:
0.137936
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
