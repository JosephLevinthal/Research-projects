== TEST (2019-03-29 14:22:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input())
y = int(input())
z = int(input())

maxi = max (x, y, z)
mini = min (x, y, z)
inte = maxi-mini

print(maxi)
print (mini)
print(inte) 
-- OUTPUT:
10
-2
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 14:22:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input())
y = int(input())
z = int(input())

maxi = max (x, y, z)
mini = min (x, y, z)
inte = maxi-mini

print(max (x, y, z))
print (min (x, y, z))
print() 
-- OUTPUT:
10
-2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 14:23:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input())
y = int(input())
z = int(input())

maxi = max (x, y, z)
mini = min (x, y, z)
inte = maxi-mini
print (min (x, y, z))
print(max - min) 
print(max (x, y, z))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    print(max - min) 
TypeError: unsupported operand type(s) for -: 'builtin_function_or_method' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 14:24:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input())
y = int(input())
z = int(input())

maxi = max (x, y, z)
mini = min (x, y, z)
inte = maxi-mini
print (min (x, y, z))
print(inte) 
print(max (x, y, z))


-- OUTPUT:
-2
12
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 14:24:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input())
y = int(input())
z = int(input())

maxi = max (x, y, z)
mini = min (x, y, z)
inte = maxi-mini
print (min (x, y, z))
print(inte) 
print(max (x, y, z))


-- EXECUTION TIME:
0.25334
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
12
10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 18:40:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input())
y = int(input())
z = int(input())

#maxi = max (x, y, z)
#mini = min (x, y, z)
inte = maxi-mini
print (min (x, y, z))
#print(inte) 
print(max (x, y, z))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    inte = maxi-mini
NameError: name 'maxi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 18:41:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input())
y = int(input())
z = int(input())

#maxi = max (x, y, z)
#mini = min (x, y, z)
#inte = maxi-mini
print (min (x, y, z))
#print(inte) 
print(max (x, y, z))


-- OUTPUT:
-2
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 18:42:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input())
y = int(input())
z = int(input())

#maxi = max (x, y, z)
#mini = min (x, y, z)
inte = max-min
print (min (x, y, z))
print(inte) 
print(max (x, y, z))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    inte = max-min
TypeError: unsupported operand type(s) for -: 'builtin_function_or_method' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 18:42:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input())
y = int(input())
z = int(input())

maxi = max (x, y, z)
mini = min (x, y, z)
inte = maxi-mini
print (min (x, y, z))
print(inte) 
print(max (x, y, z))


-- OUTPUT:
-2
12
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 18:42:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input())
y = int(input())
z = int(input())

maxi = max (x, y, z)
mini = min (x, y, z)
inte = maxi-mini
print (min (x, y, z))
print(inte) 
print(max (x, y, z))


-- EXECUTION TIME:
0.186786
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
12
10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 18:44:13) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input())
y = int(input())
z = int(input())

maxi = max (x, y, z)
mini = min (x, y, z)
inte = (x + y + z) - (maxi-mini)
print (min (x, y, z))
print(inte) 
print(max (x, y, z))


-- OUTPUT:
-2
-4
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 10:23:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input())
y = int(input())
z = int(input())

maxi = max (x, y, z)
mini = min (x, y, z)
inte = (x + y + z) - (maxi-mini)
print (min (x, y, z))
print(inte) 
print(max (x, y, z))


-- OUTPUT:
-2
-4
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 10:24:44) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input())
y = int(input())
z = int(input())

maxi = max (x, y, z)
mini = min (x, y, z)
inte = ((x + y + z) - maxi) - mini
print (min (x, y, z))
print(inte) 
print(max (x, y, z))


-- OUTPUT:
-2
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 10:24:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input())
y = int(input())
z = int(input())

maxi = max (x, y, z)
mini = min (x, y, z)
inte = ((x + y + z) - maxi) - mini
print (min (x, y, z))
print(inte) 
print(max (x, y, z))


-- EXECUTION TIME:
0.186325
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
0
10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
