== TEST (2019-04-19 17:11:57) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

he = abs(float(input("numero de horas extras: ")))
hf = abs(float(input("numero de horas faltadas: ")))

H = he - (0.25 * hf)

print(he,"extras e", hf,"de falta")
if H > 400:
	G = 500
	print("R$", G)
elif H <= 400
	G = 100
	print("R$", G)
-- ERROR:
File "XXXX", line 12
    elif H <= 400
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-19 17:12:03) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

he = abs(float(input("numero de horas extras: ")))
hf = abs(float(input("numero de horas faltadas: ")))

H = he - (0.25 * hf)

print(he,"extras e", hf,"de falta")
if H > 400:
	G = 500
	print("R$", G)
elif H <= 400:
	G = 100
	print("R$", G)
-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-19 17:12:10) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

he = abs(float(input("numero de horas extras: ")))
hf = abs(float(input("numero de horas faltadas: ")))

H = he - (0.25 * hf)

print(he,"extras e", hf,"de falta")
if H > 400:
	G = 500
	print("R$", G)
elif H <= 400:
	G = 100
	print("R$", G)
-- EXECUTION TIME:
0.213867
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 100
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 100
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-19 17:12:47) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

he = abs(float(input("numero de horas extras: ")))
hf = abs(float(input("numero de horas faltadas: ")))

H = he - (0.25 * hf)

print(he,"extras e", hf,"de falta")
if H > 400:
	G = 500
	
elif H <= 400:
	G = 100
	
print(float("R$", G))
-- EXECUTION TIME:
0.176838
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1879/main.py", line 15, in <module>
    print(float("R$", G))
TypeError: float() takes at most 1 argument (2 given)

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-19 17:12:48) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

he = abs(float(input("numero de horas extras: ")))
hf = abs(float(input("numero de horas faltadas: ")))

H = he - (0.25 * hf)

print(he,"extras e", hf,"de falta")
if H > 400:
	G = 500
	
elif H <= 400:
	G = 100
	
print(float("R$", G))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 15, in <module>
    print(float("R$", G))
TypeError: float() takes at most 1 argument (2 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-19 17:13:40) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

he = abs(float(input("numero de horas extras: ")))
hf = abs(float(input("numero de horas faltadas: ")))

H = he - (0.25 * hf)

print(he,"extras e", hf,"de falta")
if H > 400:
	float(G) = 500
	print("R$", G)
elif H <= 400:
	float(G) = 100
	print("R$", G)
print("R$", G)
-- ERROR:
File "XXXX", line 13
    float(G) = 100
    ^
SyntaxError: can't assign to function call
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-19 17:16:04) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

he = abs(float(input("numero de horas extras: ")))
hf = abs(float(input("numero de horas faltadas: ")))

H = he - (0.25 * hf)

print(he,"extras e", hf,"de falta")
if H > 400:
	G = float(500)
	print("R$", G)
elif H <= 400:
	G = 100
	print("R$", G)

-- EXECUTION TIME:
0.119811
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500.0
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 100
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 100
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-19 17:16:05) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

he = abs(float(input("numero de horas extras: ")))
hf = abs(float(input("numero de horas faltadas: ")))

H = he - (0.25 * hf)

print(he,"extras e", hf,"de falta")
if H > 400:
	G = float(500)
	print("R$", G)
elif H <= 400:
	G = 100
	print("R$", G)

-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-19 17:16:30) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

he = abs(float(input("numero de horas extras: ")))
hf = abs(float(input("numero de horas faltadas: ")))

H = he - (0.25 * hf)

print(he,"extras e", hf,"de falta")
if H > 400:
	G = float(500)
	print("R$", G)
elif H <= 400:
	G = float(100)
	print("R$", G)

-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-19 17:16:38) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

he = abs(float(input("numero de horas extras: ")))
hf = abs(float(input("numero de horas faltadas: ")))

H = he - (0.25 * hf)

print(he,"extras e", hf,"de falta")
if H > 400:
	G = float(500)
	print("R$", G)
elif H <= 400:
	G = float(100)
	print("R$", G)

-- EXECUTION TIME:
0.196234
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500.0
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 100.0
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 100.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
