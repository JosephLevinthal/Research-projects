== TEST (2019-03-28 13:17:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a= float(input("Valor de a: "))
b= float(input("Valor de b: "))
c= float(input("Valor de c: "))



s = a+b+c/2
print(s)


res = 
-- ERROR:
File "XXXX", line 14
    res = 
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 13:17:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a= float(input("Valor de a: "))
b= float(input("Valor de b: "))
c= float(input("Valor de c: "))



s = a+b+c/2
print(s)



-- OUTPUT:
37.1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 13:23:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a= float(input("Valor de a: "))
b= float(input("Valor de b: "))
c= float(input("Valor de c: "))
s = a+b+c/2
total = sqrt(s(s-a)(s-b)(s-c))
print(total)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    total = sqrt(s(s-a)(s-b)(s-c))
NameError: name 'sqrt' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 13:24:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a= float(input("Valor de a: "))
b= float(input("Valor de b: "))
c= float(input("Valor de c: "))
s = a+b+c/2
total = math.sqrt(s(s-a)(s-b)(s-c))
print(total)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    total = math.sqrt(s(s-a)(s-b)(s-c))
NameError: name 'math' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 13:25:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a= float(input("Valor de a: "))
b= float(input("Valor de b: "))
c= float(input("Valor de c: "))
s = a+b+c/2
total = (s(s-a)(s-b)(s-c)**(1/2)
print(total, 5)



-- ERROR:
File "XXXX", line 9
    print(total, 5)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 13:25:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a= float(input("Valor de a: "))
b= float(input("Valor de b: "))
c= float(input("Valor de c: "))
s = a+b+c/2
total = s(s-a)(s-b)(s-c)**(1/2)
print(total, 5)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    total = s(s-a)(s-b)(s-c)**(1/2)
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 13:26:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a= float(input("Valor de a: "))
b= float(input("Valor de b: "))
c= float(input("Valor de c: "))
s = a+b+c/2
total = int(s(s-a)(s-b)(s-c)**(1/2))
print(total, 5)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    total = int(s(s-a)(s-b)(s-c)**(1/2))
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 13:27:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a= float(input("Valor de a: "))
b= float(input("Valor de b: "))
c= float(input("Valor de c: "))
s = a+b+c/2
total = float(s(s-a)(s-b)(s-c)**(1/2))
print(total, 5)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    total = float(s(s-a)(s-b)(s-c)**(1/2))
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 16:10:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a= float(input("Valor de a: "))
b= float(input("Valor de b: "))
c= float(input("Valor de c: "))
s = a+b+c/2
import sqrt from math
total = sqrt((s(s-a)(s-b)(s-c)**(1/2))
print(total, 5)



-- EXECUTION TIME:
0.163253
-- ERROR:
  File "/home/codebench/codes/1595/1016/main.py", line 8
    import sqrt from math
                   ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 13:13:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import sqrt
a= float(input("Valor de a: "))
b= float(input("Valor de b: "))
c= float(input("Valor de c: "))
s = a+b+c/2

total = sqrt((s(s-a)(s-b)(s-c)**(1/2))
print(total, 5)



-- EXECUTION TIME:
0.1424
-- ERROR:
  File "/home/codebench/codes/1595/1016/main.py", line 12
    print(total, 5)
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 13:16:27) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import sqrt
a= float(input("Valor de a: "))
b= float(input("Valor de b: "))
c= float(input("Valor de c: "))
s = a+b+c/2

total = (math.sqrt((s(s-a)(s-b)(s-c)**(1/2)))
print(total, 5)



-- EXECUTION TIME:
0.136101
-- ERROR:
  File "/home/codebench/codes/1595/1016/main.py", line 12
    print(total, 5)
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 13:19:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import sqrt
a= float(input("Valor de a: "))
b= float(input("Valor de b: "))
c= float(input("Valor de c: "))
s = a+b+c/2


print(sqrt(s(s-a)(s-b)(s-c))



-- ERROR:
File "XXXX", line 15
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 13:20:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import sqrt
a= float(input("Valor de a: "))
b= float(input("Valor de b: "))
c= float(input("Valor de c: "))
s = a+b+c/2


print(sqrt(s(s-a)(s-b)(s-c))



-- ERROR:
File "XXXX", line 15
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 13:22:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import sqrt
a= float(input("Valor de a: "))
b= float(input("Valor de b: "))
c= float(input("Valor de c: "))
s = a+b+c/2


print((s(s-a)(s-b)(s-c))



-- ERROR:
File "XXXX", line 15
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 13:13:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *
a= float(input("Valor de a: "))
b= float(input("Valor de b: "))
c= float(input("Valor de c: "))
s = (a+b+c)/2
a= s*(s-a)*(s-b)*(s-c)
r= (sqrt(a))


print(round(r,5))



-- EXECUTION TIME:
0.222359
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.41967
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
Valor de a: Valor de b: Valor de c: 600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
Valor de a: Valor de b: Valor de c: 709.16654
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 13:13:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *
a= float(input("Valor de a: "))
b= float(input("Valor de b: "))
c= float(input("Valor de c: "))
s = (a+b+c)/2
a= s*(s-a)*(s-b)*(s-c)
r= (sqrt(a))


print(round(r,5))



-- OUTPUT:
69.41967
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 13:13:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *
a= float(input("Valor de a: "))
b= float(input("Valor de b: "))
c= float(input("Valor de c: "))
s = (a+b+c)/2
a= s*(s-a)*(s-b)*(s-c)
r= (sqrt(a))


print(round(r,5))



-- EXECUTION TIME:
0.177097
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.41967
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709.16654
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
