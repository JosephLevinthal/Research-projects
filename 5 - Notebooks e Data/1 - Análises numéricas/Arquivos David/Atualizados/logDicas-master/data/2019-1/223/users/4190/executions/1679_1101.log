== TEST (2019-04-26 14:42:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').lower()
print('Entradas:', ce ' kwh e tipo', ti)

-- ERROR:
File "XXXX", line 6
    print('Entradas:', ce ' kwh e tipo', ti)
                                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 14:42:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').lower()
print('Entradas:', ce ' kwh e tipo', ti)

-- ERROR:
File "XXXX", line 6
    print('Entradas:', ce ' kwh e tipo', ti)
                                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 14:43:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').lower()
print('Entradas:', ce ' kwh e tipo', ti)

-- ERROR:
File "XXXX", line 6
    print('Entradas:', ce ' kwh e tipo', ti)
                                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 14:43:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').lower()
print('Entradas:', ce ' kwh e tipo', ti)

-- ERROR:
File "XXXX", line 6
    print('Entradas:', ce ' kwh e tipo', ti)
                                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 14:45:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').lower()
print('Entradas:', ce ' kwh e tipo', ti)


-- ERROR:
File "XXXX", line 6
    print('Entradas:', ce ' kwh e tipo', ti)
                                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 14:46:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').lower()
print('Entradas:', ce ' kwh e tipo', ti)


-- ERROR:
File "XXXX", line 6
    print('Entradas:', ce ' kwh e tipo', ti)
                                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 14:47:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').lower()
print('Entradas:', ce, ' kwh e tipo', ti)


-- OUTPUT:
Entradas: -56.0  kwh e tipo i
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 14:48:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').lower()
print('Entradas:', ce, ' kwh e tipo', ti)


-- OUTPUT:
Entradas: -56.0  kwh e tipo i
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 14:49:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, ' kwh e tipo', ti)


-- OUTPUT:
Entradas: -56.0  kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 14:55:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, ' kwh e tipo', ti)


-- OUTPUT:
Entradas: -56.0  kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 15:02:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, ' kwh e tipo', ti)

if (ce<0):
	print('Dados invalidos')
elif (ce=500 and ti=='R'):
	print('Valor total: R$', ce*0,44)
-- ERROR:
File "XXXX", line 10
    elif (ce=500 and ti=='R'):
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 15:03:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, ' kwh e tipo', ti)

if (ce<0):
	print('Dados invalidos')
elif (ce==500 and ti=='R'):
	print('Valor total: R$', ce*0,44)
-- OUTPUT:
Entradas: -56.0  kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 15:05:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, ' kwh e tipo', ti)

if (ce<0):
	print('Dados invalidos')
elif (ce<=500 and ti=='R'):
	print('Valor total: R$', ce*0,44)
-- OUTPUT:
Entradas: -56.0  kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 15:08:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, ' kwh e tipo', ti)

if (ce<0):
	print('Dados invalidos')
elif (ce<=500 and ti=='R'):
	print('Valor total: R$', (ce*0,44))
-- OUTPUT:
Entradas: -56.0  kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 15:09:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, ' kwh e tipo', ti)

if (ce<0):
	print('Dados invalidos')
elif (ce<=500 and ti=='R'):
	print('Valor total: R$', str(ce*0,44))
-- OUTPUT:
Entradas: -56.0  kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 15:10:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, ' kwh e tipo', ti)

if (ce<0):
	print('Dados invalidos')
elif (ce<=500 and ti=='R'):
	print('Valor total: R$', str(ce*0,44))
-- OUTPUT:
Entradas: -56.0  kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 15:11:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, ' kwh e tipo', ti)

if (ce<0):
	print('Dados invalidos')
elif (ce<=500 and ti=='R'):
	print('Valor total: R$', str(ce*0,44))
-- OUTPUT:
Entradas: -56.0  kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 15:12:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, ' kwh e tipo', ti)

if (ce<0):
	print('Dados invalidos')
elif (ce<=500 and ti=='R'):
	print('Valor total: R$', str(ce*0.44))
-- OUTPUT:
Entradas: -56.0  kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 15:12:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, ' kwh e tipo', ti)

if (ce<0):
	print('Dados invalidos')
elif (ce<=500 and ti=='R'):
	print('Valor total: R$', ce*0.44)
-- OUTPUT:
Entradas: -56.0  kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 15:22:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, ' kwh e tipo', ti)

if (ce<0):
	print('Dados invalidos')
elif (ce<=500 and ti=='R'):
	print('Valor total: R$', ce*0.44)
elif (ce>500 and ti=='R'):
	print('Valor total: R$', ce*0.65)
elif (ce<=1000 and ti=='C'):
	print('Valor total: R$', ce*0.55)
elif (ce>1000 and ti=='C'):
	print('Valor total: R$', ce*0.60)
elif (ce<=5000 and ti=='I'):
	print('Valor total: R$', ce*0.55)
elif (ce>5000 and ti=='I'):
	print('Valor total: R$', ce*0.60)
else:
	print('Dados invalidos')
-- OUTPUT:
Entradas: -56.0  kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 15:24:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, ' kwh e tipo', ti)

if (ce<0):
	print('Dados invalidos')
elif (ce<=500 and ti=='R'):
	print('Valor total: R$', ce*0.44)
elif (ce>500 and ti=='R'):
	print('Valor total: R$', ce*0.65)
elif (ce<=1000 and ti=='C'):
	print('Valor total: R$', ce*0.55)
elif (ce>1000 and ti=='C'):
	print('Valor total: R$', ce*0.60)
elif (ce<=5000 and ti=='I'):
	print('Valor total: R$', ce*0.55)
elif (ce>5000 and ti=='I'):
	print('Valor total: R$', ce*0.60)
else:
	print('Dados invalidos')
-- OUTPUT:
Entradas: -56.0  kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 15:27:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, ' kwh e tipo', ti)

if (ce<0):
	print('Dados invalidos')
elif (ce<=500 and ti=='R'):
	print('Valor total: R$', ce*0.44)
elif (ce>500 and ti=='R'):
	print('Valor total: R$', ce*0.65)
elif (ce<=1000 and ti=='C'):
	print('Valor total: R$', ce*0.55)
elif (ce>1000 and ti=='C'):
	print('Valor total: R$', ce*0.60)
elif (ce<=5000 and ti=='I'):
	print('Valor total: R$', ce*0.55)
elif (ce>5000 and ti=='I'):
	print('Valor total: R$', ce*0.60)
else:
	print('Dados invalidos')
-- OUTPUT:
Entradas: -56.0  kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 15:29:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, ' kwh e tipo', ti)

if (ce<0):
	print('Dados invalidos')
elif (ce<=500 and ti=='R'):
	print('Valor total: R$', ce*0.44)
elif (ce>500 and ti=='R'):
	print('Valor total: R$', ce*0.65)
elif (ce<=1000 and ti=='C'):
	print('Valor total: R$', ce*0.55)
elif (ce>1000 and ti=='C'):
	print('Valor total: R$', ce*0.60)
elif (ce<=5000 and ti=='I'):
	print('Valor total: R$', ce*0.55)
elif (ce>5000 and ti=='I'):
	print('Valor total: R$', ce*0.60)
else:
	print('Dados invalidos')
-- OUTPUT:
Entradas: -56.0  kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 15:36:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, ' kwh e tipo', ti)

if (ce<0):
	print('Dados invalidos')
elif (ce<=500 and ti=='R'):
	print('Valor total: R$', ce*0.44)
elif (ce>500 and ti=='R'):
	print('Valor total: R$', ce*0.65)
elif (ce<=1000 and ti=='C'):
	print('Valor total: R$', ce*0.55)
elif (ce>1000 and ti=='C'):
	print('Valor total: R$', ce*0.60)
elif (ce<=5000 and ti=='I'):
	print('Valor total: R$', ce*0.55)
elif (ce>5000 and ti=='I'):
	print('Valor total: R$', ce*0.60)
else:
	print('Dados invalidos')
-- OUTPUT:
Entradas: -56.0  kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 15:39:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, ' kwh e tipo', ti)

if (ce<0):
	print('Dados invalidos')
elif (ce<=500 and ti=='R'):
	print('Valor total: R$', ce*0.44)
elif (ce>500 and ti=='R'):
	print('Valor total: R$', ce*0.65)
elif (ce<=1000 and ti=='C'):
	print('Valor total: R$', ce*0.55)
elif (ce>1000 and ti=='C'):
	print('Valor total: R$', ce*0.60)
elif (ce<=5000 and ti=='I'):
	print('Valor total: R$', ce*0.55)
elif (ce>5000 and ti=='I'):
	print('Valor total: R$', ce*0.60)
else:
	print('Dados invalidos')
-- EXECUTION TIME:
0.151793
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0  kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5  kwh e tipo R
Valor total: R$ 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 15:40:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, ' kwh e tipo', ti)

if (ce<0 and ti!='R' or ti!='C' or ti!='I'):
	print('Dados invalidos')
elif (ce<=500 and ti=='R'):
	print('Valor total: R$', ce*0.44)
elif (ce>500 and ti=='R'):
	print('Valor total: R$', ce*0.65)
elif (ce<=1000 and ti=='C'):
	print('Valor total: R$', ce*0.55)
elif (ce>1000 and ti=='C'):
	print('Valor total: R$', ce*0.60)
elif (ce<=5000 and ti=='I'):
	print('Valor total: R$', ce*0.55)
elif (ce>5000 and ti=='I'):
	print('Valor total: R$', ce*0.60)
else:
	print('Dados invalidos')
-- OUTPUT:
Entradas: -56.0  kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 15:42:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, ' kwh e tipo', ti)

if (ce<0 or ti!='R' or ti!='C' or ti!='I'):
	print('Dados invalidos')
elif (ce<=500 and ti=='R'):
	print('Valor total: R$', ce*0.44)
elif (ce>500 and ti=='R'):
	print('Valor total: R$', ce*0.65)
elif (ce<=1000 and ti=='C'):
	print('Valor total: R$', ce*0.55)
elif (ce>1000 and ti=='C'):
	print('Valor total: R$', ce*0.60)
elif (ce<=5000 and ti=='I'):
	print('Valor total: R$', ce*0.55)
elif (ce>5000 and ti=='I'):
	print('Valor total: R$', ce*0.60)
else:
	print('Dados invalidos')
-- OUTPUT:
Entradas: -56.0  kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 15:43:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, ' kwh e tipo', ti)

if (ce<0 or ti!='R' or ti!='C' or ti!='I'):
	print('Dados invalidos')
elif (ce<=500 and ti=='R'):
	print('Valor total: R$', ce*0.44)
elif (ce>500 and ti=='R'):
	print('Valor total: R$', ce*0.65)
elif (ce<=1000 and ti=='C'):
	print('Valor total: R$', ce*0.55)
elif (ce>1000 and ti=='C'):
	print('Valor total: R$', ce*0.60)
elif (ce<=5000 and ti=='I'):
	print('Valor total: R$', ce*0.55)
elif (ce>5000 and ti=='I'):
	print('Valor total: R$', ce*0.60)
else:
	print('Dados invalidos')
-- OUTPUT:
Entradas: -56.0  kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 15:44:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, ' kwh e tipo', ti)

if (ce<0 or ti!='R' or ti!='C' or ti!='I'):
	print('Dados invalidos')
elif (ce<=500 and ti=='R'):
	print('Valor total: R$', ce*0.44)
elif (ce>500 and ti=='R'):
	print('Valor total: R$', ce*0.65)
elif (ce<=1000 and ti=='C'):
	print('Valor total: R$', ce*0.55)
elif (ce>1000 and ti=='C'):
	print('Valor total: R$', ce*0.60)
elif (ce<=5000 and ti=='I'):
	print('Valor total: R$', ce*0.55)
elif (ce>5000 and ti=='I'):
	print('Valor total: R$', ce*0.60)
else:
	print('Dados invalidos')
-- EXECUTION TIME:
0.228193
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0  kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5  kwh e tipo R
Dados invalidos
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 15:46:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, ' kwh e tipo', ti)

if (ce<0 or ti!='R' or ti!='C' or ti!='I'):
	print('Dados invalidos')
elif (ce<=500 and ti=='R'):
	print('Valor total: R$', ce*0.44)
elif (ce>500 and ti=='R'):
	print('Valor total: R$', ce*0.65)
elif (ce<=1000 and ti=='C'):
	print('Valor total: R$', ce*0.55)
elif (ce>1000 and ti=='C'):
	print('Valor total: R$', ce*0.60)
elif (ce<=5000 and ti=='I'):
	print('Valor total: R$', ce*0.55)
elif (ce>5000 and ti=='I'):
	print('Valor total: R$', ce*0.60)
else:
	print('Dados invalidos')
-- OUTPUT:
Entradas: -56.0  kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 15:47:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, ' kwh e tipo', ti)

if (ce<0 or ti!='R' or ti!='C' or ti!='I'):
	print('Dados invalidos')
elif (ce<=500 and ti=='R'):
	print('Valor total: R$', ce*0.44)
elif (ce>500 and ti=='R'):
	print('Valor total: R$', ce*0.65)
elif (ce<=1000 and ti=='C'):
	print('Valor total: R$', ce*0.55)
elif (ce>1000 and ti=='C'):
	print('Valor total: R$', ce*0.60)
elif (ce<=5000 and ti=='I'):
	print('Valor total: R$', ce*0.55)
elif (ce>5000 and ti=='I'):
	print('Valor total: R$', ce*0.60)
else:
	print('Dados invalidos')
-- OUTPUT:
Entradas: -56.0  kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 15:50:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, ' kwh e tipo', ti)

if (ce<0 or ti!='R' or ti!='C' or ti!='I'):
	print('Dados invalidos')
elif (ce<=500 and ti=='R'):
	print('Valor total: R$', ce*0.44)
elif (ce>500 and ti=='R'):
	print('Valor total: R$', ce*0.65)
elif (ce<=1000 and ti=='C'):
	print('Valor total: R$', ce*0.55)
elif (ce>1000 and ti=='C'):
	print('Valor total: R$', ce*0.60)
elif (ce<=5000 and ti=='I'):
	print('Valor total: R$', ce*0.55)
elif (ce>5000 and ti=='I'):
	print('Valor total: R$', ce*0.60)
else:
	print('Dados invalidos')
-- OUTPUT:
Entradas: -56.0  kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 15:51:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, ' kwh e tipo', ti)

if (ce<0):
	print('Dados invalidos')
elif (ce<=500 and ti=='R'):
	print('Valor total: R$', ce*0.44)
elif (ce>500 and ti=='R'):
	print('Valor total: R$', ce*0.65)
elif (ce<=1000 and ti=='C'):
	print('Valor total: R$', ce*0.55)
elif (ce>1000 and ti=='C'):
	print('Valor total: R$', ce*0.60)
elif (ce<=5000 and ti=='I'):
	print('Valor total: R$', ce*0.55)
elif (ce>5000 and ti=='I'):
	print('Valor total: R$', ce*0.60)
else:
	print('Dados invalidos')
-- OUTPUT:
Entradas: -56.0  kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 15:57:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, ' kwh e tipo', ti)

if (ce<0):
	print('Dados invalidos')
elif (ce<=500 and ti=='R'):
	print('Valor total: R$', round(ce*0.44, 2))
elif (ce>500 and ti=='R'):
	print('Valor total: R$', round(ce*0.65, 2))
elif (ce<=1000 and ti=='C'):
	print('Valor total: R$', round(ce*0.55, 2))
elif (ce>1000 and ti=='C'):
	print('Valor total: R$', round(ce*0.60, 2))
elif (ce<=5000 and ti=='I'):
	print('Valor total: R$', round(ce*0.55, 2))
elif (ce>5000 and ti=='I'):
	print('Valor total: R$', round(ce*0.60, 2))
else:
	print('Dados invalidos')
-- OUTPUT:
Entradas: -56.0  kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 15:58:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, ' kwh e tipo', ti)

if (ce<0):
	print('Dados invalidos')
elif (ce<=500 and ti=='R'):
	print('Valor total: R$', round(ce*0.44, 2))
elif (ce>500 and ti=='R'):
	print('Valor total: R$', round(ce*0.65, 2))
elif (ce<=1000 and ti=='C'):
	print('Valor total: R$', round(ce*0.55, 2))
elif (ce>1000 and ti=='C'):
	print('Valor total: R$', round(ce*0.60, 2))
elif (ce<=5000 and ti=='I'):
	print('Valor total: R$', round(ce*0.55, 2))
elif (ce>5000 and ti=='I'):
	print('Valor total: R$', round(ce*0.60, 2))
else:
	print('Dados invalidos')
-- OUTPUT:
Entradas: -56.0  kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 15:59:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, ' kwh e tipo', ti)

if (ce<0):
	print('Dados invalidos')
elif (ce<=500 and ti=='R'):
	print('Valor total: R$', round(ce*0.44, 2))
elif (ce>500 and ti=='R'):
	print('Valor total: R$', round(ce*0.65, 2))
elif (ce<=1000 and ti=='C'):
	print('Valor total: R$', round(ce*0.55, 2))
elif (ce>1000 and ti=='C'):
	print('Valor total: R$', round(ce*0.60, 2))
elif (ce<=5000 and ti=='I'):
	print('Valor total: R$', round(ce*0.55, 2))
elif (ce>5000 and ti=='I'):
	print('Valor total: R$', round(ce*0.60, 2))
else:
	print('Dados invalidos')
-- OUTPUT:
Entradas: -56.0  kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 15:59:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, ' kwh e tipo', ti)

if (ce<0):
	print('Dados invalidos')
elif (ce<=500 and ti=='R'):
	print('Valor total: R$', round(ce*0.44, 2))
elif (ce>500 and ti=='R'):
	print('Valor total: R$', round(ce*0.65, 2))
elif (ce<=1000 and ti=='C'):
	print('Valor total: R$', round(ce*0.55, 2))
elif (ce>1000 and ti=='C'):
	print('Valor total: R$', round(ce*0.60, 2))
elif (ce<=5000 and ti=='I'):
	print('Valor total: R$', round(ce*0.55, 2))
elif (ce>5000 and ti=='I'):
	print('Valor total: R$', round(ce*0.60, 2))
else:
	print('Dados invalidos')
-- OUTPUT:
Entradas: -56.0  kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 15:59:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, ' kwh e tipo', ti)

if (ce<0):
	print('Dados invalidos')
elif (ce<=500 and ti=='R'):
	print('Valor total: R$', round(ce*0.44, 2))
elif (ce>500 and ti=='R'):
	print('Valor total: R$', round(ce*0.65, 2))
elif (ce<=1000 and ti=='C'):
	print('Valor total: R$', round(ce*0.55, 2))
elif (ce>1000 and ti=='C'):
	print('Valor total: R$', round(ce*0.60, 2))
elif (ce<=5000 and ti=='I'):
	print('Valor total: R$', round(ce*0.55, 2))
elif (ce>5000 and ti=='I'):
	print('Valor total: R$', round(ce*0.60, 2))
else:
	print('Dados invalidos')
-- OUTPUT:
Entradas: -56.0  kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 16:00:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, ' kwh e tipo', ti)

if (ce<0):
	print('Dados invalidos')
elif (ce<=500 and ti=='R'):
	print('Valor total: R$', round(ce*0.44, 2))
elif (ce>500 and ti=='R'):
	print('Valor total: R$', round(ce*0.65, 2))
elif (ce<=1000 and ti=='C'):
	print('Valor total: R$', round(ce*0.55, 2))
elif (ce>1000 and ti=='C'):
	print('Valor total: R$', round(ce*0.60, 2))
elif (ce<=5000 and ti=='I'):
	print('Valor total: R$', round(ce*0.55, 2))
elif (ce>5000 and ti=='I'):
	print('Valor total: R$', round(ce*0.60, 2))
else:
	print('Dados invalidos')
-- OUTPUT:
Entradas: -56.0  kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 16:02:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, ' kwh e tipo', ti)

if (ce<0):
	print('Dados invalidos')
elif (ce<=500 and ti=='R'):
	print('Valor total: R$', round(ce*0.44, 2))
elif (ce>500 and ti=='R'):
	print('Valor total: R$', round(ce*0.65, 2))
elif (ce<=1000 and ti=='C'):
	print('Valor total: R$', round(ce*0.55, 2))
elif (ce>1000 and ti=='C'):
	print('Valor total: R$', round(ce*0.60, 2))
elif (ce<=5000 and ti=='I'):
	print('Valor total: R$', round(ce*0.55, 2))
elif (ce>5000 and ti=='I'):
	print('Valor total: R$', round(ce*0.60, 2))
else:
	print('Dados invalidos')
-- OUTPUT:
Entradas: -56.0  kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 16:02:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()

print('Entradas:', ce, ' kwh e tipo', ti)

if (ce<0):
	print('Dados invalidos')
elif (ce<=500 and ti=='R'):
	print('Valor total: R$', round(ce*0.44, 2))
elif (ce>500 and ti=='R'):
	print('Valor total: R$', round(ce*0.65, 2))
elif (ce<=1000 and ti=='C'):
	print('Valor total: R$', round(ce*0.55, 2))
elif (ce>1000 and ti=='C'):
	print('Valor total: R$', round(ce*0.60, 2))
elif (ce<=5000 and ti=='I'):
	print('Valor total: R$', round(ce*0.55, 2))
elif (ce>5000 and ti=='I'):
	print('Valor total: R$', round(ce*0.60, 2))
else:
	print('Dados invalidos')
-- EXECUTION TIME:
0.224986
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Digite o consumo de energia: Qual o tipo de instalacao? Entradas: -56.0  kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Digite o consumo de energia: Qual o tipo de instalacao? Entradas: 955.5  kwh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 16:03:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, ' kwh e tipo', ti)

if (ce<0):
	print('Dados invalidos')
elif (ce<=500 and ti=='R'):
	print('Valor total: R$', round(ce*0.44, 2))
elif (ce>500 and ti=='R'):
	print('Valor total: R$', round(ce*0.65, 2))
elif (ce<=1000 and ti=='C'):
	print('Valor total: R$', round(ce*0.55, 2))
elif (ce>1000 and ti=='C'):
	print('Valor total: R$', round(ce*0.60, 2))
elif (ce<=5000 and ti=='I'):
	print('Valor total: R$', round(ce*0.55, 2))
elif (ce>5000 and ti=='I'):
	print('Valor total: R$', round(ce*0.60, 2))
else:
	print('Dados invalidos')
-- EXECUTION TIME:
0.143126
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0  kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5  kwh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 16:45:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, ' kwh e tipo', ti)

if (ce<0):
	print('Dados invalidos')
elif (ce<=500 and ti=='R'):
	print('Valor total: R$', round(ce*0.44, 2))
elif (ce>500 and ti=='R'):
	print('Valor total: R$', round(ce*0.65, 2))
elif (ce<=1000 and ti=='C'):
	print('Valor total: R$', round(ce*0.55, 2))
elif (ce>1000 and ti=='C'):
	print('Valor total: R$', round(ce*0.60, 2))
elif (ce<=5000 and ti=='I'):
	print('Valor total: R$', round(ce*0.55, 2))
elif (ce>5000 and ti=='I'):
	print('Valor total: R$', round(ce*0.60, 2))
else:
	print('Dados invalidos')
-- EXECUTION TIME:
0.143411
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0  kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5  kwh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 20:34:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, ' kwh e tipo', ti)

if (ce>0):
	if (ce<=500 and ti=='R'):
		print('Valor total: R$', round(ce*0.44, 2))
	elif (ce>500 and ti=='R'):
		print('Valor total: R$', round(ce*0.65, 2))
	elif (ce<=1000 and ti=='C'):
		print('Valor total: R$', round(ce*0.55, 2))
	elif (ce>1000 and ti=='C'):
		print('Valor total: R$', round(ce*0.60, 2))
	elif (ce<=5000 and ti=='I'):
		print('Valor total: R$', round(ce*0.55, 2))
	elif (ce>5000 and ti=='I'):
		print('Valor total: R$', round(ce*0.60, 2))
	else:
		print('Dados invalidos')
else:
	print('Dados invalidos')
-- OUTPUT:
Entradas: -56.0  kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 20:37:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, 'kwh e tipo', ti)

if (ce>0):
	if (ce<=500 and ti=='R'):
		print('Valor total: R$', round(ce*0.44, 2))
	elif (ce>500 and ti=='R'):
		print('Valor total: R$', round(ce*0.65, 2))
	elif (ce<=1000 and ti=='C'):
		print('Valor total: R$', round(ce*0.55, 2))
	elif (ce>1000 and ti=='C'):
		print('Valor total: R$', round(ce*0.60, 2))
	elif (ce<=5000 and ti=='I'):
		print('Valor total: R$', round(ce*0.55, 2))
	elif (ce>5000 and ti=='I'):
		print('Valor total: R$', round(ce*0.60, 2))
	else:
		print('Dados invalidos')
else:
	print('Dados invalidos')
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 20:39:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, 'kwh e tipo', ti)

if (ce>0):
	if (ce<=500 and ti=='R'):
		print('Valor total: R$', round(ce*0.44, 2))
	elif (ce>500 and ti=='R'):
		print('Valor total: R$', round(ce*0.65, 2))
	elif (ce<=1000 and ti=='C'):
		print('Valor total: R$', round(ce*0.55, 2))
	elif (ce>1000 and ti=='C'):
		print('Valor total: R$', round(ce*0.60, 2))
	elif (ce<=5000 and ti=='I'):
		print('Valor total: R$', round(ce*0.55, 2))
	elif (ce>5000 and ti=='I'):
		print('Valor total: R$', round(ce*0.60, 2))
	else:
		print('Dados invalidos')
else:
	print('Dados invalidos')
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 20:39:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, 'kwh e tipo', ti)

if (ce>0):
	if (ce<=500 and ti=='R'):
		print('Valor total: R$', round(ce*0.44, 2))
	elif (ce>500 and ti=='R'):
		print('Valor total: R$', round(ce*0.65, 2))
	elif (ce<=1000 and ti=='C'):
		print('Valor total: R$', round(ce*0.55, 2))
	elif (ce>1000 and ti=='C'):
		print('Valor total: R$', round(ce*0.60, 2))
	elif (ce<=5000 and ti=='I'):
		print('Valor total: R$', round(ce*0.55, 2))
	elif (ce>5000 and ti=='I'):
		print('Valor total: R$', round(ce*0.60, 2))
	else:
		print('Dados invalidos')
else:
	print('Dados invalidos')
-- EXECUTION TIME:
0.209203
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 23:29:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, 'kwh e tipo', ti)

if (ce<0):
	print('Dados invalidos')
elif (ce<=500 and ti=='R'):
	a = ce*0.44
	print('Valor total: R$', round(a, 2))
elif (ce>500 and ti=='R'):
	b = ce*0.65
	print('Valor total: R$', round(b, 2))
elif (ce<=1000 and ti=='C'):
	c = ce*0.55
	print('Valor total: R$', round(c, 2))
elif (ce>1000 and ti=='C'):
	d = ce*0.60
	print('Valor total: R$', round(d, 2))
elif (ce<=5000 and ti=='I'):
	e = ce*0.55
	print('Valor total: R$', round(e, 2))
elif (ce>5000 and ti=='I'):
	f = ce*0.60
	print('Valor total: R$', round(f, 2))
else:
	print('Dados invalidos')
-- EXECUTION TIME:
0.124725
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 23:33:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, 'kwh e tipo', ti)

if (ce<0 or ti!='R' or ti!='C' or ti!='I'):
	print('Dados invalidos')
elif (ce<=500 and ti=='R'):
	a = ce*0.44
	print('Valor total: R$', round(a, 2))
elif (ce>500 and ti=='R'):
	b = ce*0.65
	print('Valor total: R$', round(b, 2))
elif (ce<=1000 and ti=='C'):
	c = ce*0.55
	print('Valor total: R$', round(c, 2))
elif (ce>1000 and ti=='C'):
	d = ce*0.60
	print('Valor total: R$', round(d, 2))
elif (ce<=5000 and ti=='I'):
	e = ce*0.55
	print('Valor total: R$', round(e, 2))
elif (ce>5000 and ti=='I'):
	f = ce*0.60
	print('Valor total: R$', round(f, 2))
else:
	print('Dados invalidos')
-- EXECUTION TIME:
0.175136
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Dados invalidos
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 18:13:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, 'kWh e tipo', ti)

if (ce<0 or ti!='R' or ti!='C' or ti!='I'):
	print('Dados invalidos')
elif (ce<=500 and ti=='R'):
	a = ce*0.44
	print('Valor total: R$', round(a, 2))
elif (ce>500 and ti=='R'):
	b = ce*0.65
	print('Valor total: R$', round(b, 2))
elif (ce<=1000 and ti=='C'):
	c = ce*0.55
	print('Valor total: R$', round(c, 2))
elif (ce>1000 and ti=='C'):
	d = ce*0.60
	print('Valor total: R$', round(d, 2))
elif (ce<=5000 and ti=='I'):
	e = ce*0.55
	print('Valor total: R$', round(e, 2))
elif (ce>5000 and ti=='I'):
	f = ce*0.60
	print('Valor total: R$', round(f, 2))
else:
	print('Dados invalidos')
-- EXECUTION TIME:
0.231703
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Dados invalidos
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:14:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, 'kWh e tipo', ti)

if (ce<0 or ti!='R' or ti!='C' or ti!='I'):
	print('Dados invalidos')
	if (ce<=500 and ti=='R'):
		print('Valor total: R$', round(ce*0.44, 2))
	else:
		print('Valor total: R$', round(ce*0.65, 2))
	if (ce<=1000 and ti=='C'):
		print('Valor total: R$', round(ce*0.55, 2))
	else (ce>1000 and ti=='C'):
		print('Valor total: R$', round(ce*0.60, 2))
	if (ce<=5000 and ti=='I'):
		print('Valor total: R$', round(ce*0.55, 2))
	else (ce>5000 and ti=='I'):
		print('Valor total: R$', round(ce*0.60, 2))
else:
	print('Dados invalidos')
-- ERROR:
File "XXXX", line 16
    else (ce>1000 and ti=='C'):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:16:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, 'kWh e tipo', ti)

if (ce<0 or ti!='R' or ti!='C' or ti!='I'):
	print('Dados invalidos')
	if (ce<=500 and ti=='R'):
		print('Valor total: R$', round(ce*0.44, 2))
	else:
		print('Valor total: R$', round(ce*0.65, 2))
	if (ce<=1000 and ti=='C'):
		print('Valor total: R$', round(ce*0.55, 2))
	else: 
		print('Valor total: R$', round(ce*0.60, 2))
	if (ce<=5000 and ti=='I'):
		print('Valor total: R$', round(ce*0.55, 2))
	else:
		print('Valor total: R$', round(ce*0.60, 2))
else:
	print('Dados invalidos')
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
Valor total: R$ -36.4
Valor total: R$ -33.6
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:18:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, 'kWh e tipo', ti)

if (ce<0 or ti!='R' or ti!='C' or ti!='I'):
	print('Dados invalidos')
	if (ce<=500 and ti=='R'):
		print('Valor total: R$', round(ce*0.44, 2))
	else:
		print('Valor total: R$', round(ce*0.65, 2))
		if (ce<=1000 and ti=='C'):
			print('Valor total: R$', round(ce*0.55, 2))
		else:
			print('Valor total: R$', round(ce*0.60, 2))
			if (ce<=5000 and ti=='I'):
				print('Valor total: R$', round(ce*0.55, 2))
			else:
				print('Valor total: R$', round(ce*0.60, 2))
else:
	print('Dados invalidos')
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
Valor total: R$ -36.4
Valor total: R$ -33.6
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:22:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, 'kWh e tipo', ti)

if (ce<0):
	print('Dados invalidos')
	if (ce<=500 and ti=='R'):
		print('Valor total: R$', round(ce*0.44, 2))
	else:
		print('Valor total: R$', round(ce*0.65, 2))
		if (ce<=1000 and ti=='C'):
			print('Valor total: R$', round(ce*0.55, 2))
		else:
			print('Valor total: R$', round(ce*0.60, 2))
			if (ce<=5000 and ti=='I'):
				print('Valor total: R$', round(ce*0.55, 2))
			else:
				print('Valor total: R$', round(ce*0.60, 2))
else:
	print('Dados invalidos')
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
Valor total: R$ -36.4
Valor total: R$ -33.6
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:23:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, 'kWh e tipo', ti)

if (ce>0):
	if (ce<=500 and ti=='R'):
		print('Valor total: R$', round(ce*0.44, 2))
	else:
		print('Valor total: R$', round(ce*0.65, 2))
		if (ce<=1000 and ti=='C'):
			print('Valor total: R$', round(ce*0.55, 2))
		else:
			print('Valor total: R$', round(ce*0.60, 2))
			if (ce<=5000 and ti=='I'):
				print('Valor total: R$', round(ce*0.55, 2))
			else:
				print('Valor total: R$', round(ce*0.60, 2))
else:
	print('Dados invalidos')
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:25:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, 'kWh e tipo', ti)

if (ce>0):
	if (ce<=500 and ti=='R'):
		print('Valor total: R$', round(ce*0.44, 2))
	else:
		print('Valor total: R$', round(ce*0.65, 2))
	if (ce<=1000 and ti=='C'):
		print('Valor total: R$', round(ce*0.55, 2))
	else:
		print('Valor total: R$', round(ce*0.60, 2))
	if (ce<=5000 and ti=='I'):
		print('Valor total: R$', round(ce*0.55, 2))
	else:
		print('Valor total: R$', round(ce*0.60, 2))
else:
	print('Dados invalidos')
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:31:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, 'kWh e tipo', ti)

if (ce>0):
	if (ce<=500 and ti=='R'):
		print('Valor total: R$', round(ce*0.44, 2))
	else:
		print('Valor total: R$', round(ce*0.65, 2))
		if (ce<=1000 and ti=='C'):
			print('Valor total: R$', round(ce*0.55, 2))
		else:
			print('Valor total: R$', round(ce*0.60, 2))
			if (ce<=5000 and ti=='I'):
				print('Valor total: R$', round(ce*0.55, 2))
			else:
				print('Valor total: R$', round(ce*0.60, 2))
else:
	print('Dados invalidos')
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:37:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, 'kWh e tipo', ti)

if (ce>0):
	if (ce<=500 and ti=='R'):
		print('Valor total: R$', round(ce*0.44, 2))
	elif (ce>500 and ti=='R')
		print('Valor total: R$', round(ce*0.65, 2))
	elif (ce<=1000 and ti=='C'):
		print('Valor total: R$', round(ce*0.55, 2))
	elif (ce>1000 and ti=='C'):
		print('Valor total: R$', round(ce*0.60, 2))
	elif (ce<=5000 and ti=='I'):
		print('Valor total: R$', round(ce*0.55, 2))
	elif (ce>5000 and ti=='I'):
		print('Valor total: R$', round(ce*0.60, 2))
else:
	print('Dados invalidos')
-- ERROR:
File "XXXX", line 11
    elif (ce>500 and ti=='R')
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:39:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, 'kWh e tipo', ti)

if (ce>0):
	if (ce<=500 and ti=='R'):
		print('Valor total: R$', round(ce*0.44, 2))
	elif (ce>500 and ti=='R'):
		print('Valor total: R$', round(ce*0.65, 2))
	elif (ce<=1000 and ti=='C'):
		print('Valor total: R$', round(ce*0.55, 2))
	elif (ce>1000 and ti=='C'):
		print('Valor total: R$', round(ce*0.60, 2))
	elif (ce<=5000 and ti=='I'):
		print('Valor total: R$', round(ce*0.55, 2))
	elif (ce>5000 and ti=='I'):
		print('Valor total: R$', round(ce*0.60, 2))
else:
	print('Dados invalidos')
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:39:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, 'kWh e tipo', ti)

if (ce>0):
	if (ce<=500 and ti=='R'):
		print('Valor total: R$', round(ce*0.44, 2))
	elif (ce>500 and ti=='R'):
		print('Valor total: R$', round(ce*0.65, 2))
	elif (ce<=1000 and ti=='C'):
		print('Valor total: R$', round(ce*0.55, 2))
	elif (ce>1000 and ti=='C'):
		print('Valor total: R$', round(ce*0.60, 2))
	elif (ce<=5000 and ti=='I'):
		print('Valor total: R$', round(ce*0.55, 2))
	elif (ce>5000 and ti=='I'):
		print('Valor total: R$', round(ce*0.60, 2))
else:
	print('Dados invalidos')
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:39:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ce = float(input('Digite o consumo de energia: '))
ti = input('Qual o tipo de instalacao? ').upper()
print('Entradas:', ce, 'kWh e tipo', ti)

if (ce>0):
	if (ce<=500 and ti=='R'):
		print('Valor total: R$', round(ce*0.44, 2))
	elif (ce>500 and ti=='R'):
		print('Valor total: R$', round(ce*0.65, 2))
	elif (ce<=1000 and ti=='C'):
		print('Valor total: R$', round(ce*0.55, 2))
	elif (ce>1000 and ti=='C'):
		print('Valor total: R$', round(ce*0.60, 2))
	elif (ce<=5000 and ti=='I'):
		print('Valor total: R$', round(ce*0.55, 2))
	elif (ce>5000 and ti=='I'):
		print('Valor total: R$', round(ce*0.60, 2))
else:
	print('Dados invalidos')
-- EXECUTION TIME:
0.218141
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
