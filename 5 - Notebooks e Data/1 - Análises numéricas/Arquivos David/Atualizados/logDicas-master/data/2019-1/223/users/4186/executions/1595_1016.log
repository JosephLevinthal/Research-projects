== TEST (2019-03-27 07:31:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1= radians(float(input("Latitude deP1:")))
g1= radians(float(input("longitude P2:")))
t2= radians (float(input("Latitude de P2:")))
g2= radians(float(input("Longitude deP2:")))
R= 6371.01

d= R*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1-g2))
print(round(d, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    g2= radians(float(input()))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 07:31:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1= radians(float(input("Latitude deP1:")))
g1= radians(float(input("longitude P2:")))
t2= radians (float(input("Latitude de P2:")))
g2= radians(float(input("Longitude deP2:")))
R= 6371.01

d= R*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1-g2))
print(round(d, 2))
-- EXECUTION TIME:
0.210738
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1595/1016/main.py", line 8, in <module>
    g2= radians(float(input()))
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 07:32:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1= radians(float(input("Latitude deP1:")))
g1= radians(float(input("longitude P2:")))
t2= radians (float(input("Latitude de P2:")))
g2= radians(float(input("Longitude deP2:")))
R= 6371.01

d= R*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1-g2)))))
print(round(d, 2))
-- EXECUTION TIME:
0.177255
-- ERROR:
  File "/home/codebench/codes/1595/1016/main.py", line 11
    d= R*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1-g2)))))
                                                         ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 07:32:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1= radians(float(input("Latitude deP1:")))
g1= radians(float(input("longitude P2:")))
t2= radians (float(input("Latitude de P2:")))
g2= radians(float(input("Longitude deP2:")))
R= 6371.01

d= R*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1-g2))))
print(round(d, 2))
-- EXECUTION TIME:
0.137637
-- ERROR:
  File "/home/codebench/codes/1595/1016/main.py", line 11
    d= R*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1-g2))))
                                                         ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 07:32:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1= radians(float(input("Latitude deP1:")))
g1= radians(float(input("longitude P2:")))
t2= radians (float(input("Latitude de P2:")))
g2= radians(float(input("Longitude deP2:")))
R= 6371.01

d= R*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1-g2)))
print(round(d, 2))
-- EXECUTION TIME:
0.167554
-- ERROR:
  File "/home/codebench/codes/1595/1016/main.py", line 11
    d= R*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1-g2)))
                                                         ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 07:32:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1= radians(float(input("Latitude deP1:")))
g1= radians(float(input("longitude P2:")))
t2= radians (float(input("Latitude de P2:")))
g2= radians(float(input("Longitude deP2:")))
R= 6371.01

d= R*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1-g2))
print(round(d, 2))
-- EXECUTION TIME:
0.152914
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1595/1016/main.py", line 8, in <module>
    g2= radians(float(input()))
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 16:24:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
r=float(input("insira o valor de r:"))

a=pi*(r**2)
v=4/3*pi(r**3)
print(round(a,3))
print(round(v,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    v=4/3*pi(r**3)
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 16:24:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
r=float(input("insira o valor de r:"))

a=pi*(r**2)
v=4/3*pi(r**3)
print(round(a,3))
print(round(v,3))
-- EXECUTION TIME:
0.142853
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1595/1016/main.py", line 8, in <module>
    v=4/3*pi(r**3)
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 16:24:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
r=float(input("insira o valor de r:"))

a=pi*(r**2)
v=4/3*pi(r**3)
print(round(a,3))
print(round(v,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    v=4/3*pi(r**3)
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 16:24:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
r=float(input("Insira o valor de r:"))

a=pi*(r**2)
v=4/3*pi(r**3)
print(round(a,3))
print(round(v,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    v=4/3*pi(r**3)
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 16:25:05) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
r=float(input("Insira o valor de r:"))

A=pi*(r**2)
v=4/3*pi(r**3)
print(round(a,3))
print(round(v,3))
-- EXECUTION TIME:
0.17917
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1595/1016/main.py", line 8, in <module>
    v=4/3*pi(r**3)
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 16:25:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
r=float(input("Insira o valor de r:"))

A=pi*(r**2)
v= 4/3*pi(r**3)
print(round(a,3))
print(round(v,3))
-- EXECUTION TIME:
0.186634
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1595/1016/main.py", line 8, in <module>
    v= 4/3*pi(r**3)
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 21:09:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
r=float(input("Insira o valor de r:"))

A= pi*(r**2)
V= 4/3*pi*(r**3)
print(round(A,3 ))
print(round(V,3 ))
-- OUTPUT:
380.133
5575.28
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 21:12:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
r=float(input('Insira o valor de r:'))

A= pi*(r**2)
V= 4/3*pi*(r**3)
print(round(A,3 ))
print(round(V,3 ))
-- EXECUTION TIME:
0.136346
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
380.133
5575.28
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
2827.433
113097.336
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
3421.194
150532.554
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 21:12:37) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
r=float(input('Insira o valor de r:'))

A= pi*(r**2)
V= 4/3*pi*(r**3)
print(round(A,3 ))
print(round(V,3 ))
-- OUTPUT:
380.133
5575.28
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 21:13:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
r=float(input('Insira o valor de r:'))

A= pi*(r**2)
V= 4/3*pi*(r**3)
print(round(A,3 ))
print(round(V,3 ))
-- OUTPUT:
380.133
5575.28
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 21:13:44) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
r=float(input('Insira o valor de r:'))

A= pi*(r**2)
V= 4/3*pi*(r**3)
print(round(A,3 ))
print(round(V,3 ))
-- EXECUTION TIME:
0.139663
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
380.133
5575.28
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
2827.433
113097.336
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
3421.194
150532.554
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 21:14:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
r=float(input('Insira o valor de r:'))

A= pi*(r**2)
V= 4/3*pi*(r**3)
print(round(A,3 ))
print(round(V,3 ))
-- OUTPUT:
380.133
5575.28
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 21:15:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
r=float(input('Insira o valor de r:'))

A= pi*(r**2)
V= 4/3*pi*(r**3)
print(round(A,3 ))
print(round(V,3 ))
-- EXECUTION TIME:
0.113582
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
380.133
5575.28
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
2827.433
113097.336
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
3421.194
150532.554
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 21:16:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
r=float(input('Insira o valor de r:'))

A= pi*(r**2)
V= 4/3*pi*(r**3)
print(round(A,3 ))
print(round(V,3 ))
-- OUTPUT:
380.133
5575.28
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 21:16:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
r=float(input('Insira o valor de r:'))

A= pi*(r**2)
V= 4/3*pi*(r**3)
print(round(A,3 ))
print(round(V,3 ))
-- OUTPUT:
380.133
5575.28
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 21:16:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
r=float(input('Insira o valor de r:'))

A= pi*(r**2)
V= 4/3*pi*(r**3)
print(round(A,3 ))
print(round(V,3 ))
-- EXECUTION TIME:
0.198484
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
380.133
5575.28
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
2827.433
113097.336
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
3421.194
150532.554
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 21:32:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
a=float(input('Insira o valor de A:'))
b=float(input('insira o valor de B:'))
c=float(input('insira o valor de C:'))

s(a+b+c)/2

A=s*(s-a)*(s-b)*(s-c)
R=(sqrt(A))
print(round(R,5))
-- EXECUTION TIME:
0.126606
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1595/1016/main.py", line 9, in <module>
    s(a+b+c)/2
NameError: name 's' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 21:32:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
a=float(input('Insira o valor de A:'))
b=float(input('insira o valor de B:'))
c=float(input('insira o valor de C:'))

s(a+b+c)/2

A=s*(s-a)*(s-b)*(s-c)
R=(sqrt(A))
print(round(R,5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    s(a+b+c)/2
NameError: name 's' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 21:33:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
a=float(input('Insira o valor de A:'))
b=float(input('insira o valor de B:'))
c=float(input('insira o valor de C:'))

s(a+b+c)/2

A=s*(s-a)*(s-b)*(s-c)
R=(sqrt(A))
print(round(R,5))
-- EXECUTION TIME:
0.155823
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1595/1016/main.py", line 9, in <module>
    s(a+b+c)/2
NameError: name 's' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 21:36:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
a=float(input('Insira o valor de A:'))
b=float(input('insira o valor de B:'))
c=float(input('insira o valor de C:'))

s(a+b+c)/2

A=s*(s-a)*(s-b)*(s-c)
R=(sqrt(A))
print(round(R,5))
-- EXECUTION TIME:
0.16909
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1595/1016/main.py", line 9, in <module>
    s(a+b+c)/2
NameError: name 's' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 21:37:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
a=float(input('Insira o valor de A:'))
b=float(input('Insira o valor de B:'))
c=float(input('Insira o valor de C:'))

s=(a+b+c)/2

A=s*(s-a)*(s-b)*(s-c)
R=(sqrt(A))
print(round(R,5))
-- EXECUTION TIME:
0.222003
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.41967
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709.16654
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
