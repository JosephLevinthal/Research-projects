== TEST (2019-04-09 21:10:59) 
-- CODE:
from math import *
HPM = int(input("digite a vida do mosntro: "))
D1 = int(f(input("digite um numero de 1 a 20: ")))
D2 = int(f(input("digite um numero de 1 a 20: ")))



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    D1 = int(f(input()))
NameError: name 'f' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 21:14:08) 
-- CODE:
from math import *
HPM = int(input("digite a vida do mosntro: "))
D1 = int(input("digite um numero de 1 a 20: "))
D2 = int(input("digite um numero de 1 a 20: "))

d1 = int(f)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    d1 = int(f)
NameError: name 'f' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 21:15:10) 
-- CODE:
from math import *
HPM = int(input("digite a vida do mosntro: "))
D1 = int(input("digite um numero de 1 a 20: "))
D2 = int(input("digite um numero de 1 a 20: "))

d1 = int()


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    d1 = int(f)
NameError: name 'f' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 21:19:51) 
-- CODE:
from math import *
HPM = int(input("digite a vida do mosntro: "))
D1 = int(input("digite um numero de 1 a 20: "))
D2 = int(input("digite um numero de 1 a 20: "))

r = 5.D1
R = sqrt(r)

p = D2/3
P = pi**p

d = R+P
D = int(d)
Dano = D
print("o dano que o monstro levou foi: ",D)
-- ERROR:
File "XXXX", line 6
    r = 5.D1
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 21:19:54) 
-- CODE:
from math import *
HPM = int(input("digite a vida do mosntro: "))
D1 = int(input("digite um numero de 1 a 20: "))
D2 = int(input("digite um numero de 1 a 20: "))

r = 5.D1
R = sqrt(r)

p = D2/3
P = pi**p

d = R+P
D = int(d)
Dano = D
print("o dano que o monstro levou foi: ",D)
-- ERROR:
File "XXXX", line 6
    r = 5.D1
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 21:20:07) 
-- CODE:
from math import *
HPM = int(input("digite a vida do mosntro: "))
D1 = int(input("digite um numero de 1 a 20: "))
D2 = int(input("digite um numero de 1 a 20: "))

r = 5*D1
R = sqrt(r)

p = D2/3
P = pi**p

d = R+P
D = int(d)
Dano = D
print("o dano que o monstro levou foi: ",D)
-- OUTPUT:
o dano que o monstro levou foi:  12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 21:20:15) 
-- CODE:
from math import *
HPM = int(input("digite a vida do mosntro: "))
D1 = int(input("digite um numero de 1 a 20: "))
D2 = int(input("digite um numero de 1 a 20: "))

r = 5*D1
R = sqrt(r)

p = D2/3
P = pi**p

d = R+P
D = int(d)
Dano = D
print("o dano que o monstro levou foi: ",D)
-- EXECUTION TIME:
0.144974
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
o dano que o monstro levou foi:  12
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
o dano que o monstro levou foi:  15
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
o dano que o monstro levou foi:  3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 21:20:18) 
-- CODE:
from math import *
HPM = int(input("digite a vida do mosntro: "))
D1 = int(input("digite um numero de 1 a 20: "))
D2 = int(input("digite um numero de 1 a 20: "))

r = 5*D1
R = sqrt(r)

p = D2/3
P = pi**p

d = R+P
D = int(d)
Dano = D
print("o dano que o monstro levou foi: ",D)
-- OUTPUT:
o dano que o monstro levou foi:  12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 21:29:08) 
-- CODE:
from math import *
HPM = int(input("digite a vida do mosntro: "))
D1 = int(input("digite um numero de 1 a 20: "))
D2 = int(input("digite um numero de 1 a 20: "))

r = int(5*D1)
R = int(sqrt(r))

p = int(D2/3)
P = int(pi**p)

d = int(R+P)
D = int(d)
Dano = int(D)
print("o dano que o monstro levou foi: ",D)
-- EXECUTION TIME:
0.155054
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
o dano que o monstro levou foi:  11
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
o dano que o monstro levou foi:  14
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
o dano que o monstro levou foi:  3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 21:29:08) 
-- CODE:
from math import *
HPM = int(input("digite a vida do mosntro: "))
D1 = int(input("digite um numero de 1 a 20: "))
D2 = int(input("digite um numero de 1 a 20: "))

r = int(5*D1)
R = int(sqrt(r))

p = int(D2/3)
P = int(pi**p)

d = int(R+P)
D = int(d)
Dano = int(D) 
print("o dano que o monstro levou foi: ",D)
-- OUTPUT:
o dano que o monstro levou foi:  11
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 21:30:38) 
-- CODE:
from math import *
HPM = int(input("digite a vida do mosntro: "))
D1 = int(input("digite um numero de 1 a 20: "))
D2 = int(input("digite um numero de 1 a 20: "))

r = 5*D1
R = sqrt(r)

p = D2/3
P = pi**p

d = R+P
D = int(d)
Dano = D
print("o dano que o monstro levou foi: ",D)
-- OUTPUT:
o dano que o monstro levou foi:  12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 21:31:32) 
-- CODE:
from math import *
HPM = int(input("digite a vida do mosntro: "))
D1 = int(input("digite um numero de 1 a 20: "))
D2 = int(input("digite um numero de 1 a 20: "))

r = 5*D1
R = sqrt(r)

p = D2/3
P = pi**p

d = R+P
D = int(d)
Dano = D
Vida = HPM - D
print("o dano que o monstro levou foi: ",D)
print("a vida restante do monstro e: ",Vida)


-- OUTPUT:
o dano que o monstro levou foi:  12
a vida restante do monstro e:  188
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 21:31:36) 
-- CODE:
from math import *
HPM = int(input("digite a vida do mosntro: "))
D1 = int(input("digite um numero de 1 a 20: "))
D2 = int(input("digite um numero de 1 a 20: "))

r = 5*D1
R = sqrt(r)

p = D2/3
P = pi**p

d = R+P
D = int(d)
Dano = D
Vida = HPM - D
print("o dano que o monstro levou foi: ",D)
print("a vida restante do monstro e: ",Vida)


-- EXECUTION TIME:
0.190715
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
o dano que o monstro levou foi:  12
a vida restante do monstro e:  188
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
o dano que o monstro levou foi:  15
a vida restante do monstro e:  285
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
o dano que o monstro levou foi:  3
a vida restante do monstro e:  497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 21:31:39) 
-- CODE:
from math import *
HPM = int(input("digite a vida do mosntro: "))
D1 = int(input("digite um numero de 1 a 20: "))
D2 = int(input("digite um numero de 1 a 20: "))

r = 5*D1
R = sqrt(r)

p = D2/3
P = pi**p

d = R+P
D = int(d)
Dano = D
Vida = HPM - D
print("o dano que o monstro levou foi: ",D)
print("a vida restante do monstro e: ",Vida)


-- EXECUTION TIME:
0.152815
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
o dano que o monstro levou foi:  12
a vida restante do monstro e:  188
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
o dano que o monstro levou foi:  15
a vida restante do monstro e:  285
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
o dano que o monstro levou foi:  3
a vida restante do monstro e:  497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 21:31:44) 
-- CODE:
from math import *
HPM = int(input("digite a vida do mosntro: "))
D1 = int(input("digite um numero de 1 a 20: "))
D2 = int(input("digite um numero de 1 a 20: "))

r = 5*D1
R = sqrt(r)

p = D2/3
P = pi**p

d = R+P
D = int(d)
Vida = HPM - D
print("a vida restante do monstro e: ",Vida)


-- EXECUTION TIME:
0.17927
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
a vida restante do monstro e:  188
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
a vida restante do monstro e:  285
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
a vida restante do monstro e:  497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 21:31:45) 
-- CODE:
from math import *
HPM = int(input("digite a vida do mosntro: "))
D1 = int(input("digite um numero de 1 a 20: "))
D2 = int(input("digite um numero de 1 a 20: "))

r = 5*D1
R = sqrt(r)

p = D2/3
P = pi**p

d = R+P
D = int(d)
Vida = HPM - D
print("a vida restante do monstro e: ",Vida)


-- OUTPUT:
a vida restante do monstro e:  188
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 21:34:03) 
-- CODE:
from math import *
HPM = int(input("digite a vida do mosntro: "))
D1 = int(input("digite um numero de 1 a 20: "))
D2 = int(input("digite um numero de 1 a 20: "))

r = 5*D1
R = sqrt(r)

p = D2/3
P = pi**p

d = int(R+P)
Vida = HPM - d
print("a vida restante do monstro e: ",Vida)


-- OUTPUT:
a vida restante do monstro e:  188
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 21:34:05) 
-- CODE:
from math import *
HPM = int(input("digite a vida do mosntro: "))
D1 = int(input("digite um numero de 1 a 20: "))
D2 = int(input("digite um numero de 1 a 20: "))

r = 5*D1
R = sqrt(r)

p = D2/3
P = pi**p

d = int(R+P)
Vida = HPM - d
print("a vida restante do monstro e: ",Vida)


-- EXECUTION TIME:
0.153625
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
a vida restante do monstro e:  188
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
a vida restante do monstro e:  285
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
a vida restante do monstro e:  497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 21:34:06) 
-- CODE:
from math import *
HPM = int(input("digite a vida do mosntro: "))
D1 = int(input("digite um numero de 1 a 20: "))
D2 = int(input("digite um numero de 1 a 20: "))

r = 5*D1
R = sqrt(r)

p = D2/3
P = pi**p

d = int(R+P)
Vida = HPM - d
print("a vida restante do monstro e: ",Vida)


-- EXECUTION TIME:
0.1448
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
a vida restante do monstro e:  188
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
a vida restante do monstro e:  285
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
a vida restante do monstro e:  497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 21:34:07) 
-- CODE:
from math import *
HPM = int(input("digite a vida do mosntro: "))
D1 = int(input("digite um numero de 1 a 20: "))
D2 = int(input("digite um numero de 1 a 20: "))

r = 5*D1
R = sqrt(r)

p = D2/3
P = pi**p

d = int(R+P)
Vida = HPM - d
print("a vida restante do monstro e: ",Vida)


-- OUTPUT:
a vida restante do monstro e:  188
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 21:36:46) 
-- CODE:
from math import *
HPM = int(input("digite a vida do mosntro: "))
D1 = int(input("digite um numero de 1 a 20: "))
D2 = int(input("digite um numero de 1 a 20: "))

d = int(sqrt(5*D1)+pi**(D2/3))

Vida = HPM - d
print("a vida restante do monstro e: ",Vida)


-- OUTPUT:
a vida restante do monstro e:  188
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 21:36:51) 
-- CODE:
from math import *
HPM = int(input("digite a vida do mosntro: "))
D1 = int(input("digite um numero de 1 a 20: "))
D2 = int(input("digite um numero de 1 a 20: "))

d = int(sqrt(5*D1)+pi**(D2/3))

Vida = HPM - d
print("a vida restante do monstro e: ",Vida)


-- EXECUTION TIME:
0.161547
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
a vida restante do monstro e:  188
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
a vida restante do monstro e:  285
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
a vida restante do monstro e:  497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 21:38:24) 
-- CODE:
from math import *
HPM = int(input("digite a vida do mosntro: "))
D1 = int(input("digite um numero de 1 a 20: "))
D2 = int(input("digite um numero de 1 a 20: "))

d = int(sqrt(5*D1)+pi**(D2/3))

Vida = HPM - d
print("a vida restante do monstro e: ",Vida)


-- OUTPUT:
a vida restante do monstro e:  188
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 21:39:49) 
-- CODE:
from math import *
HPM = int(input("digite a vida do mosntro: "))
D1 = int(input("digite um numero de 1 a 20: "))
D2 = int(input("digite um numero de 1 a 20: "))

d = int(sqrt(5*D1)+pi**(D2/3))

Vida = HPM - d
print("a vida restante do monstro e: ",Vida)


-- EXECUTION TIME:
0.133276
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
a vida restante do monstro e:  188
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
a vida restante do monstro e:  285
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
a vida restante do monstro e:  497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 21:41:24) 
-- CODE:
from math import *
HPM = int(input("digite a vida do monstro: "))
D1 = int(input("digite um numero de 1 a 20: "))
D2 = int(input("digite um numero de 1 a 20: "))

d = int(sqrt(5*D1)+pi**(D2/3))

Vida = HPM - d
print("a vida restante do monstro e: ",Vida)
-- OUTPUT:
a vida restante do monstro e:  188
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 21:41:30) 
-- CODE:
from math import *
HPM = int(input("digite a vida do monstro: "))
D1 = int(input("digite um numero de 1 a 20: "))
D2 = int(input("digite um numero de 1 a 20: "))

d = int(sqrt(5*D1)+pi**(D2/3))

Vida = HPM - d
print("a vida restante do monstro e: ",Vida)
-- EXECUTION TIME:
0.19464
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
a vida restante do monstro e:  188
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
a vida restante do monstro e:  285
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
a vida restante do monstro e:  497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 21:44:01) 
-- CODE:
from math import *
HPM = int(input("digite a vida do monstro: "))
D1 = int(input("digite um numero de 1 a 20: "))
D2 = int(input("digite um numero de 1 a 20: "))

d = int(sqrt((5*D1))+pi**(D2/3))

Vida = HPM - d
print("a vida restante do monstro e: ",Vida)
-- OUTPUT:
a vida restante do monstro e:  188
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 21:44:06) 
-- CODE:
from math import *
HPM = int(input("digite a vida do monstro: "))
D1 = int(input("digite um numero de 1 a 20: "))
D2 = int(input("digite um numero de 1 a 20: "))

d = int(sqrt((5*D1))+pi**(D2/3))

Vida = HPM - d
print("a vida restante do monstro e: ",Vida)
-- EXECUTION TIME:
0.197742
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
a vida restante do monstro e:  188
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
a vida restante do monstro e:  285
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
a vida restante do monstro e:  497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 21:44:25) 
-- CODE:
from math import *
HPM = int(input("digite a vida do monstro: "))
D1 = int(input("digite um numero de 1 a 20: "))
D2 = int(input("digite um numero de 1 a 20: "))

d = int((sqrt(5*D1))+pi**(D2/3))

Vida = HPM - d
print("a vida restante do monstro e: ",Vida)
-- EXECUTION TIME:
0.211843
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
a vida restante do monstro e:  188
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
a vida restante do monstro e:  285
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
a vida restante do monstro e:  497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 21:44:26) 
-- CODE:
from math import *
HPM = int(input("digite a vida do monstro: "))
D1 = int(input("digite um numero de 1 a 20: "))
D2 = int(input("digite um numero de 1 a 20: "))

d = int((sqrt(5*D1))+pi**(D2/3))

Vida = HPM - d
print("a vida restante do monstro e: ",Vida)
-- EXECUTION TIME:
0.127993
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
a vida restante do monstro e:  188
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
a vida restante do monstro e:  285
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
a vida restante do monstro e:  497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 21:44:26) 
-- CODE:
from math import *
HPM = int(input("digite a vida do monstro: "))
D1 = int(input("digite um numero de 1 a 20: "))
D2 = int(input("digite um numero de 1 a 20: "))

d = int((sqrt(5*D1))+pi**(D2/3))

Vida = HPM - d
print("a vida restante do monstro e: ",Vida)
-- OUTPUT:
a vida restante do monstro e:  188
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 21:46:37) 
-- CODE:
from math import *
HPM = int(input("digite a vida do monstro: "))
D1 = int(input("digite um numero de 1 a 20: "))
D2 = int(input("digite um numero de 1 a 20: "))

d = int((sqrt(5*D1))+pi**(D2/3))

Vida = HPM - d
print("a vida restante do monstro e: ",Vida)
-- OUTPUT:
a vida restante do monstro e:  188
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 21:47:45) 
-- CODE:
from math import *
HPM = int(input("digite a vida do monstro: "))
D1 = int(input("digite um numero de 1 a 20: "))
D2 = int(input("digite um numero de 1 a 20: "))

d = int((sqrt(5*D1))+pi**(D2/3))

Vida = HPM - d
print(Vida)
-- EXECUTION TIME:
0.182228
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
188
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
285
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
