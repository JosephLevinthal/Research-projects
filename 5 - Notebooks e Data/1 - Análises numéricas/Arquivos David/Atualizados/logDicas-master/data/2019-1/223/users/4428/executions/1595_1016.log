== TEST (2019-03-28 00:08:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Lado a: "))
b = float(input("Lado b: "))
c = float(input("Lado c: "))



-- OUTPUT:
50.44
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 00:09:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Lado a: "))
b = float(input("Lado b: "))
c = float(input("Lado c: "))

s = (a+b+c)/2
print(s)

-- OUTPUT:
21.85
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 00:10:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Lado a: "))
b = float(input("Lado b: "))
c = float(input("Lado c: "))

s = (a+b+c)/2
print("Medida do semiperimetro: ", s)

-- OUTPUT:
Medida do semiperimetro:  21.85
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 00:15:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Lado a: "))
b = float(input("Lado b: "))
c = float(input("Lado c: "))

s = (a+b+c)/2
print("Medida do semiperimetro: ", s)

from math import*
sqrt(area)
area = s(s-a)(s-b)(s-c)


print(round(area, 5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    sqrt(area)
NameError: name 'area' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 00:16:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Lado a: "))
b = float(input("Lado b: "))
c = float(input("Lado c: "))

s = (a+b+c)/2
print("Medida do semiperimetro: ", s)

area = s(s-a)(s-b)(s-c)
from math import*
sqrt(area)


print(round(area, 5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    area = s(s-a)(s-b)(s-c)
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 00:18:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Lado a: "))
b = float(input("Lado b: "))
c = float(input("Lado c: "))

s = (a+b+c)/2
print("Medida do semiperimetro: ", s)

area = s*(s-a)*(s-b)*(s-c)
from math import*
sqrt(area)


print(round(area, 5))
-- OUTPUT:
Medida do semiperimetro:  21.85
4819.09124
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 00:18:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Lado a: "))
b = float(input("Lado b: "))
c = float(input("Lado c: "))

s = (a+b+c)/2
print("Medida do semiperimetro: ", s)

area = s*(s-a)*(s-b)*(s-c)
from math import*
sqrt(area)


print(round(area, 5))
-- OUTPUT:
Medida do semiperimetro:  21.85
4819.09124
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 00:19:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Lado a: "))
b = float(input("Lado b: "))
c = float(input("Lado c: "))

s = (a+b+c)/2
print("Medida do semiperimetro: ", s)

area = s*(s-a)*(s-b)*(s-c)
from math import*
sqrt(area)


print(round(sqrt, 5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 17, in <module>
    print(round(sqrt, 5))
TypeError: type builtin_function_or_method doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 00:19:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Lado a: "))
b = float(input("Lado b: "))
c = float(input("Lado c: "))

s = (a+b+c)/2
print("Medida do semiperimetro: ", s)

area = s*(s-a)*(s-b)*(s-c)
from math import*
sqrt(area)


print(round(sqrt(area), 5))
-- OUTPUT:
Medida do semiperimetro:  21.85
69.41967
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 00:20:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Lado a: "))
b = float(input("Lado b: "))
c = float(input("Lado c: "))

s = (a+b+c)/2
print("Medida do semiperimetro: ", s)

area = s*(s-a)*(s-b)*(s-c)
from math import*
sqrt(area)


print(round(sqrt(area), 5))
-- EXECUTION TIME:
0.129829
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
Medida do semiperimetro:  21.85
69.41967
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
Medida do semiperimetro:  60.0
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
Medida do semiperimetro:  65.5
709.16654
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 00:20:27) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Lado a: "))
b = float(input("Lado b: "))
c = float(input("Lado c: "))

s = (a+b+c)/2
print("Medida do semiperimetro: ", s)

area = s*(s-a)*(s-b)*(s-c)
from math import*
sqrt(area)


print(round(sqrt(area), 5))
-- OUTPUT:
Medida do semiperimetro:  21.85
69.41967
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 00:21:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = int(input("Lado a: "))
b = int(input("Lado b: "))
c = int(input("Lado c: "))

s = (a+b+c)/2
print("Medida do semiperimetro: ", s)

area = s*(s-a)*(s-b)*(s-c)
from math import*
sqrt(area)


print(round(sqrt(area), 5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 00:21:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = int(input("Lado a: "))
b = int(input("Lado b: "))
c = int(input("Lado c: "))

s = (a+b+c)/2
print("Medida do semiperimetro: ", s)

area = s*(s-a)*(s-b)*(s-c)
from math import*
sqrt(area)


print(round(sqrt(area), 5))
-- EXECUTION TIME:
0.15979
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1595/1016/main.py", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 00:25:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Lado a: "))
b = float(input("Lado b: "))
c = float(input("Lado c: "))

s = (a+b+c)/2

area = s*(s-a)*(s-b)*(s-c)
from math import*
sqrt(area)


print(round(sqrt(area), 5))
-- OUTPUT:
69.41967
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 00:25:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Lado a: "))
b = float(input("Lado b: "))
c = float(input("Lado c: "))

s = (a+b+c)/2

area = s*(s-a)*(s-b)*(s-c)
from math import*
sqrt(area)


print(round(sqrt(area), 5))
-- OUTPUT:
69.41967
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 00:25:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Lado a: "))
b = float(input("Lado b: "))
c = float(input("Lado c: "))

s = (a+b+c)/2

area = s*(s-a)*(s-b)*(s-c)
from math import*
sqrt(area)


print(round(sqrt(area), 5))
-- EXECUTION TIME:
0.220299
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.41967
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709.16654
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
