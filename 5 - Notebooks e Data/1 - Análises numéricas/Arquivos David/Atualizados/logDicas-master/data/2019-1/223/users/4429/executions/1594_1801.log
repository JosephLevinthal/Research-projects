== TEST (2019-04-04 07:52:15) 
-- CODE:
var=(input(Abra+"nome_do_objeto: ")
var2=int(input("qtd"))
print(var)
print(var*var2)
-- ERROR:
File "XXXX", line 2
    var2=int(input())
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 07:52:28) 
-- CODE:
var=(input(Abra+"nome_do_objeto: ")
var2=int(input("qtd: "))
print(var)
print(var*var2)
-- ERROR:
File "XXXX", line 2
    var2=int(input())
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 07:53:16) 
-- CODE:
var=(input("nome_do_objeto: "))
var2=int(input("qtd: "))
print(var)
print(var*var2)
-- OUTPUT:
livro
livrolivrolivrolivrolivrolivrolivrolivro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 07:54:13) 
-- CODE:
var=(input(str(Abra+"nome_do_objeto: "))
var2=int(input("qtd: "))
print(var)
print(var*var2)
-- ERROR:
File "XXXX", line 2
    var2=int(input())
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 07:54:52) 
-- CODE:
var=(str(input(Abra+"nome_do_objeto: "))
var2=int(input("qtd: "))
print(var)
print(var*var2)
-- ERROR:
File "XXXX", line 2
    var2=int(input())
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 07:56:13) 
-- CODE:
var=(str(input("nome_do_objeto: "))
var2=(str(Abra))
var3=int(input("qtd: ")
print(var)
print((var2+var)*var2)
-- ERROR:
File "XXXX", line 2
    var2=(str(Abra))
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 07:57:03) 
-- CODE:
var=(str(input("nome_do_objeto: "))
var2=("abra ")
var3=int(input("qtd: ")
print(var)
print((var2+var)*var2)
-- ERROR:
File "XXXX", line 2
    var2=("abra ")
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 07:57:23) 
-- CODE:
var=(str(input("nome_do_objeto: "))
var2=((str)"abra ")
var3=int(input("qtd: ")
print(var)
print((var2+var)*var2)
-- ERROR:
File "XXXX", line 2
    var2=((str)"abra ")
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 07:57:50) 
-- CODE:
var=(str(input("nome_do_objeto: "))
var2=((str)"abra")
var3=int(input("qtd: ")
print(var)
print((var2+var)*var2)
-- ERROR:
File "XXXX", line 2
    var2=((str)"abra")
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 07:58:04) 
-- CODE:
var=(input("nome_do_objeto: "))
var2=((str)"abra")
var3=int(input("qtd: ")
print(var)
print((var2+var)*var2)
-- ERROR:
File "XXXX", line 2
    var2=((str)"abra")
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 07:58:16) 
-- CODE:
var=(input("nome_do_objeto: "))
var2=("abra")
var3=int(input("qtd: ")
print(var)
print((var2+var)*var2)
-- ERROR:
File "XXXX", line 4
    print(var)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 07:58:55) 
-- CODE:
var=(input(str("nome_do_objeto: ")))
var2=("abra")
var3=int(input("qtd: ")
print(var)
print((var2+var)*var2)
-- ERROR:
File "XXXX", line 4
    print(var)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 08:00:05) 
-- CODE:
var=(input(str("nome_do_objeto: "))
var2=((str)"abra")
var3=int(input("qtd: ")
print(var)
print((var2+var)*var2)
-- ERROR:
File "XXXX", line 2
    var2=((str)"abra")
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 08:00:25) 
-- CODE:
var=(input(str("nome_do_objeto: "))
var2=((str"abra")
var3=int(input("qtd: ")
print(var)
print((var2+var)*var2)
-- ERROR:
File "XXXX", line 2
    var2=((str"abra")
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 08:00:43) 
-- CODE:
var=(input(str("nome_do_objeto: "))
var2=((str("abra"))
var3=int(input("qtd: ")
print(var)
print((var2+var)*var2)
-- ERROR:
File "XXXX", line 2
    var2=((str("abra"))
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 08:00:56) 
-- CODE:
var=(input(str("nome_do_objeto: ")))
var2=((str("abra"))
var3=int(input("qtd: "))
print(var)
print((var2+var)*var2)
-- ERROR:
File "XXXX", line 3
    var3=int(input())
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 08:01:28) 
-- CODE:
var=(input(str("nome_do_objeto: ")))
var2=((str("abra"))
var3=input(int("qtd: "))
print(var)
print((var2+var)*var2)
-- ERROR:
File "XXXX", line 3
    var3=input(int("qtd: "))
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 08:01:55) 
-- CODE:
var=(input(str("nome_do_objeto: ")))
var2=((str("abra")))
var3=int(input("qtd: "))
print(var)
print((var2+var)*var2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print((var2+var)*var2)
TypeError: can't multiply sequence by non-int of type 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 08:03:20) 
-- CODE:
var=(input(str("nome_do_objeto: ")))
var2=((str("abra")))
var3=int(input("qtd: "))
print(var)
print((var2+var)*var2"")
-- ERROR:
File "XXXX", line 5
    print((var2+var)*var2"")
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 08:03:44) 
-- CODE:
var=(input(str("nome_do_objeto: ")))
var2=((str("abra" """)))
var3=int(input("qtd: "))
print(var)
print((var2+var)*var2)
-- ERROR:
File "XXXX", line 6
    print((var2+var)*var2)
                         ^
SyntaxError: EOF while scanning triple-quoted string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 08:04:09) 
-- CODE:
var=(input(str("nome_do_objeto: ")))
var2=((str("abra" " ")))
var3=int(input("qtd: "))
print(var)
print((var2+var)*var2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print((var2+var)*var2)
TypeError: can't multiply sequence by non-int of type 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 08:04:43) 
-- CODE:
var=(input(str("nome_do_objeto: ")))
var2=((str("abra" " ")))
var3=int(input("qtd: "))
print(var)
print(str(int(var2+var)*var2)
-- ERROR:
File "XXXX", line 6
    
                                 ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 08:05:40) 
-- CODE:
var=(input(str("nome_do_objeto: ")))
var2=((str("abra" " ")))
var3=int(input("qtd: "))
print(var)
print((var2+var)*var3)
-- OUTPUT:
nome_do_objeto: livro
abra livroabra livroabra livroabra livroabra livroabra livroabra livroabra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 08:05:59) 
-- CODE:
var=(input(str("nome_do_objeto: ")))
var2=((str("abra" " ")))
var3=int(input("qtd: "))
print(var)
print((var2+var)*var3)
-- OUTPUT:
nome_do_objeto: livro
abra livroabra livroabra livroabra livroabra livroabra livroabra livroabra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 08:06:45) 
-- CODE:
var=(input(str("nome_do_objeto: " "")))
var2=((str("abra" " ")))
var3=int(input("qtd: "))
print(var)
print((var2+var)*var3)
-- OUTPUT:
nome_do_objeto: livro
abra livroabra livroabra livroabra livroabra livroabra livroabra livroabra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 08:07:38) 
-- CODE:
var=(input(str("nome_do_objeto:" " ")))
var2=((str("abra" " ")))
var3=int(input("qtd: "))
print(var)
print((var2+var)*var3)
-- OUTPUT:
nome_do_objeto: livro
abra livroabra livroabra livroabra livroabra livroabra livroabra livroabra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 08:08:20) 
-- CODE:
var=(input(str("nome_do_objeto: ")))
var2=((str(" " "abra" " ")))
var3=int(input("qtd: "))
print(var)
print((var2+var)*var3)
-- OUTPUT:
nome_do_objeto: livro
 abra livro abra livro abra livro abra livro abra livro abra livro abra livro abra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 08:08:39) 
-- CODE:
var=(input(str("nome_do_objeto: ")))
var2=((str(" " "Abra" " ")))
var3=int(input("qtd: "))
print(var)
print((var2+var)*var3)
-- OUTPUT:
nome_do_objeto: livro
 Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-04 08:08:52) 
-- CODE:
var=(input(str("nome_do_objeto: ")))
var2=((str(" " "Abra" " ")))
var3=int(input("qtd: "))
print(var)
print((var2+var)*var3)
-- EXECUTION TIME:
0.168661
-- TEST CASE 1:
---- input:
livro
8
---- correct output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
---- user output:
nome_do_objeto: livro
 Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
-- TEST CASE 2:
---- input:
carro
2
---- correct output:
Abra carro Abra carro
---- user output:
nome_do_objeto: carro
 Abra carro Abra carro
-- TEST CASE 3:
---- input:
caixa
1
---- correct output:
Abra caixa
---- user output:
nome_do_objeto: caixa
 Abra caixa
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 08:10:58) 
-- CODE:
var1=((str(" " "Abra" " ")))
var2=(input(str("nome_do_objeto: ")))
var3=int(input("qtd: "))
print(var)
print((var2+var)*var3)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(var)
NameError: name 'var' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 08:11:25) 
-- CODE:
var1=((str(" " "Abra" " ")))
var2=(input(str("nome_do_objeto: ")))
var3=int(input("qtd: "))
print(var1)
print((var2+var1)*var3)
-- OUTPUT:
nome_do_objeto:  Abra 
livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 08:12:02) 
-- CODE:
var1=((str(" " "Abra" " ")))
var2=(input(str("nome_do_objeto: ")))
var3=int(input("qtd: "))
print(var1)
print((var1+var2)*var3)
-- OUTPUT:
nome_do_objeto:  Abra 
 Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 08:12:53) 
-- CODE:

var1=(input(str("nome_do_objeto: ")))
var2=((str(" " "Abra" " ")))
var3=int(input("qtd: "))
print(var1)
print((var2+var1)*var3)
-- OUTPUT:
nome_do_objeto: livro
 Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 08:13:26) 
-- CODE:

var1=(input(str("nome_do_objeto: ")))
var2=((str(" " "Abra" " ")))
var3=int(input("qtd: "))

print((var2+var1)*var3)
-- OUTPUT:
nome_do_objeto:  Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-04 08:13:41) 
-- CODE:

var1=(input(str("nome_do_objeto: ")))
var2=((str(" " "Abra" " ")))
var3=int(input("qtd: "))

print((var2+var1)*var3)
-- EXECUTION TIME:
0.233095
-- TEST CASE 1:
---- input:
livro
8
---- correct output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
---- user output:
nome_do_objeto:  Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
-- TEST CASE 2:
---- input:
carro
2
---- correct output:
Abra carro Abra carro
---- user output:
nome_do_objeto:  Abra carro Abra carro
-- TEST CASE 3:
---- input:
caixa
1
---- correct output:
Abra caixa
---- user output:
nome_do_objeto:  Abra caixa
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 08:14:33) 
-- CODE:
var1=(input(str("nome_do_objeto: ")))
var2=int(input("qtd: "))
var3=((str(" " "Abra" " ")))


print((var3+var1)*var2)

-- OUTPUT:
nome_do_objeto:  Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-04 08:14:56) 
-- CODE:
var1=(input(str("nome_do_objeto: ")))
var2=int(input("qtd: "))
var3=((str(" " "Abra" " ")))


print((var3+var1)*var2)

-- EXECUTION TIME:
0.167351
-- TEST CASE 1:
---- input:
livro
8
---- correct output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
---- user output:
nome_do_objeto:  Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
-- TEST CASE 2:
---- input:
carro
2
---- correct output:
Abra carro Abra carro
---- user output:
nome_do_objeto:  Abra carro Abra carro
-- TEST CASE 3:
---- input:
caixa
1
---- correct output:
Abra caixa
---- user output:
nome_do_objeto:  Abra caixa
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 08:15:12) 
-- CODE:
var1=(input(str("")))
var2=int(input("qtd: "))
var3=((str(" " "Abra" " ")))


print((var3+var1)*var2)

-- OUTPUT:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 08:15:39) 
-- CODE:
var1=(input(str("")))
var2=int(input(""))
var3=((str(" " "Abra" " ")))


print((var3+var1)*var2)

-- OUTPUT:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-04 08:15:51) 
-- CODE:
var1=(input(str("")))
var2=int(input(""))
var3=((str(" " "Abra" " ")))


print((var3+var1)*var2)

-- EXECUTION TIME:
0.168836
-- TEST CASE 1:
---- input:
livro
8
---- correct output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
---- user output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
-- TEST CASE 2:
---- input:
carro
2
---- correct output:
Abra carro Abra carro
---- user output:
Abra carro Abra carro
-- TEST CASE 3:
---- input:
caixa
1
---- correct output:
Abra caixa
---- user output:
Abra caixa
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-04 08:16:08) 
-- CODE:
var1=(input(str("")))
var2=int(input(""))
var3=((str(" " "Abra" " ")))


print((var3+var1)*var2)

-- EXECUTION TIME:
0.121877
-- TEST CASE 1:
---- input:
livro
8
---- correct output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
---- user output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
-- TEST CASE 2:
---- input:
carro
2
---- correct output:
Abra carro Abra carro
---- user output:
Abra carro Abra carro
-- TEST CASE 3:
---- input:
caixa
1
---- correct output:
Abra caixa
---- user output:
Abra caixa
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
