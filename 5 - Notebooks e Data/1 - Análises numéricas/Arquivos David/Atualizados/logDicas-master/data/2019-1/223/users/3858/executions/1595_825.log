== TEST (2019-03-28 22:21:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r = float(input())
area = pi*(r*^2)
volume = 4/3 * pi(r^3)
print(round(area,3), round(volume,3))

-- ERROR:
File "XXXX", line 5
    area = pi*(r*^2)
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 22:21:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r = float(input())
area = pi*(r^2)
volume = 4/3 * pi(r^3)
print(round(area,3), round(volume,3))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    area = pi*(r^2)
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 22:21:55) 
-- CODE:
import * from math
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r = float(input())
area = pi*(r^2)
volume = 4/3 * pi(r^3)
print(round(area,3), round(volume,3))

-- ERROR:
File "XXXX", line 1
    import * from math
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 22:23:16) 
-- CODE:
import from math
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r = float(input())
area = pi*(r^2)
volume = 4/3 * pi(r^3)
print(round(area,3), round(volume,3))

-- ERROR:
File "XXXX", line 1
    import from math
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 22:23:37) 
-- CODE:
import * from math
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r = float(input())
area = pi*(r^2)
volume = 4/3 * pi(r^3)
print(round(area,3), round(volume,3))

-- ERROR:
File "XXXX", line 1
    import * from math
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 22:23:52) 
-- CODE:
import * from math
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r = float(input())
area = pi*(r^2)
volume = 4/3 * pi(r^3)
print(round(area,3), round(volume,3))

-- ERROR:
File "XXXX", line 1
    import * from math
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 22:24:07) 
-- CODE:
import math
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r = float(input())
area = pi*(r^2)
volume = 4/3 * pi(r^3)
print(round(area,3), round(volume,3))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    area = pi*(r^2)
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 22:24:58) 
-- CODE:
from math import *
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r = float(input())
area = pi*(r^2)
volume = 4/3 * pi(r^3)
print(round(area,3), round(volume,3))

-- EXECUTION TIME:
0.142431
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1595/825/main.py", line 6, in <module>
    area = pi*(r^2)
TypeError: unsupported operand type(s) for ^: 'float' and 'int'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 22:25:02) 
-- CODE:
from math import *
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r = float(input())
area = pi*(r^2)
volume = 4/3 * pi(r^3)
print(round(area,3), round(volume,3))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    area = pi*(r^2)
TypeError: unsupported operand type(s) for ^: 'float' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 22:25:27) 
-- CODE:
from math import *
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r = float(input())
area = pi*(r*r)
volume = 4/3 * pi(r*r*r)
print(round(area,3), round(volume,3))

-- EXECUTION TIME:
0.175659
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1595/825/main.py", line 7, in <module>
    volume = 4/3 * pi(r*r*r)
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 22:25:32) 
-- CODE:
from math import *
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r = float(input())
area = pi*(r*r)
volume = 4/3 * pi(r*r*r)
print(round(area,3), round(volume,3))

-- EXECUTION TIME:
0.242738
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1595/825/main.py", line 7, in <module>
    volume = 4/3 * pi(r*r*r)
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 22:25:34) 
-- CODE:
from math import *
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r = float(input())
area = pi*(r*r)
volume = 4/3 * pi(r*r*r)
print(round(area,3), round(volume,3))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    volume = 4/3 * pi(r*r*r)
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 22:26:02) 
-- CODE:
from math import *
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r = float(input())
area = pi*(r*r)
volume = float(4/3 * pi(r*r*r))
print(round(area,3), round(volume,3))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    volume = float(4/3 * pi(r*r*r))
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 22:26:53) 
-- CODE:
from math import *
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r = float(input())
area = pi*(r*r)
volume = 4/3 * pi*(r*r*r)
print(round(area,3), round(volume,3))

-- OUTPUT:
63.617 381.704
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 22:27:07) 
-- CODE:
from math import *
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r = float(input())
area = pi*(r*r)
volume = 4/3 * pi*(r*r*r)
print(round(area,3), round(volume,3))

-- EXECUTION TIME:
0.258472
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.617 381.704
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.388 7871.076
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
