== TEST (2019-04-11 16:18:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = int(input("Digite um numero: "))

if num % 2 == 0:
	mensagem = "par"
	print(mensagem)
	
else
	mensagem1 = "impar"
	print(mensagem1)

print()
-- ERROR:
File "XXXX", line 11
    else
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:19:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = int(input("Digite um numero: "))

if num % 2 == 0:
	mensagem = "par"
	print(mensagem)
	
else:
	mensagem1 = "impar"
	print(mensagem1)

print()
-- OUTPUT:
impar
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:19:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = int(input("Digite um numero: "))

if num % 2 == 0:
	mensagem = "par"
	print(mensagem)
	
else:
	mensagem1 = "impar"
	print(mensagem1)

print()
-- OUTPUT:
impar
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 16:19:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = int(input("Digite um numero: "))

if num % 2 == 0:
	mensagem = "par"
	print(mensagem)
	
else:
	mensagem1 = "impar"
	print(mensagem1)

print()
-- EXECUTION TIME:
0.222394
-- TEST CASE 1:
---- input:
55
---- correct output:
impar
---- user output:
impar
-- TEST CASE 3:
---- input:
842
---- correct output:
par
---- user output:
par
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:21:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = int(input("Digite um numero: "))

if num % 2 == 0:
	mensagem = "par"
	print(mensagem)
	
else:
	mensagem1 = "impar"
	print(mensagem1)

print("qualquercoisa")
-- OUTPUT:
impar
qualquercoisa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:22:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = int(input("Digite um numero: "))

if num % 2 == 0:
	mensagem = "par"
	print(mensagem)
	
else:
	mensagem1 = "impar"
	print(mensagem1)

print(num)
-- OUTPUT:
impar
55
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 16:22:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = int(input("Digite um numero: "))

if num % 2 == 0:
	mensagem = "par"
	print(mensagem)
	
else:
	mensagem1 = "impar"
	print(mensagem1)

print(num)
-- EXECUTION TIME:
0.152753
-- TEST CASE 1:
---- input:
55
---- correct output:
impar
---- user output:
impar
55
-- TEST CASE 3:
---- input:
842
---- correct output:
par
---- user output:
par
842
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 16:22:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = int(input("Digite um numero: "))

if num % 2 == 0:
	mensagem = "par"
	print(mensagem)
	
else:
	mensagem1 = "impar"
	print(mensagem1)
  
-- EXECUTION TIME:
0.176069
-- TEST CASE 1:
---- input:
55
---- correct output:
impar
---- user output:
impar
-- TEST CASE 3:
---- input:
842
---- correct output:
par
---- user output:
par
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
