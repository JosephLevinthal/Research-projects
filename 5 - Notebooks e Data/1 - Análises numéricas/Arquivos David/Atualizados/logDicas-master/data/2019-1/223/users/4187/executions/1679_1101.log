== TEST (2019-04-17 00:47:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = int(input("consumo de energia(em KWh):"))
tipo = input("tipo de instalacao: (R/I/C/)")

if(tipo != "R" and tipo != "I" and tipo != "C"):
	print("Entrada:",con,"kwh",e,"tipo",tipo)
	print("Dados invalidos")
	
	
-- OUTPUT:
Entrada: lula
Casa: Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-17 00:48:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = int(input("consumo de energia(em KWh):"))
tipo = input("tipo de instalacao: (R/I/C/)")

if(tipo != "R" and tipo != "I" and tipo != "C"):
	print("Entrada:",con,"kwh e","tipo",tipo)
	print("Dados invalidos")
	
	
-- OUTPUT:
Entrada: lula
Casa: Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-17 01:16:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = int(input("consumo de energia(em KWh):"))
tipo = input("tipo de instalacao: (R/I/C/)")

if(tipo != "R" and tipo != "I" and tipo != "C"):
	print("Entrada:",con,"kwh e","tipo",tipo)
	print("Dados invalidos")
elif(tipo == "R" and con <= 500):
	preco = 0.44
	else(con > 500):
		preco = 0.65
total = con * preco
print(total)
		
	
	
-- ERROR:
File "XXXX", line 12
    else(con > 500):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-17 01:16:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = int(input("consumo de energia(em KWh):"))
tipo = input("tipo de instalacao: (R/I/C/)")

if(tipo != "R" and tipo != "I" and tipo != "C"):
	print("Entrada:",con,"kwh e","tipo",tipo)
	print("Dados invalidos")
elif(tipo == "R" and con <= 500):
	preco = 0.44
	elif(con > 500):
		preco = 0.65
total = con * preco
print(total)
		
	
	
-- ERROR:
File "XXXX", line 12
    elif(con > 500):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-17 01:17:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = int(input("consumo de energia(em KWh):"))
tipo = input("tipo de instalacao: (R/I/C/)")

if(tipo != "R" and tipo != "I" and tipo != "C"):
	print("Entrada:",con,"kwh e","tipo",tipo)
	print("Dados invalidos")
elif(tipo == "R" and con <= 500):
	preco = 0.44
elif(tipo == "R" and con > 500):
		preco = 0.65
total = con * preco
print(total)
		
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    total = con * preco
NameError: name 'preco' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-17 01:20:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = int(input("consumo de energia(em KWh):"))
tipo = input("tipo de instalacao: (R/I/C/)")

if(tipo != "R".upper() and tipo != "I" and tipo != "C"):
	print("Entrada:",con,"kwh e","tipo",tipo)
	print("Dados invalidos")
elif(tipo == "R" and con <= 500):
	preco = 0.44
elif(tipo == "R".upper() and con > 500):
		preco = 0.65
total = con * preco
print(total)
		
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    total = con * preco
NameError: name 'preco' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-17 01:21:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = int(input("consumo de energia(em KWh):"))
tipo = input("tipo de instalacao: (R/I/C/)")

if(tipo != "R".upper() and tipo != "I" and tipo != "C"):
	print("Entrada:",con,"kwh e","tipo",tipo)
	print("Dados invalidos")
elif(tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print(total)
elif(tipo == "R".upper() and con > 500):
		preco = 0.65
		total = con * preco
		print(total)
total = con * preco
print(total)
		
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 18, in <module>
    total = con * preco
NameError: name 'preco' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-17 01:26:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = int(input("consumo de energia(em KWh):"))
tipo = input("tipo de instalacao: (R/I/C/)")

if(tipo != "R" and tipo != "I" and tipo != "C"):
	print("Entrada:",con,"kwh e","tipo",tipo)
	print("Dados invalidos")
	
elif(tipo == "R" and con <= 500):
	pp =  0.44
	print(pp)
	
	 
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 18, in <module>
    total = con * preco
NameError: name 'preco' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-17 01:28:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = int(input("consumo de energia(em KWh):"))
tipo = input("tipo de instalacao: (R/I/C/)")

if(tipo != "R" and tipo != "I" and tipo != "C"):
	print("Entrada:",con,"kwh e","tipo",tipo)
	print("Dados invalidos")
	
elif(tipo == "R" and con <= 500):
	pp =  0.44
	print(pp)
	
	 
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 18, in <module>
    total = con * preco
NameError: name 'preco' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-17 01:29:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = int(input("consumo de energia(em KWh):"))
tipo = input("tipo de instalacao: (R/I/C/)")

if(tipo != "R".upper() and tipo != "I".upper() and tipo != "C".upper()):
	print("Entrada:",con,"kwh e","tipo",tipo)
	print("Dados invalidos")
	
elif(tipo == "R" and con <= 500):
	pp =  0.44
	print(pp)
	
	 
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 18, in <module>
    total = con * preco
NameError: name 'preco' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-17 01:29:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = int(input("consumo de energia(em KWh):"))
tipo = input("tipo de instalacao: (R/I/C/)")

if(tipo != "R".upper() and tipo != "I".upper() and tipo != "C".upper()):
	print("Entrada:",con,"kwh e","tipo",tipo)
	print("Dados invalidos")
	
elif(tipo == "R" and con <= 500):
	pp =  0.44
	print(pp)
	
	 
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 18, in <module>
    total = con * preco
NameError: name 'preco' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-17 01:32:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = int(input("consumo de energia(em KWh):"))
tipo = input("tipo de instalacao: (R/I/C/)")

if(tipo.upper() != "R" and tipo.upper() != "I" and tipo.upper() != "C"):
	print("Entrada:",con,"kwh e","tipo",tipo)
	print("Dados invalidos")
	
elif(tipo == "R" and con <= 500):
	pp =  0.44
	print(pp)
	
	 
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 18, in <module>
    total = con * preco
NameError: name 'preco' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-17 10:47:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = int(input("consumo de energia(em KWh):"))
tipo = input("tipo de instalacao: (R/I/C/)".upper())

if(tipo != "R" and tipo != "I" and tipo != "C"):
	print("Entrada:",con,"kwh e","tipo",tipo)
	print("Dados invalidos")
	
elif(tipo == "R" and con <= 500):
	pp =  0.44
	print(pp)
	
	 
	
	
-- OUTPUT:
TIPO DE INSTALACAO: (R/I/C/)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-17 10:48:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = int(input("consumo de energia(em KWh):"))
tipo = input("tipo de instalacao: (R/I/C/)".upper())

if(tipo != "R" and tipo != "I" and tipo != "C"):
	print("Entrada:",con,"kwh e","tipo",tipo)
	print("Dados invalidos")
	
elif(tipo == "R" and con <= 500):
	pp =  0.44
	print(pp)
	
	 
	
	
-- OUTPUT:
TIPO DE INSTALACAO: (R/I/C/)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-17 10:50:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = int(input("consumo de energia(em KWh):"))
tipo = input("tipo de instalacao: (R/I/C/)").upper()

if(tipo != "R" and tipo != "I" and tipo != "C"):
	print("Entrada:",con,"kwh e","tipo",tipo)
	print("Dados invalidos")
	
elif(tipo == "R" and con <= 500):
	pp =  0.44
	print(pp)
	
	 
	
	
-- OUTPUT:
TIPO DE INSTALACAO: (R/I/C/)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-17 10:51:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = int(input("consumo de energia(em KWh):"))
tipo = input("tipo de instalacao: (R/I/C/)")

if(tipo != "R" and tipo != "I" and tipo != "C"):
	print("Entrada:",con,"kwh e","tipo",tipo)
	print("Dados invalidos")
	
elif(tipo == "R" and con <= 500):
	pp =  0.44
	print(pp)
	
	 
	
	
-- OUTPUT:
TIPO DE INSTALACAO: (R/I/C/)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-17 10:54:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = int(input("consumo de energia(em KWh):"))
tipo = input("tipo de instalacao: (R/I/C/)")

if(tipo != "R" and tipo != "I" and tipo != "C"):
	print("Entrada:",con,"kwh e","tipo",tipo)
	print("Dados invalidos")
	
elif(tipo == "R" and con <= 500):
	pp =  0.44
	total = con * pp
	print(total)
	
	 
	
	
-- OUTPUT:
TIPO DE INSTALACAO: (R/I/C/)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-17 11:01:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = int(input("consumo de energia(em KWh):"))
tipo = input("tipo de instalacao: (R/I/C/)")

if(tipo != "R" and tipo != "I" and tipo != "C"):
	print("Entrada:",con,"kwh e","tipo",tipo)
	print("Dados invalidos")
	
elif(tipo == "R" or tipo == "r" and con <= 500):
	pp =  0.44
	total = con * pp
	print(total)
	
	 
	
	
-- OUTPUT:
TIPO DE INSTALACAO: (R/I/C/)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-17 11:04:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = int(input("consumo de energia(em KWh):"))
tipo = input("tipo de instalacao: (R/I/C/)")

if(tipo != "R" and tipo != "I" and tipo != "C"):
	print("Entrada:",con,"kwh e","tipo",tipo)
	print("Dados invalidos")
	
elif(tipo == "R" or tipo == "r" and con <= 500):
	pp =  0.44
	total = con * pp
	print(total)
	
	 
	
	
-- OUTPUT:
TIPO DE INSTALACAO: (R/I/C/)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-17 11:05:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = int(input("consumo de energia(em KWh):"))
tipo = input("tipo de instalacao: (R/I/C/)")

if(tipo != "R" and tipo != "I" and tipo != "C"):
	print("Entrada:",con,"kwh e","tipo",tipo)
	print("Dados invalidos")
	
elif(tipo == "R" or tipo == "r" and con <= 500):
	pp =  0.44
	total = con * pp
	print(total)
	
	 
	
	
-- OUTPUT:
TIPO DE INSTALACAO: (R/I/C/)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-17 11:08:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = int(input("consumo de energia(em KWh):"))
tipo = input("tipo de instalacao: (R/I/C/)")

if(tipo != "R" or tipo != "r" and tipo != "I" and tipo != "C"):
	print("Entrada:",con,"kwh e","tipo",tipo)
	print("Dados invalidos")
	
elif(tipo == "R" and con <= 500):
	pp =  0.44
	total = con * pp
	print(total)
	
	 
	
	
-- OUTPUT:
Entrada: -56 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-17 11:09:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = int(input("consumo de energia(em KWh):"))
tipo = input("tipo de instalacao: (R/I/C/)")

if(tipo != "R" and tipo != "r"):
	print("Entrada:",con,"kwh e","tipo",tipo)
	print("Dados invalidos")
	
elif(tipo == "R" and con <= 500):
	pp =  0.44
	total = con * pp
	print(total)
	
	 
	
	
-- OUTPUT:
Entrada: -56 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-17 11:09:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = int(input("consumo de energia(em KWh):"))
tipo = input("tipo de instalacao: (R/I/C/)")

if(tipo != "R" and tipo != "r"):
	print("Entrada:",con,"kwh e","tipo",tipo)
	print("Dados invalidos")
	
elif(tipo == "R" and con <= 500):
	pp =  0.44
	total = con * pp
	print(total)
	
	 
	
	
-- OUTPUT:
Entrada: -56 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-17 11:10:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = int(input("consumo de energia(em KWh):"))
tipo = input("tipo de instalacao: (R/I/C/)")

if(tipo != "R" and tipo != "r"):
	print("Entrada:",con,"kwh e","tipo",tipo)
	print("Dados invalidos")
	
elif(tipo == "R" and con <= 500):
	pp =  0.44
	total = con * pp
	print(total)
	
	 
	
	
-- OUTPUT:
Entrada: -56 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-17 11:11:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = int(input("consumo de energia(em KWh):"))
tipo = input("tipo de instalacao: (R/I/C/)")

if(tipo != "R" and tipo != "r"):
	print("Entrada:",con,"kwh e","tipo",tipo)
	print("Dados invalidos")
	
elif(tipo == "R" or tipo == "r" and con <= 500):
	pp =  0.44
	total = con * pp
	print(total)
	
	 
	
	
-- OUTPUT:
Entrada: -56 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 17:09:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = int(input("consumo de energia(em KWh):"))
tipo = input("tipo de instalacao: (R/I/C/)")

if(tipo != "R" and tipo != "r" or tipo != "I" and tipo "i" or tipo != "C" and tipo != "c"):
	print("Entrada:",con,"kwh e","tipo",tipo)
	print("Dados invalidos")
	
elif(tipo == "R" or tipo == "r" and con <= 500):
	pp =  0.44
	total = con * pp
	print(total)
	
	 
	
	
-- ERROR:
File "XXXX", line 7
    if(tipo != "R" and tipo != "r" or tipo != "I" and tipo "i" or tipo != "C" and tipo != "c"):
                                                             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 17:15:11) 
-- CODE:
con = int(input("consumo de energia: (R/I/C)"))
print(con)
-- OUTPUT:
-56
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 17:16:09) 
-- CODE:
con = int(input("consumo de energia: (R/I/C)"))
print(con)
-- OUTPUT:
-56
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 17:23:39) 
-- CODE:
con = int(input("consumo de energia: (R/I/C)"))
print(con)
-- OUTPUT:
-56
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 17:29:35) 
-- CODE:
con = int(input("consumo de energia:"))
tipo = input("tipo de instalacao: (R/I/C)")

k = "Entradas:",con,"kwh e tipo",tipo
l = "Dados invalidos"


if(tipo != "R" and tipo != "r"):
	print(k)
	print(l)

-- OUTPUT:
('Entradas:', -56, 'kwh e tipo', 'I')
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 17:31:41) 
-- CODE:
con = int(input("consumo de energia:"))
tipo = input("tipo de instalacao: (R/I/C)")

k = "Entradas:" con "kwh e tipo" tipo
l = "Dados invalidos"


if(tipo != "R" and tipo != "r"):
	print(k)
	print(l)

-- ERROR:
File "XXXX", line 4
    k = "Entradas:" con "kwh e tipo" tipo
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 17:32:40) 
-- CODE:
con = int(input("consumo de energia:"))
tipo = input("tipo de instalacao: (R/I/C)")

k = "Entradas:",con,"kwh e tipo",tipo
l = "Dados invalidos"


if(tipo != "R" and tipo != "r"):
	print(k)
	print(l)

-- OUTPUT:
('Entradas:', -56, 'kwh e tipo', 'I')
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 17:50:36) 
-- CODE:
con = int(input("consumo de energia:"))
tipo = input("tipo de instalacao: (R/I/C)")

k = "Entradas:",con,"kwh e tipo",tipo
l = "Dados invalidos"


if(tipo != "R" and tipo != "r"):
	print(k)
	print(l)
elif(tipo != "I" and tipo !="i"):
	print(k)
	print(l)
elif(tipo != "C" and tipo !="c"):
	print(k)
	print(l)
	
elif(tipo == "R" and tipo == "r" and con <= 500):
	preco = 0.44
	total = con * preco
print(total)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 21, in <module>
    print(total)
NameError: name 'total' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 17:51:44) 
-- CODE:
con = int(input("consumo de energia:"))
tipo = input("tipo de instalacao: (R/I/C)")

k = "Entradas:",con,"kwh e tipo",tipo
l = "Dados invalidos"


if(tipo != "R" and tipo != "r"):
	print(k)
	print(l)
elif(tipo != "I" and tipo !="i"):
	print(k)
	print(l)
elif(tipo != "C" and tipo !="c"):
	print(k)
	print(l)
	
elif(tipo == "R" and tipo == "r" and con <= 500):
	preco = 0.44
total = con * preco
print(total)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 20, in <module>
    total = con * preco
NameError: name 'preco' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 17:52:41) 
-- CODE:
con = int(input("consumo de energia:"))
tipo = input("tipo de instalacao: (R/I/C)")

k = "Entradas:",con,"kwh e tipo",tipo
l = "Dados invalidos"


if(tipo != "R" and tipo != "r"):
	print(k)
	print(l)
elif(tipo != "I" and tipo !="i"):
	print(k)
	print(l)
elif(tipo != "C" and tipo !="c"):
	print(k)
	print(l)
	
elif(tipo == "R" and tipo == "r" and con <= 500):
	preco = 0.44
	total = con * preco
	print(total)
	
-- OUTPUT:
('Entradas:', -56, 'kwh e tipo', 'I')
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 17:53:26) 
-- CODE:
con = int(input("consumo de energia:"))
tipo = input("tipo de instalacao: (R/I/C)")

k = "Entradas:",con,"kwh e tipo",tipo
l = "Dados invalidos"


if(tipo != "R" and tipo != "r"):
	print(k)
	print(l)
elif(tipo != "I" and tipo !="i"):
	print(k)
	print(l)
elif(tipo != "C" and tipo !="c"):
	print(k)
	print(l)
	
elif(tipo == "R" or tipo == "r" and con <= 500):
	preco = 0.44
	total = con * preco
	print(total)
	
-- OUTPUT:
('Entradas:', -56, 'kwh e tipo', 'I')
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 19:35:53) 
-- CODE:
con = int(input("consumo de energia:"))
tipo = input("tipo de instalacao: (R/I/C)")

if(brasao != "R" and brasao != "I" and brasao != "C" ):
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Dados invalidos")


elif(tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if(brasao != "R" and brasao != "I" and brasao != "C" ):
NameError: name 'brasao' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 19:36:24) 
-- CODE:
con = int(input("consumo de energia:"))
tipo = input("tipo de instalacao: (R/I/C)")

if(brasao != "R" and brasao != "I" and brasao != "C" ):
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Dados invalidos")


elif(tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if(brasao != "R" and brasao != "I" and brasao != "C" ):
NameError: name 'brasao' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-18 19:36:38) 
-- CODE:
con = int(input("consumo de energia:"))
tipo = input("tipo de instalacao: (R/I/C)")

if(brasao != "R" and brasao != "I" and brasao != "C" ):
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Dados invalidos")


elif(tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)
	
-- EXECUTION TIME:
0.294429
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1101/main.py", line 4, in <module>
    if(brasao != "R" and brasao != "I" and brasao != "C" ):
NameError: name 'brasao' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-18 21:00:20) 
-- CODE:
con = int(input("consumo de energia:"))
tipo = input("tipo de instalacao: (R/I/C)")

if(brasao != "R" and brasao != "I" and brasao != "C" ):
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Dados invalidos")

elif(tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)
elif(tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)
elif(tipo == "I" and con <= 5000):
	preco = 0.55
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)
elif(tipo == "I" and con > 5000):
	preco = 0.60
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)
elif(tipo == "C" and con <= 1000):
	preco = 0.55
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)
elif(tipo == "C" and con > 1000):
	preco = 0.60
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)


	
-- EXECUTION TIME:
0.178554
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1101/main.py", line 4, in <module>
    if(brasao != "R" and brasao != "I" and brasao != "C" ):
NameError: name 'brasao' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 21:00:38) 
-- CODE:
con = int(input("consumo de energia:"))
tipo = input("tipo de instalacao: (R/I/C)")

if(brasao != "R" and brasao != "I" and brasao != "C" ):
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Dados invalidos")

elif(tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)
elif(tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)
elif(tipo == "I" and con <= 5000):
	preco = 0.55
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)
elif(tipo == "I" and con > 5000):
	preco = 0.60
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)
elif(tipo == "C" and con <= 1000):
	preco = 0.55
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)
elif(tipo == "C" and con > 1000):
	preco = 0.60
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)


	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if(brasao != "R" and brasao != "I" and brasao != "C" ):
NameError: name 'brasao' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 21:01:27) 
-- CODE:
con = float(input("consumo de energia:"))
tipo = input("tipo de instalacao: (R/I/C)")

if(brasao != "R" and brasao != "I" and brasao != "C" ):
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Dados invalidos")

elif(tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)
elif(tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)
elif(tipo == "I" and con <= 5000):
	preco = 0.55
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)
elif(tipo == "I" and con > 5000):
	preco = 0.60
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)
elif(tipo == "C" and con <= 1000):
	preco = 0.55
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)
elif(tipo == "C" and con > 1000):
	preco = 0.60
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)


	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if(brasao != "R" and brasao != "I" and brasao != "C" ):
NameError: name 'brasao' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 21:01:43) 
-- CODE:
con = float(input("consumo de energia:"))
tipo = input("tipo de instalacao: (R/I/C)")

if(brasao != "R" and brasao != "I" and brasao != "C" ):
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Dados invalidos")

elif(tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)
elif(tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)
elif(tipo == "I" and con <= 5000):
	preco = 0.55
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)
elif(tipo == "I" and con > 5000):
	preco = 0.60
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)
elif(tipo == "C" and con <= 1000):
	preco = 0.55
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)
elif(tipo == "C" and con > 1000):
	preco = 0.60
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)


	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if(brasao != "R" and brasao != "I" and brasao != "C" ):
NameError: name 'brasao' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-18 21:02:47) 
-- CODE:
con = float(input("consumo de energia:"))
tipo = input("tipo de instalacao: (R/I/C)")

if(tipo != "R" and tipo != "I" and tipo != "C" ):
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Dados invalidos")

elif(tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)
elif(tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)
elif(tipo == "I" and con <= 5000):
	preco = 0.55
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)
elif(tipo == "I" and con > 5000):
	preco = 0.60
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)
elif(tipo == "C" and con <= 1000):
	preco = 0.55
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)
elif(tipo == "C" and con > 1000):
	preco = 0.60
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)


	
-- EXECUTION TIME:
0.190837
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entrada: -56.0 kwh e tipo I
Valor total: R$ -30.800000000000004
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entrada: 955.5 kwh e tipo R
Valor total: R$ 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 21:02:53) 
-- CODE:
con = float(input("consumo de energia:"))
tipo = input("tipo de instalacao: (R/I/C)")

if(tipo != "R" and tipo != "I" and tipo != "C" ):
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Dados invalidos")

elif(tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)
elif(tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)
elif(tipo == "I" and con <= 5000):
	preco = 0.55
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)
elif(tipo == "I" and con > 5000):
	preco = 0.60
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)
elif(tipo == "C" and con <= 1000):
	preco = 0.55
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)
elif(tipo == "C" and con > 1000):
	preco = 0.60
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)


	
-- OUTPUT:
Entrada: -56.0 kwh e tipo I
Valor total: R$ -30.800000000000004
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-18 21:05:39) 
-- CODE:
con = float(input("consumo de energia:"))
tipo = input("tipo de instalacao: (R/I/C)")

if(tipo != "R" and tipo != "I" and tipo != "C" ):
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Dados invalidos")

elif(tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)
elif(tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)
elif(tipo == "I" and con <= 5000):
	preco = 0.55
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)
elif(tipo == "I" and con > 5000):
	preco = 0.60
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)
elif(tipo == "C" and con <= 1000):
	preco = 0.55
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)
elif(tipo == "C" and con > 1000):
	preco = 0.60
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)


	
-- EXECUTION TIME:
0.14804
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entrada: -56.0 kwh e tipo I
Valor total: R$ -30.800000000000004
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entrada: 955.5 kwh e tipo R
Valor total: R$ 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 21:06:56) 
-- CODE:
con = float(input("consumo de energia:"))
tipo = input("tipo de instalacao: (R/I/C)")

if(tipo != "R" and tipo != "I" and tipo != "C" ):
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Dados invalidos")

elif(tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)
elif(tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)
elif(tipo == "I" and con <= 5000):
	preco = 0.55
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)
elif(tipo == "I" and con > 5000):
	preco = 0.60
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)
elif(tipo == "C" and con <= 1000):
	preco = 0.55
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "C" and con > 1000):
	preco = 0.60
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",total)


	
-- OUTPUT:
Entrada: -56.0 kwh e tipo I
Valor total: R$ -30.800000000000004
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-18 21:09:59) 
-- CODE:
con = float(input("consumo de energia:"))
tipo = input("tipo de instalacao: (R/I/C)")

if(tipo != "R" and tipo != "I" and tipo != "C" ):
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Dados invalidos")

elif(tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "I" and con <= 5000):
	preco = 0.55
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "I" and con > 5000):
	preco = 0.60
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "C" and con <= 1000):
	preco = 0.55
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "C" and con > 1000):
	preco = 0.60
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))


	
-- EXECUTION TIME:
0.196709
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entrada: -56.0 kwh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entrada: 955.5 kwh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-18 21:10:02) 
-- CODE:
con = float(input("consumo de energia:"))
tipo = input("tipo de instalacao: (R/I/C)")

if(tipo != "R" and tipo != "I" and tipo != "C" ):
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Dados invalidos")

elif(tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "I" and con <= 5000):
	preco = 0.55
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "I" and con > 5000):
	preco = 0.60
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "C" and con <= 1000):
	preco = 0.55
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "C" and con > 1000):
	preco = 0.60
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))


	
-- EXECUTION TIME:
0.188208
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entrada: -56.0 kwh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entrada: 955.5 kwh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-18 21:10:03) 
-- CODE:
con = float(input("consumo de energia:"))
tipo = input("tipo de instalacao: (R/I/C)")

if(tipo != "R" and tipo != "I" and tipo != "C" ):
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Dados invalidos")

elif(tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "I" and con <= 5000):
	preco = 0.55
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "I" and con > 5000):
	preco = 0.60
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "C" and con <= 1000):
	preco = 0.55
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "C" and con > 1000):
	preco = 0.60
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))


	
-- EXECUTION TIME:
0.151531
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entrada: -56.0 kwh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entrada: -56.0 kwh e tipo I
Valor total: R$ -30.8
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-18 21:10:03) 
-- CODE:
con = float(input("consumo de energia:"))
tipo = input("tipo de instalacao: (R/I/C)")

if(tipo != "R" and tipo != "I" and tipo != "C" ):
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Dados invalidos")

elif(tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "I" and con <= 5000):
	preco = 0.55
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "I" and con > 5000):
	preco = 0.60
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "C" and con <= 1000):
	preco = 0.55
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "C" and con > 1000):
	preco = 0.60
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))


	
-- EXECUTION TIME:
0.170657
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entrada: -56.0 kwh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entrada: -56.0 kwh e tipo I
Valor total: R$ -30.8
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-18 21:10:03) 
-- CODE:
con = float(input("consumo de energia:"))
tipo = input("tipo de instalacao: (R/I/C)")

if(tipo != "R" and tipo != "I" and tipo != "C" ):
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Dados invalidos")

elif(tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "I" and con <= 5000):
	preco = 0.55
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "I" and con > 5000):
	preco = 0.60
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "C" and con <= 1000):
	preco = 0.55
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "C" and con > 1000):
	preco = 0.60
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))


	
-- EXECUTION TIME:
0.180202
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entrada: -56.0 kwh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entrada: 955.5 kwh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 21:16:15) 
-- CODE:
con = float(input("consumo de energia:"))
tipo = input("tipo de instalacao: (R/I/C)")

if(tipo != "R" and tipo != "I" and tipo != "C" ):
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Dados invalidos")

elif(con < 0):
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Dados invalidos")

	
elif(tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "I" and con <= 5000):
	preco = 0.55
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "I" and con > 5000):
	preco = 0.60
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "C" and con <= 1000):
	preco = 0.55
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "C" and con > 1000):
	preco = 0.60
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))

-- OUTPUT:
Entrada: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-18 21:16:31) 
-- CODE:
con = float(input("consumo de energia:"))
tipo = input("tipo de instalacao: (R/I/C)")

if(tipo != "R" and tipo != "I" and tipo != "C" ):
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Dados invalidos")

elif(con < 0):
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Dados invalidos")

	
elif(tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "I" and con <= 5000):
	preco = 0.55
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "I" and con > 5000):
	preco = 0.60
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "C" and con <= 1000):
	preco = 0.55
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "C" and con > 1000):
	preco = 0.60
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))

-- EXECUTION TIME:
0.118087
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entrada: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entrada: 955.5 kwh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-18 21:21:47) 
-- CODE:
con = float(input("consumo de energia:"))
tipo = input("tipo de instalacao: (R/I/C)")

if(con < 0):
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Dados invalidos")
	
elif(tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "I" and con <= 5000):
	preco = 0.55
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "I" and con > 5000):
	preco = 0.60
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "C" and con <= 1000):
	preco = 0.55
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "C" and con > 1000):
	preco = 0.60
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
else:
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Dados invalidos")

-- EXECUTION TIME:
0.223835
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entrada: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entrada: 955.5 kwh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 21:23:35) 
-- CODE:
con = float(input("consumo de energia:"))
tipo = input("tipo de instalacao: (R/I/C)")

if(con < 0):
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Dados invalidos")
	
elif(tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "I" and con <= 5000):
	preco = 0.55
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "I" and con > 5000):
	preco = 0.60
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "C" and con <= 1000):
	preco = 0.55
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "C" and con > 1000):
	preco = 0.60
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
else:
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Dados invalidos")

-- OUTPUT:
Entrada: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 21:23:54) 
-- CODE:
con = float(input("consumo de energia:"))
tipo = input("tipo de instalacao: (R/I/C)")

if(con < 0):
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Dados invalidos")
	
elif(tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "I" and con <= 5000):
	preco = 0.55
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "I" and con > 5000):
	preco = 0.60
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "C" and con <= 1000):
	preco = 0.55
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "C" and con > 1000):
	preco = 0.60
	total = con * preco
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
else:
	print("Entrada:",con,"kwh e tipo",tipo)
	print("Dados invalidos")

-- OUTPUT:
Entrada: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-18 21:25:07) 
-- CODE:
con = float(input("consumo de energia:"))
tipo = input("tipo de instalacao: (R/I/C)")

if(con < 0):
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")
	
elif(tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "I" and con <= 5000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "I" and con > 5000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "C" and con <= 1000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "C" and con > 1000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
else:
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")

-- EXECUTION TIME:
0.167105
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-18 21:30:36) 
-- CODE:
con = float(input("consumo de energia:"))
tipo = input("tipo de instalacao: (R/I/C)")

if(con < 0):
	print("Entradas:",con,"kWh e tipo",tipo)
	print("Dados invalidos")
	
elif(tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entradas:",con,"kWh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entradas:",con,"kWh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "I" and con <= 5000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kWh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "I" and con > 5000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kWh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "C" and con <= 1000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "C" and con > 1000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
else:
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")

-- EXECUTION TIME:
0.202561
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:35:21) 
-- CODE:
con = float(input("consumo de energia:"))
tipo = input("tipo de instalacao: (R/I/C)")

if(con < 0):
	print("Entradas:",con,"kWh e tipo",tipo)
	print("Dados invalidos")
	
elif(tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entradas:",con,"kWh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entradas:",con,"kWh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "I" and con <= 5000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kWh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "I" and con > 5000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kWh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "C" and con <= 1000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "C" and con > 1000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
else:
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:35:22) 
-- CODE:
con = float(input("consumo de energia:"))
tipo = input("tipo de instalacao: (R/I/C)")

if(con < 0):
	print("Entradas:",con,"kWh e tipo",tipo)
	print("Dados invalidos")
	
elif(tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entradas:",con,"kWh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entradas:",con,"kWh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "I" and con <= 5000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kWh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "I" and con > 5000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kWh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "C" and con <= 1000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "C" and con > 1000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
else:
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 15:58:39) 
-- CODE:
con = float(input("consumo de energia:"))
tipo = input("tipo de instalacao: (R/I/C)")

if(con < 0):
	print("Entradas:",con,"kWh e tipo",tipo)
	print("Dados invalidos")
	
elif(tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entradas:",con,"kWh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entradas:",con,"kWh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "I" and con <= 5000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kWh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "I" and con > 5000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kWh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "C" and con <= 1000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "C" and con > 1000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
else:
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
