== TEST (2019-05-02 07:58:56) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado a: "))
b = float(input ("Lado b: "))
c = float(input ("Lado c: "))
print("Entradas:", a, ",", b, ",", c)
if ((x >= y + z) or (y >= x + z) or (z >= y + x)):
	Tipo de triangulo = "invalido"
	print("Tipo de triangulo: ", Tipo de triangulo)
elif ((x == y) and (y == z)):
	Tipo de triangulo = "equilatero"	
	print("Tipo de triangulo: ", Tipo de triangulo
elif ((x == y) or (y == z) or (z == x)):
	Tipo de triangulo = "isoceles"		
	print("Tipo de triangulo: ", Tipo de triangulo)
else:		
	Tipo de triangulo = "escaleno"
	print("Tipo de triangulo: ", Tipo de triangulo)

-- ERROR:
File "XXXX", line 9
    Tipo de triangulo = "invalido"
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 08:01:31) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado a: "))
b = float(input ("Lado b: "))
c = float(input ("Lado c: "))
print("Entradas:", a, ",", b, ",", c)
if ((x >= y + z) or (y >= x + z) or (z >= y + x)):
	print("Tipo de triangulo: invalido")
elif ((x == y) and (y == z)):
	print("Tipo de triangulo: equilatero")
elif ((x == y) or (y == z) or (z == x)):		
	print("Tipo de triangulo: isoceles")
else:	
	print("Tipo de triangulo: escaleno")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    if ((x >= y + z) or (y >= x + z) or (z >= y + x)):
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 08:03:11) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado a: "))
b = float(input ("Lado b: "))
c = float(input ("Lado c: "))
print("Entradas:", a, ",", b, ",", c)
if ((a >= b + c) or (b >= a + c) or (c >= b + a)):
	print("Tipo de triangulo: invalido")
elif ((a == b) and (b == c)):
	print("Tipo de triangulo: equilatero")
elif ((a == b) or (b == c) or (c == a)):		
	print("Tipo de triangulo: isoceles")
else:	
	print("Tipo de triangulo: escaleno")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 08:03:22) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado a: "))
b = float(input ("Lado b: "))
c = float(input ("Lado c: "))
print("Entradas:", a, ",", b, ",", c)
if ((a >= b + c) or (b >= a + c) or (c >= b + a)):
	print("Tipo de triangulo: invalido")
elif ((a == b) and (b == c)):
	print("Tipo de triangulo: equilatero")
elif ((a == b) or (b == c) or (c == a)):		
	print("Tipo de triangulo: isoceles")
else:	
	print("Tipo de triangulo: escaleno")

-- EXECUTION TIME:
0.16101
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 08:03:40) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado a: "))
b = float(input ("Lado b: "))
c = float(input ("Lado c: "))
print("Entradas:", a, ",", b, ",", c)
if ((a >= b + c) or (b >= a + c) or (c >= b + a)):
	print("Tipo de triangulo: invalido")
elif ((a == b) and (b == c)):
	print("Tipo de triangulo: equilatero")
elif ((a == b) or (b == c) or (c == a)):		
	print("Tipo de triangulo: isoceles")
else:	
	print("Tipo de triangulo: escaleno")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 08:03:49) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado a: "))
b = float(input ("Lado b: "))
c = float(input ("Lado c: "))
print("Entradas:", a, ",", b, ",", c)
if ((a >= b + c) or (b >= a + c) or (c >= b + a)):
	print("Tipo de triangulo: invalido")
elif ((a == b) and (b == c)):
	print("Tipo de triangulo: equilatero")
elif ((a == b) or (b == c) or (c == a)):		
	print("Tipo de triangulo: isoceles")
else:	
	print("Tipo de triangulo: escaleno")

-- EXECUTION TIME:
0.156446
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 08:05:08) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado a: "))
b = float(input ("Lado b: "))
c = float(input ("Lado c: "))
print("Entradas:", a, ",", b, ",", c)
if ((a >= b + c) or (b >= a + c) or (c >= b + a)):
	print("Tipo de triangulo: invalido")
elif ((a == b) and (b == c)):
	print("Tipo de triangulo: equilatero")
elif ((a == b) or (b == c) or (c == a)):		
	print("Tipo de triangulo: isoceles")
else:	
	print("Tipo de triangulo: escaleno")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 08:05:23) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado a: "))
b = float(input ("Lado b: "))
c = float(input ("Lado c: "))
print("Entradas:", a, ",", b, ",", c)
if ((a >= b + c) or (b >= a + c) or (c >= b + a)):
	print("Tipo de triangulo: invalido")
elif ((a == b) and (b == c)):
	print("Tipo de triangulo: equilatero")
elif ((a == b) or (b == c) or (c == a)):		
	print("Tipo de triangulo: isoceles")
else:	
	print("Tipo de triangulo: escaleno")

-- EXECUTION TIME:
0.170437
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 08:06:34) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado a: "))
b = float(input ("Lado b: "))
c = float(input ("Lado c: "))
print("Entradas:", a, ",", b, ",", c)
if ((a >= b + c) or (b >= a + c) or (c >= b + a)):
	print("Tipo de triangulo: invalido")
elif ((a == b) and (b == c)):
	print("Tipo de triangulo: equilatero")
elif ((a == b) or (b == c) or (c == a)):		
	print("Tipo de triangulo: isosceles")
else:	
	print("Tipo de triangulo: escaleno")

-- EXECUTION TIME:
0.169699
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
