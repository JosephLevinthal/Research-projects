== TEST (2019-05-11 17:30:29) 
-- CODE:
n = 2
d = 3(2*n-1)
print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    d = 3(2*n-1)
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 17:30:40) 
-- CODE:
n = 2
d = 3*(2*n-1)
print(d)
-- OUTPUT:
9
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 17:30:49) 
-- CODE:
n = 3
d = 3*(2*n-1)
print(d)
-- OUTPUT:
15
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 17:32:47) 
-- CODE:
n = 3
d1 = (2*3*4)
d2 = (4*5*6)
d3 = (6*7*8)
d4 = (8*9*10)
print(d1)
print(d2)
print(d3)
print(d4)
-- OUTPUT:
24
120
336
720
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 17:33:33) 
-- CODE:
n = 3
d1 = (2*3*4)
d2 = (4*5*6)
d3 = (6*7*8)
d4 = (8*9*10)
print(d1/6)
print(d2/6)
print(d3/6)
print(d4/6)
-- OUTPUT:
4.0
20.0
56.0
120.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 17:34:57) 
-- CODE:
n = 3
d1 = (2*3*4)
d2 = (4*5*6)
d3 = (6*7*8)
d4 = (8*9*10)
print(d1/3)
print(d2/3)
print(d3/3)
print(d4/3)
-- OUTPUT:
8.0
40.0
112.0
240.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 17:35:26) 
-- CODE:
n = 3
d1 = (2*3*4)
d2 = (4*5*6)
d3 = (6*7*8)
d4 = (8*9*10)
print(d1/4)
print(d2/4)
print(d3/4)
print(d4/4)
-- OUTPUT:
6.0
30.0
84.0
180.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 17:35:59) 
-- CODE:
n = 3
d1 = (2*3*4)
d2 = (4*5*6)
d3 = (6*7*8)
d4 = (8*9*10)
print(d1/24)
print(d2/24)
print(d3/24)
print(d4/24)
-- OUTPUT:
1.0
5.0
14.0
30.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 17:37:09) 
-- CODE:
n = 3
d1 = (2*3*4)
d2 = (4*5*6)
d3 = (6*7*8)
d4 = (8*9*10)
print(d1/6)
print(d2/6)
print(d3/6)
print(d4/6)
-- OUTPUT:
4.0
20.0
56.0
120.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 17:38:33) 
-- CODE:
n = 3
d1 = (2*3*4)
d2 = (4*5*6)
d3 = (6*7*8)
d4 = (8*9*10)
print(d1/8)
print(d2/8)
print(d3/8)
print(d4/8)
-- OUTPUT:
3.0
15.0
42.0
90.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 17:38:58) 
-- CODE:
n = 3
d1 = (2*3*4)
d2 = (4*5*6)
d3 = (6*7*8)
d4 = (8*9*10)
print(d1/16)
print(d2/16)
print(d3/16)
print(d4/16)
-- OUTPUT:
1.5
7.5
21.0
45.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 17:39:19) 
-- CODE:
n = 3
d1 = (2*3*4)
d2 = (4*5*6)
d3 = (6*7*8)
d4 = (8*9*10)
print(d1/24)
print(d2/24)
print(d3/24)
print(d4/24)
-- OUTPUT:
1.0
5.0
14.0
30.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 17:39:35) 
-- CODE:
n = 3
d1 = (2*3*4)
d2 = (4*5*6)
d3 = (6*7*8)
d4 = (8*9*10)
print(d1/2)
print(d2/2)
print(d3/2)
print(d4/2)
-- OUTPUT:
12.0
60.0
168.0
360.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 17:39:53) 
-- CODE:
n = 3
d1 = (2*3*4)
d2 = (4*5*6)
d3 = (6*7*8)
d4 = (8*9*10)
print(d1/3)
print(d2/3)
print(d3/3)
print(d4/3)
-- OUTPUT:
8.0
40.0
112.0
240.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 17:51:22) 
-- CODE:
n = 3
d = (2*n)*(2n-1)*(2n-2)
print(d)

-- ERROR:
File "XXXX", line 2
    d = (2*n)*(2n-1)*(2n-2)
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 17:51:37) 
-- CODE:
n = 3
d = (2*n)*(2*n-1)*(2*n-2)
print(d)

-- OUTPUT:
120
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 17:52:24) 
-- CODE:
n = 3
prova = 4*6*5
d = (2*n)*(2*n-1)*(2*n-2)
print(d)
print(prova)
-- OUTPUT:
120
120
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-11 17:52:42) 
-- CODE:
n = 5
prova = 6*7*8
d = (2*n)*(2*n-1)*(2*n-2)
print(d)
print(prova)
-- EXECUTION TIME:
0.21975
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
720
336
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
720
336
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
720
336
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 17:52:46) 
-- CODE:
n = 5
prova = 6*7*8
d = (2*n)*(2*n-1)*(2*n-2)
print(d)
print(prova)
-- OUTPUT:
720
336
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 17:52:56) 
-- CODE:
n = 4
prova = 6*7*8
d = (2*n)*(2*n-1)*(2*n-2)
print(d)
print(prova)
-- OUTPUT:
336
336
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 17:53:09) 
-- CODE:
n = 5
prova = 8*9*10
d = (2*n)*(2*n-1)*(2*n-2)
print(d)
print(prova)
-- OUTPUT:
720
720
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 17:56:15) 
-- CODE:
n = int(input("Digite um numero: "))

pi = 3
i=1
while(i < n):
	d = (2*n)*(2*n-1)*(2*n-2)
	parcela = 4/d
	pi = pi + parcela
print(pi)	

print(d)
print(prova)
-- OUTPUT:
720
720
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 17:56:39) 
-- CODE:
n = int(input("Digite um numero: "))

pi = 3
i=1
while(i < n):
	d = (2*n)*(2*n-1)*(2*n-2)
	parcela = 4/d
	pi = pi + parcela
print(pi)	
-- OUTPUT:
720
720
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 17:56:48) 
-- CODE:
n = int(input("Digite um numero: "))

pi = 3
i=1
while(i < n):
	d = (2*n)*(2*n-1)*(2*n-2)
	parcela = 4/d
	pi = pi + parcela
print(pi)	
-- OUTPUT:
720
720
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 17:57:11) 
-- CODE:
n = int(input("Digite um numero: "))

pi = 3
i=1
while(i < n):
	d = (2*n)*(2*n-1)*(2*n-2)
	parcela = 4/d
	pi = pi + parcela
	i = i + 1
print(pi)	
-- OUTPUT:
3.022222222222222
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 17:57:35) 
-- CODE:
n = int(input("Digite um numero: "))

pi = 3
i=1
while(i < n):
	d = (2*n)*(2*n-1)*(2*n-2)
	parcela = 4/d
	pi = pi + parcela
	i = i + 1
print(pi)	
-- OUTPUT:
3.022222222222222
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:07:11) 
-- CODE:
#n = int(input("Digite um numero: "))

#pi = 3
#i=1
#while(i < n):
n = 2
d1 = 2*3*4
d = (2*n)*(2*n-1)*(2*n-2)

print(d1)
print(d)
	#parcela = (4/d)(-1)**n
	#pi = pi + parcela
	#i = i + 1
#print(pi)	
-- OUTPUT:
24
24
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:07:46) 
-- CODE:
#n = int(input("Digite um numero: "))

#pi = 3
#i=1
#while(i < n):
n = 3
d1 = 4*5*6
d = (2*n)*(2*n-1)*(2*n-2)

print(d1)
print(d)
	#parcela = (4/d)(-1)**n
	#pi = pi + parcela
	#i = i + 1
#print(pi)	
-- OUTPUT:
120
120
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:08:17) 
-- CODE:
#n = int(input("Digite um numero: "))

#pi = 3
#i=1
#while(i < n):
n = 4
d1 = 6*7*8
d = (2*n)*(2*n-1)*(2*n-2)

print(d1)
print(d)
	#parcela = (4/d)(-1)**n
	#pi = pi + parcela
	#i = i + 1
#print(pi)	
-- OUTPUT:
336
336
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:11:19) 
-- CODE:
#n = int(input("Digite um numero: "))

#pi = 3
#i=1
#while(i < n):
n = 1000
#d1 = 6*7*8
d = (2*n)*(2*n-1)*(2*n-2)

#print(d1)
print(d)
	#parcela = (4/d)(-1)**n
	#pi = pi + parcela
	#i = i + 1
#print(pi)	
-- OUTPUT:
7988004000
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:13:32) 
-- CODE:
n = int(input("Digite um numero: "))
pi = 3
i=1
while(i < n):
	d = (2*n)*(2*n-1)*(2*n-2)
	parcela = (4/d)
	pi = pi + parcela
	i = i + 1
print(pi)	
-- OUTPUT:
3.022222222222222
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:14:46) 
-- CODE:
n = int(input("Digite um numero: "))
pi = 3
i=1
while(i < n):
	d = (2*n)*(2*n-1)*(2*n-2)
	parcela = (4/d)
	pi = pi + parcela
	i = i + 1
print(pi)	
-- OUTPUT:
3.022222222222222
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:15:34) 
-- CODE:
n = int(input("Digite um numero: "))
pi = 3
i=1
while(i < n):
	d = (2*n)*(2*n-1)*(2*n-2)
	parcela = (4/d)
	pi = pi + parcela
	i = i + 1
print(pi)	
-- OUTPUT:
3.022222222222222
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:16:55) 
-- CODE:
n = int(input("Digite um numero: "))
pi = 3
i=1
while(i < n):
	d = (2*n)*(2*n-1)*(2*n-2)
	parcela = (4/d)
	pi = pi + parcela
	i = i + 1
print(pi)	
-- OUTPUT:
3.022222222222222
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:19:50) 
-- CODE:
n = int(input("Digite um numero: "))
pi = 3
i=1
while(i < n):
	d = (2*n)*(2*n-1)*(2*n-2)
	parcela = (4/d)*-1
	pi = pi + parcela
	i = i + 1
print(pi)	
-- OUTPUT:
2.977777777777778
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:20:18) 
-- CODE:
n = int(input("Digite um numero: "))
pi = 3
i=1
while(i < n):
	d = (2*n)*(2*n-1)*(2*n-2)
	parcela = (4/d)*-1
	pi = pi + parcela
	i = i + 1
	print(pi)	
-- OUTPUT:
2.9944444444444445
2.988888888888889
2.9833333333333334
2.977777777777778
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:20:31) 
-- CODE:
n = int(input("Digite um numero: "))
pi = 3
i=1
while(i < n):
	d = (2*n)*(2*n-1)*(2*n-2)
	parcela = (4/d)*-1
	pi = pi + parcela
	i = i + 1
	print(pi)	
-- OUTPUT:
2.9944444444444445
2.988888888888889
2.9833333333333334
2.977777777777778
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:22:15) 
-- CODE:
n = int(input("Digite um numero: "))
pi = 3
i=1
while(i < n):
	d = (2*n)*(2*n-1)*(2*n-2)
	parcela = (4/d)*-1
	pi = pi + parcela
	i = i + 1
print(pi)	
-- OUTPUT:
2.977777777777778
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:24:06) 
-- CODE:
n = int(input("Digite um numero: "))
pi = 3
i=1
while(i < n):
	d = (2*n)*(2*n-1)*(2*n-2)
	parcela = (4/d)*(-1)**i
	pi = pi + parcela
	i = i + 1
print(pi)	
-- OUTPUT:
3.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:24:47) 
-- CODE:
n = int(input("Digite um numero: "))
pi = 3
i=1
while(i < n):
	d = (2*n)*(2*n-1)*(2*n-2)
	parcela = (4/d)*((-1)**i)
	pi = pi + parcela
	i = i + 1
print(pi)	
-- OUTPUT:
3.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:25:20) 
-- CODE:
n = int(input("Digite um numero: "))
pi = 3
i=1
while(i < n):
	d = (2*n)*(2*n-1)*(2*n-2)
	parcela = (4/d)*((-1)**i)
	pi = pi + parcela
	i = i + 1
	print(d)
	print(parcela)
	print(pi)
print(pi)	
-- OUTPUT:
720
-0.005555555555555556
2.9944444444444445
720
0.005555555555555556
3.0
720
-0.005555555555555556
2.9944444444444445
720
0.005555555555555556
3.0
3.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:25:34) 
-- CODE:
n = int(input("Digite um numero: "))
pi = 3
i=1
while(i < n):
	d = (2*n)*(2*n-1)*(2*n-2)
	parcela = (4/d)*((-1)**i)
	pi = pi + parcela
	i = i + 1
	print(d)
	print(parcela)
	print(pi)
print(pi)	
-- OUTPUT:
720
-0.005555555555555556
2.9944444444444445
720
0.005555555555555556
3.0
720
-0.005555555555555556
2.9944444444444445
720
0.005555555555555556
3.0
3.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:26:36) 
-- CODE:
n = int(input("Digite um numero: "))
pi = 3
i=1
while(i < n):
	d = (2*n)*(2*n-1)*(2*n-2)
	parcela = (4/d)*((-1)**i)*(-1)
	pi = pi + parcela
	i = i + 1
	print(d)
	print(parcela)
	print(pi)
print(pi)	
-- OUTPUT:
720
0.005555555555555556
3.0055555555555555
720
-0.005555555555555556
3.0
720
0.005555555555555556
3.0055555555555555
720
-0.005555555555555556
3.0
3.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:26:54) 
-- CODE:
n = int(input("Digite um numero: "))
pi = 3
i=1
while(i < n):
	d = (2*n)*(2*n-1)*(2*n-2)
	parcela = (4/d)*((-1)**i)*(-1)
	pi = pi + parcela
	i = i + 1
	print(d)
	print(parcela)
	print(pi)
print(pi)	
-- OUTPUT:
720
0.005555555555555556
3.0055555555555555
720
-0.005555555555555556
3.0
720
0.005555555555555556
3.0055555555555555
720
-0.005555555555555556
3.0
3.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:38:58) 
-- CODE:
n = int(input("Digite um numero: "))
pi = 3
i=1
while(i < n):
	d = (2*n)*(2*n-1)*(2*n-2)
	parcela = (4/d)*((-1)**i)*(-1)
	pi = pi + parcela
	i = i + 1
	print(d)
	print(parcela)
	print(pi)
print(pi)	
-- OUTPUT:
720
0.005555555555555556
3.0055555555555555
720
-0.005555555555555556
3.0
720
0.005555555555555556
3.0055555555555555
720
-0.005555555555555556
3.0
3.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:39:08) 
-- CODE:
n = int(input("Digite um numero: "))
pi = 3
i=1
while(i < n):
	d = (2*n)*(2*n-1)*(2*n-2)
	parcela = (4/d)*((-1)**i)*(-1)
	pi = pi + parcela
	i = i + 1
	print(d)
	print(parcela)
	print(pi)
print(pi)	
-- OUTPUT:
720
0.005555555555555556
3.0055555555555555
720
-0.005555555555555556
3.0
720
0.005555555555555556
3.0055555555555555
720
-0.005555555555555556
3.0
3.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:39:19) 
-- CODE:
n = int(input("Digite um numero: "))
pi = 3
i=1
while(i < n):
	d = (2*n)*(2*n-1)*(2*n-2)
	parcela = (4/d)*((-1)**i)*(-1)
	pi = pi + parcela
	i = i + 1
	print(d)
	print(parcela)
	print(pi)
print(pi)	
-- OUTPUT:
720
0.005555555555555556
3.0055555555555555
720
-0.005555555555555556
3.0
720
0.005555555555555556
3.0055555555555555
720
-0.005555555555555556
3.0
3.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:39:43) 
-- CODE:
n = int(input("Digite um numero: "))
pi = 3
i=1
while(i < n):
	d = (2*n)*(2*n-1)*(2*n-2)
	parcela = (4/d)*((-1)**i)*(-1)
	pi = pi + parcela
	i = i + 1
	print(d)
	print(parcela)
	print(pi)
print(pi)	
-- OUTPUT:
720
0.005555555555555556
3.0055555555555555
720
-0.005555555555555556
3.0
720
0.005555555555555556
3.0055555555555555
720
-0.005555555555555556
3.0
3.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:53:51) 
-- CODE:
n = int(input("Digite um numero: "))
pi = 0
i = 0
while(i < n):
	d = (2*n)*(2*n-1)*(2*n-2)
	parcela = (4*(-1)**i)/d
	pi = pi + parcela
	i = i + 1
	print(d)
	print(parcela)
	
print(pi)	
-- OUTPUT:
720
0.005555555555555556
720
-0.005555555555555556
720
0.005555555555555556
720
-0.005555555555555556
720
0.005555555555555556
0.005555555555555556
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:54:42) 
-- CODE:
n = int(input("Digite um numero: "))
pi = 0
i = 0
while(i < n):
	d = (2*n)*(2*n-1)*(2*n-2)
	parcela = (4*(-1)**i)/d
	pi = pi + parcela
	i = i + 1
	print(d)
	print(parcela)
	
print(pi)	
-- OUTPUT:
720
0.005555555555555556
720
-0.005555555555555556
720
0.005555555555555556
720
-0.005555555555555556
720
0.005555555555555556
0.005555555555555556
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:55:39) 
-- CODE:
n = int(input("Digite um numero: "))
pi = 0
i = 0
while(i < n):
	d = (2*n)*(2*n-1)*(2*n-2)
	#parcela = (4*(-1)**i)
	#pi = pi + parcela
	#i = i + 1
	print(d)
	#print(parcela)
	
#print(pi)	
-- OUTPUT:
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 19:07:53) 
-- CODE:
n = int(input("Digite um numero: "))
pi = 0
i = 0
while(i < n):
	if (i <= 1):
		pi = 3
	else:
		d = (2*n)*(2*n-1)*(2*n-2)
		parcela = (4*(-1)**i)/d
		pi = pi + parcela
		i = i + 1
			
print(pi)	
-- OUTPUT:
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
720
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 19:09:03) 
-- CODE:
n = int(input("Digite um numero: "))
pi = 0
i = 0
while(i < n):
	if (i <= 1):
		print(3)
	else:
		d = (2*n)*(2*n-1)*(2*n-2)
		parcela = (4*(-1)**i)/d
		pi = pi + parcela
		i = i + 1
			
print(pi)	
-- OUTPUT:
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 19:41:32) 
-- CODE:
n = int(input("Digite um numero: "))
pi = 3
i = 1
while(i < n):
	d = (2*i)*(2*i+2)*(2*i+1)
	parcela = (4*(-1)**i)/d
	pi = pi + parcela
	i = i + 1
		
print(pi)	
-- OUTPUT:
2.8603174603174604
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 19:42:02) 
-- CODE:
n = int(input("Digite um numero: "))
pi = 3
i = 1
while(i < n):
	d = (2*i)*(2*i+2)*(2*i+1)
	parcela = (4*(-1)**i)/d
	pi = pi + parcela
	i = i + 1
		
print(pi)	
-- OUTPUT:
2.8603174603174604
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 19:42:31) 
-- CODE:
n = int(input("Digite um numero: "))
pi = 3
i = 1
while(i < n):
	d = (2*i)*(2*i+2)*(2*i+1)
	parcela = (4*(-1)**i)/d
	pi = pi + parcela
	i = i + 1
		
	print(pi)	
-- OUTPUT:
2.8333333333333335
2.8666666666666667
2.854761904761905
2.8603174603174604
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 19:44:26) 
-- CODE:
n = int(input("Digite um numero: "))
pi = 3
i = 1
while(i < n):
	d = (2*i)*(2*i+2)*(2*i+1)
	parcela = -1*((4*(-1)**i)/d)
	pi = pi + parcela
	i = i + 1
		
	print(pi)	
-- OUTPUT:
3.1666666666666665
3.1333333333333333
3.145238095238095
3.1396825396825396
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 19:44:46) 
-- CODE:
n = int(input("Digite um numero: "))
pi = 3
i = 1
while(i < n):
	d = (2*i)*(2*i+2)*(2*i+1)
	parcela = -1*((4*(-1)**i)/d)
	pi = pi + parcela
	i = i + 1
		
	print(pi)	
-- OUTPUT:
3.1666666666666665
3.1333333333333333
3.145238095238095
3.1396825396825396
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 19:45:57) 
-- CODE:
n = int(input("Digite um numero: "))
pi = 3
i = 1
while(i < n):
	d = (2*i)*(2*i+2)*(2*i+1)
	parcela = -1*((4*(-1)**i)/d)
	pi = pi + parcela
	i = i + 1
		
print(round(pi,8))	
-- OUTPUT:
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 19:46:36) 
-- CODE:
n = int(input("Digite um numero: "))
pi = 3
i = 1
while(i < n):
	d = (2*i)*(2*i+2)*(2*i+1)
	parcela = -1*((4*(-1)**i)/d)
	pi = pi + parcela
	i = i + 1
		
print(round(pi,8))	
-- OUTPUT:
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 19:46:47) 
-- CODE:
n = int(input("Digite um numero: "))
pi = 3
i = 1
while(i < n):
	d = (2*i)*(2*i+2)*(2*i+1)
	parcela = -1*((4*(-1)**i)/d)
	pi = pi + parcela
	i = i + 1
		
print(round(pi,8))	
-- OUTPUT:
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 19:47:13) 
-- CODE:
n = int(input("Digite um numero: "))
pi = 3.0
i = 1
while(i < n):
	d = (2*i)*(2*i+2)*(2*i+1)
	parcela = -1*((4*(-1)**i)/d)
	pi = pi + parcela
	i = i + 1
		
print(round(pi,8))	
-- OUTPUT:
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-11 19:47:25) 
-- CODE:
n = int(input("Digite um numero: "))
pi = 3.0
i = 1
while(i < n):
	d = (2*i)*(2*i+2)*(2*i+1)
	parcela = -1*((4*(-1)**i)/d)
	pi = pi + parcela
	i = i + 1
		
print(round(pi,8))	
-- EXECUTION TIME:
0.181841
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.14155633
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:39:14) 
-- CODE:
#Entrada dos dados:
n = int(input("Digite um numero: "))
pi = 3.0 #primeiro valor da serie, se o usuario pedir 1 termo, o laco nao eh executado
#tambe é acumuladora do valor aproximado, a partir do primeiro termo
i = 1 #acumuladora dos i termos a parti do primeiro
while(i < n): # condicao do laco, i termos menor do que o pedido pelo usuario
	d = (2*i)*(2*i+2)*(2*i+1) #denominador cresce em funcao do i
	parcela = -1*((4*(-1)**i)/d) #
	pi = pi + parcela
	i = i + 1
	print(d)
	print(parcela)
print(round(pi,8))	
-- OUTPUT:
24
0.16666666666666666
120
-0.03333333333333333
336
0.011904761904761904
720
-0.005555555555555556
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:40:04) 
-- CODE:
#Entrada dos dados:
n = int(input("Digite um numero: "))
pi = 3.0 #primeiro valor da serie, se o usuario pedir 1 termo, o laco nao eh executado
#tambe é acumuladora do valor aproximado, a partir do primeiro termo
i = 1 #acumuladora dos i termos a parti do primeiro
while(i < n): # condicao do laco, i termos menor do que o pedido pelo usuario
	d = (2*i)*(2*i+2)*(2*i+1) #denominador cresce em funcao do i
	parcela = -1*((4*(-1)**i)/d) #
	pi = pi + parcela
	i = i + 1
	print(d)
	print(parcela)
print(round(pi,8))	
-- OUTPUT:
24
0.16666666666666666
120
-0.03333333333333333
336
0.011904761904761904
720
-0.005555555555555556
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
