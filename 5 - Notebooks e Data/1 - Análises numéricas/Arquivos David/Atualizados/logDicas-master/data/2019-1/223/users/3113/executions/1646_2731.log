== TEST (2019-04-16 13:00:20) 
-- CODE:
a=float(input(""))
b=float(input(""))
c=float(input(""))

C=(x-a)**2+(y-b)**2=r**2

Q1=X>0 and Y>0
Q2=Y>0 and X<0
Q3=X<0 and Y<0
Q4=Y<0 and X>0

if(C >= Q1 or C1 >= Q2):
	d="Superiores"
else:
	d="Inferiores"
print(d)
-- ERROR:
File "XXXX", line 5
    C=(x-a)**2+(y-b)**2=r**2
     ^
SyntaxError: can't assign to operator
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 13:00:36) 
-- CODE:
a=float(input(""))
b=float(input(""))
r=float(input(""))

C=(x-a)**2+(y-b)**2=r**2

Q1=X>0 and Y>0
Q2=Y>0 and X<0
Q3=X<0 and Y<0
Q4=Y<0 and X>0

if(C >= Q1 or C1 >= Q2):
	d="Superiores"
else:
	d="Inferiores"
print(d)
-- ERROR:
File "XXXX", line 5
    C=(x-a)**2+(y-b)**2=r**2
     ^
SyntaxError: can't assign to operator
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 13:02:49) 
-- CODE:
a=float(input(""))
b=float(input(""))
r=float(input(""))

C=(x-a)**2+(y-b)**2
C1=C-r**2

Q1=X>0 and Y>0
Q2=Y>0 and X<0
Q3=X<0 and Y<0
Q4=Y<0 and X>0

if(C1 >= Q1 or C1 >= Q2):
	d="Superiores"
else:
	d="Inferiores"
print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    C=(x-a)**2+(y-b)**2
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 13:05:33) 
-- CODE:
a=float(input(""))
b=float(input(""))
r=float(input(""))

C=a**2+b**2
C1=C-r**2

Q1=X>0 and Y>0
Q2=Y>0 and X<0
Q3=X<0 and Y<0
Q4=Y<0 and X>0

if(C1 >= Q1 or C1 >= Q2):
	d="Superiores"
else:
	d="Inferiores"
print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    Q1=X>0 and Y>0
NameError: name 'X' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 13:05:34) 
-- CODE:
a=float(input(""))
b=float(input(""))
r=float(input(""))

C=a**2+b**2
C1=C-r**2

Q1=X>0 and Y>0
Q2=Y>0 and X<0
Q3=X<0 and Y<0
Q4=Y<0 and X>0

if(C1 >= Q1 or C1 >= Q2):
	d="Superiores"
else:
	d="Inferiores"
print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    Q1=X>0 and Y>0
NameError: name 'X' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 13:17:47) 
-- CODE:
a=float(input(""))
b=float(input(""))
r=float(input(""))
X=0
Y=0

Q1=X>0 and Y>0
Q2=Y>0 and X<0
Q3=X<0 and Y<0
Q4=Y<0 and X>0

if(C1 > 0 and C1 >0 or C1>0 and C1<0):
	d="Superiores"
else:
	d="Inferiores"
print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    if(C1 > 0 and C1 >0 or C1>0 and C1<0):
NameError: name 'C1' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 13:23:29) 
-- CODE:
a=float(input(""))
b=float(input(""))
r=float(input(""))
x=0
y=0

Q1=a>x and b>y
Q2=b>y and a<x
Q3=a<x and b<y
Q4=b<y and a>x

C1=(x-a)**2+y-b**2
C=c1-r**2

if(C >Q1 or C>Q2 ):
	d="Superiores"
else:
	d="Inferiores"
print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    C=c1-r**2
NameError: name 'c1' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 13:23:53) 
-- CODE:
a=float(input(""))
b=float(input(""))
r=float(input(""))
x=0
y=0

Q1=a>x and b>y
Q2=b>y and a<x
Q3=a<x and b<y
Q4=b<y and a>x

C1=(x-a)**2+y-b**2
C=C1-r**2

if(C >Q1 or C>Q2 ):
	d="Superiores"
else:
	d="Inferiores"
print(d)
-- OUTPUT:
Superiores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 13:24:02) 
-- CODE:
a=float(input(""))
b=float(input(""))
r=float(input(""))
x=0
y=0

Q1=a>x and b>y
Q2=b>y and a<x
Q3=a<x and b<y
Q4=b<y and a>x

C1=(x-a)**2+y-b**2
C=C1-r**2

if(C >Q1 or C>Q2 ):
	d="Superiores"
else:
	d="Inferiores"
print(d)
-- EXECUTION TIME:
0.17485
-- TEST CASE 1:
---- input:
4.5
-2.2
3
---- correct output:
Inferiores
---- user output:
Superiores
-- TEST CASE 2:
---- input:
0.1
0.1
3
---- correct output:
Superiores
---- user output:
Inferiores
-- TEST CASE 3:
---- input:
-4.5
2.2
1
---- correct output:
Superiores
---- user output:
Superiores
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 13:24:17) 
-- CODE:
a=float(input(""))
b=float(input(""))
r=float(input(""))
x=0
y=0

Q1=a>x and b>y
Q2=b>y and a<x
Q3=a<x and b<y
Q4=b<y and a>x

C1=(x-a)**2+(y-b)**2
C=C1-r**2

if(C >Q1 or C>Q2 ):
	d="Superiores"
else:
	d="Inferiores"
print(d)
-- OUTPUT:
Superiores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 13:25:40) 
-- CODE:
a=float(input(""))
b=float(input(""))
r=float(input(""))
x=0
y=0

Q1=a>x and b>y
Q2=b>y and a<x
Q3=a<x and b<y
Q4=b<y and a>x

C1=(x-a)**2+(y-b)**2
C=C1-r**2

if(a and b >Q1 or a and b>Q2 ):
	d="Superiores"
else:
	d="Inferiores"
print(d)
-- OUTPUT:
Inferiores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 13:25:49) 
-- CODE:
a=float(input(""))
b=float(input(""))
r=float(input(""))
x=0
y=0

Q1=a>x and b>y
Q2=b>y and a<x
Q3=a<x and b<y
Q4=b<y and a>x

C1=(x-a)**2+(y-b)**2
C=C1-r**2

if(a and b >Q1 or a and b>Q2 ):
	d="Superiores"
else:
	d="Inferiores"
print(d)
-- EXECUTION TIME:
0.211706
-- TEST CASE 1:
---- input:
4.5
-2.2
3
---- correct output:
Inferiores
---- user output:
Inferiores
-- TEST CASE 2:
---- input:
0.1
0.1
3
---- correct output:
Superiores
---- user output:
Superiores
-- TEST CASE 3:
---- input:
-4.5
2.2
1
---- correct output:
Superiores
---- user output:
Superiores
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 13:26:03) 
-- CODE:
a=float(input(""))
b=float(input(""))
r=float(input(""))
x=0
y=0

Q1=a>x and b>y
Q2=b>y and a<x
Q3=a<x and b<y
Q4=b<y and a>x


if(a and b >Q1 or a and b>Q2 ):
	d="Superiores"
else:
	d="Inferiores"
print(d)
-- OUTPUT:
Inferiores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 13:26:16) 
-- CODE:
a=float(input(""))
b=float(input(""))
r=float(input(""))
x=0
y=0

Q1=a>x and b>y
Q2=b>y and a<x
Q3=a<x and b<y
Q4=b<y and a>x


if(a and b >Q1 or a and b>Q2 ):
	d="Superiores"
else:
	d="Inferiores"
print(d)
-- EXECUTION TIME:
0.136841
-- TEST CASE 1:
---- input:
4.5
-2.2
3
---- correct output:
Inferiores
---- user output:
Inferiores
-- TEST CASE 2:
---- input:
0.1
0.1
3
---- correct output:
Superiores
---- user output:
Superiores
-- TEST CASE 3:
---- input:
-4.5
2.2
1
---- correct output:
Superiores
---- user output:
Superiores
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
