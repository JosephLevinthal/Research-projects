== TEST (2019-04-30 17:17:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x= float(input("var1: "))
a= float(input("var2: "))
b= float(input("var3: "))

if (a<=x and x<=b):
	print("x pertence ao intervalo a, b")
	
elif (not a<=x and not x<=b):
	print("x nao pertence ao intervalo a, b")
	
else (b<=a):
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 15
    else (b<=a):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:18:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x= float(input("var1: "))
a= float(input("var2: "))
b= float(input("var3: "))

if (a<=x and x<=b):
	print("x pertence ao intervalo a, b")
	
elif (not a<=x and not x<=b):
	print("x nao pertence ao intervalo a, b")
	
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.260309
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
Entradas invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
x nao pertence ao intervalo a, b
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
x pertence ao intervalo a, b
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:20:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x= float(input("var1: "))
a= float(input("var2: "))
b= float(input("var3: "))

if (a<=x and x<=b):
	print("x pertence ao intervalo a, b")
	
elif (not a<=x and not x<=b):
	print("x nao pertence ao intervalo a, b")
	
elif (b<=a):
	print("Entradas a e b invalidas")
	
else:
	ptint("nao existe")
-- EXECUTION TIME:
0.13732
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1103/main.py", line 19, in <module>
    ptint("nao existe")
NameError: name 'ptint' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:20:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x= float(input("var1: "))
a= float(input("var2: "))
b= float(input("var3: "))

if (a<=x and x<=b):
	print("x pertence ao intervalo a, b")
	
elif (not a<=x and not x<=b):
	print("x nao pertence ao intervalo a, b")
	
elif (b<=a):
	print("Entradas a e b invalidas")
	
else:
	ptint("nao existe")
-- EXECUTION TIME:
0.205785
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1103/main.py", line 19, in <module>
    ptint("nao existe")
NameError: name 'ptint' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:20:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x= float(input("var1: "))
a= float(input("var2: "))
b= float(input("var3: "))

if (a<=x and x<=b):
	print("x pertence ao intervalo a, b")
	
elif (not a<=x and not x<=b):
	print("x nao pertence ao intervalo a, b")
	
elif (b<=a):
	print("Entradas a e b invalidas")
	
else:
	ptint("nao existe")
-- EXECUTION TIME:
0.264001
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1103/main.py", line 19, in <module>
    ptint("nao existe")
NameError: name 'ptint' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:20:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x= float(input("var1: "))
a= float(input("var2: "))
b= float(input("var3: "))

if (a<=x and x<=b):
	print("x pertence ao intervalo a, b")
	
elif (not a<=x and not x<=b):
	print("x nao pertence ao intervalo a, b")
	
elif (b<=a):
	print("Entradas a e b invalidas")
	
else:
	ptint("nao existe")
-- EXECUTION TIME:
0.179783
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
x pertence ao intervalo a, b
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
x nao pertence ao intervalo a, b
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:20:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x= float(input("var1: "))
a= float(input("var2: "))
b= float(input("var3: "))

if (a<=x and x<=b):
	print("x pertence ao intervalo a, b")
	
elif (not a<=x and not x<=b):
	print("x nao pertence ao intervalo a, b")
	
elif (b<=a):
	print("Entradas a e b invalidas")
	
else:
	ptint("nao existe")
-- EXECUTION TIME:
0.282035
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1103/main.py", line 19, in <module>
    ptint("nao existe")
NameError: name 'ptint' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:20:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x= float(input("var1: "))
a= float(input("var2: "))
b= float(input("var3: "))

if (a<=x and x<=b):
	print("x pertence ao intervalo a, b")
	
elif (not a<=x and not x<=b):
	print("x nao pertence ao intervalo a, b")
	
elif (b<=a):
	print("Entradas a e b invalidas")
	
else:
	ptint("nao existe")
-- EXECUTION TIME:
0.305378
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1679/1103/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:20:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x= float(input("var1: "))
a= float(input("var2: "))
b= float(input("var3: "))

if (a<=x and x<=b):
	print("x pertence ao intervalo a, b")
	
elif (not a<=x and not x<=b):
	print("x nao pertence ao intervalo a, b")
	
elif (b<=a):
	print("Entradas a e b invalidas")
	
else:
	ptint("nao existe")
-- EXECUTION TIME:
0.272863
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
x pertence ao intervalo a, b
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:

-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
x pertence ao intervalo a, b
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:20:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x= float(input("var1: "))
a= float(input("var2: "))
b= float(input("var3: "))

if (a<=x and x<=b):
	print("x pertence ao intervalo a, b")
	
elif (not a<=x and not x<=b):
	print("x nao pertence ao intervalo a, b")
	
elif (b<=a):
	print("Entradas a e b invalidas")
	
else:
	ptint("nao existe")
-- EXECUTION TIME:
0.388783
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
x pertence ao intervalo a, b
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:

-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
x pertence ao intervalo a, b
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:20:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x= float(input("var1: "))
a= float(input("var2: "))
b= float(input("var3: "))

if (a<=x and x<=b):
	print("x pertence ao intervalo a, b")
	
elif (not a<=x and not x<=b):
	print("x nao pertence ao intervalo a, b")
	
elif (b<=a):
	print("Entradas a e b invalidas")
	
else:
	ptint("nao existe")
-- EXECUTION TIME:
0.429137
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
x nao pertence ao intervalo a, b
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
x pertence ao intervalo a, b
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
x pertence ao intervalo a, b
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:27:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x= float(input("var1: "))
a= float(input("var2: "))
b= float(input("var3: "))

if (a<=x and x<=b):
	print( "pertence ao intervalo" a, b)
	
elif (not a<=x and not x<=b):
	print("x nao pertence ao intervalo" a, b)
	
else:
	print("Entradas", a,"e",b, "invalidas")
	
-- EXECUTION TIME:
0.166808
-- ERROR:
  File "/home/codebench/codes/1679/1103/main.py", line 10
    print( "pertence ao intervalo" a, b)
                                   ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:27:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x= float(input("var1: "))
a= float(input("var2: "))
b= float(input("var3: "))

if (a<=x and x<=b):
	print(x, "pertence ao intervalo" a, b)
	
elif (not a<=x and not x<=b):
	print(x "nao pertence ao intervalo" a, b)
	
else:
	print("Entradas", a,"e",b, "invalidas")
	
-- EXECUTION TIME:
0.223378
-- ERROR:
  File "/home/codebench/codes/1679/1103/main.py", line 10
    print(x, "pertence ao intervalo" a, b)
                                     ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:28:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x= float(input("var1: "))
a= float(input("var2: "))
b= float(input("var3: "))

if (a<=x and x<=b):
	print(x, "pertence ao intervalo" a, b)
	
elif (not a<=x and not x<=b):
	print(x, "nao pertence ao intervalo" a, b)
	
else:
	print("Entradas", a,"e",b, "invalidas")
	
-- EXECUTION TIME:
0.186141
-- ERROR:
  File "/home/codebench/codes/1679/1103/main.py", line 10
    print(x, "pertence ao intervalo" a, b)
                                     ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:29:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x= float(input("var1: "))
a= float(input("var2: "))
b= float(input("var3: "))

if (a<=x and x<=b):
	print(x, "pertence ao intervalo", a, b)
	
elif (not a<=x and not x<=b):
	print(x, "nao pertence ao intervalo",a, b)
	
else:
	print("Entradas", a,"e",b, "invalidas")
	
-- EXECUTION TIME:
0.153053
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
Entradas 3.0 e 4.0 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:30:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x= float(input("var1: "))
a= float(input("var2: "))
b= float(input("var3: "))

if (a<=x and x<=b):
	print(x, "pertence ao intervalo", a,",", b)
	
elif (not a<=x and not x<=b):
	print(x, "nao pertence ao intervalo",a,"," ,b)
	
else:
	print("Entradas", a,"e",b, "invalidas")
	
-- EXECUTION TIME:
0.146486
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
Entradas 3.0 e 4.0 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:31:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x= float(input("var1: "))
a= float(input("var2: "))
b= float(input("var3: "))

if (a<=x and x<=b):
	print(x, "pertence ao intervalo", a,",",b)
	
elif (not a<=x and not x<=b):
	print(x, "nao pertence ao intervalo",a,",",b)
	
else:
	print("Entradas", a,"e",b, "invalidas")
	
-- EXECUTION TIME:
0.205486
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
var1: var2: var3: Entradas 3.0 e 4.0 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
var1: var2: var3: 5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
var1: var2: var3: 6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:31:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x= float(input("var1: "))
a= float(input("var2: "))
b= float(input("var3: "))

if (a<=x and x<=b):
	print(x, "pertence ao intervalo", a,",",b)
	
elif (not a<=x and not x<=b):
	print(x, "nao pertence ao intervalo",a,",",b)
	
else:
	print("Entradas",a,"e",b, "invalidas")
	
-- EXECUTION TIME:
0.164828
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
Entradas 3.0 e 4.0 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:31:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x= float(input("var1: "))
a= float(input("var2: "))
b= float(input("var3: "))

if (a<=x and x<=b):
	print(x, "pertence ao intervalo",a,",",b)
	
elif (not a<=x and not x<=b):
	print(x, "nao pertence ao intervalo",a,",",b)
	
else:
	print("Entradas",a,"e",b, "invalidas")
	
-- EXECUTION TIME:
0.198092
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
Entradas 3.0 e 4.0 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:32:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x= float(input("var1: "))
a= float(input("var2: "))
b= float(input("var3: "))

if (a<=x and x<=b):
	print(x, "pertence ao intervalo",a, "," ,b)
	
elif (not a<=x and not x<=b):
	print(x, "nao pertence ao intervalo",a, "," ,b)
	
else:
	print("Entradas",a,"e",b, "invalidas")
	
-- EXECUTION TIME:
0.144928
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
Entradas 3.0 e 4.0 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:32:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x= float(input("var1: "))
a= float(input("var2: "))
b= float(input("var3: "))

if (a<=x and x<=b):
	print(x, "pertence ao intervalo",a, "," ,b)
	
elif (not a<=x and not x<=b):
	print(x, "nao pertence ao intervalo",a, "," ,b)
	
else:
	print("Entradas",a, "e" ,b, "invalidas")
	
-- EXECUTION TIME:
0.143213
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
Entradas 3.0 e 4.0 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
Entradas 3.0 e 4.0 invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:32:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x= float(input("var1: "))
a= float(input("var2: "))
b= float(input("var3: "))

if (a<=x and x<=b):
	print(x, "pertence ao intervalo",a, "," ,b)
	
elif (not a<=x and not x<=b):
	print(x, "nao pertence ao intervalo",a, "," ,b)
	
else:
	print("Entradas",a, "e" ,b, "invalidas")
	
-- EXECUTION TIME:
0.15992
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
Entradas 3.0 e 4.0 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:41:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x= float(input("var1: "))
a= float(input("var2: "))
b= float(input("var3: "))

if (b<=a):
	print("Entradas",a, "e" ,b, "invalidas")

elif (a<=x and x<=b):
	print(x, "pertence ao intervalo",a, "," ,b)
	
else:
	print(x, "pertence ao intervalo",a, "," ,b)
	
-- EXECUTION TIME:
0.219097
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:41:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x= float(input("var1: "))
a= float(input("var2: "))
b= float(input("var3: "))

if (b<=a):
	print("Entradas",a, "e" ,b, "invalidas")

elif (a<=x and x<=b):
	print(x, "pertence ao intervalo",a, "," ,b)
	
else:
	print(x, "nao pertence ao intervalo",a, "," ,b)
	
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:42:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x= float(input("var1: "))
a= float(input("var2: "))
b= float(input("var3: "))

if (b<=a):
	print("Entradas",a, "e" ,b, "invalidas")

elif (a<=x and x<=b):
	print(x, "pertence ao intervalo",a, "," ,b)
	
else:
	print(x, "nao pertence ao intervalo",a, "," ,b)
	
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:43:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x= float(input("var1: "))
a= float(input("var2: "))
b= float(input("var3: "))

if (b<=a):
	print("Entradas",a, "e" ,b, "invalidas")

elif (a<=x and x<=b):
	print(x, "pertence ao intervalo",a, "," ,b)
	
else:
	print(x, "nao pertence ao intervalo",a, "," ,b)
	
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:43:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x= float(input("var1: "))
a= float(input("var2: "))
b= float(input("var3: "))

if (b<=a):
	print("Entradas",a, "e" ,b, "invalidas")

elif (a<=x and x<=b):
	print(x, "pertence ao intervalo",a, "," ,b)
	
else:
	print(x, "nao pertence ao intervalo",a, "," ,b)
	
-- EXECUTION TIME:
0.197836
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 15:47:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x= float(input("var1: "))
a= float(input("var2: "))
b= float(input("var3: "))

if (b<=a):
	print("Entradas",a, "e" ,b, "invalidas")

elif (a<=x and x<=b):
	print(x, "pertence ao intervalo",a, "," ,b)
	
else:
	print(x, "nao pertence ao intervalo",a, "," ,b)
	
-- EXECUTION TIME:
0.136853
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 15:47:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x= float(input("var1: "))
a= float(input("var2: "))
b= float(input("var3: "))

if (b<=a):
	print("Entradas",a, "e" ,b, "invalidas")

elif (a<=x and x<=b):
	print(x, "pertence ao intervalo",a, "," ,b)
	
else:
	print(x, "nao pertence ao intervalo",a, "," ,b)
	
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
