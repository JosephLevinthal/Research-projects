== TEST (2019-03-26 17:34:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio=input("valor do raio:")
area do circulo=(pi*riao**2)
-- ERROR:
File "XXXX", line 6
    area do circulo=(pi*riao**2)
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:34:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio=input("valor do raio:")
area do circulo=(pi*raio**2)
-- ERROR:
File "XXXX", line 6
    area do circulo=(pi*raio**2)
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:38:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math 
print(pi)
raio=input("valor do raio:")
area do circulo=input(pi*raio**2)
-- ERROR:
File "XXXX", line 7
    area do circulo=input(pi*raio**2)
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:38:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math 
print(pi)
raio=input("valor do raio:")
area do circulo=input(round(pi*raio**2))
-- ERROR:
File "XXXX", line 7
    area do circulo=input(round(pi*raio**2))
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:39:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math 
print(pi)
raio=input("valor do raio:")
area_do_circulo=input(round(pi*raio**2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(pi)
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:39:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math 
raio=input("valor do raio:")
area_do_circulo=input(round(pi*raio**2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    area_do_circulo=input(round(pi*raio**2))
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:40:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math 
raio=input("valor do raio:")
area_do_circulo=input(round(pi*raio**2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    area_do_circulo=input(round(pi*raio**2))
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:40:40) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
raio=input("valor do raio:")
area_do_circulo=input(round(math.pi*raio**2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    area_do_circulo=input(round(math.pi*raio**2))
TypeError: unsupported operand type(s) for ** or pow(): 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:41:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
raio=float(input("valor do raio:"))
area_do_circulo=input(round(math.pi*raio**2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    area_do_circulo=input(round(math.pi*raio**2))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:42:05) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
raio=float(input("valor do raio:"))
area_do_circulo=input(round(math.pi*raio**2,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    area_do_circulo=input(round(math.pi*raio**2,3))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:44:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
raio=float(input("valor do raio:"))
area_do_circulo=input(round(pi*raio**2,3))
volume=inputround(4/3*pi*raio**2)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    area_do_circulo=input(round(pi*raio**2,3))
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:44:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
raio=float(input("valor do raio:"))
area_do_circulo=input(round(pi*raio**2,3))
volume=input(round(4/3*pi*raio**2)

-- ERROR:
File "XXXX", line 8
    
                                      ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:45:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
raio=float(input("valor do raio:"))
area_do_circulo=input(round(pi*raio**2,3))
volume=input(round(4/3*pi*raio**2,3))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    area_do_circulo=input(round(pi*raio**2,3))
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:45:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
raio=float(input("valor do raio:"))
area_do_circulo=input(round(math.pi*raio**2,3))
volume=input(round(4/3*pi*raio**3,3))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    area_do_circulo=input(round(math.pi*raio**2,3))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:46:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
raio=float(input("valor do raio:"))
area_do_circulo=input(round(math.pi*raio**2,3))
volume=input(round(4/3*math.pi*raio**3,3))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    area_do_circulo=input(round(math.pi*raio**2,3))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:46:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
raio=float(input("valor do raio:"))
area_do_circulo=input(round(math.pi*raio**2,3))
volume=input(round(4/3*math.pi*raio**3,3))

-- EXECUTION TIME:
0.138867
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1595/825/main.py", line 6, in <module>
    area_do_circulo=input(round(math.pi*raio**2,3))
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:46:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
raio=float(input("valor do raio:"))
area_=input(round(math.pi*raio**2,3))
volume=input(round(4/3*math.pi*raio**3,3))
print(area)
print(volume)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    area_=input(round(math.pi*raio**2,3))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:47:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
raio=float(input("valor do raio:"))
area=input(round(math.pi*raio**2,3))
volume=input(round(4/3*math.pi*raio**3,3))
print(area)
print(volume)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    area=input(round(math.pi*raio**2,3))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:47:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
raio=float(input("valor do raio:"))
area=input(round(math.pi*raio**2,3))
volume=input(round(4/3*math.pi*raio**3,3))
print(area)
print(volume)
-- EXECUTION TIME:
0.122912
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1595/825/main.py", line 6, in <module>
    area=input(round(math.pi*raio**2,3))
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:47:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
raio=float(input("valor do raio:"))
area=input(round(math.pi*raio**2,3))
volume=input(round(4/3*math.pi*raio**3,3))
print(area)
print(volume)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    area=input(round(math.pi*raio**2,3))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:47:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
raio=float(input("valor do raio:"))
area=input(round(math.pi*raio**2,3))
volume=input(round(4/3*math.pi*raio**3,3))
print(area)
print(volume)
-- EXECUTION TIME:
0.192588
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1595/825/main.py", line 6, in <module>
    area=input(round(math.pi*raio**2,3))
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:48:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
raio=float(input("valor do raio:"))
area=input(round(math.pi*raio**2, 3))
volume=input(round(4/3*math.pi*raio**3, 3))
print(area)
print(volume)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    area=input(round(math.pi*raio**2, 3))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:48:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
raio=float(input("valor do raio:"))
area=input(round(math.pi*raio**2, 3))
volume=input(round(4/3*math.pi*raio**3, 3))
print(area)
print(volume)
-- EXECUTION TIME:
0.120581
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1595/825/main.py", line 6, in <module>
    area=input(round(math.pi*raio**2, 3))
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:48:40) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
raio=float(input("valor do raio:"))
area=float(round(math.pi*raio**2,3))
volume=float(round(4/3*math.pi*raio**3,3))
print(area)
print(volume)
-- OUTPUT:
63.617
381.704
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:48:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
raio=float(input("valor do raio:"))
area=float(round(math.pi*raio**2,3))
volume=float(round(4/3*math.pi*raio**3,3))
print(area)
print(volume)
-- EXECUTION TIME:
0.170698
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.617
381.704
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.388
7871.076
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
