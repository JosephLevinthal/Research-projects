== SUBMITION (2019-07-08 21:29:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra = float(input('Valor da compra: '))

if compra>=200:
	print(compra*(5/100))
else: 
	print(compra)
-- EXECUTION TIME:
0.901786
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
10.0045
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
10.0265
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-08 21:29:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra = float(input('Valor da compra: '))

if compra>=200:
	print(compra-(5/100))
else: 
	print(compra)
-- EXECUTION TIME:
0.723769
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
200.04
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
200.48
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-08 21:29:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra = float(input('Valor da compra: '))

if compra>=200:
	print(compra*(5/100))
else: 
	print(compra)
-- OUTPUT:
10.0045
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-08 21:31:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra = float(input('Valor da compra: '))

if compra>=200:
	r = compra*(5/100)
	print(round(r, 2)
else: 
	print(compra)
-- ERROR:
File "XXXX", line 9
    else: 
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-08 21:32:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra = float(input('Valor da compra: '))

if compra>=200:
	r = compra*(5/100)
	print(round(r, 2))
else:
	print(compra)
-- OUTPUT:
10.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-08 21:33:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra = float(input('Valor da compra: '))

if compra>=200:
	r = compra-(5/100)
	print(round(r, 2))
else:
	print(compra)
-- OUTPUT:
200.04
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-08 21:36:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra = float(input('Valor da compra: '))

if compra>=200:
	r = (compra*5)/100
	print(round(r, 2))
else:
	print(compra)
-- OUTPUT:
10.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-08 21:41:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra = float(input('Valor da compra: '))

if compra>=200:
	r = (compra*(5/100))
	print(round(r, 2))
else:
	print(compra)
-- OUTPUT:
10.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-08 21:42:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra = float(input('Valor da compra: '))

if compra>=200:
	r = (compra*(5/100))
	s = compra - r
	print(round(s, 2))
else:
	print(compra)
-- EXECUTION TIME:
0.874322
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.09
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
