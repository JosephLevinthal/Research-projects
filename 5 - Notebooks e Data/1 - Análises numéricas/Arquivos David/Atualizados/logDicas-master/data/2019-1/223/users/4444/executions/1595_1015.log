== TEST (2019-03-26 17:09:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
seq=input(21,1,2)
n1=int(input("num1:  "))
n2=int(input("num2:  "))
n3=int(input("num3:  "))
print(min(n1,n2,n3))
print(min(n1,n2,n3))
print(min(n1+n2+n3)-(min(n1,n2,n3)+max(n1,n2,n3)))
print(max(n1,n2,n3)

-- ERROR:
File "XXXX", line 12
    
                       ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:09:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
seq=input(21,1,2)
n1=int(input("num1:  "))
n2=int(input("num2:  "))
n3=int(input("num3:  "))
print(min(n1,n2,n3))
print(min(n1,n2,n3))
print(min(n1+n2+n3)-(min(n1,n2,n3)+max(n1,n2,n3)))
print(max(n1,n2,n3))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    seq=input(21,1,2)
TypeError: input expected at most 1 arguments, got 3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:10:13) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n1=int(input("num1:  "))
n2=int(input("num2:  "))
n3=int(input("num3:  "))
print(min(n1,n2,n3))
print(min(n1,n2,n3))
print(min(n1+n2+n3)-(min(n1,n2,n3)+max(n1,n2,n3)))
print(max(n1,n2,n3))

-- EXECUTION TIME:
0.171807
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1595/1015/main.py", line 9, in <module>
    print(min(n1+n2+n3)-(min(n1,n2,n3)+max(n1,n2,n3)))
TypeError: 'int' object is not iterable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:11:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n1=int(input("num1:  "))
n2=int(input("num2:  "))
n3=int(input("num3:  "))
print(min(n1,n2,n3))
print(min(n1,n2,n3))
print(min(n1+n2+n3)-(min(n1,n2,n3)+max(n1,n2,n3)))
print(max(n1,n2,n3))

-- EXECUTION TIME:
0.134814
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1595/1015/main.py", line 9, in <module>
    print(min(n1+n2+n3)-(min(n1,n2,n3)+max(n1,n2,n3)))
TypeError: 'int' object is not iterable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:14:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n1=int(input("num1:  "))
n2=int(input("num2:  "))
n3=int(input("num3:  "))
print(min(n1,n2,n3)
print(min(n1+n2+n3)-(min(n1,n2,n3)+max(n1,n2,n3)))
print(max(n1,n2,n3))

-- EXECUTION TIME:
0.124417
-- ERROR:
  File "/home/codebench/codes/1595/1015/main.py", line 8
    print(min(n1+n2+n3)-(min(n1,n2,n3)+max(n1,n2,n3)))
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:14:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n1=int(input("num1:  "))
n2=int(input("num2:  "))
n3=int(input("num3:  "))
print(min(n1,n2,n3))
print(min(n1+n2+n3)-(min(n1,n2,n3)+max(n1,n2,n3)))
print(max(n1,n2,n3))

-- EXECUTION TIME:
0.187971
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1595/1015/main.py", line 8, in <module>
    print(min(n1+n2+n3)-(min(n1,n2,n3)+max(n1,n2,n3)))
TypeError: 'int' object is not iterable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:15:05) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n1=int(input("num1:  "))
n2=int(input("num2:  "))
n3=int(input("num3:  "))
print(min(n1,n2,n3))
print(n1+n2+n3)-(min(n1,n2,n3)+max(n1,n2,n3)))
print(max(n1,n2,n3))

-- EXECUTION TIME:
0.177675
-- ERROR:
  File "/home/codebench/codes/1595/1015/main.py", line 8
    print(n1+n2+n3)-(min(n1,n2,n3)+max(n1,n2,n3)))
                                                 ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:17:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n1=int(input("num1:  "))
n2=int(input("num2:  "))
n3=int(input("num3:  "))
print(min(n1,n2,n3))
print((n1+n2+n3)-(min(n1,n2,n3)+max(n1,n2,n3)))
print(max(n1,n2,n3))

-- EXECUTION TIME:
0.198878
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
0
10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 20:55:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n1=int(input("num1:  "))
n2=int(input("num2:  "))
n3=int(input("num3:  "))
print(min(n1,n2,n3))
print((n1+n2+n3)-(min(n1,n2,n3)+max(n1,n2,n3)))
print(max(n1,n2,n3))

-- OUTPUT:
-2
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 20:55:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n1=int(input("num1:  "))
n2=int(input("num2:  "))
n3=int(input("num3:  "))
print(min(n1,n2,n3))
print((n1+n2+n3)-(min(n1,n2,n3)+max(n1,n2,n3)))
print(max(n1,n2,n3))

-- OUTPUT:
-2
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 20:56:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n1=int(input("num1:  "))
n2=int(input("num2:  "))
n3=int(input("num3:  "))
print(min(n1,n2,n3))
print((n1+n2+n3)-(min(n1,n2,n3)+max(n1,n2,n3)))
print(max(n1,n2,n3))

-- OUTPUT:
-2
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 20:56:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n1=int(input("num1:  "))
n2=int(input("num2:  "))
n3=int(input("num3:  "))
print(min(n1,n2,n3))
print((n1+n2+n3)-(min(n1,n2,n3)+max(n1,n2,n3)))
print(max(n1,n2,n3))

-- OUTPUT:
-2
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
