== TEST (2019-03-26 16:33:26) 
-- CODE:
ob=input("abra a porta ")
nr=int(input("numero de repeticoes: "))

print(ob * nr)
-- OUTPUT:
livrolivrolivrolivrolivrolivrolivrolivro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:33:59) 
-- CODE:
ob=input("abra a porta ")
nr=int(input("numero de repeticoes: "))

print(ob + nr*)
-- ERROR:
File "XXXX", line 4
    print(ob + nr*)
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:34:05) 
-- CODE:
ob=input("abra a porta ")
nr=int(input("numero de repeticoes: "))

print(ob + nr)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(ob + nr)
TypeError: must be str, not int
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:34:50) 
-- CODE:
ob=input("abra a porta ")
nr=int(input("numero de repeticoes: "))

print(ob + '' + '' +'')
-- OUTPUT:
livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:35:44) 
-- CODE:
ob=input("abra a porta ")
nr=int(input("numero de repeticoes: "))

print(ob + '' + ob +'' + ob+ ''+ ob *nr)
-- OUTPUT:
livrolivrolivrolivrolivrolivrolivrolivrolivrolivrolivro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:36:24) 
-- CODE:
ob=input("abra a porta ")
nr=input("numero de repeticoes: ")


-- OUTPUT:
livrolivrolivrolivrolivrolivrolivrolivrolivrolivrolivro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:37:02) 
-- CODE:
ob=input("abra porta ")
nr=input("numero de repeticoes: ")

print(ob * nr)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(ob * nr)
TypeError: can't multiply sequence by non-int of type 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:39:57) 
-- CODE:
ob="abra porta "
nr=input("numero de repeticoes: ")

print(ob * 5)


-- OUTPUT:
abra porta abra porta abra porta abra porta abra porta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:40:17) 
-- CODE:
ob="abra porta "
nr=input("numero de repeticoes: ")

print(ob * nr)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(ob * nr)
TypeError: can't multiply sequence by non-int of type 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:40:49) 
-- CODE:
ob="abra porta "
nr=int(input("numero de repeticoes: "))
print(ob * nr)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    nr=int(input())
ValueError: invalid literal for int() with base 10: 'livro'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 16:40:53) 
-- CODE:
ob="abra porta "
nr=int(input("numero de repeticoes: "))
print(ob * nr)


-- EXECUTION TIME:
0.121562
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1594/1801/main.py", line 2, in <module>
    nr=int(input())
ValueError: invalid literal for int() with base 10: 'livro'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:41:10) 
-- CODE:
ob="abra porta "
nr=int(input("numero de repeticoes: "))
print(ob * nr)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    nr=int(input())
ValueError: invalid literal for int() with base 10: 'livro'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:42:12) 
-- CODE:
ob=input("objeto: abra ")
nr=int(input("numero de repeticoes: "))
print(ob * nr)


-- OUTPUT:
livrolivrolivrolivrolivrolivrolivrolivro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 16:42:23) 
-- CODE:
ob=input("objeto: abra ")
nr=int(input("numero de repeticoes: "))
print(ob * nr)


-- EXECUTION TIME:
0.218475
-- TEST CASE 1:
---- input:
livro
8
---- correct output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
---- user output:
livrolivrolivrolivrolivrolivrolivrolivro
-- TEST CASE 2:
---- input:
carro
2
---- correct output:
Abra carro Abra carro
---- user output:
carrocarro
-- TEST CASE 3:
---- input:
caixa
1
---- correct output:
Abra caixa
---- user output:
caixa
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:43:44) 
-- CODE:
ob=input("objeto:abra ")
nr=int(input("numero de repeticoes: "))
print(ob+' '+' ' *nr)


-- OUTPUT:
livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:44:13) 
-- CODE:
ob=input("objeto:abra ")
nr=int(input("numero de repeticoes: "))
print(ob' ' ' ' *nr)


-- ERROR:
File "XXXX", line 3
    print(ob' ' ' ' *nr)
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:55:54) 
-- CODE:
ob=input("objeto: ")
nr=int(input("numero de repeticoes: "))
print(abra+ob*nr)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    print(abra+ob*nr)
NameError: name 'abra' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:56:21) 
-- CODE:
ob=input("objeto: ")
nr=int(input("numero de repeticoes: "))
a=abra
print(a+ob*nr)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    a=abra
NameError: name 'abra' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:59:45) 
-- CODE:
ob=input("objeto: ")
nr=int(input("numero de repeticoes: "))
print(ob+' '+ob+' '+ob+' '+br * nr)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    print(ob+' '+ob+' '+ob+' '+br * nr)
NameError: name 'br' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:13:49) 
-- CODE:
ob=input("objeto: ")
nr=int(input("numero de repeticoes: "))
w=( 'abra' +  " " + ob * nr + " ")
print



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    print(ob+' '+ob+' '+ob+' '+br * nr)
NameError: name 'br' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:14:37) 
-- CODE:
ob=input("objeto: ")
nr=int(input("numero de repeticoes: "))
w=( 'abra' +  " " + ob * nr + " ")
print(w)



-- OUTPUT:
abra livrolivrolivrolivrolivrolivrolivrolivro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:14:55) 
-- CODE:
ob=input("objeto: ")
nr=int(input("numero de repeticoes: "))
w=( 'abra' +  " " + ob * nr + " ")
print(w)



-- EXECUTION TIME:
0.128869
-- TEST CASE 1:
---- input:
livro
8
---- correct output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
---- user output:
abra livrolivrolivrolivrolivrolivrolivrolivro
-- TEST CASE 2:
---- input:
carro
2
---- correct output:
Abra carro Abra carro
---- user output:
abra carrocarro
-- TEST CASE 3:
---- input:
caixa
1
---- correct output:
Abra caixa
---- user output:
abra caixa
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:15:07) 
-- CODE:
ob=input("objeto: ")
nr=int(input("numero de repeticoes: "))
w=( 'abra' +  " " + ob * nr + " ")
print(w)



-- OUTPUT:
abra livrolivrolivrolivrolivrolivrolivrolivro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:15:27) 
-- CODE:
ob=input("objeto: ")
nr=int(input("numero de repeticoes: "))
w=(' ' + 'abra' +  " " + ob * nr + " ")
print( w )



-- OUTPUT:
abra livrolivrolivrolivrolivrolivrolivrolivro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:15:56) 
-- CODE:
ob=input("objeto: ")
nr=int(input("numero de repeticoes: "))
w=(" " + "abra" +  " " + ob * nr + " ")
print( w )



-- OUTPUT:
abra livrolivrolivrolivrolivrolivrolivrolivro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:16:38) 
-- CODE:
ob=input("objeto: ")
nr=int(input("numero de repeticoes: "))
w=( "abra" + ob * nr + )
print( w )



-- ERROR:
File "XXXX", line 3
    w=( "abra" + ob * nr + )
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:17:34) 
-- CODE:
ob=input("objeto: ")
nr=int(input("numero de repeticoes: "))
a= "abra"
w=( a*nr + ob * nr + )
print( w )



-- ERROR:
File "XXXX", line 4
    w=( a*nr + ob * nr + )
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:17:47) 
-- CODE:
ob=input("objeto: ")
nr=int(input("numero de repeticoes: "))
a= "abra"
w=( a * nr + ob * nr  )
print( w )



-- OUTPUT:
abraabraabraabraabraabraabraabralivrolivrolivrolivrolivrolivrolivrolivro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:18:12) 
-- CODE:
ob=input("objeto: ")
nr=int(input("numero de repeticoes: "))
a= "abra"
w=( a * nr  )
print( w )



-- OUTPUT:
abraabraabraabraabraabraabraabra
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:21:37) 
-- CODE:
ob=input("objeto: ")
nr=int(input("numero de repeticoes: "))

w=("abra"+" "+ob+" ")

print(w*nr)




-- OUTPUT:
abra livro abra livro abra livro abra livro abra livro abra livro abra livro abra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:21:49) 
-- CODE:
ob=input("objeto: ")
nr=int(input("numero de repeticoes: "))

w=("abra"+" "+ob+" ")

print(w*nr)




-- OUTPUT:
abra livro abra livro abra livro abra livro abra livro abra livro abra livro abra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:21:50) 
-- CODE:
ob=input("objeto: ")
nr=int(input("numero de repeticoes: "))

w=("abra"+" "+ob+" ")

print(w*nr)




-- EXECUTION TIME:
0.158571
-- TEST CASE 1:
---- input:
livro
8
---- correct output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
---- user output:
abra livro abra livro abra livro abra livro abra livro abra livro abra livro abra livro
-- TEST CASE 2:
---- input:
carro
2
---- correct output:
Abra carro Abra carro
---- user output:
abra carro abra carro
-- TEST CASE 3:
---- input:
caixa
1
---- correct output:
Abra caixa
---- user output:
abra caixa
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:21:55) 
-- CODE:
ob=input("objeto: ")
nr=int(input("numero de repeticoes: "))

w=("abra"+" "+ob+" ")

print(w*nr)




-- EXECUTION TIME:
0.218367
-- TEST CASE 1:
---- input:
livro
8
---- correct output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
---- user output:
abra livro abra livro abra livro abra livro abra livro abra livro abra livro abra livro
-- TEST CASE 2:
---- input:
carro
2
---- correct output:
Abra carro Abra carro
---- user output:
abra carro abra carro
-- TEST CASE 3:
---- input:
caixa
1
---- correct output:
Abra caixa
---- user output:
abra caixa
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:22:05) 
-- CODE:
ob=input("objeto: ")
nr=int(input("numero de repeticoes: "))

w=("Abra"+" "+ob+" ")

print(w*nr)




-- EXECUTION TIME:
0.13625
-- TEST CASE 1:
---- input:
livro
8
---- correct output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
---- user output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
-- TEST CASE 2:
---- input:
carro
2
---- correct output:
Abra carro Abra carro
---- user output:
Abra carro Abra carro
-- TEST CASE 3:
---- input:
caixa
1
---- correct output:
Abra caixa
---- user output:
Abra caixa
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 13:24:49) 
-- CODE:
ob=input("objeto: ")
nr=int(input("numero de repeticoes: "))

w=("Abra"+" "+ob+" ")

print(w*nr)




-- OUTPUT:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
