== TEST (2019-03-30 08:48:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num=input(("numero inteiro de quatro digitos"))
a = num // 1 % 10
b = num // 20 % 10
c = num // 200 % 10
d = num // 2000 % 10


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = num // 1 % 10
TypeError: unsupported operand type(s) for //: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 08:49:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num=input(("numero inteiro de quatro digitos"))
a = num // 1 % 10
b = num // 20 % 10
c = num // 200 % 10
d = num // 2000 % 10
abcd=a+b+c+d
print(abcd)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = num // 1 % 10
TypeError: unsupported operand type(s) for //: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 08:50:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num=input(("numero inteiro de quatro digitos"))
a = num // 2 % 10
b = num // 20 % 10
c = num // 200 % 10
d = num // 2000 % 10
abcd=a+b+c+d
print(abcd)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = num // 2 % 10
TypeError: unsupported operand type(s) for //: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 08:50:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num=input(("numero inteiro de quatro digitos"))
a = num // 1 % 10
b = num // 10 % 10
c = num // 100 % 10
d = num // 1000 % 10
abcd=a+b+c+d
print(abcd)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = num // 1 % 10
TypeError: unsupported operand type(s) for //: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 09:06:40) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num=input(("numero inteiro de quatro digitos"))

a = num // 1 % 10
b = num // 10 % 10
c = num // 100 % 10
d = num // 1000 % 10
abcd=a+b+c+d
print(abcd)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    a = num // 1 % 10
TypeError: unsupported operand type(s) for //: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 13:42:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num=input(("numero inteiro de quatro digitos"))
a=num//1%10
b=num//10%10
c=num//100%10
d=num//1000%10
ab=a+b+c+d
print(ab)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a=num//1%10
TypeError: unsupported operand type(s) for //: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 13:43:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num=input(("numero inteiro de quatro digitos"))
a=num//1%10
b=num//10%10
c=num//100%10
d=num//1000%10
ab=a+b+c+d
print(ab)



-- EXECUTION TIME:
0.157342
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1595/842/main.py", line 5, in <module>
    a=num//1%10
TypeError: unsupported operand type(s) for //: 'str' and 'int'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 13:43:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num=input(("numero inteiro de quatro digitos"))
a=num//1%10
b=num//10%10
c=num//100%10
d=num//1000%10
ab=a+b+c+d
print(ab)



-- EXECUTION TIME:
0.211621
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1595/842/main.py", line 5, in <module>
    a=num//1%10
TypeError: unsupported operand type(s) for //: 'str' and 'int'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 13:43:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num=input(("numero inteiro de quatro digitos"))
a=num//1%10
b=num//10%10
c=num//100%10
d=num//1000%10
ab=a+b+c+d
print(ab)



-- EXECUTION TIME:
0.131458
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1595/842/main.py", line 5, in <module>
    a=num//1%10
TypeError: unsupported operand type(s) for //: 'str' and 'int'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 13:43:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num=int(input("numero inteiro de quatro digitos"))
a=num // 1%10
b=num // 10%10
c=num//100%10
d=num//1000%10
ab=a+b+c+d
print(ab)



-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 13:43:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num=int(input("numero inteiro de quatro digitos"))
a=num // 1%10
b=num // 10%10
c=num//100%10
d=num//1000%10
ab=a+b+c+d
print(ab)



-- EXECUTION TIME:
0.159778
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 13:43:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num=int(input("numero inteiro de quatro digitos"))
a=num // 1%10
b=num // 10%10
c=num//100%10
d=num//1000%10
ab=a+b+c+d
print(ab)



-- EXECUTION TIME:
0.191871
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
2
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
20
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 13:43:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num=int(input("numero inteiro de quatro digitos"))
a=num // 1%10
b=num // 10%10
c=num//100%10
d=num//1000%10
ab=a+b+c+d
print(ab)



-- EXECUTION TIME:
0.143157
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
