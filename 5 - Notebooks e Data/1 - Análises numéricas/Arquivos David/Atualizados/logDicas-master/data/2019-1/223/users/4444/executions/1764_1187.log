== TEST (2019-05-21 21:57:49) 
-- CODE:
from numpy import *
v = arange(15)
print(v)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-21 21:59:13) 
-- CODE:
from numpy import *
v = arange(15)
w=ones(15,dtype=int)
print(v-w)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-21 21:59:33) 
-- CODE:
from numpy import *
v = arange(15)
w=ones(15,dtype=int)
print(v)
print(w)
print(v-w)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-21 21:59:45) 
-- CODE:
from numpy import *
v = arange(15)
w=ones(15,dtype=int)
print(v)
print(w)
print(w-v)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-21 22:00:25) 
-- CODE:
from numpy import *
v = arange(15)
w=ones(15,dtype=int)
print(len(v))
print(len(w))

print(v)
print(w)
print(w-v)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-21 22:00:52) 
-- CODE:
from numpy import *
v = arange(15)
w=ones(15,dtype=int)
print(len(v))
print(len(w))
print(size(w))
print(size(w))
print(v)
print(w)
print(w-v)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-21 22:01:48) 
-- CODE:
from numpy import *
vzero= zeros(12, dtype=int)
print(vzero)
v = arange(15)
w=ones(15,dtype=int)
print(len(v))
print(len(w))
print(size(w))
print(size(w))
print(v)
print(w)
print(w-v)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-21 22:44:48) 
-- CODE:
from numpy import *
# Leitura de dados
v = array(eval(input("Vetor: ")))
x = int(input("Valor a ser encontrado: "))
i = 0
while (i < size(v) and v[i] != x):
	i = i + 1
if (i < size(v)):
print(i)
else:
print("Valor nao encontrado")
	
-- ERROR:
File "XXXX", line 9
    print(i)
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-21 22:45:04) 
-- CODE:
from numpy import *
# Leitura de dados
v = array(eval(input("Vetor: ")))
x = int(input("Valor a ser encontrado: "))
i = 0
while (i < size(v) and v[i] != x):
	i = i + 1
if (i < size(v)):
	print(i)
else:
	print("Valor nao encontrado")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-21 22:47:13) 
-- CODE:
from numpy import *
# Leitura de dados
v = array(eval(input("Vetor: ")))
x = int(input("Valor a ser encontrado: "))
i = 0
while (i < size(v) and v[i] != x):
	i = i + 1
if (i < size(v)):
	print(i)
else:
	print("Valor nao encontrado")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-21 22:47:27) 
-- CODE:
from numpy import *
# Leitura de dados
v = array(eval(input("Vetor: ")))
x = int(input("Valor a ser encontrado: "))
i = 0
while (i < size(v) and v[i] != x):
	i = i + 1
if (i < size(v)):
	print(i)
else:
	print("Valor nao encontrado")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-22 19:10:40) 
-- CODE:

a=int(input('digite:  '))
b=int(input('digite:  '))
c=int(input('digite:  '))
if a<b:
	if a<b:
		if b<c:
			prin(c,b,a):
		else: 
			print(b,c,a)
	else:
		print(b,a,c)
		
	
-- ERROR:
File "XXXX", line 8
    prin(c,b,a):
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-22 19:10:51) 
-- CODE:

a=int(input('digite:  '))
b=int(input('digite:  '))
c=int(input('digite:  '))
if a<b:
	if a<b:
		if b<c:
			print(c,b,a):
		else: 
			print(b,c,a)
	else:
		print(b,a,c)
		
	
-- ERROR:
File "XXXX", line 8
    print(c,b,a):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-22 19:11:01) 
-- CODE:

a=int(input('digite:  '))
b=int(input('digite:  '))
c=int(input('digite:  '))
if a<b:
	if a<b:
		if b<c:
			print(c,b,a)
		else: 
			print(b,c,a)
	else:
		print(b,a,c)
		
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    a=int(input())
ValueError: invalid literal for int() with base 10: 'IPC'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 16:43:56) 
-- CODE:
a=input('Digite:  ')

	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    a=int(input())
ValueError: invalid literal for int() with base 10: 'IPC'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 16:44:37) 
-- CODE:
a=input('Digite:  ')
print(a[0])


	
-- OUTPUT:
I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 16:45:16) 
-- CODE:
a=input('Digite:  ')
print(a[0])
print(a[-1])


	
-- OUTPUT:
I
C
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 16:45:42) 
-- CODE:
a=input('Digite:  ')
print(a[0])
print(a[-1])
print(len(a))


	
-- OUTPUT:
I
C
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 16:46:17) 
-- CODE:
a=input('Digite:  ')
print(a[0])
print(a[-1])
print(len(a))
print(a.upper())



	
-- OUTPUT:
I
C
3
IPC
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 16:47:03) 
-- CODE:
a=input('Digite:  ')
print(a[0])
print(a[-1])
print(len(a))
print(a.lower())
print(a.upper())
print(a*500)



	
-- OUTPUT:
I
C
3
ipc
IPC

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-28 16:47:14) 
-- CODE:
a=input('Digite:  ')
print(a[0])
print(a[-1])
print(len(a))
print(a.lower())
print(a.upper())
print(a*500)



	
-- EXECUTION TIME:
0.141595
-- TEST CASE 1:
---- input:
IPC
---- correct output:
I
C
3
ipc
IPC

---- user output:
I
C
3
ipc
IPC

-- TEST CASE 2:
---- input:
Prova
---- correct output:
P
a
5
prova
PROVA
ProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProva
---- user output:
P
a
5
prova
PROVA
ProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaProvaPr
-- TEST CASE 3:
---- input:
String
---- correct output:
S
g
6
string
STRING
StringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringString
---- user output:
S
g
6
string
STRING
StringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringSt
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
