== TEST (2019-04-25 16:01:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = input('Valor da cedula: ')

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo  de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:03:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Valor da cedula: ')
if x == '2'
-- ERROR:
File "XXXX", line 5
    if x == '2'
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:03:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Valor da cedula: ')
if x == 'dois'
-- ERROR:
File "XXXX", line 5
    if x == 'dois'
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:03:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Valor da cedula: ')
if x == 'dois':
-- ERROR:
File "XXXX", line 6
    
                   ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:04:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Valor da cedula: ')
if x == 'dois':
	msg = Tarturuga
-- ERROR:
File "XXXX", line 6
    
                   ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:04:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Valor da cedula: ')
if x == 'dois':
	msg = Tarturuga

-- ERROR:
File "XXXX", line 6
    
                   ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:04:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Valor da cedula: ')
if x == '2':
	msg = Tarturuga

-- ERROR:
File "XXXX", line 6
    
                   ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:06:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Valor da cedula: ')
if x == '2':
	msg = Tarturuga
	else msg
-- ERROR:
File "XXXX", line 7
    else msg
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:06:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Valor da cedula: ')
if x == '2':
	msg = Tarturuga
-- ERROR:
File "XXXX", line 7
    else msg
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:06:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Valor da cedula: ')
if x == '2':
	msg = Tarturuga
-- ERROR:
File "XXXX", line 7
    else msg
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:07:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Valor da cedula: ')
if x == '2':
	msg = 'Tarturuga'
-- ERROR:
File "XXXX", line 7
    else msg
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:07:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Valor da cedula: ')
if x == '2':
	print msg = 'Tarturuga'
-- ERROR:
File "XXXX", line 6
    print msg = 'Tarturuga'
            ^
SyntaxError: Missing parentheses in call to 'print'. Did you mean print(msg = 'Tarturuga')?
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:07:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Valor da cedula: ')
if x == '2':
	print('Tartaruga')
-- ERROR:
File "XXXX", line 6
    print msg = 'Tarturuga'
            ^
SyntaxError: Missing parentheses in call to 'print'. Did you mean print(msg = 'Tarturuga')?
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:08:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Valor da cedula: ')
if x == '2':
	print('Tartaruga')
if x == '5':
	print('Garca')
-- ERROR:
File "XXXX", line 6
    print msg = 'Tarturuga'
            ^
SyntaxError: Missing parentheses in call to 'print'. Did you mean print(msg = 'Tarturuga')?
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:11:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Valor da cedula: ')
if x == '2':
	print('Tartaruga')
if x == '5':
	print('Garca')
if x == '10':
	print('Arara')
if x == '20':
	print('Mico-leao-dourado')
if x == '50':
	print('Onca-pintada')
if x == '100':
	print('Garoupa')
-- OUTPUT:
Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:11:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Valor da cedula: ')
if x == '2':
	print('Tartaruga')
if x == '5':
	print('Garca')
if x == '10':
	print('Arara')
if x == '20':
	print('Mico-leao-dourado')
if x == '50':
	print('Onca-pintada')
if x == '100':
	print('Garoupa')
-- OUTPUT:
Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:12:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Valor da cedula: ')
if x == '2':
	print('Tartaruga')
if x == '5':
	print('Garca')
if x == '10':
	print('Arara')
if x == '20':
	print('Mico-leao-dourado')
if x == '50':
	print('Onca-pintada')
if x == '100':
	print('Garoupa')
-- OUTPUT:
Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:13:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Valor da cedula: ')
if x == '2':
	print('Tartaruga')
	     elif(print('Invalido'))
if x == '5':
	print('Garca')
if x == '10':
	print('Arara')
if x == '20':
	print('Mico-leao-dourado')
if x == '50':
	print('Onca-pintada')
if x == '100':
	print('Garoupa')
-- ERROR:
File "XXXX", line 7
    elif(print('Invalido'))
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:13:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Valor da cedula: ')
if x == '2':
	print('Tartaruga')
if x == '5':
	print('Garca')
if x == '10':
	print('Arara')
if x == '20':
	print('Mico-leao-dourado')
if x == '50':
	print('Onca-pintada')
if x == '100':
	print('Garoupa')
-- OUTPUT:
Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:14:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Valor da cedula: ')
if x == '2':
	print('Tartaruga')
if x == '5':
	print('Garca')
if x == '10':
	print('Arara')
if x == '20':
	print('Mico-leao-dourado')
if x == '50':
	print('Onca-pintada')
if x == '100':
	print('Garoupa')
-- OUTPUT:
Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:03:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Valor da cedula: ')
if x == '2':
	print('Tartaruga')
if x == '5':
	print('Garca')
if x == '10':
	print('Arara')
if x == '20':
	print('Mico-leao-dourado')
if x == '50':
	print('Onca-pintada')
if x == '100':
	print('Garoupa')
-- OUTPUT:
Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:14:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Valor da cedula: ')
if x == '2':
	print('Tartaruga')
else:
   if x == '5':
	print('Garca')
	else:
if x == '10':
	print('Arara')
if x == '20':
	print('Mico-leao-dourado')
if x == '50':
	print('Onca-pintada')
if x == '100':
	print('Garoupa')

-- ERROR:
File "XXXX", line 9
    print('Garca')
                 ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:14:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Valor da cedula: ')
if x == '2':
	print('Tartaruga')
   if x == '5':
	print('Garca')
if x == '10':
	print('Arara')
if x == '20':
	print('Mico-leao-dourado')
if x == '50':
	print('Onca-pintada')
if x == '100':
	print('Garoupa')

-- ERROR:
File "XXXX", line 7
    if x == '5':
               ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:14:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Valor da cedula: ')
if x == '2':
	print('Tartaruga')
if x == '5':
	print('Garca')
if x == '10':
	print('Arara')
if x == '20':
	print('Mico-leao-dourado')
if x == '50':
	print('Onca-pintada')
if x == '100':
	print('Garoupa')

-- OUTPUT:
Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:14:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Valor da cedula: ')
if x == '2':
	print('Tartaruga')
if x == '5':
	print('Garca')
if x == '10':
	print('Arara')
if x == '20':
	print('Mico-leao-dourado')
if x == '50':
	print('Onca-pintada')
if x == '100':
	print('Garoupa')
else:
-- ERROR:
File "XXXX", line 18
    
         ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:15:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Valor da cedula: ')
if x == '2':
	print('Tartaruga')
if x == '5':
	print('Garca')
if x == '10':
	print('Arara')
if x == '20':
	print('Mico-leao-dourado')
if x == '50':
	print('Onca-pintada')
if x == '100':
	print('Garoupa')
-- OUTPUT:
Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:16:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Valor da cedula: ')
elif x == '2':
	print('Tartaruga')
elif x == '5':
	print('Garca')
elif x == '10':
	print('Arara')
elif x == '20':
	print('Mico-leao-dourado')
elif x == '50':
	print('Onca-pintada')
elif x == '100':
	print('Garoupa')
-- ERROR:
File "XXXX", line 5
    elif x == '2':
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:17:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Valor da cedula: ')
if x == '2':
	print('Tartaruga')
if x == '5':
	print('Garca')
if x == '10':
	print('Arara')
if x == '20':
	print('Mico-leao-dourado')
if x == '50':
	print('Onca-pintada')
if x == '100':
	print('Garoupa')
-- OUTPUT:
Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:17:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Entrada: ')
if x == '2':
	print('Tartaruga')
if x == '5':
	print('Garca')
if x == '10':
	print('Arara')
if x == '20':
	print('Mico-leao-dourado')
if x == '50':
	print('Onca-pintada')
if x == '100':
	print('Garoupa')
-- OUTPUT:
Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:18:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Entrada: ')
if x == '2':
	print('Animal: Tartaruga')
if x == '5':
	print('Animal: Garca')
if x == '10':
	print('Animal: Arara')
if x == '20':
	print('Animal: Mico-leao-dourado')
if x == '50':
	print('Animal: Onca-pintada')
if x == '100':
	print('Animal: Garoupa')
-- OUTPUT:
Animal: Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:18:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Entrada: ')
if x == '2':
	print('Animal: Tartaruga')
if x == '5':
	print('Animal: Garca')
if x == '10':
	print('Animal: Arara')
if x == '20':
	print('Animal: Mico-leao-dourado')
if x == '50':
	print('Animal: Onca-pintada')
if x == '100':
	print('Animal: Garoupa')
-- OUTPUT:
Animal: Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:19:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Entrada: ')
if x == '2':
	print('Animal: Tartaruga')
if x == '5':
	print('Animal: Garca')
if x == '10':
	print('Animal: Arara')
if x == '20':
	print('Animal: Mico-leao-dourado')
if x == '50':
	print('Animal: Onca-pintada')
if x == '100':
	print('Animal: Garoupa')
-- OUTPUT:
Animal: Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:19:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Entrada: ')
if x == '2':
	print('Animal: Tartaruga')
if x == '5':
	print('Animal: Garca')
if x == '10':
	print('Animal: Arara')
if x == '20':
	print('Animal: Mico-leao-dourado')
if x == '50':
	print('Animal: Onca-pintada')
if x == '100':
	print('Animal: Garoupa')
-- EXECUTION TIME:
0.144979
-- TEST CASE 1:
---- input:
100
---- correct output:
Entrada: 100
Animal: Garoupa
---- user output:
Animal: Garoupa
-- TEST CASE 2:
---- input:
7
---- correct output:
Entrada: 7
Animal: Invalido
---- user output:

-- TEST CASE 3:
---- input:
50
---- correct output:
Entrada: 50
Animal: Onca-pintada
---- user output:
Animal: Onca-pintada
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:19:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Entrada: ')
if x == '2':
	print('Animal: Tartaruga')
if x == '5':
	print('Animal: Garca')
if x == '10':
	print('Animal: Arara')
if x == '20':
	print('Animal: Mico-leao-dourado')
if x == '50':
	print('Animal: Onca-pintada')
if x == '100':
	print('Animal: Garoupa')
-- OUTPUT:
Animal: Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:19:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Entrada: ')
if x == '2':
	print('Animal: Tartaruga')
if x == '5':
	print('Animal: Garca')
if x == '10':
	print('Animal: Arara')
if x == '20':
	print('Animal: Mico-leao-dourado')
if x == '50':
	print('Animal: Onca-pintada')
if x == '100':
	print('Animal: Garoupa')
-- EXECUTION TIME:
0.214451
-- TEST CASE 1:
---- input:
100
---- correct output:
Entrada: 100
Animal: Garoupa
---- user output:
Animal: Garoupa
-- TEST CASE 2:
---- input:
7
---- correct output:
Entrada: 7
Animal: Invalido
---- user output:

-- TEST CASE 3:
---- input:
50
---- correct output:
Entrada: 50
Animal: Onca-pintada
---- user output:
Animal: Onca-pintada
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:19:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Entrada: ')
if x == '2':
	print('Animal: Tartaruga')
if x == '5':
	print('Animal: Garca')
if x == '10':
	print('Animal: Arara')
if x == '20':
	print('Animal: Mico-leao-dourado')
if x == '50':
	print('Animal: Onca-pintada')
if x == '100':
	print('Animal: Garoupa')
-- OUTPUT:
Animal: Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:20:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Entrada: ')
if x == '2':
	print('Animal: Tartaruga')
elif x == '5':
	print('Animal: Garca')
if x == '10':
	print('Animal: Arara')
if x == '20':
	print('Animal: Mico-leao-dourado')
if x == '50':
	print('Animal: Onca-pintada')
if x == '100':
	print('Animal: Garoupa')
-- OUTPUT:
Animal: Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:20:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Entrada: ')
if x == '2':
	print('Animal: Tartaruga')
elif x == '5':
	print('Animal: Garca')
if x == '10':
	print('Animal: Arara')
if x == '20':
	print('Animal: Mico-leao-dourado')
if x == '50':
	print('Animal: Onca-pintada')
if x == '100':
	print('Animal: Garoupa')
-- EXECUTION TIME:
0.189881
-- TEST CASE 1:
---- input:
100
---- correct output:
Entrada: 100
Animal: Garoupa
---- user output:
Animal: Garoupa
-- TEST CASE 2:
---- input:
7
---- correct output:
Entrada: 7
Animal: Invalido
---- user output:

-- TEST CASE 3:
---- input:
50
---- correct output:
Entrada: 50
Animal: Onca-pintada
---- user output:
Animal: Onca-pintada
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:21:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Entrada: ')
if x == '2':
	print('Animal: Tartaruga')
elif x == '5':
	print('Animal: Garca')
elif x == '10':
	print('Animal: Arara')
elif x == '20':
	print('Animal: Mico-leao-dourado')
elif x == '50':
	print('Animal: Onca-pintada')
elif x == '100':
	print('Animal: Garoupa')
-- OUTPUT:
Animal: Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:21:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Entrada: ')
if x == '2':
	print('Animal: Tartaruga')
elif x == '5':
	print('Animal: Garca')
elif x == '10':
	print('Animal: Arara')
elif x == '20':
	print('Animal: Mico-leao-dourado')
elif x == '50':
	print('Animal: Onca-pintada')
elif x == '100':
	print('Animal: Garoupa')
-- EXECUTION TIME:
0.116679
-- TEST CASE 1:
---- input:
100
---- correct output:
Entrada: 100
Animal: Garoupa
---- user output:
Animal: Garoupa
-- TEST CASE 2:
---- input:
7
---- correct output:
Entrada: 7
Animal: Invalido
---- user output:

-- TEST CASE 3:
---- input:
50
---- correct output:
Entrada: 50
Animal: Onca-pintada
---- user output:
Animal: Onca-pintada
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:21:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Entrada: ')
elif == '2':
	print('Animal: Tartaruga')
elif x == '5':
	print('Animal: Garca')
elif x == '10':
	print('Animal: Arara')
elif x == '20':
	print('Animal: Mico-leao-dourado')
elif x == '50':
	print('Animal: Onca-pintada')
elif x == '100':
	print('Animal: Garoupa')
-- ERROR:
File "XXXX", line 5
    elif == '2':
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:21:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Entrada: ')
if== '2':
	print('Animal: Tartaruga')
elif x == '5':
	print('Animal: Garca')
elif x == '10':
	print('Animal: Arara')
elif x == '20':
	print('Animal: Mico-leao-dourado')
elif x == '50':
	print('Animal: Onca-pintada')
elif x == '100':
	print('Animal: Garoupa')
-- ERROR:
File "XXXX", line 5
    if== '2':
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:21:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Entrada: ')
if == '2':
	print('Animal: Tartaruga')
elif x == '5':
	print('Animal: Garca')
elif x == '10':
	print('Animal: Arara')
elif x == '20':
	print('Animal: Mico-leao-dourado')
elif x == '50':
	print('Animal: Onca-pintada')
elif x == '100':
	print('Animal: Garoupa')
-- ERROR:
File "XXXX", line 5
    if == '2':
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:22:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Entrada: ')

if x == '2':
	print('Animal: Tartaruga')
elif x == '5':
	print('Animal: Garca')
elif x == '10':
	print('Animal: Arara')
elif x == '20':
	print('Animal: Mico-leao-dourado')
elif x == '50':
	print('Animal: Onca-pintada')
elif x == '100':
	print('Animal: Garoupa')
-- OUTPUT:
Animal: Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:22:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Entrada: ')

elif x == '2':
	print('Animal: Tartaruga')
elif x == '5':
	print('Animal: Garca')
elif x == '10':
	print('Animal: Arara')
elif x == '20':
	print('Animal: Mico-leao-dourado')
elif x == '50':
	print('Animal: Onca-pintada')
elif x == '100':
	print('Animal: Garoupa')
-- ERROR:
File "XXXX", line 6
    elif x == '2':
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:22:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Entrada: ')

if x == '2':
	print('Animal: Tartaruga')
elif x == '5':
	print('Animal: Garca')
elif x == '10':
	print('Animal: Arara')
elif x == '20':
	print('Animal: Mico-leao-dourado')
elif x == '50':
	print('Animal: Onca-pintada')
elif x == '100':
	print('Animal: Garoupa')
-- OUTPUT:
Animal: Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:22:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Entrada: ')

if x == '2':
	print('Animal: Tartaruga')
elif x == '5':
	print('Animal: Garca')
elif x == '10':
	print('Animal: Arara')
elif x == '20':
	print('Animal: Mico-leao-dourado')
elif x == '50':
	print('Animal: Onca-pintada')
elif x == '100':
	print('Animal: Garoupa')
-- EXECUTION TIME:
0.294155
-- TEST CASE 1:
---- input:
100
---- correct output:
Entrada: 100
Animal: Garoupa
---- user output:
Animal: Garoupa
-- TEST CASE 2:
---- input:
7
---- correct output:
Entrada: 7
Animal: Invalido
---- user output:

-- TEST CASE 3:
---- input:
50
---- correct output:
Entrada: 50
Animal: Onca-pintada
---- user output:
Animal: Onca-pintada
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:24:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Entrada: ')

if x == '2':
	print('Animal: Tartaruga')
elif x == '5':
	print('Animal: Garca')
elif x == '10':
	print('Animal: Arara')
elif x == '20':
	print('Animal: Mico-leao-dourado')
elif x == '50':
	print('Animal: Onca-pintada')
elif x == '100':
	print('Animal: Garoupa')
-- OUTPUT:
Animal: Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:25:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Entrada: ')

if x == '2':
	print('Animal: Tartaruga')
	else print('Animal: Invalido'):
elif x == '5':
	print('Animal: Garca')
elif x == '10':
	print('Animal: Arara')
elif x == '20':
	print('Animal: Mico-leao-dourado')
elif x == '50':
	print('Animal: Onca-pintada')
elif x == '100':
	print('Animal: Garoupa')
-- ERROR:
File "XXXX", line 8
    else print('Animal: Invalido'):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:25:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Entrada: ')

if x == '2':
	print('Animal: Tartaruga')
 elif x == '5':
	print('Animal: Garca')
elif x == '10':
	print('Animal: Arara')
elif x == '20':
	print('Animal: Mico-leao-dourado')
elif x == '50':
	print('Animal: Onca-pintada')
elif x == '100':
	print('Animal: Garoupa')
-- ERROR:
File "XXXX", line 8
    elif x == '5':
                 ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:26:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Entrada: ')

if x == '2':
	print('Animal: Tartaruga')
elif x == '5':
	print('Animal: Garca')
elif x == '10':
	print('Animal: Arara')
elif x == '20':
	print('Animal: Mico-leao-dourado')
elif x == '50':
	print('Animal: Onca-pintada')
elif x == '100':
	print('Animal: Garoupa')
-- OUTPUT:
Animal: Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:28:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Entrada: ')

if x == '2':
	print('Animal: Tartaruga')
elif x == '5':
	print('Animal: Garca')
elif x == '10':
	print('Animal: Arara')
elif x == '20':
	print('Animal: Mico-leao-dourado')
elif x == '50':
	print('Animal: Onca-pintada')
elif x == '100':
	print('Animal: Garoupa')
-- OUTPUT:
Animal: Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 15:00:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Entrada: ')

if x == '2':
	print('Animal: Tartaruga')
elif x == '5':
	print('Animal: Garca')
elif x == '10':
	print('Animal: Arara')
elif x == '20':
	print('Animal: Mico-leao-dourado')
elif x == '50':
	print('Animal: Onca-pintada')
elif x == '100':
	print('Animal: Garoupa')
-- OUTPUT:
Animal: Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 15:02:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Entrada: ')

if x == '2':
	print('Animal: Tartaruga')
elif x == '5':
	print('Animal: Garca')
elif x == '10':
	print('Animal: Arara')
elif x == '20':
	print('Animal: Mico-leao-dourado')
elif x == '50':
	print('Animal: Onca-pintada')
elif x == '100':
	print('Animal: Garoupa')
	else(print("Invalido"))
-- ERROR:
File "XXXX", line 18
    else(print("Invalido"))
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 15:02:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Entrada: ')

if x == '2':
	print('Animal: Tartaruga')
elif x == '5':
	print('Animal: Garca')
elif x == '10':
	print('Animal: Arara')
elif x == '20':
	print('Animal: Mico-leao-dourado')
elif x == '50':
	print('Animal: Onca-pintada')
elif x == '100':
	print('Animal: Garoupa')
else(print("Invalido"))
-- ERROR:
File "XXXX", line 18
    else(print("Invalido"))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 15:05:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Entrada: ')

if x == '2':
	print('Animal: Tartaruga')
elif x == '5':
	print('Animal: Garca')
elif x == '10':
	print('Animal: Arara')
elif x == '20':
	print('Animal: Mico-leao-dourado')
elif x == '50':
	print('Animal: Onca-pintada')
elif x == '100':
	print('Animal: Garoupa')

-- OUTPUT:
Animal: Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:21:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Entrada: ')

if x == '2':
	print('Animal: Tartaruga')
elif x == '5':
	print('Animal: Garca')
elif x == '10':
	print('Animal: Arara')
elif x == '20':
	print('Animal: Mico-leao-dourado')
elif x == '50':
	print('Animal: Onca-pintada')
elif x == '100':
	print('Animal: Garoupa')

-- OUTPUT:
Animal: Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:22:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Entrada: ')
print("Entrada:")
if x == '2':
	print('Animal: Tartaruga')
elif x == '5':
	print('Animal: Garca')
elif x == '10':
	print('Animal: Arara')
elif x == '20':
	print('Animal: Mico-leao-dourado')
elif x == '50':
	print('Animal: Onca-pintada')
elif x == '100':
	print('Animal: Garoupa')

-- OUTPUT:
Entrada:
Animal: Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:23:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Entrada: ')
if x == '2':
	print('Animal: Tartaruga')
elif x == '5':
	print('Animal: Garca')
elif x == '10':
	print('Animal: Arara')
elif x == '20':
	print('Animal: Mico-leao-dourado')
elif x == '50':
	print('Animal: Onca-pintada')
elif x == '100':
	print('Animal: Garoupa')

-- OUTPUT:
Animal: Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:23:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Entrada: ')
if x == '2':
	print('Animal: Tartaruga')
elif x == '5':
	print('Animal: Garca')
elif x == '10':
	print('Animal: Arara')
elif x == '20':
	print('Animal: Mico-leao-dourado')
elif x == '50':
	print('Animal: Onca-pintada')
elif x == '100':
	print('Animal: Garoupa')
else:
	print("Invalido")
-- OUTPUT:
Animal: Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:23:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Entrada: ')
if x == '2':
	print('Animal: Tartaruga')
elif x == '5':
	print('Animal: Garca')
elif x == '10':
	print('Animal: Arara')
elif x == '20':
	print('Animal: Mico-leao-dourado')
elif x == '50':
	print('Animal: Onca-pintada')
elif x == '100':
	print('Animal: Garoupa')
else:
	print("Invalido")
-- OUTPUT:
Animal: Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:23:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Entrada: ')
if x == '2':
	print('Animal: Tartaruga')
elif x == '5':
	print('Animal: Garca')
elif x == '10':
	print('Animal: Arara')
elif x == '20':
	print('Animal: Mico-leao-dourado')
elif x == '50':
	print('Animal: Onca-pintada')
elif x == '100':
	print('Animal: Garoupa')
else:
	print("Invalido")
-- OUTPUT:
Animal: Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:23:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Entrada: ')
if x == '2':
	print('Animal: Tartaruga')
elif x == '5':
	print('Animal: Garca')
elif x == '10':
	print('Animal: Arara')
elif x == '20':
	print('Animal: Mico-leao-dourado')
elif x == '50':
	print('Animal: Onca-pintada')
elif x == '100':
	print('Animal: Garoupa')
else:
	print("Invalido")
-- OUTPUT:
Animal: Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:23:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Entrada: ')
if x == '2':
	print('Animal: Tartaruga')
elif x == '5':
	print('Animal: Garca')
elif x == '10':
	print('Animal: Arara')
elif x == '20':
	print('Animal: Mico-leao-dourado')
elif x == '50':
	print('Animal: Onca-pintada')
elif x == '100':
	print('Animal: Garoupa')
else:
	print("Invalido")
-- OUTPUT:
Animal: Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:24:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('Entrada: ')
if x == '2':
	print('Animal: Tartaruga')
elif x == '5':
	print('Animal: Garca')
elif x == '10':
	print('Animal: Arara')
elif x == '20':
	print('Animal: Mico-leao-dourado')
elif x == '50':
	print('Animal: Onca-pintada')
elif x == '100':
	print('Animal: Garoupa')
else:
	print("Invalido")
-- EXECUTION TIME:
0.148767
-- TEST CASE 1:
---- input:
100
---- correct output:
Entrada: 100
Animal: Garoupa
---- user output:
Animal: Garoupa
-- TEST CASE 2:
---- input:
7
---- correct output:
Entrada: 7
Animal: Invalido
---- user output:
Invalido
-- TEST CASE 3:
---- input:
50
---- correct output:
Entrada: 50
Animal: Onca-pintada
---- user output:
Animal: Onca-pintada
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:24:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('')
if (x == "2"):
	print('Animal: Tartaruga')
elif x == '5':
	print('Animal: Garca')
elif x == '10':
	print('Animal: Arara')
elif x == '20':
	print('Animal: Mico-leao-dourado')
elif x == '50':
	print('Animal: Onca-pintada')
elif x == '100':
	print('Animal: Garoupa')
else:
	print("Invalido")
-- OUTPUT:
Animal: Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:25:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('')
print("Entrada:", x)
if (x == "2"):
	print('Animal: Tartaruga')
elif x == '5':
	print('Animal: Garca')
elif x == '10':
	print('Animal: Arara')
elif x == '20':
	print('Animal: Mico-leao-dourado')
elif x == '50':
	print('Animal: Onca-pintada')
elif x == '100':
	print('Animal: Garoupa')
else:
	print("Invalido")
-- OUTPUT:
Entrada: 100
Animal: Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:25:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input('')
print("Entrada:", x)
if (x == "2"):
	print('Animal: Tartaruga')
elif x == '5':
	print('Animal: Garca')
elif x == '10':
	print('Animal: Arara')
elif x == '20':
	print('Animal: Mico-leao-dourado')
elif x == '50':
	print('Animal: Onca-pintada')
elif x == '100':
	print('Animal: Garoupa')
else:
	print("Invalido")
-- EXECUTION TIME:
0.155373
-- TEST CASE 1:
---- input:
100
---- correct output:
Entrada: 100
Animal: Garoupa
---- user output:
Entrada: 100
Animal: Garoupa
-- TEST CASE 2:
---- input:
7
---- correct output:
Entrada: 7
Animal: Invalido
---- user output:
Entrada: 7
Invalido
-- TEST CASE 3:
---- input:
50
---- correct output:
Entrada: 50
Animal: Onca-pintada
---- user output:
Entrada: 50
Animal: Onca-pintada
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:33:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input("")
print("Entrada:", x)
if (x == "2"):
	print("Animal: Tartaruga")
elif (x == "5"):
	print("Animal: Garca")
elif (x == "10"):
	print("Animal: Arara")
elif (x == "20"):
	print("Animal: Mico-leao-dourado)
elif (x == "50"):
	print("Animal: Onca-pintada")
elif (x == "100"):
	print("Animal: Garoupa")
else:
	print("Invalido")
-- ERROR:
File "XXXX", line 13
    print("Animal: Mico-leao-dourado)
                                    ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:33:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input("")
print("Entrada:", x)
if (x == "2"):
	print("Animal: Tartaruga")
elif (x == "5"):
	print("Animal: Garca")
elif (x == "10"):
	print("Animal: Arara")
elif (x == "20"):
	print("Animal: Mico-leao-dourado")
elif (x == "50"):
	print("Animal: Onca-pintada")
elif (x == "100"):
	print("Animal: Garoupa")
else:
	print("Invalido")
-- OUTPUT:
Entrada: 100
Animal: Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:33:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input("")
print("Entrada:", x)
if (x == "2"):
	print("Animal: Tartaruga")
elif (x == "5"):
	print("Animal: Garca")
elif (x == "10"):
	print("Animal: Arara")
elif (x == "20"):
	print("Animal: Mico-leao-dourado")
elif (x == "50"):
	print("Animal: Onca-pintada")
elif (x == "100"):
	print("Animal: Garoupa")
else:
	print("Invalido")
-- EXECUTION TIME:
0.200757
-- TEST CASE 1:
---- input:
100
---- correct output:
Entrada: 100
Animal: Garoupa
---- user output:
Entrada: 100
Animal: Garoupa
-- TEST CASE 2:
---- input:
7
---- correct output:
Entrada: 7
Animal: Invalido
---- user output:
Entrada: 7
Invalido
-- TEST CASE 3:
---- input:
50
---- correct output:
Entrada: 50
Animal: Onca-pintada
---- user output:
Entrada: 50
Animal: Onca-pintada
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:33:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input)("")
print("Entrada:", x)
if (x == "2"):
	print("Animal: Tartaruga")
elif (x == "5"):
	print("Animal: Garca")
elif (x == "10"):
	print("Animal: Arara")
elif (x == "20"):
	print("Animal: Mico-leao-dourado")
elif (x == "50"):
	print("Animal: Onca-pintada")
elif (x == "100"):
	print("Animal: Garoupa")
else:
	print("Invalido")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    x = float(input)("")
TypeError: float() argument must be a string or a number, not 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:34:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = int(input(""))
print("Entrada:", x)
if (x == "2"):
	print("Animal: Tartaruga")
elif (x == "5"):
	print("Animal: Garca")
elif (x == "10"):
	print("Animal: Arara")
elif (x == "20"):
	print("Animal: Mico-leao-dourado")
elif (x == "50"):
	print("Animal: Onca-pintada")
elif (x == "100"):
	print("Animal: Garoupa")
else:
	print("Invalido")
-- OUTPUT:
Entrada: 100
Invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:34:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = int(input(""))
print("Entrada:", x)
if (x == "2"):
	print("Animal: Tartaruga")
elif (x == "5"):
	print("Animal: Garca")
elif (x == "10"):
	print("Animal: Arara")
elif (x == "20"):
	print("Animal: Mico-leao-dourado")
elif (x == "50"):
	print("Animal: Onca-pintada")
elif (x == "100"):
	print("Animal: Garoupa")
else:
	print("Invalido")
-- EXECUTION TIME:
0.188929
-- TEST CASE 1:
---- input:
100
---- correct output:
Entrada: 100
Animal: Garoupa
---- user output:
Entrada: 100
Invalido
-- TEST CASE 2:
---- input:
7
---- correct output:
Entrada: 7
Animal: Invalido
---- user output:
Entrada: 7
Invalido
-- TEST CASE 3:
---- input:
50
---- correct output:
Entrada: 50
Animal: Onca-pintada
---- user output:
Entrada: 50
Invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:35:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = int(input(""))
print("Entrada:", x)
if (x == "2"):
	print("Animal: Tartaruga")
elif (x == "5"):
	print("Animal: Garca")
elif (x == "10"):
	print("Animal: Arara")
elif (x == "20"):
	print("Animal: Mico-leao-dourado")
elif (x == "50"):
	print("Animal: Onca-pintada")
elif (x == "100"):
	print("Animal: Garoupa")
else:
	print("Animal: Invalido")
-- OUTPUT:
Entrada: 100
Animal: Invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:35:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = int(input("oi"))
print("Entrada:", x)
if (x == "2"):
	print("Animal: Tartaruga")
elif (x == "5"):
	print("Animal: Garca")
elif (x == "10"):
	print("Animal: Arara")
elif (x == "20"):
	print("Animal: Mico-leao-dourado")
elif (x == "50"):
	print("Animal: Onca-pintada")
elif (x == "100"):
	print("Animal: Garoupa")
else:
	print("Animal: Invalido")
-- OUTPUT:
Entrada: 100
Animal: Invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:35:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = int(input(""))
print("Entrada:", x)
if (x == "2"):
	print("Animal: Tartaruga")
elif (x == "5"):
	print("Animal: Garca")
elif (x == "10"):
	print("Animal: Arara")
elif (x == "20"):
	print("Animal: Mico-leao-dourado")
elif (x == "50"):
	print("Animal: Onca-pintada")
elif (x == "100"):
	print("Animal: Garoupa")
else:
	print("Animal: Invalido")
-- OUTPUT:
Entrada: 100
Animal: Invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:36:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = int(input(""))
print("Entrada:", x)
if (x == "2"):
	print("Animal: Tartaruga")
elif (x == "5"):
	print("Animal: Garca")
elif (x == "10"):
	print("Animal: Arara")
elif (x == "20"):
	print("Animal: Mico-leao-dourado")
elif (x == "50"):
	print("Animal: Onca-pintada")
elif (x == "100"):
	print("Animal: Garoupa")
else:
	print("Animal: Invalido")
-- EXECUTION TIME:
0.155381
-- TEST CASE 1:
---- input:
100
---- correct output:
Entrada: 100
Animal: Garoupa
---- user output:
Entrada: 100
Animal: Invalido
-- TEST CASE 2:
---- input:
7
---- correct output:
Entrada: 7
Animal: Invalido
---- user output:
Entrada: 7
Animal: Invalido
-- TEST CASE 3:
---- input:
50
---- correct output:
Entrada: 50
Animal: Onca-pintada
---- user output:
Entrada: 50
Animal: Invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:36:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = int(input(""))
print("Entrada:", x)
if (x == "2"):
	print("Animal: Tartaruga")
elif (x == "5"):
	print("Animal: Garca")
elif (x == "10"):
	print("Animal: Arara")
elif (x == "20"):
	print("Animal: Mico-leao-dourado")
elif (x == "50"):
	print("Animal: Onca-pintada")
elif (x == "100"):
	print("Animal: Garoupa")
else:
	print("Animal: Invalido")
-- OUTPUT:
Entrada: 100
Animal: Invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:36:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = int(input(""))
print("Entrada: ", x)
if (x == "2"):
	print("Animal: Tartaruga")
elif (x == "5"):
	print("Animal: Garca")
elif (x == "10"):
	print("Animal: Arara")
elif (x == "20"):
	print("Animal: Mico-leao-dourado")
elif (x == "50"):
	print("Animal: Onca-pintada")
elif (x == "100"):
	print("Animal: Garoupa")
else:
	print("Animal: Invalido")
-- OUTPUT:
Entrada:  100
Animal: Invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:36:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = int(input(""))
print("Entrada: ", x)
if (x == "2"):
	print("Animal: Tartaruga")
elif (x == "5"):
	print("Animal: Garca")
elif (x == "10"):
	print("Animal: Arara")
elif (x == "20"):
	print("Animal: Mico-leao-dourado")
elif (x == "50"):
	print("Animal: Onca-pintada")
elif (x == "100"):
	print("Animal: Garoupa")
else:
	print("Animal: Invalido")
-- EXECUTION TIME:
0.210631
-- TEST CASE 1:
---- input:
100
---- correct output:
Entrada: 100
Animal: Garoupa
---- user output:
Entrada:  100
Animal: Invalido
-- TEST CASE 2:
---- input:
7
---- correct output:
Entrada: 7
Animal: Invalido
---- user output:
Entrada:  7
Animal: Invalido
-- TEST CASE 3:
---- input:
50
---- correct output:
Entrada: 50
Animal: Onca-pintada
---- user output:
Entrada:  50
Animal: Invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:38:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = int(input(""))
print("Entrada:", x)
if (x ==2):
	print("Animal: Tartaruga")
elif (x ==5):
	print("Animal: Garca")
elif (x ==10):
	print("Animal: Arara")
elif (x ==20):
	print("Animal: Mico-leao-dourado")
elif (x ==50):
	print("Animal: Onca-pintada")
elif (x ==100):
	print("Animal: Garoupa")
else:
	print("Animal: Invalido")
-- OUTPUT:
Entrada: 100
Animal: Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:38:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
x = int(input(""))
print("Entrada:", x)
if (x ==2):
	print("Animal: Tartaruga")
elif (x ==5):
	print("Animal: Garca")
elif (x ==10):
	print("Animal: Arara")
elif (x ==20):
	print("Animal: Mico-leao-dourado")
elif (x ==50):
	print("Animal: Onca-pintada")
elif (x ==100):
	print("Animal: Garoupa")
else:
	print("Animal: Invalido")
-- EXECUTION TIME:
0.196635
-- TEST CASE 1:
---- input:
100
---- correct output:
Entrada: 100
Animal: Garoupa
---- user output:
Entrada: 100
Animal: Garoupa
-- TEST CASE 2:
---- input:
7
---- correct output:
Entrada: 7
Animal: Invalido
---- user output:
Entrada: 7
Animal: Invalido
-- TEST CASE 3:
---- input:
50
---- correct output:
Entrada: 50
Animal: Onca-pintada
---- user output:
Entrada: 50
Animal: Onca-pintada
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
