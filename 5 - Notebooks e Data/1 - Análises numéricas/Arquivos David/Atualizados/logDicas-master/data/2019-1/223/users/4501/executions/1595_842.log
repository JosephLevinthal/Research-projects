== TEST (2019-04-12 16:08:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
d=int(input("Digite um numero: "))
a=d // 1000
b=(d // 100) % 10
c=(d // 10) % 10
d= d % 10
soma=a + b + c + d
print(a , "+" , b , "+" , c , "+" , d ,"=" , soma)

-- OUTPUT:
9 + 1 + 7 + 3 = 20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-12 16:09:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
d=int(input("Digite um numero: "))
a=d // 1000
b=(d // 100) % 10
c=(d // 10) % 10
d= d % 10
soma=a + b + c + d
print(a , "+" , b , "+" , c , "+" , d ,"=" , soma)

-- EXECUTION TIME:
0.14477
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
9 + 1 + 7 + 3 = 20
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
1 + 0 + 1 + 0 = 2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 16:09:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
d=int(input("Digite um numero: "))
a=d // 1000
b=(d // 100) % 10
c=(d // 10) % 10
d= d % 10
soma=a + b + c + d
print(soma)

-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-12 16:09:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
d=int(input("Digite um numero: "))
a=d // 1000
b=(d // 100) % 10
c=(d // 10) % 10
d= d % 10
soma=a + b + c + d
print(soma)

-- EXECUTION TIME:
0.210709
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
