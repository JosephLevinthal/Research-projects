== TEST (2019-04-25 17:13:20) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

preco = 2

print (preco)
-- OUTPUT:
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:14:05) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a - input("a: ")
b = input("b: ")
preco = a + b

print (preco)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    a - input()
NameError: name 'a' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:14:28) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a - float(input("a: "))
b = float(input("b: "))
preco = a + b

print (preco)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    a - float(input())
NameError: name 'a' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:14:53) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = input("a: ")
b = input("b: ")
preco = a + b

print (preco)
-- OUTPUT:
11.35.7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:15:20) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = float(input("a: "))
b = float(input("b: "))

preco = a + b

print (preco)
-- OUTPUT:
17.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 14:13:08) 
-- CODE:
# H é altura total do tanque
-- OUTPUT:
17.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:57:51) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# v é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if H <= 0 and h <= 0 and r <= 0 and H < h and H < (2 * r):
	#entrada inválida
	print ("Entradas:",H,h,r)
	print ("Volume:",v,"litros")
	

#entrada válida
print ("Entradas:",H,h,r)
print ("Volume:",v,"litros")




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 21, in <module>
    print ("Volume:",v,"litros")
NameError: name 'v' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:58:23) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# v é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if H <= 0 and h <= 0 and r <= 0 and H < h and H < (2 * r):
	#entrada inválida
	print ("Entradas:",H,h,r)
	print ("Volume:",v,"litros")
else:
	#entrada válida
	print ("Entradas:",H,h,r)
	print ("Volume:",v,"litros")




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 20, in <module>
    print ("Volume:",v,"litros")
NameError: name 'v' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:33:21) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# v é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if H <= 0 and h <= 0 and r <= 0 and H < h and H < (2 * r):
	#entrada inválida
	print ("Entradas:",H,h,r)
	print ("Volume:",v,"litros")

	
	#entrada válida
	print ("Entradas:",H,h,r)
	print ("Volume:",v,"litros")




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 20, in <module>
    print ("Volume:",v,"litros")
NameError: name 'v' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:33:49) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# v é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if H <= 0 and h <= 0 and r <= 0 and H < h and H < (2 * r):
	#entrada inválida
	print ("Entradas:",H,h,r)
	print ("Volume:",v,"litros")

	
	#entrada válida
	#print ("Entradas:",H,h,r)
	#print ("Volume:",v,"litros")




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 20, in <module>
    print ("Volume:",v,"litros")
NameError: name 'v' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 17:34:45) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# v é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if H < 0 or h < 0 or r < 0:
	#entrada inválida
	print ("Entradas:",H,h,r)
	print ("Volume:",v,"litros")
elif h < r:
	v = (1/3) * pi * h ** 2 * (3 * r - h)
	#entrada válida
	print ("Entradas:",H,h,r)
	print ("Volume:",v,"litros")
elif h < H - r:
	v = (2/3) * pi * r ** 3 + pi * r ** 2 * (h - r)
	#entrada válida
	print ("Entradas:",H,h,r)
	print ("Volume:",v,"litros")
elif h <= H:
	v = (4/3) * pi * r ** 3 + pi * r ** 2 * (H - 2 * r) - (1/3) + pi
	#entrada válida
	print ("Entradas:",H,h,r)
	print ("Volume:",v,"litros")


-- EXECUTION TIME:
0.142808
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 5.7 2.3
Volume: 81.98719067828401 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:

-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 4.0 6.0
Volume: 234.57225146803788 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 17:35:50) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# v é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if H < 0 or h < 0 or r < 0:
	#entrada inválida
	print ("Entradas:",H,h,r)
	print ("Volume:",v,"litros")
elif h < r:
	v = (1/3) * pi * h ** 2 * (3 * r - h)
	#entrada válida
	print ("Entradas:",H,h,r)
	print ("Volume:",v,"litros")
elif h < H - r:
	v = (2/3) * pi * r ** 3 + pi * r ** 2 * (h - r)
	#entrada válida
	print ("Entradas:",H,h,r)
	print ("Volume:",v,"litros")
elif h <= H:
	v = (4/3) * pi * r ** 3 + pi * r ** 2 * (H - 2 * r) - (1/3) * pi * (H - h) ** 2 * (3 * r - H + h)
	#entrada válida
	print ("Entradas:",H,h,r)
	print ("Volume:",v,"litros")


-- EXECUTION TIME:
0.137693
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 5.7 2.3
Volume: 81.98719067828401 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:

-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 4.0 6.0
Volume: 234.57225146803788 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 17:36:30) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# v é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if H < 0 or h < 0 or r < 0:
	#entrada inválida
	print ("Entradas:",H,h,r)
	print ("Volume:",v,"litros")
elif h < r:
	v = (1/3) * pi * h ** 2 * (3 * r - h)
	#entrada válida
	print ("Entradas:",H,h,r)
	print ("Volume:",v,"litros")
elif h < H - r:
	v = (2/3) * pi * r ** 3 + pi * r ** 2 * (h - r)
	#entrada válida
	print ("Entradas:",H,h,r)
	print ("Volume:",v,"litros")
elif h <= H:
	v = (4/3) * pi * r ** 3 + pi * r ** 2 * (H - 2 * r) - (1/3) * pi * (H - h) ** 2 * (3 * r - H + h)
	#entrada válida
	print ("Entradas:",H,h,r)
	print ("Volume:",v,"litros")
else:
	#entrada inválida
	print ("Entradas:",H,h,r)
	print ("Volume:",v,"litros")

-- EXECUTION TIME:
0.149096
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 5.7 2.3
Volume: 81.98719067828401 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 9.5 2.2
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 4.0 6.0
Volume: 234.57225146803788 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:36:41) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# v é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if H < 0 or h < 0 or r < 0:
	#entrada inválida
	print ("Entradas:",H,h,r)
	print ("Volume:",v,"litros")
elif h < r:
	v = (1/3) * pi * h ** 2 * (3 * r - h)
	#entrada válida
	print ("Entradas:",H,h,r)
	print ("Volume:",v,"litros")
elif h < H - r:
	v = (2/3) * pi * r ** 3 + pi * r ** 2 * (h - r)
	#entrada válida
	print ("Entradas:",H,h,r)
	print ("Volume:",v,"litros")
elif h <= H:
	v = (4/3) * pi * r ** 3 + pi * r ** 2 * (H - 2 * r) - (1/3) * pi * (H - h) ** 2 * (3 * r - H + h)
	#entrada válida
	print ("Entradas:",H,h,r)
	print ("Volume:",v,"litros")
else:
	#entrada inválida
	print ("Entradas:",H,h,r)
	print ("Volume:",v,"litros")

-- OUTPUT:
Entradas: 11.3 5.7 2.3
Volume: 81.98719067828401 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 17:41:51) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# v é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if H < 0 or h < 0 or r < 0:
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")
elif h < r:
	v = (1/3) * pi * h ** 2 * (3 * r - h)
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
elif h < H - r:
	v = (2/3) * pi * r ** 3 + pi * r ** 2 * (h - r)
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
elif h <= H:
	v = (4/3) * pi * r ** 3 + pi * r ** 2 * (H - 2 * r) - (1/3) * pi * (H - h) ** 2 * (3 * r - H + h)
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
else:
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")

-- EXECUTION TIME:
0.155799
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 234.572 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:42:04) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# v é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if H < 0 or h < 0 or r < 0:
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")
elif h < r:
	v = (1/3) * pi * h ** 2 * (3 * r - h)
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
elif h < H - r:
	v = (2/3) * pi * r ** 3 + pi * r ** 2 * (h - r)
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
elif h <= H:
	v = (4/3) * pi * r ** 3 + pi * r ** 2 * (H - 2 * r) - (1/3) * pi * (H - h) ** 2 * (3 * r - H + h)
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
else:
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 17:50:37) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# v é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if H < 0 or h < 0 or r < 0:
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")
elif h < r:
	v = ((1/3) * pi * h ** 2 * (3 * r - h)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
elif h < H - r:
	v = ((2/3) * pi * r ** 3 + pi * r ** 2 * (h - r)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
elif h <= H:
	v = ((4/3) * pi * r ** 3 + pi * r ** 2 * (H - 2 * r) - (1/3) * pi * (H - h) ** 2 * (3 * r - H + h)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
else:
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")

-- EXECUTION TIME:
0.1465
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 234572.251 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:50:40) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# v é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if H < 0 or h < 0 or r < 0:
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")
elif h < r:
	v = ((1/3) * pi * h ** 2 * (3 * r - h)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
elif h < H - r:
	v = ((2/3) * pi * r ** 3 + pi * r ** 2 * (h - r)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
elif h <= H:
	v = ((4/3) * pi * r ** 3 + pi * r ** 2 * (H - 2 * r) - (1/3) * pi * (H - h) ** 2 * (3 * r - H + h)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
else:
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 17:56:59) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# v é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if H < 0 or h < 0 or r < 0:
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")
elif h < r:
	v = ((1/3) * pi * h ** 2 * (3 * r - h)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
elif h < H - r:
	v = ((2/3) * pi * r ** 3 + pi * r ** 2 * (h - r)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
elif h <= H:
	v = ((4/3) * pi * r ** 3 + pi * r ** 2 * (H - 2 * r) - (1/3) * pi * (H - h) ** 2 * (3 * r - H + h)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
else:
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")

-- EXECUTION TIME:
0.181007
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 234572.251 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 19:51:48) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# v é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if (H < 0 or h < 0 or r < 0:)
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")
elif (h < r);
	v = (1./3) * pi * h**2 * (3 * r - h)
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
elif (h < H - r):
	v = (2./3) * pi * h**3 + pi * r**2 * (h - r)
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
elif h <= H:
	v = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3  * r - H + h)
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
else:
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")

-- EXECUTION TIME:
0.199237
-- ERROR:
  File "/home/codebench/codes/1679/1102/main.py", line 15
    if (H < 0 or h < 0 or r < 0:)
                               ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 19:51:51) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# v é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if (H < 0 or h < 0 or r < 0:)
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")
elif (h < r);
	v = (1./3) * pi * h**2 * (3 * r - h)
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
elif (h < H - r):
	v = (2./3) * pi * h**3 + pi * r**2 * (h - r)
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
elif h <= H:
	v = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3  * r - H + h)
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
else:
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")

-- ERROR:
File "XXXX", line 15
    if (H < 0 or h < 0 or r < 0:)
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 19:52:20) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# v é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if (H < 0 or h < 0 or r < 0):
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")
elif (h < r);
	v = (1./3) * pi * h**2 * (3 * r - h)
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
elif (h < H - r):
	v = (2./3) * pi * h**3 + pi * r**2 * (h - r)
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
elif h <= H:
	v = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3  * r - H + h)
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
else:
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")

-- ERROR:
File "XXXX", line 19
    elif (h < r);
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 19:52:32) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# v é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if (H < 0 or h < 0 or r < 0):
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")
elif (h < r):
	v = (1./3) * pi * h**2 * (3 * r - h)
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
elif (h < H - r):
	v = (2./3) * pi * h**3 + pi * r**2 * (h - r)
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
elif h <= H:
	v = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3  * r - H + h)
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
else:
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 444.372 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 19:54:21) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# v é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if (H < 0 or h < 0 or r < 0):
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")
elif (h < r):
	v = ((1./3) * pi * h**2 * (3 * r - h)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
elif (h < H - r):
	v = ((2./3) * pi * h**3 + pi * r**2 * (h - r)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
elif h <= H:
	v = ((4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3  * r - H + h)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
else:
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 444371.998 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 19:54:37) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# v é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if (H < 0 or h < 0 or r < 0):
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")
elif (h < r):
	v = ((1./3) * pi * h**2 * (3 * r - h)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
elif (h < H - r):
	v = ((2./3) * pi * h**3 + pi * r**2 * (h - r)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
elif h <= H:
	v = ((4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3  * r - H + h)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
else:
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")

-- EXECUTION TIME:
0.202269
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 444371.998 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 234572.251 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 19:55:21) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# v é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if (H < 0 or h < 0 or r < 0):
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")
elif (h < r):
	v = ((1./3) * pi * h**2 * (3 * r - h)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
elif (h < H - r):
	v = ((2./3) * pi * h**3 + pi * r**2 * (h - r)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
elif (h <= H):
	v = ((4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3  * r - H + h)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
else:
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")

-- EXECUTION TIME:
0.267636
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 444371.998 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 234572.251 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 19:55:56) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# v é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if (H < 0 or h < 0 or r < 0):
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")
elif (h < r):
	v = ((1./3) * pi * h**2 * (3 * r - h)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
elif (h < H - r):
	v = ((2./3) * pi * h**3 + pi * r**2 * (h - r)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
elif (h <= H):
	v = ((4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3  * r - H + h)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
else:
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 444371.998 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 19:55:56) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# v é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if (H < 0 or h < 0 or r < 0):
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")
elif (h < r):
	v = ((1./3) * pi * h**2 * (3 * r - h)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
elif (h < H - r):
	v = ((2./3) * pi * h**3 + pi * r**2 * (h - r)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
elif (h <= H):
	v = ((4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3  * r - H + h)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
else:
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")

-- EXECUTION TIME:
0.205241
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 444371.998 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Altura do tanque: Nivel de Combustivel do tanque: Raio dos bojos semiesfericos inferior e superior: Entradas: 8.0 , 4.0 , 6.0
Volume: 234572.251 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 19:56:28) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# v é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if (H < 0 or h < 0 or r < 0):
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")
elif (h < r):
	v = ((1./3) * pi * h**2 * (3 * r - h)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
elif (h < H - r):
	v = ((2./3) * pi * h**3 + pi * r**2 * (h - r)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
elif (h <= H):
	v = ((4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3  * r - H + h)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
else:
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 444371.998 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 19:57:05) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# v é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if (H < 0 or h < 0 or r < 0):
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")
elif (h < r):
	v = ((1./3) * pi * h**2 * (3 * r - h)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
elif (h < H - r):
	v = ((2./3) * pi * h**3 + pi * r**2 * (h - r)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
elif (h <= H):
	v = ((4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3  * r - H + h)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
else:
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 444371.998 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 19:59:54) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# v é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if (H < 0 or h < 0 or r < 0):
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")
elif (h < r):
	v = ((1./3) * pi * h**2 * (3 * r - h)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
elif (h < H - r):
	v = ((2./3) * pi * h**3 + pi * r**2 * (h - r)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
elif (h <= H):
	v = ((4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3  * r - H + h)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")


-- EXECUTION TIME:
0.242823
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 444371.998 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:

-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 234572.251 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 19:59:56) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# v é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if (H < 0 or h < 0 or r < 0):
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")
elif (h < r):
	v = ((1./3) * pi * h**2 * (3 * r - h)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
elif (h < H - r):
	v = ((2./3) * pi * h**3 + pi * r**2 * (h - r)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
elif (h <= H):
	v = ((4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3  * r - H + h)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")


-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 444371.998 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 20:02:13) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# v é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if (H < 0 and h < 0 and r < 0):
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")

elif (h < r):
	v = ((1./3) * pi * h**2 * (3 * r - h)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")

elif (h < H - r):
	v = ((2./3) * pi * h**3 + pi * r**2 * (h - r)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")

elif (h <= H):
	v = ((4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3  * r - H + h)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")


-- EXECUTION TIME:
0.198413
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 444371.998 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:

-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 234572.251 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:04:38) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# v é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if (H < 0 and h < 0 and r < 0):
	#entrada inválida
	print ("Entradas: ",H," , ",h," , ",r)
	print ("Entradas invalidas")

elif (h < r):
	v = ((1./3) * pi * h**2 * (3 * r - h)) * 1000
	#entrada válida
	print ("Entradas: ",H," , ",h," , ",r)
	print ("Volume: ",round(v,3)," litros")

elif (h < H - r):
	v = ((2./3) * pi * h**3 + pi * r**2 * (h - r)) * 1000
	#entrada válida
	print ("Entradas: ",H," , ",h," , ",r)
	print ("Volume: ",round(v,3)," litros")

elif (h <= H):
	v = ((4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3  * r - H + h)) * 1000
	#entrada válida
	print ("Entradas: ",H," , ",h," , ",r)
	print ("Volume: ",round(v,3)," litros")


-- OUTPUT:
Entradas:  11.3  ,  5.7  ,  2.3
Volume:  444371.998  litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:07:07) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# v é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if (H < 0 and h < 0 and r < 0):
	#entrada inválida
	print ("Entradas: ",H," , ",h," , ",r)
	print ("Entradas invalidas")

elif (h < r):
	v = ((1./3) * pi * h**2 * (3 * r - h)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")

elif (h < H - r):
	v = ((2./3) * pi * h**3 + pi * r**2 * (h - r)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")

elif (h <= H):
	v = ((4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3  * r - H + h)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")


-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 444371.998 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 20:07:33) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# v é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if (H < 0 and h < 0 and r < 0):
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")

elif (h < r):
	v = ((1./3) * pi * h**2 * (3 * r - h)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")

elif (h < H - r):
	v = ((2./3) * pi * h**3 + pi * r**2 * (h - r)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")

elif (h <= H):
	v = ((4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3  * r - H + h)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")


-- EXECUTION TIME:
0.300484
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 444371.998 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:

-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 234572.251 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 20:08:56) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# V é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if (H < 0 and h < 0 and r < 0):
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")

elif (h < r):
	V = ((1./3) * pi * h**2 * (3 * r - h)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(V,3),"litros")

elif (h < H - r):
	V = ((2./3) * pi * h**3 + pi * r**2 * (h - r)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(V,3),"litros")

elif (h <= H):
	V = ((4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3  * r - H + h)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(V,3),"litros")


-- EXECUTION TIME:
0.188383
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 444371.998 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:

-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 234572.251 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:10:03) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# V é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if (H < 0 and h < 0 and r < 0 and H > h and h > 2*r):
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")

elif (h < r):
	V = ((1./3) * pi * h**2 * (3 * r - h)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(V,3),"litros")

elif (h < H - r):
	V = ((2./3) * pi * h**3 + pi * r**2 * (h - r)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(V,3),"litros")

elif (h <= H):
	V = ((4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3  * r - H + h)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(V,3),"litros")


-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 444371.998 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:11:25) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# V é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if (H < 0 or h < 0 or r < 0 or H > h or h > 2*r):
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")

elif (h < r):
	V = ((1./3) * pi * h**2 * (3 * r - h)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(V,3),"litros")

elif (h < H - r):
	V = ((2./3) * pi * h**3 + pi * r**2 * (h - r)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(V,3),"litros")

elif (h <= H):
	V = ((4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3  * r - H + h)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(V,3),"litros")


-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Entradas invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:11:45) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# V é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if (H < 0 or h < 0 or r < 0 or H > h or h > 2*r):
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")

elif (h < r):
	V = ((1./3) * pi * h**2 * (3 * r - h)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(V,3),"litros")

elif (h < H - r):
	V = ((2./3) * pi * h**3 + pi * r**2 * (h - r)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(V,3),"litros")

elif (h <= H):
	V = ((4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3  * r - H + h)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(V,3),"litros")


-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Entradas invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 20:11:57) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# V é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if (H < 0 or h < 0 or r < 0 or H > h or h > 2*r):
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")

elif (h < r):
	V = ((1./3) * pi * h**2 * (3 * r - h)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(V,3),"litros")

elif (h < H - r):
	V = ((2./3) * pi * h**3 + pi * r**2 * (h - r)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(V,3),"litros")

elif (h <= H):
	V = ((4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3  * r - H + h)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(V,3),"litros")


-- EXECUTION TIME:
0.190021
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Entradas invalidas
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:12:11) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# V é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if (H < 0 or h < 0 or r < 0 or H > h or h > 2*r):
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")

elif (h < r):
	V = ((1./3) * pi * h**2 * (3 * r - h)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(V,3),"litros")

elif (h < H - r):
	V = ((2./3) * pi * h**3 + pi * r**2 * (h - r)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(V,3),"litros")

elif (h <= H):
	V = ((4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3  * r - H + h)) * 1000
	#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(V,3),"litros")


-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Entradas invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 20:23:46) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# V é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if (H > 0) and (h > 0) and (r > 0) and (H > h) and (H > (2 * r)):
		if (h < r):
		V = ((1./3) * pi * h**2 * (3 * r - h)) * 1000
		#entrada válida
		print ("Entradas:",H,",",h,",",r)
		print ("Volume:",round(V,3),"litros")
		
		elif (h < H - r):
			V = ((2./3) * pi * h**3 + pi * r**2 * (h - r)) * 1000
			#entrada válida
			print ("Entradas:",H,",",h,",",r)
			print ("Volume:",round(V,3),"litros")
			
		elif (h <= H):
			V = ((4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3  * r - H + h)) * 1000
			#entrada válida
			print ("Entradas:",H,",",h,",",r)
			print ("Volume:",round(V,3),"litros")
			
		else:
			#entrada inválida
			print ("Entradas:",H,",",h,",",r)
			print ("Entradas invalidas")
			
else:
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")
-- EXECUTION TIME:
0.197245
-- ERROR:
  File "/home/codebench/codes/1679/1102/main.py", line 17
    V = ((1./3) * pi * h**2 * (3 * r - h)) * 1000
    ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:23:48) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# V é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if (H > 0) and (h > 0) and (r > 0) and (H > h) and (H > (2 * r)):
		if (h < r):
		V = ((1./3) * pi * h**2 * (3 * r - h)) * 1000
		#entrada válida
		print ("Entradas:",H,",",h,",",r)
		print ("Volume:",round(V,3),"litros")
		
		elif (h < H - r):
			V = ((2./3) * pi * h**3 + pi * r**2 * (h - r)) * 1000
			#entrada válida
			print ("Entradas:",H,",",h,",",r)
			print ("Volume:",round(V,3),"litros")
			
		elif (h <= H):
			V = ((4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3  * r - H + h)) * 1000
			#entrada válida
			print ("Entradas:",H,",",h,",",r)
			print ("Volume:",round(V,3),"litros")
			
		else:
			#entrada inválida
			print ("Entradas:",H,",",h,",",r)
			print ("Entradas invalidas")
			
else:
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")
-- ERROR:
File "XXXX", line 17
    V = ((1./3) * pi * h**2 * (3 * r - h)) * 1000
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:24:32) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# V é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if (H > 0) and (h > 0) and (r > 0) and (H > h) and (H > (2 * r)):
	if (h < r):
		V = ((1./3) * pi * h**2 * (3 * r - h)) * 1000
		#entrada válida
		print ("Entradas:",H,",",h,",",r)
		print ("Volume:",round(V,3),"litros")
		
		elif (h < H - r):
			V = ((2./3) * pi * h**3 + pi * r**2 * (h - r)) * 1000
			#entrada válida
			print ("Entradas:",H,",",h,",",r)
			print ("Volume:",round(V,3),"litros")
			
		elif (h <= H):
			V = ((4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3  * r - H + h)) * 1000
			#entrada válida
			print ("Entradas:",H,",",h,",",r)
			print ("Volume:",round(V,3),"litros")
			
		else:
			#entrada inválida
			print ("Entradas:",H,",",h,",",r)
			print ("Entradas invalidas")
			
else:
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")
-- ERROR:
File "XXXX", line 22
    elif (h < H - r):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:25:42) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# V é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if (H > 0) and (h > 0) and (r > 0) and (H > h) and (H > (2 * r)):
	if (h < r):
		V = ((1./3) * pi * h**2 * (3 * r - h)) * 1000
		#entrada válida
		print ("Entradas:",H,",",h,",",r)
		print ("Volume:",round(V,3),"litros")
		
	elif (h < H - r):
		V = ((2./3) * pi * h**3 + pi * r**2 * (h - r)) * 1000
		#entrada válida
		print ("Entradas:",H,",",h,",",r)
		print ("Volume:",round(V,3),"litros")
			
	elif (h <= H):
		V = ((4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3  * r - H + h)) * 1000
		#entrada válida
		print ("Entradas:",H,",",h,",",r)
		print ("Volume:",round(V,3),"litros")
			
	else:
		#entrada inválida
		print ("Entradas:",H,",",h,",",r)
		print ("Entradas invalidas")
			
else:
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 444371.998 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 20:26:01) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# V é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if (H > 0) and (h > 0) and (r > 0) and (H > h) and (H > (2 * r)):
	if (h < r):
		V = ((1./3) * pi * h**2 * (3 * r - h)) * 1000
		#entrada válida
		print ("Entradas:",H,",",h,",",r)
		print ("Volume:",round(V,3),"litros")
		
	elif (h < H - r):
		V = ((2./3) * pi * h**3 + pi * r**2 * (h - r)) * 1000
		#entrada válida
		print ("Entradas:",H,",",h,",",r)
		print ("Volume:",round(V,3),"litros")
			
	elif (h <= H):
		V = ((4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3  * r - H + h)) * 1000
		#entrada válida
		print ("Entradas:",H,",",h,",",r)
		print ("Volume:",round(V,3),"litros")
			
	else:
		#entrada inválida
		print ("Entradas:",H,",",h,",",r)
		print ("Entradas invalidas")
			
else:
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")
-- EXECUTION TIME:
0.161258
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 444371.998 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:32:01) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# V é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if (H > 0) and (h > 0) and (r > 0) and (H > h) and (H > (2 * r)):
	if (h < r):
		V = ((1./3) * pi * h**2 * (3 * r - h)) * 1000
		#entrada válida
		print ("Entradas:",H,",",h,",",r)
		print ("Volume:",round(V,3),"litros")
		
	elif (h < H - r):
		V = ((2./3) * pi * h**3 + pi * r**2 * (h - r)) * 1000
		#entrada válida
		print ("Entradas:",H,",",h,",",r)
		print ("Volume:",round(V,3),"litros")
			
	elif (h <= H):
		V = ((4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3  * r - H + h)) * 1000
		#entrada válida
		print ("Entradas:",H,",",h,",",r)
		print ("Volume:",round(V,3),"litros")
			
	else:
		#entrada inválida
		print ("Entradas:",H,",",h,",",r)
		print ("Entradas invalidas")
			

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 444371.998 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 20:32:06) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# V é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if (H > 0) and (h > 0) and (r > 0) and (H > h) and (H > (2 * r)):
	if (h < r):
		V = ((1./3) * pi * h**2 * (3 * r - h)) * 1000
		#entrada válida
		print ("Entradas:",H,",",h,",",r)
		print ("Volume:",round(V,3),"litros")
		
	elif (h < H - r):
		V = ((2./3) * pi * h**3 + pi * r**2 * (h - r)) * 1000
		#entrada válida
		print ("Entradas:",H,",",h,",",r)
		print ("Volume:",round(V,3),"litros")
			
	elif (h <= H):
		V = ((4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3  * r - H + h)) * 1000
		#entrada válida
		print ("Entradas:",H,",",h,",",r)
		print ("Volume:",round(V,3),"litros")
			
	else:
		#entrada inválida
		print ("Entradas:",H,",",h,",",r)
		print ("Entradas invalidas")
			

-- EXECUTION TIME:
0.200762
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 444371.998 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:

-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:38:04) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# V é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if (H > 0) and (h > 0) and (r > 0) and (H > h) and (H > (2 * r)):
	if (h < r):
		V = ((1/3) * pi * h**2 * (3 * r - h)) * 1000
		#entrada válida
		print ("Entradas:",H,",",h,",",r)
		print ("Volume:",round(V,3),"litros")
		
	elif (h < H - r):
		V = ((2/3) * pi * h**3 + pi * r**2 * (h - r)) * 1000
		#entrada válida
		print ("Entradas:",H,",",h,",",r)
		print ("Volume:",round(V,3),"litros")
			
	elif (h <= H):
		V = ((4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3  * r - H + h)) * 1000
		#entrada válida
		print ("Entradas:",H,",",h,",",r)
		print ("Volume:",round(V,3),"litros")
			
	else:
		#entrada inválida
		print ("Entradas:",H,",",h,",",r)
		print ("Entradas invalidas")
			
else:
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 444371.998 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:41:32) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# V é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if (H > 0) and (h > 0) and (r > 0) and (H > h) and (H > (2 * r)):
	if (h < r):
		V = ((1/3) * pi * h**2 * (3 * r - h)) * 1000
		#entrada válida
		print ("Entradas:",H,",",h,",",r)
		print ("Volume:",round(V,3),"litros")
		
	elif (h < H - r):
		V = ((2/3) * pi * h**3 + pi * r**2 * (h - r)) * 1000
		#entrada válida
		print ("Entradas:",H,",",h,",",r)
		print ("Volume:",round(V,3),"litros")
			
	elif (h <= H):
		V = ((4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3  * r - H + h)) * 1000
		#entrada válida
		print ("Entradas:",H,",",h,",",r)
		print ("Volume:",round(V,3),"litros")
			
	else:
		#entrada inválida
		print ("Entradas:",H,",",h,",",r)
		print ("Entradas invalidas")
			
else:
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 444371.998 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:41:55) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# V é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if (H > 0) and (h > 0) and (r > 0) and (H > h) and (H > (2 * r)):
	if (h < r):
		V = ((1/3) * pi * h**2 * (3 * r - h)) * 1000
		#entrada válida
		print ("Entradas:",H,",",h,",",r)
		print ("Volume:",round(V,3),"litros")
		
	elif (h < H - r):
		V = ((2/3) * pi * h**3 + pi * r**2 * (h - r)) * 1000
		#entrada válida
		print ("Entradas:",H,",",h,",",r)
		print ("Volume:",round(V,3),"litros")
			
	elif (h <= H):
		V = ((4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3  * r - H + h)) * 1000
		#entrada válida
		print ("Entradas:",H,",",h,",",r)
		print ("Volume:",round(V,3),"litros")
			
	else:
		#entrada inválida
		print ("Entradas:",H,",",h,",",r)
		print ("Entradas invalidas")
			
else:
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 444371.998 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:42:06) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# V é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if (H > 0) and (h > 0) and (r > 0) and (H > h) and (H > (2 * r)):
	if (h < r):
		V = ((1/3) * pi * h**2 * (3 * r - h)) * 1000
		#entrada válida
		print ("Entradas:",H,",",h,",",r)
		print ("Volume:",round(V,3),"litros")
		
	elif (h < H - r):
		V = ((2/3) * pi * h**3 + pi * r**2 * (h - r)) * 1000
		#entrada válida
		print ("Entradas:",H,",",h,",",r)
		print ("Volume:",round(V,3),"litros")
			
	elif (h <= H):
		V = ((4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3  * r - H + h)) * 1000
		#entrada válida
		print ("Entradas:",H,",",h,",",r)
		print ("Volume:",round(V,3),"litros")
			
	else:
		#entrada inválida
		print ("Entradas:",H,",",h,",",r)
		print ("Entradas invalidas")
			
else:
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 444371.998 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:42:28) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# V é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))

if (H > 0) and (h > 0) and (r > 0) and (H > h) and (H > (2 * r)):
	if (h < r):
		V = ((1/3) * pi * h**2 * (3 * r - h)) * 1000
		#entrada válida
		print ("Entradas:",H,",",h,",",r)
		print ("Volume:",round(V,3),"litros")
		
	elif (h < H - r):
		V = ((2/3) * pi * h**3 + pi * r**2 * (h - r)) * 1000
		#entrada válida
		print ("Entradas:",H,",",h,",",r)
		print ("Volume:",round(V,3),"litros")
			
	elif (h <= H):
		V = ((4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3  * r - H + h)) * 1000
		#entrada válida
		print ("Entradas:",H,",",h,",",r)
		print ("Volume:",round(V,3),"litros")
			
	else:
		#entrada inválida
		print ("Entradas:",H,",",h,",",r)
		print ("Entradas invalidas")
			
else:
	#entrada inválida
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 444371.998 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 21:13:49) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# V é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))


if (h < 0 or H < 0 or r < 0):
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")
	
elif (h < r):
	v = ((1/3) * pi * (h ** 2) * (3 * r -h)) * 1000
elif (h - H - r):
	v = ((2 / 3) * pi * (r ** 3) + pi * (r ** 2) * (h - r)) * 1000
elif (h <= H):
	v = ((4/3) * pi * (r ** 3) + pi * (r ** 2) * (H -2 * r) - (1/3) * pi * ((H - h)**2 * (3 * r - H + h))) * 1000
else:
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")
	
#entrada válida
print ("Entradas:",H,",",h,",",r)
print ("Volume:",round(V,3),"litros")
	
	
-- EXECUTION TIME:
0.137175
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1102/main.py", line 32, in <module>
    print ("Volume:",round(V,3),"litros")
NameError: name 'V' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 21:13:50) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# V é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))


if (h < 0 or H < 0 or r < 0):
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")
	
elif (h < r):
	v = ((1/3) * pi * (h ** 2) * (3 * r -h)) * 1000
elif (h - H - r):
	v = ((2 / 3) * pi * (r ** 3) + pi * (r ** 2) * (h - r)) * 1000
elif (h <= H):
	v = ((4/3) * pi * (r ** 3) + pi * (r ** 2) * (H -2 * r) - (1/3) * pi * ((H - h)**2 * (3 * r - H + h))) * 1000
else:
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")
	
#entrada válida
print ("Entradas:",H,",",h,",",r)
print ("Volume:",round(V,3),"litros")
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 32, in <module>
    print ("Volume:",round(V,3),"litros")
NameError: name 'V' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 21:14:22) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# V é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))


if (h < 0 or H < 0 or r < 0):
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")
	
elif (h < r):
	v = ((1/3) * pi * (h ** 2) * (3 * r -h)) * 1000
elif (h - H - r):
	v = ((2 / 3) * pi * (r ** 3) + pi * (r ** 2) * (h - r)) * 1000
elif (h <= H):
	v = ((4/3) * pi * (r ** 3) + pi * (r ** 2) * (H -2 * r) - (1/3) * pi * ((H - h)**2 * (3 * r - H + h))) * 1000
else:
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")
	
#entrada válida
print ("Entradas:",H,",",h,",",r)
print ("Volume:",round(v,3),"litros")
	
	
-- EXECUTION TIME:
0.1785
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Volume: 133299.871 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 234572.251 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 21:16:16) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# V é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))


if (h < 0 or H < 0 or r < 0):
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")
	
elif (h < r):
	v = ((1/3) * pi * (h ** 2) * (3 * r -h)) * 1000
elif (h - H - r):
	v = ((2 / 3) * pi * (r ** 3) + pi * (r ** 2) * (h - r)) * 1000
elif (h <= H):
	v = ((4/3) * pi * (r ** 3) + pi * (r ** 2) * (H -2 * r) - (1/3) * pi * ((H - h)**2 * (3 * r - H + h))) * 1000
else:
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")
	
#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
	
	
-- EXECUTION TIME:
0.228997
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:

-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:

-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 21:16:19) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# V é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))


if (h < 0 or H < 0 or r < 0):
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")
	
elif (h < r):
	v = ((1/3) * pi * (h ** 2) * (3 * r -h)) * 1000
elif (h - H - r):
	v = ((2 / 3) * pi * (r ** 3) + pi * (r ** 2) * (h - r)) * 1000
elif (h <= H):
	v = ((4/3) * pi * (r ** 3) + pi * (r ** 2) * (H -2 * r) - (1/3) * pi * ((H - h)**2 * (3 * r - H + h))) * 1000
else:
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")
	
#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 32, in <module>
    print ("Volume:",round(V,3),"litros")
NameError: name 'V' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 21:17:38) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# V é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))


if (h < 0 or H < 0 or r < 0):
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")
	
elif (h < r):
	v = ((1/3) * pi * (h ** 2) * (3 * r -h)) * 1000
#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
elif (h - H - r):
	v = ((2 / 3) * pi * (r ** 3) + pi * (r ** 2) * (h - r)) * 1000
#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
elif (h <= H):
	v = ((4/3) * pi * (r ** 3) + pi * (r ** 2) * (H -2 * r) - (1/3) * pi * ((H - h)**2 * (3 * r - H + h))) * 1000
#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
else:
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")
	

	
	
-- EXECUTION TIME:
0.180405
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Volume: 133299.871 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 234572.251 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 21:17:39) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# V é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de Combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos inferior e superior: "))


if (h < 0 or H < 0 or r < 0):
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")
	
elif (h < r):
	v = ((1/3) * pi * (h ** 2) * (3 * r -h)) * 1000
#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
elif (h - H - r):
	v = ((2 / 3) * pi * (r ** 3) + pi * (r ** 2) * (h - r)) * 1000
#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
elif (h <= H):
	v = ((4/3) * pi * (r ** 3) + pi * (r ** 2) * (H -2 * r) - (1/3) * pi * ((H - h)**2 * (3 * r - H + h))) * 1000
#entrada válida
	print ("Entradas:",H,",",h,",",r)
	print ("Volume:",round(v,3),"litros")
else:
	print ("Entradas:",H,",",h,",",r)
	print ("Entradas invalidas")
	

	
	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:17:21) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# V é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

alturaH = float(input("Altura do tanque: "))
nivelH = float(input("Nivel de Combustivel do tanque: "))
raio = float(input("Raio dos bojos semiesfericos inferior e superior: "))

#cilindroVolume = pi * (r ** 2) * h
#esferaVolume = (4 / 3) * pi * (r ** 3)
#calotaVolume = (pi / 3) * (h ** 2) * (3 * r - h)

print("Entradas:", alturaH, ",", nivelH, ",", raio)

if (alturaH > 0) and (nivelH > 0) and (raio > 0) and (H > h) and (H > (2*raio)):
	
	if (nivelH < 0):
		volume = ((1/3) * pi * nivelH ** 2 * (3 * raio - NivelH)) * 1000
		print("Volume:",round(volume,3),"litros")
		
	elif (nivelH < alturaH - raio):
		volume = ((2/3) * pi * raio ** 3 + pi * raio ** 2 * (nivelH - raio)) * 1000
		print("Volume:",round(volume,3),"litros")
		
	elif (nivelH <= alturaH):
		volume = ((4/3) * pi * raio ** 3 + pi * raio ** 2 * (alturaH - 2 * raio) - (1/3) * pi * (alturaH - nivelH) ** 2 * (3 * raio - alturaH + nivelH)
		print("Volume:",round(volume,3),"litros")
else:
	volume ="Entradas invalidas"
	print(volume)

.

	

	
	
-- ERROR:
File "XXXX", line 33
    print("Volume:",round(volume,3),"litros")
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:17:55) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# V é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

alturaH = float(input("Altura do tanque: "))
nivelH = float(input("Nivel de Combustivel do tanque: "))
raio = float(input("Raio dos bojos semiesfericos inferior e superior: "))

#cilindroVolume = pi * (r ** 2) * h
#esferaVolume = (4 / 3) * pi * (r ** 3)
#calotaVolume = (pi / 3) * (h ** 2) * (3 * r - h)

print("Entradas:", alturaH, ",", nivelH, ",", raio)

if (alturaH > 0) and (nivelH > 0) and (raio > 0) and (H > h) and (H > (2*raio)):
	
	if (nivelH < 0):
		volume = ((1/3) * pi * nivelH ** 2 * (3 * raio - NivelH)) * 1000
		print("Volume:",round(volume,3),"litros")
		
	elif (nivelH < alturaH - raio):
		volume = ((2/3) * pi * raio ** 3 + pi * raio ** 2 * (nivelH - raio)) * 1000
		print("Volume:",round(volume,3),"litros")
		
	elif (nivelH <= alturaH):
		volume = ((4/3) * pi * raio ** 3 + pi * raio ** 2 * (alturaH - 2 * raio) - (1/3) * pi * (alturaH - nivelH) ** 2 * (3 * raio - alturaH + nivelH)) * 1000
		print("Volume:",round(volume,3),"litros")
else:
	volume ="Entradas invalidas"
	print(volume)

.

	

	
	
-- ERROR:
File "XXXX", line 38
    .
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:18:04) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# V é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

alturaH = float(input("Altura do tanque: "))
nivelH = float(input("Nivel de Combustivel do tanque: "))
raio = float(input("Raio dos bojos semiesfericos inferior e superior: "))

#cilindroVolume = pi * (r ** 2) * h
#esferaVolume = (4 / 3) * pi * (r ** 3)
#calotaVolume = (pi / 3) * (h ** 2) * (3 * r - h)

print("Entradas:", alturaH, ",", nivelH, ",", raio)

if (alturaH > 0) and (nivelH > 0) and (raio > 0) and (H > h) and (H > (2*raio)):
	
	if (nivelH < 0):
		volume = ((1/3) * pi * nivelH ** 2 * (3 * raio - NivelH)) * 1000
		print("Volume:",round(volume,3),"litros")
		
	elif (nivelH < alturaH - raio):
		volume = ((2/3) * pi * raio ** 3 + pi * raio ** 2 * (nivelH - raio)) * 1000
		print("Volume:",round(volume,3),"litros")
		
	elif (nivelH <= alturaH):
		volume = ((4/3) * pi * raio ** 3 + pi * raio ** 2 * (alturaH - 2 * raio) - (1/3) * pi * (alturaH - nivelH) ** 2 * (3 * raio - alturaH + nivelH)) * 1000
		print("Volume:",round(volume,3),"litros")
else:
	volume ="Entradas invalidas"
	print(volume)


	

	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 21, in <module>
    if (alturaH > 0) and (nivelH > 0) and (raio > 0) and (H > h) and (H > (2*raio)):
NameError: name 'H' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 13:18:55) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# V é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

alturaH = float(input("Altura do tanque: "))
nivelH = float(input("Nivel de Combustivel do tanque: "))
raio = float(input("Raio dos bojos semiesfericos inferior e superior: "))

#cilindroVolume = pi * (r ** 2) * h
#esferaVolume = (4 / 3) * pi * (r ** 3)
#calotaVolume = (pi / 3) * (h ** 2) * (3 * r - h)

print("Entradas:", alturaH, ",", nivelH, ",", raio)

if (alturaH > 0) and (nivelH > 0) and (raio > 0) and (alturaH > nivelH) and (alturaH > (2*raio)):
	
	if (nivelH < 0):
		volume = ((1/3) * pi * nivelH ** 2 * (3 * raio - NivelH)) * 1000
		print("Volume:",round(volume,3),"litros")
		
	elif (nivelH < alturaH - raio):
		volume = ((2/3) * pi * raio ** 3 + pi * raio ** 2 * (nivelH - raio)) * 1000
		print("Volume:",round(volume,3),"litros")
		
	elif (nivelH <= alturaH):
		volume = ((4/3) * pi * raio ** 3 + pi * raio ** 2 * (alturaH - 2 * raio) - (1/3) * pi * (alturaH - nivelH) ** 2 * (3 * raio - alturaH + nivelH)) * 1000
		print("Volume:",round(volume,3),"litros")
else:
	volume ="Entradas invalidas"
	print(volume)


	

	
	
-- EXECUTION TIME:
0.138277
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 13:19:27) 
-- CODE:
# H é altura total do tanque
# h é o nível de combustível no tanque
# r é o raio dos bojos semiesféricos interior e superior
# V é o volume do combustível

# saída:
# Calcular volume do combustível em litros com 3 casas decimais

from math import *

alturaH = float(input("Altura do tanque: "))
nivelH = float(input("Nivel de Combustivel do tanque: "))
raio = float(input("Raio dos bojos semiesfericos inferior e superior: "))

#cilindroVolume = pi * (r ** 2) * h
#esferaVolume = (4 / 3) * pi * (r ** 3)
#calotaVolume = (pi / 3) * (h ** 2) * (3 * r - h)

print("Entradas:", alturaH, ",", nivelH, ",", raio)

if (alturaH > 0) and (nivelH > 0) and (raio > 0) and (alturaH > nivelH) and (alturaH > (2*raio)):
	
	if (nivelH < 0):
		volume = ((1/3) * pi * nivelH ** 2 * (3 * raio - NivelH)) * 1000
		print("Volume:",round(volume,3),"litros")
		
	elif (nivelH < alturaH - raio):
		volume = ((2/3) * pi * raio ** 3 + pi * raio ** 2 * (nivelH - raio)) * 1000
		print("Volume:",round(volume,3),"litros")
		
	elif (nivelH < alturaH):
		volume = ((4/3) * pi * raio ** 3 + pi * raio ** 2 * (alturaH - 2 * raio) - (1/3) * pi * (alturaH - nivelH) ** 2 * (3 * raio - alturaH + nivelH)) * 1000
		print("Volume:",round(volume,3),"litros")
else:
	volume ="Entradas invalidas"
	print(volume)


	

	
	
-- EXECUTION TIME:
0.190373
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
