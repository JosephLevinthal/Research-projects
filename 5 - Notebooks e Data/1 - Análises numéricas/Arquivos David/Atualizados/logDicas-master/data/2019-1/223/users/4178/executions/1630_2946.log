== TEST (2019-04-02 17:03:07) 
-- CODE:
var= float(8.8+9.2+7.6/3)
print(var)
-- OUTPUT:
20.53333333333333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 17:03:41) 
-- CODE:
var= float((8.8+9.2+7.6)/3)
print(var)
-- OUTPUT:
8.533333333333333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 17:04:02) 
-- CODE:
var= float((8.8+9.2+7.6)/3)
print(round(var, 2)
-- ERROR:
File "XXXX", line 3
    
                       ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 17:04:15) 
-- CODE:
var= float((8.8+9.2+7.6)/3)
print(round(var, 2))
-- OUTPUT:
8.53
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 17:07:48) 
-- CODE:
var1= float(input("ML"))
var2= float(input("MT"))
var3= float(input("MP"))

ml= var1/100 * 100
mt= var2/100 * 100
mp= var3/100 *100

print(ml)

-- OUTPUT:
8.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 17:07:59) 
-- CODE:
var1= float(input("ML"))
var2= float(input("MT"))
var3= float(input("MP"))

ml= var1/100 * 100
mt= var2/100 * 100
mp= var3/100 *100

print()

-- OUTPUT:
8.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 17:08:11) 
-- CODE:
var1= float(input("ML"))
var2= float(input("MT"))
var3= float(input("MP"))

m1= var1/100 * 100
m2= var2/100 * 100
m3= var3/100 *100

print(m1)

-- OUTPUT:
8.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 17:09:45) 
-- CODE:
var1= float(input("ML"))
var2= float(input("MT"))
var3= float(input("MP"))

m1= var1* (25/100 ) 
m2= var2* (30/100)
m3= var3 * (45/100)

print(m1)

-- OUTPUT:
2.125
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 17:10:44) 
-- CODE:
var1= float(input("ML"))
var2= float(input("MT"))
var3= float(input("MP"))

m1= var1* (25/100 ) 
m2= var2* (30/100)
m3= var3 * (45/100)

total= m1 + m2 + m2

print(total)

-- OUTPUT:
5.904999999999999
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 17:13:44) 
-- CODE:
var1= float(input("ML"))
var2= float(input("MT"))
var3= float(input("MP"))

m1= var1* (25/100 ) 
m2= var2* (30/100)
m3= var3 * (45/100)

total= 

print(total)

-- EXECUTION TIME:
0.132374
-- ERROR:
  File "/home/codebench/codes/1630/2946/main.py", line 9
    total= 
          ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 17:15:45) 
-- CODE:
var1= float(input("ML"))
var2= float(input("MT"))
var3= float(input("MP"))

m1=  (25/100) 
m2=  (30/100)
m3=  (45/100)



print(tm1)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(tm1)
NameError: name 'tm1' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 17:15:58) 
-- CODE:
var1= float(input("ML"))
var2= float(input("MT"))
var3= float(input("MP"))

m1=  (25/100) 
m2=  (30/100)
m3=  (45/100)



print(m1)

-- OUTPUT:
0.25
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 17:16:49) 
-- CODE:
var1= float(input("ML"))
var2= float(input("MT"))
var3= float(input("MP"))

m1=  (25/var1) 
m2=  (30/var2)
m3=  (45/var3)

total= m1 + m2 + m3


print(total)

-- OUTPUT:
16.526610644257705
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 17:17:28) 
-- CODE:
var1= float(input("ML"))
var2= float(input("MT"))
var3= float(input("MP"))

m1=  (25/var1) 
m2=  (30/var2)
m3=  (45/var3)

total= m1 + m2 + m3/2


print(total)

-- OUTPUT:
12.11484593837535
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 17:18:20) 
-- CODE:
var1= float(input("ML"))
var2= float(input("MT"))
var3= float(input("MP"))

m1=  (25/var1) 
m2=  (30/var2)
m3=  (45/var3)

total= m1 + m2 + m3/3


print(total)

-- OUTPUT:
10.644257703081234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 17:18:46) 
-- CODE:
var1= float(input("ML"))
var2= float(input("MT"))
var3= float(input("MP"))

m1=  (25/var1) 
m2=  (30/var2)
m3=  (45/var3)

total= m1 + m2 + m3/3


print(round(total, 2))

-- OUTPUT:
10.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 17:24:29) 
-- CODE:
var1= float(input("ML"))
var2= float(input("MT"))
var3= float(input("MP"))

m1=  (25/var1) * 100
m2=  (30/var2) * 100
m3=  (45/var3) *100

total= m1 + m2 + m3


print(round(total, 2))

-- OUTPUT:
1652.66
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 17:25:01) 
-- CODE:
var1= float(input("ML"))
var2= float(input("MT"))
var3= float(input("MP"))

m1=  (25/var1) * 100
m2=  (30/var2) * 100
m3=  (45/var3) *100

total= m1 + m2 + m3/100


print(round(total, 2))

-- OUTPUT:
779.13
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 17:25:30) 
-- CODE:
var1= float(input("ML"))
var2= float(input("MT"))
var3= float(input("MP"))

m1=  (25/var1) * 100
m2=  (30/var2) * 100
m3=  (45/var3) *100

total= m1 + m2 + m3/3


print(round(total, 2))

-- OUTPUT:
1064.43
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 17:25:57) 
-- CODE:
var1= float(input("ML"))
var2= float(input("MT"))
var3= float(input("MP"))

m1=  (25/var1) * 100
m2=  (30/var2) * 100
m3=  (45/var3) *100

total= (m1 + m2 + m3/3)/100


print(round(total, 2))

-- OUTPUT:
10.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 17:26:19) 
-- CODE:
var1= float(input("ML"))
var2= float(input("MT"))
var3= float(input("MP"))

m1=  (25/var1) * 100
m2=  (30/var2) * 100
m3=  (45/var3) *100

total= (m1 + m2 + m3/3)/100


print(round(total, 2))

-- EXECUTION TIME:
0.151127
-- TEST CASE 1:
---- input:
8.5
6.3
5.1
---- correct output:
6.31
---- user output:
10.64
-- TEST CASE 2:
---- input:
4.9
3.21
9.1
---- correct output:
6.28
---- user output:
16.1
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 17:26:23) 
-- CODE:
var1= float(input("ML"))
var2= float(input("MT"))
var3= float(input("MP"))

m1=  (25/var1) * 100
m2=  (30/var2) * 100
m3=  (45/var3) *100

total= (m1 + m2 + m3/3)/100


print(round(total, 2))

-- OUTPUT:
10.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 17:27:12) 
-- CODE:
var1= float(input("ML"))
var2= float(input("MT"))
var3= float(input("MP"))

m1=  float((25/var1) * 100)
m2=  float((30/var2) * 100)
m3=  float((45/var3) *100)

total= (m1 + m2 + m3/3)/100


print(round(total, 2))

-- OUTPUT:
10.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 17:27:25) 
-- CODE:
var1= float(input("ML"))
var2= float(input("MT"))
var3= float(input("MP"))

m1=  float((25/var1) * 100)
m2=  float((30/var2) * 100)
m3=  float((45/var3) *100)

total= (m1 + m2 + m3/3)/100


print(round(total, 2))

-- EXECUTION TIME:
0.187148
-- TEST CASE 1:
---- input:
8.5
6.3
5.1
---- correct output:
6.31
---- user output:
10.64
-- TEST CASE 2:
---- input:
4.9
3.21
9.1
---- correct output:
6.28
---- user output:
16.1
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 17:28:05) 
-- CODE:
var1= float(input("ML"))
var2= float(input("MT"))
var3= float(input("MP"))

m1=  float((25/var1))
m2=  float((30/var2))
m3=  float((45/var3)) 

total= (m1 + m2 + m3/3)


print(round(total, 2))

-- OUTPUT:
10.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 17:29:03) 
-- CODE:
var1= float(input("ML"))
var2= float(input("MT"))
var3= float(input("MP"))

m1=  float((25/100*var1))
m2=  float((30/100*var2))
m3=  float((45/100*var3)) 

total= (m1 + m2 + m3/3)


print(round(total, 2))

-- OUTPUT:
4.78
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 17:29:21) 
-- CODE:
var1= float(input("ML"))
var2= float(input("MT"))
var3= float(input("MP"))

m1=  float((25/100*var1))
m2=  float((30/100*var2))
m3=  float((45/100*var3)) 

total= (m1 + m2 + m3)


print(round(total, 2))

-- OUTPUT:
6.31
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 17:29:32) 
-- CODE:
var1= float(input("ML"))
var2= float(input("MT"))
var3= float(input("MP"))

m1=  float((25/100*var1))
m2=  float((30/100*var2))
m3=  float((45/100*var3)) 

total= (m1 + m2 + m3)


print(round(total, 2))

-- EXECUTION TIME:
0.155379
-- TEST CASE 1:
---- input:
8.5
6.3
5.1
---- correct output:
6.31
---- user output:
6.31
-- TEST CASE 2:
---- input:
4.9
3.21
9.1
---- correct output:
6.28
---- user output:
6.28
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
