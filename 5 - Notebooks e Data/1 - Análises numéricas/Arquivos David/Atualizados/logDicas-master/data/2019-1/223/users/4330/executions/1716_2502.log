== SUBMITION (2019-05-16 02:20:49) 
-- CODE:
Questao 8
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
pi = sqrt(12)

expoente = 0

while (cont < valor):
	# Denominador
	denominador = cont * (3 ** expoente)
	expoente = expoente + 1
	cont = cont + 2
	
	# Aproximacoes de PI
	pi = pi + (-1) * (1 / denominador)

print (round(pi,8))
-- EXECUTION TIME:
0.168027
-- ERROR:
  File "/home/codebench/codes/1716/2502/main.py", line 1
    Questao 8
            ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 02:21:04) 
-- CODE:

from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
pi = sqrt(12)

expoente = 0

while (cont < valor):
	# Denominador
	denominador = cont * (3 ** expoente)
	expoente = expoente + 1
	cont = cont + 2
	
	# Aproximacoes de PI
	pi = pi + (-1) * (1 / denominador)

print (round(pi,8))
-- EXECUTION TIME:
0.142645
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
2.32410553
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
2.3236259
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
2.32547728
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 02:21:07) 
-- CODE:

from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
pi = sqrt(12)

expoente = 0

while (cont < valor):
	# Denominador
	denominador = cont * (3 ** expoente)
	expoente = expoente + 1
	cont = cont + 2
	
	# Aproximacoes de PI
	pi = pi + (-1) * (1 / denominador)

print (round(pi,8))
-- EXECUTION TIME:
0.142823
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
2.32410553
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
2.3236259
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
2.32547728
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 02:21:08) 
-- CODE:

from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
pi = sqrt(12)

expoente = 0

while (cont < valor):
	# Denominador
	denominador = cont * (3 ** expoente)
	expoente = expoente + 1
	cont = cont + 2
	
	# Aproximacoes de PI
	pi = pi + (-1) * (1 / denominador)

print (round(pi,8))
-- EXECUTION TIME:
0.175671
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
2.32410553
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
2.3236259
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
2.32410553
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 02:21:08) 
-- CODE:

from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
pi = sqrt(12)

expoente = 0

while (cont < valor):
	# Denominador
	denominador = cont * (3 ** expoente)
	expoente = expoente + 1
	cont = cont + 2
	
	# Aproximacoes de PI
	pi = pi + (-1) * (1 / denominador)

print (round(pi,8))
-- EXECUTION TIME:
0.161313
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
2.32410553
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
2.3236259
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
2.32547728
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 02:21:09) 
-- CODE:

from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
pi = sqrt(12)

expoente = 0

while (cont < valor):
	# Denominador
	denominador = cont * (3 ** expoente)
	expoente = expoente + 1
	cont = cont + 2
	
	# Aproximacoes de PI
	pi = pi + (-1) * (1 / denominador)

print (round(pi,8))
-- EXECUTION TIME:
0.127658
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
2.32410553
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
2.3236259
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
2.32547728
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 02:21:09) 
-- CODE:

from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
pi = sqrt(12)

expoente = 0

while (cont < valor):
	# Denominador
	denominador = cont * (3 ** expoente)
	expoente = expoente + 1
	cont = cont + 2
	
	# Aproximacoes de PI
	pi = pi + (-1) * (1 / denominador)

print (round(pi,8))
-- EXECUTION TIME:
0.122237
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
2.32410553
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
2.3236259
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
Informe o valor de aproximacoes: 2.32547728
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 02:21:13) 
-- CODE:

from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
pi = sqrt(12)

expoente = 0

while (cont < valor):
	# Denominador
	denominador = cont * (3 ** expoente)
	expoente = expoente + 1
	cont = cont + 2
	
	# Aproximacoes de PI
	pi = pi + (-1) * (1 / denominador)

print (round(pi,8))
-- EXECUTION TIME:
0.139956
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
2.32410553
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
2.3236259
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
2.32547728
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 02:21:13) 
-- CODE:

from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
pi = sqrt(12)

expoente = 0

while (cont < valor):
	# Denominador
	denominador = cont * (3 ** expoente)
	expoente = expoente + 1
	cont = cont + 2
	
	# Aproximacoes de PI
	pi = pi + (-1) * (1 / denominador)

print (round(pi,8))
-- EXECUTION TIME:
0.109917
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
2.32410553
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
2.3236259
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
2.32547728
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 02:21:13) 
-- CODE:

from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
pi = sqrt(12)

expoente = 0

while (cont < valor):
	# Denominador
	denominador = cont * (3 ** expoente)
	expoente = expoente + 1
	cont = cont + 2
	
	# Aproximacoes de PI
	pi = pi + (-1) * (1 / denominador)

print (round(pi,8))
-- OUTPUT:
2.32410553
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 02:21:29) 
-- CODE:

from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
pi = sqrt(12)

expoente = 0

while (cont < valor):
	# Denominador
	denominador = cont * (3 ** expoente)
	expoente = expoente + 1
	cont = cont + 2
	
	# Aproximacoes de PI
	pi = pi + (-1) * (1 / denominador)

print (round(pi,8))
-- EXECUTION TIME:
0.120805
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
2.32410553
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
2.3236259
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
2.32547728
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 02:21:34) 
-- CODE:

from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
pi = sqrt(12)

expoente = 0

while (cont < valor):
	# Denominador
	denominador = cont * (3 ** expoente)
	expoente = expoente + 1
	cont = cont + 2
	
	# Aproximacoes de PI
	pi = pi + (-1) * (1 / denominador)

print (round(pi,8))
-- EXECUTION TIME:
0.207249
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
2.32410553
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
2.3236259
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
2.32547728
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 02:22:29) 
-- CODE:

from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
pi = sqrt(12)

expoente = 0

while (cont < valor):
	# Denominador
	denominador = cont * (3 ** expoente)
	expoente = expoente + 1
	cont = cont + 2
	
	# Aproximacoes de PI
	pi = pi + (-1) * (1 / denominador)

print (round(pi,8))
-- EXECUTION TIME:
0.131074
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
2.32410553
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
2.3236259
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
2.32547728
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 02:22:30) 
-- CODE:

from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
pi = sqrt(12)

expoente = 0

while (cont < valor):
	# Denominador
	denominador = cont * (3 ** expoente)
	expoente = expoente + 1
	cont = cont + 2
	
	# Aproximacoes de PI
	pi = pi + (-1) * (1 / denominador)

print (round(pi,8))
-- EXECUTION TIME:
0.151198
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
2.32410553
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
2.3236259
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
2.32410553
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 02:22:30) 
-- CODE:

from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
pi = sqrt(12)

expoente = 0

while (cont < valor):
	# Denominador
	denominador = cont * (3 ** expoente)
	expoente = expoente + 1
	cont = cont + 2
	
	# Aproximacoes de PI
	pi = pi + (-1) * (1 / denominador)

print (round(pi,8))
-- EXECUTION TIME:
0.173842
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
2.32410553
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
2.32410553
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
2.3236259
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 02:22:31) 
-- CODE:

from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
pi = sqrt(12)

expoente = 0

while (cont < valor):
	# Denominador
	denominador = cont * (3 ** expoente)
	expoente = expoente + 1
	cont = cont + 2
	
	# Aproximacoes de PI
	pi = pi + (-1) * (1 / denominador)

print (round(pi,8))
-- EXECUTION TIME:
0.119035
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
2.32410553
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
2.3236259
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
2.32547728
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 02:22:31) 
-- CODE:

from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
pi = sqrt(12)

expoente = 0

while (cont < valor):
	# Denominador
	denominador = cont * (3 ** expoente)
	expoente = expoente + 1
	cont = cont + 2
	
	# Aproximacoes de PI
	pi = pi + (-1) * (1 / denominador)

print (round(pi,8))
-- OUTPUT:
2.32410553
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 02:22:46) 
-- CODE:

from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
pi = sqrt(12)

expoente = 0

while (cont < valor):
	# Denominador
	denominador = cont * (3 ** expoente)
	expoente = expoente + 1
	cont = cont + 2
	
	# Aproximacoes de PI
	pi = pi + (-1) * (1 / denominador)

print (round(pi,8))
-- OUTPUT:
2.32410553
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 02:22:50) 
-- CODE:

from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
pi = sqrt(12)

expoente = 0

while (cont < valor):
	# Denominador
	denominador = cont * (3 ** expoente)
	expoente = expoente + 1
	cont = cont + 2
	
	# Aproximacoes de PI
	pi = pi + (-1) * (1 / denominador)

print (round(pi,8))
-- OUTPUT:
2.32410553
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 02:23:27) 
-- CODE:

from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
pi = sqrt(12)

expoente = 0

while (cont < valor):
	# Denominador
	denominador = cont * (3 ** expoente)
	expoente = expoente + 1
	cont = cont + 2
	
	# Aproximacoes de PI
	pi = pi + (-1) * (1 / denominador)

print (round(pi,8))
-- OUTPUT:
2.32410553
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 02:23:30) 
-- CODE:

from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
pi = sqrt(12)

expoente = 0

while (cont < valor):
	# Denominador
	denominador = cont * (3 ** expoente)
	expoente = expoente + 1
	cont = cont + 2
	
	# Aproximacoes de PI
	pi = pi + (-1) * (1 / denominador)

print (round(pi,8))
-- OUTPUT:
2.32410553
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 02:24:26) 
-- CODE:

from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
pi = sqrt(12)

expoente = 0

while (cont < valor):
	# Denominador
	denominador = cont * (3 ** expoente)
	expoente = expoente + 1
	cont = cont + 2
	
	# Aproximacoes de PI
	pi = pi + (-1) * (1 / denominador)

print (round(pi,8))
-- EXECUTION TIME:
0.131427
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
2.32410553
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
2.3236259
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
2.32547728
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 11:18:27) 
-- CODE:
n = int(input("repeticao do termo: "))
soma = 0
i = 0
expoente = 0
sinal = 1
while(i<n):
	d = ((2*i)+1)*(3**expoente)
	x = 12**(1/2)*(sinal*1)/d
	soma = soma + x 
	i= i+1
	sinal = sinal *(-1)
	expoente = expoente + 1
print(round(soma, 8))
-- EXECUTION TIME:
0.150017
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.1415933
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.14159266
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
3.14156872
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 11:18:28) 
-- CODE:
n = int(input("repeticao do termo: "))
soma = 0
i = 0
expoente = 0
sinal = 1
while(i<n):
	d = ((2*i)+1)*(3**expoente)
	x = 12**(1/2)*(sinal*1)/d
	soma = soma + x 
	i= i+1
	sinal = sinal *(-1)
	expoente = expoente + 1
print(round(soma, 8))
-- EXECUTION TIME:
0.125484
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.1415933
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.14159266
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
3.14156872
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 13:24:59) 
-- CODE:
n = int(input("repeticao do termo: "))
soma = 0
i = 0
expoente = 0
sinal = 1
while(i<n):
	d = ((2*i)+1)*(3**expoente)
	x = 12**(1/2)*(sinal*1)/d
	soma = soma + x 
	i= i+1
	sinal = sinal *(-1)
	expoente = expoente + 1
print(round(soma, 8))
-- OUTPUT:
3.1415933
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 15:51:09) 
-- CODE:
n = int(input("repeticao do termo: "))
soma = 0 #acumuladora
i = 0 #contadora
expoente = 0 # vc expoente
sinal = 1
while(i<n):
	d = ((2*i)+1)*(3**expoente)
	x = 12**(1/2)*(sinal*1)/d
	soma += x
	i= i+1
	sinal = sinal *(-1)
	expoente = expoente + 1
print(round(soma, 8))
-- EXECUTION TIME:
0.147005
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.1415933
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.14159266
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
3.14156872
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 15:51:31) 
-- CODE:
n = int(input("repeticao do termo: "))
soma = 0 #acumuladora
i = 0 #contadora
expoente = 0 # vc expoente
sinal = 1
while(i<n):
	d = ((2*i)+1)*(3**expoente)
	x = 12**(1/2)*(sinal*1)/d
	soma += x
	i += 1
	sinal = sinal *(-1)
	expoente = expoente + 1
print(round(soma, 8))
-- EXECUTION TIME:
0.142123
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.1415933
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.14159266
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
3.14156872
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 15:51:33) 
-- CODE:
n = int(input("repeticao do termo: "))
soma = 0 #acumuladora
i = 0 #contadora
expoente = 0 # vc expoente
sinal = 1
while(i<n):
	d = ((2*i)+1)*(3**expoente)
	x = 12**(1/2)*(sinal*1)/d
	soma += x
	i += 1
	sinal = sinal *(-1)
	expoente = expoente + 1
print(round(soma, 8))
-- EXECUTION TIME:
0.214716
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.1415933
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.14159266
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
3.14156872
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 15:51:34) 
-- CODE:
n = int(input("repeticao do termo: "))
soma = 0 #acumuladora
i = 0 #contadora
expoente = 0 # vc expoente
sinal = 1
while(i<n):
	d = ((2*i)+1)*(3**expoente)
	x = 12**(1/2)*(sinal*1)/d
	soma += x
	i += 1
	sinal = sinal *(-1)
	expoente = expoente + 1
print(round(soma, 8))
-- OUTPUT:
3.1415933
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 15:51:36) 
-- CODE:
n = int(input("repeticao do termo: "))
soma = 0 #acumuladora
i = 0 #contadora
expoente = 0 # vc expoente
sinal = 1
while(i<n):
	d = ((2*i)+1)*(3**expoente)
	x = 12**(1/2)*(sinal*1)/d
	soma += x
	i += 1
	sinal = sinal *(-1)
	expoente = expoente + 1
print(round(soma, 8))
-- EXECUTION TIME:
0.156611
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.1415933
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.14159266
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
3.14156872
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 15:51:37) 
-- CODE:
n = int(input("repeticao do termo: "))
soma = 0 #acumuladora
i = 0 #contadora
expoente = 0 # vc expoente
sinal = 1
while(i<n):
	d = ((2*i)+1)*(3**expoente)
	x = 12**(1/2)*(sinal*1)/d
	soma += x
	i += 1
	sinal = sinal *(-1)
	expoente = expoente + 1
print(round(soma, 8))
-- EXECUTION TIME:
0.221938
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.1415933
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.14159266
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
3.14156872
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 15:51:37) 
-- CODE:
n = int(input("repeticao do termo: "))
soma = 0 #acumuladora
i = 0 #contadora
expoente = 0 # vc expoente
sinal = 1
while(i<n):
	d = ((2*i)+1)*(3**expoente)
	x = 12**(1/2)*(sinal*1)/d
	soma += x
	i += 1
	sinal = sinal *(-1)
	expoente = expoente + 1
print(round(soma, 8))
-- EXECUTION TIME:
0.12713
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.1415933
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.14159266
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
3.14156872
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 15:51:38) 
-- CODE:
n = int(input("repeticao do termo: "))
soma = 0 #acumuladora
i = 0 #contadora
expoente = 0 # vc expoente
sinal = 1
while(i<n):
	d = ((2*i)+1)*(3**expoente)
	x = 12**(1/2)*(sinal*1)/d
	soma += x
	i += 1
	sinal = sinal *(-1)
	expoente = expoente + 1
print(round(soma, 8))
-- EXECUTION TIME:
0.138549
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.1415933
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.14159266
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
3.14156872
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 15:53:26) 
-- CODE:
n = int(input("repeticao do termo: "))
soma = 0 #acumuladora
i = 0 #contadora
expoente = 0 # vc expoente
sinal = 1
while(i<n):
	d = ((2*i)+1)*(3**expoente)
	x = 12**(1/2)*(sinal*1)/d
	soma += x
	i += 1
	sinal = sinal *(-1)
	expoente = expoente + 1
print(round(soma, 8))
-- EXECUTION TIME:
0.180493
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.1415933
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.1415933
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
3.1415933
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 15:53:26) 
-- CODE:
n = int(input("repeticao do termo: "))
soma = 0 #acumuladora
i = 0 #contadora
expoente = 0 # vc expoente
sinal = 1
while(i<n):
	d = ((2*i)+1)*(3**expoente)
	x = 12**(1/2)*(sinal*1)/d
	soma += x
	i += 1
	sinal = sinal *(-1)
	expoente = expoente + 1
print(round(soma, 8))
-- OUTPUT:
3.1415933
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 15:53:26) 
-- CODE:
n = int(input("repeticao do termo: "))
soma = 0 #acumuladora
i = 0 #contadora
expoente = 0 # vc expoente
sinal = 1
while(i<n):
	d = ((2*i)+1)*(3**expoente)
	x = 12**(1/2)*(sinal*1)/d
	soma += x
	i += 1
	sinal = sinal *(-1)
	expoente = expoente + 1
print(round(soma, 8))
-- EXECUTION TIME:
0.286443
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.1415933
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.1415933
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
repeticao do termo: 3.14159266
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 15:53:26) 
-- CODE:
n = int(input("repeticao do termo: "))
soma = 0 #acumuladora
i = 0 #contadora
expoente = 0 # vc expoente
sinal = 1
while(i<n):
	d = ((2*i)+1)*(3**expoente)
	x = 12**(1/2)*(sinal*1)/d
	soma += x
	i += 1
	sinal = sinal *(-1)
	expoente = expoente + 1
print(round(soma, 8))
-- EXECUTION TIME:
0.26811
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.14156872
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.1415933
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
repeticao do termo: 3.14156872
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 15:53:26) 
-- CODE:
n = int(input("repeticao do termo: "))
soma = 0 #acumuladora
i = 0 #contadora
expoente = 0 # vc expoente
sinal = 1
while(i<n):
	d = ((2*i)+1)*(3**expoente)
	x = 12**(1/2)*(sinal*1)/d
	soma += x
	i += 1
	sinal = sinal *(-1)
	expoente = expoente + 1
print(round(soma, 8))
-- EXECUTION TIME:
0.330336
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.14159266
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
repeticao do termo: 3.14159266
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 15:53:27) 
-- CODE:
n = int(input("repeticao do termo: "))
soma = 0 #acumuladora
i = 0 #contadora
expoente = 0 # vc expoente
sinal = 1
while(i<n):
	d = ((2*i)+1)*(3**expoente)
	x = 12**(1/2)*(sinal*1)/d
	soma += x
	i += 1
	sinal = sinal *(-1)
	expoente = expoente + 1
print(round(soma, 8))
-- EXECUTION TIME:
0.33011
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
repeticao do termo: 3.14159266
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:

-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 15:53:28) 
-- CODE:
n = int(input("repeticao do termo: "))
soma = 0 #acumuladora
i = 0 #contadora
expoente = 0 # vc expoente
sinal = 1
while(i<n):
	d = ((2*i)+1)*(3**expoente)
	x = 12**(1/2)*(sinal*1)/d
	soma += x
	i += 1
	sinal = sinal *(-1)
	expoente = expoente + 1
print(round(soma, 8))
-- EXECUTION TIME:
0.178267
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.1415933
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.14159266
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
3.14156872
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 15:53:28) 
-- CODE:
n = int(input("repeticao do termo: "))
soma = 0 #acumuladora
i = 0 #contadora
expoente = 0 # vc expoente
sinal = 1
while(i<n):
	d = ((2*i)+1)*(3**expoente)
	x = 12**(1/2)*(sinal*1)/d
	soma += x
	i += 1
	sinal = sinal *(-1)
	expoente = expoente + 1
print(round(soma, 8))
-- EXECUTION TIME:
0.212266
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.14159266
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.14156872
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
3.14159266
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 15:53:28) 
-- CODE:
n = int(input("repeticao do termo: "))
soma = 0 #acumuladora
i = 0 #contadora
expoente = 0 # vc expoente
sinal = 1
while(i<n):
	d = ((2*i)+1)*(3**expoente)
	x = 12**(1/2)*(sinal*1)/d
	soma += x
	i += 1
	sinal = sinal *(-1)
	expoente = expoente + 1
print(round(soma, 8))
-- EXECUTION TIME:
0.294742
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.14156872
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.1415933
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
3.14156872
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 15:53:28) 
-- CODE:
n = int(input("repeticao do termo: "))
soma = 0 #acumuladora
i = 0 #contadora
expoente = 0 # vc expoente
sinal = 1
while(i<n):
	d = ((2*i)+1)*(3**expoente)
	x = 12**(1/2)*(sinal*1)/d
	soma += x
	i += 1
	sinal = sinal *(-1)
	expoente = expoente + 1
print(round(soma, 8))
-- EXECUTION TIME:
0.397358
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.1415933
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.14159266
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
3.14156872
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 15:53:28) 
-- CODE:
n = int(input("repeticao do termo: "))
soma = 0 #acumuladora
i = 0 #contadora
expoente = 0 # vc expoente
sinal = 1
while(i<n):
	d = ((2*i)+1)*(3**expoente)
	x = 12**(1/2)*(sinal*1)/d
	soma += x
	i += 1
	sinal = sinal *(-1)
	expoente = expoente + 1
print(round(soma, 8))
-- EXECUTION TIME:
0.233991
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1716/2502/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 15:53:30) 
-- CODE:
n = int(input("repeticao do termo: "))
soma = 0 #acumuladora
i = 0 #contadora
expoente = 0 # vc expoente
sinal = 1
while(i<n):
	d = ((2*i)+1)*(3**expoente)
	x = 12**(1/2)*(sinal*1)/d
	soma += x
	i += 1
	sinal = sinal *(-1)
	expoente = expoente + 1
print(round(soma, 8))
-- EXECUTION TIME:
0.154598
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.1415933
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.14159266
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
3.14156872
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 15:53:31) 
-- CODE:
n = int(input("repeticao do termo: "))
soma = 0 #acumuladora
i = 0 #contadora
expoente = 0 # vc expoente
sinal = 1
while(i<n):
	d = ((2*i)+1)*(3**expoente)
	x = 12**(1/2)*(sinal*1)/d
	soma += x
	i += 1
	sinal = sinal *(-1)
	expoente = expoente + 1
print(round(soma, 8))
-- EXECUTION TIME:
0.151559
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.1415933
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.14159266
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
3.14156872
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 15:53:32) 
-- CODE:
n = int(input("repeticao do termo: "))
soma = 0 #acumuladora
i = 0 #contadora
expoente = 0 # vc expoente
sinal = 1
while(i<n):
	d = ((2*i)+1)*(3**expoente)
	x = 12**(1/2)*(sinal*1)/d
	soma += x
	i += 1
	sinal = sinal *(-1)
	expoente = expoente + 1
print(round(soma, 8))
-- EXECUTION TIME:
0.129552
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.1415933
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.14159266
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
3.14156872
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
