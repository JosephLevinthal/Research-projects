== TEST (2019-03-22 11:22:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a= int(input(" "))
b= int(input(" "))
c= int(input(" "))

d=min(a,b,c)
print(d)
-- OUTPUT:
-2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 11:23:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a= int(input(" "))
b= int(input(" "))
c= int(input(" "))

d=min(a,b,c)
s=max(a,b,c)
m=(a+b+c)-a-c
print(d)
-- OUTPUT:
-2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 11:23:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a= int(input(" "))
b= int(input(" "))
c= int(input(" "))

d=min(a,b,c)
s=max(a,b,c)
m=(a+b+c)-a-c
print(d,s,m)
-- OUTPUT:
-2 10 -2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 11:23:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a= int(input(" "))
b= int(input(" "))
c= int(input(" "))

d=min(a,b,c)
s=max(a,b,c)
m=(a+b+c)-a-c
print(d,s,m)
-- EXECUTION TIME:
0.191574
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2 10 -2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 11:23:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a= int(input(" "))
b= int(input(" "))
c= int(input(" "))

d=min(a,b,c)
s=max(a,b,c)
m=(a+b+c)-d-s
print(d,s,m)
-- EXECUTION TIME:
0.212323
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2 10 0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 11:23:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a= int(input(" "))
b= int(input(" "))
c= int(input(" "))

d=min(a,b,c)
s=max(a,b,c)
m=(a+b+c)-d-s
print(d,s,m)
-- OUTPUT:
-2 10 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 11:24:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a= int(input(" "))
b= int(input(" "))
c= int(input(" "))

d=min(a,b,c)
s=max(a,b,c)
m=(a+b+c)-d-s
print(d,s,m)
-- EXECUTION TIME:
0.144335
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2 10 0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 11:24:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a= int(input(" "))
b= int(input(" "))
c= int(input(" "))

d=min(a,b,c)
s=max(a,b,c)
m=(a+b+c)-d-s
print(d,s,m)
-- OUTPUT:
-2 10 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 11:24:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a= int(input(" "))
b= int(input(" "))
c= int(input(" "))

d=min(a,b,c)
m=(a+b+c)-d-s
s=max(a,b,c)
print(d,s,m)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    m=(a+b+c)-d-s
NameError: name 's' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 11:24:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a= int(input(" "))
b= int(input(" "))
c= int(input(" "))

d=min(a,b,c)
m=(a+b+c)-d-s
s=max(a,b,c)
print(d,m,s)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    m=(a+b+c)-d-s
NameError: name 's' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 11:25:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a= int(input(" "))
b= int(input(" "))
c= int(input(" "))

d=min(a,b,c)
s=max(a,b,c)
m=(a+b+c)-d-s

print(d,m,s)
-- OUTPUT:
-2 0 10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 11:25:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a= int(input(" "))
b= int(input(" "))
c= int(input(" "))

d=min(a,b,c)
s=max(a,b,c)
m=(a+b+c)-d-s

print(d,m,s)
-- EXECUTION TIME:
0.136071
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2 0 10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 01:15:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a= int(input(" "))
b= int(input(" "))
c= int(input(" "))

d=min(a,b,c)
s=max(a,b,c)
m=(a+b+c)-d-s

print(d,m,s)
-- OUTPUT:
-2 0 10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
