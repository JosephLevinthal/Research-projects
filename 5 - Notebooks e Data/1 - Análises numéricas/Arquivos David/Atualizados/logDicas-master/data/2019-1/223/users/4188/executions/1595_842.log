== TEST (2019-03-24 15:49:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var=int(input("digite 4 numeros: "))
n1=n%10
n=n//10
n2=n%10
n=n//10
n3=n%10
n=n//10
print(n1+n2+n3)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    n1=n%10
NameError: name 'n' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 15:51:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n=int(input("digite 4 numeros: "))
n1=n%10
n=n//10
n2=n%10
n=n//10
n3=n%10
n=n//10
print(n1+n2+n3)
-- OUTPUT:
11
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 16:02:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n=int(input("digite 4 numeros: "))
n1=n%10
n=n//10
n2=n%10
n=n//10
n3=n%10
n=n//10
print(n1+n2+n3)
-- OUTPUT:
11
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 17:07:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n=int(input("digite 4 numeros: "))
n1=n//1000
n2=(n//100)%10
n3=(n//10)%10
n4=n%10
print(n1+n2+n3+n4)
-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 17:14:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n=int(input("digite 4 numeros: "))
n1=n//1000
n2=(n//100)%10
n3=(n//10)%10
n4=n%10
print(n1+n2+n3+n4)
-- EXECUTION TIME:
0.275831
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:04:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n=int(input("digite 4 numeros: "))
n1=n//1000
n2=(n//100)%10
n3=(n//10)%10
n4=n%10
print(n1+n2+n3+n4)
-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
