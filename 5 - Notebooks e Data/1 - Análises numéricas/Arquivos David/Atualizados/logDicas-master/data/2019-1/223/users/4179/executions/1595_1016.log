== TEST (2019-03-26 17:53:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
a=float("valor de a:")
b=float("valor de b")
c=float("valor de c")
s=(a+b+c/2)
A=sqrt(s*(s-a)*(s-b)*(s-c))
print(A)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a=float("valor de a:")
ValueError: could not convert string to float: 'valor de a:'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:54:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
a=float("valor de a:")
b=float("valor de b")
c=float("valor de c")
s=((a+b+c/2))
A=sqrt(s*(s-a)*(s-b)*(s-c))
print(A)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a=float("valor de a:")
ValueError: could not convert string to float: 'valor de a:'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:54:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
a=float("valor de a:")
b=float("valor de b:")
c=float("valor de c:")
s=((a+b+c/2))
A=sqrt(s*(s-a)*(s-b)*(s-c))
print(A)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a=float("valor de a:")
ValueError: could not convert string to float: 'valor de a:'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:56:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
a=float(input("valor de a:"))
b=float(input("valor de b:"))
c=float(input("valor de c:"))
s=((a+b+c/2))
A=sqrt(s*(s-a)*(s-b)*(s-c))
print(A)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    A=sqrt(s*(s-a)*(s-b)*(s-c))
NameError: name 'sqrt' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:57:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
a=float(input("valor de a:"))
b=float(input("valor de b:"))
c=float(input("valor de c:"))
s=((a+b+c/2))
A=sqrt(s*(s-a)*(s-b)*(s-c))
print(A)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    A=sqrt(s*(s-a)*(s-b)*(s-c))
NameError: name 'sqrt' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:58:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
a=float(input("valor de a:"))
b=float(input("valor de b:"))
c=float(input("valor de c:"))
s=((a+b+c/2))
A=sqrt((s*(s-a)*(s-b)*(s-c))
print(A)
-- ERROR:
File "XXXX", line 10
    print(A)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:58:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
a=float(input("valor de a:"))
b=float(input("valor de b:"))
c=float(input("valor de c:"))
s=((a+b+c/2))
A=sqrt(s*(s-a)*(s-b)*(s-c))
print(round(A,5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    A=sqrt(s*(s-a)*(s-b)*(s-c))
NameError: name 'sqrt' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:59:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
a=float(input("valor de a:"))
b=float(input("valor de b:"))
c=float(input("valor de c:"))
s=((a+b+c/2))
A=math.sqrt(s*(s-a)*(s-b)*(s-c))
print(round(A,5))

-- OUTPUT:
638.20837
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 18:00:21) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
a=float(input("valor de a:"))
b=float(input("valor de b:"))
c=float(input("valor de c:"))
s=((a+b+c)/2)
A=math.sqrt(s*(s-a)*(s-b)*(s-c))
print(round(A,5))

-- OUTPUT:
69.41967
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 18:00:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
a=float(input("valor de a:"))
b=float(input("valor de b:"))
c=float(input("valor de c:"))
s=((a+b+c)/2)
A=math.sqrt(s*(s-a)*(s-b)*(s-c))
print(round(A,5))

-- EXECUTION TIME:
0.193721
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.41967
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709.16654
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
