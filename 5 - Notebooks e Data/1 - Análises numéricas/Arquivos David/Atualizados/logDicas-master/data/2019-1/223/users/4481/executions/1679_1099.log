== TEST (2019-04-25 17:22:08) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("insira um valor a: "))
b = float(input("insira um valor b: "))
c = float(input("insira um valor c: "))

print("Entradas:",a, ",", b, ",", c)

if((a>= a + c) or (b>= a + c) or (c>= b + a)):
	print("Tipo de triangulo:invalido")
else:
	if((a==b) and (b==c)):
		print("equilatero")
	else:
		if((a==b) or (b==c) or (c==a)):
			print("isosceles")
		else:
			print("escaleno")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:22:26) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("insira um valor a: "))
b = float(input("insira um valor b: "))
c = float(input("insira um valor c: "))

print("Entradas:",a, ",", b, ",", c)

if((a>= a + c) or (b>= a + c) or (c>= b + a)):
	print("Tipo de triangulo:invalido")
else:
	if((a==b) and (b==c)):
		print("equilatero")
	else:
		if((a==b) or (b==c) or (c==a)):
			print("isosceles")
		else:
			print("escaleno")

-- EXECUTION TIME:
0.200966
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:22:42) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("insira um valor a: "))
b = float(input("insira um valor b: "))
c = float(input("insira um valor c: "))

print("Entradas:",a, ",", b, ",", c)

if((a>= a + c) or (b>= a + c) or (c>= b + a)):
	print("Tipo de triangulo:invalido")
else:
	if((a==b) and (b==c)):
		print("equilatero")
	else:
		if((a==b) or (b==c) or (c==a)):
			print("isosceles")
		else:
			print("escaleno")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:23:00) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("insira um valor a: "))
b = float(input("insira um valor b: "))
c = float(input("insira um valor c: "))

print("Entradas:",a, ",", b, ",", c)

if((a>= a + c) or (b>= a + c) or (c>= b + a)):
	print("Tipo de triangulo:invalido")
else:
	if((a==b) and (b==c)):
		print("equilatero")
	else:
		if((a==b) or (b==c) or (c==a)):
			print("isosceles")
		else:
			print("escaleno")

-- EXECUTION TIME:
0.113925
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:24:58) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("insira um valor a: "))
b = float(input("insira um valor b: "))
c = float(input("insira um valor c: "))

print("Entradas:",a, ",", b, ",", c)

if((a>= a + c) or (b>= a + c) or (c>= b + a)):
	print("Tipo de triangulo:invalido")
else:
	if((a==b) and (b==c)):
		print("equilatero")
	else:
		if((a==b) or (b==c) or (c==a)):
			print("isosceles")
		else:
			print("escaleno")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:25:11) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("insira um valor a: "))
b = float(input("insira um valor b: "))
c = float(input("insira um valor c: "))

print("Entradas:",a, ",", b, ",", c)

if((a>= a + c) or (b>= a + c) or (c>= b + a)):
	print("Tipo de triangulo:invalido")
else:
	if((a==b) and (b==c)):
		print("equilatero")
	else:
		if((a==b) or (b==c) or (c==a)):
			print("isosceles")
		else:
			print("escaleno")

-- EXECUTION TIME:
0.202614
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:26:02) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("insira um valor a: "))
b = float(input("insira um valor b: "))
c = float(input("insira um valor c: "))

print("Entradas:",a, ",", b, ",", c)

if((a>= b + c) or (b>= a + c) or (c>= b + a)):
	print("Tipo de triangulo:invalido")
else:
	if((a==b) and (b==c)):
		print("equilatero")
	else:
		if((a==b) or (b==c) or (c==a)):
			print("isosceles")
		else:
			print("escaleno")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:26:10) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("insira um valor a: "))
b = float(input("insira um valor b: "))
c = float(input("insira um valor c: "))

print("Entradas:",a, ",", b, ",", c)

if((a>= b + c) or (b>= a + c) or (c>= b + a)):
	print("Tipo de triangulo:invalido")
else:
	if((a==b) and (b==c)):
		print("equilatero")
	else:
		if((a==b) or (b==c) or (c==a)):
			print("isosceles")
		else:
			print("escaleno")

-- EXECUTION TIME:
0.13693
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:28:15) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("insira um valor a: "))
b = float(input("insira um valor b: "))
c = float(input("insira um valor c: "))

print("Entradas:",a, ",", b, ",", c)

if((a>= b + c) or (b>= a + c) or (c>= b + a)):
	print("Tipo de triangulo:invalido")
else:
	if((a==b) and (b==c)):
		print("Tipo de triangulo:equilatero")
	else:
		if((a==b) or (b==c) or (c==a)):
			print("Tipo de triangulo:isosceles")
		else:
			print("Tipo de triangulo:escaleno")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:28:22) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("insira um valor a: "))
b = float(input("insira um valor b: "))
c = float(input("insira um valor c: "))

print("Entradas:",a, ",", b, ",", c)

if((a>= b + c) or (b>= a + c) or (c>= b + a)):
	print("Tipo de triangulo:invalido")
else:
	if((a==b) and (b==c)):
		print("Tipo de triangulo:equilatero")
	else:
		if((a==b) or (b==c) or (c==a)):
			print("Tipo de triangulo:isosceles")
		else:
			print("Tipo de triangulo:escaleno")

-- EXECUTION TIME:
0.141257
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo:escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:36:19) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("insira um valor a: "))
b = float(input("insira um valor b: "))
c = float(input("insira um valor c: "))

print("Entradas:",a, ",", b, ",", c)

if((a>= b + c) or (b>= a + c) or (c>= b + a)):
	print("Tipo de triangulo: invalido")
else:
	if((a==b) and (b==c)):
		print("Tipo de triangulo: equilatero")
	else:
		if((a==b) or (b==c) or (c==a)):
			print("Tipo de triangulo: isosceles")
		else:
			if((a != b) and (b != c) and(c != a)):
				print("Tipo de triangulo: escaleno")
			else:
				print("Tipo de triangulo: invalido")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:36:26) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("insira um valor a: "))
b = float(input("insira um valor b: "))
c = float(input("insira um valor c: "))

print("Entradas:",a, ",", b, ",", c)

if((a>= b + c) or (b>= a + c) or (c>= b + a)):
	print("Tipo de triangulo: invalido")
else:
	if((a==b) and (b==c)):
		print("Tipo de triangulo: equilatero")
	else:
		if((a==b) or (b==c) or (c==a)):
			print("Tipo de triangulo: isosceles")
		else:
			if((a != b) and (b != c) and(c != a)):
				print("Tipo de triangulo: escaleno")
			else:
				print("Tipo de triangulo: invalido")

-- EXECUTION TIME:
0.175461
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
