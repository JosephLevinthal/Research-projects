== TEST (2019-03-24 18:44:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

# Leitura das entradas dos lados de um triangulo:
a = int(input(digite um numero para o lado a do triangulo))
b = int(input(digite um numero para o lado b do triangulo))
c = int(input(digite um numero para o lado c do triangulo))

# Calculo do semiperimetro:
s = (a + b + c)/2

# Calculo da area:
from math import sqrt()
A = sqrt(s(s - a)*(s - b)*(s - c))

print(round(A, 5))
-- ERROR:
File "XXXX", line 6
    a = int(input(digite um numero para o lado a do triangulo))
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 18:45:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

# Leitura das entradas dos lados de um triangulo:
a = int(input("digite um numero para o lado a do triangulo: "))
b = int(input("digite um numero para o lado b do triangulo: "))
c = int(input("digite um numero para o lado c do triangulo: "))

# Calculo do semiperimetro:
s = (a + b + c)/2

# Calculo da area:
from math import sqrt()
A = sqrt(s(s - a)*(s - b)*(s - c))

print(round(A, 5))
-- ERROR:
File "XXXX", line 14
    from math import sqrt()
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 18:46:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

# Leitura das entradas dos lados de um triangulo:
a = int(input("digite um numero para o lado a do triangulo: "))
b = int(input("digite um numero para o lado b do triangulo: "))
c = int(input("digite um numero para o lado c do triangulo: "))

# Calculo do semiperimetro:
s = (a + b + c)/2

# Calculo da area:
from math import sqrt
A = sqrt(s(s - a)*(s - b)*(s - c))

print(round(A, 5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 18:46:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

# Leitura das entradas dos lados de um triangulo:
a = float(input("digite um numero para o lado a do triangulo: "))
b = float(input("digite um numero para o lado b do triangulo: "))
c = float(input("digite um numero para o lado c do triangulo: "))

# Calculo do semiperimetro:
s = (a + b + c)/2

# Calculo da area:
from math import sqrt
A = sqrt(s(s - a)*(s - b)*(s - c))

print(round(A, 5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 15, in <module>
    A = sqrt(s(s - a)*(s - b)*(s - c))
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 18:47:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

# Leitura das entradas dos lados de um triangulo:
a = float(input("digite um numero para o lado a do triangulo: "))
b = float(input("digite um numero para o lado b do triangulo: "))
c = float(input("digite um numero para o lado c do triangulo: "))

# Calculo do semiperimetro:
s = (a + b + c)/2

# Calculo da area:
from math import sqrt
A = sqrt(s*(s - a)*(s - b)*(s - c))

print(round(A, 5))
-- OUTPUT:
69.41967
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 19:53:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

# Leitura das entradas dos lados de um triangulo:
a = float(input("digite um numero para o lado a do triangulo: "))
b = float(input("digite um numero para o lado b do triangulo: "))
c = float(input("digite um numero para o lado c do triangulo: "))

# Calculo do semiperimetro:
s = (a + b + c)/2

# Calculo da area:
from math import sqrt
A = s*(s - a)*(s - b)*(s - c)
print(round(A, 5))
-- OUTPUT:
4819.09124
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 19:54:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

# Leitura das entradas dos lados de um triangulo:
a = float(input("digite um numero para o lado a do triangulo: "))
b = float(input("digite um numero para o lado b do triangulo: "))
c = float(input("digite um numero para o lado c do triangulo: "))

# Calculo do semiperimetro:
s = ((a + b + c)/2)
print(s)

-- OUTPUT:
21.85
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 19:55:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

# Leitura das entradas dos lados de um triangulo:
a = float(input("digite um numero para o lado a do triangulo: "))
b = float(input("digite um numero para o lado b do triangulo: "))
c = float(input("digite um numero para o lado c do triangulo: "))

# Calculo do semiperimetro:
s = (a + b + c)/2
print(s)

-- OUTPUT:
21.85
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 19:56:08) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

# Leitura das entradas dos lados de um triangulo:
#a = float(input("digite um numero para o lado a do triangulo: "))
#b = float(input("digite um numero para o lado b do triangulo: "))
#c = float(input("digite um numero para o lado c do triangulo: "))

# Calculo do semiperimetro:
#s = (a + b + c)/2

# Calculo da area:
from math import sqrt
print(sqrt(25)) 
-- OUTPUT:
5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 19:58:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

# Leitura das entradas dos lados de um triangulo:
a = float(input("digite um numero para o lado a do triangulo: "))
b = float(input("digite um numero para o lado b do triangulo: "))
c = float(input("digite um numero para o lado c do triangulo: "))

# Calculo do semiperimetro:
s = (a + b + c)/2

# Calculo da area:
from math import sqrt
A = sqrt(s*(s - a)*(s - b)*(s - c))
print(round(A, 5))
 

-- OUTPUT:
69.41967
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 19:59:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

# Leitura das entradas dos lados de um triangulo:
a = float(input("digite um numero para o lado a do triangulo: "))
b = float(input("digite um numero para o lado b do triangulo: "))
c = float(input("digite um numero para o lado c do triangulo: "))

# Calculo do semiperimetro:
s = (a + b + c)/2

# Calculo da area:
from math import sqrt
A = sqrt(s*(s - a)*(s - b)*(s - c))
print(round(A, 5))
 

-- EXECUTION TIME:
0.214275
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.41967
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709.16654
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
