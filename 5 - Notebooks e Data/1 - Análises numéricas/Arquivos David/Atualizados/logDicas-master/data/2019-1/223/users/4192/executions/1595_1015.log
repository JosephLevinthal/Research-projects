== SUBMITION (2019-04-01 20:57:43) 
-- CODE:
# Leitura do total de vendas de Bilichilde e conversao para float:
total = float(input("digite um valor da venda: "))

# calculo do lucro de Bilichilde:
lucro = total*0.3
print(lucro)


-- EXECUTION TIME:
0.160919
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
3.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 20:57:50) 
-- CODE:
# Leitura do total de vendas de Bilichilde e conversao para float:
total = float(input("digite um valor da venda:"))

# calculo do lucro de Bilichilde:
lucro = total*0.3
print(lucro)


-- EXECUTION TIME:
0.194149
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
3.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 20:58:09) 
-- CODE:
# Leitura do total de vendas de Bilichilde e conversao para float:
total = float(input("digite um valor da venda:"))

# calculo do lucro de Bilichilde:
lucro = total*0.3
print(lucro)


-- EXECUTION TIME:
0.178424
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
3.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 20:58:37) 
-- CODE:
# Leitura do total de vendas de Bilichilde e conversao para float:
total=float(input("digite um valor da venda:"))

# calculo do lucro de Bilichilde:
lucro = total*0.3
print(lucro)


-- EXECUTION TIME:
0.145161
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
3.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 21:00:20) 
-- CODE:
# Leitura dos numeros a partir do teclado e conversao para int:
n1 = int(input("digite um numero: "))
n2 = int(input("digite um segundo numero: "))
n3 = int(input("digite um terceiro numero: "))

# ordenacao nos numeros em ordem crescente:
print(min(n1, n2, n3))
print((n1+n2+n3)-(min(n1, n2, n3)+max(n1, n2, n3)))
print(max(n1, n2, n3))


-- EXECUTION TIME:
0.179772
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
0
10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
