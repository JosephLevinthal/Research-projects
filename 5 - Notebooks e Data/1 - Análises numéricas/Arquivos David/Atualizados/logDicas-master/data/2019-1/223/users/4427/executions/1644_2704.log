== SUBMITION (2019-04-15 11:12:06) 
-- CODE:
#Digitar a nota do aluno
nota=float(input("Qual foi a nota do aluno? "))

#receberar bonus S/N
bonus=input("vai rereceber o bonus, S/N?: ")

#condicao
if (bonus== "S"):
	mensagem = nota + nota*(1/100)

else:
	mensagem = nota

#impressao da nota
print(mensagem)
-- EXECUTION TIME:
0.174191
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.05
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.09
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 11:12:17) 
-- CODE:
#Digitar a nota do aluno
nota=float(input("Qual foi a nota do aluno? "))

#receberar bonus S/N
bonus=input("vai rereceber o bonus, S/N?: ")

#condicao
if (bonus== "S"):
	mensagem = nota + nota*(1/100)

else:
	mensagem = nota

#impressao da nota
print(mensagem)
-- OUTPUT:
5.05
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 11:13:00) 
-- CODE:
#Digitar a nota do aluno
nota=float(input("Qual foi a nota do aluno? "))

#receberar bonus S/N
bonus=input("vai rereceber o bonus, S/N?: ")

#condicao
if (bonus== "S"):
	mensagem = nota + (nota*(1/100))

else:
	mensagem = nota

#impressao da nota
print(mensagem)
-- OUTPUT:
5.05
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 11:13:21) 
-- CODE:
#Digitar a nota do aluno
nota=float(input("Qual foi a nota do aluno? "))

#receberar bonus S/N
bonus=input("vai rereceber o bonus, S/N?: ")

#condicao
if (bonus== "S"):
	mensagem = nota + (nota*(1/100))

else:
	mensagem = nota

#impressao da nota
print(mensagem)
-- OUTPUT:
5.05
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 11:13:34) 
-- CODE:
#Digitar a nota do aluno
nota=float(input("Qual foi a nota do aluno? "))

#receberar bonus S/N
bonus=input("vai rereceber o bonus, S/N?: ")

#condicao
if (bonus== "S"):
	mensagem = nota + (nota*(1/100))

else:
	mensagem = nota

#impressao da nota
print(mensagem)
-- OUTPUT:
5.05
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 11:15:24) 
-- CODE:
#Digitar a nota do aluno
nota=float(input("Qual foi a nota do aluno? "))

#receberar bonus S/N
bonus=input("vai rereceber o bonus, S/N?: ")
bonus.upper ()

#condicao
if (bonus== "S"):
	mensagem = nota + (nota*(1/100))

else:
	mensagem = nota

#impressao da nota
print(mensagem)
-- OUTPUT:
5.05
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 11:16:51) 
-- CODE:
#Digitar a nota do aluno
nota=float(input("Qual foi a nota do aluno? "))

#receberar bonus S/N
bonus=input("vai rereceber o bonus, S/N?: ")


#condicao
if (bonus== "S"):
	bonus.upper(s)
	mensagem = nota + (nota*(1/100))

else:
	mensagem = nota

#impressao da nota
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    bonus.upper(s)
NameError: name 's' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 11:31:59) 
-- CODE:
#Digitar a nota do aluno
nota=float(input("Qual foi a nota do aluno? "))

#receberar bonus S/N
bonus=input("vai rereceber o bonus, S/N?: ")


#condicao
if (bonus== "S"):
	mensagem = nota + (nota*(1/100))

else:
	mensagem = nota

#impressao da nota
print(mensagem)
-- EXECUTION TIME:
0.219492
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.05
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.09
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 11:35:41) 
-- CODE:
#Digitar a nota do aluno
nota=float(input("Qual foi a nota do aluno? "))

#receberar bonus S/N
bonus=input("vai rereceber o bonus, S/N?: ")

#condicao
if (bonus.upper("S") =="S"):
	mensagem = nota + (nota*(1/100))

else:
	mensagem = nota

#impressao da nota
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    if (bonus.upper("S") =="S"):
TypeError: upper() takes no arguments (1 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 11:38:29) 
-- CODE:
#Digitar a nota do aluno
nota=float(input("Qual foi a nota do aluno? "))

#receberar bonus S/N
bonus=input("vai rereceber o bonus, S/N?: ")
print(bonus.lower())
#condicao
if (bonus=="S"):
	mensagem = nota + nota*(1/100)

else:
	mensagem = nota

#impressao da nota
print(mensagem)
-- OUTPUT:
s
5.05
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 11:45:51) 
-- CODE:
#Digitar a nota do aluno
nota=float(input("Qual foi a nota do aluno? "))

#receberar bonus S/N
bonus=input("vai rereceber o bonus, S/N?: ")
print(bonus.lower())

#condicao
if (bonus=="S"):
	mensagem = nota + nota*(1/100)

else:
	mensagem = nota

#impressao da nota
print(mensagem)
-- EXECUTION TIME:
0.208584
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
s
5.05
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
s
9.09
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
n
4.4
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 12:02:55) 
-- CODE:
#Digitar a nota do aluno
nota=float(input("Qual foi a nota do aluno? "))

#receberar bonus S/N
bonus=input("vai rereceber o bonus, S/N?: ")

#condicao
if (bonus=="S"):
	mensagem = nota + nota*(10/100)

else:
	mensagem = nota

#impressao da nota
print(mensagem)
-- EXECUTION TIME:
0.139816
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
