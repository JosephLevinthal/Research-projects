== SUBMITION (2019-04-09 17:34:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrig
x=int(input("qual o valor de x? "))
y=int(input("qual o valor de y? "))
reta=2*x+y
if(==3):
	mensagem=("ponto pertence a reta ")
else:
	mensagem("ponto nao pertence a reta ")
print(mensagem.lower())




-- EXECUTION TIME:
0.228859
-- ERROR:
  File "/home/codebench/codes/1644/1054/main.py", line 7
    if(==3):
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 17:35:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrig
x=int(input("qual o valor de x? "))
y=int(input("qual o valor de y? "))
reta=2*x+y
if(reta==3):
	mensagem=("ponto pertence a reta ")
else:
	mensagem("ponto nao pertence a reta ")
print(mensagem.lower())




-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 17:35:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrig
x=int(input("qual o valor de x? "))
y=int(input("qual o valor de y? "))
reta=2*x+y
if(reta==3):
	mensagem=("ponto pertence a reta ")
else:
	mensagem=("ponto nao pertence a reta ")
print(mensagem.lower())




-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 17:35:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrig
x=int(input("qual o valor de x? "))
y=int(input("qual o valor de y? "))
reta=2*x+y
if(reta==3):
	mensagem=("ponto pertence a reta ")
else:
	mensagem=("ponto nao pertence a reta ")
print(mensagem.lower())




-- EXECUTION TIME:
0.200654
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
