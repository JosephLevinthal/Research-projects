== TEST (2019-04-11 10:30:47) 
-- CODE:
from math import*
v = float(input("Velocidade Inicial: "))
a = radians(float(input("angulo com o solo: ")))
D = float(input("distancia entre passaros e porco: "))

g = 9.8
R = ((v**2))*sin((2*a))/g

-- OUTPUT:
190.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:33:46) 
-- CODE:
from math import*
v = float(input("Velocidade Inicial: "))
a = radians(float(input("angulo com o solo: ")))
D = float(input("distancia entre passaros e porco: "))

g = 9.8
R = ((v**2))*sin((2*a))/g
if (abs(R - D)) <= 0.1:
	print("1")
else:
	print("0")
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:33:52) 
-- CODE:
from math import*
v = float(input("Velocidade Inicial: "))
a = radians(float(input("angulo com o solo: ")))
D = float(input("distancia entre passaros e porco: "))

g = 9.8
R = ((v**2))*sin((2*a))/g
if (abs(R - D)) <= 0.1:
	print("1")
else:
	print("0")
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 10:34:20) 
-- CODE:
from math import*
v = float(input("Velocidade Inicial: "))
a = radians(float(input("angulo com o solo: ")))
D = float(input("distancia entre passaros e porco: "))

g = 9.8
R = ((v**2))*sin((2*a))/g
if (abs(R - D)) <= 0.1:
	print("1")
else:
	print("0")
-- EXECUTION TIME:
0.154516
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
1
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 10:34:23) 
-- CODE:
from math import*
v = float(input("Velocidade Inicial: "))
a = radians(float(input("angulo com o solo: ")))
D = float(input("distancia entre passaros e porco: "))

g = 9.8
R = ((v**2))*sin((2*a))/g
if (abs(R - D)) <= 0.1:
	print("1")
else:
	print("0")
-- EXECUTION TIME:
0.162865
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
1
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:34:38) 
-- CODE:
from math import*
v = float(input("Velocidade Inicial: "))
a = radians(float(input("angulo com o solo: ")))
D = float(input("distancia entre passaros e porco: "))

g = 9.8
R = ((v**2))*sin((2*a))/g
if (abs(R - D)) <= 0.1:
	print("1")
else:
	print("0")
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 10:34:56) 
-- CODE:
from math import*
v = float(input("Velocidade Inicial: "))
a = radians(float(input("angulo com o solo: ")))
D = float(input("distancia entre passaros e porco: "))

g = 9.8
R = ((v**2))*sin((2*a))/g
if (abs(R - D)) <= 0.1:
	print("sim")
else:
	print("nao")
-- EXECUTION TIME:
0.152608
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:08:42) 
-- CODE:
from math import*
v = float(input("Velocidade Inicial: "))
a = radians(float(input("angulo com o solo: ")))
D = float(input("distancia entre passaros e porco: "))

g = 9.8
R = ((v**2))*sin((2*a))/g
if (abs(R - D)) <= 0.1:
	print("sim")
else:
	print("nao")
-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:26:52) 
-- CODE:
from math import*
v = float(input("Velocidade Inicial: "))
a = radians(float(input("angulo com o solo: ")))
D = float(input("distancia entre passaros e porco: "))

g = 9.8
R = ((v**2))*sin((2*a))/g
if (abs(R - D)) <= 0.1:
	print("sim")
else:
	print("fa
-- ERROR:
File "XXXX", line 11
    print("fa
            ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:27:06) 
-- CODE:
from math import*
v = float(input("Velocidade Inicial: "))
a = radians(float(input("angulo com o solo: ")))
D = float(input("distancia entre passaros e porco: "))

g = 9.8
R = ((v**2))*sin((2*a))/g
if (abs(R - D)) <= 0.1:
	print("sim")
else:
	print("nao")
-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:29:21) 
-- CODE:
from math import*
v = float(input("Velocidade Inicial: "))
a = radians(float(input("angulo com o solo: ")))
D = float(input("distancia entre passaros e porco: "))

g = 9.8
R = radians((v**2))*sin((2*a))/g
if (abs(R - D)) <= 0.1:
	print("sim")
else:
	print("nao")
-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 10:29:26) 
-- CODE:
from math import*
v = float(input("Velocidade Inicial: "))
a = radians(float(input("angulo com o solo: ")))
D = float(input("distancia entre passaros e porco: "))

g = 9.8
R = radians((v**2))*sin((2*a))/g
if (abs(R - D)) <= 0.1:
	print("sim")
else:
	print("nao")
-- EXECUTION TIME:
0.235473
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:29:33) 
-- CODE:
from math import*
v = float(input("Velocidade Inicial: "))
a = radians(float(input("angulo com o solo: ")))
D = float(input("distancia entre passaros e porco: "))

g = 9.8
R = ((v**2))*sin((2*a))/g
if (abs(R - D)) <= 0.1:
	print("sim")
else:
	print("nao")
-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 10:29:36) 
-- CODE:
from math import*
v = float(input("Velocidade Inicial: "))
a = radians(float(input("angulo com o solo: ")))
D = float(input("distancia entre passaros e porco: "))

g = 9.8
R = ((v**2))*sin((2*a))/g
if (abs(R - D)) <= 0.1:
	print("sim")
else:
	print("nao")
-- EXECUTION TIME:
0.150784
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
