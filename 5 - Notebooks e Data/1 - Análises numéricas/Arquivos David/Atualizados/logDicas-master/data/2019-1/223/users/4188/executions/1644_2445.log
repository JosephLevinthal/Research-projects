== TEST (2019-04-11 19:27:31) 
-- CODE:
a=input("unidade de medida: ")
t=float(input("temp: "))
if (a.upper()=="C"):
	c=(5/9)*(t-32)
	print(C)
if (a.upper()=="F"):
	f=t(9/5)+32
	print(f)
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(C)
NameError: name 'C' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:28:29) 
-- CODE:
a=input("unidade de medida: ")
t=float(input("temp: "))
if (a.upper()=="C"):
	c=(5/9)*(t-32)
	print(round(C,2))
if (a.upper()=="F"):
	f=t(9/5)+32
	print(round(f,2))
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(round(C,2))
NameError: name 'C' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:29:59) 
-- CODE:
a=input("unidade de medida: ")
t=float(input("temp: "))
if (a.upper()=="C"):
	c=(5/9)*(t-32)
	print(round(C,2))
if (a.upper()=="F"):
	f=t*(9/5)+32
	print(round(f,2))
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(round(C,2))
NameError: name 'C' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:30:55) 
-- CODE:
a=input("unidade de medida: ")
t=float(input("temp: "))
if (a.upper()=="C"):
	c=(5/9)*(t-32)
	print(round(C,2))
if (a.upper()=="F"):
	f=t*(9/5)+32
	print(round(f,2))
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(round(C,2))
NameError: name 'C' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:31:26) 
-- CODE:
a=input("unidade de medida: ")
t=float(input("temp: "))
if (a.upper()=="C"):
	c=(5/9)*(t-32)
	print(round(c,2))
if (a.upper()=="F"):
	f=t*(9/5)+32
	print(round(f,2))
	

-- OUTPUT:
160.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-12 22:53:39) 
-- CODE:
a=input("unidade de medida: ")
t=float(input("temp: "))
if (a.upper()=="C"):
	c=(5/9)*(t-32)
	print(round(c,2))
if (a.upper()=="F"):
	f=t*(9/5)+32
	print(round(f,2))
	

-- EXECUTION TIME:
0.10798
-- TEST CASE 1:
---- input:
C
320
---- correct output:
608.0
---- user output:
160.0
-- TEST CASE 2:
---- input:
F
320
---- correct output:
160.0
---- user output:
608.0
-- TEST CASE 3:
---- input:
C
0
---- correct output:
32.0
---- user output:
-17.78
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 22:55:25) 
-- CODE:
a=input("unidade de medida: ")
t=float(input("temp: "))
if (a.upper()=="C"):
	c=(5/9)*(t-32)
	print(round(c,2))
if (a.upper()=="F"):
	f=t*(9/5)+32
	print(round(f,2))
	

-- OUTPUT:
160.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 22:58:43) 
-- CODE:
a=input("unidade de medida: ")
t=float(input("temp: "))
if (a.upper()=="C"):
	c=t*(9/5)+32
	print(round(c,2))
if (a.upper()=="F"):
	f=t*(5/9)-32
	print(round(f,2))
	

-- OUTPUT:
608.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 22:59:49) 
-- CODE:
a=input("unidade de medida: ")
t=float(input("temp: "))
if (a.upper()=="C"):
	c=(t*(9/5))+32
	print(round(c,2))
if (a.upper()=="F"):
	f=(t*(5/9))-32
	print(round(f,2))
	

-- OUTPUT:
608.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 23:10:20) 
-- CODE:
a=input("unidade de medida: ")
t=float(input("temp: "))
if (a.upper()=="C"):
	c=5/9*(t-32)
	print(round(c,2))
if (a.upper()=="F"):
	f=t*9/5 + 32*(5/9)
	print(round(f,2))
	

-- OUTPUT:
160.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 23:12:47) 
-- CODE:
a=input("unidade de medida: ")
t=float(input("temp: "))
if (a.upper()=="C"):
	c=5/9*(t-32)
	print(round(c,2))
if (a.upper()=="F"):
	f=t*9/5 + 32
	print(round(f,2))
	

-- OUTPUT:
160.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 23:20:07) 
-- CODE:
a=input("unidade de medida: ")
t=float(input("temp: "))
if (a.upper()=="C"):
	c=5/9*(t-32)
	print(round(c,2))
if (a.upper()=="F"):
	f=(t*9/5) + 32
	print(round(f,2))
	

-- OUTPUT:
160.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 23:20:35) 
-- CODE:
a=input("unidade de medida: ")
t=float(input("temp: "))
if (a.upper()=="C"):
	c=5/9*(t-32)
	print(round(c,2))
if (a.upper()=="F"):
	f=(t*9/5) + 32
	print(round(f,2))
	

-- OUTPUT:
160.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 12:11:26) 
-- CODE:
a=input("unidade de medida: ")
t=float(input("temp: "))
if (a.upper()=="C"):
	c=5/9*(t-32)
	print(round(c,2))
if (a.upper()=="F"):
	f=(t*9/5) + 32
	print(round(f,2))
	

-- OUTPUT:
160.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 12:33:01) 
-- CODE:
a=input("unidade de medida: ")
t=float(input("temp: "))
if (a.upper()=="C"):
	c=5/9*(32t-32)
	print(round(c,2))
if (a.upper()=="F"):
	f=(t*9/(5*32)) + 32
	print(round(f,2))
	

-- ERROR:
File "XXXX", line 4
    c=5/9*(32t-32)
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 12:33:31) 
-- CODE:
a=input("unidade de medida: ")
t=float(input("temp: "))
if (a.upper()=="C"):
	c=5/9*(32*t-32)
	print(round(c,2))
if (a.upper()=="F"):
	f=(t*9/(5*32)) + 32
	print(round(f,2))
	

-- OUTPUT:
5671.11
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 12:36:58) 
-- CODE:
a=input("unidade de medida: ")
t=float(input("temp: "))
if (a.upper()=="C"):
	c=1.8*(t-32)
	print(round(c,2))
if (a.upper()=="F"):
	f=(t*1.8) + 32
	print(round(f,2))
	

-- OUTPUT:
518.4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 12:46:09) 
-- CODE:
a=input("unidade de medida: ")
t=float(input("temp: "))
if (a.upper()=="C"):
	c=(t*9/5) + 32
	print(round(c,2))
if (a.upper()=="F"):
	f=t(5/9 - 32)
	print(round(f,2))
	

-- OUTPUT:
608.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 19:14:22) 
-- CODE:
a=input("unidade de medida: ")
t=float(input("temp: "))
if (a.upper()=="C"):
	c=(t*9/5) + 32
	print(round(c,2))
if (a.upper()=="F"):
	f=t(5/9 - 32)
	print(round(f,2))
	

-- EXECUTION TIME:
0.163918
-- TEST CASE 1:
---- input:
C
320
---- correct output:
608.0
---- user output:
608.0
-- TEST CASE 2:
---- input:
F
320
---- correct output:
160.0
---- user output:

-- TEST CASE 3:
---- input:
C
0
---- correct output:
32.0
---- user output:
32.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 19:15:14) 
-- CODE:
a=input("unidade de medida: ")
t=float(input("temp: "))
if (a.upper()=="C"):
	c=(t*9/5) + 32
	print(round(c,2))
if (a.upper()=="F"):
	f=t(5/9 - 32)
	print(round(f,2))
	

-- EXECUTION TIME:
0.151241
-- TEST CASE 1:
---- input:
C
320
---- correct output:
608.0
---- user output:
608.0
-- TEST CASE 2:
---- input:
F
320
---- correct output:
160.0
---- user output:

-- TEST CASE 3:
---- input:
C
0
---- correct output:
32.0
---- user output:
32.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 19:15:16) 
-- CODE:
a=input("unidade de medida: ")
t=float(input("temp: "))
if (a.upper()=="C"):
	c=(t*9/5) + 32
	print(round(c,2))
if (a.upper()=="F"):
	f=t(5/9 - 32)
	print(round(f,2))
	

-- OUTPUT:
608.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 19:15:53) 
-- CODE:
a=input("unidade de medida: ")
t=float(input("temp: "))
if (a.upper()=="C"):
	c=(t*9/5) + 32
	print(round(c,2))
if (a.upper()=="F"):
	f=t*(5/9 - 32)
	print(round(f,2))
	

-- OUTPUT:
608.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 19:16:17) 
-- CODE:
a=input("unidade de medida: ")
t=float(input("temp: "))
if (a.upper()=="C"):
	c=(t*9/5) + 32
	print(round(c,2))
if (a.upper()=="F"):
	f=t*(5/9 - 32)
	print(round(f,2))
	

-- OUTPUT:
608.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 19:16:43) 
-- CODE:
a=input("unidade de medida: ")
t=float(input("temp: "))
if (a.upper()=="C"):
	c=(t*9/5) + 32
	print(round(c,2))
if (a.upper()=="F"):
	f=t*(5/9 - 32)
	print(round(f,2))
	

-- OUTPUT:
608.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 19:17:50) 
-- CODE:
a=input("unidade de medida: ")
t=float(input("temp: "))
if (a.upper()=="C"):
	c=(t*9/5) + 32
	print(round(c,2))
if (a.upper()=="F"):
	f=9/5*(t - 32)
	print(round(f,2))
	

-- OUTPUT:
608.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 19:18:58) 
-- CODE:
a=input("unidade de medida: ")
t=float(input("temp: "))
if (a.upper()=="C"):
	c=(t*9/5) + 32
	print(round(c,2))
if (a.upper()=="F"):
	f=(5/9)*(t - 32)
	print(round(f,2))
	

-- OUTPUT:
608.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 19:19:48) 
-- CODE:
a=input("unidade de medida: ")
t=float(input("temp: "))
if (a.upper()=="C"):
	c=(t*9/5) + 32
	print(round(c,2))
if (a.upper()=="F"):
	f=(5/9)*(t - 32)
	print(round(f,2))
	

-- EXECUTION TIME:
0.209521
-- TEST CASE 1:
---- input:
C
320
---- correct output:
608.0
---- user output:
608.0
-- TEST CASE 2:
---- input:
F
320
---- correct output:
160.0
---- user output:
160.0
-- TEST CASE 3:
---- input:
C
0
---- correct output:
32.0
---- user output:
32.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
