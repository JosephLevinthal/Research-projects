== SUBMITION (2019-03-28 11:13:00) 
-- CODE:
from math import*
a = float(input())
d1 = int(input())
d2 = int(input())
da = sqrt(5*d1)+pi*(d2/3)



-- EXECUTION TIME:
0.132219
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:

-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:

-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 11:13:02) 
-- CODE:
from math import*
a = float(input())
d1 = int(input())
d2 = int(input())
da = sqrt(5*d1)+pi*(d2/3)



-- EXECUTION TIME:
0.164078
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:

-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:

-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 11:13:10) 
-- CODE:
from math import*
a = float(input())
d1 = int(input())
d2 = int(input())
da = sqrt(5*d1)+pi*(d2/3)
print(da)



-- EXECUTION TIME:
0.136806
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
8.519253284679376
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
11.760410882231248
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
3.283265528696387
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 11:13:11) 
-- CODE:
from math import*
a = float(input())
d1 = int(input())
d2 = int(input())
da = sqrt(5*d1)+pi*(d2/3)
print(da)



-- EXECUTION TIME:
0.145952
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
8.519253284679376
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
11.760410882231248
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
3.283265528696387
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 11:13:11) 
-- CODE:
from math import*
a = float(input())
d1 = int(input())
d2 = int(input())
da = sqrt(5*d1)+pi*(d2/3)
print(da)



-- OUTPUT:
8.519253284679376
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 11:13:16) 
-- CODE:
from math import*
a = float(input())
d1 = int(input())
d2 = int(input())
da = sqrt(5*d1)+pi*(d2/3)
print(da)



-- OUTPUT:
8.519253284679376
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 11:13:37) 
-- CODE:
from math import*
a = int(input())
d1 = int(input())
d2 = int(input())
da = sqrt(5*d1)+pi*(d2/3)
print(da)



-- OUTPUT:
8.519253284679376
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 11:14:03) 
-- CODE:
from math import*
a = float(input())
d1 = int(input())
d2 = int(input())
da = sqrt(5*d1)+pi*d2/3
print(da)



-- OUTPUT:
8.519253284679376
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 11:14:08) 
-- CODE:
from math import*
a = float(input())
d1 = int(input())
d2 = int(input())
da = sqrt(5*d1)+pi*d2/3
print(da)



-- OUTPUT:
8.519253284679376
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 11:14:08) 
-- CODE:
from math import*
a = float(input())
d1 = int(input())
d2 = int(input())
da = sqrt(5*d1)+pi*d2/3
print(da)



-- OUTPUT:
8.519253284679376
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 11:14:52) 
-- CODE:
from math import*
a = float(input())
d1 = int(input())
d2 = int(input())
da = ⌊sqrt(5*d1)+pi*d2/3⌋
print(da)



-- ERROR:
File "XXXX", line 5
    da = ⌊sqrt(5*d1)+pi*d2/3⌋
             ^
SyntaxError: invalid character in identifier
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 11:16:08) 
-- CODE:
from math import*
a = float(input())
d1 = int(input())
d2 = int(input())
dano = sqrt(5*d1)+pi*d2/3
r = a - dano
print(r)


-- OUTPUT:
191.48074671532063
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 11:16:17) 
-- CODE:
from math import*
a = float(input())
d1 = int(input())
d2 = int(input())
dano = sqrt(5*d1)+pi*d2/3
r = a - dano
print(r)


-- EXECUTION TIME:
0.231002
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
191.48074671532063
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
288.23958911776873
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
496.7167344713036
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 11:16:23) 
-- CODE:
from math import*
a = float(input())
d1 = int(input())
d2 = int(input())
dano = sqrt(5*d1)+pi*d2/3
r = a - dano
print(dano)
print(r)


-- EXECUTION TIME:
0.137966
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
8.519253284679376
191.48074671532063
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
11.760410882231248
288.23958911776873
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
3.283265528696387
496.7167344713036
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 11:16:24) 
-- CODE:
from math import*
a = float(input())
d1 = int(input())
d2 = int(input())
dano = sqrt(5*d1)+pi*d2/3
r = a - dano
print(dano)
print(r)


-- EXECUTION TIME:
0.187481
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
8.519253284679376
191.48074671532063
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
11.760410882231248
288.23958911776873
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
3.283265528696387
496.7167344713036
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 11:16:49) 
-- CODE:
from math import*
a = float(input())
d1 = int(input())
d2 = int(input())
dano = sqrt(5*d1)+pi*d2/3
r = a - dano
print(dano)
print(r)


-- OUTPUT:
8.519253284679376
191.48074671532063
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 11:18:42) 
-- CODE:
from math import*
a = float(input())
d1 = int(input())
d2 = int(input())
dano = sqrt(5*d1)+pi*d2/3
r = a - dano
print(r)


-- EXECUTION TIME:
0.183999
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
191.48074671532063
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
288.23958911776873
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
496.7167344713036
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 11:18:43) 
-- CODE:
from math import*
a = float(input())
d1 = int(input())
d2 = int(input())
dano = sqrt(5*d1)+pi*d2/3
r = a - dano
print(r)


-- OUTPUT:
191.48074671532063
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 11:19:11) 
-- CODE:
from math import*
a = float(input())
d1 = int(input())
d2 = int(input())
dano = sqrt(5*d1)+pi**d2/3
r = a - dano
print(r)


-- EXECUTION TIME:
0.147664
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
-122.69913250260117
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
-25.94029010015305
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
496.7167344713036
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 11:19:12) 
-- CODE:
from math import*
a = float(input())
d1 = int(input())
d2 = int(input())
dano = sqrt(5*d1)+pi**d2/3
r = a - dano
print(r)


-- EXECUTION TIME:
0.140995
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
-122.69913250260117
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
-25.94029010015305
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
496.7167344713036
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 11:19:13) 
-- CODE:
from math import*
a = float(input())
d1 = int(input())
d2 = int(input())
dano = sqrt(5*d1)+pi**d2/3
r = a - dano
print(r)


-- OUTPUT:
-122.69913250260117
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 11:19:39) 
-- CODE:
from math import*
a = int(input())
d1 = int(input())
d2 = int(input())
dano = sqrt(5*d1)+pi*(d2/3)
r = a - dano
print(r)


-- EXECUTION TIME:
0.124647
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
191.48074671532063
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
288.23958911776873
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
496.7167344713036
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 11:19:41) 
-- CODE:
from math import*
a = int(input())
d1 = int(input())
d2 = int(input())
dano = sqrt(5*d1)+pi*(d2/3)
r = a - dano
print(r)


-- EXECUTION TIME:
0.140935
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
191.48074671532063
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
288.23958911776873
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
496.7167344713036
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 11:19:47) 
-- CODE:
from math import*
a = int(input())
d1 = float(input())
d2 = float(input())
dano = sqrt(5*d1)+pi*(d2/3)
r = a - dano
print(r)


-- EXECUTION TIME:
0.149039
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
191.48074671532063
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
288.23958911776873
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
496.7167344713036
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 11:19:49) 
-- CODE:
from math import*
a = int(input())
d1 = float(input())
d2 = float(input())
dano = sqrt(5*d1)+pi*(d2/3)
r = a - dano
print(r)


-- EXECUTION TIME:
0.189431
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
191.48074671532063
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
288.23958911776873
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
496.7167344713036
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 11:19:49) 
-- CODE:
from math import*
a = int(input())
d1 = float(input())
d2 = float(input())
dano = sqrt(5*d1)+pi*(d2/3)
r = a - dano
print(r)


-- OUTPUT:
191.48074671532063
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 11:20:04) 
-- CODE:
from math import*
a = int(input())
d1 = int(input())
d2 = int(input())
dano = sqrt(5*d1)+pi*(d2/3)
r = a - dano
print(r)


-- OUTPUT:
191.48074671532063
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 11:20:24) 
-- CODE:
from math import*
a = float(input("vida"))
d1 = int(input("dadoA"))
d2 = int(input("dadoB"))
dano = sqrt(5*d1)+pi*(d2/3)
r = a - dano
print(r)


-- OUTPUT:
191.48074671532063
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 16:11:14) 
-- CODE:
from math import*
a = float(input("vida"))
d1 = int(input("dadoA"))
d2 = int(input("dadoB"))
dano = ((5*d1)**0.5)+pi*(d2/3
r = a - dano
print(r)


-- EXECUTION TIME:
0.18661
-- ERROR:
  File "/home/codebench/codes/1594/1802/main.py", line 6
    r = a - dano
    ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 16:11:17) 
-- CODE:
from math import*
a = float(input("vida"))
d1 = int(input("dadoA"))
d2 = int(input("dadoB"))
dano = ((5*d1)**0.5)+pi*(d2/3
r = a - dano
print(r)


-- ERROR:
File "XXXX", line 6
    r = a - dano
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 16:11:32) 
-- CODE:
from math import*
a = float(input("vida"))
d1 = int(input("dadoA"))
d2 = int(input("dadoB"))
dano = ((5*d1)**0.5)+pi*(d2/3)
r = a - dano
print(r)


-- EXECUTION TIME:
0.179529
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
191.48074671532063
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
288.23958911776873
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
496.7167344713036
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 16:11:37) 
-- CODE:
from math import*
a = float(input("vida"))
d1 = int(input("dadoA"))
d2 = int(input("dadoB"))
dano = ((5*d1)**0.5)+pi*(d2/3)
r = a - dano
print(r)


-- OUTPUT:
191.48074671532063
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 16:11:44) 
-- CODE:
from math import*
a = float(input("vida"))
d1 = int(input("dadoA"))
d2 = int(input("dadoB"))
dano = ((5*d1)**0.5)+pi*(d2/3
r = a - dano
print(r)


-- EXECUTION TIME:
0.135868
-- ERROR:
  File "/home/codebench/codes/1594/1802/main.py", line 6
    r = a - dano
    ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 16:12:21) 
-- CODE:
from math import*
a = int(input("vida"))
d1 = int(input("dadoA"))
d2 = int(input("dadoB"))
dano = ((5*d1)**0.5)+pi*(d2/3)
r = a - dano
print(r)


-- EXECUTION TIME:
0.180006
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
191.48074671532063
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
191.48074671532063
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
288.23958911776873
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 16:12:21) 
-- CODE:
from math import*
a = int(input("vida"))
d1 = int(input("dadoA"))
d2 = int(input("dadoB"))
dano = ((5*d1)**0.5)+pi*(d2/3)
r = a - dano
print(r)


-- EXECUTION TIME:
0.161329
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
191.48074671532063
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
288.23958911776873
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
496.7167344713036
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 16:12:35) 
-- CODE:
from math import*
a = int(input("vida"))
d1 = int(input("dadoA"))
d2 = int(input("dadoB"))
dano = ((5*d1)**0.5)+pi**(d2/3)
r = a - dano
print(r)


-- EXECUTION TIME:
0.18827
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
187.89432762141087
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
284.653170023859
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
496.2993401349387
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 16:12:36) 
-- CODE:
from math import*
a = int(input("vida"))
d1 = int(input("dadoA"))
d2 = int(input("dadoB"))
dano = ((5*d1)**0.5)+pi**(d2/3)
r = a - dano
print(r)


-- EXECUTION TIME:
0.220241
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
187.89432762141087
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
284.653170023859
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
496.2993401349387
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 16:12:37) 
-- CODE:
from math import*
a = int(input("vida"))
d1 = int(input("dadoA"))
d2 = int(input("dadoB"))
dano = ((5*d1)**0.5)+pi**(d2/3)
r = a - dano
print(r)


-- EXECUTION TIME:
0.178974
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
187.89432762141087
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
284.653170023859
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
496.2993401349387
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 16:12:37) 
-- CODE:
from math import*
a = int(input("vida"))
d1 = int(input("dadoA"))
d2 = int(input("dadoB"))
dano = ((5*d1)**0.5)+pi**(d2/3)
r = a - dano
print(r)


-- EXECUTION TIME:
0.281714
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
187.89432762141087
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
496.2993401349387
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 16:12:37) 
-- CODE:
from math import*
a = int(input("vida"))
d1 = int(input("dadoA"))
d2 = int(input("dadoB"))
dano = ((5*d1)**0.5)+pi**(d2/3)
r = a - dano
print(r)


-- OUTPUT:
187.89432762141087
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 16:12:38) 
-- CODE:
from math import*
a = int(input("vida"))
d1 = int(input("dadoA"))
d2 = int(input("dadoB"))
dano = ((5*d1)**0.5)+pi**(d2/3)
r = a - dano
print(r)


-- EXECUTION TIME:
0.100757
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1594/1802/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 16:12:38) 
-- CODE:
from math import*
a = int(input("vida"))
d1 = int(input("dadoA"))
d2 = int(input("dadoB"))
dano = ((5*d1)**0.5)+pi**(d2/3)
r = a - dano
print(r)


-- EXECUTION TIME:
0.151251
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
187.89432762141087
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
284.653170023859
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
496.2993401349387
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 16:13:30) 
-- CODE:
from math import*
a = int(input("vida"))
d1 = int(input("dadoA"))
d2 = int(input("dadoB"))
dano = ((5*d1)**0.5)+pi**(d2/3)
r = a - int(dano)
print(r)


-- OUTPUT:
188
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 16:13:37) 
-- CODE:
from math import*
a = int(input("vida"))
d1 = int(input("dadoA"))
d2 = int(input("dadoB"))
dano = ((5*d1)**0.5)+pi**(d2/3)
r = a - int(dano)
print(r)


-- EXECUTION TIME:
0.228854
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
188
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
285
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
