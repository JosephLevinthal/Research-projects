== TEST (2019-04-05 12:50:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x=input("patrono do harry: ")

if x == cervo:
	mensagem= x +"eh patrono do harry potter"
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if x == cervo:
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 12:50:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x=input("patrono do harry: ")

if x == "cervo":
	mensagem= x +"eh patrono do harry potter"
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if x == cervo:
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 12:51:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x=input("patrono do harry: ")

if x == "cervo":
	mensagem = x + "eh patrono do harry potter"
else:
	mensagem = x + " nao eh patrono do harry"
	
print(mensagen)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    print(mensagen)
NameError: name 'mensagen' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 12:51:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x=input("patrono do harry: ")

if x == "cervo":
	mensagem = x + "eh patrono do harry potter"
else:
	mensagem = x + " nao eh patrono do harry"
	
print(mensagem)
-- OUTPUT:
cervoeh patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-05 12:52:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x=input("patrono do harry: ")

if x == "cervo":
	mensagem = x + "eh patrono do harry potter"
else:
	mensagem = x + " nao eh patrono do harry"
	
print(mensagem)
-- EXECUTION TIME:
0.165091
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervoeh patrono do harry potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do harry
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 12:52:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x=input("patrono do harry: ")
c=cervo
if x == c:
	mensagem = x + "eh patrono do harry potter"
else:
	mensagem = x + " nao eh patrono do harry"
	
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    c=cervo
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 12:52:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x=input("patrono do harry: ")
c = "cervo"
if x == c:
	mensagem = x + "eh patrono do harry potter"
else:
	mensagem = x + " nao eh patrono do harry"
	
print(mensagem)
-- OUTPUT:
cervoeh patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 12:53:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x=input("patrono do harry: ")
c = "cervo"
if x == c:
	mensagem = x + " eh patrono do harry potter"
else:
	mensagem = x + " nao eh patrono do harry"
	
print(mensagem)
-- OUTPUT:
cervo eh patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-05 12:53:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x=input("patrono do harry: ")
c = "cervo"
if x == c:
	mensagem = x + " eh patrono do harry potter"
else:
	mensagem = x + " nao eh patrono do harry"
	
print(mensagem)
-- EXECUTION TIME:
0.221821
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do harry potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do harry
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 12:55:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x=input("patrono do harry: ")
c = "cervo"
if x == c:
	mensagem = x + " eh patrono do harry potter"
else:
	mensagem = x + " nao eh patrono do harry"
	
print(mensagem)
-- OUTPUT:
cervo eh patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-05 12:55:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x=input("patrono do harry: ")
c = "cervo"
if x == c:
	mensagem = x + " eh patrono do harry potter"
else:
	mensagem = x + " nao eh patrono do harry"
	
print(mensagem)
-- EXECUTION TIME:
0.161483
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do harry potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do harry
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-05 12:56:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x=input("patrono do harry: ")

if x == "cervo":
	mensagem = x + " eh patrono do Harry Potter"
else:
	mensagem = x + " nao eh patrono do Harry Potter"
	
print(mensagem)
-- EXECUTION TIME:
0.245484
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 13:28:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x=input("patrono do harry: ")

if x == "cervo":
	mensagem = x + " eh patrono do Harry Potter"
else:
	mensagem = x + " nao eh patrono do Harry Potter"
	
print(mensagem)
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 13:28:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x=input("patrono do harry: ")

if x == "cervo":
	mensagem = x + " eh patrono do Harry Potter"
else:
	mensagem = x + " nao eh patrono do Harry Potter"
	
print(mensagem)
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 12:31:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x=input("patrono do harry: ")

if x == "cervo":
	mensagem = x + " eh patrono do Harry Potter"
else:
	mensagem = x + " nao eh patrono do Harry Potter"
	
print(mensagem)
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
