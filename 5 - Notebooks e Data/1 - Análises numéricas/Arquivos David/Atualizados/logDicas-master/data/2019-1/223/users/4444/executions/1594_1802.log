== TEST (2019-06-25 22:39:08) 
-- CODE:
from math import *
p=int(input('digite:  '))
d=int(input('digite: '))
d2=int(input('digite:'))
dano=(5*d**0.5 + pi**(d2/3))
print(dano)
-- OUTPUT:
14.869604401089358
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 22:40:19) 
-- CODE:
from math import *
p=int(input('digite:  '))
d=int(input('digite: '))
d2=int(input('digite:'))
dano=(5*d)**0.5 + (pi**(d2/3)
print(dano)
-- ERROR:
File "XXXX", line 6
    print(dano)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 22:40:52) 
-- CODE:
from math import *
p=int(input('digite:  '))
d=int(input('digite: '))
d2=int(input('digite:'))
dano=(5*d)**0.5 + (pi**(d2/3))
print(dano)
-- OUTPUT:
12.105672378589148
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-25 22:43:38) 
-- CODE:
from math import *
p=float(input('digite:  '))
d=int(input('digite: '))
d2=int(input('digite:'))
dano=(5*d)**0.5 + (pi**(d2/3))
print(dano)
-- EXECUTION TIME:
0.785477
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
digite:  digite: digite:12.105672378589148
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
digite:  digite: digite:15.34682997614102
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
digite:  digite: digite:3.700659865061313
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
