== TEST (2019-03-26 13:41:35) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int("93:")

# Impressao do dobro do numero
print(num)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    num = int("93:")
ValueError: invalid literal for int() with base 10: '93:'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 13:41:45) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int("93")

# Impressao do dobro do numero
print(num)
-- OUTPUT:
93
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 13:41:48) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int("93")

# Impressao do dobro do numero
print(num)
-- EXECUTION TIME:
0.150602
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
93
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
93
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 13:42:51) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int("8")


# Impressao do dobro do numero
print(num)
-- OUTPUT:
8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 13:42:53) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int("8")


# Impressao do dobro do numero
print(num)
-- EXECUTION TIME:
0.124216
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
8
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
8
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 13:44:18) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("8:"))
input(8)



# Impressao do dobro do numero
print(num)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    input(8)
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 13:44:21) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("8:"))
input(8)



# Impressao do dobro do numero
print(num)
-- EXECUTION TIME:
0.18348
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1582/2897/main.py", line 5, in <module>
    input(8)
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:11:10) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:"))






# Impressao do dobro do numero
print(num)
-- OUTPUT:
1234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-04 16:11:24) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:"))






# Impressao do dobro do numero
print(num)
-- EXECUTION TIME:
0.900467
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
1234
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
444
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 15:20:08) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:"))






# Impressao do dobro do numero
print(num * 2)
-- OUTPUT:
2468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-18 15:20:27) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:"))






# Impressao do dobro do numero
print(num * 2)
-- EXECUTION TIME:
0.560535
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
2468
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
888
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
