== TEST (2019-04-07 16:23:12) 
-- CODE:
string=('PEDRO if paulo'.upper)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    d = (preco*5)/100
NameError: name 'preco' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 16:23:38) 
-- CODE:
string=('PEDRO if paulo'.upper)
-- EXECUTION TIME:
0.128718
-- TEST CASE 1:
---- input:
Ada
Leon
---- correct output:
Ada
Leon
---- user output:

-- TEST CASE 2:
---- input:
Marcos
Demetrius
---- correct output:
Demetrius
Marcos
---- user output:

-- TEST CASE 3:
---- input:
WILSON
george
---- correct output:
george
WILSON
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 16:24:40) 
-- CODE:
string=('PEDRO if paulo')
print(string .upper())
-- OUTPUT:
PEDRO IF PAULO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 16:24:58) 
-- CODE:
string=('PEDRO if paulo')
print(string .upper())
-- EXECUTION TIME:
0.192249
-- TEST CASE 1:
---- input:
Ada
Leon
---- correct output:
Ada
Leon
---- user output:
PEDRO IF PAULO
-- TEST CASE 2:
---- input:
Marcos
Demetrius
---- correct output:
Demetrius
Marcos
---- user output:
PEDRO IF PAULO
-- TEST CASE 3:
---- input:
WILSON
george
---- correct output:
george
WILSON
---- user output:
PEDRO IF PAULO
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 14:50:39) 
-- CODE:
nome=input("1 nome: ")
nome=input("2 nome: ")
if(nome==nome.upper()):
   print(nome)

-- OUTPUT:
PEDRO IF PAULO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 16:36:24) 
-- CODE:
nome=input("1 nome: ")
nome=input("2 nome: ")
if(nome.upper()==nome.upper()):
   print(list)

-- OUTPUT:
<class 'list'>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 16:38:41) 
-- CODE:
nome=input("1 nome: ")
nome=input("2 nome: ")
if(nome.upper()==nome.upper())
list
   print(nome)

-- ERROR:
File "XXXX", line 3
    if(nome.upper()==nome.upper())
                                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 00:22:04) 
-- CODE:
nome=input("1 nome: ")
nome=input("2 nome: ")
if(nome.upper()==nome.upper()):
	print(nome)

-- OUTPUT:
Leon
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 00:22:43) 
-- CODE:
list
nome=input("1 nome: ")
nome=input("2 nome: ")
if(nome.upper()==nome.upper()):
	print(nome)

-- OUTPUT:
Leon
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 00:23:32) 
-- CODE:

nome=list(input("1 nome: "))
nome=list(input("2 nome: "))
if(nome.upper()==nome.upper()):
	print(nome)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if(nome.upper()==nome.upper()):
AttributeError: 'list' object has no attribute 'upper'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 00:27:39) 
-- CODE:

nome=input("1 nome: ")
nome=input("2 nome: ")
if(nome.upper()== nome.upper()):
	list(nome)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if(nome.upper()==nome.upper()):
AttributeError: 'list' object has no attribute 'upper'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 00:28:23) 
-- CODE:

nome=input("1 nome: ")
nome=input("2 nome: ")
if(nome.upper()== nome.upper()):
	print(list(nome))

-- OUTPUT:
['L', 'e', 'o', 'n']
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 00:31:42) 
-- CODE:

nome=input("1 nome: ")
nome2=input("2 nome: ")
if(nome.upper()== nome2.upper()):
	print(nome)
if(nome2.upper()== nome.upper()):
	print(nome2)

-- OUTPUT:
['L', 'e', 'o', 'n']
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 00:32:08) 
-- CODE:
list
nome=input("1 nome: ")
nome2=input("2 nome: ")
if(nome.upper()== nome2.upper()):
	print(nome)
if(nome2.upper()== nome.upper()):
	print(nome2)

-- OUTPUT:
['L', 'e', 'o', 'n']
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 00:33:49) 
-- CODE:
nome=input("1 nome: ")
nome2=input("2 nome: ")
if(nome.upper()== "list"):
	print(nome)
if(nome2.upper()== "list"):
	print(nome2)

-- OUTPUT:
['L', 'e', 'o', 'n']
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 11:16:50) 
-- CODE:
nome=input("1 nome: ")
nome2=input("2 nome: ")
if(nome.upper()< nome2.upper()):
	print(nome)
if(nome2.upper()> nome.upper()):
	print(nome2)

-- OUTPUT:
Ada
Leon
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 11:20:48) 
-- CODE:
nome=input("1 nome: ")
nome2=input("2 nome: ")
if(nome.upper()< nome2.upper()):
	n = nome < nome2
	print(n)
if(nome2.upper()> nome.upper()):
	n = nome2 > nome
	print(n)

-- OUTPUT:
True
True
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 11:21:40) 
-- CODE:
nome=input("1 nome: ")
nome2=input("2 nome: ")
if(nome.upper()== nome2.upper()):
	n = nome == nome2
	print(n)
if(nome2.upper()== nome.upper()):
	n = nome2 == nome
	print(n)

-- OUTPUT:
True
True
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 11:22:48) 
-- CODE:
nome=input("1 nome: ")
nome2=input("2 nome: ")
if(nome.upper()== nome2.upper()):
	print(nome)
if(nome2.upper()== nome.upper()):
	print(nome2)

-- OUTPUT:
True
True
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 11:23:35) 
-- CODE:
nome=input("1 nome: ")
nome2=input("2 nome: ")
if(nome.upper()== nome2.upper()):
	print(nome)
	print(nome2)

-- OUTPUT:
True
True
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 11:24:08) 
-- CODE:
nome=input("1 nome: ")
nome2=input("2 nome: ")
if(nome.upper()> nome2.upper()):
	print(nome)
	print(nome2)

-- OUTPUT:
True
True
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 11:24:39) 
-- CODE:
nome=input("1 nome: ")
nome2=input("2 nome: ")
if(nome.upper()< nome2.upper()):
	print(nome)
	print(nome2)

-- OUTPUT:
Ada
Leon
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 11:25:03) 
-- CODE:
nome=input("1 nome: ")
nome2=input("2 nome: ")
if(nome.upper()<= nome2.upper()):
	print(nome)
	print(nome2)

-- OUTPUT:
Ada
Leon
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 11:25:31) 
-- CODE:
nome=input("1 nome: ")
nome2=input("2 nome: ")
if(nome.upper()>= nome2.upper()):
	print(nome)
	print(nome2)

-- OUTPUT:
Ada
Leon
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 14:54:45) 
-- CODE:
nome=input("1 nome: ")
nome2=input("2 nome: ")
if(nome.upper()>= nome2.upper()):
	print(nome)
	print(nome2)

-- OUTPUT:
Ada
Leon
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
