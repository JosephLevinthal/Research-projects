== TEST (2019-04-13 14:00:08) 
-- CODE:
a=int(input("valor: "))
b=int(input("quantidade de tickets: "))
c-float(input("valor tickets: "))
d=int(input("quantidade onibus: "))
e=float(input("valor passes: "))
if:
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- ERROR:
File "XXXX", line 6
    if:
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 14:01:15) 
-- CODE:
a=int(input("valor: "))
b=int(input("quantidade de tickets: "))
c-float(input("valor tickets: "))
d=int(input("quantidade onibus: "))
e=float(input("valor passes: "))
if(c==e):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    c-float(input())
NameError: name 'c' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 14:02:29) 
-- CODE:
a=int(input("valor: "))
b=int(input("quantidade de tickets: "))
c-float(input("valor tickets: "))
d=int(input("quantidade onibus: "))
e=float(input("valor passes: "))
if(c==e):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    c-float(input())
NameError: name 'c' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 14:03:11) 
-- CODE:
a=int(input("valor: "))
b=int(input("quantidade de tickets: "))
c=float(input("valor tickets: "))
d=int(input("quantidade onibus: "))
e=float(input("valor passes: "))
if(c==e):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- OUTPUT:
INSUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 14:06:36) 
-- CODE:
a=int(input("valor: "))
b=int(input("quantidade de tickets: "))
c=float(input("valor tickets: "))
d=int(input("quantidade onibus: "))
e=float(input("valor passes: "))
if(a==b==c==d==e==f):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- OUTPUT:
INSUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 14:07:34) 
-- CODE:
a=int(input("valor: "))
b=int(input("quantidade de tickets: "))
c=float(input("valor tickets: "))
d=int(input("quantidade onibus: "))
e=float(input("valor passes: "))
if(a):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 14:08:06) 
-- CODE:
a=int(input("valor: "))
b=int(input("quantidade de tickets: "))
c=float(input("valor tickets: "))
d=int(input("quantidade onibus: "))
e=float(input("valor passes: "))
if(a):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- EXECUTION TIME:
0.170359
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
SUFICIENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 14:09:13) 
-- CODE:
a=int(input("valor: "))
b=int(input("quantidade de tickets: "))
c=float(input("valor tickets: "))
d=int(input("quantidade onibus: "))
e=float(input("valor passes: "))
if(a==c==e):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- OUTPUT:
INSUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 14:10:34) 
-- CODE:
a=int(input("valor: "))
b=int(input("quantidade de tickets: "))
c=float(input("valor tickets: "))
d=int(input("quantidade onibus: "))
e=float(input("valor passes: "))
if(a):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 14:11:15) 
-- CODE:
a=int(input("valor: "))
b=int(input("quantidade de tickets: "))
c=float(input("valor tickets: "))
d=int(input("quantidade onibus: "))
e=float(input("valor passes: "))
if(a):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 15:33:06) 
-- CODE:
a=int(input("valor: "))
b=int(input("quantidade de tickets: "))
c=float(input("valor tickets: "))
d=int(input("quantidade onibus: "))
e=float(input("valor passes: "))
if(a=c+e):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- ERROR:
File "XXXX", line 6
    if(a=c+e):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 15:33:22) 
-- CODE:
a=int(input("valor: "))
b=int(input("quantidade de tickets: "))
c=float(input("valor tickets: "))
d=int(input("quantidade onibus: "))
e=float(input("valor passes: "))
if(a=="c+e"):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- OUTPUT:
INSUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 15:34:12) 
-- CODE:
a=int(input("valor: "))
b=int(input("quantidade de tickets: "))
c=float(input("valor tickets: "))
d=int(input("quantidade onibus: "))
e=float(input("valor passes: "))
if(a):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:33:41) 
-- CODE:
a=int(input("valor: "))
b=int(input("quantidade de tickets: "))
c=float(input("valor tickets: "))
d=int(input("quantidade onibus: "))
e=float(input("valor passes: "))
soma=b+c+d+e-a
if(soma):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 13:34:16) 
-- CODE:
a=int(input("valor: "))
b=int(input("quantidade de tickets: "))
c=float(input("valor tickets: "))
d=int(input("quantidade onibus: "))
e=float(input("valor passes: "))
soma=b+c+d+e-a
if(soma):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- EXECUTION TIME:
0.172634
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
SUFICIENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:35:36) 
-- CODE:
a=int(input("valor: "))
b=int(input("quantidade de tickets: "))
c=float(input("valor tickets: "))
d=int(input("quantidade onibus: "))
e=float(input("valor passes: "))
soma= (a - b + c + d + e)
if(soma):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 13:36:12) 
-- CODE:
a=int(input("valor: "))
b=int(input("quantidade de tickets: "))
c=float(input("valor tickets: "))
d=int(input("quantidade onibus: "))
e=float(input("valor passes: "))
soma= (a - b + c + d + e)
if(soma):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- EXECUTION TIME:
0.172338
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
SUFICIENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:37:36) 
-- CODE:
a=int(input("valor: "))
b=int(input("quantidade de tickets: "))
c=float(input("valor tickets: "))
d=int(input("quantidade onibus: "))
e=float(input("valor passes: "))
soma= (a - b + c + d + e)
if(soma >= 0):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 13:38:14) 
-- CODE:
a=int(input("valor: "))
b=int(input("quantidade de tickets: "))
c=float(input("valor tickets: "))
d=int(input("quantidade onibus: "))
e=float(input("valor passes: "))
soma= (a - b + c + d + e)
if(soma >= 0):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- EXECUTION TIME:
0.171634
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
SUFICIENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:42:18) 
-- CODE:
a=int(input("valor: "))
b=int(input("quantidade de tickets: "))
c=float(input("valor tickets: "))
d=int(input("quantidade onibus: "))
e=float(input("valor passes: "))
soma= ( b + c + d + e)-a
if(soma >= 0):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- OUTPUT:
INSUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:43:16) 
-- CODE:
a=int(input("valor: "))
b=int(input("quantidade de tickets: "))
c=float(input("valor tickets: "))
d=int(input("quantidade onibus: "))
e=float(input("valor passes: "))
soma= (( b + c + d + e)-a)
if(soma >= 0):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- OUTPUT:
INSUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:44:09) 
-- CODE:
a=int(input("valor: "))
b=int(input("quantidade de tickets: "))
c=float(input("valor tickets: "))
d=int(input("quantidade onibus: "))
e=float(input("valor passes: "))
soma= (a - b + c + d + e)
if(soma >= 0):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:45:31) 
-- CODE:
a=int(input("valor: "))
b=int(input("quantidade de tickets: "))
c=float(input("valor tickets: "))
d=int(input("quantidade onibus: "))
e=float(input("valor passes: "))
soma= (a - b + c + d + e)
if(soma.upper() >= 0):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if(soma.upper() >= 0):
AttributeError: 'float' object has no attribute 'upper'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:46:18) 
-- CODE:
a=int(input("valor: "))
b=int(input("quantidade de tickets: "))
c=float(input("valor tickets: "))
d=int(input("quantidade onibus: "))
e=float(input("valor passes: "))
soma= (a - b + c + d + e)
if(soma >= 0):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:10:09) 
-- CODE:
a=int(input("valor: "))
b=int(input("quantidade de tickets: "))
c=float(input("valor tickets: "))
d=int(input("quantidade onibus: "))
e=float(input("valor passes: "))
if(soma >= 0):
	soma= (a - (b + c + d + e))
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if(soma >= 0):
NameError: name 'soma' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:13:13) 
-- CODE:
a=int(input("valor: "))
b=int(input("quantidade de tickets: "))
c=float(input("valor tickets: "))
d=int(input("quantidade onibus: "))
e=float(input("valor passes: "))
soma= (a - (b + c + d + e))
if(soma >= 0):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:13:40) 
-- CODE:
a=int(input("valor: "))
b=int(input("quantidade de tickets: "))
c=float(input("valor tickets: "))
d=int(input("quantidade onibus: "))
e=float(input("valor passes: "))
soma= (a - (b + c + d + e))
if(soma >= 0):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- EXECUTION TIME:
0.136991
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
SUFICIENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:22:29) 
-- CODE:
a=int(input("valor: "))
b=int(input("quantidade de tickets: "))
c=float(input("valor tickets: "))
d=int(input("quantidade onibus: "))
e=float(input("valor passes: "))
soma= (a - (b * c + d * e))
if(soma >= 0):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:23:10) 
-- CODE:
a=int(input("valor: "))
b=int(input("quantidade de tickets: "))
c=float(input("valor tickets: "))
d=int(input("quantidade onibus: "))
e=float(input("valor passes: "))
soma= (a - (b * c + d * e))
if(soma >= 0):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- EXECUTION TIME:
0.15513
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
INSUFICIENTE
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
