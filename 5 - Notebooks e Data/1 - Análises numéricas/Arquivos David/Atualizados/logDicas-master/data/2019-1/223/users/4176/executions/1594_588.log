== TEST (2019-04-02 14:04:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Use as mensagens de erro para corrigir seu codigo.
valor=int(input("Valor do saque: "))
c1=int(valor%10)
c2=int(valor-c1)%10
c3=int(valor-c2)%10

print(c1)
print(c2)
print(c3)

-- OUTPUT:
0
0
0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 14:04:24) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Use as mensagens de erro para corrigir seu codigo.
valor=int(input("Valor do saque: "))
c1=int(valor%10)
c2=int(valor-c1)%10
c3=int(valor-c2)%10

print(c1)
print(c2)
print(c3)

-- EXECUTION TIME:
0.201562
-- TEST CASE 1:
---- input:
990
---- correct output:
9
1
4
---- user output:
0
0
0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 14:07:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Use as mensagens de erro para corrigir seu codigo.
valor=int(input("Valor do saque: "))
c1=int(valor//10)
c2=int(valor-c1)//10
c3=int(valor-c2)//10

print(c1)
print(c2)
print(c3)

-- OUTPUT:
99
89
90
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 14:08:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Use as mensagens de erro para corrigir seu codigo.
valor=int(input("Valor do saque: "))
c1=int(valor//10)
c2=int(valor-c1)//10
c3=int(valor-c2)//10

print(c1%10)
print(c2%10)
print(c3%10)

-- OUTPUT:
9
9
0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 14:09:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Use as mensagens de erro para corrigir seu codigo.
valor=int(input("Valor do saque: "))
c1=int(valor//10)
c2=int(valor-c1)//10
c3=int(valor-c2)//10

print(c1%10)
print(c2%10)
print(c3%10)

-- EXECUTION TIME:
0.19629
-- TEST CASE 1:
---- input:
990
---- correct output:
9
1
4
---- user output:
9
9
0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
