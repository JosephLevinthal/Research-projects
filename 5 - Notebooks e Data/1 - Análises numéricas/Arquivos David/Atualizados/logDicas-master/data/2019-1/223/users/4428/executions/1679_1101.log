== TEST (2019-05-02 11:51:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = int(input("Faixa de Consumo: ", kWh))
tipo = input("Tipo de Instalacao: ")

print("Entradas:", consumo, ",", tipo)

if(tipo == "R")
	if(consumo <0):
		preco = -1
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I")
	if(consumo < 0):
		preco = -1
	elif(consumo <= 1000)
		preco = consumo*0.55
	else:
		preco = faixa*0.60
elif(tipo == "C")
	if(consumo <0)
	preco = -1
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
	else:
		preco = -1
else:
	preco
	
print("Valor total: ", preco)	
-- ERROR:
File "XXXX", line 10
    if(tipo == "R")
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:51:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = int(input("Faixa de Consumo: ", kWh))
tipo = input("Tipo de Instalacao: ")

print("Entradas:", consumo, ",", tipo)

if(tipo == "R"):
	if(consumo <0):
		preco = -1
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I")
	if(consumo < 0):
		preco = -1
	elif(consumo <= 1000)
		preco = consumo*0.55
	else:
		preco = faixa*0.60
elif(tipo == "C")
	if(consumo <0)
	preco = -1
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
	else:
		preco = -1
else:
	preco
	
print("Valor total: ", preco)	
-- ERROR:
File "XXXX", line 17
    elif(tipo == "I")
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:52:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = int(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")

print("Entradas:", consumo, ",", tipo)

if(tipo == "R"):
	if(consumo <0):
		preco = -1
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I")
	if(consumo < 0):
		preco = -1
	elif(consumo <= 1000)
		preco = consumo*0.55
	else:
		preco = faixa*0.60
elif(tipo == "C")
	if(consumo <0)
	preco = -1
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
	else:
		preco = -1
else:
	preco
	
print("Valor total: ", preco)	
-- ERROR:
File "XXXX", line 17
    elif(tipo == "I")
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:52:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = int(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")

print("Entradas:", consumo, ",", tipo)

if(tipo == "R"):
	if(consumo <0):
		preco = -1
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = -1
	elif(consumo <= 1000)
		preco = consumo*0.55
	else:
		preco = faixa*0.60
elif(tipo == "C")
	if(consumo <0)
	preco = -1
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
	else:
		preco = -1
else:
	preco
	
print("Valor total: ", preco)	
-- ERROR:
File "XXXX", line 20
    elif(consumo <= 1000)
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:53:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = int(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")

print("Entradas:", consumo, ",", tipo)

if(tipo == "R"):
	if(consumo <0):
		preco = -1
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = -1
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = faixa*0.60
elif(tipo == "C"):
	if(consumo <0):
	preco = -1
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
	else:
		preco = -1
else:
	preco
	
print("Valor total: ", preco)	
-- ERROR:
File "XXXX", line 26
    preco = -1
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:54:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = int(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")

print("Entradas:", consumo, ",", tipo)

if(tipo == "R"):
	if(consumo <0):
		preco = -1
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = -1
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = faixa*0.60
elif(tipo == "C"):
	if(consumo <0):
		preco = -1
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
	else:
		preco = -1
else:
	preco
	
print("Valor total: ", preco)	
-- ERROR:
File "XXXX", line 31
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:55:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = int(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")

print("Entradas:", consumo, ",", tipo)

if(tipo == "R"):
	if(consumo <0):
		preco = -1
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = -1
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = faixa*0.60
elif(tipo == "C"):
	if(consumo <0):
		preco = -1
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
else:
		preco = -1

print("Valor total: ", preco)	
-- OUTPUT:
Entradas: -56 , I
Valor total:  -1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:56:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")

print("Entradas:", consumo, ",", tipo)

if(tipo == "R"):
	if(consumo <0):
		preco = -1
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = -1
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = faixa*0.60
elif(tipo == "C"):
	if(consumo <0):
		preco = -1
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
else:
		preco = -1

print("Valor total: ", preco)	
-- OUTPUT:
Entradas: -56.0 , I
Valor total:  -1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:57:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")

print("Entradas:", consumo + kWh, ",","tipo" + tipo)

if(tipo == "R"):
	if(consumo <0):
		preco = -1
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = -1
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = faixa*0.60
elif(tipo == "C"):
	if(consumo <0):
		preco = -1
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
else:
		preco = -1

print("Valor total: ", preco)	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print("Entradas:", consumo + kWh, ",","tipo" + tipo)
NameError: name 'kWh' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:58:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")

print("Entradas:", consumo + kWh, ",","tipo: " + tipo)

if(tipo == "R"):
	if(consumo <0):
		preco = -1
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = -1
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = faixa*0.60
elif(tipo == "C"):
	if(consumo <0):
		preco = -1
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
else:
		preco = -1

print("Valor total: ", preco)	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print("Entradas:", consumo + kWh, ",","tipo: " + tipo)
NameError: name 'kWh' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:58:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")

print("Entradas:", consumo + "kWh", ",","tipo: " + tipo)

if(tipo == "R"):
	if(consumo <0):
		preco = -1
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = -1
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = faixa*0.60
elif(tipo == "C"):
	if(consumo <0):
		preco = -1
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
else:
		preco = -1

print("Valor total: ", preco)	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print("Entradas:", consumo + "kWh", ",","tipo: " + tipo)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:04:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")

print("Entradas:", consumo + "kWh", ",", "tipo" + tipo)

if(tipo == "R"):
	if(consumo <0):
		preco = -1
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = -1
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = faixa*0.60
elif(tipo == "C"):
	if(consumo <0):
		preco = -1
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
else:
		preco = -1

print("Valor total: ", preco)	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print("Entradas:", consumo + "kWh", ",", "tipo" + tipo)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:04:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")

print("Entradas:", consumo, ",", tipo)

if(tipo == "R"):
	if(consumo <0):
		preco = -1
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = -1
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = faixa*0.60
elif(tipo == "C"):
	if(consumo <0):
		preco = -1
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
else:
		preco = -1

print("Valor total: ", preco)	
-- OUTPUT:
Entradas: -56.0 , I
Valor total:  -1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:05:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")

print("Entradas:", consumo, ",", tipo)

if(tipo == "R"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = -1
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = faixa*0.60
elif(tipo == "C"):
	if(consumo <0):
		preco = -1
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
else:
		preco = -1

print("Valor total: ", preco)	
-- OUTPUT:
Entradas: -56.0 , I
Valor total:  -1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:07:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")

print("Entradas:", consumo, ",", tipo)

if(tipo == "R"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = -1
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = faixa*0.60
elif(tipo == "C"):
	if(consumo <0):
		preco = -1
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
else:
		preco = -1

print("Valor total: ", preco)	
-- OUTPUT:
Entradas: -56.0 , I
Valor total:  -1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:08:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")

print("Entradas:", consumo, ",", tipo)

if(tipo == "R"):
	if(consumo <=0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = -1
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = faixa*0.60
elif(tipo == "C"):
	if(consumo <0):
		preco = -1
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
else:
		preco = -1

print("Valor total: ", preco)	
-- OUTPUT:
Entradas: -56.0 , I
Valor total:  -1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:09:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")

print("Entradas:", consumo, ",", tipo)

if(tipo == "R"):
	if(consumo <=0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = faixa*0.60
elif(tipo == "C"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
else:
		preco = "Dados invalidos"

print("Valor total: ", preco)	
-- OUTPUT:
Entradas: -56.0 , I
Valor total:  Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:11:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")

print("Entradas:", consumo, ",", tipo)

if(tipo == "R"):
	if(consumo <=0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = faixa*0.60
elif(tipo == "C"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
else:
		preco = "Dados invalidos"

print (round("Valor total: ", preco, 2))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 34, in <module>
    print (round("Valor total: ", preco, 2))	
TypeError: round() takes at most 2 arguments (3 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:17:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")

print("Entradas:", consumo, ",", tipo)

if(tipo == "R"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = faixa*0.60
elif(tipo == "C"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
else:
		preco = "Dados invalidos"

print("Valor total: ",round(preco, 2))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 34, in <module>
    print("Valor total: ",round(preco, 2))	
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:18:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")

print("Entradas:", (consumo + kWh) ",", ("tipo" + tipo))

if(tipo == "R"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = faixa*0.60
elif(tipo == "C"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
else:
		preco = "Dados invalidos"

print("Valor total: ",round(preco, 2))	
-- ERROR:
File "XXXX", line 8
    print("Entradas:", (consumo + kWh) ",", ("tipo" + tipo))
                                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:18:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")

print("Entradas:", (consumo + "kWh") ",", ("tipo" + tipo))

if(tipo == "R"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = faixa*0.60
elif(tipo == "C"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
else:
		preco = "Dados invalidos"

print("Valor total: ",round(preco, 2))	
-- ERROR:
File "XXXX", line 8
    print("Entradas:", (consumo + "kWh") ",", ("tipo" + tipo))
                                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:19:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")

print("Entradas:", (consumo + "kWh"), ",", ("tipo" + tipo))

if(tipo == "R"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = faixa*0.60
elif(tipo == "C"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
else:
		preco = "Dados invalidos"

print("Valor total: ",round(preco, 2))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print("Entradas:", (consumo + "kWh"), ",", ("tipo" + tipo))
TypeError: unsupported operand type(s) for +: 'float' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:25:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")

x = (consumo + "kWh")
y = ("tipo" + tipo)
print("Entradas:", x, ",", y)

if(tipo == "R"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = faixa*0.60
elif(tipo == "C"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
else:
		preco = "Dados invalidos"

print("Valor total: ",round(preco, 2))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    x = (consumo + "kWh")
TypeError: unsupported operand type(s) for +: 'float' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:25:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")

x = (consumo, "kWh")
y = ("tipo", tipo)

print("Entradas:", x, ",", y)

if(tipo == "R"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = faixa*0.60
elif(tipo == "C"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
else:
		preco = "Dados invalidos"

print("Valor total: ",round(preco, 2))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 37, in <module>
    print("Valor total: ",round(preco, 2))	
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:27:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")

x = consumo + "kWh"
y = "tipo" + tipo

print("Entradas:", x, ",", y)

if(tipo == "R"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = faixa*0.60
elif(tipo == "C"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
else:
		preco = "Dados invalidos"

print("Valor total: ",round(preco, 2))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    x = consumo + "kWh"
TypeError: unsupported operand type(s) for +: 'float' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:28:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")

x = (consumo + "kWh")
y = ("tipo" + tipo)

print("Entradas:", x, ",", y)

if(tipo == "R"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = faixa*0.60
elif(tipo == "C"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
else:
		preco = "Dados invalidos"

print("Valor total: ",round(preco, 2))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    x = (consumo + "kWh")
TypeError: unsupported operand type(s) for +: 'float' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:34:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")

x = consumo , "kWh"
y = "tipo", tipo

print("Entradas:", x, ",", y)

if(tipo == "R"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = faixa*0.60
elif(tipo == "C"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
else:
		preco = "Dados invalidos"

print("Valor total: ",round(preco, 2))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 37, in <module>
    print("Valor total: ",round(preco, 2))	
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:35:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")

x = consumo , "kWh"
y = "tipo", tipo

print("Entradas:", x,"kWh" ",", y)

if(tipo == "R"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = faixa*0.60
elif(tipo == "C"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
else:
		preco = "Dados invalidos"

print("Valor total: ",round(preco, 2))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 37, in <module>
    print("Valor total: ",round(preco, 2))	
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:36:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh" ",", "tipo", tipo)

if(tipo == "R"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = faixa*0.60
elif(tipo == "C"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
else:
		preco = "Dados invalidos"

print("Valor total: ",round(preco, 2))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 35, in <module>
    print("Valor total: ",round(preco, 2))	
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:37:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh" ",", "tipo", tipo)

if(tipo == "R"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = faixa*0.60
elif(tipo == "C"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
else:
		preco = "Dados invalidos"

print("Valor total: ",round("R$", preco, 2))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 35, in <module>
    print("Valor total: ",round("R$", preco, 2))	
TypeError: round() takes at most 2 arguments (3 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:37:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh" ",", "tipo", tipo)

if(tipo == "R"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = faixa*0.60
elif(tipo == "C"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
else:
		preco = "Dados invalidos"

print("Valor total: R$ ",round(preco, 2))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 35, in <module>
    print("Valor total: R$ ",round(preco, 2))	
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:38:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh" ",", "tipo", tipo)

if(tipo == "R"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = faixa*0.60
elif(tipo == "C"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
else:
		preco = "Dados invalidos"

print("Valor total: R$ ",round(preco, 2))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 35, in <module>
    print("Valor total: R$ ",round(preco, 2))	
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 12:38:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh" ",", "tipo", tipo)

if(tipo == "R"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = faixa*0.60
elif(tipo == "C"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
else:
		preco = "Dados invalidos"

print("Valor total: R$ ",round(preco, 2))	
-- EXECUTION TIME:
0.181339
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1101/main.py", line 35, in <module>
    print("Valor total: R$ ",round(preco, 2))	
TypeError: type str doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:38:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh" ",", "tipo", tipo)

if(tipo == "R"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = faixa*0.60
elif(tipo == "C"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
else:
		preco = "Dados invalidos"

print("Valor total: R$ ",round(preco, 2))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 35, in <module>
    print("Valor total: R$ ",round(preco, 2))	
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:39:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh" "," and , "tipo", tipo)

if(tipo == "R"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = faixa*0.60
elif(tipo == "C"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
else:
		preco = "Dados invalidos"

print("Valor total: R$ ",round(preco, 2))	
-- ERROR:
File "XXXX", line 9
    print("Entradas:", consumo,"kWh" "," and , "tipo", tipo)
                                             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:39:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh" ",", "e tipo", tipo)

if(tipo == "R"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = faixa*0.60
elif(tipo == "C"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
else:
		preco = "Dados invalidos"

print("Valor total: R$ ",round(preco, 2))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 35, in <module>
    print("Valor total: R$ ",round(preco, 2))	
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 12:40:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh" ",", "e tipo", tipo)

if(tipo == "R"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = faixa*0.60
elif(tipo == "C"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
else:
		preco = "Dados invalidos"

print("Valor total: R$ ",round(preco, 2))	
-- EXECUTION TIME:
0.163759
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1101/main.py", line 35, in <module>
    print("Valor total: R$ ",round(preco, 2))	
TypeError: type str doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:40:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh" ",", "e tipo", tipo)

if(tipo == "R"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = faixa*0.60
elif(tipo == "C"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
else:
		preco = "Dados invalidos"

print("Valor total: R$ ",round(preco, 2))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 35, in <module>
    print("Valor total: R$ ",round(preco, 2))	
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:41:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = faixa*0.60
elif(tipo == "C"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
else:
		preco = "Dados invalidos"

print("Valor total: R$ ",round(preco, 2))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 35, in <module>
    print("Valor total: R$ ",round(preco, 2))	
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 12:41:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = faixa*0.60
elif(tipo == "C"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
else:
		preco = "Dados invalidos"

print("Valor total: R$ ",round(preco, 2))	
-- EXECUTION TIME:
0.306393
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1101/main.py", line 35, in <module>
    print("Valor total: R$ ",round(preco, 2))	
TypeError: type str doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:41:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = faixa*0.60
elif(tipo == "C"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
else:
		preco = "Dados invalidos"

print("Valor total: R$ ",round(preco, 2))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 35, in <module>
    print("Valor total: R$ ",round(preco, 2))	
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:45:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
else:
		preco = "Dados invalidos"

print("Valor total: R$ ",round(preco, 2))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 35, in <module>
    print("Valor total: R$ ",round(preco, 2))	
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 12:45:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo <0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
else:
		preco = "Dados invalidos"

print("Valor total: R$ ",round(preco, 2))	
-- EXECUTION TIME:
0.135306
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1101/main.py", line 35, in <module>
    print("Valor total: R$ ",round(preco, 2))	
TypeError: type str doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:47:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo <= 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo <= 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo <= 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
else:
		preco = "Dados invalidos"

print("Valor total: R$ ",round(preco, 2))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 35, in <module>
    print("Valor total: R$ ",round(preco, 2))	
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 12:48:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo <= 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo <= 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo <= 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
else:
		preco = "Dados invalidos"

print("Valor total: R$ ",round(preco, 2))	
-- EXECUTION TIME:
0.14225
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1101/main.py", line 35, in <module>
    print("Valor total: R$ ",round(preco, 2))	
TypeError: type str doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:48:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo <= 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo <= 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo <= 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
else:
		preco = "Dados invalidos"

print("Valor total: R$",round(preco, 2))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 35, in <module>
    print("Valor total: R$",round(preco, 2))	
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 12:48:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo <= 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo <= 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo <= 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
else:
		preco = "Dados invalidos"

print("Valor total: R$",round(preco, 2))	
-- EXECUTION TIME:
0.219781
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1101/main.py", line 35, in <module>
    print("Valor total: R$",round(preco, 2))	
TypeError: type str doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 12:49:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
else:
		preco = "Dados invalidos"

print("Valor total: R$",round(preco, 2))	
-- EXECUTION TIME:
0.147895
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1101/main.py", line 35, in <module>
    print("Valor total: R$",round(preco, 2))	
TypeError: type str doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:50:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
else:
		preco = "Dados invalidos"

print("Valor total: R$", preco)	
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 12:51:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
else:
		preco = "Dados invalidos"

print("Valor total: R$", preco)	
-- EXECUTION TIME:
0.154259
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:51:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
else:
		preco = "Dados invalidos"

print("Valor total: R$", preco)	
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:53:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
else:
		preco = "Dados invalidos"

print("Valor total: R$", preco)	
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:55:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
print("Valor total: R$", preco)	

else:
		preco = "Dados invalidos"


-- ERROR:
File "XXXX", line 34
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:56:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"
		
print("Valor total: R$", preco)	



-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:57:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"
		
print("Valor total: R$", preco)
print("Dados invalidos")



-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:59:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = "Valor total: R$", consumo*0.60

else:
		preco = "Dados invalidos"
		
print(preco)



-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:00:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = "Valor total: R$" + consumo*0.60

else:
		preco = "Dados invalidos"
		
print(preco)



-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:00:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = "Valor total: R$", consumo*0.60

else:
		preco = "Dados invalidos"
		
print(preco)



-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:01:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = "Valor total: R$", (consumo*0.60)

else:
		preco = "Dados invalidos"
		
print(preco)



-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:01:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = "Valor total: R$", (consumo*0.60)

else:
		preco = "Dados invalidos"

print(preco)



-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:02:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = ("Valor total: R$", consumo*0.60)

else:
		preco = "Dados invalidos"

print(preco)



-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:02:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = ("Valor total: R$", consumo*0.60)

else:
		preco = "Dados invalidos"

print(preco)



-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:03:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = ("Valor total: R$", consumo*0.60)

else:
		preco = "Dados invalidos"

print(preco)



-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:05:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = "Valor total: R$", consumo*0.60

else:
		preco = "Dados invalidos"

print(preco)



-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:06:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
print("Valor total: R$", preco)

else:
		preco = "Dados invalidos"

print(preco)



-- ERROR:
File "XXXX", line 34
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:09:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
print("Valor total: R$", preco)

elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print(preco)



-- ERROR:
File "XXXX", line 20
    elif(tipo == "I"):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:09:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
print("Valor total: R$", preco)
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print(preco)



-- ERROR:
File "XXXX", line 19
    elif(tipo == "I"):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:18:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
print(preco)
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print(preco)



-- ERROR:
File "XXXX", line 15
    elif(consumo <= 500):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:18:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print(preco)



-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:18:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print(preco)



-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:19:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = "Valor total:R$" consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print(preco)



-- ERROR:
File "XXXX", line 15
    preco = "Valor total:R$" consumo*0.40
                                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:20:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = "Valor total:R$", consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print(preco)



-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:20:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = "Valor total:R$", consumo*0.40
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print(preco)



-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:21:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = ("Valor total:R$", consumo*0.40)
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print(preco)



-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:21:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = ("Valor total:R$", (consumo*0.40))
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print(preco)



-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:21:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = ("Valor total:R$", (consumo*0.40))
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print(preco)



-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:24:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		x = consumo*0.40
		preco = ("Valor total:R$", x)
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print(preco)



-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:25:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		x = consumo*0.40
		preco = "Valor total:R$", x
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print(preco)



-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:27:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0,44
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print("Valor total: R$",preco)
print(preco)



-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:28:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0,44
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print("Valor total: R$", preco)




-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:29:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0,44
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print("Valor total: R$", preco)




-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:29:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0,44
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print("Valor total: R$", preco)




-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:30:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0,44
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print("Valor total: R$", preco) or print("Dados invalidos")




-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:32:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0,44
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = "Valor total: R$ consumo*0.55"
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print(preco)




-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:32:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0,44
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = "Valor total: R$ consumo*0.55"
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print(preco)




-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:32:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0,44
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = "Valor total: R$ consumo*0.55"
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print(preco)




-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 13:33:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0,44
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = "Valor total: R$ consumo*0.55"
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print(preco)




-- EXECUTION TIME:
0.201361
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:33:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0,44
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = "Valor total: R$ consumo*0.55"
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print(preco)




-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:34:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0,44
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = "Valor total: R$" , consumo*0.55
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print(preco)




-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:34:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0,44
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = "Valor total: R$" + consumo*0.55
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print(preco)




-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:36:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0,44
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = "Valor total:", "R$", consumo*0.55
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print(preco)




-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:36:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0,44
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = "Valor total:"  +"R$" + (consumo*0.55)
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print(preco)




-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:37:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0,44
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		x = consumo*0.55
		preco = "Valor total:"  +"R$" + x
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print(preco)




-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:37:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0,44
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		x = consumo*0.55
		preco = "Valor total:", "R$",  x
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print(preco)




-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:38:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0,44
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		x = consumo*0.55
		preco = "Valor total: R$", x
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print(preco)




-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:38:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0,44
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		x = consumo*0.55
		preco = Valor total: R$, x
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print(preco)




-- ERROR:
File "XXXX", line 30
    preco = Valor total: R$, x
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:40:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0,44
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print("Valor total:R$",preco or preco)




-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total:R$ Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:40:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0,44
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print("Valor total:R$",preco or preco)




-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total:R$ Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:41:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0,44
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print("Valor total:R$",preco)
	print(preco)




-- ERROR:
File "XXXX", line 37
    print(preco)
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:43:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0,44
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print("Valor total:R$",preco or "Dados invalidos")
print(preco)




-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total:R$ Dados invalidos
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:45:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0,44
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = input("Valor total:R$", consumo*0.55)
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print(preco)




-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:47:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0,44
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		x = consumo*0.55
		preco = float(input("Valor total:R$",x)
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print(preco)




-- ERROR:
File "XXXX", line 24
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:47:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 500):
		preco = consumo*0,44
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		x = consumo*0.55
		preco = ("Valor total:R$",x)
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print(preco)




-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:55:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		print("Dados invalidos")
	elif(consumo <= 500):
		preco = consumo*0,44
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print(preco)




-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:56:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		print("Dados invalidos")
	elif(consumo <= 500):
		preco = consumo*0,44
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print(preco)




-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:57:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		print("Dados invalidos")
	elif(consumo <= 500):
		preco = consumo*0,44
	else:
		preco = consumo*0.65
		print(preco)
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"





-- OUTPUT:
Entradas: -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:58:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		print("Dados invalidos")
	elif(consumo <= 500):
		preco = consumo*0,44
	else:
		preco = consumo*0.65
		print(preco)
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"





-- OUTPUT:
Entradas: -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:59:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		print("Dados invalidos")
	elif(consumo <= 500):
		preco = consumo*0,44
	else:
		preco = consumo*0.65
		print(preco)
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"





-- OUTPUT:
Entradas: -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 13:59:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		print("Dados invalidos")
	elif(consumo <= 500):
		preco = consumo*0,44
	else:
		preco = consumo*0.65
print(preco)
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"





-- ERROR:
File "XXXX", line 19
    elif(tipo == "I"):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 14:00:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		print("Dados invalidos")
	elif(consumo <= 500):
		preco = consumo*0,44
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print(preco)




-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 14:01:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		print("Dados invalidos")
	elif(consumo <= 500):
		preco = consumo*0.44
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print(preco)




-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 14:02:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		print("Dados invalidos")
	elif(consumo <= 500):
		preco = consumo*0.44
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print("Valor total: R$", preco)




-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 14:02:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		print("Dados invalidos")
	elif(consumo <= 500):
		preco = consumo*0.44
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print("Valor total: R$", preco)




-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 14:03:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
		print(preco)
	elif(consumo <= 500):
		preco = consumo*0.44
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print("Valor total: R$", preco)




-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 14:03:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		preco = "Dados invalidos"
		print(preco)
	elif(consumo <= 500):
		preco = consumo*0.44
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print("Valor total: R$", preco)




-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 14:05:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		print("Dados invalidos")
	elif(consumo <= 500):
		preco = consumo*0.44
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print("Valor total: R$", preco)




-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 14:06:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
print("Dados invalidos")
	elif(consumo <= 500):
		preco = consumo*0.44
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print(preco)




-- ERROR:
File "XXXX", line 13
    print("Dados invalidos")
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 14:07:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
	print("Dados invalidos")
	elif(consumo <= 500):
		preco = consumo*0.44
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print(preco)




-- ERROR:
File "XXXX", line 13
    print("Dados invalidos")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 14:07:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Faixa de Consumo: "))
tipo = input("Tipo de Instalacao: ")


print("Entradas:", consumo,"kWh", "e tipo", tipo)

if(tipo == "R"):
	if(consumo < 0):
		print("Dados invalidos")
	elif(consumo <= 500):
		preco = consumo*0.44
	else:
		preco = consumo*0.65
elif(tipo == "I"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <= 1000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60
elif(tipo == "C"):
	if(consumo < 0):
		preco = "Dados invalidos"
	elif(consumo <=5000):
		preco = consumo*0.55
	else:
		preco = consumo*0.60

else:
		preco = "Dados invalidos"

print(preco)




-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
