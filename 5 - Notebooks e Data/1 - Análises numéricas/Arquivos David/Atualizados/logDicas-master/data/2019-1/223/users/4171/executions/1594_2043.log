== TEST (2019-03-19 16:10:02) 
-- CODE:
nota1 = 10
nota2 = 8.3
nota3 = 8.9
nota4 = 7.2

notatotal = (nota1 * 1) + (nota2 * 2) + (nota3 * 3) + (nota4 * 4)

-- OUTPUT:
25.666667
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:10:12) 
-- CODE:
nota1 = 10
nota2 = 8.3
nota3 = 8.9
nota4 = 7.2

print("notatotal = (nota1 * 1) + (nota2 * 2) + (nota3 * 3) + (nota4 * 4)")

-- OUTPUT:
notatotal = (nota1 * 1) + (nota2 * 2) + (nota3 * 3) + (nota4 * 4)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:10:30) 
-- CODE:
nota1 = 10
nota2 = 8.3
nota3 = 8.9
nota4 = 7.2

notatotal = (nota1 * 1) + (nota2 * 2) + (nota3 * 3) + (nota4 * 4)
print("notatotal")
-- OUTPUT:
notatotal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:10:36) 
-- CODE:
nota1 = 10
nota2 = 8.3
nota3 = 8.9
nota4 = 7.2

notatotal = (nota1 * 1) + (nota2 * 2) + (nota3 * 3) + (nota4 * 4)
print(notatotal)
-- OUTPUT:
82.10000000000001
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:12:27) 
-- CODE:
nota1 = 10
nota2 = 8.3
nota3 = 8.9
nota4 = 7.2

notatotal = (nota1 * 1) + (nota2 * 2) + (nota3 * 3) + (nota4 * 4)
pesodasnotas = (1 + 2 + 3 + 4)
notafinal = (notatotal/pesodasnotas)
print(notafinal)

-- OUTPUT:
8.21
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:12:48) 
-- CODE:
nota1 = 10
nota2 = 8.3
nota3 = 8.9
nota4 = 7.2

notatotal = (nota1 * 1) + (nota2 * 2) + (nota3 * 3) + (nota4 * 4)
pesodasnotas = (1 + 2 + 3 + 4)
x = (notatotal/pesodasnotas)
print(x, 2)

-- OUTPUT:
8.21 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:12:58) 
-- CODE:
nota1 = 10
nota2 = 8.3
nota3 = 8.9
nota4 = 7.2

notatotal = (nota1 * 1) + (nota2 * 2) + (nota3 * 3) + (nota4 * 4)
pesodasnotas = (1 + 2 + 3 + 4)
x = (notatotal/pesodasnotas)
print(round(x, 2)

-- ERROR:
File "XXXX", line 10
    
                     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:13:00) 
-- CODE:
nota1 = 10
nota2 = 8.3
nota3 = 8.9
nota4 = 7.2

notatotal = (nota1 * 1) + (nota2 * 2) + (nota3 * 3) + (nota4 * 4)
pesodasnotas = (1 + 2 + 3 + 4)
x = (notatotal/pesodasnotas)
print(round(x, 2))

-- OUTPUT:
8.21
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-19 16:13:06) 
-- CODE:
nota1 = 10
nota2 = 8.3
nota3 = 8.9
nota4 = 7.2

notatotal = (nota1 * 1) + (nota2 * 2) + (nota3 * 3) + (nota4 * 4)
pesodasnotas = (1 + 2 + 3 + 4)
x = (notatotal/pesodasnotas)
print(round(x, 2))

-- EXECUTION TIME:
0.144488
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
8.21
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
8.21
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
8.21
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-19 16:13:47) 
-- CODE:
nota1 = 10
nota2 = 8.3
nota3 = 8.9
nota4 = 7.2

notatotal = (nota1 * 1) + (nota2 * 2) + (nota3 * 3) + (nota4 * 4)
pesodasnotas = (1 + 2 + 3 + 4)
x = (notatotal/pesodasnotas)

print(round(x, 2))

-- EXECUTION TIME:
0.195676
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
8.21
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
8.21
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
8.21
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:13:48) 
-- CODE:
nota1 = 10
nota2 = 8.3
nota3 = 8.9
nota4 = 7.2

notatotal = (nota1 * 1) + (nota2 * 2) + (nota3 * 3) + (nota4 * 4)
pesodasnotas = (1 + 2 + 3 + 4)
x = (notatotal/pesodasnotas)

print(round(x, 2))

-- OUTPUT:
8.21
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-19 16:14:40) 
-- CODE:
nota1 = 10
nota2 = 8
nota3 = 8
nota4 = 7

notatotal = (nota1 * 1) + (nota2 * 2) + (nota3 * 3) + (nota4 * 4)
pesodasnotas = (1 + 2 + 3 + 4)
x = (notatotal/pesodasnotas)

print(round(x, 2))

-- EXECUTION TIME:
0.12385
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
7.8
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
7.8
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
7.8
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:14:41) 
-- CODE:
nota1 = 10
nota2 = 8
nota3 = 8
nota4 = 7

notatotal = (nota1 * 1) + (nota2 * 2) + (nota3 * 3) + (nota4 * 4)
pesodasnotas = (1 + 2 + 3 + 4)
x = (notatotal/pesodasnotas)

print(round(x, 2))

-- OUTPUT:
7.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:19:45) 
-- CODE:
nota1 = 10
nota2 = 8
nota3 = 8
nota4 = 7

notatotal = (nota1 * 1) + (nota2 * 2) + (nota3 * 3) + (nota4 * 4)
pesodasnotas = (1 + 2 + 3 + 4)
x = (notatotal/pesodasnotas)

print(x)

-- OUTPUT:
7.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:21:18) 
-- CODE:
nota1 = 10
nota2 = 8
nota3 = 8
nota4 = 7

notatotal = (nota1 * 1) + (nota2 * 2) + (nota3 * 3) + (nota4 * 4)
pesodasnotas = (1 + 2 + 3 + 4)
x = (notatotal/pesodasnotas)

print(round(x , 2))
print(class(x))

-- ERROR:
File "XXXX", line 11
    print(class(x))
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:21:27) 
-- CODE:
nota1 = 10
nota2 = 8
nota3 = 8
nota4 = 7

notatotal = (nota1 * 1) + (nota2 * 2) + (nota3 * 3) + (nota4 * 4)
pesodasnotas = (1 + 2 + 3 + 4)
x = (notatotal/pesodasnotas)

print(round(x , 2))
class(x)

-- ERROR:
File "XXXX", line 11
    class(x)
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:21:30) 
-- CODE:
nota1 = 10
nota2 = 8
nota3 = 8
nota4 = 7

notatotal = (nota1 * 1) + (nota2 * 2) + (nota3 * 3) + (nota4 * 4)
pesodasnotas = (1 + 2 + 3 + 4)
x = (notatotal/pesodasnotas)

print(round(x , 2))

-- OUTPUT:
7.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:24:20) 
-- CODE:
nota1 = 10
nota2 = 8
nota3 = 8
nota4 = 7

notatotal = (nota1 * 1) + (nota2 * 2) + (nota3 * 3) + (nota4 * 4)
pesodasnotas = (1 + 2 + 3 + 4)
x = int(notatotal/pesodasnotas)

print(round(x , 2))

-- OUTPUT:
7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:26:26) 
-- CODE:
n1 = int(input("nota1")
n2 = int(input("nota2")
n3 = int(input("nota3")
n4 = int(input("nota4")

notatotal = (nota1 * 1) + (nota2 * 2) + (nota3 * 3) + (nota4 * 4)
pesodasnotas = (1 + 2 + 3 + 4)
x = (notatotal/pesodasnotas)

print(round(x , 2))

-- ERROR:
File "XXXX", line 2
    n2 = int(input()
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:27:04) 
-- CODE:
n1 = int(input("nota1:"))
n2 = int(input("nota2:"))
n3 = int(input("nota3:"))
n4 = int(input("nota4:"))

notatotal = (nota1 * 1) + (nota2 * 2) + (nota3 * 3) + (nota4 * 4)
pesodasnotas = (1 + 2 + 3 + 4)
x = (notatotal/pesodasnotas)

print(round(x , 2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    n2 = int(input())
ValueError: invalid literal for int() with base 10: '8.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:27:17) 
-- CODE:
n1 = int(input("nota1:"))
n2 = int(input("nota2:"))
n3 = int(input("nota3:"))
n4 = int(input("nota4:"))

notatotal = (nota1 * 1) + (nota2 * 2) + (nota3 * 3) + (nota4 * 4)
pesodasnotas = (1 + 2 + 3 + 4)
x = (notatotal/pesodasnotas)

print(round(x , 2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    n2 = int(input())
ValueError: invalid literal for int() with base 10: '8.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:27:34) 
-- CODE:
n1 = int(input("nota1:"))
n2 = int(input("nota2:"))
n3 = int(input("nota3:"))
n4 = int(input("nota4:"))

notatotal = (n1 * 1) + (n2 * 2) + (n3 * 3) + (n4 * 4)
pesodasnotas = (1 + 2 + 3 + 4)
x = (notatotal/pesodasnotas)

print(round(x , 2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    n2 = int(input())
ValueError: invalid literal for int() with base 10: '8.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-19 16:28:12) 
-- CODE:
n1 = int(input("nota1:"))
n2 = int(input("nota2:"))
n3 = int(input("nota3:"))
n4 = int(input("nota4:"))

notatotal = (n1 * 1) + (n2 * 2) + (n3 * 3) + (n4 * 4)
pesodasnotas = (1 + 2 + 3 + 4)
x = (notatotal/pesodasnotas)

print(round(x , 2))

-- EXECUTION TIME:
0.204786
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1594/2043/main.py", line 2, in <module>
    n2 = int(input())
ValueError: invalid literal for int() with base 10: '8.5'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:28:16) 
-- CODE:
n1 = int(input("nota1:"))
n2 = int(input("nota2:"))
n3 = int(input("nota3:"))
n4 = int(input("nota4:"))

notatotal = (n1 * 1) + (n2 * 2) + (n3 * 3) + (n4 * 4)
pesodasnotas = (1 + 2 + 3 + 4)
x = (notatotal/pesodasnotas)

print(round(x , 2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    n2 = int(input())
ValueError: invalid literal for int() with base 10: '8.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:32:35) 
-- CODE:
n1 = int(input("nota1:"))
n2 = int(input("nota2:"))
n3 = int(input("nota3:"))
n4 = int(input("nota4:"))

pesonota1 = 1
pesonota2 = 2
pesonota3 = 3
pesonota4 = 4


notatotal = (n1 * pesonota1) + (n2 * pesonota2) + (n3 * pesonota3) + (n4 * pesonota4)
pesodasnotas = (pesonota1 + pesonota2 + pesonota3 + pesonota4)

x = (notatotal/pesodasnotas)

print(round(x , 2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    n2 = int(input())
ValueError: invalid literal for int() with base 10: '8.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:33:26) 
-- CODE:
n1 = int(input("nota1:"))
n2 = int(input("nota2:"))
n3 = int(input("nota3:"))
n4 = int(input("nota4:"))

pesonota1 = 1
pesonota2 = 2
pesonota3 = 3
pesonota4 = 4


notatotal = (n1 * pesonota1) + (n2 * pesonota2) + (n3 * pesonota3) + (n4 * pesonota4)
pesodasnotas = (pesonota1 + pesonota2 + pesonota3 + pesonota4)

x = (notatotal/pesodasnotas)

print(round(x , 2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    n2 = int(input())
ValueError: invalid literal for int() with base 10: '8.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:37:08) 
-- CODE:
n1 = float(input("nota1:"))
n2 = int(input("nota2:"))
n3 = int(input("nota3:"))
n4 = int(input("nota4:"))

pesonota1 = 1
pesonota2 = 2
pesonota3 = 3
pesonota4 = 4

notatotal = (n1 * pesonota1) + (n2 * pesonota2) + (n3 * pesonota3) + (n4 * pesonota4)
pesodasnotas = (pesonota1 + pesonota2 + pesonota3 + pesonota4)

x = (notatotal/pesodasnotas)

print(round(x , 2))



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    n2 = int(input())
ValueError: invalid literal for int() with base 10: '8.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:37:14) 
-- CODE:
n1 = float(input("nota1:"))
n2 = int(input("nota2:"))
n3 = int(input("nota3:"))
n4 = int(input("nota4:"))

pesonota1 = 1
pesonota2 = 2
pesonota3 = 3
pesonota4 = 4

notatotal = (n1 * pesonota1) + (n2 * pesonota2) + (n3 * pesonota3) + (n4 * pesonota4)
pesodasnotas = (pesonota1 + pesonota2 + pesonota3 + pesonota4)

x = (notatotal/pesodasnotas)

print(round(x , 2))



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    n2 = int(input())
ValueError: invalid literal for int() with base 10: '8.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:37:16) 
-- CODE:
n1 = float(input("nota1:"))
n2 = int(input("nota2:"))
n3 = int(input("nota3:"))
n4 = int(input("nota4:"))

pesonota1 = 1
pesonota2 = 2
pesonota3 = 3
pesonota4 = 4

notatotal = (n1 * pesonota1) + (n2 * pesonota2) + (n3 * pesonota3) + (n4 * pesonota4)
pesodasnotas = (pesonota1 + pesonota2 + pesonota3 + pesonota4)

x = (notatotal/pesodasnotas)

print(round(x , 2))



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    n2 = int(input())
ValueError: invalid literal for int() with base 10: '8.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:39:51) 
-- CODE:
n1 = int(input("nota1:"))
n2 = int(input("nota2:"))
n3 = int(input("nota3:"))
n4 = int(input("nota4:"))

pesonota1 = 1
pesonota2 = 2
pesonota3 = 3
pesonota4 = 4

notatotal = (n1 * pesonota1) + (n2 * pesonota2) + (n3 * pesonota3) + (n4 * pesonota4)
pesodasnotas = (pesonota1 + pesonota2 + pesonota3 + pesonota4)

x = (notatotal/pesodasnotas)
class 4
print(round(x , 2))



-- ERROR:
File "XXXX", line 15
    class 4
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-19 16:40:03) 
-- CODE:
n1 = int(input("nota1:"))
n2 = int(input("nota2:"))
n3 = int(input("nota3:"))
n4 = int(input("nota4:"))

pesonota1 = 1
pesonota2 = 2
pesonota3 = 3
pesonota4 = 4

notatotal = (n1 * pesonota1) + (n2 * pesonota2) + (n3 * pesonota3) + (n4 * pesonota4)
pesodasnotas = (pesonota1 + pesonota2 + pesonota3 + pesonota4)

x = (notatotal/pesodasnotas)

print(round(x , 2))

class x



-- EXECUTION TIME:
0.185991
-- ERROR:
  File "/home/codebench/codes/1594/2043/main.py", line 18
    class x
          ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:40:08) 
-- CODE:
n1 = int(input("nota1:"))
n2 = int(input("nota2:"))
n3 = int(input("nota3:"))
n4 = int(input("nota4:"))

pesonota1 = 1
pesonota2 = 2
pesonota3 = 3
pesonota4 = 4

notatotal = (n1 * pesonota1) + (n2 * pesonota2) + (n3 * pesonota3) + (n4 * pesonota4)
pesodasnotas = (pesonota1 + pesonota2 + pesonota3 + pesonota4)

x = (notatotal/pesodasnotas)

print(round(x , 2))
class x




-- ERROR:
File "XXXX", line 17
    class x
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 18:53:35) 
-- CODE:
n1 = int(input("nota1:"))
n2 = int(input("nota2:"))
n3 = int(input("nota3:"))
n4 = int(input("nota4:"))

pesonota1 = 1
pesonota2 = 2
pesonota3 = 3
pesonota4 = 4

notatotal = (n1 * pesonota1) + (n2 * pesonota2) + (n3 * pesonota3) + (n4 * pesonota4)
pesodasnotas = (pesonota1 + pesonota2 + pesonota3 + pesonota4)

x = (notatotal/pesodasnotas)

print(round(x , 2))





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    n2 = int(input())
ValueError: invalid literal for int() with base 10: '8.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 18:57:51) 
-- CODE:
n1 = int(input("nota1:"))
n2 = int(input("nota2:"))
n3 = int(input("nota3:"))
n4 = int(input("nota4:"))

pesonota1 = 1
pesonota2 = 2
pesonota3 = 3
pesonota4 = 4

notatotal = (n1 * pesonota1) + (n2 * pesonota2) + (n3 * pesonota3) + (n4 * pesonota4)
pesodasnotas = (pesonota1 + pesonota2 + pesonota3 + pesonota4)

x = (notatotal/pesodasnotas)

print(round(x , 2))
isinstance(x)




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    n2 = int(input())
ValueError: invalid literal for int() with base 10: '8.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 18:57:58) 
-- CODE:
n1 = int(input("nota1:"))
n2 = int(input("nota2:"))
n3 = int(input("nota3:"))
n4 = int(input("nota4:"))

pesonota1 = 1
pesonota2 = 2
pesonota3 = 3
pesonota4 = 4

notatotal = (n1 * pesonota1) + (n2 * pesonota2) + (n3 * pesonota3) + (n4 * pesonota4)
pesodasnotas = (pesonota1 + pesonota2 + pesonota3 + pesonota4)

x = (notatotal/pesodasnotas)

print(round(x , 2))
isinstance(x)




-- EXECUTION TIME:
0.138346
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1594/2043/main.py", line 2, in <module>
    n2 = int(input())
ValueError: invalid literal for int() with base 10: '8.5'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 18:58:04) 
-- CODE:
n1 = int(input("nota1:"))
n2 = int(input("nota2:"))
n3 = int(input("nota3:"))
n4 = int(input("nota4:"))

pesonota1 = 1
pesonota2 = 2
pesonota3 = 3
pesonota4 = 4

notatotal = (n1 * pesonota1) + (n2 * pesonota2) + (n3 * pesonota3) + (n4 * pesonota4)
pesodasnotas = (pesonota1 + pesonota2 + pesonota3 + pesonota4)

x = (notatotal/pesodasnotas)

print(round(x , 2))
isinstance(x, float)




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    n2 = int(input())
ValueError: invalid literal for int() with base 10: '8.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 18:58:05) 
-- CODE:
n1 = int(input("nota1:"))
n2 = int(input("nota2:"))
n3 = int(input("nota3:"))
n4 = int(input("nota4:"))

pesonota1 = 1
pesonota2 = 2
pesonota3 = 3
pesonota4 = 4

notatotal = (n1 * pesonota1) + (n2 * pesonota2) + (n3 * pesonota3) + (n4 * pesonota4)
pesodasnotas = (pesonota1 + pesonota2 + pesonota3 + pesonota4)

x = (notatotal/pesodasnotas)

print(round(x , 2))
isinstance(x, float)




-- EXECUTION TIME:
0.277998
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1594/2043/main.py", line 2, in <module>
    n2 = int(input())
ValueError: invalid literal for int() with base 10: '8.5'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 18:58:09) 
-- CODE:
n1 = int(input("nota1:"))
n2 = int(input("nota2:"))
n3 = int(input("nota3:"))
n4 = int(input("nota4:"))

pesonota1 = 1
pesonota2 = 2
pesonota3 = 3
pesonota4 = 4

notatotal = (n1 * pesonota1) + (n2 * pesonota2) + (n3 * pesonota3) + (n4 * pesonota4)
pesodasnotas = (pesonota1 + pesonota2 + pesonota3 + pesonota4)

x = (notatotal/pesodasnotas)

print(round(x , 2))
isinstance(x, int)




-- EXECUTION TIME:
0.115021
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1594/2043/main.py", line 2, in <module>
    n2 = int(input())
ValueError: invalid literal for int() with base 10: '8.5'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 18:58:10) 
-- CODE:
n1 = int(input("nota1:"))
n2 = int(input("nota2:"))
n3 = int(input("nota3:"))
n4 = int(input("nota4:"))

pesonota1 = 1
pesonota2 = 2
pesonota3 = 3
pesonota4 = 4

notatotal = (n1 * pesonota1) + (n2 * pesonota2) + (n3 * pesonota3) + (n4 * pesonota4)
pesodasnotas = (pesonota1 + pesonota2 + pesonota3 + pesonota4)

x = (notatotal/pesodasnotas)

print(round(x , 2))
isinstance(x, int)




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    n2 = int(input())
ValueError: invalid literal for int() with base 10: '8.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 18:58:19) 
-- CODE:
n1 = int(input("nota1:"))
n2 = int(input("nota2:"))
n3 = int(input("nota3:"))
n4 = int(input("nota4:"))

pesonota1 = 1
pesonota2 = 2
pesonota3 = 3
pesonota4 = 4

notatotal = (n1 * pesonota1) + (n2 * pesonota2) + (n3 * pesonota3) + (n4 * pesonota4)
pesodasnotas = (pesonota1 + pesonota2 + pesonota3 + pesonota4)

x = (notatotal/pesodasnotas)

print(round(x , 2))
isinstance(x, float)




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    n2 = int(input())
ValueError: invalid literal for int() with base 10: '8.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 19:06:38) 
-- CODE:
n1 = int(input("nota1:"))
n2 = int(input("nota2:"))
n3 = int(input("nota3:"))
n4 = int(input("nota4:"))

pesonota1 = 1
pesonota2 = 2
pesonota3 = 3
pesonota4 = 4

notatotal = (n1 * pesonota1) + (n2 * pesonota2) + (n3 * pesonota3) + (n4 * pesonota4)
pesodasnotas = (pesonota1 + pesonota2 + pesonota3 + pesonota4)

x = (notatotal/pesodasnotas)

print(round(x , 2))
x is




-- ERROR:
File "XXXX", line 17
    x is
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 19:06:47) 
-- CODE:
n1 = int(input("nota1:"))
n2 = int(input("nota2:"))
n3 = int(input("nota3:"))
n4 = int(input("nota4:"))

pesonota1 = 1
pesonota2 = 2
pesonota3 = 3
pesonota4 = 4

notatotal = (n1 * pesonota1) + (n2 * pesonota2) + (n3 * pesonota3) + (n4 * pesonota4)
pesodasnotas = (pesonota1 + pesonota2 + pesonota3 + pesonota4)

x = (notatotal/pesodasnotas)

print(round(x , 2))
x is float or int 




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    n2 = int(input())
ValueError: invalid literal for int() with base 10: '8.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 19:11:47) 
-- CODE:
n1 = int(input("nota1:"))
n2 = int(input("nota2:"))
n3 = int(input("nota3:"))
n4 = int(input("nota4:"))

pesonota1 = 1
pesonota2 = 2
pesonota3 = 3
pesonota4 = 4

notatotal = (n1 * pesonota1) + (n2 * pesonota2) + (n3 * pesonota3) + (n4 * pesonota4)
pesodasnotas = (pesonota1 + pesonota2 + pesonota3 + pesonota4)

x = (notatotal/pesodasnotas)

print(round(x , 2))
is x int or float




-- ERROR:
File "XXXX", line 17
    is x int or float
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 19:11:48) 
-- CODE:
n1 = int(input("nota1:"))
n2 = int(input("nota2:"))
n3 = int(input("nota3:"))
n4 = int(input("nota4:"))

pesonota1 = 1
pesonota2 = 2
pesonota3 = 3
pesonota4 = 4

notatotal = (n1 * pesonota1) + (n2 * pesonota2) + (n3 * pesonota3) + (n4 * pesonota4)
pesodasnotas = (pesonota1 + pesonota2 + pesonota3 + pesonota4)

x = (notatotal/pesodasnotas)

print(round(x , 2))
is x int or float




-- EXECUTION TIME:
0.161613
-- ERROR:
  File "/home/codebench/codes/1594/2043/main.py", line 17
    is x int or float
     ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 19:55:45) 
-- CODE:
n1 = int(input("nota1:"))
n2 = int(input("nota2:"))
n3 = int(input("nota3:"))
n4 = int(input("nota4:"))

pesonota1 = 1
pesonota2 = 2
pesonota3 = 3
pesonota4 = 4

notatotal = (n1 * pesonota1) + (n2 * pesonota2) + (n3 * pesonota3) + (n4 * pesonota4)
pesodasnotas = (pesonota1 + pesonota2 + pesonota3 + pesonota4)

x = (notatotal/pesodasnotas)

print(round(x , 2))





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    n2 = int(input())
ValueError: invalid literal for int() with base 10: '8.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 19:57:04) 
-- CODE:
n1 = int(input("nota1:"))
n2 = int(input("nota2:"))
n3 = int(input("nota3:"))
n4 = int(input("nota4:"))

pesonota1 = 1
pesonota2 = 2
pesonota3 = 3
pesonota4 = 4

notatotal = (n1 * pesonota1) + (n2 * pesonota2) + (n3 * pesonota3) + (n4 * pesonota4)
pesodasnotas = (pesonota1 + pesonota2 + pesonota3 + pesonota4)

x = (notatotal/pesodasnotas):
	if x > 6, print("Aprovado!")
	else print ("Reprovado")

print(round(x , 2))






-- ERROR:
File "XXXX", line 14
    x = (notatotal/pesodasnotas):
                                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 19:57:11) 
-- CODE:
n1 = int(input("nota1:"))
n2 = int(input("nota2:"))
n3 = int(input("nota3:"))
n4 = int(input("nota4:"))

pesonota1 = 1
pesonota2 = 2
pesonota3 = 3
pesonota4 = 4

notatotal = (n1 * pesonota1) + (n2 * pesonota2) + (n3 * pesonota3) + (n4 * pesonota4)
pesodasnotas = (pesonota1 + pesonota2 + pesonota3 + pesonota4)

x = (notatotal/pesodasnotas)
	if x > 6, print("Aprovado!")
	else print ("Reprovado")

print(round(x , 2))






-- ERROR:
File "XXXX", line 15
    if x > 6, print("Aprovado!")
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 19:57:21) 
-- CODE:
n1 = int(input("nota1:"))
n2 = int(input("nota2:"))
n3 = int(input("nota3:"))
n4 = int(input("nota4:"))

pesonota1 = 1
pesonota2 = 2
pesonota3 = 3
pesonota4 = 4

notatotal = (n1 * pesonota1) + (n2 * pesonota2) + (n3 * pesonota3) + (n4 * pesonota4)
pesodasnotas = (pesonota1 + pesonota2 + pesonota3 + pesonota4)

x = (notatotal/pesodasnotas);

	if x > 6, print("Aprovado!")
	else print ("Reprovado")

print(round(x , 2))






-- ERROR:
File "XXXX", line 16
    if x > 6, print("Aprovado!")
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 19:57:27) 
-- CODE:
n1 = int(input("nota1:"))
n2 = int(input("nota2:"))
n3 = int(input("nota3:"))
n4 = int(input("nota4:"))

pesonota1 = 1
pesonota2 = 2
pesonota3 = 3
pesonota4 = 4

notatotal = (n1 * pesonota1) + (n2 * pesonota2) + (n3 * pesonota3) + (n4 * pesonota4)
pesodasnotas = (pesonota1 + pesonota2 + pesonota3 + pesonota4)

x = (notatotal/pesodasnotas);

if x > 6, print("Aprovado!")
else print ("Reprovado")
print(round(x , 2))






-- ERROR:
File "XXXX", line 16
    if x > 6, print("Aprovado!")
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 19:57:36) 
-- CODE:
n1 = int(input("nota1:"))
n2 = int(input("nota2:"))
n3 = int(input("nota3:"))
n4 = int(input("nota4:"))

pesonota1 = 1
pesonota2 = 2
pesonota3 = 3
pesonota4 = 4

notatotal = (n1 * pesonota1) + (n2 * pesonota2) + (n3 * pesonota3) + (n4 * pesonota4)
pesodasnotas = (pesonota1 + pesonota2 + pesonota3 + pesonota4)

x = (notatotal/pesodasnotas)
if x > 6, print("Aprovado!")
else print ("Reprovado")

print(round(x , 2))






-- ERROR:
File "XXXX", line 15
    if x > 6, print("Aprovado!")
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 19:57:57) 
-- CODE:
n1 = int(input("nota1:"))
n2 = int(input("nota2:"))
n3 = int(input("nota3:"))
n4 = int(input("nota4:"))

pesonota1 = 1
pesonota2 = 2
pesonota3 = 3
pesonota4 = 4

notatotal = (n1 * pesonota1) + (n2 * pesonota2) + (n3 * pesonota3) + (n4 * pesonota4)
pesodasnotas = (pesonota1 + pesonota2 + pesonota3 + pesonota4)

x = (notatotal/pesodasnotas)

if x == 6, print("Aprovado!")
else print ("Reprovado")

print(round(x , 2))






-- ERROR:
File "XXXX", line 16
    if x == 6, print("Aprovado!")
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 19:58:14) 
-- CODE:
n1 = int(input("nota1:"))
n2 = int(input("nota2:"))
n3 = int(input("nota3:"))
n4 = int(input("nota4:"))

pesonota1 = 1
pesonota2 = 2
pesonota3 = 3
pesonota4 = 4

notatotal = (n1 * pesonota1) + (n2 * pesonota2) + (n3 * pesonota3) + (n4 * pesonota4)
pesodasnotas = (pesonota1 + pesonota2 + pesonota3 + pesonota4)

x = (notatotal/pesodasnotas)

if x == 6 print("Aprovado!")
else print ("Reprovado")

print(round(x , 2))






-- ERROR:
File "XXXX", line 16
    if x == 6 print("Aprovado!")
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 19:58:15) 
-- CODE:
n1 = int(input("nota1:"))
n2 = int(input("nota2:"))
n3 = int(input("nota3:"))
n4 = int(input("nota4:"))

pesonota1 = 1
pesonota2 = 2
pesonota3 = 3
pesonota4 = 4

notatotal = (n1 * pesonota1) + (n2 * pesonota2) + (n3 * pesonota3) + (n4 * pesonota4)
pesodasnotas = (pesonota1 + pesonota2 + pesonota3 + pesonota4)

x = (notatotal/pesodasnotas)

if x == 6 print("Aprovado!")
else print ("Reprovado")

print(round(x , 2))






-- ERROR:
File "XXXX", line 16
    if x == 6 print("Aprovado!")
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 19:58:47) 
-- CODE:
n1 = int(input("nota1:"))
n2 = int(input("nota2:"))
n3 = int(input("nota3:"))
n4 = int(input("nota4:"))

pesonota1 = 1
pesonota2 = 2
pesonota3 = 3
pesonota4 = 4

notatotal = (n1 * pesonota1) + (n2 * pesonota2) + (n3 * pesonota3) + (n4 * pesonota4)
pesodasnotas = (pesonota1 + pesonota2 + pesonota3 + pesonota4)

x = (notatotal/pesodasnotas)

print(round(x , 2))






-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    n2 = int(input())
ValueError: invalid literal for int() with base 10: '8.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 19:59:02) 
-- CODE:
n1 = int(input("nota1:"))
n2 = int(input("nota2:"))
n3 = int(input("nota3:"))
n4 = int(input("nota4:"))

pesonota1 = 1
pesonota2 = 2
pesonota3 = 3
pesonota4 = 4

notatotal = (n1 * pesonota1) + (n2 * pesonota2) + (n3 * pesonota3) + (n4 * pesonota4)
pesodasnotas = (pesonota1 + pesonota2 + pesonota3 + pesonota4)

x = (notatotal/pesodasnotas)

print(round(x , 2))
-- EXECUTION TIME:
0.191837
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1594/2043/main.py", line 2, in <module>
    n2 = int(input())
ValueError: invalid literal for int() with base 10: '8.5'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:21:16) 
-- CODE:
n1 = int(input("nota1:"))
n2 = int(input("nota2:"))
n3 = int(input("nota3:"))
n4 = int(input("nota4:"))

pesonota1 = 1
pesonota2 = 2
pesonota3 = 3
pesonota4 = 4

notatotal = (n1 * pesonota1) + (n2 * pesonota2) + (n3 * pesonota3) + (n4 * pesonota4)
pesodasnotas = (pesonota1 + pesonota2 + pesonota3 + pesonota4)

x = (notatotal/pesodasnotas)

print(round(x , 2))
type(x)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    n2 = int(input())
ValueError: invalid literal for int() with base 10: '8.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 16:21:27) 
-- CODE:
n1 = int(input("nota1:"))
n2 = int(input("nota2:"))
n3 = int(input("nota3:"))
n4 = int(input("nota4:"))

pesonota1 = 1
pesonota2 = 2
pesonota3 = 3
pesonota4 = 4

notatotal = (n1 * pesonota1) + (n2 * pesonota2) + (n3 * pesonota3) + (n4 * pesonota4)
pesodasnotas = (pesonota1 + pesonota2 + pesonota3 + pesonota4)

x = (notatotal/pesodasnotas)

print(round(x , 2))
type(x)
-- EXECUTION TIME:
0.154933
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1594/2043/main.py", line 2, in <module>
    n2 = int(input())
ValueError: invalid literal for int() with base 10: '8.5'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:21:34) 
-- CODE:
n1 = int(input("nota1:"))
n2 = int(input("nota2:"))
n3 = int(input("nota3:"))
n4 = int(input("nota4:"))

pesonota1 = 1
pesonota2 = 2
pesonota3 = 3
pesonota4 = 4

notatotal = (n1 * pesonota1) + (n2 * pesonota2) + (n3 * pesonota3) + (n4 * pesonota4)
pesodasnotas = (pesonota1 + pesonota2 + pesonota3 + pesonota4)

x = (notatotal/pesodasnotas)

print(round(x , 2))
type(x)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    n2 = int(input())
ValueError: invalid literal for int() with base 10: '8.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:21:50) 
-- CODE:
n1 = int(input("nota1:"))
n2 = int(input("nota2:"))
n3 = int(input("nota3:"))
n4 = int(input("nota4:"))

pesonota1 = 1
pesonota2 = 2
pesonota3 = 3
pesonota4 = 4

notatotal = (n1 * pesonota1) + (n2 * pesonota2) + (n3 * pesonota3) + (n4 * pesonota4)
pesodasnotas = (pesonota1 + pesonota2 + pesonota3 + pesonota4)

x = (notatotal/pesodasnotas)

print(round(x , 2))
print(type(x))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    n2 = int(input())
ValueError: invalid literal for int() with base 10: '8.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 13:53:27) 
-- CODE:
n1 = int(input("nota1:"))
n2 = int(input("nota2:"))
n3 = int(input("nota3:"))
n4 = int(input("nota4:"))

pesonota1 = 1
pesonota2 = 2
pesonota3 = 3
pesonota4 = 4

notatotal = (n1 * pesonota1) + (n2 * pesonota2) + (n3 * pesonota3) + (n4 * pesonota4)
pesodasnotas = (pesonota1 + pesonota2 + pesonota3 + pesonota4)

x = (notatotal//pesodasnotas)

print(round(x,2))
-- EXECUTION TIME:
0.254677
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1594/2043/main.py", line 2, in <module>
    n2 = int(input())
ValueError: invalid literal for int() with base 10: '8.5'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 13:53:31) 
-- CODE:
n1 = int(input("nota1:"))
n2 = int(input("nota2:"))
n3 = int(input("nota3:"))
n4 = int(input("nota4:"))

pesonota1 = 1
pesonota2 = 2
pesonota3 = 3
pesonota4 = 4

notatotal = (n1 * pesonota1) + (n2 * pesonota2) + (n3 * pesonota3) + (n4 * pesonota4)
pesodasnotas = (pesonota1 + pesonota2 + pesonota3 + pesonota4)

x = (notatotal%pesodasnotas)

print(round(x,2))
-- EXECUTION TIME:
0.248824
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1594/2043/main.py", line 2, in <module>
    n2 = int(input())
ValueError: invalid literal for int() with base 10: '8.5'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 13:53:35) 
-- CODE:
n1 = int(input("nota1:"))
n2 = int(input("nota2:"))
n3 = int(input("nota3:"))
n4 = int(input("nota4:"))

pesonota1 = 1
pesonota2 = 2
pesonota3 = 3
pesonota4 = 4

notatotal = (n1 * pesonota1) + (n2 * pesonota2) + (n3 * pesonota3) + (n4 * pesonota4)
pesodasnotas = (pesonota1 + pesonota2 + pesonota3 + pesonota4)

x = (notatotal/pesodasnotas)

print(round(x,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    n2 = int(input())
ValueError: invalid literal for int() with base 10: '8.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 13:53:43) 
-- CODE:
n1 = int(input("nota1:"))
n2 = int(input("nota2:"))
n3 = int(input("nota3:"))
n4 = int(input("nota4:"))

pesonota1 = 1
pesonota2 = 2
pesonota3 = 3
pesonota4 = 4

notatotal = (n1 * pesonota1) + (n2 * pesonota2) + (n3 * pesonota3) + (n4 * pesonota4)
pesodasnotas = (pesonota1 + pesonota2 + pesonota3 + pesonota4)

x = (notatotal/pesodasnotas)

print(round(x,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    n2 = int(input())
ValueError: invalid literal for int() with base 10: '8.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 13:53:52) 
-- CODE:
n1 = int(input("nota1:"))
n2 = int(input("nota2:"))
n3 = int(input("nota3:"))
n4 = int(input("nota4:"))

pesonota1 = 1
pesonota2 = 2
pesonota3 = 3
pesonota4 = 4

notatotal = (n1 * pesonota1) + (n2 * pesonota2) + (n3 * pesonota3) + (n4 * pesonota4)
pesodasnotas = (pesonota1 + pesonota2 + pesonota3 + pesonota4)

x = (notatotal/pesodasnotas)

print(round(x,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    n2 = int(input())
ValueError: invalid literal for int() with base 10: '8.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:02:01) 
-- CODE:
n1 = float(input("nota1:"))
n2 = float(input("nota2:"))
n3 = float(input("nota3:"))
n4 = float(input("nota4:"))

pesonota1 = 1
pesonota2 = 2
pesonota3 = 3
pesonota4 = 4

notatotal = (n1 * pesonota1) + (n2 * pesonota2) + (n3 * pesonota3) + (n4 * pesonota4)
pesodasnotas = (pesonota1 + pesonota2 + pesonota3 + pesonota4)

x = (notatotal/pesodasnotas)

print(round(x,2))
-- OUTPUT:
8.2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 16:02:03) 
-- CODE:
n1 = float(input("nota1:"))
n2 = float(input("nota2:"))
n3 = float(input("nota3:"))
n4 = float(input("nota4:"))

pesonota1 = 1
pesonota2 = 2
pesonota3 = 3
pesonota4 = 4

notatotal = (n1 * pesonota1) + (n2 * pesonota2) + (n3 * pesonota3) + (n4 * pesonota4)
pesodasnotas = (pesonota1 + pesonota2 + pesonota3 + pesonota4)

x = (notatotal/pesodasnotas)

print(round(x,2))
-- EXECUTION TIME:
0.155425
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
8.2
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
7.0
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
7.94
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
