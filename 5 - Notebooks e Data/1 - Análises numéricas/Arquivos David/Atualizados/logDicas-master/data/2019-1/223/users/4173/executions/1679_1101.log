== TEST (2019-04-30 17:41:22) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

if (a > 0) and (a =< 500) and (b == "R"):
	d = a*0.44 
elif (a > 500) and (a =<1000) and (b == "R"):
	d = a*0.65

print("Entradas:" ,a, "kWh", "e tipo" b)

-- ERROR:
File "XXXX", line 4
    if (a > 0) and (a =< 500) and (b == "R"):
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:41:44) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

if ((a > 0) and (a =< 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (a =<1000) and (b == "R")):
	d = a*0.65

print("Entradas:" ,a, "kWh", "e tipo" b)

-- ERROR:
File "XXXX", line 4
    if ((a > 0) and (a =< 500) and (b == "R")):
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:42:15) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

if ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (a <=1000) and (b == "R")):
	d = a*0.65

print("Entradas:" ,a, "kWh", "e tipo" b)

-- ERROR:
File "XXXX", line 9
    print("Entradas:" ,a, "kWh", "e tipo" b)
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:42:34) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

if ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (a <=1000) and (b == "R")):
	d = a*0.65

print("Entradas:" , a , "kWh", "e tipo" b)

-- ERROR:
File "XXXX", line 9
    print("Entradas:" , a , "kWh", "e tipo" b)
                                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:42:46) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

if ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (a <=1000) and (b == "R")):
	d = a*0.65

print("Entradas:" , a , "kWh" "e tipo" b)

-- ERROR:
File "XXXX", line 9
    print("Entradas:" , a , "kWh" "e tipo" b)
                                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:42:51) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

if ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (a <=1000) and (b == "R")):
	d = a*0.65

print("Entradas:"  a , "kWh" "e tipo" b)

-- ERROR:
File "XXXX", line 9
    print("Entradas:"  a , "kWh" "e tipo" b)
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:42:53) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

if ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (a <=1000) and (b == "R")):
	d = a*0.65

print("Entradas:"  a, "kWh" "e tipo" b)

-- ERROR:
File "XXXX", line 9
    print("Entradas:"  a, "kWh" "e tipo" b)
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:43:07) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

if ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (a <=1000) and (b == "R")):
	d = a*0.65

print("Entradas:"  a,b)

-- ERROR:
File "XXXX", line 9
    print("Entradas:"  a,b)
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:43:11) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

if ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (a <=1000) and (b == "R")):
	d = a*0.65

print("Entradas:"  a)

-- ERROR:
File "XXXX", line 9
    print("Entradas:"  a)
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:43:16) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

if ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (a <=1000) and (b == "R")):
	d = a*0.65

print("Entradas:" ,a)

-- OUTPUT:
Entradas: -56.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:43:55) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

if ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (a <=1000) and (b == "R")):
	d = a*0.65

print("Entradas:" ,a)
print("Valor total: R$" d)

-- ERROR:
File "XXXX", line 10
    print("Valor total: R$" d)
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:44:02) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

if ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (a <=1000) and (b == "R")):
	d = a*0.65

print("Entradas:" ,a)
print("Valor total: RS" d)

-- ERROR:
File "XXXX", line 10
    print("Valor total: RS" d)
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:44:16) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

if ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (a <=1000) and (b == "R")):
	d = a*0.65

print("Entradas:" ,a)
print("Valor total: R$" ,d)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print("Valor total: R$" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:44:42) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

if ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (a <=1000) and (b == "R")):
	d = a*0.65

print("Entradas:" ,a "kWh")
print("Valor total: R$" ,d)

-- ERROR:
File "XXXX", line 9
    print("Entradas:" ,a "kWh")
                             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:45:49) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

if ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (a <=1000) and (b == "R")):
	d = a*0.65

print("Entradas:" ,a str("KWh")
print("Valor total: R$" ,d)

-- ERROR:
File "XXXX", line 9
    print("Entradas:" ,a str("KWh")
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:45:52) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

if ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (a <=1000) and (b == "R")):
	d = a*0.65

print("Entradas:" ,a str("KWh")
print("Valor total: R$" ,d)

-- ERROR:
File "XXXX", line 9
    print("Entradas:" ,a str("KWh")
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:45:56) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

if ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (a <=1000) and (b == "R")):
	d = a*0.65

print("Entradas:" ,a str("KWh"))
print("Valor total: R$" ,d)

-- ERROR:
File "XXXX", line 9
    print("Entradas:" ,a str("KWh"))
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:46:03) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

if ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (a <=1000) and (b == "R")):
	d = a*0.65

print("Entradas:" ,a str(KWh))
print("Valor total: R$" ,d)

-- ERROR:
File "XXXX", line 9
    print("Entradas:" ,a str(KWh))
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:46:11) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

if ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (a <=1000) and (b == "R")):
	d = a*0.65

print("Entradas:" ,a)
print("Valor total: R$" ,d)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print("Valor total: R$" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:48:13) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

if ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (a <=1000) and (b == "R")):
	d = a*0.65

print("Entradas:", a)
print("Valor total: R$" ,d)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print("Valor total: R$" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:48:24) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

if ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (a <=1000) and (b == "R")):
	d = a*0.65

print("Entradas:", a , "kWh")
print("Valor total: R$" ,d)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print("Valor total: R$" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:49:04) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

if ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (a <=1000) and (b == "R")):
	d = a*0.65

print("Entradas:", a , "kWh e tipo", b)
print("Valor total: R$" ,d)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print("Valor total: R$" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:52:45) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

if ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (b == "R")):
	d = a*0.65
elif ((a > 0) and (a <= 1000) and (b == "C")):
	d = a*0.55
elif ((a > 1000) and (b == "C")):
	d = a*0.60
elif ((a > 0) and (a <=5000) and (b == "I")):
	d = a*0.55
elif ((a > 5000) and (b == "I")):
	d = a*0.60

print("Entradas:", a , "kWh e tipo", b)
print("Valor total: R$" ,d)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 18, in <module>
    print("Valor total: R$" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:52:55) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

if ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (b == "R")):
	d = a*0.65
elif ((a > 0) and (a <= 1000) and (b == "C")):
	d = a*0.55
elif ((a > 1000) and (b == "C")):
	d = a*0.60
elif ((a > 0) and (a <=5000) and (b == "I")):
	d = a*0.55
elif ((a > 5000) and (b == "I")):
	d = a*0.60

print("Entradas:", a , "kWh e tipo", b)
print("Valor total: R$" ,d)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 18, in <module>
    print("Valor total: R$" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:53:06) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

if ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (b == "R")):
	d = a*0.65
elif ((a > 0) and (a <= 1000) and (b == "C")):
	d = a*0.55
elif ((a > 1000) and (b == "C")):
	d = a*0.60
elif ((a > 0) and (a <=5000) and (b == "I")):
	d = a*0.55
elif ((a > 5000) and (b == "I")):
	d = a*0.60

print("Entradas:", a , "kWh e tipo", b)
print("Valor total: R$" ,d)

-- EXECUTION TIME:
0.130608
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1101/main.py", line 18, in <module>
    print("Valor total: R$" ,d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:55:00) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

if ((a < 0) and (b != "R" != "C" != "I")):
	d = "Dados invalidos"

	if ((a > 0) and (a <= 500) and (b == "R")):
		d = a*0.44 
	elif ((a > 500) and (b == "R")):
		d = a*0.65
	elif ((a > 0) and (a <= 1000) and (b == "C")):
		d = a*0.55
	elif ((a > 1000) and (b == "C")):
		d = a*0.60
	elif ((a > 0) and (a <=5000) and (b == "I")):
		d = a*0.55
	elif ((a > 5000) and (b == "I")):
		d = a*0.60

print("Entradas:", a , "kWh e tipo", b)
print("Valor total: R$" ,d)

-- EXECUTION TIME:
0.155197
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:55:07) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

if ((a < 0) and (b != "R" != "C" != "I")):
	d = "Dados invalidos"
	if ((a > 0) and (a <= 500) and (b == "R")):
		d = a*0.44 
	elif ((a > 500) and (b == "R")):
		d = a*0.65
	elif ((a > 0) and (a <= 1000) and (b == "C")):
		d = a*0.55
	elif ((a > 1000) and (b == "C")):
		d = a*0.60
	elif ((a > 0) and (a <=5000) and (b == "I")):
		d = a*0.55
	elif ((a > 5000) and (b == "I")):
		d = a*0.60

print("Entradas:", a , "kWh e tipo", b)
print("Valor total: R$" ,d)

-- EXECUTION TIME:
0.132063
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:55:08) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

if ((a < 0) and (b != "R" != "C" != "I")):
	d = "Dados invalidos"
	if ((a > 0) and (a <= 500) and (b == "R")):
		d = a*0.44 
	elif ((a > 500) and (b == "R")):
		d = a*0.65
	elif ((a > 0) and (a <= 1000) and (b == "C")):
		d = a*0.55
	elif ((a > 1000) and (b == "C")):
		d = a*0.60
	elif ((a > 0) and (a <=5000) and (b == "I")):
		d = a*0.55
	elif ((a > 5000) and (b == "I")):
		d = a*0.60

print("Entradas:", a , "kWh e tipo", b)
print("Valor total: R$" ,d)

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:56:59) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

if ((a < 0) and (b != "R" != "C" != "I")):
	d = "Dados invalidos"
	if ((a > 0) and (a <= 500) and (b == "R")):
		d = a*0.44 
	elif ((a > 500) and (b == "R")):
		d = a*0.65
	elif ((a > 0) and (a <= 1000) and (b == "C")):
		d = a*0.55
	elif ((a > 1000) and (b == "C")):
		d = a*0.60
	elif ((a > 0) and (a <=5000) and (b == "I")):
		d = a*0.55
	elif ((a > 5000) and (b == "I")):
		d = a*0.60

print("Entradas:", a , "kWh e tipo", b)
print("Valor total: R$" ,d)

-- EXECUTION TIME:
0.206977
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:00:40) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

if ((a < 0) and (b != "R" != "C" != "I")):
	d = "Dados invalidos"
	if ((a > 0) and (a <= 500) and (b == "R")):
		d = a*0.44 
	elif ((a > 500) and (b == "R")):
		d = a*0.65
	elif ((a > 0) and (a <= 1000) and (b == "C")):
		d = a*0.55
	elif ((a > 1000) and (b == "C")):
		d = a*0.60
	elif ((a > 0) and (a <=5000) and (b == "I")):
		d = a*0.55
	elif ((a > 5000) and (b == "I")):
		d = a*0.60

print("Entradas:", a , "kWh e tipo", b)
print("Valor total: R$" ,d)

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 18:01:12) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

if ((a < 0) and (b != "R" != "C" != "I")):
	d = "Dados invalidos"
elif ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (b == "R")):
	d = a*0.65
elif ((a > 0) and (a <= 1000) and (b == "C")):
	d = a*0.55
elif ((a > 1000) and (b == "C")):
	d = a*0.60
elif ((a > 0) and (a <=5000) and (b == "I")):
	d = a*0.55
elif ((a > 5000) and (b == "I")):
	d = a*0.60

print("Entradas:", a , "kWh e tipo", b)
print("Valor total: R$" ,d)

-- EXECUTION TIME:
0.195744
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:01:13) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

if ((a < 0) and (b != "R" != "C" != "I")):
	d = "Dados invalidos"
elif ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (b == "R")):
	d = a*0.65
elif ((a > 0) and (a <= 1000) and (b == "C")):
	d = a*0.55
elif ((a > 1000) and (b == "C")):
	d = a*0.60
elif ((a > 0) and (a <=5000) and (b == "I")):
	d = a*0.55
elif ((a > 5000) and (b == "I")):
	d = a*0.60

print("Entradas:", a , "kWh e tipo", b)
print("Valor total: R$" ,d)

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:01:22) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

if ((a < 0) or (b != "R" != "C" != "I")):
	d = "Dados invalidos"
elif ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (b == "R")):
	d = a*0.65
elif ((a > 0) and (a <= 1000) and (b == "C")):
	d = a*0.55
elif ((a > 1000) and (b == "C")):
	d = a*0.60
elif ((a > 0) and (a <=5000) and (b == "I")):
	d = a*0.55
elif ((a > 5000) and (b == "I")):
	d = a*0.60

print("Entradas:", a , "kWh e tipo", b)
print("Valor total: R$" ,d)

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 18:01:35) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

if ((a < 0) or (b != "R" != "C" != "I")):
	d = "Dados invalidos"
elif ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (b == "R")):
	d = a*0.65
elif ((a > 0) and (a <= 1000) and (b == "C")):
	d = a*0.55
elif ((a > 1000) and (b == "C")):
	d = a*0.60
elif ((a > 0) and (a <=5000) and (b == "I")):
	d = a*0.55
elif ((a > 5000) and (b == "I")):
	d = a*0.60

print("Entradas:", a , "kWh e tipo", b)
print("Valor total: R$" ,d)

-- EXECUTION TIME:
0.147105
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 18:02:12) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

if ((a < 0) or (b != "R" != "C" != "I")):
	d = "Dados invalidos"
elif ((a > 0) or (a <= 500) or (b == "R")):
	d = a*0.44 
elif ((a > 500) or (b == "R")):
	d = a*0.65
elif ((a > 0) or (a <= 1000) or (b == "C")):
	d = a*0.55
elif ((a > 1000) or (b == "C")):
	d = a*0.60
elif ((a > 0) or (a <=5000) or (b == "I")):
	d = a*0.55
elif ((a > 5000) or (b == "I")):
	d = a*0.60

print("Entradas:", a , "kWh e tipo", b)
print("Valor total: R$" ,d)

-- EXECUTION TIME:
0.187732
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 420.42
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:02:13) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

if ((a < 0) or (b != "R" != "C" != "I")):
	d = "Dados invalidos"
elif ((a > 0) or (a <= 500) or (b == "R")):
	d = a*0.44 
elif ((a > 500) or (b == "R")):
	d = a*0.65
elif ((a > 0) or (a <= 1000) or (b == "C")):
	d = a*0.55
elif ((a > 1000) or (b == "C")):
	d = a*0.60
elif ((a > 0) or (a <=5000) or (b == "I")):
	d = a*0.55
elif ((a > 5000) or (b == "I")):
	d = a*0.60

print("Entradas:", a , "kWh e tipo", b)
print("Valor total: R$" ,d)

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:02:21) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

if ((a < 0) or (b != "R" != "C" != "I")):
	d = "Dados invalidos"
elif ((a > 0) or (a <= 500) or (b == "R")):
	d = a*0.44 
elif ((a > 500) or (b == "R")):
	d = a*0.65
elif ((a > 0) or (a <= 1000) or (b == "C")):
	d = a*0.55
elif ((a > 1000) or (b == "C")):
	d = a*0.60
elif ((a > 0) or (a <=5000) or (b == "I")):
	d = a*0.55
elif ((a > 5000) or (b == "I")):
	d = a*0.60

print("Entradas:", a , "kWh e tipo", b)
print("Valor total: R$" ,d)

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 18:02:47) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

if ((a < 0) or (b != "R" != "C" != "I")):
	d = "Dados invalidos"
elif ((a > 0) or (a <= 500) or (b == "R")):
	d = a*0.44 
elif ((a > 500) or (b == "R")):
	d = a*0.65
elif ((a > 0) or (a <= 1000) or (b == "C")):
	d = a*0.55
elif ((a > 1000) or (b == "C")):
	d = a*0.60
elif ((a > 0) or (a <=5000) or (b == "I")):
	d = a*0.55
elif ((a > 5000) or (b == "I")):
	d = a*0.60

print("Entradas:", a , "kWh e tipo", b)
print("Valor total: R$" ,d)

-- EXECUTION TIME:
0.137648
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 420.42
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 18:02:53) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

if ((a < 0) or (b != "R" != "C" != "I")):
	d = "Dados invalidos"
elif ((a > 0) or (a <= 500) or (b == "R")):
	d = a*0.44 
elif ((a > 500) or (b == "R")):
	d = a*0.65
elif ((a > 0) or (a <= 1000) or (b == "C")):
	d = a*0.55
elif ((a > 1000) or (b == "C")):
	d = a*0.60
elif ((a > 0) or (a <=5000) or (b == "I")):
	d = a*0.55
elif ((a > 5000) or (b == "I")):
	d = a*0.60

print("Entradas:", a , "kWh e tipo", b)
print("Valor total: R$" ,d)

-- EXECUTION TIME:
0.200606
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 420.42
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 18:23:28) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

if ((a < 0) and (b != "R" != "C" != "I")):
	d = "Dados invalidos"
elif ((a > 0) or (a <= 500) or (b == "R")):
	d = a*0.44 
elif ((a > 500) or (b == "R")):
	d = a*0.65
elif ((a > 0) or (a <= 1000) or (b == "C")):
	d = a*0.55
elif ((a > 1000) or (b == "C")):
	d = a*0.60
elif ((a > 0) or (a <=5000) or (b == "I")):
	d = a*0.55
elif ((a > 5000) or (b == "I")):
	d = a*0.60

print("Entradas:", a , "kWh e tipo", b)
print("Valor total: R$" ,d)

-- EXECUTION TIME:
0.145578
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 420.42
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 19:24:38) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

elif ((a > 0) or (a <= 500) or (b == "R")):
	d = a*0.44 
elif ((a > 500) or (b == "R")):
	d = a*0.65
elif ((a > 0) or (a <= 1000) or (b == "C")):
	d = a*0.55
elif ((a > 1000) or (b == "C")):
	d = a*0.60
elif ((a > 0) or (a <=5000) or (b == "I")):
	d = a*0.55
elif ((a > 5000) or (b == "I")):
	d = a*0.60
else:

print("Entradas:", a , "kWh e tipo", b)
print("Valor total: R$" ,d)

-- EXECUTION TIME:
0.177421
-- ERROR:
  File "/home/codebench/codes/1679/1101/main.py", line 4
    elif ((a > 0) or (a <= 500) or (b == "R")):
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 19:24:46) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

elif ((a > 0) or (a <= 500) or (b == "R")):
	d = a*0.44 
elif ((a > 500) or (b == "R")):
	d = a*0.65
elif ((a > 0) or (a <= 1000) or (b == "C")):
	d = a*0.55
elif ((a > 1000) or (b == "C")):
	d = a*0.60
elif ((a > 0) or (a <=5000) or (b == "I")):
	d = a*0.55
elif ((a > 5000) or (b == "I")):
	d = a*0.60
else:
	d = "Dados invalidos"

print("Entradas:", a , "kWh e tipo", b)
print("Valor total: R$" ,d)

-- EXECUTION TIME:
0.206751
-- ERROR:
  File "/home/codebench/codes/1679/1101/main.py", line 4
    elif ((a > 0) or (a <= 500) or (b == "R")):
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 19:24:49) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

elif ((a > 0) or (a <= 500) or (b == "R")):
	d = a*0.44 
elif ((a > 500) or (b == "R")):
	d = a*0.65
elif ((a > 0) or (a <= 1000) or (b == "C")):
	d = a*0.55
elif ((a > 1000) or (b == "C")):
	d = a*0.60
elif ((a > 0) or (a <=5000) or (b == "I")):
	d = a*0.55
elif ((a > 5000) or (b == "I")):
	d = a*0.60
else:
	d = "Dados invalidos"

print("Entradas:", a , "kWh e tipo", b)
print("Valor total: R$" ,d)

-- EXECUTION TIME:
0.191825
-- ERROR:
  File "/home/codebench/codes/1679/1101/main.py", line 4
    elif ((a > 0) or (a <= 500) or (b == "R")):
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 19:31:32) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

elif ((a > 0) or (a <= 500) or (b == "R")):
	d = a*0.44 
elif ((a > 500) or (b == "R")):
	d = a*0.65
elif ((a > 0) or (a <= 1000) or (b == "C")):
	d = a*0.55
elif ((a > 1000) or (b == "C")):
	d = a*0.60
elif ((a > 0) or (a <=5000) or (b == "I")):
	d = a*0.55
elif ((a > 5000) or (b == "I")):
	d = a*0.60
else:
	d = "Dados invalidos"

print("Entradas:", a , "kWh e tipo", b)
print("Valor total: R$" ,d)

-- EXECUTION TIME:
0.228308
-- ERROR:
  File "/home/codebench/codes/1679/1101/main.py", line 4
    elif ((a > 0) or (a <= 500) or (b == "R")):
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 19:33:01) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

elif ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (b == "R")):
	d = a*0.65
elif ((a > 0) and (a <= 1000) and (b == "C")):
	d = a*0.55
elif ((a > 1000) and (b == "C")):
	d = a*0.60
elif ((a > 0) and (a <=5000) and (b == "I")):
	d = a*0.55
elif ((a > 5000) and (b == "I")):
	d = a*0.60
else:
	d = "Dados invalidos"

print("Entradas:", a , "kWh e tipo", b)
print("Valor total: R$" ,d)

-- EXECUTION TIME:
0.20266
-- ERROR:
  File "/home/codebench/codes/1679/1101/main.py", line 4
    elif ((a > 0) and (a <= 500) and (b == "R")):
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 20:21:23) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

elif ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (b == "R")):
	d = a*0.65
elif ((a > 0) and (a <= 1000) and (b == "C")):
	d = a*0.55
elif ((a > 1000) and (b == "C")):
	d = a*0.60
elif ((a > 0) and (a <=5000) and (b == "I")):
	d = a*0.55
elif ((a > 5000) and (b == "I")):
	d = a*0.60
else:
	d = "Dados invalidos"

print("Entradas:", a , "kWh e tipo", b)
print("Valor total: R$" ,d)

-- EXECUTION TIME:
0.198685
-- ERROR:
  File "/home/codebench/codes/1679/1101/main.py", line 4
    elif ((a > 0) and (a <= 500) and (b == "R")):
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 20:21:28) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

if ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (b == "R")):
	d = a*0.65
elif ((a > 0) and (a <= 1000) and (b == "C")):
	d = a*0.55
elif ((a > 1000) and (b == "C")):
	d = a*0.60
elif ((a > 0) and (a <=5000) and (b == "I")):
	d = a*0.55
elif ((a > 5000) and (b == "I")):
	d = a*0.60
else:
	d = "Dados invalidos"

print("Entradas:", a , "kWh e tipo", b)
print("Valor total: R$" ,d)

-- EXECUTION TIME:
0.255522
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 20:21:29) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

if ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (b == "R")):
	d = a*0.65
elif ((a > 0) and (a <= 1000) and (b == "C")):
	d = a*0.55
elif ((a > 1000) and (b == "C")):
	d = a*0.60
elif ((a > 0) and (a <=5000) and (b == "I")):
	d = a*0.55
elif ((a > 5000) and (b == "I")):
	d = a*0.60
else:
	d = "Dados invalidos"

print("Entradas:", a , "kWh e tipo", b)
print("Valor total: R$" ,d)

-- EXECUTION TIME:
0.217633
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-02 18:55:30) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

if ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (b == "R")):
	d = a*0.65
elif ((a > 0) and (a <= 1000) and (b == "C")):
	d = a*0.55
elif ((a > 1000) and (b == "C")):
	d = a*0.60
elif ((a > 0) and (a <=5000) and (b == "I")):
	d = a*0.55
elif ((a > 5000) and (b == "I")):
	d = a*0.60
else:
	d = "Dados invalidos"

print("Entradas:", a , "kWh e tipo", b)
print("Valor total: R$" ,d)

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-02 18:55:55) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:")

if ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (b == "R")):
	d = a*0.65
elif ((a > 0) and (a <= 1000) and (b == "C")):
	d = a*0.55
elif ((a > 1000) and (b == "C")):
	d = a*0.60
elif ((a > 0) and (a <=5000) and (b == "I")):
	d = a*0.55
elif ((a > 5000) and (b == "I")):
	d = a*0.60
else:
	d = "Dados invalidos"

print("Entradas:", a , "kWh e tipo", b)
print("Valor total: R$" ,d)

-- EXECUTION TIME:
0.781295
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-02 18:56:11) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:").upper()

if ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (b == "R")):
	d = a*0.65
elif ((a > 0) and (a <= 1000) and (b == "C")):
	d = a*0.55
elif ((a > 1000) and (b == "C")):
	d = a*0.60
elif ((a > 0) and (a <=5000) and (b == "I")):
	d = a*0.55
elif ((a > 5000) and (b == "I")):
	d = a*0.60
else:
	d = "Dados invalidos"

print("Entradas:", a , "kWh e tipo", b)
print("Valor total: R$" ,d)

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-02 18:56:22) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:").upper()

if ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (b == "R")):
	d = a*0.65
elif ((a > 0) and (a <= 1000) and (b == "C")):
	d = a*0.55
elif ((a > 1000) and (b == "C")):
	d = a*0.60
elif ((a > 0) and (a <=5000) and (b == "I")):
	d = a*0.55
elif ((a > 5000) and (b == "I")):
	d = a*0.60
else:
	d = "Dados invalidos"

print("Entradas:", a , "kWh e tipo", b)
print("Valor total: R$" ,d)

-- EXECUTION TIME:
0.86965
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-02 18:59:58) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:").upper()

if ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (b == "R")):
	d = a*0.65
elif ((a > 0) and (a <= 1000) and (b == "C")):
	d = a*0.55
elif ((a > 1000) and (b == "C")):
	d = a*0.60
elif ((a > 0) and (a <= 5000) and (b == "I")):
	d = a*0.55
elif ((a > 5000) and (b == "I")):
	d = a*0.60
else:
	d = "Dados invalidos"

print("Entradas:", a ,"kWh e tipo", b)
print("Valor total: R$" ,d)

-- EXECUTION TIME:
0.569876
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-02 18:59:59) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:").upper()

if ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (b == "R")):
	d = a*0.65
elif ((a > 0) and (a <= 1000) and (b == "C")):
	d = a*0.55
elif ((a > 1000) and (b == "C")):
	d = a*0.60
elif ((a > 0) and (a <= 5000) and (b == "I")):
	d = a*0.55
elif ((a > 5000) and (b == "I")):
	d = a*0.60
else:
	d = "Dados invalidos"

print("Entradas:", a ,"kWh e tipo", b)
print("Valor total: R$" ,d)

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:24:13) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:").upper()

if ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (b == "R")):
	d = a*0.65
elif ((a > 0) and (a <= 1000) and (b == "C")):
	d = a*0.55
elif ((a > 1000) and (b == "C")):
	d = a*0.60
elif ((a > 0) and (a <= 5000) and (b == "I")):
	d = a*0.55
elif ((a > 5000) and (b == "I")):
	d = a*0.60
else:
	d = "Dados invalidos"

print("Entradas:", a ,"kWh e tipo", b)
print("Valor total: R$" ,d)

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:24:16) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:").upper()

if ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (b == "R")):
	d = a*0.65
elif ((a > 0) and (a <= 1000) and (b == "C")):
	d = a*0.55
elif ((a > 1000) and (b == "C")):
	d = a*0.60
elif ((a > 0) and (a <= 5000) and (b == "I")):
	d = a*0.55
elif ((a > 5000) and (b == "I")):
	d = a*0.60
else:
	d = "Dados invalidos"

print("Entradas:", a ,"kWh e tipo", b)
print("Valor total: R$" ,d)

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:26:10) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:").upper()

if ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (b == "R")):
	d = a*0.65
elif ((a > 0) and (a <= 1000) and (b == "C")):
	d = a*0.55
elif ((a > 1000) and (b == "C")):
	d = a*0.60
elif ((a > 0) and (a <= 5000) and (b == "I")):
	d = a*0.55
elif ((a > 5000) and (b == "I")):
	d = a*0.60
else:
	d = "Dados invalidos"

print("Entradas:", a ,"kWh e tipo", b)
print("Valor total: R$" ,d)

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:26:15) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:").upper()

if ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (b == "R")):
	d = a*0.65
elif ((a > 0) and (a <= 1000) and (b == "C")):
	d = a*0.55
elif ((a > 1000) and (b == "C")):
	d = a*0.60
elif ((a > 0) and (a <= 5000) and (b == "I")):
	d = a*0.55
elif ((a > 5000) and (b == "I")):
	d = a*0.60
else:
	d = "Dados invalidos"

print("Entradas:", a ,"kWh e tipo", b)
print("Valor total: R$" ,d)

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:28:10) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:").upper()

if ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (b == "R")):
	d = a*0.65
elif ((a > 0) and (a <= 1000) and (b == "C")):
	d = a*0.55
elif ((a > 1000) and (b == "C")):
	d = a*0.60
elif ((a > 0) and (a <= 5000) and (b == "I")):
	d = a*0.55
elif ((a > 5000) and (b == "I")):
	d = a*0.60
else:
	d = "Dados invalidos"
d = round(d,2)
print("Entradas:", a ,"kWh e tipo", b)
print("Valor total: R$" ,d)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 18, in <module>
    d = round(d,2)
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:29:38) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:").upper()

if ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (b == "R")):
	d = a*0.65
elif ((a > 0) and (a <= 1000) and (b == "C")):
	d = a*0.55
elif ((a > 1000) and (b == "C")):
	d = a*0.60
elif ((a > 0) and (a <= 5000) and (b == "I")):
	d = a*0.55
elif ((a > 5000) and (b == "I")):
	d = a*0.60
else:
	d = "Dados invalidos"
n = round(d,2)
print("Entradas:", a ,"kWh e tipo", b)
print("Valor total: R$" ,n)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 18, in <module>
    n = round(d,2)
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-04 16:29:45) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:").upper()

if ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (b == "R")):
	d = a*0.65
elif ((a > 0) and (a <= 1000) and (b == "C")):
	d = a*0.55
elif ((a > 1000) and (b == "C")):
	d = a*0.60
elif ((a > 0) and (a <= 5000) and (b == "I")):
	d = a*0.55
elif ((a > 5000) and (b == "I")):
	d = a*0.60
else:
	d = "Dados invalidos"
n = round(d,2)
print("Entradas:", a ,"kWh e tipo", b)
print("Valor total: R$" ,n)

-- EXECUTION TIME:
0.784863
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1101/main.py", line 18, in <module>
    n = round(d,2)
TypeError: type str doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:29:58) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:").upper()

if ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (b == "R")):
	d = a*0.65
elif ((a > 0) and (a <= 1000) and (b == "C")):
	d = a*0.55
elif ((a > 1000) and (b == "C")):
	d = a*0.60
elif ((a > 0) and (a <= 5000) and (b == "I")):
	d = a*0.55
elif ((a > 5000) and (b == "I")):
	d = a*0.60
else:
	d = "Dados invalidos"
n = round(d,2)
print("Entradas:", a ,"kWh e tipo", b)
print("Valor total: R$" ,n)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 18, in <module>
    n = round(d,2)
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-04 16:30:34) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:").upper()

if ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (b == "R")):
	d = a*0.65
elif ((a > 0) and (a <= 1000) and (b == "C")):
	d = a*0.55
elif ((a > 1000) and (b == "C")):
	d = a*0.60
elif ((a > 0) and (a <= 5000) and (b == "I")):
	d = a*0.55
elif ((a > 5000) and (b == "I")):
	d = a*0.60
n = round(d,2)
else:
	d = "Dados invalidos"
print("Entradas:", a ,"kWh e tipo", b)
print("Valor total: R$" ,n)

-- EXECUTION TIME:
0.678752
-- ERROR:
  File "/home/codebench/codes/1679/1101/main.py", line 17
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:30:36) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:").upper()

if ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (b == "R")):
	d = a*0.65
elif ((a > 0) and (a <= 1000) and (b == "C")):
	d = a*0.55
elif ((a > 1000) and (b == "C")):
	d = a*0.60
elif ((a > 0) and (a <= 5000) and (b == "I")):
	d = a*0.55
elif ((a > 5000) and (b == "I")):
	d = a*0.60
n = round(d,2)
else:
	d = "Dados invalidos"
print("Entradas:", a ,"kWh e tipo", b)
print("Valor total: R$" ,n)

-- ERROR:
File "XXXX", line 17
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:31:17) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:").upper()

if ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
elif ((a > 500) and (b == "R")):
	d = a*0.65
elif ((a > 0) and (a <= 1000) and (b == "C")):
	d = a*0.55
elif ((a > 1000) and (b == "C")):
	d = a*0.60
elif ((a > 0) and (a <= 5000) and (b == "I")):
	d = a*0.55
elif ((a > 5000) and (b == "I")):
	d = a*0.60
n = round(d,2)
print("Entradas:", a ,"kWh e tipo", b)
print("Valor total: R$" ,n)
else:
	k = "Dados invalidos"
print(k)

-- ERROR:
File "XXXX", line 19
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:31:35) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:").upper()

if ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
	n = round(d,2)
	print("Entradas:", a ,"kWh e tipo", b)
	print("Valor total: R$" ,n)
elif ((a > 500) and (b == "R")):
	d = a*0.65
	n = round(d,2)
	print("Entradas:", a ,"kWh e tipo", b)
	print("Valor total: R$" ,n)
elif ((a > 0) and (a <= 1000) and (b == "C")):
	d = a*0.55
	n = round(d,2)
	print("Entradas:", a ,"kWh e tipo", b)
	print("Valor total: R$" ,n)
elif ((a > 1000) and (b == "C")):
	d = a*0.60
	n = round(d,2)
	print("Entradas:", a ,"kWh e tipo", b)
	print("Valor total: R$" ,n)
elif ((a > 0) and (a <= 5000) and (b == "I")):
	d = a*0.55
	n = round(d,2)
	print("Entradas:", a ,"kWh e tipo", b)
	print("Valor total: R$" ,n)
elif ((a > 5000) and (b == "I")):
	d = a*0.60
	n = round(d,2)
	print("Entradas:", a ,"kWh e tipo", b)
	print("Valor total: R$" ,n)
else:
	k = "Dados invalidos"
print(k)

-- OUTPUT:
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-04 16:31:38) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:").upper()

if ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
	n = round(d,2)
	print("Entradas:", a ,"kWh e tipo", b)
	print("Valor total: R$" ,n)
elif ((a > 500) and (b == "R")):
	d = a*0.65
	n = round(d,2)
	print("Entradas:", a ,"kWh e tipo", b)
	print("Valor total: R$" ,n)
elif ((a > 0) and (a <= 1000) and (b == "C")):
	d = a*0.55
	n = round(d,2)
	print("Entradas:", a ,"kWh e tipo", b)
	print("Valor total: R$" ,n)
elif ((a > 1000) and (b == "C")):
	d = a*0.60
	n = round(d,2)
	print("Entradas:", a ,"kWh e tipo", b)
	print("Valor total: R$" ,n)
elif ((a > 0) and (a <= 5000) and (b == "I")):
	d = a*0.55
	n = round(d,2)
	print("Entradas:", a ,"kWh e tipo", b)
	print("Valor total: R$" ,n)
elif ((a > 5000) and (b == "I")):
	d = a*0.60
	n = round(d,2)
	print("Entradas:", a ,"kWh e tipo", b)
	print("Valor total: R$" ,n)
else:
	k = "Dados invalidos"
print(k)

-- EXECUTION TIME:
0.740022
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-04 16:31:43) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:").upper()

if ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
	n = round(d,2)
	print("Entradas:", a ,"kWh e tipo", b)
	print("Valor total: R$" ,n)
elif ((a > 500) and (b == "R")):
	d = a*0.65
	n = round(d,2)
	print("Entradas:", a ,"kWh e tipo", b)
	print("Valor total: R$" ,n)
elif ((a > 0) and (a <= 1000) and (b == "C")):
	d = a*0.55
	n = round(d,2)
	print("Entradas:", a ,"kWh e tipo", b)
	print("Valor total: R$" ,n)
elif ((a > 1000) and (b == "C")):
	d = a*0.60
	n = round(d,2)
	print("Entradas:", a ,"kWh e tipo", b)
	print("Valor total: R$" ,n)
elif ((a > 0) and (a <= 5000) and (b == "I")):
	d = a*0.55
	n = round(d,2)
	print("Entradas:", a ,"kWh e tipo", b)
	print("Valor total: R$" ,n)
elif ((a > 5000) and (b == "I")):
	d = a*0.60
	n = round(d,2)
	print("Entradas:", a ,"kWh e tipo", b)
	print("Valor total: R$" ,n)
else:
	k = "Dados invalidos"
	print(k)

-- EXECUTION TIME:
0.923961
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Consumo:Residencia:Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-04 16:31:59) 
-- CODE:
a = float(input("Consumo:"))
b = input("Residencia:").upper()

if ((a > 0) and (a <= 500) and (b == "R")):
	d = a*0.44 
	n = round(d,2)
	print("Entradas:", a ,"kWh e tipo", b)
	print("Valor total: R$" ,n)
elif ((a > 500) and (b == "R")):
	d = a*0.65
	n = round(d,2)
	print("Entradas:", a ,"kWh e tipo", b)
	print("Valor total: R$" ,n)
elif ((a > 0) and (a <= 1000) and (b == "C")):
	d = a*0.55
	n = round(d,2)
	print("Entradas:", a ,"kWh e tipo", b)
	print("Valor total: R$" ,n)
elif ((a > 1000) and (b == "C")):
	d = a*0.60
	n = round(d,2)
	print("Entradas:", a ,"kWh e tipo", b)
	print("Valor total: R$" ,n)
elif ((a > 0) and (a <= 5000) and (b == "I")):
	d = a*0.55
	n = round(d,2)
	print("Entradas:", a ,"kWh e tipo", b)
	print("Valor total: R$" ,n)
elif ((a > 5000) and (b == "I")):
	d = a*0.60
	n = round(d,2)
	print("Entradas:", a ,"kWh e tipo", b)
	print("Valor total: R$" ,n)
else:
	k = "Dados invalidos"
	print("Entradas:", a ,"kWh e tipo", b)
	print(k)

-- EXECUTION TIME:
0.897507
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
