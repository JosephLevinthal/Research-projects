== SUBMITION (2019-06-06 16:59:51) 
-- CODE:
from numpy import *
a = array(eval("g.favor: "))
b = array(eval("g.contra: "))
c = zeros(3,dtype=int)
for i in range(size(b)):
	if (a[i]>b[i]):
		c[0]=c[0]+1
	if (a[i]==b[i]):
		c[1]=c[1]+1
	else:
		c[2]=c[2]+1
print(c)
		
		

-- EXECUTION TIME:
1.15464
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1807/2564/main.py", line 2, in <module>
    a = array(eval("g.favor: "))
  File "<string>", line 1
    g.favor: 
           ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 17:00:15) 
-- CODE:
from numpy import *
a = array(eval("g.favor: "))
b = array(eval("g.contra: "))
c = zeros(3,dtype=int)
for i in range(size(a)):
	if (a[i]>b[i]):
		c[0]=c[0]+1
	if (a[i]==b[i]):
		c[1]=c[1]+1
	else:
		c[2]=c[2]+1
print(c)
		
		

-- EXECUTION TIME:
1.2771
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1807/2564/main.py", line 2, in <module>
    a = array(eval("g.favor: "))
  File "<string>", line 1
    g.favor: 
           ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 17:00:37) 
-- CODE:
from numpy import *
a = array(eval("g.favor: "))
b = array(eval("g.contra: "))
c = zeros(3,dtype=int)
for i in range(size(a)):
	if (a[i]>b[i]):
		c[0]=c[0]+1
	elif (a[i]==b[i]):
		c[1]=c[1]+1
	else:
		c[2]=c[2]+1
print(c)
		
		

-- EXECUTION TIME:
1.12339
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1807/2564/main.py", line 2, in <module>
    a = array(eval("g.favor: "))
  File "<string>", line 1
    g.favor: 
           ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 17:00:44) 
-- CODE:
from numpy import *
a = array(eval("g.favor: "))
b = array(eval("g.contra: "))
c = zeros(3,dtype=int)
for i in range(size(a)):
	if (a[i]>b[i]):
		c[0]=c[0]+1
	elif (a[i]==b[i]):
		c[1]=c[1]+1
	else:
		c[2]=c[2]+1
print(c)
		
		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 17:01:56) 
-- CODE:
from numpy import *
a = array(eval(input("g.favor: ")))
b = array(eval(input("g.contra: ")))
c = zeros(3,dtype=int)
for i in range(size(a)):
	if (a[i]>b[i]):
		c[0]=c[0]+1
	elif (a[i]==b[i]):
		c[1]=c[1]+1
	else:
		c[2]=c[2]+1
print(c)
		
		

-- EXECUTION TIME:
1.02226
-- TEST CASE 1:
---- input:
[2,3,2,4,3,5,3,4,2,3,1,0]
[3,3,1,0,2,3,3,0,1,2,1,1]
---- correct output:
[7 3 2]
---- user output:
[7 3 2]
-- TEST CASE 2:
---- input:
[1,2,1,2,1,2,1,2,0]
[3,5,3,3,3,3,3,3,3]
---- correct output:
[0 0 9]
---- user output:
[0 0 9]
-- TEST CASE 3:
---- input:
[1,2,2,2,2,1,1,2,2,1,1,2,2]
[0,1,1,1,0,0,0,0,0,0,1,1,1]
---- correct output:
[12 1 0]
---- user output:
[12  1  0]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 16:13:41) 
-- CODE:
from numpy import *
a = array(eval(input("n.gols: ")))
b = array(eval(input("gols.ad: ")))
c = zeros(3,dtype=int)
for i in range(size(a)):
	if(a[i]>b[i]):
		c[0] = c[0] + 1
	if(a[i]==b[i]):
		c[1] = c[1] + 1
	if (a[i] < a[i]):
		c[2] = c[2] + 1
print(c)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 16:14:25) 
-- CODE:
from numpy import *
a = array(eval(input("n.gols: ")))
b = array(eval(input("gols.ad: ")))
c = zeros(3,dtype=int)
for i in range(size(a)):
	if(a[i]>b[i]):
		c[0] = c[0] + 1
	if(a[i]==b[i]):
		c[1] = c[1] + 1
	if (a[i] < b[i]):
		c[2] = c[2] + 1
print(c)
-- EXECUTION TIME:
1.28883
-- TEST CASE 1:
---- input:
[2,3,2,4,3,5,3,4,2,3,1,0]
[3,3,1,0,2,3,3,0,1,2,1,1]
---- correct output:
[7 3 2]
---- user output:
[7 3 2]
-- TEST CASE 2:
---- input:
[1,2,1,2,1,2,1,2,0]
[3,5,3,3,3,3,3,3,3]
---- correct output:
[0 0 9]
---- user output:
[0 0 9]
-- TEST CASE 3:
---- input:
[1,2,2,2,2,1,1,2,2,1,1,2,2]
[0,1,1,1,0,0,0,0,0,0,1,1,1]
---- correct output:
[12 1 0]
---- user output:
[12  1  0]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
