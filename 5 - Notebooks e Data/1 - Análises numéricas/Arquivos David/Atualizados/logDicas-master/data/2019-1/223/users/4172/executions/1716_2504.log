== TEST (2019-05-15 23:47:13) 
-- CODE:
qiv=int(input("quantidade inicial do virus: "))
qil=int(input("quantidade incial de leucocitos: "))
pv=int(input("percentual de crescimento do virus: "))
pl=int(input("percentual de crescimento de lrucocitos: "))

d=0

while(2*qil>qiv):
	qiv=qiv+(qiv*(pv/100))
	qil=qil+(qil*(pl/100))
	d+=1
print(d)
-- OUTPUT:
-1.0
-0.11111111
-0.02222222
-0.00529101
-0.00137174
-0.00037411
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 23:47:53) 
-- CODE:
qiv=int(input("quantidade inicial do virus: "))
qil=int(input("quantidade incial de leucocitos: "))
pv=int(input("percentual de crescimento do virus: "))
pl=int(input("percentual de crescimento de lrucocitos: "))

d=0

while(qil<qiv):
	qiv=qiv+(qiv*(pv/100))
	qil=qil+(qil*(pl/100))
	d+=1
print(d)
-- OUTPUT:
8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 23:48:24) 
-- CODE:
qiv=int(input("quantidade inicial do virus: "))
qil=int(input("quantidade incial de leucocitos: "))
pv=int(input("percentual de crescimento do virus: "))
pl=int(input("percentual de crescimento de lrucocitos: "))

d=0

while(2*qil<qiv):
	qiv=qiv+(qiv*(pv/100))
	qil=qil+(qil*(pl/100))
	d+=1
print(d)
-- OUTPUT:
7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 23:48:50) 
-- CODE:
qiv=int(input("quantidade inicial do virus: "))
qil=int(input("quantidade incial de leucocitos: "))
pv=int(input("percentual de crescimento do virus: "))
pl=int(input("percentual de crescimento de lrucocitos: "))

d=0

while(qil<qiv*2):
	qiv=qiv+(qiv*(pv/100))
	qil=qil+(qil*(pl/100))
	d+=1
print(d)
-- OUTPUT:
9
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 23:49:04) 
-- CODE:
qiv=int(input("quantidade inicial do virus: "))
qil=int(input("quantidade incial de leucocitos: "))
pv=int(input("percentual de crescimento do virus: "))
pl=int(input("percentual de crescimento de lrucocitos: "))

d=0

while(qil<qiv*2):
	qiv=qiv+(qiv*(pv/100))
	qil=qil+(qil*(pl/100))
	d+=1
print(d)
-- EXECUTION TIME:
0.14632
-- TEST CASE 1:
---- input:
350625
5500
2
75
---- correct output:
9
---- user output:
9
-- TEST CASE 2:
---- input:
650090
90045
4
90
---- correct output:
5
---- user output:
5
-- TEST CASE 3:
---- input:
419250
1725
9
59
---- correct output:
17
---- user output:
17
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
