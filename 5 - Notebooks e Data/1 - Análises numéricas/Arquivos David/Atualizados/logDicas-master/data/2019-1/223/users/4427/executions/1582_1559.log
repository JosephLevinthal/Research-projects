== TEST (2019-04-02 14:15:47) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia."
print (.upper(frase.???))
-- ERROR:
File "XXXX", line 2
    print (.upper(frase.???))
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 14:16:25) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia."
print .upper (frase.???)
-- ERROR:
File "XXXX", line 2
    print .upper (frase.???)
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 14:24:12) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia."
frase .upper ()
print (frase.???)
-- ERROR:
File "XXXX", line 3
    print (frase.???)
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 14:24:35) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia."
frase .upper ()
print (frase.upper)
-- OUTPUT:
<built-in method upper of str object at 0x7f1cd59669f0>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 14:24:55) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia."
frase .upper ()

-- OUTPUT:
<built-in method upper of str object at 0x7f1cd59669f0>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 14:25:13) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia."
frase.upper ()

-- OUTPUT:
<built-in method upper of str object at 0x7f1cd59669f0>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 14:28:10) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia."
upper (frase)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    upper (frase)
NameError: name 'upper' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 14:28:24) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia."
.upper (frase)

-- ERROR:
File "XXXX", line 2
    .upper (frase)
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 14:28:33) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia."
.upper(frase)

-- ERROR:
File "XXXX", line 2
    .upper(frase)
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 14:29:25) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia."
print (frase.upper)

-- OUTPUT:
<built-in method upper of str object at 0x7f00e6e699f0>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 20:50:16) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia."
print (frase.upper ())

-- OUTPUT:
ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 20:50:28) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia."
print (frase.upper ())

-- EXECUTION TIME:
0.17087
-- TEST CASE 1:
---- input:
nonono
---- correct output:
ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA.
---- user output:
ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA.
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
