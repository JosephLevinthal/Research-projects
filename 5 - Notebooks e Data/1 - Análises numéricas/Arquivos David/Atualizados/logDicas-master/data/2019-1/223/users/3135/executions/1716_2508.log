== TEST (2019-05-16 09:08:47) 
-- CODE:
n= int(input("Insira o valor de N termo"))
cont=0
res=0
res1=0
res2=0
x1=2
x2=3
x3=4
while(k<cont):
	if(cont==0):
		res=3
	else:
		res= 4/(x1*x2*x3)
	if(cont%2==0 and cont>0)
		res=res*(-1)
	res1= res+ res1
	if(cont>0):
		x1=x1+2
		x2=x2+2
		x3=x3+2
	cont+=1
	print(round(res1,8))
-- ERROR:
File "XXXX", line 14
    if(cont%2==0 and cont>0)
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 09:08:55) 
-- CODE:
n= int(input("Insira o valor de N termo"))
cont=0
res=0
res1=0
res2=0
x1=2
x2=3
x3=4
while(k<cont):
	if(cont==0):
		res=3
	else:
		res= 4/(x1*x2*x3)
	if(cont%2==0 and cont>0):
		res=res*(-1)
	res1= res+ res1
	if(cont>0):
		x1=x1+2
		x2=x2+2
		x3=x3+2
	cont+=1
	print(round(res1,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    while(k<cont):
NameError: name 'k' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 09:09:12) 
-- CODE:
n= int(input("Insira o valor de N termo"))
cont=0
res=0
res1=0
res2=0
x1=2
x2=3
x3=4
while(n<cont):
	if(cont==0):
		res=3
	else:
		res= 4/(x1*x2*x3)
	if(cont%2==0 and cont>0):
		res=res*(-1)
	res1= res+ res1
	if(cont>0):
		x1=x1+2
		x2=x2+2
		x3=x3+2
	cont+=1
	print(round(res1,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    while(k<cont):
NameError: name 'k' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 09:09:54) 
-- CODE:
n= int(input("Insira o valor de N termo:"))
cont=0
res=0
res1=0
res2=0
x1=2
x2=3
x3=4
while(cont=!n):
	if(cont==0):
		res=3
	else:
		res= 4/(x1*x2*x3)
	if(cont%2==0 and cont>0):
		res=res*(-1)
	res1= res+ res1
	if(cont>0):
		x1=x1+2
		x2=x2+2
		x3=x3+2
	cont+=1
	print(round(res1,8))
-- ERROR:
File "XXXX", line 9
    while(cont=!n):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 09:10:04) 
-- CODE:
n= int(input("Insira o valor de N termo:"))
cont=0
res=0
res1=0
res2=0
x1=2
x2=3
x3=4
while(cont!=n):
	if(cont==0):
		res=3
	else:
		res= 4/(x1*x2*x3)
	if(cont%2==0 and cont>0):
		res=res*(-1)
	res1= res+ res1
	if(cont>0):
		x1=x1+2
		x2=x2+2
		x3=x3+2
	cont+=1
	print(round(res1,8))
-- OUTPUT:
3
3.16666667
3.13333333
3.1452381
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 09:10:12) 
-- CODE:
n= int(input("Insira o valor de N termo:"))
cont=0
res=0
res1=0
res2=0
x1=2
x2=3
x3=4
while(cont!=n):
	if(cont==0):
		res=3
	else:
		res= 4/(x1*x2*x3)
	if(cont%2==0 and cont>0):
		res=res*(-1)
	res1= res+ res1
	if(cont>0):
		x1=x1+2
		x2=x2+2
		x3=x3+2
	cont+=1
	print(round(res1,8))
-- OUTPUT:
3
3.16666667
3.13333333
3.1452381
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 09:10:18) 
-- CODE:
n= int(input("Insira o valor de N termo:"))
cont=0
res=0
res1=0
res2=0
x1=2
x2=3
x3=4
while(cont!=n):
	if(cont==0):
		res=3
	else:
		res= 4/(x1*x2*x3)
	if(cont%2==0 and cont>0):
		res=res*(-1)
	res1= res+ res1
	if(cont>0):
		x1=x1+2
		x2=x2+2
		x3=x3+2
	cont+=1
	print(round(res1,8))
-- OUTPUT:
3
3.16666667
3.13333333
3.1452381
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 09:10:34) 
-- CODE:
n= int(input("Insira o valor de N termo:"))
cont=0
res=0
res1=0
res2=0
x1=2
x2=3
x3=4
while(cont!=n):
	if(cont==0):
		res=3
	else:
		res= 4/(x1*x2*x3)
	if(cont%2==0 and cont>0):
		res=res*(-1)
	res1= res+ res1
	if(cont>0):
		x1=x1+2
		x2=x2+2
		x3=x3+2
	cont+=1

print(round(res1,8))
-- OUTPUT:
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 09:10:39) 
-- CODE:
n= int(input("Insira o valor de N termo:"))
cont=0
res=0
res1=0
res2=0
x1=2
x2=3
x3=4
while(cont!=n):
	if(cont==0):
		res=3
	else:
		res= 4/(x1*x2*x3)
	if(cont%2==0 and cont>0):
		res=res*(-1)
	res1= res+ res1
	if(cont>0):
		x1=x1+2
		x2=x2+2
		x3=x3+2
	cont+=1

print(round(res1,8))
-- EXECUTION TIME:
0.133399
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.14155633
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
