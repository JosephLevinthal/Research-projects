== TEST (2019-04-01 23:32:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
a = int(input("valor de a:"))
b = int(input("valor de b:"))
c = int(input("valor de c:"))
P = (a+b+c)/2
print(P)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 23:35:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
a = int(input("valor de a:"))
b = int(input("valor de b:"))
c = int(input("valor de c:"))
S = (a+b+c)/2
A = sqrt(S*(S-a)*(S-b)*(S-c))
print(round(A, 5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 23:36:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
a = int(input("valor de a:"))
b = int(input("valor de b:"))
c = int(input("valor de c:"))
S = (a+b+c)/2
area = sqrt(S*(S-a)*(S-b)*(S-c))
print(round(area, 5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 23:37:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
a = int(input("valor de a:"))
b = int(input("valor de b:"))
c = int(input("valor de c:"))
S = (a+b+c)/2
area = sqrt(S*(S-a)*(S-b)*(S-c))
print(round(area, 5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 23:40:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
a = int(input("valor de a:"))
b = int(input("valor de b:"))
c = int(input("valor de c:"))
S = (a+b+c)/2
area = (S*(S-a)*(S-b)*(S-c))
x = math.sqrt(area)
print(round(x, 5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 23:40:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
a = int(input("valor de a:"))
b = int(input("valor de b:"))
c = int(input("valor de c:"))
S = (a+b+c)/2
area = (S*(S-a)*(S-b)*(S-c))
x = math.sqrt(area)
print(round(x, 5))
-- EXECUTION TIME:
0.162629
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1595/1016/main.py", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 23:41:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
a = float(input("valor de a:"))
b = float(input("valor de b:"))
c = float(input("valor de c:"))
S = (a+b+c)/2
area = (S*(S-a)*(S-b)*(S-c))
x = math.sqrt(area)
print(round(x, 5))
-- OUTPUT:
69.41967
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 23:41:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
a = float(input("valor de a:"))
b = float(input("valor de b:"))
c = float(input("valor de c:"))
S = (a+b+c)/2
area = (S*(S-a)*(S-b)*(S-c))
x = math.sqrt(area)
print(round(x, 5))
-- OUTPUT:
69.41967
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 23:41:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
a = float(input("valor de a:"))
b = float(input("valor de b:"))
c = float(input("valor de c:"))
S = (a+b+c)/2
area = (S*(S-a)*(S-b)*(S-c))
x = math.sqrt(area)
print(round(x, 5))
-- EXECUTION TIME:
0.1889
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.41967
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709.16654
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
