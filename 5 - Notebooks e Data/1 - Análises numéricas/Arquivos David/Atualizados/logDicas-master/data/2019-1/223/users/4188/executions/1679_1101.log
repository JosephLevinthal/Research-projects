== TEST (2019-04-27 00:17:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
if(a.upper()=="R"):
	elif(c>=0 and c<=500):
		p=c*0.44
		print("Valor total: R$",round(p,2))
	else(c>500):
		p=c*0.65
		print("Valor total: R$",round(p,2))
if(a.upper()=="C"):
	elif(c>=0 and c<=1000):
		p=c*0.55
		print("Valor total: R$",round(p,2))
	else(c>1000):
		p=c*0.6
		print("Valor total: R$",round(p,2))
if(a.upper()=="I"):
	elif(c>=0 and c<=5000):
		p=c*0.55
		print("Valor total: R$",round(p,2))
	else:(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
else:
	if(c<0):
		print("Dados invalidos")
	else:
		print("Dados invalidos")
	

-- ERROR:
File "XXXX", line 7
    elif(c>=0 and c<=500):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 00:18:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
if(a.upper()=="R"):
	if(c>=0 and c<=500):
		p=c*0.44
		print("Valor total: R$",round(p,2))
	elif(c>500):
		p=c*0.65
		print("Valor total: R$",round(p,2))
if(a.upper()=="C"):
	if(c>=0 and c<=1000):
		p=c*0.55
		print("Valor total: R$",round(p,2))
	elif(c>1000):
		p=c*0.6
		print("Valor total: R$",round(p,2))
if(a.upper()=="I"):
	if(c>=0 and c<=5000):
		p=c*0.55
		print("Valor total: R$",round(p,2))
	elif:(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
else:
	if(c<0):
		print("Dados invalidos")
	else:
		print("Dados invalidos")
	

-- ERROR:
File "XXXX", line 24
    elif:(c>5000):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 00:19:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
if(a.upper()=="R"):
	if(c>=0 and c<=500):
		p=c*0.44
		print("Valor total: R$",round(p,2))
	elif(c>500):
		p=c*0.65
		print("Valor total: R$",round(p,2))
if(a.upper()=="C"):
	if(c>=0 and c<=1000):
		p=c*0.55
		print("Valor total: R$",round(p,2))
	elif(c>1000):
		p=c*0.6
		print("Valor total: R$",round(p,2))
if(a.upper()=="I"):
	if(c>=0 and c<=5000):
		p=c*0.55
		print("Valor total: R$",round(p,2))
	elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
else:
	if(c<0):
		print("Dados invalidos")
	else:
		print("Dados invalidos")
	

-- ERROR:
File "XXXX", line 24
    elif:(c>5000):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 00:20:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entrada:",C,"e tipo",a)
if(a.upper()=="R"):
	if(c>=0 and c<=500):
		p=c*0.44
		print("Valor total: R$",round(p,2))
	elif(c>500):
		p=c*0.65
		print("Valor total: R$",round(p,2))
if(a.upper()=="C"):
	if(c>=0 and c<=1000):
		p=c*0.55
		print("Valor total: R$",round(p,2))
	elif(c>1000):
		p=c*0.6
		print("Valor total: R$",round(p,2))
if(a.upper()=="I"):
	if(c>=0 and c<=5000):
		p=c*0.55
		print("Valor total: R$",round(p,2))
	elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
else:
	if(c<0):
		print("Dados invalidos")
	else:
		print("Dados invalidos")
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print("Entrada:",C,"e tipo",a)
NameError: name 'C' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 00:21:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entrada:",c,"e tipo",a)
if(a.upper()=="R"):
	if(c>=0 and c<=500):
		p=c*0.44
		print("Valor total: R$",round(p,2))
	elif(c>500):
		p=c*0.65
		print("Valor total: R$",round(p,2))
if(a.upper()=="C"):
	if(c>=0 and c<=1000):
		p=c*0.55
		print("Valor total: R$",round(p,2))
	elif(c>1000):
		p=c*0.6
		print("Valor total: R$",round(p,2))
if(a.upper()=="I"):
	if(c>=0 and c<=5000):
		p=c*0.55
		print("Valor total: R$",round(p,2))
	elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
else:
	if(c<0):
		print("Dados invalidos")
	else:
		print("Dados invalidos")
	

-- OUTPUT:
Entrada: -56.0 e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 10:27:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entrada:",c,"kwh","e tipo",a)
if (c>=0):
	if(a.upper()=="R"):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	if(a.upper()=="C"):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	if(a.upper()=="I"):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
		else:
			print("Dados invalidos")				
else:
	print("Dados invalidos")
-- OUTPUT:
Entrada: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 10:28:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entrada:",c,"kwh","e tipo",a)
if (c>=0):
	if(a.upper()=="R"):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	if(a.upper()=="C"):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	if(a.upper()=="I"):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
		else:
			print("Dados invalidos")				
else:
	print("Dados invalidos")
-- OUTPUT:
Entrada: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 10:29:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entrada:",c,"kwh","e tipo",a)
if (c>=0):
	if(a.upper()=="R"):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	if(a.upper()=="C"):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	if(a.upper()=="I"):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
		else:
			print("Dados invalidos")				
else:
	print("Dados invalidos")
-- OUTPUT:
Entrada: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 10:30:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entrada:",c,"kwh","e tipo",a)
if (c>=0):
	if(a.upper()=="R"):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	if(a.upper()=="C"):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	if(a.upper()=="I"):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
		else:
			print("Dados invalidos")				
else:
	print("Dados invalidos")
-- OUTPUT:
Entrada: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 10:30:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entrada:",c,"kwh","e tipo",a)
if (c>=0):
	if(a.upper()=="R"):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	if(a.upper()=="C"):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	if(a.upper()=="I"):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
		else:
			print("Dados invalidos")				
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.167022
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entrada: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entrada: 955.5 kwh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 10:31:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entrada:",c,"kwh","e tipo",a.upper())
if (c>=0):
	if(a.upper()=="R"):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	if(a.upper()=="C"):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	if(a.upper()=="I"):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
		else:
			print("Dados invalidos")				
else:
	print("Dados invalidos")
-- OUTPUT:
Entrada: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 10:31:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entrada:",c,"kwh","e tipo",a.upper())
if (c>=0):
	if(a.upper()=="R"):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	if(a.upper()=="C"):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	if(a.upper()=="I"):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
		else:
			print("Dados invalidos")				
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.141774
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entrada: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entrada: 955.5 kwh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 10:32:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>=0):
	if(a.upper()=="R"):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	if(a.upper()=="C"):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	if(a.upper()=="I"):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
		else:
			print("Dados invalidos")				
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.157074
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 10:34:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>=0):
	if(a.upper()=="R"):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	if(a.upper()=="C"):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	if(a.upper()=="I"):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 10:34:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>=0):
	if(a.upper()=="R"):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	if(a.upper()=="C"):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	if(a.upper()=="I"):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.124938
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R$ 621.08
Dados invalidos
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 10:38:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>=0):
	if(a.upper()=="R"):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	if(a.upper()=="C"):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	if(a.upper()=="I"):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 10:41:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>=0):
	if(a.upper()=="R"):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	if(a.upper()=="C"):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	if(a.upper()=="I"):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
   else:(a.upper())
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 29
    else:(a.upper())
                   ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 10:41:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>=0):
	if(a.upper()=="R"):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	if(a.upper()=="C"):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	if(a.upper()=="I"):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
   else (a.upper()):
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 29
    else (a.upper()):
                    ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 10:44:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>=0):
	if(a.upper()=="R"):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	if(a.upper()=="C"):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	if(a.upper()=="I"):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
   else (a.upper()!=("R" and "I" and "C")):
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 29
    else (a.upper()!=("R" and "I" and "C")):
                                           ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 10:45:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>=0):
	if(a.upper()=="R"):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	if(a.upper()=="C"):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	if(a.upper()=="I"):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
   if (a.upper()!=("R" and "I" and "C")):
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 29
    if (a.upper()!=("R" and "I" and "C")):
                                         ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 10:45:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>=0):
	if(a.upper()=="R"):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	if(a.upper()=="C"):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	if(a.upper()=="I"):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
   if ((a.upper()!=("R" and "I" and "C"))):
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 29
    if ((a.upper()!=("R" and "I" and "C"))):
                                           ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 10:48:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>=0):
	if(a.upper()=="R"):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	if(a.upper()=="C"):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	if(a.upper()=="I"):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
   else ((a.upper()!=("R" and "I" and "C"))) :
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 29
    else ((a.upper()!=("R" and "I" and "C"))) :
                                              ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 10:50:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>=0):
	if(a.upper()=="R"):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	if(a.upper()=="C"):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	if(a.upper()=="I"):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	else: 
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 10:50:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a)
if (c>=0):
	if(a.upper()=="R"):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	if(a.upper()=="C"):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	if(a.upper()=="I"):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	else: 
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 10:52:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>=0):
	if(a.upper()=="R"):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	if(a.upper()=="C"):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	if(a.upper()=="I"):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	else: 
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 10:54:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>=0):
	if(a.upper()=="R"):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	if(a.upper()=="C"):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	if(a.upper()=="I"):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	if (a.upper()!=("R"and"I"and"C")):
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 10:54:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>=0):
	if(a.upper()=="R"):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	if(a.upper()=="C"):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	if(a.upper()=="I"):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	if (a.upper()!=("R"and"I"and"C")):
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 10:55:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>=0):
	if(a.upper()=="R"):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	if(a.upper()=="C"):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	if(a.upper()=="I"):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	if (a.upper()!=("R"and"I"and"C")):
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 10:55:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>=0):
	if(a.upper()=="R"):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	if(a.upper()=="C"):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	if(a.upper()=="I"):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	if (a.upper()!=("R"and"I"and"C")):
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 10:55:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>=0):
	if(a.upper()=="R"):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	if(a.upper()=="C"):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	if(a.upper()=="I"):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	if (a.upper()!=("R"and"I"and"C")):
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 10:56:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>=0):
	if(a.upper()=="R"):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	if(a.upper()=="C"):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	if(a.upper()=="I"):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	if (a.upper()!=("R"and"I"and"C")):
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 10:58:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>=0):
	if(a.upper()=="R"):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	if(a.upper()=="C"):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	if(a.upper()=="I"):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	if (a.upper()!=("R"and"I"and"C")):
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 10:58:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>=0):
	if(a.upper()=="R"):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	if(a.upper()=="C"):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	if(a.upper()=="I"):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	if (a.upper()!=("R"and"I"and"C")):
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 11:00:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>=0):
	if(a.upper()=="R"):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	if(a.upper()=="C"):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	if(a.upper()=="I"):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	if (a.upper()!=("R"and"I"and"C")):
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 11:04:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>=0):
	if(a.upper()=="R" and a.lower()=="r"):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	if(a.upper()=="C" and a.lower()=="c"):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	if(a.upper()=="I" and a.lower()=="i"):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 11:25:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>=0):
	if((a.upper()=="R") and (a.lower()=="r")):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	if((a.upper()=="C") and (a.lower()=="c")):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	if((a.upper()=="I") and (a.lower()=="i")):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 11:34:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>=0):
	if((a.upper()=="R") and (a.lower()=="r")):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="C") and (a.lower()=="c")):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="I") and (a.lower()=="i")):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 11:34:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>=0):
	if((a.upper()=="R") and (a.lower()=="r")):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="C") and (a.lower()=="c")):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="I") and (a.lower()=="i")):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 11:34:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>=0):
	if((a.upper()=="R") and (a.lower()=="r")):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="C") and (a.lower()=="c")):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="I") and (a.lower()=="i")):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 11:35:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>=0):
	if((a.upper()=="R") and (a.lower()=="r")):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="C") and (a.lower()=="c")):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="I") and (a.lower()=="i")):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 11:35:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>=0):
	if((a.upper()=="R") and (a.lower()=="r")):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="C") and (a.lower()=="c")):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="I") and (a.lower()=="i")):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 11:35:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>=0):
	if((a.upper()=="R") and (a.lower()=="r")):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="C") and (a.lower()=="c")):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="I") and (a.lower()=="i")):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 11:36:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>=0):
	if((a.upper()=="R") and (a.lower()=="r")):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="C") and (a.lower()=="c")):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="I") and (a.lower()=="i")):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 11:36:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>=0):
	if((a.upper()=="R") and (a.lower()=="r")):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="C") and (a.lower()=="c")):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="I") and (a.lower()=="i")):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 11:36:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>=0):
	if((a.upper()=="R") and (a.lower()=="r")):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="C") and (a.lower()=="c")):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="I") and (a.lower()=="i")):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 11:37:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>=0):
	if((a.upper()=="R") and (a.lower()=="r")):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="C") and (a.lower()=="c")):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="I") and (a.lower()=="i")):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 11:37:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>=0):
	if((a.upper()=="R") and (a.lower()=="r")):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="C") and (a.lower()=="c")):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="I") and (a.lower()=="i")):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.179186
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 11:37:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>0):
	if((a.upper()=="R") and (a.lower()=="r")):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="C") and (a.lower()=="c")):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="I") and (a.lower()=="i")):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.113666
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 11:37:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>0):
	if((a.upper()=="R") and (a.lower()=="r")):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="C") and (a.lower()=="c")):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="I") and (a.lower()=="i")):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 11:38:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh",,"e tipo",a.upper())
if (c>0):
	if((a.upper()=="R") and (a.lower()=="r")):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="C") and (a.lower()=="c")):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="I") and (a.lower()=="i")):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.125814
-- ERROR:
  File "/home/codebench/codes/1679/1101/main.py", line 6
    print("Entradas:",c,"kwh",,"e tipo",a.upper())
                              ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 11:38:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh",,"e tipo",a.upper())
if (c>0):
	if((a.upper()=="R") and (a.lower()=="r")):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="C") and (a.lower()=="c")):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="I") and (a.lower()=="i")):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.218852
-- ERROR:
  File "/home/codebench/codes/1679/1101/main.py", line 6
    print("Entradas:",c,"kwh",,"e tipo",a.upper())
                              ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 11:55:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh",,"e tipo",a.upper())
if (c>=0):
	if((a.upper()=="R") and (a.lower()=="r")):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="C") and (a.lower()=="c")):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="I") and (a.lower()=="i")):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.115948
-- ERROR:
  File "/home/codebench/codes/1679/1101/main.py", line 6
    print("Entradas:",c,"kwh",,"e tipo",a.upper())
                              ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 11:55:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>=0):
	if((a.upper()=="R") and (a.lower()=="r")):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="C") and (a.lower()=="c")):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="I") and (a.lower()=="i")):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.195344
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 11:56:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>=0):
	if((a.upper()=="R") or (a.lower()=="r")):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="C") or (a.lower()=="c")):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="I") or (a.lower()=="i")):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.225639
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 12:03:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>=0):
	if((a.upper()=="R") or (a=="r")):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="C") or (a=="c")):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="I") or (a=="i")):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 12:04:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>=0):
	if((a.upper()=="R") or (a=="r")):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="C") or (a=="c")):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="I") or (a=="i")):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 12:04:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>=0):
	if((a.upper()=="R") or (a=="r")):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="C") or (a=="c")):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="I") or (a=="i")):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 12:05:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>=0):
	if((a.upper()=="R") or (a=="r")):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="C") or (a=="c")):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="I") or (a=="i")):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 12:06:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>=0):
	if((a.upper()=="R") or (a=="r")):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="C") or (a=="c")):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="I") or (a=="i")):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 12:06:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>=0):
	if((a.upper()=="R") or (a=="r")):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="C") or (a=="c")):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="I") or (a=="i")):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 12:07:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>=0):
	if((a.upper()=="R") or (a=="r")):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="C") or (a=="c")):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="I") or (a=="i")):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 12:11:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>=0):
	if((a.upper()=="R") or (a=="r")):
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="C") or (a=="c")):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	elif((a.upper()=="I") or (a=="i")):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.156349
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 12:39:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>=0):
	if((a.upper()=="R") or (a=="r")):
		if(c<=500):
			p=c*0.44
			print("Valor total: R",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R",round(p,2))
	elif((a.upper()=="C") or (a=="c")):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R",round(p,2))
	elif((a.upper()=="I") or (a=="i")):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.140611
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 12:39:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalcao: ")
print("Entradas:",c,"kwh","e tipo",a.upper())
if (c>0):
	if((a.upper()=="R") or (a=="r")):
		if(c<=500):
			p=c*0.44
			print("Valor total: R",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R",round(p,2))
	elif((a.upper()=="C") or (a=="c")):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R",round(p,2))
	elif((a.upper()=="I") or (a=="i")):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.12772
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 12:48:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalacao: ")
print("Entradas:",c,"kwh e tipo",a.upper())
if (c>=0):
	if((a.upper()=="R") or (a=="r")):
		if(c<=500):
			p=c*0.44
			print("Valor total: R",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R",round(p,2))
	elif((a.upper()=="C") or (a=="c")):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R",round(p,2))
	elif((a.upper()=="I") or (a=="i")):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.180367
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 12:48:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalacao: ")
print("Entradas:",c,"kwh e tipo",a.upper())
if (c>=0):
	if((a.upper()=="R") or (a=="r")):
		if(c<=500):
			p=c*0.44
			print("Valor total: R",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R",round(p,2))
	elif((a.upper()=="C") or (a=="c")):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R",round(p,2))
	elif((a.upper()=="I") or (a=="i")):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 12:51:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalacao: ")
print("Entradas:",c,"kWh e tipo",a.upper())
if (c>=0):
	if((a.upper()=="R") or (a=="r")):
		if(c<=500):
			p=c*0.44
			print("Valor total: R",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R",round(p,2))
	elif((a.upper()=="C") or (a=="c")):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R",round(p,2))
	elif((a.upper()=="I") or (a=="i")):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.164158
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 12:52:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalacao: ")
print("Entradas:",c,"kWh e tipo",a)
if (c>=0):
	if((a.upper()=="R") or (a=="r")):
		if(c<=500):
			p=c*0.44
			print("Valor total: R",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R",round(p,2))
	elif((a.upper()=="C") or (a=="c")):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R",round(p,2))
	elif((a.upper()=="I") or (a=="i")):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 12:52:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalacao: ")
print("Entradas:",c,"kWh e tipo",a)
if (c>=0):
	if((a.upper()=="R") or (a=="r")):
		if(c<=500):
			p=c*0.44
			print("Valor total: R",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R",round(p,2))
	elif((a.upper()=="C") or (a=="c")):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R",round(p,2))
	elif((a.upper()=="I") or (a=="i")):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.150252
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 12:55:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalacao: ")
print("Entradas:",c,"kWh e tipo",a)
if (c>=0):
	if((a.upper()=="R") or (a=="r")):
		if(c<=500):
			p=c*0.44
			print("Valor total: R",round(p,2))
		elif(c>500):
			p=c*0.65
			print("Valor total: R",round(p,2))
	elif((a.upper()=="C") or (a=="c")):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R",round(p,2))
		elif(c>1000):
			p=c*0.6
			print("Valor total: R",round(p,2))
	elif((a.upper()=="I") or (a=="i")):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R",round(p,2))
		elif(c>5000):
			p=c*0.6
			print("Valor total: R",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 13:00:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalacao: ")
print("Entradas:",c,"kWh e tipo",a)
if (c>=0):
	if((a.upper()=="R") or (a=="r")):
		if(c<=500):
			p=c*0.44
			print("Valor total: R",round(p,2))
		else(c>500):
			p=c*0.65
			print("Valor total: R",round(p,2))
	elif((a.upper()=="C") or (a=="c")):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R",round(p,2))
		else(c>1000):
			p=c*0.6
			print("Valor total: R",round(p,2))
	elif((a.upper()=="I") or (a=="i")):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R",round(p,2))
		else(c>5000):
			p=c*0.6
			print("Valor total: R",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.131029
-- ERROR:
  File "/home/codebench/codes/1679/1101/main.py", line 12
    else(c>500):
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:06:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalacao: ").upper()
print("Entradas:",c,"kWh e tipo",a)
if (c>=0):
	if(a=="R") :
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		else(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	elif(a=="C"):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		else(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	elif(a=="I"):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		else(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 12
    else(c>500):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:07:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalacao: ").upper()
print("Entradas:",c,"kWh e tipo",a)
if (c>=0):
	if(a=="R") :
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		else (c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	elif(a=="C"):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		else(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	elif(a=="I"):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		else(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 12
    else (c>500):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:07:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalacao: ").upper()
print("Entradas:",c,"kWh e tipo",a)
if (c>=0):
	if(a=="R") :
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		else (c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	elif(a=="C"):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		else(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	elif(a=="I"):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		else(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 12
    else (c>500):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:08:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalacao: ").upper()
print("Entradas:",c,"kWh e tipo",a)
if (c>=0):
	if(a=="R") :
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		else(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	elif(a=="C"):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		else(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	elif(a=="I"):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		else(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 12
    else(c>500):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:09:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalacao: ").upper()
print("Entradas:",c,"kWh e tipo",a)
if (c>=0):
	if(a=="R") :
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		else(c>500):
			p=c*0.65
			print("Valor total: R$",round(p,2))
	elif(a=="C"):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		else(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	elif(a=="I"):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		else(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 12
    else(c>500):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:10:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalacao: ").upper()
print("Entradas:",c,"kWh e tipo",a)
if (c>=0):
	if(a=="R") :
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		else:
			p=c*0.65
			print("Valor total: R$",round(p,2))
	elif(a=="C"):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		else(c>1000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	elif(a=="I"):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		else(c>5000):
			p=c*0.6
			print("Valor total: R$",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 19
    else(c>1000):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:11:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalacao: ").upper()
print("Entradas:",c,"kWh e tipo",a)
if (c>=0):
	if(a=="R") :
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		else:
			p=c*0.65
			print("Valor total: R$",round(p,2))
	elif(a=="C"):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		else:
			p=c*0.6
			print("Valor total: R$",round(p,2))
	elif(a=="I"):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		else:
			p=c*0.6
			print("Valor total: R$",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:11:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalacao: ").upper()
print("Entradas:",c,"kWh e tipo",a)
if (c>=0):
	if(a=="R") :
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		else:
			p=c*0.65
			print("Valor total: R$",round(p,2))
	elif(a=="C"):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		else:
			p=c*0.6
			print("Valor total: R$",round(p,2))
	elif(a=="I"):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		else:
			p=c*0.6
			print("Valor total: R$",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 13:12:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c=float(input("consumo de energia: "))
a=input("tipo de instalacao: ").upper()
print("Entradas:",c,"kWh e tipo",a)
if (c>=0):
	if(a=="R") :
		if(c<=500):
			p=c*0.44
			print("Valor total: R$",round(p,2))
		else:
			p=c*0.65
			print("Valor total: R$",round(p,2))
	elif(a=="C"):
		if(c<=1000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		else:
			p=c*0.6
			print("Valor total: R$",round(p,2))
	elif(a=="I"):
		if(c<=5000):
			p=c*0.55
			print("Valor total: R$",round(p,2))
		else:
			p=c*0.6
			print("Valor total: R$",round(p,2))
	else:
		print("Dados invalidos")				
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.186167
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
