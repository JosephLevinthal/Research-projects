== SUBMITION (2019-04-23 21:44:11) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))


if ((a > 0) and ( b > 0) and (c > 0)):
	
	if ((a + b > c) and (a + c > b) and (b + c > a)):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")

-- EXECUTION TIME:
0.165302
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 12, in <module>
    area = sqrt(s * (s-a) * (s-b) * (s-c))
NameError: name 'sqrt' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 21:57:46) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))


if (a = b = c):
	"Tipo de tringulo" = "equilatero"
	


-- ERROR:
File "XXXX", line 8
    if (a = b = c):
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 21:58:24) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))


if (a = b) and (a = c):
	"Tipo de tringulo" = "equilatero"
	


-- ERROR:
File "XXXX", line 8
    if (a = b) and (a = c):
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 21:58:49) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))


if ((a = b) and (a = c)):
	"Tipo de tringulo" = "equilatero"
	


-- ERROR:
File "XXXX", line 8
    if ((a = b) and (a = c)):
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 21:59:19) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))


if ((a == b) and (a == c)):
	"Tipo de tringulo" = "equilatero"
	


-- ERROR:
File "XXXX", line 9
    "Tipo de tringulo" = "equilatero"
    ^
SyntaxError: can't assign to literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 21:59:42) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))


if ((a == b) and (a == c)):
	Tipo de tringulo = "equilatero"
	


-- ERROR:
File "XXXX", line 9
    Tipo de tringulo = "equilatero"
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 21:59:59) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))


if ((a == b) and (a == c)):
	d = "equilatero"
	


-- ERROR:
File "XXXX", line 9
    Tipo de tringulo = "equilatero"
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 22:00:52) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))


if ((a == b) and (a == c)):
	d = "equilatero"
print(d)
	


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 22:06:52) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))


if ((a == b) and (a == c)):
	d = "equilatero"
   elif (a != b) and (a = c):
	d = "isosceles"
	elif (a !=b) and (a != c) and (b != c):
	d = "escanelo"
print(d)
	


-- ERROR:
File "XXXX", line 10
    elif (a != b) and (a = c):
                             ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 22:09:56) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))


if ((a == b) and (a == c)):
	d = "equilatero"
   else (a != b) and (a = c):
	d = "isosceles"
	else (a !=b) and (a != c) and (b != c):
	d = "escanelo"
print(d)
	


-- ERROR:
File "XXXX", line 10
    else (a != b) and (a = c):
                             ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 22:10:21) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))


if ((a == b) and (a == c)):
	d = "equilatero"
   elif ((a != b) and (a = c)):
	d = "isosceles"
	elif ((a !=b) and (a != c) and (b != c)):
	d = "escanelo"
print(d)
	


-- ERROR:
File "XXXX", line 10
    elif ((a != b) and (a = c)):
                               ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 22:10:38) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))


if ((a == b) and (a == c)):
	d = "equilatero"
   else ((a != b) and (a = c)):
	d = "isosceles"
	else ((a !=b) and (a != c) and (b != c)):
	d = "escanelo"
print(d)
	


-- ERROR:
File "XXXX", line 10
    else ((a != b) and (a = c)):
                               ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 22:11:06) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))


if ((a == b) and (a == c)):
	d = "equilatero"
else ((a != b) and (a = c)):
	d = "isosceles"
else ((a !=b) and (a != c) and (b != c)):
	d = "escanelo"


	
print(d)
	


-- ERROR:
File "XXXX", line 10
    else ((a != b) and (a = c)):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 22:12:05) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))


if ((a == b) and (a == c)):
	d = "equilatero"
else ((a != b) and (a = c)):
	d = "isosceles"
else ((a !=b) and (a != c) and (b != c)):
	d = "escanelo"


	
print(d)
	


-- ERROR:
File "XXXX", line 10
    else ((a != b) and (a = c)):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 22:12:13) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))


if ((a == b) and (a == c)):
	d = "equilatero"


	
print(d)
	


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    print(d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 22:12:36) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))


if ((a == b) and (a == c)):
	d = "equilatero"
if ((a != b) and (a = c)):
	d = "isosceles"
if ((a !=b) and (a != c) and (b != c)):
	d = "escanelo"


	
print(d)
	


-- ERROR:
File "XXXX", line 10
    if ((a != b) and (a = c)):
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 22:14:00) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))


if ((a == b) and (a == c)):
	d = "equilatero"
if ((a != b) and (a == c)):
	d = "isosceles"
if ((a !=b) and (a != c) and (b != c)):
	d = "escanelo"


	
print(d)
	


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 17, in <module>
    print(d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 22:14:17) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))


if ((a == b) and (a == c)):
	d = "equilatero"
elif ((a != b) and (a == c)):
	d = "isosceles"
elif ((a !=b) and (a != c) and (b != c)):
	d = "escanelo"



	
print(d)
	


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 18, in <module>
    print(d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 22:14:40) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))


if ((a == b) and (a == c)):
	d = "equilatero"
elif ((a != b) and (a == c)):
	d = "isosceles"
elif ((a !=b) and (a != c) and (b != c)):
	d = "escanelo"
else:
	d = "invalido"
print(d)


	
print(d)
	


-- EXECUTION TIME:
0.197314
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
invalido
invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escanelo
escanelo
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
escanelo
escanelo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 22:14:46) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if ((a == b) and (a == c)):
	d = "equilatero"
elif ((a != b) and (a == c)):
	d = "isosceles"
elif ((a !=b) and (a != c) and (b != c)):
	d = "escanelo"
else:
	d = "invalido"
print(d)


	
print(d)
	


-- OUTPUT:
invalido
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 22:15:06) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if ((a == b) and (a == c)):
	d = "equilatero"
   if ((a != b) and (a == c)):
	d = "isosceles"
   if ((a !=b) and (a != c) and (b != c)):
	d = "escanelo"
else:
	d = "invalido"
print(d)


	
print(d)
	


-- EXECUTION TIME:
0.173422
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 9
    if ((a != b) and (a == c)):
                              ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 22:15:07) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if ((a == b) and (a == c)):
	d = "equilatero"
   if ((a != b) and (a == c)):
	d = "isosceles"
   if ((a !=b) and (a != c) and (b != c)):
	d = "escanelo"
else:
	d = "invalido"
print(d)


	
print(d)
	


-- ERROR:
File "XXXX", line 9
    if ((a != b) and (a == c)):
                              ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 22:15:14) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if ((a == b) and (a == c)):
	d = "equilatero"
if ((a != b) and (a == c)):
	d = "isosceles"
   if ((a !=b) and (a != c) and (b != c)):
	d = "escanelo"
else:
	d = "invalido"
print(d)


	
print(d)
	


-- ERROR:
File "XXXX", line 11
    if ((a !=b) and (a != c) and (b != c)):
                                          ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 22:15:17) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if ((a == b) and (a == c)):
	d = "equilatero"
if ((a != b) and (a == c)):
	d = "isosceles"
if ((a !=b) and (a != c) and (b != c)):
	d = "escanelo"
else:
	d = "invalido"
print(d)


	
print(d)
	


-- OUTPUT:
invalido
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 22:18:01) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if ((a == b) and (a == c)):
	d = "equilatero"
if ((a != b) and (a == c)):
	d = "isosceles"
if ((a !=b) and (a != c) and (b != c)):
	d = "escanelo"
if ((a < 0) or (b < 0) or (c < 0)):
	d = "invalido"
print(d)


	
print(d)
	


-- EXECUTION TIME:
0.183802
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 15, in <module>
    print(d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 22:18:01) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if ((a == b) and (a == c)):
	d = "equilatero"
if ((a != b) and (a == c)):
	d = "isosceles"
if ((a !=b) and (a != c) and (b != c)):
	d = "escanelo"
if ((a < 0) or (b < 0) or (c < 0)):
	d = "invalido"
print(d)


	
print(d)
	


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 15, in <module>
    print(d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 22:18:14) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if ((a == b) and (a == c)):
	d = "equilatero"
if ((a != b) and (a == c)):
	d = "isosceles"
if ((a !=b) and (a != c) and (b != c)):
	d = "escanelo"
if ((a < 0) or (b < 0) or (c < 0)):
	d = "invalido"
print(d)




-- EXECUTION TIME:
0.15859
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 15, in <module>
    print(d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 22:18:15) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if ((a == b) and (a == c)):
	d = "equilatero"
if ((a != b) and (a == c)):
	d = "isosceles"
if ((a !=b) and (a != c) and (b != c)):
	d = "escanelo"
if ((a < 0) or (b < 0) or (c < 0)):
	d = "invalido"
print(d)




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 15, in <module>
    print(d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 22:18:21) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if ((a == b) and (a == c)):
	d = "equilatero"
if ((a != b) and (a == c)):
	d = "isosceles"
if ((a !=b) and (a != c) and (b != c)):
	d = "escanelo"
else:
	d = "invalido"
print(d)




-- OUTPUT:
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 22:18:23) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if ((a == b) and (a == c)):
	d = "equilatero"
if ((a != b) and (a == c)):
	d = "isosceles"
if ((a !=b) and (a != c) and (b != c)):
	d = "escanelo"
else:
	d = "invalido"
print(d)




-- EXECUTION TIME:
0.141192
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escanelo
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
escanelo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 22:18:26) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if ((a == b) and (a == c)):
	d = "equilatero"
if ((a != b) and (a == c)):
	d = "isosceles"
if ((a !=b) and (a != c) and (b != c)):
	d = "escanelo"
else:
	d = "invalido"
print(d)




-- OUTPUT:
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 22:19:23) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if ((a == b) and (a == c)):
	d = "equilatero"
if ((a != b) and (a == c)):
	d = "isosceles"
if ((a !=b) and (a != c) and (b != c)):
	d = "escanelo"
else:
	d = "invalido"
print(d)




-- OUTPUT:
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 22:19:34) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if ((a == b) and (a == c)):
	d = "equilatero"
if ((a != b) and (a == c)):
	d = "isosceles"
if ((a !=b) and (a != c) and (b != c)):
	d = "escanelo"

print(d)




-- EXECUTION TIME:
0.122323
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 14, in <module>
    print(d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 22:19:37) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if ((a == b) and (a == c)):
	d = "equilatero"
if ((a != b) and (a == c)):
	d = "isosceles"
if ((a !=b) and (a != c) and (b != c)):
	d = "escanelo"

print(d)




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    print(d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 22:19:44) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if ((a == b) and (a == c)):
	d = "equilatero"
if ((a != b) and (a == c)):
	d = "isosceles"
if ((a !=b) and (a != c) and (b != c)):
	d = "escanelo"

print(d)




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    print(d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 22:19:51) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if ((a == b) and (a == c)):
	d = "equilatero"
if ((a != b) and (a == c)):
	d = "isosceles"
if ((a !=b) and (a != c) and (b != c)):
	d = "escanelo"

print(d)




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    print(d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 22:20:50) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if ((a == b) and (a == c)):
	d = "equilatero"
if ((a != b) and (a == c)):
	d = "isosceles"
if ((a !=b) and (a != c) and (b != c)):
	d = "escanelo"

print(d)




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    print(d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 22:20:58) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if ((a == b) and (a == c)):
	d = "equilatero"
if ((a != b) and (a == c)):
	d = "isosceles"
if ((a !=b) and (a != c) and (b != c)):
	d = "escanelo"

print(d)




-- EXECUTION TIME:
0.178739
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 14, in <module>
    print(d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 15:57:19) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

elif ((a == b) and (a == c)):
	d = "equilatero"
elif ((a != b) and (a == c)):
	d = "isosceles"
elif ((a !=b) and (a != c) and (b != c)):
	d = "escanelo"
else:
	d = "invalido"
print(d)




-- EXECUTION TIME:
0.167946
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 9
    elif ((a == b) and (a == c)):
       ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:57:20) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

elif ((a == b) and (a == c)):
	d = "equilatero"
elif ((a != b) and (a == c)):
	d = "isosceles"
elif ((a !=b) and (a != c) and (b != c)):
	d = "escanelo"
else:
	d = "invalido"
print(d)




-- ERROR:
File "XXXX", line 9
    elif ((a == b) and (a == c)):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:57:43) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

elif ((a == b) and (a == c)):
	d = "equilatero"
elif ((a != b) and (a == c)):
	d = "isosceles"
elif ((a !=b) and (a != c) and (b != c)):
	d = "escanelo"
else:
	d = "invalido"
print(d)




-- ERROR:
File "XXXX", line 9
    elif ((a == b) and (a == c)):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:58:11) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

   elif ((a == b) and (a == c)):
	d = "equilatero"
   elif ((a != b) and (a == c)):
	d = "isosceles"
   elif ((a !=b) and (a != c) and (b != c)):
	d = "escanelo"
else:
	d = "invalido"
print(d)




-- ERROR:
File "XXXX", line 9
    elif ((a == b) and (a == c)):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:58:12) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

   elif ((a == b) and (a == c)):
	d = "equilatero"
   elif ((a != b) and (a == c)):
	d = "isosceles"
   elif ((a !=b) and (a != c) and (b != c)):
	d = "escanelo"
else:
	d = "invalido"
print(d)




-- ERROR:
File "XXXX", line 9
    elif ((a == b) and (a == c)):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:58:15) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

   elif ((a == b) and (a == c)):
	d = "equilatero"
   elif ((a != b) and (a == c)):
	d = "isosceles"
   elif ((a !=b) and (a != c) and (b != c)):
	d = "escanelo"
else:
	d = "invalido"
print(d)




-- ERROR:
File "XXXX", line 9
    elif ((a == b) and (a == c)):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:58:18) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

   elif ((a == b) and (a == c)):
	d = "equilatero"
   elif ((a != b) and (a == c)):
	d = "isosceles"
   elif ((a !=b) and (a != c) and (b != c)):
	d = "escanelo"
else:
	d = "invalido"
print(d)




-- ERROR:
File "XXXX", line 9
    elif ((a == b) and (a == c)):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:58:26) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

   if ((a == b) and (a == c)):
	d = "equilatero"
   elif ((a != b) and (a == c)):
	d = "isosceles"
   elif ((a !=b) and (a != c) and (b != c)):
	d = "escanelo"
else:
	d = "invalido"
print(d)




-- ERROR:
File "XXXX", line 10
    d = "equilatero"
                   ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:58:33) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

if ((a == b) and (a == c)):
	d = "equilatero"
   elif ((a != b) and (a == c)):
	d = "isosceles"
   elif ((a !=b) and (a != c) and (b != c)):
	d = "escanelo"
else:
	d = "invalido"
print(d)




-- ERROR:
File "XXXX", line 9
    if ((a == b) and (a == c)):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:58:37) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

   if ((a == b) and (a == c)):
	d = "equilatero"
   elif ((a != b) and (a == c)):
	d = "isosceles"
   elif ((a !=b) and (a != c) and (b != c)):
	d = "escanelo"
else:
	d = "invalido"
print(d)




-- ERROR:
File "XXXX", line 10
    d = "equilatero"
                   ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:58:43) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

   	if ((a == b) and (a == c)):
	d = "equilatero"
   elif ((a != b) and (a == c)):
	d = "isosceles"
   elif ((a !=b) and (a != c) and (b != c)):
	d = "escanelo"
else:
	d = "invalido"
print(d)




-- ERROR:
File "XXXX", line 10
    d = "equilatero"
                   ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:58:47) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

   	if ((a == b) and (a == c)):
		d = "equilatero"
   elif ((a != b) and (a == c)):
	d = "isosceles"
   elif ((a !=b) and (a != c) and (b != c)):
	d = "escanelo"
else:
	d = "invalido"
print(d)




-- ERROR:
File "XXXX", line 10
    d = "equilatero"
                   ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:59:02) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

   if ((a == b) and (a == c)):
		d = "equilatero"
   elif ((a != b) and (a == c)):
	d = "isosceles"
   elif ((a !=b) and (a != c) and (b != c)):
	d = "escanelo"
else:
	d = "invalido"
print(d)




-- ERROR:
File "XXXX", line 10
    d = "equilatero"
                   ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:59:12) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

   if ((a == b) and (a == c)):
		d = "equilatero"
   elif ((a != b) and (a == c)):
		d = "isosceles"
   elif ((a !=b) and (a != c) and (b != c)):
		d = "escanelo"
else:
	d = "invalido"
print(d)




-- ERROR:
File "XXXX", line 10
    d = "equilatero"
                   ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:59:20) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

   if ((a == b) and (a == c)):
		                     d = "equilatero"
   elif ((a != b) and (a == c)):
		d = "isosceles"
   elif ((a !=b) and (a != c) and (b != c)):
		d = "escanelo"
else:
	d = "invalido"
print(d)




-- ERROR:
File "XXXX", line 12
    d = "isosceles"
                  ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:59:26) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

   if ((a == b) and (a == c)):
		d = "equilatero"
   elif ((a != b) and (a == c)):
		d = "isosceles"
   elif ((a !=b) and (a != c) and (b != c)):
		d = "escanelo"
else:
	d = "invalido"
print(d)




-- ERROR:
File "XXXX", line 10
    d = "equilatero"
                   ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:59:42) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a == b) and (a == c)):
		d = "equilatero"
   elif ((a != b) and (a == c)):
		d = "isosceles"
   elif ((a !=b) and (a != c) and (b != c)):
		d = "escanelo"
else:
	d = "invalido"
print(d)




-- ERROR:
File "XXXX", line 11
    elif ((a != b) and (a == c)):
                                ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:59:54) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a == b) and (a == c)):
		d = "equilatero"
	elif ((a != b) and (a == c)):
		d = "isosceles"
   elif ((a !=b) and (a != c) and (b != c)):
		d = "escanelo"
else:
	d = "invalido"
print(d)




-- ERROR:
File "XXXX", line 13
    elif ((a !=b) and (a != c) and (b != c)):
                                            ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:59:58) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a == b) and (a == c)):
		d = "equilatero"
	elif ((a != b) and (a == c)):
		d = "isosceles"
	elif ((a !=b) and (a != c) and (b != c)):
		d = "escanelo"
else:
	d = "invalido"
print(d)




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 17, in <module>
    print(d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:00:10) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a == b) and (a == c)):
		d = "equilatero"
	elif ((a != b) and (a == c)):
		d = "isosceles"
	elif ((a !=b) and (a != c) and (b != c)):
		d = "escanelo"
else:
	d = "invalido"
print(d)




-- EXECUTION TIME:
0.128069
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 17, in <module>
    print(d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:00:19) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a == b) and (a == c)):
		d = "equilatero"
	elif ((a != b) and (a == c)):
		d = "isosceles"
	elif ((a !=b) and (a != c) and (b != c)):
		d = "escanelo"
else:
	d = "invalido"
print(d)




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 17, in <module>
    print(d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:00:35) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a == b) and (a == c)):
		d = "equilatero"
	elif ((a != b) and (a == c)):
		d = "isosceles"
	elif ((a !=b) and (a != c) and (b != c)):
		d = "escaleno"
else:
	d = "invalido"
print(d)




-- EXECUTION TIME:
0.182058
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 17, in <module>
    print(d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:00:36) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a == b) and (a == c)):
		d = "equilatero"
	elif ((a != b) and (a == c)):
		d = "isosceles"
	elif ((a !=b) and (a != c) and (b != c)):
		d = "escaleno"
else:
	d = "invalido"
print(d)




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 17, in <module>
    print(d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:01:36) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a == b) and (a == c)):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b):
		d = "isosceles"
	elif ((a !=b) and (a != c) and (b != c)):
		d = "escaleno"
else:
	d = "invalido"
print(d)




-- ERROR:
File "XXXX", line 11
    elif ((a != b) and (a == c)) or ((a != c) and (a == b):
                                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:01:37) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a == b) and (a == c)):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b):
		d = "isosceles"
	elif ((a !=b) and (a != c) and (b != c)):
		d = "escaleno"
else:
	d = "invalido"
print(d)




-- ERROR:
File "XXXX", line 11
    elif ((a != b) and (a == c)) or ((a != c) and (a == b):
                                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:01:38) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a == b) and (a == c)):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b):
		d = "isosceles"
	elif ((a !=b) and (a != c) and (b != c)):
		d = "escaleno"
else:
	d = "invalido"
print(d)




-- ERROR:
File "XXXX", line 11
    elif ((a != b) and (a == c)) or ((a != c) and (a == b):
                                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:02:21) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a == b) and (a == c)):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b):
		d = "isosceles"
	elif ((a !=b) and (a != c) and (b != c)):
		d = "escaleno"
else:
	d = "invalido"
print(d)




-- ERROR:
File "XXXX", line 11
    elif ((a != b) and (a == c)) or ((a != c) and (a == b):
                                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:02:46) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a == b) and (a == c)):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b):
		d = "isosceles"
	elif ((a !=b) and (a != c) and (b != c)):
		d = "escaleno"
else:
	d = "invalido"
print(d)




-- ERROR:
File "XXXX", line 11
    elif ((a != b) and (a == c)) or ((a != c) and (a == b):
                                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:02:48) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a == b) and (a == c)):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b):
		d = "isosceles"
	elif ((a !=b) and (a != c) and (b != c)):
		d = "escaleno"
else:
	d = "invalido"
print(d)




-- ERROR:
File "XXXX", line 11
    elif ((a != b) and (a == c)) or ((a != c) and (a == b):
                                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:03:02) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a == b) and (a == c)):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a !=b) and (a != c) and (b != c)):
		d = "escaleno"
else:
	d = "invalido"
print(d)




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 17, in <module>
    print(d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:04:11) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a == b) and (a == c)):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a + b != c) and (a + c != b) and (b + c != a)):
		d = "escaleno"
else:
	d = "invalido"
print(d)




-- EXECUTION TIME:
0.18126
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:04:12) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a == b) and (a == c)):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a + b != c) and (a + c != b) and (b + c != a)):
		d = "escaleno"
else:
	d = "invalido"
print(d)




-- OUTPUT:
escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:04:34) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a == b) and (a == c)):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a + b != c) and (a + c != b) and (b + c != a)):
		d = "escaleno"
else:
	d = "invalido"
print(d)




-- OUTPUT:
escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:04:56) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a == b) and (a == c)):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a + b != c) and (a + c != b) and (b + c != a)):
		d = "escaleno"
print (d)
else:
	d = "invalido"
print(d)




-- ERROR:
File "XXXX", line 16
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:05:04) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a == b) and (a == c)):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a + b != c) and (a + c != b) and (b + c != a)):
		d = "escaleno"
else:
	d = "invalido"
print(d)




-- OUTPUT:
escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:05:23) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a == b) and (a == c)):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a + b != c) and (a + c != b) and (b + c != a)):
		d = "escaleno"
else:
	d = "invalido"
	print(d)
print(d)




-- OUTPUT:
escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:06:54) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a == b) and (a == c)):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a != c) and (a != b) :
		d = "escaleno"
else:
	d = "invalido"





-- ERROR:
File "XXXX", line 13
    elif ((a != c) and (a != b) :
                                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:06:56) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a == b) and (a == c)):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a != c) and (a != b) :
		d = "escaleno"
else:
	d = "invalido"





-- ERROR:
File "XXXX", line 13
    elif ((a != c) and (a != b) :
                                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:06:57) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a == b) and (a == c)):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a != c) and (a != b):
		d = "escaleno"
else:
	d = "invalido"





-- ERROR:
File "XXXX", line 13
    elif ((a != c) and (a != b):
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:06:59) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a == b) and (a == c)):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a != c) and (a != b):
		d = "escaleno"
else:
	d = "invalido"





-- ERROR:
File "XXXX", line 13
    elif ((a != c) and (a != b):
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:07:05) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a == b) and (a == c)):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a != c) and (a != b)):
		d = "escaleno"
else:
	d = "invalido"





-- ERROR:
File "XXXX", line 13
    elif ((a != c) and (a != b):
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:07:07) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a == b) and (a == c)):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a != c) and (a != b)):
		d = "escaleno"
else:
	d = "invalido"





-- EXECUTION TIME:
0.222378
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:

-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:

-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:07:45) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if (a == b == c):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a != c) and (a != b)):
		d = "escaleno"
else:
	d = "invalido"





-- EXECUTION TIME:
0.167488
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:

-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:

-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:07:46) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if (a == b == c):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a != c) and (a != b)):
		d = "escaleno"
else:
	d = "invalido"





-- ERROR:
File "XXXX", line 13
    elif ((a != c) and (a != b):
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:08:01) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if (a == b == c):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a != c) and (a != b)):
		d = "escaleno"
else:
	d = "invalido"
	print(d)





-- EXECUTION TIME:
0.134566
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:

-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:

-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:08:02) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if (a == b == c):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a != c) and (a != b)):
		d = "escaleno"
else:
	d = "invalido"
	print(d)





-- ERROR:
File "XXXX", line 13
    elif ((a != c) and (a != b):
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:08:11) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if (a == b == c):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a != c) and (a != b)):
		d = "escaleno"
else:
	d = "invalido"
print(d)





-- OUTPUT:
escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:10:58) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if (a == b == c):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"
print(d)





-- EXECUTION TIME:
0.151072
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 17, in <module>
    print(d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:10:59) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if (a == b == c):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"
print(d)





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 17, in <module>
    print(d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:11:06) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if (a == b == c):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"
print(d)





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 17, in <module>
    print(d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:11:08) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if (a == b == c):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"
print(d)





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 17, in <module>
    print(d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:11:12) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if (a == b == c):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"
print(d)





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 17, in <module>
    print(d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:11:16) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if (a == b == c):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"
print(d)





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 17, in <module>
    print(d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:11:27) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if (a == b == c):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"
print(d)





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 17, in <module>
    print(d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:11:28) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if (a == b == c):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"
print(d)





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 17, in <module>
    print(d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:11:28) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if (a == b == c):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"
print(d)





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 17, in <module>
    print(d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:11:29) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if (a == b == c):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"
print(d)





-- EXECUTION TIME:
0.13804
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 17, in <module>
    print(d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:12:32) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if (a == b == c):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"
print("Tipo de triangulo" ,d)





-- EXECUTION TIME:
0.152552
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 17, in <module>
    print("Tipo de triangulo" ,d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:12:33) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if (a == b == c):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"
print("Tipo de triangulo" ,d)





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 17, in <module>
    print("Tipo de triangulo" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:12:43) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if (a == b == c):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"
print("Tipo de triangulo:" ,d)





-- EXECUTION TIME:
0.27301
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 17, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:12:44) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if (a == b == c):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"
print("Tipo de triangulo:" ,d)





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 17, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:14:33) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if (a == b == c):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"

print("Entradas:" , a)
print("Entradas:" , b)
print("Entradas:" , c)


print("Tipo de triangulo:" ,d)





-- EXECUTION TIME:
0.277841
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 23, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:14:34) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if (a == b == c):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"

print("Entradas:" , a)
print("Entradas:" , b)
print("Entradas:" , c)


print("Tipo de triangulo:" ,d)





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 23, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:14:51) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if (a == b == c):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"

print("Entradas:" , a , b , c)



print("Tipo de triangulo:" ,d)





-- EXECUTION TIME:
0.157917
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 22, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:14:52) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if (a == b == c):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"

print("Entradas:" , a , b , c)



print("Tipo de triangulo:" ,d)





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 22, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:15:57) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if (a == b == c):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"

print("Entradas:" "," a "," b "," c)



print("Tipo de triangulo:" ,d)





-- ERROR:
File "XXXX", line 18
    print("Entradas:" "," a "," b "," c)
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:16:24) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if (a == b == c):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"

print("Entradas:" a ,",", b ,",", c)



print("Tipo de triangulo:" ,d)





-- ERROR:
File "XXXX", line 18
    print("Entradas:" a ,",", b ,",", c)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:16:34) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if (a == b == c):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a ,",", b ,",", c)



print("Tipo de triangulo:" ,d)





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 22, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:16:36) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if (a == b == c):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a ,",", b ,",", c)



print("Tipo de triangulo:" ,d)





-- EXECUTION TIME:
0.144618
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 22, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:16:37) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if (a == b == c):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a ,",", b ,",", c)



print("Tipo de triangulo:" ,d)





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 22, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:17:15) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if (a == b == c):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a ,",", b ,",", c)



print("Tipo de triangulo:" ,d)





-- EXECUTION TIME:
0.160935
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 22, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:17:39) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if (a == b == c):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a ,",", b ,",", c)



print("Tipo de triangulo:" ,d)





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 22, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:17:43) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if (a == b == c):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a ,",", b ,",", c)



print("Tipo de triangulo:" ,d)





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 22, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:17:48) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if (a == b == c):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a ,",", b ,",", c)



print("Tipo de triangulo:" ,d)





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 22, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:17:53) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if (a == b == c):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a ,",", b ,",", c)



print("Tipo de triangulo:" ,d)





-- EXECUTION TIME:
0.13399
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 22, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:17:55) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if (a == b == c):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a ,",", b ,",", c)



print("Tipo de triangulo:" ,d)





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 22, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:18:01) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if (a == b == c):
		d = "equilatero"
	elif ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	elif ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a ,",", b ,",", c)



print("Tipo de triangulo:" ,d)





-- EXECUTION TIME:
0.187654
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 22, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:18:50) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if (a == b == c):
		d = "equilatero"
	if ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	if ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a ,",", b ,",", c)



print("Tipo de triangulo:" ,d)





-- EXECUTION TIME:
0.181217
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 22, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:18:51) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if (a == b == c):
		d = "equilatero"
	if ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	if ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a ,",", b ,",", c)



print("Tipo de triangulo:" ,d)





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 22, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:19:00) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if (a == b == c):
		d = "equilatero"
	if ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	if ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a ,",", b ,",", c)



print("Tipo de triangulo:" ,d)





-- EXECUTION TIME:
0.135782
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 22, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:25:52) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if (a == b == c):
		d = "equilatero"
	if ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	if ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a ,",", b ,",", c)
print("Tipo de triangulo:" ,d)





-- EXECUTION TIME:
0.118105
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 19, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:26:25) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if (a == b == c):
		d = "equilatero"
	if ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	if ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a ,",", b ,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 19, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:26:48) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if (a == b == c):
		d = "equilatero"
	if ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	if ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- EXECUTION TIME:
0.19053
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 19, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:26:49) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if (a == b == c):
		d = "equilatero"
	if ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	if ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 19, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:27:19) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if (a == b == c):
		d = "equilatero"
	if ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	if ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a",", b ",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
File "XXXX", line 18
    print("Entradas:",  a",", b ",", c)
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:27:24) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if (a == b == c):
		d = "equilatero"
	if ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	if ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 19, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:27:30) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if (a == b == c):
		d = "equilatero"
	if ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	if ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 19, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:28:53) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if (a+b>c) or (a+c>b) or (b+c>a)
	if (a == b == c):
		d = "equilatero"
	if ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	if ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- EXECUTION TIME:
0.126997
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 9
    if (a+b>c) or (a+c>b) or (b+c>a)
                                   ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:28:54) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if (a+b>c) or (a+c>b) or (b+c>a)
	if (a == b == c):
		d = "equilatero"
	if ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	if ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
File "XXXX", line 9
    if (a+b>c) or (a+c>b) or (b+c>a)
                                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:29:05) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a+b>c) or (a+c>b) or (b+c>a)):
	if (a == b == c):
		d = "equilatero"
	if ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	if ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
File "XXXX", line 10
    if (a == b == c):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:29:06) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a+b>c) or (a+c>b) or (b+c>a)):
	if (a == b == c):
		d = "equilatero"
	if ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	if ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
File "XXXX", line 10
    if (a == b == c):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:29:10) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

if ((a+b>c) or (a+c>b) or (b+c>a)):
	if (a == b == c):
		d = "equilatero"
	if ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	if ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
File "XXXX", line 9
    if ((a+b>c) or (a+c>b) or (b+c>a)):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:29:11) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

if ((a+b>c) or (a+c>b) or (b+c>a)):
	if (a == b == c):
		d = "equilatero"
	if ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	if ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
File "XXXX", line 9
    if ((a+b>c) or (a+c>b) or (b+c>a)):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:29:14) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

if ((a+b>c) or (a+c>b) or (b+c>a)):
	
	if (a == b == c):
		d = "equilatero"
	if ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	if ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
File "XXXX", line 9
    if ((a+b>c) or (a+c>b) or (b+c>a)):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:29:21) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a+b>c) or (a+c>b) or (b+c>a)):
	
	if (a == b == c):
		d = "equilatero"
	if ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	if ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
File "XXXX", line 11
    if (a == b == c):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:29:25) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a+b>c) or (a+c>b) or (b+c>a)):
	
	if (a == b == c):
		d = "equilatero"
	if ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	if ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
File "XXXX", line 11
    if (a == b == c):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:29:29) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a+b>c) or (a+c>b) or (b+c>a)):
	
		if (a == b == c):
		d = "equilatero"
	if ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	if ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
File "XXXX", line 12
    d = "equilatero"
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:29:32) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a+b>c) or (a+c>b) or (b+c>a)):
	
		if (a == b == c):
			d = "equilatero"
	if ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	if ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:29:35) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a+b>c) or (a+c>b) or (b+c>a)):
	
		if (a == b == c):
			d = "equilatero"
	if ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	if ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- EXECUTION TIME:
0.150064
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:29:37) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a+b>c) or (a+c>b) or (b+c>a)):
	
		if (a == b == c):
			d = "equilatero"
	if ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	if ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:29:42) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a+b>c) or (a+c>b) or (b+c>a)):
	
		if (a == b == c):
			d = "equilatero"
	if ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	if ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:29:44) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a+b>c) or (a+c>b) or (b+c>a)):
	
		if (a == b == c):
			d = "equilatero"
	if ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	if ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:29:47) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a+b>c) or (a+c>b) or (b+c>a)):
	
		if (a == b == c):
			d = "equilatero"
	if ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	if ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:29:48) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a+b>c) or (a+c>b) or (b+c>a)):
	
		if (a == b == c):
			d = "equilatero"
	if ((a != b) and (a == c)) or ((a != c) and (a == b)):
		d = "isosceles"
	if ((a != c) and (a != b) and ( b != c)):
		d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- EXECUTION TIME:
0.151787
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:30:07) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a+b>c) or (a+c>b) or (b+c>a)):
	
		if (a == b == c):
			d = "equilatero"
				if ((a != b) and (a == c)) or ((a != c) and (a == b)):
					d = "isosceles"
						if ((a != c) and (a != b) and ( b != c)):
							d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- EXECUTION TIME:
0.192236
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 13
    if ((a != b) and (a == c)) or ((a != c) and (a == b)):
    ^
IndentationError: unexpected indent

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:30:08) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a+b>c) or (a+c>b) or (b+c>a)):
	
		if (a == b == c):
			d = "equilatero"
				if ((a != b) and (a == c)) or ((a != c) and (a == b)):
					d = "isosceles"
						if ((a != c) and (a != b) and ( b != c)):
							d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
File "XXXX", line 13
    if ((a != b) and (a == c)) or ((a != c) and (a == b)):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:30:11) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a+b>c) or (a+c>b) or (b+c>a)):
	
		if (a == b == c):
			d = "equilatero"
				if ((a != b) and (a == c)) or ((a != c) and (a == b)):
				d = "isosceles"
						if ((a != c) and (a != b) and ( b != c)):
							d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
File "XXXX", line 13
    if ((a != b) and (a == c)) or ((a != c) and (a == b)):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:30:13) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a+b>c) or (a+c>b) or (b+c>a)):
	
		if (a == b == c):
			d = "equilatero"
				if ((a != b) and (a == c)) or ((a != c) and (a == b)):
				d = "isosceles"
						if ((a != c) and (a != b) and ( b != c)):
							d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
File "XXXX", line 13
    if ((a != b) and (a == c)) or ((a != c) and (a == b)):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:30:16) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a+b>c) or (a+c>b) or (b+c>a)):
	
		if (a == b == c):
			d = "equilatero"
			if ((a != b) and (a == c)) or ((a != c) and (a == b)):
				d = "isosceles"
						if ((a != c) and (a != b) and ( b != c)):
							d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
File "XXXX", line 15
    if ((a != c) and (a != b) and ( b != c)):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:30:22) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a+b>c) or (a+c>b) or (b+c>a)):
	
		if (a == b == c):
			d = "equilatero"
			if ((a != b) and (a == c)) or ((a != c) and (a == b)):
				d = "isosceles"
					if ((a != c) and (a != b) and ( b != c)):
							d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
File "XXXX", line 15
    if ((a != c) and (a != b) and ( b != c)):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:30:25) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a+b>c) or (a+c>b) or (b+c>a)):
	
		if (a == b == c):
			d = "equilatero"
			if ((a != b) and (a == c)) or ((a != c) and (a == b)):
				d = "isosceles"
				if ((a != c) and (a != b) and ( b != c)):
							d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:30:39) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a+b>c) or (a+c>b) or (b+c>a)):
	
		if (a == b == c):
			d = "equilatero"
			if ((a != b) and (a == c)) or ((a != c) and (a == b)):
				d = "isosceles"
				if ((a != c) and (a != b) and ( b != c)):
				d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- EXECUTION TIME:
0.13397
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 16
    d = "escaleno"
    ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:30:39) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a+b>c) or (a+c>b) or (b+c>a)):
	
		if (a == b == c):
			d = "equilatero"
			if ((a != b) and (a == c)) or ((a != c) and (a == b)):
				d = "isosceles"
				if ((a != c) and (a != b) and ( b != c)):
				d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
File "XXXX", line 16
    d = "escaleno"
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:30:42) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a+b>c) or (a+c>b) or (b+c>a)):
	
		if (a == b == c):
			d = "equilatero"
			if ((a != b) and (a == c)) or ((a != c) and (a == b)):
				d = "isosceles"
				if ((a != c) and (a != b) and ( b != c)):
					d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:30:59) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a+b>c) or (a+c>b) or (b+c>a)):
	
if (a == b == c):
d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
File "XXXX", line 11
    if (a == b == c):
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:31:06) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):

	if ((a+b>c) or (a+c>b) or (b+c>a)):
	
	if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
File "XXXX", line 11
    if (a == b == c):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:32:15) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) or (a+c>b) or (b+c>a)):
	
if (a == b == c):
d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
File "XXXX", line 10
    if (a == b == c):
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:32:22) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) or (a+c>b) or (b+c>a)):
	
	if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
File "XXXX", line 10
    if (a == b == c):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:32:23) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) or (a+c>b) or (b+c>a)):
	
	if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
File "XXXX", line 10
    if (a == b == c):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:32:23) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) or (a+c>b) or (b+c>a)):
	
	if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
File "XXXX", line 10
    if (a == b == c):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:32:23) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) or (a+c>b) or (b+c>a)):
	
	if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
File "XXXX", line 10
    if (a == b == c):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:32:24) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) or (a+c>b) or (b+c>a)):
	
	if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
File "XXXX", line 10
    if (a == b == c):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:32:24) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) or (a+c>b) or (b+c>a)):
	
	if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
File "XXXX", line 10
    if (a == b == c):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:32:24) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) or (a+c>b) or (b+c>a)):
	
	if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
File "XXXX", line 10
    if (a == b == c):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:32:24) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) or (a+c>b) or (b+c>a)):
	
	if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
File "XXXX", line 10
    if (a == b == c):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:32:25) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) or (a+c>b) or (b+c>a)):
	
	if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
File "XXXX", line 10
    if (a == b == c):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:32:25) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) or (a+c>b) or (b+c>a)):
	
	if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
File "XXXX", line 10
    if (a == b == c):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:32:25) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) or (a+c>b) or (b+c>a)):
	
	if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
File "XXXX", line 10
    if (a == b == c):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:32:25) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) or (a+c>b) or (b+c>a)):
	
	if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
File "XXXX", line 10
    if (a == b == c):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:32:25) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) or (a+c>b) or (b+c>a)):
	
	if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
File "XXXX", line 10
    if (a == b == c):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:32:25) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) or (a+c>b) or (b+c>a)):
	
	if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
File "XXXX", line 10
    if (a == b == c):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:32:26) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) or (a+c>b) or (b+c>a)):
	
	if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
File "XXXX", line 10
    if (a == b == c):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:32:26) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) or (a+c>b) or (b+c>a)):
	
	if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
File "XXXX", line 10
    if (a == b == c):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:32:26) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) or (a+c>b) or (b+c>a)):
	
	if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
File "XXXX", line 10
    if (a == b == c):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:32:26) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) or (a+c>b) or (b+c>a)):
	
	if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
File "XXXX", line 10
    if (a == b == c):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:32:27) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) or (a+c>b) or (b+c>a)):
	
	if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
File "XXXX", line 10
    if (a == b == c):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:32:27) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) or (a+c>b) or (b+c>a)):
	
	if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
File "XXXX", line 10
    if (a == b == c):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:32:27) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) or (a+c>b) or (b+c>a)):
	
	if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
File "XXXX", line 10
    if (a == b == c):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:32:27) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) or (a+c>b) or (b+c>a)):
	
	if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
File "XXXX", line 10
    if (a == b == c):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:32:31) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) or (a+c>b) or (b+c>a)):
	
	if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
File "XXXX", line 10
    if (a == b == c):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:33:25) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) or (a+c>b) or (b+c>a)):
		if (a == b == c):
			d = "equilatero"
		if ((a != b) and (a == c)) or ((a != c) and (a == b)):
			d = "isosceles"
		if ((a != c) and (a != b) and ( b != c)):
			d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 19, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:33:26) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) or (a+c>b) or (b+c>a)):
		if (a == b == c):
			d = "equilatero"
		if ((a != b) and (a == c)) or ((a != c) and (a == b)):
			d = "isosceles"
		if ((a != c) and (a != b) and ( b != c)):
			d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- EXECUTION TIME:
0.164346
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 19, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:33:27) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) or (a+c>b) or (b+c>a)):
		if (a == b == c):
			d = "equilatero"
		if ((a != b) and (a == c)) or ((a != c) and (a == b)):
			d = "isosceles"
		if ((a != c) and (a != b) and ( b != c)):
			d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 19, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:33:33) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) or (a+c>b) or (b+c>a)):
		if (a == b == c):
			d = "equilatero"
		if ((a != b) and (a == c)) or ((a != c) and (a == b)):
			d = "isosceles"
		if ((a != c) and (a != b) and ( b != c)):
			d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 19, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:34:03) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) and (a+c>b) oand (b+c>a)):
		if (a == b == c):
			d = "equilatero"
		if ((a != b) and (a == c)) or ((a != c) and (a == b)):
			d = "isosceles"
		if ((a != c) and (a != b) and ( b != c)):
			d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- EXECUTION TIME:
0.144815
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 8
    if ((a+b>c) and (a+c>b) oand (b+c>a)):
                               ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:34:05) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) and (a+c>b) and (b+c>a)):
		if (a == b == c):
			d = "equilatero"
		if ((a != b) and (a == c)) or ((a != c) and (a == b)):
			d = "isosceles"
		if ((a != c) and (a != b) and ( b != c)):
			d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- EXECUTION TIME:
0.128308
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 19, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:34:06) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) and (a+c>b) and (b+c>a)):
		if (a == b == c):
			d = "equilatero"
		if ((a != b) and (a == c)) or ((a != c) and (a == b)):
			d = "isosceles"
		if ((a != c) and (a != b) and ( b != c)):
			d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 19, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:34:18) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) or (a+c>b) or (b+c>a)):
		if (a == b == c):
			d = "equilatero"
		if ((a != b) and (a == c)) or ((a != c) and (a == b)):
			d = "isosceles"
		if ((a != c) and (a != b) and ( b != c)):
			d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 19, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:34:44) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) and (a+c>b) and (b+c>a)):
		if (a == b == c):
			d = "equilatero"
		if ((a != b) and (a == c)) or ((a != c) and (a == b)):
			d = "isosceles"
		if ((a != c) and (a != b) and ( b != c)):
			d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 19, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:34:45) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) and (a+c>b) and (b+c>a)):
		if (a == b == c):
			d = "equilatero"
		if ((a != b) and (a == c)) or ((a != c) and (a == b)):
			d = "isosceles"
		if ((a != c) and (a != b) and ( b != c)):
			d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- EXECUTION TIME:
0.156747
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 19, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:34:48) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) and (a+c>b) and (b+c>a)):
		if (a == b == c):
			d = "equilatero"
		if ((a != b) and (a == c)) or ((a != c) and (a == b)):
			d = "isosceles"
		if ((a != c) and (a != b) and ( b != c)):
			d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 19, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:34:53) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) and (a+c>b) and (b+c>a)):
		if (a == b == c):
			d = "equilatero"
		if ((a != b) and (a == c)) or ((a != c) and (a == b)):
			d = "isosceles"
		if ((a != c) and (a != b) and ( b != c)):
			d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 19, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:34:55) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) and (a+c>b) and (b+c>a)):
		if (a == b == c):
			d = "equilatero"
		if ((a != b) and (a == c)) or ((a != c) and (a == b)):
			d = "isosceles"
		if ((a != c) and (a != b) and ( b != c)):
			d = "escaleno"
else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 19, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:35:58) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) and (a+c>b) and (b+c>a)):
		if (a == b == c):
			d = "equilatero"
		if ((a != b) and (a == c)) or ((a != c) and (a == b)):
			d = "isosceles"
		if ((a != c) and (a != b) and ( b != c)):
			d = "escaleno"
print("Tipo de triangulo:" ,d)

else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)






-- EXECUTION TIME:
0.148459
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 17
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:35:58) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) and (a+c>b) and (b+c>a)):
		if (a == b == c):
			d = "equilatero"
		if ((a != b) and (a == c)) or ((a != c) and (a == b)):
			d = "isosceles"
		if ((a != c) and (a != b) and ( b != c)):
			d = "escaleno"
print("Tipo de triangulo:" ,d)

else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)






-- ERROR:
File "XXXX", line 17
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:36:00) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) and (a+c>b) and (b+c>a)):
		if (a == b == c):
			d = "equilatero"
		if ((a != b) and (a == c)) or ((a != c) and (a == b)):
			d = "isosceles"
		if ((a != c) and (a != b) and ( b != c)):
			d = "escaleno"
print("Tipo de triangulo:" ,d)

else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)






-- ERROR:
File "XXXX", line 17
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:36:12) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) and (a+c>b) and (b+c>a)):
		if (a == b == c):
			d = "equilatero"
		if ((a != b) and (a == c)) or ((a != c) and (a == b)):
			d = "isosceles"
		if ((a != c) and (a != b) and ( b != c)):
			d = "escaleno"
			print(d)

else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)

 





-- EXECUTION TIME:
0.13868
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:36:12) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) and (a+c>b) and (b+c>a)):
		if (a == b == c):
			d = "equilatero"
		if ((a != b) and (a == c)) or ((a != c) and (a == b)):
			d = "isosceles"
		if ((a != c) and (a != b) and ( b != c)):
			d = "escaleno"
			print(d)

else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)

 





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:37:43) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) and (a+c>b) and (b+c>a)):
		if (a == b == c):
			d = "equilatero"
		if ((a != b) and (a == c)) or ((a != c) and (a == b)):
			d = "isosceles"
		if ((a != c) and (a != b) and ( b != c)):
			d = "escaleno"
			print(d)

else:
	d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)

 





-- EXECUTION TIME:
0.168597
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:37:58) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) and (a+c>b) and (b+c>a)):
		if (a == b == c):
			d = "equilatero"
		if ((a != b) and (a == c)) or ((a != c) and (a == b)):
			d = "isosceles"
		if ((a != c) and (a != b) and ( b != c)):
			d = "escaleno"
			print(d)

else:
	d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- EXECUTION TIME:
0.132239
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 22, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:39:10) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))


if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) and (a+c>b) and (b+c>a)):
		if (a == b == c):
			d = "equilatero"
		if ((a != b) and (a == c)) or ((a != c) and (a == b)):
			d = "isosceles"
		if ((a != c) and (a != b) and ( b != c)):
			d = "escaleno"
			print(d)

      if ((a < 0 or b < 0 or c < 0) and (a+b<c) and (a+c<b) and (b+c><a))
	      d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)

 





-- EXECUTION TIME:
0.130585
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 18
    if ((a < 0 or b < 0 or c < 0) and (a+b<c) and (a+c<b) and (b+c><a))
                                                                      ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:39:11) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))


if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) and (a+c>b) and (b+c>a)):
		if (a == b == c):
			d = "equilatero"
		if ((a != b) and (a == c)) or ((a != c) and (a == b)):
			d = "isosceles"
		if ((a != c) and (a != b) and ( b != c)):
			d = "escaleno"
			print(d)

      if ((a < 0 or b < 0 or c < 0) and (a+b<c) and (a+c<b) and (b+c><a))
	      d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)

 





-- ERROR:
File "XXXX", line 18
    if ((a < 0 or b < 0 or c < 0) and (a+b<c) and (a+c<b) and (b+c><a))
                                                                      ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:39:16) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))


if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) and (a+c>b) and (b+c>a)):
		if (a == b == c):
			d = "equilatero"
		if ((a != b) and (a == c)) or ((a != c) and (a == b)):
			d = "isosceles"
		if ((a != c) and (a != b) and ( b != c)):
			d = "escaleno"
			print(d)

      if ((a < 0 or b < 0 or c < 0) and (a+b<c) and (a+c<b) and (b+c><a)):
	      d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)

 





-- EXECUTION TIME:
0.241944
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 18
    if ((a < 0 or b < 0 or c < 0) and (a+b<c) and (a+c<b) and (b+c><a)):
                                                                       ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:39:17) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))


if (a > 0) and (b > 0) and (c > 0):
	if ((a+b>c) and (a+c>b) and (b+c>a)):
		if (a == b == c):
			d = "equilatero"
		if ((a != b) and (a == c)) or ((a != c) and (a == b)):
			d = "isosceles"
		if ((a != c) and (a != b) and ( b != c)):
			d = "escaleno"
			print(d)

      if ((a < 0 or b < 0 or c < 0) and (a+b<c) and (a+c<b) and (b+c><a)):
	      d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)

 





-- ERROR:
File "XXXX", line 18
    if ((a < 0 or b < 0 or c < 0) and (a+b<c) and (a+c<b) and (b+c><a)):
                                                                       ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:40:01) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))


if (a > 0) and (b > 0) and (c > 0):
	
		if (a == b == c):
			d = "equilatero"
		if ((a != b) and (a == c)) or ((a != c) and (a == b)):
			d = "isosceles"
		if ((a != c) and (a != b) and ( b != c)):
			d = "escaleno"
			print(d)

      if ((a < 0 or b < 0 or c < 0) and (a+b<c) and (a+c<b) and (b+c><a)):
	      d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)

 





-- ERROR:
File "XXXX", line 18
    if ((a < 0 or b < 0 or c < 0) and (a+b<c) and (a+c<b) and (b+c><a)):
                                                                       ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:40:45) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))


if (a > 0) and (b > 0) and (c > 0):
	
		if (a == b == c):
			d = "equilatero"
		if ((a != b) and (a == c)) or ((a != c) and (a == b)):
			d = "isosceles"
		if ((a != c) and (a != b) and ( b != c)):
			d = "escaleno"
			print(d)

      if ((a < 0 or b < 0 or c < 0) and (a+b < c) and (a+c < b) and (b+c < a)):
	      d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)

 





-- EXECUTION TIME:
0.195888
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 18
    if ((a < 0 or b < 0 or c < 0) and (a+b < c) and (a+c < b) and (b+c < a)):
                                                                            ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:40:45) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))


if (a > 0) and (b > 0) and (c > 0):
	
		if (a == b == c):
			d = "equilatero"
		if ((a != b) and (a == c)) or ((a != c) and (a == b)):
			d = "isosceles"
		if ((a != c) and (a != b) and ( b != c)):
			d = "escaleno"
			print(d)

      if ((a < 0 or b < 0 or c < 0) and (a+b < c) and (a+c < b) and (b+c < a)):
	      d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)

 





-- ERROR:
File "XXXX", line 18
    if ((a < 0 or b < 0 or c < 0) and (a+b < c) and (a+c < b) and (b+c < a)):
                                                                            ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:41:05) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))


if (a > 0) and (b > 0) and (c > 0):
	
		if (a == b == c):
			d = "equilatero"
		if ((a != b) and (a == c)) or ((a != c) and (a == b)):
			d = "isosceles"
		if ((a != c) and (a != b) and ( b != c)):
			d = "escaleno"
			print(d)

if ((a < 0 or b < 0 or c < 0) and (a+b < c) and (a+c < b) and (b+c < a)):
	  d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)

 





-- EXECUTION TIME:
0.181311
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 22, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:41:06) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))


if (a > 0) and (b > 0) and (c > 0):
	
		if (a == b == c):
			d = "equilatero"
		if ((a != b) and (a == c)) or ((a != c) and (a == b)):
			d = "isosceles"
		if ((a != c) and (a != b) and ( b != c)):
			d = "escaleno"
			print(d)

if ((a < 0 or b < 0 or c < 0) and (a+b < c) and (a+c < b) and (b+c < a)):
	  d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)

 





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 22, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:41:11) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))


if (a > 0) and (b > 0) and (c > 0):
	
		if (a == b == c):
			d = "equilatero"
		if ((a != b) and (a == c)) or ((a != c) and (a == b)):
			d = "isosceles"
		if ((a != c) and (a != b) and ( b != c)):
			d = "escaleno"
			print(d)

if ((a < 0 or b < 0 or c < 0) and (a+b < c) and (a+c < b) and (b+c < a)):
	  d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)

 





-- EXECUTION TIME:
0.155123
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 22, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:41:20) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))


if (a > 0) and (b > 0) and (c > 0):
	
		if (a == b == c):
			d = "equilatero"
		if ((a != b) and (a == c)) or ((a != c) and (a == b)):
			d = "isosceles"
		if ((a != c) and (a != b) and ( b != c)):
			d = "escaleno"
			print(d)

if ((a < 0 and b < 0 oand c < 0) and (a+b < c) and (a+c < b) and (b+c < a)):
	  d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)

 





-- EXECUTION TIME:
0.169155
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 18
    if ((a < 0 and b < 0 oand c < 0) and (a+b < c) and (a+c < b) and (b+c < a)):
                            ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:41:23) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))


if (a > 0) and (b > 0) and (c > 0):
	
		if (a == b == c):
			d = "equilatero"
		if ((a != b) and (a == c)) or ((a != c) and (a == b)):
			d = "isosceles"
		if ((a != c) and (a != b) and ( b != c)):
			d = "escaleno"
			print(d)

if ((a < 0 and b < 0 and c < 0) and (a+b < c) and (a+c < b) and (b+c < a)):
	  d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)

 





-- EXECUTION TIME:
0.205682
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 22, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:41:24) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))


if (a > 0) and (b > 0) and (c > 0):
	
		if (a == b == c):
			d = "equilatero"
		if ((a != b) and (a == c)) or ((a != c) and (a == b)):
			d = "isosceles"
		if ((a != c) and (a != b) and ( b != c)):
			d = "escaleno"
			print(d)

if ((a < 0 and b < 0 and c < 0) and (a+b < c) and (a+c < b) and (b+c < a)):
	  d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)

 





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 22, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:41:37) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))


if (a > 0) and (b > 0) and (c > 0):
	
		if (a == b == c):
			d = "equilatero"
		if ((a != b) and (a == c)) or ((a != c) and (a == b)):
			d = "isosceles"
		if ((a != c) and (a != b) and ( b != c)):
			d = "escaleno"
			print(d)

if ((a < 0 and b < 0 and c < 0) and (a+b < c) and (a+c < b) and (b+c < a)):
	  d = "invalido"

print("Entradas:",  a,",", b,",", c)
print("Tipo de triangulo:" ,d)

 





-- EXECUTION TIME:
0.162563
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 22, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:41:45) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)


if (a > 0) and (b > 0) and (c > 0):
	
		if (a == b == c):
			d = "equilatero"
		if ((a != b) and (a == c)) or ((a != c) and (a == b)):
			d = "isosceles"
		if ((a != c) and (a != b) and ( b != c)):
			d = "escaleno"
			print(d)

if ((a < 0 and b < 0 and c < 0) and (a+b < c) and (a+c < b) and (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- EXECUTION TIME:
0.167477
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 23, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:41:56) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)


if (a > 0) and (b > 0) and (c > 0):
	
		if (a == b == c):
			d = "equilatero"
		if ((a != b) and (a == c)) or ((a != c) and (a == b)):
			d = "isosceles"
		if ((a != c) and (a != b) and ( b != c)):
			d = "escaleno"
			

if ((a < 0 and b < 0 and c < 0) and (a+b < c) and (a+c < b) and (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- EXECUTION TIME:
0.140076
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 23, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:41:57) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)


if (a > 0) and (b > 0) and (c > 0):
	
		if (a == b == c):
			d = "equilatero"
		if ((a != b) and (a == c)) or ((a != c) and (a == b)):
			d = "isosceles"
		if ((a != c) and (a != b) and ( b != c)):
			d = "escaleno"
			

if ((a < 0 and b < 0 and c < 0) and (a+b < c) and (a+c < b) and (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 23, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:42:02) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)


if (a > 0) and (b > 0) and (c > 0):
	
		if (a == b == c):
			d = "equilatero"
		if ((a != b) and (a == c)) or ((a != c) and (a == b)):
			d = "isosceles"
		if ((a != c) and (a != b) and ( b != c)):
			d = "escaleno"
			

if ((a < 0 and b < 0 and c < 0) and (a+b < c) and (a+c < b) and (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- EXECUTION TIME:
0.121856
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 23, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:42:15) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)



	
		if (a == b == c):
			d = "equilatero"
		if ((a != b) and (a == c)) or ((a != c) and (a == b)):
			d = "isosceles"
		if ((a != c) and (a != b) and ( b != c)):
			d = "escaleno"
			

if ((a < 0 and b < 0 and c < 0) and (a+b < c) and (a+c < b) and (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- EXECUTION TIME:
0.146495
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 11
    if (a == b == c):
    ^
IndentationError: unexpected indent

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:42:54) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
			d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
			d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
			d = "escaleno"
			

if ((a < 0 and b < 0 and c < 0) and (a+b < c) and (a+c < b) and (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- EXECUTION TIME:
0.174734
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:43:03) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
	d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
	d = "escaleno"
			

if ((a < 0 and b < 0 and c < 0) and (a+b < c) and (a+c < b) and (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:43:05) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
	d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
	d = "escaleno"
			

if ((a < 0 and b < 0 and c < 0) and (a+b < c) and (a+c < b) and (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- EXECUTION TIME:
0.253755
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:43:06) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
	d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
	d = "escaleno"
			

if ((a < 0 and b < 0 and c < 0) and (a+b < c) and (a+c < b) and (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- EXECUTION TIME:
0.212771
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:43:06) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
	d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
	d = "escaleno"
			

if ((a < 0 and b < 0 and c < 0) and (a+b < c) and (a+c < b) and (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:43:10) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
	d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
	d = "escaleno"
			

if ((a < 0 and b < 0 and c < 0) and (a+b < c) and (a+c < b) and (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:43:12) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
	d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
	d = "escaleno"
			

if ((a < 0 and b < 0 and c < 0) and (a+b < c) and (a+c < b) and (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:43:16) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
	d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
	d = "escaleno"
			

if ((a < 0 and b < 0 and c < 0) and (a+b < c) and (a+c < b) and (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- EXECUTION TIME:
0.147263
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:43:18) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
	d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
	d = "escaleno"
			

if ((a < 0 and b < 0 and c < 0) and (a+b < c) and (a+c < b) and (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:43:37) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
	d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
	d = "escaleno"
			

if ((a <= 0 and b <= 0 and c <= 0) and (a+b < c) and (a+c < b) and (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- EXECUTION TIME:
0.147991
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:43:38) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
	d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
	d = "escaleno"
			

if ((a <= 0 and b <= 0 and c <= 0) and (a+b < c) and (a+c < b) and (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- EXECUTION TIME:
0.21862
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:43:38) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
	d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
	d = "escaleno"
			

if ((a <= 0 and b <= 0 and c <= 0) and (a+b < c) and (a+c < b) and (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:45:17) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
	d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
	d = "escaleno"
			

if ((a < 0 and b < 0 and c < 0) or (a+b < c) and (a+c < b) and (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- EXECUTION TIME:
0.164709
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:45:17) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
	d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
	d = "escaleno"
			

if ((a < 0 and b < 0 and c < 0) or (a+b < c) and (a+c < b) and (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:45:37) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
	d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
	d = "escaleno"
			

if ((a < 0 and b < 0 and c < 0) and (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:45:42) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
	d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
	d = "escaleno"
			

if ((a < 0 and b < 0 and c < 0) and (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- EXECUTION TIME:
0.137328
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:45:47) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
	d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
	d = "escaleno"
			

if ((a < 0 and b < 0 and c < 0) and (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:45:52) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
	d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
	d = "escaleno"
			

if ((a < 0 and b < 0 and c < 0) and (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:45:55) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
	d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
	d = "escaleno"
			

if ((a < 0 and b < 0 and c < 0) and (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- EXECUTION TIME:
0.122399
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:48:02) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
	d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
	d = "escaleno"
			

if ((a < 0 or b < 0 or c < 0) and (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- EXECUTION TIME:
0.209339
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:48:42) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
	d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
	d = "escaleno"
			

if ((a < 0 or b < 0 or c < 0) or (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- EXECUTION TIME:
0.128049
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:48:42) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
	d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
	d = "escaleno"
			

if ((a < 0 or b < 0 or c < 0) or (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:49:53) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
	d = "isosceles"
if ((a != c) or (a != b) or ( b != c)):
	d = "escaleno"
			

if ((a < 0 or b < 0 or c < 0) or (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- EXECUTION TIME:
0.153977
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:50:10) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) and ((a != c) and (a == b)):
	d = "isosceles"
if ((a != c) or (a != b) or ( b != c)):
	d = "escaleno"
			

if ((a < 0 or b < 0 or c < 0) or (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- EXECUTION TIME:
0.238691
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:50:13) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) and ((a != c) and (a == b)):
	d = "isosceles"
if ((a != c) or (a != b) or ( b != c)):
	d = "escaleno"
			

if ((a < 0 or b < 0 or c < 0) or (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- EXECUTION TIME:
0.194986
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:50:43) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
	d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
	d = "escaleno"
			

if ((a < 0 or b < 0 or c < 0) or (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- EXECUTION TIME:
0.146755
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:50:43) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
	d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
	d = "escaleno"
			

if ((a < 0 or b < 0 or c < 0) or (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:51:24) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
	d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
	d = "escaleno"
			

if ((a < 0 or b < 0 or c < 0) or (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:51:33) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
	d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
	d = "escaleno"
			

if ((a < 0 or b < 0 or c < 0) or (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:51:38) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
	d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
	d = "escaleno"
			

if ((a < 0 or b < 0 or c < 0) or (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:51:41) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
	d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
	d = "escaleno"
			

if ((a < 0 or b < 0 or c < 0) or (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:51:46) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
	d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
	d = "escaleno"
			

if ((a < 0 or b < 0 or c < 0) or (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:51:49) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
	d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
	d = "escaleno"
			

if ((a < 0 or b < 0 or c < 0) or (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:09:19) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
	d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
	d = "escaleno"
			

if ((a < 0 or b < 0 or c < 0) or (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- EXECUTION TIME:
0.157392
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:09:22) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
	d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
	d = "escaleno"
			

if ((a < 0 or b < 0 or c < 0) or (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:09:27) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
	d = "isosceles"
if ((a != c) and (a != b) and ( b != c)):
	d = "escaleno"
			

if ((a < 0 or b < 0 or c < 0) or (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:10:16) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
	d = "isosceles"
if (a != c != b):
	d = "escaleno"
			

if ((a < 0 or b < 0 or c < 0) or (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:10:20) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
	d = "isosceles"
if (a != c != b):
	d = "escaleno"
			

if ((a < 0 or b < 0 or c < 0) or (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- EXECUTION TIME:
0.191872
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:10:23) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if ((a != b) and (a == c)) or ((a != c) and (a == b)):
	d = "isosceles"
if (a != c != b):
	d = "escaleno"
			

if ((a < 0 or b < 0 or c < 0) or (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:11:17) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if  (a == c !=b) or (a == b != c):
	d = "isosceles"
if (a != c != b):
	d = "escaleno"
			

if ((a < 0 or b < 0 or c < 0) or (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:11:23) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if  (a == c !=b) or (a == b != c):
	d = "isosceles"
if (a != c != b):
	d = "escaleno"
			

if ((a < 0 or b < 0 or c < 0) or (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- EXECUTION TIME:
0.134662
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:11:28) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if  (a == c !=b) or (a == b != c):
	d = "isosceles"
if (a != c != b):
	d = "escaleno"
			

if ((a < 0 or b < 0 or c < 0) or (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- EXECUTION TIME:
0.132823
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:11:38) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if  (a == c !=b) or (a == b != c):
	d = "isosceles"
if (a != c != b):
	d = "escaleno"
			

if ((a < 0 or b < 0 or c < 0) or (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"


print("Tipo de triangulo:" ,d)

 





-- EXECUTION TIME:
0.194211
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:53:07) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if  (a == c !=b) or (a == b != c):
	d = "isosceles"
if (a != c != b):
	d = "escaleno"
			

if ((a < 0 or b < 0 or c < 0) or (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"

print("Entradas:" ,a "," ,b "," ,c)
print("Tipo de triangulo:" ,d)

 





-- EXECUTION TIME:
0.145069
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 20
    print("Entradas:" ,a "," ,b "," ,c)
                           ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:53:08) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if  (a == c !=b) or (a == b != c):
	d = "isosceles"
if (a != c != b):
	d = "escaleno"
			

if ((a < 0 or b < 0 or c < 0) or (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"

print("Entradas:" ,a "," ,b "," ,c)
print("Tipo de triangulo:" ,d)

 





-- ERROR:
File "XXXX", line 20
    print("Entradas:" ,a "," ,b "," ,c)
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:53:15) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if  (a == c !=b) or (a == b != c):
	d = "isosceles"
if (a != c != b):
	d = "escaleno"
			

if ((a < 0 or b < 0 or c < 0) or (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"

print("Entradas:" ,a "," ,b "," ,c)
print("Tipo de triangulo:" ,d)

 





-- ERROR:
File "XXXX", line 20
    print("Entradas:" ,a "," ,b "," ,c)
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:53:24) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if  (a == c !=b) or (a == b != c):
	d = "isosceles"
if (a != c != b):
	d = "escaleno"
			

if ((a < 0 or b < 0 or c < 0) or (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"

print("Entradas:" ,a ,b ,c)
print("Tipo de triangulo:" ,d)

 





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:53:33) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if  (a == c !=b) or (a == b != c):
	d = "isosceles"
if (a != c != b):
	d = "escaleno"
			

if ((a < 0 or b < 0 or c < 0) or (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"

print("Entradas:" ,a ,b ,c)
print("Tipo de triangulo:" ,d)

 





-- EXECUTION TIME:
0.195467
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:53:38) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if  (a == c !=b) or (a == b != c):
	d = "isosceles"
if (a != c != b):
	d = "escaleno"
			

if ((a < 0 or b < 0 or c < 0) or (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"

print("Entradas:" ,a ,b ,c)
print("Tipo de triangulo:" ,d)

 





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:54:41) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if  (a == c) and (a != b) or (a == b) and (a !=c):
	d = "isosceles"
if (a != c != b):
	d = "escaleno"
			

if ((a < 0 or b < 0 or c < 0) or (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"

print("Entradas:" ,a ,b ,c)
print("Tipo de triangulo:" ,d)

 





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 21, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:55:01) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if  (a == c) and (a != b) or (a == b) and (a !=c):
	d = "isosceles"
if (a != c != b):
	d = "escaleno"
			

if ((a < 0 or b < 0 or c < 0) or (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"

print("Tipo de triangulo:" ,d)

 





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 20, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:55:37) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if  (a == c) and (a != b) or (a == b) and (a !=c):
	d = "isosceles"
if (a != c != b):
	d = "escaleno"
			

if ((a < 0 or b < 0 or c < 0) or (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"

print("Tipo de triangulo:" ,d)

 





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 20, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:55:42) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if  (a == c) and (a != b) or (a == b) and (a !=c):
	d = "isosceles"
if (a != c != b):
	d = "escaleno"
			

if ((a < 0 or b < 0 or c < 0) or (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"

print("Tipo de triangulo:" ,d)

 





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 20, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:55:45) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if  (a == c) and (a != b) or (a == b) and (a !=c):
	d = "isosceles"
if (a != c != b):
	d = "escaleno"
			

if ((a < 0 or b < 0 or c < 0) or (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"

print("Tipo de triangulo:" ,d)

 





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 20, in <module>
    print("Tipo de triangulo:" ,d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:56:28) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if  ((a == c) or ( b == c) or (c == b)):
	d = "isosceles"
if (a != c != b):
	d = "escaleno"
			

if ((a < 0 or b < 0 or c < 0) or (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"

print("Tipo de triangulo:" ,d)

 





-- EXECUTION TIME:
0.126714
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Lado 1: Lado 2: Lado 3: Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Lado 1: Lado 2: Lado 3: Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:56:29) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if  ((a == c) or ( b == c) or (c == b)):
	d = "isosceles"
if (a != c != b):
	d = "escaleno"
			

if ((a < 0 or b < 0 or c < 0) or (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"

print("Tipo de triangulo:" ,d)

 





-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:56:58) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if  ((a == c) or ( b == c) or (c == b)):
	d = "isosceles"
if (a != c != b):
	d = "escaleno"
			

if ((a < 0 or b < 0 or c < 0) or (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"

print("Tipo de triangulo:" ,d)

 





-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:57:06) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if  ((a == c) or ( b == c) or (c == b)):
	d = "isosceles"
if (a != c != b):
	d = "escaleno"
			

if ((a < 0 or b < 0 or c < 0) or (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"

print("Tipo de triangulo:" ,d)

 





-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:57:20) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if  ((a == c) or ( b == c) or (c == b)):
	d = "isosceles"
if (a != c != b):
	d = "escaleno"
			

if ((a < 0 or b < 0 or c < 0) or (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"

print("Tipo de triangulo:" ,d)

 





-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:57:34) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if  ((a == c) or ( b == c) or (c == b)):
	d = "isosceles"
if (a != c != b):
	d = "escaleno"
			

if ((a < 0 or b < 0 or c < 0) or (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"

print("Tipo de triangulo:" ,d)

 





-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:57:51) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if  ((a == c) or ( b == c) or (c == b)):
	d = "isosceles"
if (a != c != b):
	d = "escaleno"
			

if ((a < 0 or b < 0 or c < 0) or (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"

print("Tipo de triangulo:" ,d)

 





-- EXECUTION TIME:
0.142192
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:18:29) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:",  a,",", b,",", c)

	
if (a == b == c):
	d = "equilatero"
if  ((a == c) or ( b == c) or (c == b)):
	d = "isosceles"
if (a != c != b):
	d = "escaleno"
			

if ((a < 0 or b < 0 or c < 0) or (a+b < c) or (a+c < b) or (b+c < a)):
	  d = "invalido"

print("Tipo de triangulo:" ,d)

 





-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
