== TEST (2019-06-07 09:35:31) 
-- CODE:
from numpy import*
# Leitura da base 
base = int(input("Tamanho da base: "))

for j in range(0, base):
	for i in range(0, base - j):
		print("*", end = "")
	print("/n", end = "")  #Final da linha
	
for j in range(0 , base):
	for i in range(0 , base + j):
		print("*")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-07 09:41:33) 
-- CODE:
from numpy import*
# Leitura da base 
base = int(input("Tamanho da base: "))

for j in range(0, base):
	for i in range(0, base - j):
		print("*", end = "")
	print("/n", end = "")  #Final da linha
	
for j in range(0 , base):
	for i in range(0 , base + j):
		print("*")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-07 09:43:47) 
-- CODE:
from numpy import*
# Leitura da base 
base = int(input("Tamanho da base: "))

for j in range(0, base):
	for i in range(0, base - j):
		print("*", end = "")
	print("/n", end = "")  #Final da linha
	
for j in range(0 , base):
	for i in range(0 , base + j):
		print("*", end = "")
	print("/n", end = "")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-07 09:43:59) 
-- CODE:
from numpy import*
# Leitura da base 
base = int(input("Tamanho da base: "))

for j in range(0, base):
	for i in range(0, base - j):
		print("*", end = "")
	print("/n", end = "")  #Final da linha
	
for j in range(0 , base):
	for i in range(0 , base + j):
		print("*", end = "")
	print("/n", end = "")

-- EXECUTION TIME:
1.1501
-- TEST CASE 1:
---- input:
8
---- correct output:
********
*******
******
*****
****
***
**
*
*
**
***
****
*****
******
*******
********

---- user output:
********/n*******/n******/n*****/n****/n***/n**/n*/n********/n*********/n**********/n***********/n************/n*************/n**************/n***************/n
-- TEST CASE 2:
---- input:
11
---- correct output:
***********
**********
*********
********
*******
******
*****
****
***
**
*
*
**
***
****
*****
******
*******
********
*********
**********
***********

---- user output:
***********/n**********/n*********/n********/n*******/n******/n*****/n****/n***/n**/n*/n***********/n************/n*************/n**************/n***************/n****************/n*****************/n******************/n*******************/n********************/n*********************/n
-- TEST CASE 3:
---- input:
25
---- correct output:
*************************
************************
***********************
**********************
*********************
********************
*******************
******************
*****************
****************
***************
**************
*************
************
***********
**********
*********
********
*******
******
*****
****
***
**
*
*
**
***
****
*****
******
*******
********
*********
**********
***********
************
*************
**************
***************
****************
*****************
******************
*******************
********************
*********************
**********************
***********************
************************
*************************

---- user output:
*************************/n************************/n***********************/n**********************/n*********************/n********************/n*******************/n******************/n*****************/n****************/n***************/n**************/n*************/n************/n***********/n**********/n*********/n********/n*******/n******/n*****/n****/n***/n**/n*/n*************************/n**************************/n***************************/n****************************/n*****************************/n******************************/n*******************************/n********************************/n*********************************/n**********************************/n***********************************/n************************************/n*************************************/n**************************************/n***************************************/n****************************************/n*****************************************/n******************************
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-07 10:24:26) 
-- CODE:
from numpy import*
Qast = int(input("quantidade de asteriscos:"))
ast = "*"
QA1 =  ast * (Qast)
t = len(QA1)

print(QA1)
for ch in range(0,len(QA1)) :
	if(Qast >= 2):
		QA1 =  ast * (Qast-1)
		print(QA1)
		Qast = Qast - 1
print(QA1)

for ch in range(0,t):
	if Qast <= (t-1) :
		QA1 = ast * (Qast + 1)
		print(QA1)
		Qast = Qast + 1
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-07 10:24:39) 
-- CODE:
from numpy import*
Qast = int(input("quantidade de asteriscos:"))
ast = "*"
QA1 =  ast * (Qast)
t = len(QA1)

print(QA1)
for ch in range(0,len(QA1)) :
	if(Qast >= 2):
		QA1 =  ast * (Qast-1)
		print(QA1)
		Qast = Qast - 1
print(QA1)

for ch in range(0,t):
	if Qast <= (t-1) :
		QA1 = ast * (Qast + 1)
		print(QA1)
		Qast = Qast + 1
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-07 10:24:47) 
-- CODE:
from numpy import*
Qast = int(input("quantidade de asteriscos:"))
ast = "*"
QA1 =  ast * (Qast)
t = len(QA1)

print(QA1)
for ch in range(0,len(QA1)) :
	if(Qast >= 2):
		QA1 =  ast * (Qast-1)
		print(QA1)
		Qast = Qast - 1
print(QA1)

for ch in range(0,t):
	if Qast <= (t-1) :
		QA1 = ast * (Qast + 1)
		print(QA1)
		Qast = Qast + 1
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-07 10:25:00) 
-- CODE:
from numpy import*
Qast = int(input("quantidade de asteriscos:"))
ast = "*"
QA1 =  ast * (Qast)
t = len(QA1)

print(QA1)
for ch in range(0,len(QA1)) :
	if(Qast >= 2):
		QA1 =  ast * (Qast-1)
		print(QA1)
		Qast = Qast - 1
print(QA1)

for ch in range(0,t):
	if Qast <= (t-1) :
		QA1 = ast * (Qast + 1)
		print(QA1)
		Qast = Qast + 1
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-07 10:25:17) 
-- CODE:
from numpy import*
Qast = int(input("quantidade de asteriscos:"))
ast = "*"
QA1 =  ast * (Qast)
t = len(QA1)

print(QA1)
for ch in range(0,len(QA1)) :
	if(Qast >= 2):
		QA1 =  ast * (Qast-1)
		print(QA1)
		Qast = Qast - 1
print(QA1)

for ch in range(0,t):
	if Qast <= (t-1) :
		QA1 = ast * (Qast + 1)
		print(QA1)
		Qast = Qast + 1
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-07 10:33:48) 
-- CODE:
from numpy import*
Qast = int(input("quantidade de asteriscos:"))
ast = "*"
QA1 =  ast * (Qast)
t = len(QA1)

print(QA1)
for ch in range(0,len(QA1)) :
	if(Qast >= 2):
		QA1 =  ast * (Qast-1)
		print(QA1)
		Qast = Qast - 1
print(QA1)

for ch in range(0,t):
	if Qast <= (t-1) :
		QA1 = ast * (Qast + 1)
		print(QA1)
		Qast = Qast + 1
-- EXECUTION TIME:
1.24717
-- TEST CASE 1:
---- input:
8
---- correct output:
********
*******
******
*****
****
***
**
*
*
**
***
****
*****
******
*******
********

---- user output:
********
*******
******
*****
****
***
**
*
*
**
***
****
*****
******
*******
********
-- TEST CASE 2:
---- input:
11
---- correct output:
***********
**********
*********
********
*******
******
*****
****
***
**
*
*
**
***
****
*****
******
*******
********
*********
**********
***********

---- user output:
***********
**********
*********
********
*******
******
*****
****
***
**
*
*
**
***
****
*****
******
*******
********
*********
**********
***********
-- TEST CASE 3:
---- input:
25
---- correct output:
*************************
************************
***********************
**********************
*********************
********************
*******************
******************
*****************
****************
***************
**************
*************
************
***********
**********
*********
********
*******
******
*****
****
***
**
*
*
**
***
****
*****
******
*******
********
*********
**********
***********
************
*************
**************
***************
****************
*****************
******************
*******************
********************
*********************
**********************
***********************
************************
*************************

---- user output:
*************************
************************
***********************
**********************
*********************
********************
*******************
******************
*****************
****************
***************
**************
*************
************
***********
**********
*********
********
*******
******
*****
****
***
**
*
*
**
***
****
*****
******
*******
********
*********
**********
***********
************
*************
**************
***************
****************
*****************
******************
*******************
********************
*********************
**********************
***********************
************************
*************************
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
