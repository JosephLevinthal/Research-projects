== TEST (2019-03-26 19:00:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

raio = float(input("Valor do raio: "))
-- OUTPUT:
50.44
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:02:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

raio = float(input("Valor do raio: "))
pi = 3,14
area = (pi*(raio**2))
print(area)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    area = (pi*(raio**2))
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:04:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

raio = float(input("Valor do raio: "))
pi = 3,14
area = (pi*raio**2)
print(area)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    area = (pi*raio**2)
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:05:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

raio = float(input("Valor do raio: "))
pi = 3,14
area = (float(pi*raio**2))
print(area)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    area = (float(pi*raio**2))
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:06:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

raio = float(input("Valor do raio: "))
pi = 3.14
area = (float(pi*raio**2))
print(area)
-- OUTPUT:
63.585
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:07:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

raio = float(input("Valor do raio: "))
pi = 3.14
area = (pi*(raio**2))
print(area)
-- OUTPUT:
63.585
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:07:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

raio = float(input("Valor do raio: "))
pi = 3.14
area = pi*(raio**2)
print(area)
-- OUTPUT:
63.585
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:10:44) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

raio = float(input("Valor do raio: "))
pi = 3.14
area = pi*(raio**2)
volume = (4/3(pi*(raio**3)))
print(area)
print(volume)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    volume = (4/3(pi*(raio**3)))
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:11:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

raio = float(input("Valor do raio: "))
pi = 3.14
area = pi*(raio**2)
volume = (4/3*(pi*(raio**3)))
print(area)
print(volume)
-- OUTPUT:
63.585
381.51
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:12:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

raio = float(input("Valor do raio: "))
pi = 3.14
area = pi*(raio**2)
volume = (4/3*(pi*(raio**3)))
print(area)
print(volume)
-- EXECUTION TIME:
0.175061
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.585
381.51
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.14538400000004
7867.085384746666
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:13:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

raio = float(input("Valor do raio: "))
area = pi*(raio**2)
volume = (4/3*(pi*(raio**3)))
print(area, 3)
print(volume, 3)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    area = pi*(raio**2)
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:15:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

raio = float(input("Valor do raio: "))
from math import*
pi
area = pi*(raio**2)
volume = (4/3*(pi*(raio**3)))
print(area, 3)
print(volume, 3)
-- OUTPUT:
63.61725123519331 3
381.7035074111598 3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:16:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

raio = float(input("Valor do raio: "))
from math import*
pi
area = pi*(raio**2)
volume = (4/3*(pi*(raio**3)))

print(round(area, 3))
print(round(volume, 3))
-- OUTPUT:
63.617
381.704
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:16:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

raio = float(input("Valor do raio: "))
from math import*
pi
area = pi*(raio**2)
volume = (4/3*(pi*(raio**3)))

print(round(area, 3))
print(round(volume, 3))
-- EXECUTION TIME:
0.152398
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.617
381.704
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.388
7871.076
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
