== TEST (2019-04-25 17:19:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a= float(input("Insira o intervalo A:"))
b= float(input("Insira o intervalo B:"))
c= float(input("Insira o intervalo C:"))
d= float(input("Insira o intervalo D:"))

if (a == c or b==c or a==d or d==a):
	print("Intervalo 1: ", a,"," b)
	print("Intervalo 2: ", a,", "b)
-- ERROR:
File "XXXX", line 10
    print("Intervalo 1: ", a,"," b)
                                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:19:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a= float(input("Insira o intervalo A:"))
b= float(input("Insira o intervalo B:"))
c= float(input("Insira o intervalo C:"))
d= float(input("Insira o intervalo D:"))

if (a == c or b==c or a==d or d==a):
	print("Intervalo 1: ", a,",", b)
	print("Intervalo 2: ", a,", ",b)
-- ERROR:
File "XXXX", line 10
    print("Intervalo 1: ", a,"," b)
                                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:19:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a= float(input("Insira o intervalo A:"))
b= float(input("Insira o intervalo B:"))
c= float(input("Insira o intervalo C:"))
d= float(input("Insira o intervalo D:"))

if (a == c or b==c or a==d or b==d):
	print("Intervalo 1: ", a,",", b)
	print("Intervalo 2: ", a,", ",b)
-- ERROR:
File "XXXX", line 10
    print("Intervalo 1: ", a,"," b)
                                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:20:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a= float(input("Insira o intervalo A:"))
b= float(input("Insira o intervalo B:"))
c= float(input("Insira o intervalo C:"))
d= float(input("Insira o intervalo D:"))

if (a == c or b==c or a==d or b==d):
	print("Intervalo 1: ", a,",", b)
	print("Intervalo 2: ", a,", ",b)
	print("Ha intersecao")
-- ERROR:
File "XXXX", line 10
    print("Intervalo 1: ", a,"," b)
                                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:21:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a= float(input("Insira o intervalo A:"))
b= float(input("Insira o intervalo B:"))
c= float(input("Insira o intervalo C:"))
d= float(input("Insira o intervalo D:"))

if (a == c or b==c or a==d or b==d):
	print("Intervalo 1: ", a,",", b)
	print("Intervalo 2: ", a,",",b)
	print("Ha intersecao")

else:
	print("Intervalo 1: ", a,",", b)
	print("Intervalo 2: ", a,",",b)
	print("Nao ha intersecao")
-- EXECUTION TIME:
0.276433
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  1.0 , 2.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1:  1.5 , 5.0
Intervalo 2:  1.5 , 5.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1:  -1.0 , -3.0
Intervalo 2:  -1.0 , -3.0
Nao ha intersecao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:21:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a= float(input("Insira o intervalo A:"))
b= float(input("Insira o intervalo B:"))
c= float(input("Insira o intervalo C:"))
d= float(input("Insira o intervalo D:"))

if (a == c or b==c or a==d or b==d):
	print("Intervalo 1: ", a,",", b)
	print("Intervalo 2: ", a,",",b)
	print("Ha intersecao")

else:
	print("Intervalo 1: ", a,",", b)
	print("Intervalo 2: ", a,",",b)
	print("Nao ha intersecao")
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  1.0 , 2.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:22:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a= float(input("Insira o intervalo A:"))
b= float(input("Insira o intervalo B:"))
c= float(input("Insira o intervalo C:"))
d= float(input("Insira o intervalo D:"))

if (a == c or b==c or a==d or b==d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Ha intersecao")

else:
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Nao ha intersecao")
-- EXECUTION TIME:
0.18209
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 1.0 , 2.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 1.5 , 5.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: -1.0 , -3.0
Nao ha intersecao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:22:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a= float(input("Insira o intervalo A:"))
b= float(input("Insira o intervalo B:"))
c= float(input("Insira o intervalo C:"))
d= float(input("Insira o intervalo D:"))

if (a == c or b==c or a==d or b==d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Ha intersecao")

else:
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Nao ha intersecao")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 1.0 , 2.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:22:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a= float(input("Insira o intervalo A:"))
b= float(input("Insira o intervalo B:"))
c= float(input("Insira o intervalo C:"))
d= float(input("Insira o intervalo D:"))

if (a == c or b==c or a==d or b==d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Ha intersecao")

else:
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Nao ha intersecao")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 1.0 , 2.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:23:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a= float(input("Insira o intervalo A:"))
b= float(input("Insira o intervalo B:"))
c= float(input("Insira o intervalo C:"))
d= float(input("Insira o intervalo D:"))

if (a == c or b==c or a==d or b==d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Ha intersecao")

else:
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Nao ha intersecao")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 1.0 , 2.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:23:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a= float(input("Insira o intervalo A:"))
b= float(input("Insira o intervalo B:"))
c= float(input("Insira o intervalo C:"))
d= float(input("Insira o intervalo D:"))

if (a == c or b==c or a==d or b==d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Ha intersecao")

else:
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Nao ha intersecao")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 1.0 , 2.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:28:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a= float(input("Insira o intervalo A:"))
b= float(input("Insira o intervalo B:"))
c= float(input("Insira o intervalo C:"))
d= float(input("Insira o intervalo D:"))

if (a == c or b==c or a==d or b==d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Ha intersecao")

elif(b<a and d<c):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Entradas invalidas")
else:
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Nao ha intersecao")
-- EXECUTION TIME:
0.156483
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 1.0 , 2.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 1.5 , 5.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: -1.0 , -3.0
Nao ha intersecao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:28:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a= float(input("Insira o intervalo A:"))
b= float(input("Insira o intervalo B:"))
c= float(input("Insira o intervalo C:"))
d= float(input("Insira o intervalo D:"))

if (a == c or b==c or a==d or b==d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Ha intersecao")

elif(b<a and d<c):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Entradas invalidas")
else:
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Nao ha intersecao")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 1.0 , 2.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:30:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a= float(input("Insira o intervalo A:"))
b= float(input("Insira o intervalo B:"))
c= float(input("Insira o intervalo C:"))
d= float(input("Insira o intervalo D:"))

if (a == c or b==c or a==d or b==d):
		elif(b<a and d<c):
			print("Intervalo 1:", a,",", b)
			print("Intervalo 2:", a,",",b)
			print("Entradas invalidas")
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Ha intersecao")

else:
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Nao ha intersecao")
-- ERROR:
File "XXXX", line 10
    elif(b<a and d<c):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:30:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a= float(input("Insira o intervalo A:"))
b= float(input("Insira o intervalo B:"))
c= float(input("Insira o intervalo C:"))
d= float(input("Insira o intervalo D:"))

if (a == c or b==c or a==d or b==d):
		if(b<a and d<c):
			print("Intervalo 1:", a,",", b)
			print("Intervalo 2:", a,",",b)
			print("Entradas invalidas")
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Ha intersecao")

else:
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Nao ha intersecao")
-- ERROR:
File "XXXX", line 14
    print("Intervalo 1:", a,",", b)
                                  ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:33:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a= float(input("Insira o intervalo A:"))
b= float(input("Insira o intervalo B:"))
c= float(input("Insira o intervalo C:"))
d= float(input("Insira o intervalo D:"))

if (a == c or b==c or a==d or b==d):
	if(b<a and d<c):
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Entradas invalidas")
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Ha intersecao")

else:
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Nao ha intersecao")
-- EXECUTION TIME:
0.190518
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 1.0 , 2.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 1.5 , 5.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: -1.0 , -3.0
Nao ha intersecao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:33:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a= float(input("Insira o intervalo A:"))
b= float(input("Insira o intervalo B:"))
c= float(input("Insira o intervalo C:"))
d= float(input("Insira o intervalo D:"))

if (a == c or b==c or a==d or b==d):
	if(b<a and d<c):
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Entradas invalidas")
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Ha intersecao")

else:
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Nao ha intersecao")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 1.0 , 2.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:34:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a= float(input("Insira o intervalo A:"))
b= float(input("Insira o intervalo B:"))
c= float(input("Insira o intervalo C:"))
d= float(input("Insira o intervalo D:"))

if (a == c or b==c or a==d or b==d):
	if(b<a and d<c):
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Entradas invalidas")
if (a == c or b==c or a==d or b==d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Ha intersecao")

else:
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Nao ha intersecao")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 1.0 , 2.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:35:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a= float(input("Insira o intervalo A:"))
b= float(input("Insira o intervalo B:"))
c= float(input("Insira o intervalo C:"))
d= float(input("Insira o intervalo D:"))

if (a == c or b==c or a==d or b==d):
	if(b<a and d<c):
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Entradas invalidas")
if (a == c or b==c or a==d or b==d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Ha intersecao")

else:
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Nao ha intersecao")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 1.0 , 2.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:35:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a= float(input("Insira o intervalo A:"))
b= float(input("Insira o intervalo B:"))
c= float(input("Insira o intervalo C:"))
d= float(input("Insira o intervalo D:"))

if (a == c or b==c or a==d or b==d):
	if(b<a and d<c):
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Entradas invalidas")
if (a == c or b==c or a==d or b==d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Ha intersecao")

else:
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Nao ha intersecao")
-- EXECUTION TIME:
0.236904
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 1.0 , 2.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 1.5 , 5.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: -1.0 , -3.0
Nao ha intersecao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:35:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a= float(input("Insira o intervalo A:"))
b= float(input("Insira o intervalo B:"))
c= float(input("Insira o intervalo C:"))
d= float(input("Insira o intervalo D:"))

if (a == c or b==c or a==d or b==d):
	if(b<a and d<c):
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Entradas invalidas")
if (a == c or b==c or a==d or b==d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Ha intersecao")

else:
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Nao ha intersecao")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 1.0 , 2.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:35:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a= float(input("Insira o intervalo A:"))
b= float(input("Insira o intervalo B:"))
c= float(input("Insira o intervalo C:"))
d= float(input("Insira o intervalo D:"))

if (a == c or b==c or a==d or b==d):
	if(b<a and d<c):
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Entradas invalidas")
if (a == c or b==c or a==d or b==d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Ha intersecao")

else:
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Nao ha intersecao")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 1.0 , 2.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:35:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a= float(input("Insira o intervalo A:"))
b= float(input("Insira o intervalo B:"))
c= float(input("Insira o intervalo C:"))
d= float(input("Insira o intervalo D:"))

if (a == c or b==c or a==d or b==d):
	if(b<a and d<c):
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Entradas invalidas")
if (a == c or b==c or a==d or b==d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Ha intersecao")

else:
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Nao ha intersecao")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 1.0 , 2.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:40:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a= float(input("Insira o intervalo A:"))
b= float(input("Insira o intervalo B:"))
c= float(input("Insira o intervalo C:"))
d= float(input("Insira o intervalo D:"))

if (a == c or b==c or a==d or b==d):
	if(b>a and d>c):
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Ha intersecao")
	else:
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Ha intersecao")
else:
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Nao ha intersecao")
-- EXECUTION TIME:
0.205832
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 1.0 , 2.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 1.5 , 5.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: -1.0 , -3.0
Nao ha intersecao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:40:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a= float(input("Insira o intervalo A:"))
b= float(input("Insira o intervalo B:"))
c= float(input("Insira o intervalo C:"))
d= float(input("Insira o intervalo D:"))

if (a == c or b==c or a==d or b==d):
	if(b>a and d>c):
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Ha intersecao")
	else:
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Entradas invalidas")
else:
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Nao ha intersecao")
-- EXECUTION TIME:
0.200794
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 1.0 , 2.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 1.5 , 5.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: -1.0 , -3.0
Nao ha intersecao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:40:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a= float(input("Insira o intervalo A:"))
b= float(input("Insira o intervalo B:"))
c= float(input("Insira o intervalo C:"))
d= float(input("Insira o intervalo D:"))

if (a == c or b==c or a==d or b==d):
	if(b>a and d>c):
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Ha intersecao")
	else:
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Entradas invalidas")
else:
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Nao ha intersecao")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 1.0 , 2.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:41:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a= float(input("Insira o intervalo A:"))
b= float(input("Insira o intervalo B:"))
c= float(input("Insira o intervalo C:"))
d= float(input("Insira o intervalo D:"))

if (a == c or b==c or a==d or b==d):
	if(b>a and d>c):
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Ha intersecao")
	else:
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Entradas invalidas")
else:
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Nao ha intersecao")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 1.0 , 2.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:46:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a= float(input("Insira o intervalo A:"))
b= float(input("Insira o intervalo B:"))
c= float(input("Insira o intervalo C:"))
d= float(input("Insira o intervalo D:"))

if (a >= c or b>=c or a>=d or b>=d):
	if(b>a and d>c):
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Ha intersecao")
	else:
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Entradas invalidas")
else:
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Nao ha intersecao")
-- EXECUTION TIME:
0.167832
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 1.0 , 2.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 1.5 , 5.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: -1.0 , -3.0
Nao ha intersecao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:46:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a= float(input("Insira o intervalo A:"))
b= float(input("Insira o intervalo B:"))
c= float(input("Insira o intervalo C:"))
d= float(input("Insira o intervalo D:"))

if (a >= c or b>=c or a>=d or b>=d):
	if(b>a and d>c):
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Ha intersecao")
	else:
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Entradas invalidas")
else:
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Nao ha intersecao")
-- EXECUTION TIME:
0.192626
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 1.0 , 2.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 1.5 , 5.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: -1.0 , -3.0
Nao ha intersecao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:46:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a= float(input("Insira o intervalo A:"))
b= float(input("Insira o intervalo B:"))
c= float(input("Insira o intervalo C:"))
d= float(input("Insira o intervalo D:"))

if (a >= c or b>=c or a>=d or b>=d):
	if(b>a and d>c):
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Ha intersecao")
	else:
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Entradas invalidas")
else:
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Nao ha intersecao")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 1.0 , 2.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:49:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a= float(input("Insira o intervalo A:"))
b= float(input("Insira o intervalo B:"))
c= float(input("Insira o intervalo C:"))
d= float(input("Insira o intervalo D:"))

if (b>a and d>c):
	if((a <= c and b >= c) or (a<=d and b>=d)):
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Ha intersecao")
	else:
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Entradas invalidas")
else:
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Nao ha intersecao")
-- EXECUTION TIME:
0.149095
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 1.0 , 2.0
Entradas invalidas
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 1.5 , 5.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: -1.0 , -3.0
Nao ha intersecao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:52:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a= float(input("Insira o intervalo A:"))
b= float(input("Insira o intervalo B:"))
c= float(input("Insira o intervalo C:"))
d= float(input("Insira o intervalo D:"))

if (b>a and d>c):
	if((c <= a and c >= b) or (d<=a and d>=b)):
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Ha intersecao")

	else:
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Nao ha intersecao")
else:
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Entradas invalidas")
-- EXECUTION TIME:
0.204126
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 1.0 , 2.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 1.5 , 5.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: -1.0 , -3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:52:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a= float(input("Insira o intervalo A:"))
b= float(input("Insira o intervalo B:"))
c= float(input("Insira o intervalo C:"))
d= float(input("Insira o intervalo D:"))

if (b>a and d>c):
	if((c <= a and c >= b) or (d<=a and d>=b)):
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Ha intersecao")

	else:
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Nao ha intersecao")
else:
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 1.0 , 2.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 11:21:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a= float(input("Insira o intervalo A:"))
b= float(input("Insira o intervalo B:"))
c= float(input("Insira o intervalo C:"))
d= float(input("Insira o intervalo D:"))

if (b>a and d>c):
	if((c <= a and c >= b) or (d<=a and d>=b)):
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Ha intersecao")
	else:
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Nao ha intersecao")
else:
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 1.0 , 2.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 11:22:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a= float(input("Insira o intervalo A:"))
b= float(input("Insira o intervalo B:"))
c= float(input("Insira o intervalo C:"))
d= float(input("Insira o intervalo D:"))

if (b>a and d>c):
	if((c <= a and c >= b) or (d<=a and d>=b)):
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Ha intersecao")
	else:
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Nao ha intersecao")
else:
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 1.0 , 2.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 11:22:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a= float(input("Insira o intervalo A:"))
b= float(input("Insira o intervalo B:"))
c= float(input("Insira o intervalo C:"))
d= float(input("Insira o intervalo D:"))

if (b>a and d>c):
	if((c <= a and c >= b) or (d<=a and d>=b)):
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Ha intersecao")
	else:
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Nao ha intersecao")
else:
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 1.0 , 2.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 11:22:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a= float(input("Insira o intervalo A:"))
b= float(input("Insira o intervalo B:"))
c= float(input("Insira o intervalo C:"))
d= float(input("Insira o intervalo D:"))

if (b>a and d>c):
	if((c <= a and c >= b) or (d<=a and d>=b)):
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Ha intersecao")
	else:
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Nao ha intersecao")
else:
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Entradas invalidas")
-- EXECUTION TIME:
0.148484
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 1.0 , 2.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 1.5 , 5.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: -1.0 , -3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 10:00:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a= float(input("Insira o intervalo A:"))
b= float(input("Insira o intervalo B:"))
c= float(input("Insira o intervalo C:"))
d= float(input("Insira o intervalo D:"))

if (b>a and d>c):
	if((c <= a and c >= b) or (d<=a and d>=b)):
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Ha intersecao")
	else:
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Nao ha intersecao")
else:
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Entradas invalidas")
-- EXECUTION TIME:
0.208978
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 1.0 , 2.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 1.5 , 5.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: -1.0 , -3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 10:01:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a= float(input("Insira o intervalo A:"))
b= float(input("Insira o intervalo B:"))
c= float(input("Insira o intervalo C:"))
d= float(input("Insira o intervalo D:"))

if (b>a and d>c):
	if((c >= a and c <= b) or (d>=a and d<=b)):
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Ha intersecao")
	else:
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Nao ha intersecao")
else:
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Entradas invalidas")
-- EXECUTION TIME:
0.174231
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Insira o intervalo A:Insira o intervalo B:Insira o intervalo C:Insira o intervalo D:Intervalo 1: 1.0 , 2.0
Intervalo 2: 1.0 , 2.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Insira o intervalo A:Insira o intervalo B:Insira o intervalo C:Insira o intervalo D:Intervalo 1: 1.5 , 5.0
Intervalo 2: 1.5 , 5.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Insira o intervalo A:Insira o intervalo B:Insira o intervalo C:Insira o intervalo D:Intervalo 1: -1.0 , -3.0
Intervalo 2: -1.0 , -3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 10:01:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a= float(input("Insira o intervalo A:"))
b= float(input("Insira o intervalo B:"))
c= float(input("Insira o intervalo C:"))
d= float(input("Insira o intervalo D:"))

if (b>a and d>c):
	if((c >= a and c <= b) or (d>=a and d<=b)):
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Ha intersecao")
	else:
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Nao ha intersecao")
else:
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 1.0 , 2.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 10:01:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a= float(input("Insira o intervalo A:"))
b= float(input("Insira o intervalo B:"))
c= float(input("Insira o intervalo C:"))
d= float(input("Insira o intervalo D:"))

if (b>a and d>c):
	if((c >= a and c <= b) or (d>=a and d<=b)):
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Ha intersecao")
	else:
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Nao ha intersecao")
else:
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 1.0 , 2.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 10:01:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a= float(input("Insira o intervalo A:"))
b= float(input("Insira o intervalo B:"))
c= float(input("Insira o intervalo C:"))
d= float(input("Insira o intervalo D:"))

if (b>a and d>c):
	if((c >= a and c <= b) or (d>=a and d<=b)):
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Ha intersecao")
	else:
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Nao ha intersecao")
else:
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 1.0 , 2.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 10:02:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a= float(input("Insira o intervalo A:"))
b= float(input("Insira o intervalo B:"))
c= float(input("Insira o intervalo C:"))
d= float(input("Insira o intervalo D:"))

if (b>a and d>c):
	if((c >= a and c <= b) or (d>=a and d<=b)):
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Ha intersecao")
	else:
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", a,",",b)
		print("Nao ha intersecao")
else:
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", a,",",b)
	print("Entradas invalidas")
-- EXECUTION TIME:
0.140295
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 1.0 , 2.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 1.5 , 5.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: -1.0 , -3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 10:03:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a= float(input("Insira o intervalo A:"))
b= float(input("Insira o intervalo B:"))
c= float(input("Insira o intervalo C:"))
d= float(input("Insira o intervalo D:"))

if (b>a and d>c):
	if((c >= a and c <= b) or (d>=a and d<=b)):
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", c,",",d)
		print("Ha intersecao")
	else:
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", c,",",d)
		print("Nao ha intersecao")
else:
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",",d)
	print("Entradas invalidas")
-- EXECUTION TIME:
0.19421
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
