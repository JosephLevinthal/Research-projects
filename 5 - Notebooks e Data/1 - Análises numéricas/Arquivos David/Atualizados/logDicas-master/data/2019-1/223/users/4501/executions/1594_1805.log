== TEST (2019-04-11 23:11:57) 
-- CODE:
a=float(input("Ax: "))
b=float(input("Ay: "))
c=float(input("Bx: "))
d=float(input("By: "))
print(round(a, 1))
print(round(b, 1))
print(round(c, 1))
print(round(d, 1))


-- OUTPUT:
50.0
25.0
30.0
48.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 23:18:02) 
-- CODE:
a=float(input("Ax: "))
b=float(input("Ay: "))
c=float(input("Bx: "))
d=float(input("By: "))
x*M=(((x*B) + (x*A)/(2))
y*M=(((y*B) + (yA)/(2)) 
print(round(a, 1))
print(round(b, 1))
print(round(c, 1))
print(round(d, 1))


-- ERROR:
File "XXXX", line 6
    y*M=(((y*B) + (yA)/(2)) 
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 23:18:20) 
-- CODE:
a=float(input("Ax: "))
b=float(input("Ay: "))
c=float(input("Bx: "))
d=float(input("By: "))
x*M=(((x*B) + (x*A)/(2))
y*M=(((y*B) + (y*A)/(2)) 
print(round(a, 1))
print(round(b, 1))
print(round(c, 1))
print(round(d, 1))


-- ERROR:
File "XXXX", line 6
    y*M=(((y*B) + (y*A)/(2)) 
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 23:26:50) 
-- CODE:
a=float(input("Ax: "))
b=float(input("Ay: "))
c=float(input("Bx: "))
d=float(input("By: "))
v=(x*M)=(((x*B) + (x*A)/(2))
x=(y*M)=(((y*B) + (y*A)/(2)) 
print(round(v, 1))
print(round(x, 1))


-- ERROR:
File "XXXX", line 6
    x=(y*M)=(((y*B) + (y*A)/(2)) 
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 23:27:49) 
-- CODE:
a=float(input("Ax: "))
b=float(input("Ay: "))
c=float(input("Bx: "))
d=float(input("By: "))
v=(x*M)=((x*B) + (x*A)/(2))
x=(y*M)=((y*B) + (y*A)/(2)) 
print(round(v, 1))
print(round(x, 1))


-- ERROR:
File "XXXX", line 5
    v=(x*M)=((x*B) + (x*A)/(2))
     ^
SyntaxError: can't assign to operator
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 23:28:46) 
-- CODE:
a=float(input("Ax: "))
b=float(input("Ay: "))
c=float(input("Bx: "))
d=float(input("By: "))
v=(((x*B) + (x*A)/(2))
x=(((y*B) + (y*A)/(2)) 
print(round(v, 1))
print(round(x, 1))


-- ERROR:
File "XXXX", line 6
    x=(((y*B) + (y*A)/(2)) 
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 23:29:36) 
-- CODE:
a=float(input("Ax: "))
b=float(input("Ay: "))
c=float(input("Bx: "))
d=float(input("By: "))
v=(((x*B) + (x*A)/(2))*(((y*B) + (y*A)/(2)) 
print(round(v, 1))



-- ERROR:
File "XXXX", line 6
    print(round(v, 1))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 17:13:19) 
-- CODE:
a=float(input("Ax: "))
b=float(input("Ay: "))
c=float(input("Bx: "))
d=float(input("By: "))
xm=((x*B) + (x*A)/(2))
ym=((y*B) + (y*A)/(2)) 
print(round(v, 1))



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    xm=((x*B) + (x*A)/(2))
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 17:15:31) 
-- CODE:
a=float(input("Ax: "))
b=float(input("Ay: "))
c=float(input("Bx: "))
d=float(input("By: "))
xm=((xB) + (xA)/(2))
ym=((yB) + (yA))/(2))) 
print(round(xm, 1))
print(round(ym, 1))



-- ERROR:
File "XXXX", line 6
    ym=((yB) + (yA))/(2))) 
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 17:16:00) 
-- CODE:
a=float(input("Ax: "))
b=float(input("Ay: "))
c=float(input("Bx: "))
d=float(input("By: "))
xm=(((xB) + (xA))/(2))
ym=(((yB) + (yA))/(2))
print(round(xm, 1))
print(round(ym, 1))



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    xm=(((xB) + (xA))/(2))
NameError: name 'xB' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 17:18:26) 
-- CODE:
xA=float(input("Ax: "))
yA=float(input("Ay: "))
xB=float(input("Bx: "))
yB=float(input("By: "))
xm=(((x*B) + (x*A))/(2))
ym=(((y*B) + (y*A))/(2))
print(round(xm, 1))
print(round(ym, 1))



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    xm=(((x*B) + (x*A))/(2))
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 17:19:16) 
-- CODE:
xA=float(input("Ax: "))
yA=float(input("Ay: "))
xB=float(input("Bx: "))
yB=float(input("By: "))
xm=(((xB) + (xA))/(2))
ym=(((yB) + (yA))/(2))
print(round(xm, 1))
print(round(ym, 1))



-- OUTPUT:
40.0
36.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-12 17:19:54) 
-- CODE:
xA=float(input("Ax: "))
yA=float(input("Ay: "))
xB=float(input("Bx: "))
yB=float(input("By: "))
xm=(((xB) + (xA))/(2))
ym=(((yB) + (yA))/(2))
print(round(xm, 1))
print(round(ym, 1))



-- EXECUTION TIME:
0.160565
-- TEST CASE 1:
---- input:
50
25
30
48
---- correct output:
40.0
36.5
---- user output:
40.0
36.5
-- TEST CASE 2:
---- input:
2.5
3.0
5.0
1.8
---- correct output:
3.8
2.4
---- user output:
3.8
2.4
-- TEST CASE 3:
---- input:
1.22
2.33
3.44
4.55
---- correct output:
2.3
3.4
---- user output:
2.3
3.4
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
