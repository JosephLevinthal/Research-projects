== TEST (2019-03-26 17:05:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Use as mensagens de erro para corrigir seu codigo.

valor = int(input("Qual o valor do saque? "))

# Quantidade de notas de R$ 50
notas_100 = valor // 100 

# Valor restante a ser sacado com notas menores que R$ 50
resto_100 = valor % 100

# Quantidade de notas de R$ 10
notas_50 = resto_50 // 50

# Valor restante a ser sacado com notas menores que R$ 50
resto_50 = resto_50 % 50

# Quantidade de notas de R$ 2
notas_10 = resto_10 // 10

print(int(notas_100))
print(int(notas_50))
print(int(notas_10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    notas_50 = resto_50 // 50
NameError: name 'resto_50' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:05:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Use as mensagens de erro para corrigir seu codigo.

valor = int(input("Qual o valor do saque? "))

# Quantidade de notas de R$ 50
notas_100 = valor // 100 

# Valor restante a ser sacado com notas menores que R$ 50
resto_100 = valor % 100

# Quantidade de notas de R$ 10
notas_50 = resto_100 // 50

# Valor restante a ser sacado com notas menores que R$ 50
resto_50 = resto_100 % 50

# Quantidade de notas de R$ 2
notas_10 = resto_10 // 10

print(int(notas_100))
print(int(notas_50))
print(int(notas_10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 20, in <module>
    notas_10 = resto_10 // 10
NameError: name 'resto_10' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:05:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Use as mensagens de erro para corrigir seu codigo.

valor = int(input("Qual o valor do saque? "))

# Quantidade de notas de R$ 50
notas_100 = valor // 100 

# Valor restante a ser sacado com notas menores que R$ 50
resto_100 = valor % 100

# Quantidade de notas de R$ 10
notas_50 = resto_100 // 50

# Valor restante a ser sacado com notas menores que R$ 50
resto_50 = resto_100 % 50

# Quantidade de notas de R$ 2
notas_10 = resto_50 // 10

print(int(notas_100))
print(int(notas_50))
print(int(notas_10))
-- OUTPUT:
9
1
4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:05:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Use as mensagens de erro para corrigir seu codigo.

valor = int(input("Qual o valor do saque? "))

# Quantidade de notas de R$ 50
notas_100 = valor // 100 

# Valor restante a ser sacado com notas menores que R$ 50
resto_100 = valor % 100

# Quantidade de notas de R$ 10
notas_50 = resto_100 // 50

# Valor restante a ser sacado com notas menores que R$ 50
resto_50 = resto_100 % 50

# Quantidade de notas de R$ 2
notas_10 = resto_50 // 10

print(int(notas_100))
print(int(notas_50))
print(int(notas_10))
-- EXECUTION TIME:
0.161595
-- TEST CASE 1:
---- input:
990
---- correct output:
9
1
4
---- user output:
9
1
4
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
