== TEST (2019-04-20 11:11:03) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: "))

print("Entradas:",H,",",h,",",r)

if(H < 0 or h < 0 or r < 0):
	print("Entradas invalidas")
elif(h < r):
	print(round((pi/3) * h ** 2 *(3*r -h), 3))
elif(h < H - r):
	print(round((2/3)* pi * r ** 3 + pi * r ** 2 * (h - r), 3))
elif(h <= H):
	print(round((4/3) * pi * r ** 3 + pi * r ** 2 * (h - r) - (1/5) * pi * (H - h)**2 * (5 * r - H + h) ,3))
	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
81.987
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 11:13:29) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: "))

print("Entradas:",H,",",h,",",r)

if(H < 0 or h < 0 or r < 0):
	print("Entradas invalidas")
elif(h < r):
	vol = (pi/3) * h ** 2 *(3*r -h)
elif(h < H - r):
	vol = (2/3)* pi * r ** 3 + pi * r ** 2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r ** 3 + pi * r ** 2 * (h - r) - (1/5) * pi * (H - h)**2 * (5 * r - H + h) 

print("Volume",round(vol, 3))
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume 81.987
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 11:13:53) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: "))

print("Entradas:",H,",",h,",",r)

if(H < 0 or h < 0 or r < 0):
	print("Entradas invalidas")
elif(h < r):
	vol = (pi/3) * h ** 2 *(3*r -h)
elif(h < H - r):
	vol = (2/3)* pi * r ** 3 + pi * r ** 2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r ** 3 + pi * r ** 2 * (h - r) - (1/5) * pi * (H - h)**2 * (5 * r - H + h) 

print("Volume:",round(vol, 3), "litros")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 11:16:57) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: "))

print("Entradas:",H,",",h,",",r)

if(H < 0 or h < 0 or r < 0):
	print("Entradas invalidas")
elif(h < r):
	vol = (1./3) * pi * h ** 2 * (3 * r - h)
elif(h < H - r):
	vol = (2./3)* pi * r ** 3 + pi * r ** 2 * (h - r)
elif(h <= H):
	vol = (4./5) * pi * r ** 3 + pi * r ** 2 * (H - 2 * r) - (1/5) * pi * (H - h) ** 2 * (5 * r - H + h) 

print("Volume:",round(vol, 3), "litros")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 11:19:12) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: "))

print("Entradas:",H,",",h,",",r)

if(H < 0 or h < 0 or r < 0):
	print("Entradas invalidas")
elif(h < r):
	vol = ((1./3) * pi) * (h ** 2) * (3 * r - h)
elif(h < H - r):
	vol = ((2./3) * pi) * (r ** 3) + pi * (r ** 2) * (h - r)
elif(h <= H):
	vol = ((4./5) * pi) * (r ** 3) + pi * (r ** 2) * (H - 2 * r) - ((1/5) * pi) * ((H - h) ** 2) * (5 * r - H + h) 

print("Volume:",round(vol, 3), "litros")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 11:20:10) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: "))

print("Entradas:",H,",",h,",",r)

if(h < 0 or H < 0 or r < 0):
	print("Entradas invalidas")
elif(h < r):
	vol = ((1./3) * pi) * (h ** 2) * (3 * r - h)
elif(h < H - r):
	vol = ((2./3) * pi) * (r ** 3) + pi * (r ** 2) * (h - r)
elif(h <= H):
	vol = ((4./5) * pi) * (r ** 3) + pi * (r ** 2) * (H - 2 * r) - ((1/5) * pi) * ((H - h) ** 2) * (5 * r - H + h) 

print("Volume:",round(vol, 3), "litros")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 11:24:12) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: "))

print("Entradas:",H,",",h,",",r)

if(h < 0 or H < 0 or r < 0):
	print("Entradas invalidas")
elif(h < r):
	print("Volume:",round(((1./3) * pi) * (h ** 2) * (3 * r - h),3),"litros")
elif(h < H - r):
	print("Volume:",round(((2./3) * pi) * (r ** 3) + pi * (r ** 2) * (h - r), 3),"litros")
elif(h <= H):
	print("Volume:",round(((4./5) * pi) * (r ** 3) + pi * (r ** 2) * (H - 2 * r) - ((1/5) * pi) * ((H - h) ** 2) * (5 * r - H + h), 3),"litros") 


-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 11:24:59) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: "))

print("Entradas:",H,",",h,",",r)

if(h < 0 or H < 0 or r < 0):
	print("Entradas invalidas")
elif(h < r):
	print("Volume:",round(((1./3) * pi) * (h ** 2) * (3 * r - h),3),"litros")
elif(h < H - r):
	print("Volume:",round(((2./3) * pi) * (r ** 3) + pi * (r ** 2) * (h - r), 3),"litros")
elif(h <= H):
	print("Volume:",round(((4./5) * pi) * (r ** 3) + pi * (r ** 2) * (H - 2 * r) - ((1/5) * pi) * ((H - h) ** 2) * (5 * r - H + h), 3),"litros") 
else:
	print("Entradas invalidas")

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 11:26:03) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: "))

print("Entradas:",H,",",h,",",r)

if(h < 0 or H < 0 or r < 0):
	print("Entradas invalidas")
	if(h < r):
		print("Volume:",round(((1./3) * pi) * (h ** 2) * (3 * r - h),3),"litros")
	elif(h < H - r):
		print("Volume:",round(((2./3) * pi) * (r ** 3) + pi * (r ** 2) * (h - r), 3),"litros")
	elif(h <= H):
		print("Volume:",round(((4./5) * pi) * (r ** 3) + pi * (r ** 2) * (H - 2 * r) - ((1/5) * pi) * ((H - h) ** 2) * (5 * r - H + h), 3),"litros") 


-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 11:27:32) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: "))

print("Entradas:",H,",",h,",",r)

if(h > 0 and H > 0 and r > 0):
	vol = "Entradas validas"
	if(h < r):
		print("Volume:",round(((1./3) * pi) * (h ** 2) * (3 * r - h),3),"litros")
	elif(h < H - r):
		print("Volume:",round(((2./3) * pi) * (r ** 3) + pi * (r ** 2) * (h - r), 3),"litros")
	elif(h <= H):
		print("Volume:",round(((4./5) * pi) * (r ** 3) + pi * (r ** 2) * (H - 2 * r) - ((1/5) * pi) * ((H - h) ** 2) * (5 * r - H + h), 3),"litros") 
else:
	"Entradas invalidas"

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 11:28:17) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: "))

print("Entradas:",H,",",h,",",r)

if(h > 0 and H > 0 and r > 0):
	if(h < r):
		print("Volume:",round(((1./3) * pi) * (h ** 2) * (3 * r - h),3),"litros")
	elif(h < H - r):
		print("Volume:",round(((2./3) * pi) * (r ** 3) + pi * (r ** 2) * (h - r), 3),"litros")
	elif(h <= H):
		print("Volume:",round(((4./5) * pi) * (r ** 3) + pi * (r ** 2) * (H - 2 * r) - ((1/5) * pi) * ((H - h) ** 2) * (5 * r - H + h), 3),"litros") 
else:
	print("Entradas invalidas")

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 11:28:28) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: "))

print("Entradas:",H,",",h,",",r)

if(h > 0 and H > 0 and r > 0):
	if(h < r):
		print("Volume:",round(((1./3) * pi) * (h ** 2) * (3 * r - h),3),"litros")
	elif(h < H - r):
		print("Volume:",round(((2./3) * pi) * (r ** 3) + pi * (r ** 2) * (h - r), 3),"litros")
	elif(h <= H):
		print("Volume:",round(((4./5) * pi) * (r ** 3) + pi * (r ** 2) * (H - 2 * r) - ((1/5) * pi) * ((H - h) ** 2) * (5 * r - H + h), 3),"litros") 
else:
	print("Entradas invalidas")

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-20 11:43:54) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: "))

print("Entradas:",H,",",h,",",r)

if(h > 0 and H > 0 and r > 0):
	if(h < r):
		print("Volume:",round(((1./3) * pi) * (h ** 2) * (3 * r - h),3),"litros")
	elif(h < H - r):
		print("Volume:",round(((2./3) * pi) * (r ** 3) + pi * (r ** 2) * (h - r), 3),"litros")
	elif(h <= H):
		print("Volume:",round(((4./5) * pi) * (r ** 3) + pi * (r ** 2) * (H - 2 * r) - ((1/5) * pi) * ((H - h) ** 2) * (5 * r - H + h), 3),"litros") 
else:
	print("Entradas invalidas")

-- EXECUTION TIME:
0.145629
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 234.572 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 11:45:41) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: ")
			 
print("Volume:",round(((1./3) * pi) * (h ** 2) * (3 * r - h),3),"litros")
	
-- ERROR:
File "XXXX", line 13
    print("Volume:",round(((1./3) * pi) * (h ** 2) * (3 * r - h),3),"litros")
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 11:45:57) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: ")
			 
print("Volume:",round(((1./3) * pi) * (h ** 2) * (3 * r - h),3),"litros")
	
-- ERROR:
File "XXXX", line 13
    print("Volume:",round(((1./3) * pi) * (h ** 2) * (3 * r - h),3),"litros")
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 11:46:13) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: ")

print("Volume:",round(((1./3) * pi) * (h ** 2) * (3 * r - h),3),"litros")
	
-- ERROR:
File "XXXX", line 13
    print("Volume:",round(((1./3) * pi) * (h ** 2) * (3 * r - h),3),"litros")
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 11:47:06) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: ")
calculo = 1/3 * pi * h ** 2 * (3 * r - h) 

print(calculo)
	
-- ERROR:
File "XXXX", line 12
    calculo = 1/3 * pi * h ** 2 * (3 * r - h) 
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 11:47:37) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: ")
calculo = 1/3 * pi * h ** 2 * (3 * r - h) 

print(calculo)
	
-- ERROR:
File "XXXX", line 12
    calculo = 1/3 * pi * h ** 2 * (3 * r - h) 
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 11:48:03) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: ")

a = 1/3 * pi * h ** 2 * (3 * r - h) 

print(calculo)
	
-- ERROR:
File "XXXX", line 13
    a = 1/3 * pi * h ** 2 * (3 * r - h) 
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 11:48:20) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: "

print(calculo)
	
-- ERROR:
File "XXXX", line 13
    print(calculo)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-21 18:43:49) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: "))

print("Entradas:",H,",",h,",",r)

if(h > 0 and H > 0 and r > 0):
	if(h < r):
		print("Volume:",round(((1./3) * pi) * (h ** 2) * (3 * r - h),3),"litros")
	elif(h < H - r):
		print("Volume:",round(((2./3) * pi) * (r ** 3) + pi * (r ** 2) * (h - r), 3),"litros")
	elif(h <= H):
		print("Volume:",round(((4./5) * pi) * (r ** 3) + pi * (r ** 2) * (H - 2 * r) - ((1/5) * pi) * ((H - h) ** 2) * (5 * r - H + h), 3),"litros") 
else:
	print("Entradas invalidas")

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 16:44:13) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: "))

print("Entradas:",H,",",h,",",r)

if(h < 0 and H < 0 and r < 0):
	if(h < r):
		print("Volume:",round(((1./3) * pi) * (h ** 2) * (3 * r - h),3),"litros")
	elif(h < H - r):
		print("Volume:",round(((2./3) * pi) * (r ** 3) + pi * (r ** 2) * (h - r), 3),"litros")
	elif(h <= H):
		print("Volume:",round(((4./5) * pi) * (r ** 3) + pi * (r ** 2) * (H - 2 * r) - ((1/5) * pi) * ((H - h) ** 2) * (5 * r - H + h), 3),"litros") 
else:
	print("Entradas invalidas")

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Entradas invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 16:45:42) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: "))

print("Entradas:",H,",",h,",",r)

if(h < 0 and H < 0 and r < 0):
	print("Entradas invalidas")

elif(h < r):
	print("Volume:",round(((1./3) * pi) * (h ** 2) * (3 * r - h),3),"litros")
elif(h < H - r):
	print("Volume:",round(((2./3) * pi) * (r ** 3) + pi * (r ** 2) * (h - r), 3),"litros")
elif(h <= H):
	print("Volume:",round(((4./5) * pi) * (r ** 3) + pi * (r ** 2) * (H - 2 * r) - ((1/5) * pi) * ((H - h) ** 2) * (5 * r - H + h), 3),"litros") 

	print("Entradas invalidas")

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 16:45:52) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: "))

print("Entradas:",H,",",h,",",r)

if(h < 0 and H < 0 and r < 0):
	print("Entradas invalidas")
elif(h < r):
	print("Volume:",round(((1./3) * pi) * (h ** 2) * (3 * r - h),3),"litros")
elif(h < H - r):
	print("Volume:",round(((2./3) * pi) * (r ** 3) + pi * (r ** 2) * (h - r), 3),"litros")
elif(h <= H):
	print("Volume:",round(((4./5) * pi) * (r ** 3) + pi * (r ** 2) * (H - 2 * r) - ((1/5) * pi) * ((H - h) ** 2) * (5 * r - H + h), 3),"litros") 

	print("Entradas invalidas")

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 16:46:10) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: "))

print("Entradas:",H,",",h,",",r)

if(h < 0 and H < 0 and r < 0):
	print("Entradas invalidas")
elif(h < r):
	print("Volume:",round(((1./3) * pi) * (h ** 2) * (3 * r - h),3),"litros")
elif(h < H - r):
	print("Volume:",round(((2./3) * pi) * (r ** 3) + pi * (r ** 2) * (h - r), 3),"litros")
elif(h <= H):
	print("Volume:",round(((4./5) * pi) * (r ** 3) + pi * (r ** 2) * (H - 2 * r) - ((1/5) * pi) * ((H - h) ** 2) * (5 * r - H + h), 3),"litros") 

	

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 16:49:25) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: "))

print("Entradas:",H,",",h,",",r)

if(h < 0 and H < 0 and r < 0):
	print("Entradas invalidas")
elif(h < r):
	print("Volume:",round(((1./3) * pi) * (H ** 2) * (3 * r - H),3),"litros")
elif(h < H - r):
	print("Volume:",round(((2./3) * pi) * (r ** 3) + pi * (r ** 2) * (H - r), 3),"litros")
elif(h <= H):
	print("Volume:",round(((4./5) * pi) * (r ** 3) + pi * (r ** 2) * (H - 2 * r) - ((1/5) * pi) * ((H - h) ** 2) * (5 * r - H + h), 3),"litros") 

	

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 175.054 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 16:52:07) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: "))

print("Entradas:",H,",",h,",",r)

if((h > 0 and H > 0 and r > 0) and (H > h and H > 2*r)):
	if(h < r):
		print("Volume:",round(((1./3) * pi) * (h ** 2) * (3 * r - h),3),"litros")
	elif(h < H - r):
		print("Volume:",round(((2./3) * pi) * (r ** 3) + pi * (r ** 2) * (h - r), 3),"litros")
	elif(h <= H):
		print("Volume:",round(((4./5) * pi) * (r ** 3) + pi * (r ** 2) * (H - 2 * r) - ((1/5) * pi) * ((H - h) ** 2) * (5 * r - H + h), 3),"litros") 
else:
	print("Entradas invalidas")

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:55:01) 
-- CODE:
from math import*

H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))

if(h < 0 or H < 0 or r < 0):
	print("Entradas invalidas")
elif(h < r):
	vol = (1./3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2./3) * pi * r**3 *+ pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./5) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/5) * pi * (H-h)**2 * (5 * r - H + h)

print(vol)	
-- OUTPUT:
1439.880941860335
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:58:14) 
-- CODE:
from math import*

H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))

if((h < 0 or H < 0 or r < 0) and (H > h and H > 2 * r)):
	print("Entradas invalidas")
elif(h < r):
	vol = (1./3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2./3) * pi * r**3 *+ pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./5) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/5) * pi * (H-h)**2 * (5 * r - H + h)

print(vol)	
-- OUTPUT:
1439.880941860335
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:58:36) 
-- CODE:
from math import*

H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))

if((h < 0 or H < 0 or r < 0) and (H > h and H > 2 * r)):
	print("Entradas invalidas")
elif(h < r):
	vol = (1./3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2./3) * pi * r**3 *+ pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./5) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/5) * pi * (H-h)**2 * (5 * r - H + h)

print(vol)	
-- OUTPUT:
1439.880941860335
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:59:26) 
-- CODE:
from math import*

H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o nivel de combustivel: "))


if((h < 0 or H < 0 or r < 0) and (H > h and H > 2 * r)):
	print("Entradas invalidas")
elif(h < r):
	vol = (1./3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2./3) * pi * r**3 *+ pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./5) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/5) * pi * (H-h)**2 * (5 * r - H + h)

print(vol)	
-- OUTPUT:
81.98719067828401
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 20:01:04) 
-- CODE:
from math import*

H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o nivel de combustivel: "))


if((h < 0 or H < 0 or r < 0) and (H > h and H > 2 * r)):
	print("Entradas invalidas")
elif(h < r):
	vol = (1./3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./5) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/5) * pi * (H-h)**2 * (5 * r - H + h)

print(vol)	
-- OUTPUT:
81.98719067828401
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 20:01:55) 
-- CODE:
from math import*

H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o nivel de combustivel: "))


if((h < 0 or H < 0 or r < 0) and (H > h and H > 2 * r)):
	print("Entradas invalidas")
elif(h < r):
	vol = (1./3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H-h)**2 * (3 * r - H + h)

print(vol)	
-- OUTPUT:
81.98719067828401
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 20:02:03) 
-- CODE:
from math import*

H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o nivel de combustivel: "))


if((h < 0 or H < 0 or r < 0) and (H > h and H > 2 * r)):
	print("Entradas invalidas")
elif(h < r):
	vol = (1./3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H-h)**2 * (3 * r - H + h)

print(vol)	
-- OUTPUT:
81.98719067828401
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 20:02:18) 
-- CODE:
from math import*

H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o nivel de combustivel: "))


if((h < 0 or H < 0 or r < 0) and (H > h and H > 2 * r)):
	print("Entradas invalidas")
elif(h < r):
	vol = (1./3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H-h)**2 * (3 * r - H + h)

print(vol)	
-- OUTPUT:
81.98719067828401
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 20:04:24) 
-- CODE:
from math import*

H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))


print("Entradas:",H,",",h,",",r)

if((h < 0 or H < 0 or r < 0) and (H > h and H > 2 * r)):
	print("Entradas invalidas")
elif(h < r):
	vol = (1./3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H-h)**2 * (3 * r - H + h)

print("Volume:",round(vol,3),"litros")	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 20:04:48) 
-- CODE:
from math import*

H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))


print("Entradas:",H,",",h,",",r)

if((h < 0 or H < 0 or r < 0) and (H > h and H > 2 * r)):
	print("Entradas invalidas")
elif(h < r):
	vol = (1./3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H-h)**2 * (3 * r - H + h)

print("Volume:",round(vol,6),"litros")	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 20:05:08) 
-- CODE:
from math import*

H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))


print("Entradas:",H,",",h,",",r)

if((h < 0 or H < 0 or r < 0) and (H > h and H > 2 * r)):
	print("Entradas invalidas")
elif(h < r):
	vol = (1./3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H-h)**2 * (3 * r - H + h)

print("Volume:",round(vol,6),"litros")	
-- EXECUTION TIME:
0.123404
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 234.572251 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 20:05:39) 
-- CODE:
from math import*

H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))


print("Entradas:",H,",",h,",",r)

if((h < 0 or H < 0 or r < 0) and (H > h and H > 2 * r)):
	print("Entradas invalidas")
elif(h < r):
	vol = (1./3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H-h)**2 * (3 * r - H + h)

print("Volume:",round(vol),"litros")	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 82 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 20:06:01) 
-- CODE:
from math import*

H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))


print("Entradas:",H,",",h,",",r)

if((h < 0 or H < 0 or r < 0) and (H > h and H > 2 * r)):
	print("Entradas invalidas")
elif(h < r):
	vol = (1./3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H-h)**2 * (3 * r - H + h)

print("Volume:",vol,"litros")	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.98719067828401 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 20:06:55) 
-- CODE:
from math import*

H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))


print("Entradas:",H,",",h,",",r)

if((h < 0 or H < 0 or r < 0) and (H > h and H > 2 * r)):
	print("Entradas invalidas")
elif(h < r):
	vol = (1./3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H-h)**2 * (3 * r - H + h)

print("Volume:",round(vol,6),"litros")	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 20:07:17) 
-- CODE:
from math import*

H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))


print("Entradas:",H,",",h,",",r)

if((h < 0 or H < 0 or r < 0) and (H > h and H > 2 * r)):
	print("Entradas invalidas")
elif(h < r):
	vol = (1./3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H-h)**2 * (3 * r - H + h)

print("Volume:",round(vol,6),"litros")	
-- EXECUTION TIME:
0.262106
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 234.572251 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 20:07:58) 
-- CODE:
from math import*

H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))


print("Entradas:",H,",",h,",",r)

if((h < 0 or H < 0 or r < 0) and (H > h and H > 2 * r)):
	print("Entradas invalidas")
elif(h < r):
	vol = (1./3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H-h)**2 * (3 * r - H + h)

print("Volume:",round(vol,3),"litros")	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 20:08:10) 
-- CODE:
from math import*

H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))


print("Entradas:",H,",",h,",",r)

if((h < 0 or H < 0 or r < 0) and (H > h and H > 2 * r)):
	print("Entradas invalidas")
elif(h < r):
	vol = (1./3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H-h)**2 * (3 * r - H + h)

print(round(vol,3))
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
81.987
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 20:08:36) 
-- CODE:
from math import*

H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))


print("Entradas:",H,",",h,",",r)

if((h < 0 or H < 0 or r < 0) and (H > h and H > 2 * r)):
	print("Entradas invalidas")
elif(h < r):
	vol = (1./3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H-h)**2 * (3 * r - H + h)

print(round(vol,6))
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
81.987191
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 20:09:57) 
-- CODE:
from math import*

H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))


print("Entradas:",H,",",h,",",r)

if((h < 0 or H < 0 or r < 0) and (H > h and H > 2 * r)):
	print("Entradas invalidas")
elif(h < r):
	vol = (1./3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H-h)**2 * (3 * r - H + h)

print("Volume:",round(vol,6),"litros")
-- EXECUTION TIME:
0.13944
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 234.572251 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 20:10:07) 
-- CODE:
from math import*

H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))


print("Entradas:",H,",",h,",",r)

if((h < 0 or H < 0 or r < 0) and (H > h and H > 2 * r)):
	print("Entradas invalidas")
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H-h)**2 * (3 * r - H + h)

print("Volume:",round(vol,6),"litros")
-- EXECUTION TIME:
0.211187
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 234.572251 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 20:12:43) 
-- CODE:
from math import*

H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))


print("Entradas:",H,",",h,",",r)

if((h < 0 or H < 0 or r < 0) and (H > h and H > 2 * r)):
	print("Entradas invalidas")
elif(h < r):
	vol = ((1/3) * pi) * (h**2) * (3 * r - h)
elif(h < H - r):
	vol = ((2/3) * pi) * (r**3) + pi * (r**2) * (h - r)
elif(h <= H):
	vol = ((4/3) * pi) * (r**3) + pi * (r**2) * (H - 2 * r) - ((1/3) * pi) * ((H-h)**2) * (3 * r - H + h)

print("Volume:",round(vol,3),"litros")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 20:12:44) 
-- CODE:
from math import*

H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))


print("Entradas:",H,",",h,",",r)

if((h < 0 or H < 0 or r < 0) and (H > h and H > 2 * r)):
	print("Entradas invalidas")
elif(h < r):
	vol = ((1/3) * pi) * (h**2) * (3 * r - h)
elif(h < H - r):
	vol = ((2/3) * pi) * (r**3) + pi * (r**2) * (h - r)
elif(h <= H):
	vol = ((4/3) * pi) * (r**3) + pi * (r**2) * (H - 2 * r) - ((1/3) * pi) * ((H-h)**2) * (3 * r - H + h)

print("Volume:",round(vol,3),"litros")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 20:12:44) 
-- CODE:
from math import*

H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))


print("Entradas:",H,",",h,",",r)

if((h < 0 or H < 0 or r < 0) and (H > h and H > 2 * r)):
	print("Entradas invalidas")
elif(h < r):
	vol = ((1/3) * pi) * (h**2) * (3 * r - h)
elif(h < H - r):
	vol = ((2/3) * pi) * (r**3) + pi * (r**2) * (h - r)
elif(h <= H):
	vol = ((4/3) * pi) * (r**3) + pi * (r**2) * (H - 2 * r) - ((1/3) * pi) * ((H-h)**2) * (3 * r - H + h)

print("Volume:",round(vol,3),"litros")
-- EXECUTION TIME:
0.188589
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Digite a altura: Digite o nivel de combustivel: Digite o raio: Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Digite a altura: Digite o nivel de combustivel: Digite o raio: Entradas: 8.5 , 9.5 , 2.2
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Digite a altura: Digite o nivel de combustivel: Digite o raio: Entradas: 8.0 , 4.0 , 6.0
Volume: 234.572 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 20:14:52) 
-- CODE:
from math import*

H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))


print("Entradas:",H,",",h,",",r)

if((h < 0 or H < 0 or r < 0) and (H > h and H > 2 * r)):
	print("Entradas invalidas")
elif(h < r):
	vol = ((1/3) * pi) * (h**2) * (3 * r - h)
elif(h < H - r):
	vol = ((2/3) * pi) * (r**3) + pi * (r**2) * (h - r)
elif(h < H):
	vol = ((4/3) * pi) * (r**3) + pi * (r**2) * (H - 2 * r) - ((1/3) * pi) * ((H-h)**2) * (3 * r - H + h)

print("Volume:",round(vol,3),"litros")
-- EXECUTION TIME:
0.206016
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 234.572 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 20:24:52) 
-- CODE:
from math import*

H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))


print("Entradas:",H,",",h,",",r)

if((h < 0 or H < 0 or r < 0) and (H > h and H > 2 * r)):
	print("Entradas invalidas")
elif(h < r):
	vol = ((1/3) * pi) * (h**2) * (3 * r - h)
elif(h < H - r):
	vol = ((2/3) * pi) * (r**3) + pi * (r**2) * (h - r)
elif(h < H):
	vol = (((4/3) * pi) * (r**3) + pi * (r**2) * (H - 2 * r) - ((1/3) * pi) * 
	((H-h)**2) * (3 * r - H + h)) * 1000
	
print("Volume:",round(vol,3),"litros")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 20:25:05) 
-- CODE:
from math import*

H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))


print("Entradas:",H,",",h,",",r)

if((h < 0 or H < 0 or r < 0) and (H > h and H > 2 * r)):
	print("Entradas invalidas")
elif(h < r):
	vol = ((1/3) * pi) * (h**2) * (3 * r - h)
elif(h < H - r):
	vol = ((2/3) * pi) * (r**3) + pi * (r**2) * (h - r)
elif(h < H):
	vol = (((4/3) * pi) * (r**3) + pi * (r**2) * (H - 2 * r) - ((1/3) * pi) * 
	((H-h)**2) * (3 * r - H + h)) * 1000
	
print("Volume:",round(vol,3),"litros")
-- EXECUTION TIME:
0.147626
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 234.572 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 20:28:01) 
-- CODE:
from math import*

H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))


print("Entradas:",H,",",h,",",r)

if((h < 0 or H < 0 or r < 0) and (H > h and H > 2 * r)):
	print("Entradas invalidas")
elif(h < r):
	vol = ((1/3) * pi) * (h**2) * (3 * r - h)
elif(h < H - r):
	vol = ((2/3) * pi) * (r**3) + pi * (r**2) * (h - r)
elif(h < H):
	vol = (((4/3) * pi) * (r**3) + pi * (r**2) * (H - 2 * r) - ((1/3) * pi) * 
	((H-h)**2) * (5 * r - H + h)) 
	
print("Volume:",round(vol,3),"litros")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 20:28:21) 
-- CODE:
from math import*

H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))


print("Entradas:",H,",",h,",",r)

if((h < 0 or H < 0 or r < 0) and (H > h and H > 2 * r)):
	print("Entradas invalidas")
elif(h < r):
	vol = ((1/3) * pi) * (h**2) * (3 * r - h)
elif(h < H - r):
	vol = ((2/3) * pi) * (r**3) + pi * (r**2) * (h - r)
elif(h < H):
	vol = (((4/3) * pi) * (r**3) + pi * (r**2) * (H - 2 * r) - ((1/3) * pi) * 
	((H-h)**2)) 
	
print("Volume:",round(vol,3),"litros")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 20:29:46) 
-- CODE:
from math import*

H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))


print("Entradas:",H,",",h,",",r)

if((h < 0 or H < 0 or r < 0) and (H > h and H > 2 * r)):
	print("Entradas invalidas")
elif(h < r):
	vol = ((1/3) * pi) * (h**2) * (3 * r - h)
elif(h < H - r):
	vol = ((2/3) * pi) * (r**3) + pi * (r**2) * (h - r)
elif(h < H):
	vol = (((4/3) * pi) * (r**3) + pi * (r**2) * (H - 2 * r) - ((1/3) * pi) * 
	((H-h)**2) * (1000 * r - H + h)) 
	
print("Volume:",round(vol,3),"litros")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 20:30:03) 
-- CODE:
from math import*

H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))


print("Entradas:",H,",",h,",",r)

if((h < 0 or H < 0 or r < 0) and (H > h and H > 2 * r)):
	print("Entradas invalidas")
elif(h < r):
	vol = ((1/3) * pi) * (h**2) * (3 * r - h)
elif(h < H - r):
	vol = ((2/3) * pi) * (r**3) + pi * (r**2) * (h - r)
elif(h < H):
	vol = (((4/3) * pi) * (r**3) + pi * (r**2) * (H - 2 * r) - ((1/3) * pi) * 
	((H-h)**2) * (10 * r - H + h)) 
	
print("Volume:",round(vol,3),"litros")
-- EXECUTION TIME:
0.123448
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 234.572 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 20:35:54) 
-- CODE:
from math import*

H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))


print("Entradas:",H,",",h,",",r)

if((h < 0 or H < 0 or r < 0) and (H > h and H > 2 * r)):
	print("Entradas invalidas")
elif(h < r):
	vol = ((1/3) * pi) * (h**2) * (3 * r - h)
elif(h < H - r):
	vol = ((2/3) * pi) * (r**3) + pi * (r**2) * (h - r)
elif(h < H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * 
	(H-h)**2 * (3 * r - H + h)
	
print("Volume:",round(vol,3),"litros")
-- ERROR:
File "XXXX", line 17
    vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * 
                                                                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 20:36:19) 
-- CODE:
from math import*

H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))


print("Entradas:",H,",",h,",",r)

if((h < 0 or H < 0 or r < 0) and (H > h and H > 2 * r)):
	print("Entradas invalidas")
elif(h < r):
	vol = ((1/3) * pi) * (h**2) * (3 * r - h)
elif(h < H - r):
	vol = ((2/3) * pi) * (r**3) + pi * (r**2) * (h - r)
elif(h < H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H-h)**2 * (3 * r - H + h)
	
print("Volume:",round(vol,3),"litros")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 20:36:26) 
-- CODE:
from math import*

H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))


print("Entradas:",H,",",h,",",r)

if((h < 0 or H < 0 or r < 0) and (H > h and H > 2 * r)):
	print("Entradas invalidas")
elif(h < r):
	vol = ((1/3) * pi) * (h**2) * (3 * r - h)
elif(h < H - r):
	vol = ((2/3) * pi) * (r**3) + pi * (r**2) * (h - r)
elif(h < H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H-h)**2 * (3 * r - H + h)
	
print("Volume:",round(vol,3),"litros")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 20:36:28) 
-- CODE:
from math import*

H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))


print("Entradas:",H,",",h,",",r)

if((h < 0 or H < 0 or r < 0) and (H > h and H > 2 * r)):
	print("Entradas invalidas")
elif(h < r):
	vol = ((1/3) * pi) * (h**2) * (3 * r - h)
elif(h < H - r):
	vol = ((2/3) * pi) * (r**3) + pi * (r**2) * (h - r)
elif(h < H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H-h)**2 * (3 * r - H + h)
	
print("Volume:",round(vol,3),"litros")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:26:54) 
-- CODE:
from math import*

H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))


print("Entradas:",H,",",h,",",r)

v = (4/6)*pi(r**3)
vt = (4/3)*pi*(r**3) + pi*(H - 2*r)*(r**2)
calota = (pi*((H - h)**2)*(3*r)-(H - h))/3

if(H > 0 and h > 0 and r > 0 and H > h and H > (2*r)):
	if(h < r):
		vol = v * 1000
		print("Volume:",round(vol,3),"litros")
	elif((h >= r) and (h < (H -r)):
		  vol = (v + (pi * (h - r)*(r**2)))*1000
		  print("Volume:",round(vol,3),"litros")
	elif(h >= (H - r)):
		  vol = (vt - calota) *1000
		  print("Volume:",round(vol,3),"litros")
else:
	print("Entradas invalidas")
	
print("Volume:",round(vol,3),"litros")
-- ERROR:
File "XXXX", line 18
    elif((h >= r) and (h < (H -r)):
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:27:13) 
-- CODE:
from math import*

H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))


print("Entradas:",H,",",h,",",r)

v = (4/6)*pi(r**3)
vt = (4/3)*pi*(r**3) + pi*(H - 2*r)*(r**2)
calota = (pi*((H - h)**2)*(3*r)-(H - h))/3

if(H > 0 and h > 0 and r > 0 and H > h and H > (2*r)):
	if(h < r):
		vol = v * 1000
		print("Volume:",round(vol,3),"litros")
	elif((h >= r) and (h < (H -r))):
		  vol = (v + (pi * (h - r)*(r**2)))*1000
		  print("Volume:",round(vol,3),"litros")
	elif(h >= (H - r)):
		  vol = (vt - calota) *1000
		  print("Volume:",round(vol,3),"litros")
else:
	print("Entradas invalidas")
	
print("Volume:",round(vol,3),"litros")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    v = (4/6)*pi(r**3)
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:27:50) 
-- CODE:
from math import*

H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))


print("Entradas:",H,",",h,",",r)

v = (4/6)*pi*(r**3)
vt = (4/3)*pi*(r**3) + pi*(H - 2*r)*(r**2)
calota = (pi*((H - h)**2)*(3*r)-(H - h))/3

if(H > 0 and h > 0 and r > 0 and H > h and H > (2*r)):
	if(h < r):
		vol = v * 1000
		print("Volume:",round(vol,3),"litros")
	elif((h >= r) and (h < (H -r))):
		  vol = (v + (pi * (h - r)*(r**2)))*1000
		  print("Volume:",round(vol,3),"litros")
	elif(h >= (H - r)):
		  vol = (vt - calota) *1000
		  print("Volume:",round(vol,3),"litros")
else:
	print("Entradas invalidas")
	
print("Volume:",round(vol,3),"litros")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:28:18) 
-- CODE:
from math import*

H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))


print("Entradas:",H,",",h,",",r)

v = (4/6)*pi*(r**3)
vt = (4/3)*pi*(r**3) + pi*(H - 2*r)*(r**2)
calota = (pi*((H - h)**2)*(3*r)-(H - h))/3

if(H > 0 and h > 0 and r > 0 and H > h and H > (2*r)):
	if(h < r):
		vol = v * 1000
		print("Volume:",round(vol,3),"litros")
	elif((h >= r) and (h < (H -r))):
		  vol = (v + (pi * (h - r)*(r**2)))*1000
		print("Volume:",round(vol,3),"litros")
	elif(h >= (H - r)):
		  vol = (vt - calota) *1000
		print("Volume:",round(vol,3),"litros")
else:
	print("Entradas invalidas")
	
print("Volume:",round(vol,3),"litros")
-- ERROR:
File "XXXX", line 20
    print("Volume:",round(vol,3),"litros")
                                         ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:28:41) 
-- CODE:
from math import*

H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))


print("Entradas:",H,",",h,",",r)

v = (4/6)*pi*(r**3)
vt = (4/3)*pi*(r**3) + pi*(H - 2*r)*(r**2)
calota = (pi*((H - h)**2)*(3*r)-(H - h))/3

if(H > 0 and h > 0 and r > 0 and H > h and H > (2*r)):
	if(h < r):
		vol = v * 1000
		print("Volume:",round(vol,3),"litros")
	elif((h >= r) and (h < (H -r))):
		vol = (v + (pi * (h - r)*(r**2)))*1000
		print("Volume:",round(vol,3),"litros")
	elif(h >= (H - r)):
		vol = (vt - calota) *1000
		print("Volume:",round(vol,3),"litros")
else:
	print("Entradas invalidas")
	
print("Volume:",round(vol,3),"litros")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:29:57) 
-- CODE:
from math import*

H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))


print("Entradas:",H,",",h,",",r)

v = (4/6)*pi*(r**3)
vt = (4/3)*pi*(r**3) + pi*(H - 2*r)*(r**2)
calota = (pi*((H - h)**2)*((3*r)-(H - h)))/3

if(H > 0 and h > 0 and r > 0 and H > h and H > (2*r)):
	if(h < r):
		vol = v * 1000
		print("Volume:",round(vol,3),"litros")
	elif((h >= r) and (h < (H -r))):
		vol = (v + (pi * (h - r)*(r**2)))*1000
		print("Volume:",round(vol,3),"litros")
	elif(h >= (H - r)):
		vol = (vt - calota) *1000
		print("Volume:",round(vol,3),"litros")
else:
	print("Entradas invalidas")
	
print("Volume:",round(vol,3),"litros")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:30:05) 
-- CODE:
from math import*

H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))


print("Entradas:",H,",",h,",",r)

v = (4/6)*pi*(r**3)
vt = (4/3)*pi*(r**3) + pi*(H - 2*r)*(r**2)
calota = (pi*((H - h)**2)*((3*r)-(H - h)))/3

if(H > 0 and h > 0 and r > 0 and H > h and H > (2*r)):
	if(h < r):
		vol = v * 1000
		print("Volume:",round(vol,3),"litros")
	elif((h >= r) and (h < (H -r))):
		vol = (v + (pi * (h - r)*(r**2)))*1000
		print("Volume:",round(vol,3),"litros")
	elif(h >= (H - r)):
		vol = (vt - calota) *1000
		print("Volume:",round(vol,3),"litros")
else:
	print("Entradas invalidas")
	
print("Volume:",round(vol,3),"litros")
-- EXECUTION TIME:
0.20476
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:30:11) 
-- CODE:
from math import*

H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))


print("Entradas:",H,",",h,",",r)

v = (4/6)*pi*(r**3)
vt = (4/3)*pi*(r**3) + pi*(H - 2*r)*(r**2)
calota = (pi*((H - h)**2)*((3*r)-(H - h)))/3

if(H > 0 and h > 0 and r > 0 and H > h and H > (2*r)):
	if(h < r):
		vol = v * 1000
		print("Volume:",round(vol,3),"litros")
	elif((h >= r) and (h < (H -r))):
		vol = (v + (pi * (h - r)*(r**2)))*1000
		print("Volume:",round(vol,3),"litros")
	elif(h >= (H - r)):
		vol = (vt - calota) *1000
		print("Volume:",round(vol,3),"litros")
else:
	print("Entradas invalidas")
	
print("Volume:",round(vol,3),"litros")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:30:15) 
-- CODE:
from math import*

H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))


print("Entradas:",H,",",h,",",r)

v = (4/6)*pi*(r**3)
vt = (4/3)*pi*(r**3) + pi*(H - 2*r)*(r**2)
calota = (pi*((H - h)**2)*((3*r)-(H - h)))/3

if(H > 0 and h > 0 and r > 0 and H > h and H > (2*r)):
	if(h < r):
		vol = v * 1000
		print("Volume:",round(vol,3),"litros")
	elif((h >= r) and (h < (H -r))):
		vol = (v + (pi * (h - r)*(r**2)))*1000
		print("Volume:",round(vol,3),"litros")
	elif(h >= (H - r)):
		vol = (vt - calota) *1000
		print("Volume:",round(vol,3),"litros")
else:
	print("Entradas invalidas")
	
print("Volume:",round(vol,3),"litros")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:30:16) 
-- CODE:
from math import*

H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))


print("Entradas:",H,",",h,",",r)

v = (4/6)*pi*(r**3)
vt = (4/3)*pi*(r**3) + pi*(H - 2*r)*(r**2)
calota = (pi*((H - h)**2)*((3*r)-(H - h)))/3

if(H > 0 and h > 0 and r > 0 and H > h and H > (2*r)):
	if(h < r):
		vol = v * 1000
		print("Volume:",round(vol,3),"litros")
	elif((h >= r) and (h < (H -r))):
		vol = (v + (pi * (h - r)*(r**2)))*1000
		print("Volume:",round(vol,3),"litros")
	elif(h >= (H - r)):
		vol = (vt - calota) *1000
		print("Volume:",round(vol,3),"litros")
else:
	print("Entradas invalidas")
	
print("Volume:",round(vol,3),"litros")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:30:33) 
-- CODE:
from math import*

H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))


print("Entradas:",H,",",h,",",r)

v = (4/6)*pi*(r**3)
vt = (4/3)*pi*(r**3) + pi*(H - 2*r)*(r**2)
calota = (pi*((H - h)**2)*((3*r)-(H - h)))/3

if(H > 0 and h > 0 and r > 0 and H > h and H > (2*r)):
	if(h < r):
		vol = v * 1000
		print("Volume:",round(vol,3),"litros")
	elif((h >= r) and (h < (H -r))):
		vol = (v + (pi * (h - r)*(r**2)))*1000
		print("Volume:",round(vol,3),"litros")
	elif(h >= (H - r)):
		vol = (vt - calota) *1000
		print("Volume:",round(vol,3),"litros")
else:
	print("Entradas invalidas")
	

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:30:35) 
-- CODE:
from math import*

H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))


print("Entradas:",H,",",h,",",r)

v = (4/6)*pi*(r**3)
vt = (4/3)*pi*(r**3) + pi*(H - 2*r)*(r**2)
calota = (pi*((H - h)**2)*((3*r)-(H - h)))/3

if(H > 0 and h > 0 and r > 0 and H > h and H > (2*r)):
	if(h < r):
		vol = v * 1000
		print("Volume:",round(vol,3),"litros")
	elif((h >= r) and (h < (H -r))):
		vol = (v + (pi * (h - r)*(r**2)))*1000
		print("Volume:",round(vol,3),"litros")
	elif(h >= (H - r)):
		vol = (vt - calota) *1000
		print("Volume:",round(vol,3),"litros")
else:
	print("Entradas invalidas")
	

-- EXECUTION TIME:
0.193151
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
