== SUBMITION (2019-04-16 14:34:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input(""))
b=float(input(""))
p=2*a+b
if (p==3):
	mensagem ="ponto pertence a reta:
else: 
	mensagem = "ponto nao pertence a reta"
	print(mensagem)
	

	
-- EXECUTION TIME:
0.133713
-- ERROR:
  File "/home/codebench/codes/1644/1054/main.py", line 8
    mensagem ="ponto pertence a reta:
                                    ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 14:34:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input(""))
b=float(input(""))
p=2*a+b
if (p == 3):
	mensagem ="ponto pertence a reta:
else: 
	mensagem = "ponto nao pertence a reta"
	print(mensagem)
	

	
-- EXECUTION TIME:
0.20285
-- ERROR:
  File "/home/codebench/codes/1644/1054/main.py", line 8
    mensagem ="ponto pertence a reta:
                                    ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 14:34:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input(""))
b=float(input(""))
p=2*a+b
if (p == 3):
	mensagem = "ponto pertence a reta:
else: 
	mensagem = "ponto nao pertence a reta"
	print(mensagem)
	

	
-- EXECUTION TIME:
0.176427
-- ERROR:
  File "/home/codebench/codes/1644/1054/main.py", line 8
    mensagem = "ponto pertence a reta:
                                     ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 14:35:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input(""))
b=float(input(""))
p=2*a+b
if (p == 3):
	mensagem = "ponto pertence a reta:
else: 
	mensagem = "ponto nao pertence a reta"
print(mensagem)
	

	
-- EXECUTION TIME:
0.154901
-- ERROR:
  File "/home/codebench/codes/1644/1054/main.py", line 8
    mensagem = "ponto pertence a reta:
                                     ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 14:35:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input(""))
b=float(input(""))
p=2*a+b
if (p == 3):
	mensagem = "ponto pertence a reta:
else: 
	mensagem = "ponto nao pertence a reta"
print(mensagem)
	

	
-- EXECUTION TIME:
0.173387
-- ERROR:
  File "/home/codebench/codes/1644/1054/main.py", line 8
    mensagem = "ponto pertence a reta:
                                     ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 14:35:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input(""))
b=float(input(""))
p=2*a+b
if (p == 3):
	mensagem = "ponto pertence a reta:
else: 
	mensagem = "ponto nao pertence a reta"
print(mensagem)
	

	
-- EXECUTION TIME:
0.143434
-- ERROR:
  File "/home/codebench/codes/1644/1054/main.py", line 8
    mensagem = "ponto pertence a reta:
                                     ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:35:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input(""))
b=float(input(""))
p=2*a+b
if (p == 3):
	mensagem = "ponto pertence a reta:
else: 
	mensagem = "ponto nao pertence a reta"
print(mensagem)
	

	
-- ERROR:
File "XXXX", line 8
    mensagem = "ponto pertence a reta:
                                     ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 14:35:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input(""))
b=float(input(""))
p=2*a+b
if (p == 3):
	mensagem = "ponto pertence a reta:
else: 
	mensagem = "ponto nao pertence a reta"
print(mensagem)
	

	
-- EXECUTION TIME:
0.177605
-- ERROR:
  File "/home/codebench/codes/1644/1054/main.py", line 8
    mensagem = "ponto pertence a reta:
                                     ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 14:37:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input(""))
b=float(input(""))
p=2*a+b
if (p == 3):
	mensagem = "ponto pertence a reta:
else: 
	mensagem = "ponto nao pertence a reta"
print(mensagem)


	
-- EXECUTION TIME:
0.196022
-- ERROR:
  File "/home/codebench/codes/1644/1054/main.py", line 8
    mensagem = "ponto pertence a reta:
                                     ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 14:37:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input(""))
b=float(input(""))
p=2*a+b
if (p == 3):
	mensagem = "ponto pertence a reta"
else: 
	mensagem = "ponto nao pertence a reta"
print(mensagem)


	
-- EXECUTION TIME:
0.144536
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
