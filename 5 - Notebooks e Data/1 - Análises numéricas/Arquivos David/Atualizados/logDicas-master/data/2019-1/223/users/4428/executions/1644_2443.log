== TEST (2019-04-16 02:27:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

r = float(input("Digite o valor do raio: ")) 
x = float(input("Digite a altura da coluna de ar: "))
opcao = int(input("Digite a opcao desejada: "))

if(opcao == 1):
	from math import*
	V = ((4*pi*r**3)/3)
	
else:
	V = ((pi*x**2)*(3*r-x)/3)
	
print(round(V, 4))
-- OUTPUT:
179.5944
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 02:29:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

r = float(input("Digite o valor do raio: ")) 
x = float(input("Digite a altura da coluna de ar: "))
opcao = int(input("Digite a opcao desejada: "))

if(opcao == 1):
	from math import*
	V = ((4*pi*r**3)/3)
	
else:
	from math import*
	V = ((pi*x**2)*(3*r-x)/3)
	
print(round(V, 4))
-- OUTPUT:
179.5944
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 02:31:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

r = float(input("Digite o valor do raio: ")) 
x = float(input("Digite a altura da coluna de ar: "))
opcao = int(input("Digite a opcao desejada: "))

if(opcao == 1):
	from math import*
	V = ((4*pi*(r**3))/3)
	
else:
	from math import*
	V = ((pi*(x**2)*(3*r)-x)/3)
	
print(round(V, 4))
-- OUTPUT:
179.5944
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 02:34:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

r = float(input("Digite o valor do raio: ")) 
x = float(input("Digite a altura da coluna de ar: "))
opcao = int(input("Digite a opcao desejada: "))
pi = 3,14

if(opcao == 1):

	V = ((4*pi*(r**3))/3)
	
else:
	V = ((pi*(x**2)*(3*r)-x)/3)
	
print(round(V, 4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    V = ((4*pi*(r**3))/3)
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 02:35:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

r = float(input("Digite o valor do raio: ")) 
x = float(input("Digite a altura da coluna de ar: "))
opcao = int(input("Digite a opcao desejada: "))
pi = 3,14

if(opcao == 1):

	V = ((4*pi*(r**3))/3)
	
else:
	pi = 3,14
	V = ((pi*(x**2)*(3*r)-x)/3)
	
print(round(V, 4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    V = ((4*pi*(r**3))/3)
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 02:37:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

r = float(input("Digite o valor do raio: ")) 
x = float(input("Digite a altura da coluna de ar: "))
opcao = int(input("Digite a opcao desejada: "))
pi = 3,14

if(opcao == 1):

	V = ((4*pi*(r**3))/3)
	
else:
	V = ((pi*(x**2)*(3*r)-x)/3)
	
print(round(V, 4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    V = ((4*pi*(r**3))/3)
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 02:38:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

r = float(input("Digite o valor do raio: ")) 
x = float(input("Digite a altura da coluna de ar: "))
opcao = int(input("Digite a opcao desejada: "))

from math import*
if(opcao == 1):

	V = ((4*pi*(r**3))/3)
	
else:
	from math import*
	V = ((pi*(x**2)*(3*r)-x)/3)
	
print(round(V, 4))
-- OUTPUT:
179.5944
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 02:47:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

r = float(input("Digite o valor do raio: ")) 
x = float(input("Digite a altura da coluna de ar: "))
opcao = int(input("Digite a opcao desejada: "))
Vt = ((4*pi*(r**3))/3)
Va = ((pi*(x**2)*(3*r)-x)/3)


from math import*
if(opcao == 1):
	V = ((pi*(x**2)*(3*r)-x)/3)

	
else:
	from math import*
	V = Vt - Va
print(round(V, 4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    Vt = ((4*pi*(r**3))/3)
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 02:48:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

r = float(input("Digite o valor do raio: ")) 
x = float(input("Digite a altura da coluna de ar: "))
opcao = int(input("Digite a opcao desejada: "))
pi = 3,14
Vt = ((4*pi*(r**3))/3)
Va = ((pi*(x**2)*(3*r)-x)/3)


if(opcao == 1):
	V = ((pi*(x**2)*(3*r)-x)/3)

else:
	V = Vt - Va
	
print(round(V, 4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    Vt = ((4*pi*(r**3))/3)
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 02:49:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

r = float(input("Digite o valor do raio: ")) 
x = float(input("Digite a altura da coluna de ar: "))
opcao = int(input("Digite a opcao desejada: "))

from math import*
Vt = ((4*pi*(r**3))/3)
Va = ((pi*(x**2)*(3*r)-x)/3)


if(opcao == 1):
	V = ((pi*(x**2)*(3*r)-x)/3)

else:
	V = Vt - Va
	
print(round(V, 4))
-- OUTPUT:
9.6068
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 02:52:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

r = float(input("Digite o valor do raio: ")) 
x = float(input("Digite a altura da coluna de ar: "))
opcao = int(input("Digite a opcao desejada: "))

from math import*
Vt = ((4*pi*(r**3))/3)
Va = ((pi*(x**2)*(3*r)-x)/3)


if(opcao == 1):
	V = ((pi*(x**2)*(3*r)-x)/3)

else:
	V = Vt - Va
	
print(round(V, 4))
-- EXECUTION TIME:
0.205919
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.6068
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
288.4734
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 02:53:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

r = float(input("Digite o valor do raio: ")) 
x = float(input("Digite a altura da coluna de ar: "))
opcao = int(input("Digite a opcao desejada: "))

from math import*
Vt = ((4*pi*(r**3))/3)
Va = ((pi*(x**2)*(3*r)-x)/3)


if(opcao == 1):
	V = ((pi*(x**2)*(3*r)-x)/3)

else:
	V = Vt - Va
	
print(round(V, 4))
-- OUTPUT:
9.6068
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 02:54:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

r = float(input("Digite o valor do raio: ")) 
x = float(input("Digite a altura da coluna de ar: "))
opcao = int(input("Digite a opcao desejada: "))
pi = 3.14

Vt = ((4*pi*(r**3))/3)
Va = ((pi*(x**2)*(3*r)-x)/3)


if(opcao == 1):
	V = ((pi*(x**2)*(3*r)-x)/3)

else:
	V = Vt - Va
	
print(round(V, 4))
-- OUTPUT:
9.6018
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 02:55:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

r = float(input("Digite o valor do raio: ")) 
x = float(input("Digite a altura da coluna de ar: "))
opcao = int(input("Digite a opcao desejada: "))
pi = 3.1415

Vt = ((4*pi*(r**3))/3)
Va = ((pi*(x**2)*(3*r)-x)/3)


if(opcao == 1):
	V = ((pi*(x**2)*(3*r)-x)/3)

else:
	V = Vt - Va
	
print(round(V, 4))
-- OUTPUT:
9.6065
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 02:55:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

r = float(input("Digite o valor do raio: ")) 
x = float(input("Digite a altura da coluna de ar: "))
opcao = int(input("Digite a opcao desejada: "))
pi = 3.141

Vt = ((4*pi*(r**3))/3)
Va = ((pi*(x**2)*(3*r)-x)/3)


if(opcao == 1):
	V = ((pi*(x**2)*(3*r)-x)/3)

else:
	V = Vt - Va
	
print(round(V, 4))
-- OUTPUT:
9.605
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 02:59:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

r = float(input("Digite o valor do raio: ")) 
x = float(input("Digite a altura da coluna de ar: "))
opcao = int(input("Digite a opcao desejada: "))
pi = 3.141

Vt = ((4/3)*pi*(r**3))
Va = ((pi*(x**2)*(3*r)-x)/3)


if(opcao == 1):
	V = ((pi*(x**2)*(3*r)-x)/3)

else:
	V = Vt - Va
	
print(round(V, 4))
-- OUTPUT:
9.605
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 03:00:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

r = float(input("Digite o valor do raio: ")) 
x = float(input("Digite a altura da coluna de ar: "))
opcao = int(input("Digite a opcao desejada: "))
pi = 3.14

Vt = ((4/3)*pi*(r**3))
Va = ((pi*(x**2)*(3*r)-x)/3)


if(opcao == 1):
	V = ((pi*(x**2)*(3*r)-x)/3)

else:
	V = Vt - Va
	
print(round(V, 4))
-- OUTPUT:
9.6018
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 03:00:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

r = float(input("Digite o valor do raio: ")) 
x = float(input("Digite a altura da coluna de ar: "))
opcao = int(input("Digite a opcao desejada: "))
pi = 3.14

Vt = ((4/3)*pi*(r**3))
Va = ((pi*(x**2)*(3*r)-x)/3)


if(opcao == 1):
	V = ((pi*(x**2)*(3*r)-x)/3)

else:
	V = Vt - Va
	
print(round(V, 4))
-- OUTPUT:
9.6018
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 03:01:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

r = float(input("Digite o valor do raio: ")) 
x = float(input("Digite a altura da coluna de ar: "))
opcao = int(input("Digite a opcao desejada: "))
pi = 3.1415

Vt = ((4/3)*pi*(r**3))
Va = ((pi*(x**2)*(3*r)-x)/3)


if(opcao == 1):
	V = ((pi*(x**2)*(3*r)-x)/3)

else:
	V = Vt - Va
	
print(round(V, 4))
-- OUTPUT:
9.6065
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 03:02:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

r = float(input("Digite o valor do raio: ")) 
x = float(input("Digite a altura da coluna de ar: "))
opcao = int(input("Digite a opcao desejada: "))

from math import*
Vt = ((4/3)*pi*(r**3))
Va = ((pi*(x**2)*(3*r)-x)/3)


if(opcao == 1):
	V = ((pi*(x**2)*(3*r)-x)/3)

else:
	V = Vt - Va
	
print(round(V, 4))
-- OUTPUT:
9.6068
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 03:02:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

r = float(input("Digite o valor do raio: ")) 
x = float(input("Digite a altura da coluna de ar: "))
opcao = int(input("Digite a opcao desejada: "))

from math import*
Vt = ((4/3)*pi*(r**3))
Va = ((pi*(x**2)*(3*r)-x)/3)


if(opcao == 1):
	V = ((pi*(x**2)*(3*r)-x)/3)

else:
	V = Vt - Va
	
print(round(V, 4))
-- OUTPUT:
9.6068
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:22:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

r = float(input("Digite o valor do raio: ")) 
x = float(input("Digite a altura da coluna de ar: "))
opcao = int(input("Digite a opcao desejada: "))

from math import*
Vt = ((4/3)*pi*(r**3))
Va = ((pi*(x**2)*(3*r)-x)/3)


if(opcao == 1):
	V = ((pi*(x**2)*(3*r)-x)/3)

else:
	V = Vt - Va
	
print(round(V, 4))
-- OUTPUT:
9.6068
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:48:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

r = float(input("Digite o valor do raio: ")) 
x = float(input("Digite a altura da coluna de ar: "))
opcao = int(input("Digite a opcao desejada: "))

from math import*
Vt = ((4/3)*pi*(r**3))
Va = ((pi*(x**2)*(3*r)-x)/3)


if(opcao == 1):
	V = ((pi*(x**2)*(3*r)-x)/3)

else:
	V = Vt - Va
	
print(round(V, 4))
-- OUTPUT:
9.6068
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:50:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

r = float(input("Digite o valor do raio: ")) 
x = float(input("Digite a altura da coluna de ar: "))
opcao = int(input("Digite a opcao desejada: "))

from math import*
Vt = ((4/3)*pi*(r**3))
Va = ((pi*(x**2)*(3*r)-x)/3)


if(opcao == 1):
	V = ((pi*(x**2)*(3*r)-x)/3)

else:
	V = Vt - Va
	
print(round(V, 4))
-- OUTPUT:
9.6068
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 11:22:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

r = float(input("Digite o valor do raio: ")) 
x = float(input("Digite a altura da coluna de ar: "))
opcao = int(input("Digite a opcao desejada: "))

from math import*
Vt = (pi/3)*(x**2)*(3*r-x)

if(opcao == 1):
	V = Vt

else:
	V = ((4/3*pi*(raio**3))-Vt)
	
print(round(V, 4))
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 12:28:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

r = float(input("Digite o valor do raio: ")) 
x = float(input("Digite a altura da coluna de ar: "))
opcao = int(input("Digite a opcao desejada: "))

from math import*
Vt = (pi/3)*(x**2)*(3*r-x)

if(opcao == 1):
	V = Vt

else:
	V = ((4/3*pi*(r**3))-Vt)
	
print(round(V, 4))
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 12:31:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

r = float(input("Digite o valor do raio: ")) 
x = float(input("Digite a altura da coluna de ar: "))
opcao = int(input("Digite a opcao desejada: "))

from math import*
Vt = (pi/3)*(x**2)*(3*r-x)

if(opcao == 1):
	V = Vt

else:
	V = ((4/3*pi*(r**3))-Vt)
	
print(round(V, 4))
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 12:34:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

r = float(input("Digite o valor do raio: ")) 
x = float(input("Digite a altura da coluna de ar: "))
opcao = int(input("Digite a opcao desejada: "))

from math import*
Vt = (pi/3)*(x**2)*(3*r-x)

if(opcao == 1):
	V = Vt

else:
	V = ((4/3*pi*(r**3))-Vt)
	
print(round(V, 4))
-- EXECUTION TIME:
0.150296
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
