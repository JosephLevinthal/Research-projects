== TEST (2019-04-05 00:55:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
X =float(input("nome:"))
Y =float(input("nome:"))

if (2x+y=3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = ponto nao pertence a reta

print(mensagem)
-- ERROR:
File "XXXX", line 7
    if (2x+y=3):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 00:55:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
X =float(input("nome:"))
Y =float(input("nome:"))

if (2*x+y=3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = ponto nao pertence a reta

print(mensagem)
-- ERROR:
File "XXXX", line 7
    if (2*x+y=3):
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 00:56:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
X =float(input("nome:"))
Y =float(input("nome:"))

if (2*x+y==3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = ponto nao pertence a reta

print(mensagem)
-- ERROR:
File "XXXX", line 10
    mensagem = ponto nao pertence a reta
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 00:56:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
X =float(input("nome:"))
Y =float(input("nome:"))

if (2*x+y==3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"

print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if (2*x+y==3):
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 00:56:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
X =float(input("nome:"))
Y =float(input("nome:"))

if (2*x+y==3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"

print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if (2*x+y==3):
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 00:57:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
X =float(input(""))
Y =float(input(""))

p=2*X+Y

if (p==3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"

print(mensagem)
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 00:58:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
X =float(input(""))
Y =float(input(""))

p=2*X+Y

if (p==3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"

print(mensagem)
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-05 00:58:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
X =float(input(""))
Y =float(input(""))

p=2*X+Y

if (p==3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"

print(mensagem)
-- EXECUTION TIME:
0.255889
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
