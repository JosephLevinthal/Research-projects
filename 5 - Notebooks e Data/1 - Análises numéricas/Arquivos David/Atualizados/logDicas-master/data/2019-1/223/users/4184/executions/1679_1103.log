== TEST (2019-04-30 16:36:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor de x: "))
y=float(input("valor de y: "))
z=float(input("valor de z: "))

if ((y<=x) and (z>=x)):
	print(x == "pertence ao intervalo", y,",", z)
elif ((y>x) or (z<x)):
	print(x == "nao pertence ao intervalo", y,",", z)
elif (z<=x):
	print("Entradas", y "e", z "invalidas")
-- ERROR:
File "XXXX", line 13
    print("Entradas", y "e", z "invalidas")
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:36:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor de x: "))
y=float(input("valor de y: "))
z=float(input("valor de z: "))

if ((y<=x) and (z>=x)):
	print(x == "pertence ao intervalo", y,",", z)
elif ((y>x) or (z<x)):
	print(x == "nao pertence ao intervalo", y,",", z)
elif (z<=x):
	print("Entradas", y "e", z, "invalidas")
-- ERROR:
File "XXXX", line 13
    print("Entradas", y "e", z, "invalidas")
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:37:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor de x: "))
y=float(input("valor de y: "))
z=float(input("valor de z: "))

if ((y<=x) and (z>=x)):
	print(x == "pertence ao intervalo", y,",", z)
elif ((y>x) or (z<x)):
	print(x == "nao pertence ao intervalo", y,",", z)
elif (z<=x):
	print("Entradas", y, "e", z, "invalidas")
-- OUTPUT:
False 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:38:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor de x: "))
y=float(input("valor de y: "))
z=float(input("valor de z: "))

if ((y<=x) and (z>=x)):
	print(x ,"pertence ao intervalo", y,",", z)
elif ((y>x) or (z<x)):
	print(x ,"nao pertence ao intervalo", y,",", z)
elif (z<=x):
	print("Entradas", y, "e", z, "invalidas")
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:38:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor de x: "))
y=float(input("valor de y: "))
z=float(input("valor de z: "))

if ((y<=x) and (z>=x)):
	print(x ,"pertence ao intervalo", y,",", z)
elif ((y>x) or (z<x)):
	print(x ,"nao pertence ao intervalo", y,",", z)
elif (z<=x):
	print("Entradas", y, "e", z, "invalidas")
-- EXECUTION TIME:
0.173679
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:38:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor de x: "))
y=float(input("valor de y: "))
z=float(input("valor de z: "))

if ((y<=x) and (z>=x)):
	print(x ,"pertence ao intervalo", y,",", z)
elif ((y>x) or (z<x)):
	print(x ,"nao pertence ao intervalo", y,",", z)
elif (z<=x):
	print("Entradas", y, "e", z, "invalidas")
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:39:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor de x: "))
y=float(input("valor de y: "))
z=float(input("valor de z: "))

if ((y<=x) and (z>=x)):
	print(x ,"pertence ao intervalo", y,",", z)
elif ((y>x) or (z<x)):
	print(x ,"nao pertence ao intervalo", y,",", z)
elif (z<=x):
	print("Entradas", y, "e", z, "invalidas")
-- EXECUTION TIME:
0.1914
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:39:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor de x: "))
y=float(input("valor de y: "))
z=float(input("valor de z: "))

if ((y<=x) and (z>=x)):
	print(x ,"pertence ao intervalo", y,",", z)
elif ((y>x) or (z<x)):
	print(x ,"nao pertence ao intervalo", y,",", z)
elif (z<=x):
	print("Entradas", y, "e", z, "invalidas")
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:40:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor de x: "))
y=float(input("valor de y: "))
z=float(input("valor de z: "))

if ((y<=x) and (z>=x)):
	print(x ,"pertence ao intervalo", y,",", z)
elif ((y>x) or (z<x)):
	print(x ,"nao pertence ao intervalo", y,",", z)
elif (z<=x):
	print("Entradas", y, "e", z, "invalidas")
-- EXECUTION TIME:
0.147102
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:40:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor de x: "))
y=float(input("valor de y: "))
z=float(input("valor de z: "))

if ((y<=x) and (z>=x)):
	print(x ,"pertence ao intervalo", y,",", z)
elif ((y>x) or (z<x)):
	print(x ,"nao pertence ao intervalo", y,",", z)
elif (z<=x):
	print("Entradas", y, "e", z, "invalidas")
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:40:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor de x: "))
y=float(input("valor de y: "))
z=float(input("valor de z: "))

if ((y<=x) and (z>=x)):
	print(x ,"pertence ao intervalo", y,",", z)
elif ((y>x) or (z<x)):
	print(x ,"nao pertence ao intervalo", y,",", z)
elif (z<=x):
	print("Entradas", y, "e", z, "invalidas")
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:40:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor de x: "))
y=float(input("valor de y: "))
z=float(input("valor de z: "))

if ((y<=x) and (z>=x)):
	print(x ,"pertence ao intervalo", y,",", z)
elif ((y>x) or (z<x)):
	print(x ,"nao pertence ao intervalo", y,",", z)
elif (z<=x):
	print("Entradas", y, "e", z, "invalidas")
-- EXECUTION TIME:
0.125375
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
valor de x: valor de y: valor de z: 5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
valor de x: valor de y: valor de z: 6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:40:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor de x: "))
y=float(input("valor de y: "))
z=float(input("valor de z: "))

if ((y<=x) and (z>=x)):
	print(x ,"pertence ao intervalo", y,",", z)
elif ((y>x) or (z<x)):
	print(x ,"nao pertence ao intervalo", y,",", z)
elif (z<=x):
	print("Entradas", y, "e", z, "invalidas")
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:40:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor de x: "))
y=float(input("valor de y: "))
z=float(input("valor de z: "))

if ((y<=x) and (z>=x)):
	print(x ,"pertence ao intervalo", y,",", z)
elif ((y>x) or (z<x)):
	print(x ,"nao pertence ao intervalo", y,",", z)
elif (z<=x):
	print("Entradas", y, "e", z, "invalidas")
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:40:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor de x: "))
y=float(input("valor de y: "))
z=float(input("valor de z: "))

if ((y<=x) and (z>=x)):
	print(x ,"pertence ao intervalo", y,",", z)
elif ((y>x) or (z<x)):
	print(x ,"nao pertence ao intervalo", y,",", z)
elif (z<=x):
	print("Entradas", y, "e", z, "invalidas")
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:41:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor de x: "))
y=float(input("valor de y: "))
z=float(input("valor de z: "))

if ((y<=x) and (z>=x)):
	print(x ,"pertence ao intervalo", y,",", z)
elif ((y>x) or (z<x)):
	print(x ,"nao pertence ao intervalo", y,",", z)
elif (z<=y):
	print("Entradas", y, "e", z, "invalidas")
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:41:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor de x: "))
y=float(input("valor de y: "))
z=float(input("valor de z: "))

if ((y<=x) and (z>=x)):
	print(x ,"pertence ao intervalo", y,",", z)
elif ((y>x) or (z<x)):
	print(x ,"nao pertence ao intervalo", y,",", z)
elif (z<=y):
	print("Entradas", y, "e", z, "invalidas")
-- EXECUTION TIME:
0.217524
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:42:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor de x: "))
y=float(input("valor de y: "))
z=float(input("valor de z: "))

if ((y<=x) and (z>=x)):
	print(x ,"pertence ao intervalo", y,",", z)
elif ((y>=x) or (z<=x)):
	print(x ,"nao pertence ao intervalo", y,",", z)
elif (z<=y):
	print("Entradas", y, "e", z, "invalidas")
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:42:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor de x: "))
y=float(input("valor de y: "))
z=float(input("valor de z: "))

if ((y<=x) and (z>=x)):
	print(x ,"pertence ao intervalo", y,",", z)
elif ((y>=x) or (z<=x)):
	print(x ,"nao pertence ao intervalo", y,",", z)
elif (z<=y):
	print("Entradas", y, "e", z, "invalidas")
-- EXECUTION TIME:
0.1344
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:46:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor de x: "))
y=float(input("valor de y: "))
z=float(input("valor de z: "))

if ((y<=x) and (z>=x)):
	print(x ,"pertence ao intervalo", y,",", z)
elif ((y>=x) or (z<=x)):
	print(x ,"nao pertence ao intervalo", y,",", z)
elif (z<=y):
	print("Entradas", y, "e", z, "invalidas")
else:
	print("tomou no cu")
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:46:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor de x: "))
y=float(input("valor de y: "))
z=float(input("valor de z: "))

if ((y<=x) and (z>=x)):
	print(x ,"pertence ao intervalo", y,",", z)
elif ((y>=x) or (z<=x)):
	print(x ,"nao pertence ao intervalo", y,",", z)
elif (z<=y):
	print("Entradas", y, "e", z, "invalidas")
else:
	print("tomou no cu")
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:47:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor de x: "))
y=float(input("valor de y: "))
z=float(input("valor de z: "))

if ((y<=x) and (z>=x)):
	print(x ,"pertence ao intervalo", y,",", z)
elif ((y>=x) or (z<=x)):
	print(x ,"nao pertence ao intervalo", y,",", z)
elif (z<=y):
	print("Entradas", y, "e", z, "invalidas")
else:
	print("tomou no cu")
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:47:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor de x: "))
y=float(input("valor de y: "))
z=float(input("valor de z: "))

if ((y<=x) and (z>=x)):
	print(x ,"pertence ao intervalo", y,",", z)
elif ((y>=x) or (z<=x)):
	print(x ,"nao pertence ao intervalo", y,",", z)
elif (z<=y):
	print("Entradas", y, "e", z, "invalidas")
else:
	print("tomou no cu")
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:48:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor de x: "))
y=float(input("valor de y: "))
z=float(input("valor de z: "))

if ((y<=x) and (z>=x)):
	print(x ,"pertence ao intervalo", y,",", z)
elif ((y>=x) or (z<=x)):
	print(x ,"nao pertence ao intervalo", y,",", z)
elif (z<=y):
	print("Entradas", y, "e", z, "invalidas")
else:
	print("tomou no cu")
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:48:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor de x: "))
y=float(input("valor de y: "))
z=float(input("valor de z: "))

if ((y<=x) and (z>=x)):
	print(x ,"pertence ao intervalo", y,",", z)
elif ((y>=x) or (z<=x)):
	print(x ,"nao pertence ao intervalo", y,",", z)
elif (z<=y):
	print("Entradas", y, "e", z, "invalidas")
else:
	print("tomou no cu")
-- EXECUTION TIME:
0.128472
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:48:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor de x: "))
y=float(input("valor de y: "))
z=float(input("valor de z: "))

if ((y<=x) and (z>=x)):
	print(x ,"pertence ao intervalo", y,",", z)
elif ((y>=x) or (z<=x)):
	print(x ,"nao pertence ao intervalo", y,",", z)
elif (z<=y):
	print("Entradas", y, "e", z, "invalidas")

-- EXECUTION TIME:
0.18438
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:48:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor de x: "))
y=float(input("valor de y: "))
z=float(input("valor de z: "))

if ((y<=x) and (z>=x)):
	print(x ,"pertence ao intervalo", y,",", z)
elif ((y>=x) or (z<=x)):
	print(x ,"nao pertence ao intervalo", y,",", z)
elif (z<=y):
	print("Entradas", y, "e", z, "invalidas")

-- EXECUTION TIME:
0.188676
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:49:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor de x: "))
y=float(input("valor de y: "))
z=float(input("valor de z: "))

if ((y<=x) and (z>=x)):
	print(x ,"pertence ao intervalo", y,",", z)
elif ((y>=x) or (z<=x)):
	print(x ,"nao pertence ao intervalo", y,",", z)
elif (z<=y):
	print("Entradas":, y, "e", z, "invalidas")

-- ERROR:
File "XXXX", line 13
    print("Entradas":, y, "e", z, "invalidas")
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:49:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor de x: "))
y=float(input("valor de y: "))
z=float(input("valor de z: "))

if ((y<=x) and (z>=x)):
	print(x ,"pertence ao intervalo", y,",", z)
elif ((y>=x) or (z<=x)):
	print(x ,"nao pertence ao intervalo", y,",", z)
elif (z<=y):
	print("Entradas", y, "e", z, "invalidas")

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:50:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor de x: "))
y=float(input("valor de y: "))
z=float(input("valor de z: "))

if ((y<=x) and (z>=x)):
	print(x ,"pertence ao intervalo", y,",", z)
elif ((y>=x) or (z<=x)):
	print(x ,"nao pertence ao intervalo", y,",", z)
elif (z<=y):
	print("Entradas", y, "e", z, "invalidas")

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:51:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor de x: "))
a=float(input("valor de y: "))
b=float(input("valor de z: "))

if ((a<=x) and (b>=x)):
	print(x ,"pertence ao intervalo", a,",", b)
elif ((a>=x) or (b<=x)):
	print(x ,"nao pertence ao intervalo", a,",", b)
elif (b<=a):
	print("Entradas", a, "e", b, "invalidas")

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:51:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor de x: "))
a=float(input("valor de y: "))
b=float(input("valor de z: "))

if ((a<=x) and (b>=x)):
	print(x ,"pertence ao intervalo", a,",", b)
elif ((a>=x) or (b<=x)):
	print(x ,"nao pertence ao intervalo", a,",", b)
elif (b<=a):
	print("Entradas", a, "e", b, "invalidas")

-- EXECUTION TIME:
0.11569
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:52:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor de x: "))
a=float(input("valor de a: "))
b=float(input("valor de b: "))

if ((a<=x) and (b>=x)):
	print(x ,"pertence ao intervalo", a,",", b)
elif ((a>=x) or (b<=x)):
	print(x ,"nao pertence ao intervalo", a,",", b)
elif (a<=b):
	print("Entradas", a, "e", b, "invalidas")

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:52:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor de x: "))
a=float(input("valor de a: "))
b=float(input("valor de b: "))

if ((a<=x) and (b>=x)):
	print(x ,"pertence ao intervalo", a,",", b)
elif ((a>=x) or (b<=x)):
	print(x ,"nao pertence ao intervalo", a,",", b)
elif (a<=b):
	print("Entradas", a, "e", b, "invalidas")

-- EXECUTION TIME:
0.219552
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:53:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor de x: "))
a=float(input("valor de a: "))
b=float(input("valor de b: "))

if ((a<=x) and (b>=x)):
	print(x ,"pertence ao intervalo", a,",", b)
elif ((a>=x) or (b<=x)):
	print(x ,"nao pertence ao intervalo", a,",", b)
elif (b=a):
	print("Entradas", a, "e", b, "invalidas")

-- ERROR:
File "XXXX", line 12
    elif (b=a):
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:53:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor de x: "))
a=float(input("valor de a: "))
b=float(input("valor de b: "))

if ((a<=x) and (b>=x)):
	print(x ,"pertence ao intervalo", a,",", b)
elif ((a>=x) or (b<=x)):
	print(x ,"nao pertence ao intervalo", a,",", b)
elif (b<=a):
	print("Entradas", a, "e", b, "invalidas")

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:53:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor de x: "))
a=float(input("valor de a: "))
b=float(input("valor de b: "))

if ((a<=x) and (b>=x)):
	print(x ,"pertence ao intervalo", a,",", b)
elif ((a>x) or (b<x)):
	print(x ,"nao pertence ao intervalo", a,",", b)
elif (b<=a):
	print("Entradas", a, "e", b, "invalidas")

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:53:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor de x: "))
a=float(input("valor de a: "))
b=float(input("valor de b: "))

if ((a<=x) and (b>=x)):
	print(x ,"pertence ao intervalo", a,",", b)
elif ((a>x) or (b<x)):
	print(x ,"nao pertence ao intervalo", a,",", b)
elif (b<=a):
	print("Entradas", a, "e", b, "invalidas")

-- EXECUTION TIME:
0.143408
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:54:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor de x: "))
a=float(input("valor de a: "))
b=float(input("valor de b: "))

if ((a<=x) and (b>=x)):
	print(x ,"pertence ao intervalo", a,",", b)
elif ((a>x) or (b<x)):
	print(x ,"nao pertence ao intervalo", a,",", b)
elif (b<=a):
	print("Entradas", a, "e", b, "invalidas")

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:56:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(""))
a=float(input(""))
b=float(input(""))

if ((a<=x) and (b>=x)):
	print(x ,"pertence ao intervalo", a,",", b)
elif ((a>=x) or (b<=x)):
	print(x ,"nao pertence ao intervalo", a,",", b)
elif (b<=a):
	print("Entradas", a, "e", b, "invalidas")

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:56:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(","))
a=float(input(","))
b=float(input(","))

if ((a<=x) and (b>=x)):
	print(x ,"pertence ao intervalo", a,",", b)
elif ((a>=x) or (b<=x)):
	print(x ,"nao pertence ao intervalo", a,",", b)
elif (b<=a):
	print("Entradas", a, "e", b, "invalidas")

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:57:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(","))
a=float(input(","))
b=float(input(","))

if ((a<=x) and (b>=x)):
	print(x ,"pertence ao intervalo", a,",", b)
elif ((a>=x) or (b<=x)):
	print(x ,"nao pertence ao intervalo", a,",", b)
elif (b<=a):
	print("Entradas", a, "e", b, "invalidas")

-- EXECUTION TIME:
0.143403
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:59:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor de x: "))
a=float(input("valor de a: "))
b=float(input("valor de b: "))

if ((a<=x) and (b>=x)):
	print(x ,"pertence ao intervalo", a,",", b)
elif (b<=a):
	print("Entradas", a, "e", b, "invalidas")
elif ((a>=x) or (b<=x)):
	print(x ,"nao pertence ao intervalo", a,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:00:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor de x: "))
a=float(input("valor de a: "))
b=float(input("valor de b: "))

if ((a<=x) and (b>=x)):
	print(x ,"pertence ao intervalo", a,",", b)
elif (b<=a):
	print("Entradas", a, "e", b, "invalidas")
elif ((a>=x) or (b<=x)):
	print(x ,"nao pertence ao intervalo", a,",", b)

-- EXECUTION TIME:
0.178114
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
