== TEST (2019-06-27 17:27:20) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
    if x == 'A':
        xtab = xtab + 1
    # Move personagem para DIREITA
    elif x == 'D':
        xtab = ytab - 1
    # Move personagem para CIMA
    elif x == 'W':
        ytab = ytab + 1
    # Move personagem para BAIXO
    elif x == 'S':
        ytab = ytab - 1

    # Trata evento
    # Moeda
    if tabuleiro[ytab,xtab] == 11:
        moeda = moeda + 1
        # Apaga moeda do tabuleiro
        tabuleiro[ytab,xtab] = 0
			moeda=moeda
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
        life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 43
    moeda=moeda
              ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 17:27:33) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
    if x == 'A':
        xtab = xtab + 1
    # Move personagem para DIREITA
    elif x == 'D':
        xtab = ytab - 1
    # Move personagem para CIMA
    elif x == 'W':
        ytab = ytab + 1
    # Move personagem para BAIXO
    elif x == 'S':
        ytab = ytab - 1

    # Trata evento
    # Moeda
    if tabuleiro[ytab,xtab] == 11:
        moeda = moeda + 1
        # Apaga moeda do tabuleiro
        tabuleiro[ytab,xtab] = 0
			moeda = moeda
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
        life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 43
    moeda = moeda
                ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 17:28:26) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
    if x == 'A':
        xtab = xtab + 1
    # Move personagem para DIREITA
    elif x == 'D':
        xtab = ytab - 1
    # Move personagem para CIMA
    elif x == 'W':
        ytab = ytab + 1
    # Move personagem para BAIXO
    elif x == 'S':
        ytab = ytab - 1

    # Trata evento
    # Moeda
    if tabuleiro[ytab,xtab] == 11:
        moeda = moeda + 1
        # Apaga moeda do tabuleiro
     elif(tabuleiro[ytab,xtab] = 0):
			moeda = moeda
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
        life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 42
    elif(tabuleiro[ytab,xtab] = 0):
                                  ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 17:28:43) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
    if x == 'A':
        xtab = xtab + 1
    # Move personagem para DIREITA
    elif x == 'D':
        xtab = ytab - 1
    # Move personagem para CIMA
    elif x == 'W':
        ytab = ytab + 1
    # Move personagem para BAIXO
    elif x == 'S':
        ytab = ytab - 1

    # Trata evento
    # Moeda
    if tabuleiro[ytab,xtab] == 11:
        moeda = moeda + 1
        # Apaga moeda do tabuleiro
     eliftabuleiro[ytab,xtab] = 0:
			moeda = moeda
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
        life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 42
    eliftabuleiro[ytab,xtab] = 0:
                                ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 17:28:45) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
    if x == 'A':
        xtab = xtab + 1
    # Move personagem para DIREITA
    elif x == 'D':
        xtab = ytab - 1
    # Move personagem para CIMA
    elif x == 'W':
        ytab = ytab + 1
    # Move personagem para BAIXO
    elif x == 'S':
        ytab = ytab - 1

    # Trata evento
    # Moeda
    if tabuleiro[ytab,xtab] == 11:
        moeda = moeda + 1
        # Apaga moeda do tabuleiro
     eliftabuleiro[ytab,xtab] = 0:
			moeda = moeda
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
        life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 42
    eliftabuleiro[ytab,xtab] = 0:
                                ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 17:28:49) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
    if x == 'A':
        xtab = xtab + 1
    # Move personagem para DIREITA
    elif x == 'D':
        xtab = ytab - 1
    # Move personagem para CIMA
    elif x == 'W':
        ytab = ytab + 1
    # Move personagem para BAIXO
    elif x == 'S':
        ytab = ytab - 1

    # Trata evento
    # Moeda
    if tabuleiro[ytab,xtab] == 11:
        moeda = moeda + 1
        # Apaga moeda do tabuleiro
     eliftabuleiro[ytab,xtab] = 0 :
			moeda = moeda
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
        life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 42
    eliftabuleiro[ytab,xtab] = 0 :
                                 ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 17:28:55) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
    if x == 'A':
        xtab = xtab + 1
    # Move personagem para DIREITA
    elif x == 'D':
        xtab = ytab - 1
    # Move personagem para CIMA
    elif x == 'W':
        ytab = ytab + 1
    # Move personagem para BAIXO
    elif x == 'S':
        ytab = ytab - 1

    # Trata evento
    # Moeda
    if tabuleiro[ytab,xtab] == 11:
        moeda = moeda + 1
        # Apaga moeda do tabuleiro
     elif tabuleiro[ytab,xtab] = 0 :
			moeda = moeda
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
        life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 42
    elif tabuleiro[ytab,xtab] = 0 :
                                  ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 17:29:31) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
    if x == 'A':
        xtab = xtab + 1
    # Move personagem para DIREITA
    elif x == 'D':
        xtab = ytab - 1
    # Move personagem para CIMA
    elif x == 'W':
        ytab = ytab + 1
    # Move personagem para BAIXO
    elif x == 'S':
        ytab = ytab - 1

    # Trata evento
    # Moeda
    if tabuleiro[ytab,xtab] == 11:
        moeda = moeda + 1
        # Apaga moeda do tabuleiro
     elif tabuleiro[ytab,xtab] == 0 :
			moeda = moeda
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
        life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 42
    elif tabuleiro[ytab,xtab] == 0 :
                                   ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 17:30:48) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
    if x == 'A':
        xtab = xtab - 1
    # Move personagem para DIREITA
    elif x == 'D':
        xtab = ytab + 1
    # Move personagem para CIMA
    elif x == 'W':
        ytab = ytab - 1
    # Move personagem para BAIXO
    elif x == 'S':
        ytab = ytab + 1

    # Trata evento
    # Moeda
    if tabuleiro[ytab,xtab] == 11:
        moeda = moeda + 1
        # Apaga moeda do tabuleiro
     elif tabuleiro[ytab,xtab] == 0 :
			moeda = moeda
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
        life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 42
    elif tabuleiro[ytab,xtab] == 0 :
                                   ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 17:31:02) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
    if x == 'A':
        xtab = xtab - 1
    # Move personagem para DIREITA
    elif x == 'D':
        xtab = ytab + 1
    # Move personagem para CIMA
    elif x == 'W':
        ytab = ytab - 1
    # Move personagem para BAIXO
    elif x == 'S':
        ytab = ytab + 1

    # Trata evento
    # Moeda
    if tabuleiro[ytab,xtab] == 11:
        moeda = moeda + 1
        # Apaga moeda do tabuleiro
    elif tabuleiro[ytab,xtab] == 0 :
			moeda = moeda
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
        life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 43
    moeda = moeda
                ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 17:31:18) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
    if x == 'A':
        xtab = xtab - 1
    # Move personagem para DIREITA
    elif x == 'D':
        xtab = ytab + 1
    # Move personagem para CIMA
    elif x == 'W':
        ytab = ytab - 1
    # Move personagem para BAIXO
    elif x == 'S':
        ytab = ytab + 1

    # Trata evento
    # Moeda
    if tabuleiro[ytab,xtab] == 11:
        moeda = moeda + 1
        # Apaga moeda do tabuleiro
    elif tabuleiro[ytab,xtab] == 0 :
		moeda = moeda
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
        life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 43
    moeda = moeda
                ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 17:31:18) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
    if x == 'A':
        xtab = xtab - 1
    # Move personagem para DIREITA
    elif x == 'D':
        xtab = ytab + 1
    # Move personagem para CIMA
    elif x == 'W':
        ytab = ytab - 1
    # Move personagem para BAIXO
    elif x == 'S':
        ytab = ytab + 1

    # Trata evento
    # Moeda
    if tabuleiro[ytab,xtab] == 11:
        moeda = moeda + 1
        # Apaga moeda do tabuleiro
    elif tabuleiro[ytab,xtab] == 0 :
		moeda = moeda
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
        life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 43
    moeda = moeda
                ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 17:31:18) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
    if x == 'A':
        xtab = xtab - 1
    # Move personagem para DIREITA
    elif x == 'D':
        xtab = ytab + 1
    # Move personagem para CIMA
    elif x == 'W':
        ytab = ytab - 1
    # Move personagem para BAIXO
    elif x == 'S':
        ytab = ytab + 1

    # Trata evento
    # Moeda
    if tabuleiro[ytab,xtab] == 11:
        moeda = moeda + 1
        # Apaga moeda do tabuleiro
    elif tabuleiro[ytab,xtab] == 0 :
		moeda = moeda
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
        life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 43
    moeda = moeda
                ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 17:31:18) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
    if x == 'A':
        xtab = xtab - 1
    # Move personagem para DIREITA
    elif x == 'D':
        xtab = ytab + 1
    # Move personagem para CIMA
    elif x == 'W':
        ytab = ytab - 1
    # Move personagem para BAIXO
    elif x == 'S':
        ytab = ytab + 1

    # Trata evento
    # Moeda
    if tabuleiro[ytab,xtab] == 11:
        moeda = moeda + 1
        # Apaga moeda do tabuleiro
    elif tabuleiro[ytab,xtab] == 0 :
		moeda = moeda
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
        life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 43
    moeda = moeda
                ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 17:31:18) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
    if x == 'A':
        xtab = xtab - 1
    # Move personagem para DIREITA
    elif x == 'D':
        xtab = ytab + 1
    # Move personagem para CIMA
    elif x == 'W':
        ytab = ytab - 1
    # Move personagem para BAIXO
    elif x == 'S':
        ytab = ytab + 1

    # Trata evento
    # Moeda
    if tabuleiro[ytab,xtab] == 11:
        moeda = moeda + 1
        # Apaga moeda do tabuleiro
    elif tabuleiro[ytab,xtab] == 0 :
		moeda = moeda
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
        life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 43
    moeda = moeda
                ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 17:31:21) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
    if x == 'A':
        xtab = xtab - 1
    # Move personagem para DIREITA
    elif x == 'D':
        xtab = ytab + 1
    # Move personagem para CIMA
    elif x == 'W':
        ytab = ytab - 1
    # Move personagem para BAIXO
    elif x == 'S':
        ytab = ytab + 1

    # Trata evento
    # Moeda
    if tabuleiro[ytab,xtab] == 11:
        moeda = moeda + 1
        # Apaga moeda do tabuleiro
    elif tabuleiro[ytab,xtab] == 0 :
		moeda = moeda
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
        life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 43
    moeda = moeda
                ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 17:31:48) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
    if x == 'A':
        xtab = xtab - 1
    # Move personagem para DIREITA
    elif x == 'D':
        xtab = ytab + 1
    # Move personagem para CIMA
    elif x == 'W':
        ytab = ytab - 1
    # Move personagem para BAIXO
    elif x == 'S':
        ytab = ytab + 1

    # Trata evento
    # Moeda
    if tabuleiro[ytab,xtab] == 11:
        moeda = moeda + 1
        # Apaga moeda do tabuleiro
    elif tabuleiro[ytab,xtab] == 0 :
		  moeda = moeda
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
        life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 43
    moeda = moeda
                ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 17:32:48) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
    if x == 'A':
        xtab = xtab - 1
    # Move personagem para DIREITA
    elif x == 'D':
        xtab = ytab + 1
    # Move personagem para CIMA
    elif x == 'W':
        ytab = ytab - 1
    # Move personagem para BAIXO
    elif x == 'S':
        ytab = ytab + 1

    # Trata evento
    # Moeda
    if tabuleiro[ytab,xtab] == 11:
        moeda = moeda + 1
        # Apaga moeda do tabuleiro
    elif tabuleiro[ytab,xtab] == 0 :
		  moeda = moeda
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
        life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 43
    moeda = moeda
                ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 17:33:11) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
    if x == 'A':
        xtab = xtab - 1
    # Move personagem para DIREITA
    elif x == 'D':
        xtab = ytab + 1
    # Move personagem para CIMA
    elif x == 'W':
        ytab = ytab - 1
    # Move personagem para BAIXO
    elif x == 'S':
        ytab = ytab + 1

    # Trata evento
    # Moeda
    if tabuleiro[ytab,xtab] == 11:
        moeda = moeda + 1
        # Apaga moeda do tabuleiro
    elif tabuleiro[ytab,xtab] == 0 :
		moeda = moeda
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
        life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 43
    moeda = moeda
                ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 17:33:38) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
    if x == 'A':
        xtab = xtab - 1
    # Move personagem para DIREITA
    elif x == 'D':
        xtab = ytab + 1
    # Move personagem para CIMA
    elif x == 'W':
        ytab = ytab - 1
    # Move personagem para BAIXO
    elif x == 'S':
        ytab = ytab + 1

    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
        moeda = moeda + 1
        # Apaga moeda do tabuleiro
   elif tabuleiro[ytab,xtab] == 0 :
		  moeda = moeda
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
        life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 39
    if tabuleiro[ytab,xtab] == 11:
                                 ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 17:33:38) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
    if x == 'A':
        xtab = xtab - 1
    # Move personagem para DIREITA
    elif x == 'D':
        xtab = ytab + 1
    # Move personagem para CIMA
    elif x == 'W':
        ytab = ytab - 1
    # Move personagem para BAIXO
    elif x == 'S':
        ytab = ytab + 1

    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
        moeda = moeda + 1
        # Apaga moeda do tabuleiro
   elif tabuleiro[ytab,xtab] == 0 :
		  moeda = moeda
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
        life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 39
    if tabuleiro[ytab,xtab] == 11:
                                 ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 17:33:38) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
    if x == 'A':
        xtab = xtab - 1
    # Move personagem para DIREITA
    elif x == 'D':
        xtab = ytab + 1
    # Move personagem para CIMA
    elif x == 'W':
        ytab = ytab - 1
    # Move personagem para BAIXO
    elif x == 'S':
        ytab = ytab + 1

    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
        moeda = moeda + 1
        # Apaga moeda do tabuleiro
   elif tabuleiro[ytab,xtab] == 0 :
		  moeda = moeda
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
        life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 39
    if tabuleiro[ytab,xtab] == 11:
                                 ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 17:33:38) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
    if x == 'A':
        xtab = xtab - 1
    # Move personagem para DIREITA
    elif x == 'D':
        xtab = ytab + 1
    # Move personagem para CIMA
    elif x == 'W':
        ytab = ytab - 1
    # Move personagem para BAIXO
    elif x == 'S':
        ytab = ytab + 1

    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
        moeda = moeda + 1
        # Apaga moeda do tabuleiro
   elif tabuleiro[ytab,xtab] == 0 :
		  moeda = moeda
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
        life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 39
    if tabuleiro[ytab,xtab] == 11:
                                 ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 17:33:38) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
    if x == 'A':
        xtab = xtab - 1
    # Move personagem para DIREITA
    elif x == 'D':
        xtab = ytab + 1
    # Move personagem para CIMA
    elif x == 'W':
        ytab = ytab - 1
    # Move personagem para BAIXO
    elif x == 'S':
        ytab = ytab + 1

    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
        moeda = moeda + 1
        # Apaga moeda do tabuleiro
   elif tabuleiro[ytab,xtab] == 0 :
		  moeda = moeda
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
        life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 39
    if tabuleiro[ytab,xtab] == 11:
                                 ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 17:33:38) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
    if x == 'A':
        xtab = xtab - 1
    # Move personagem para DIREITA
    elif x == 'D':
        xtab = ytab + 1
    # Move personagem para CIMA
    elif x == 'W':
        ytab = ytab - 1
    # Move personagem para BAIXO
    elif x == 'S':
        ytab = ytab + 1

    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
        moeda = moeda + 1
        # Apaga moeda do tabuleiro
   elif tabuleiro[ytab,xtab] == 0 :
		  moeda = moeda
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
        life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 39
    if tabuleiro[ytab,xtab] == 11:
                                 ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 17:33:38) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
    if x == 'A':
        xtab = xtab - 1
    # Move personagem para DIREITA
    elif x == 'D':
        xtab = ytab + 1
    # Move personagem para CIMA
    elif x == 'W':
        ytab = ytab - 1
    # Move personagem para BAIXO
    elif x == 'S':
        ytab = ytab + 1

    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
        moeda = moeda + 1
        # Apaga moeda do tabuleiro
   elif tabuleiro[ytab,xtab] == 0 :
		  moeda = moeda
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
        life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 39
    if tabuleiro[ytab,xtab] == 11:
                                 ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 17:33:38) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
    if x == 'A':
        xtab = xtab - 1
    # Move personagem para DIREITA
    elif x == 'D':
        xtab = ytab + 1
    # Move personagem para CIMA
    elif x == 'W':
        ytab = ytab - 1
    # Move personagem para BAIXO
    elif x == 'S':
        ytab = ytab + 1

    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
        moeda = moeda + 1
        # Apaga moeda do tabuleiro
   elif tabuleiro[ytab,xtab] == 0 :
		  moeda = moeda
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
        life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 39
    if tabuleiro[ytab,xtab] == 11:
                                 ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 17:33:38) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
    if x == 'A':
        xtab = xtab - 1
    # Move personagem para DIREITA
    elif x == 'D':
        xtab = ytab + 1
    # Move personagem para CIMA
    elif x == 'W':
        ytab = ytab - 1
    # Move personagem para BAIXO
    elif x == 'S':
        ytab = ytab + 1

    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
        moeda = moeda + 1
        # Apaga moeda do tabuleiro
   elif tabuleiro[ytab,xtab] == 0 :
		  moeda = moeda
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
        life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 39
    if tabuleiro[ytab,xtab] == 11:
                                 ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 17:34:23) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
   if x == 'A':
        xtab = xtab - 1
    # Move personagem para DIREITA
    elif x == 'D':
      xtab = ytab + 1
    # Move personagem para CIMA
    elif x == 'W':
      ytab = ytab - 1
    # Move personagem para BAIXO
    elif x == 'S':
      ytab = ytab + 1

    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
        moeda = moeda + 1
        # Apaga moeda do tabuleiro
   elif tabuleiro[ytab,xtab] == 0 :
		  moeda = moeda
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
      life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 28
    elif x == 'D':
                 ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 17:34:52) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
   if x == 'A':
        xtab = xtab - 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = ytab + 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1

    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
        moeda = moeda + 1
        # Apaga moeda do tabuleiro
   elif tabuleiro[ytab,xtab] == 0 :
		  moeda = moeda
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
      life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 45
    elif tabuleiro[ytab,xtab] == 22:
                                   ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 17:35:01) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
   if x == 'A':
        xtab = xtab - 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = ytab + 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1

    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
        moeda = moeda + 1
        # Apaga moeda do tabuleiro
   elif tabuleiro[ytab,xtab] == 0 :
		  moeda = moeda
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-27 17:35:45) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
   if x == 'A':
        xtab = xtab - 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = ytab + 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1

    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
        moeda = moeda + 1
        # Apaga moeda do tabuleiro
   elif tabuleiro[ytab,xtab] == 0 :
		  moeda = moeda
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- EXECUTION TIME:
1.17399
-- TEST CASE 1:
---- input:
[[0,11,0,11,0,11,22,0,11,0,11,0,11],[11,0,22,11,0,11,11,0,11,0,0,0,22],[11,22,22,11,0,11,11,0,22,0,11,11,22],[22,11,0,11,0,11,11,0,22,0,0,0,0],[22,11,11,11,0,11,22,0,11,0,22,0,22],[11,11,22,11,0,0,11,0,22,0,0,22,11],[0,11,0,11,0,11,22,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,11,0,0,11,11],[11,11,22,11,0,0,11,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,22,0,0,0,11],[0,11,22,11,0,0,11,0,22,0,11,0,11]]
DDDDSDSAAWW
---- correct output:
posicao x:  3
posicao y:  0
moedas:  6
life:  100

---- user output:
posicao x:  0
posicao y:  0
moedas:  6
life:  85
-- TEST CASE 2:
---- input:
[[22,11,0,11,0,11,11,0,22,0,0,0,0],[22,11,11,11,0,11,22,0,11,0,22,0,22],[11,11,22,11,0,0,11,0,22,0,0,22,11],[0,11,0,11,0,11,22,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,11,0,0,11,11],[11,11,22,11,0,0,11,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,22,0,0,0,11],[0,11,22,11,0,0,11,0,22,0,11,0,11]]
DSSSDSAASD
---- correct output:
posicao x:  1
posicao y:  5
moedas:  7
life:  95
---- user output:
posicao x:  6
posicao y:  5
moedas:  6
life:  90
-- TEST CASE 3:
---- input:
[[22,22,11,11,11,11,22,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,11,0,0,11,11],[11,11,22,11,0,0,11,0,22,0,22,0,11],[0,11,0,11,0,11,22,0,11,0,11,0,11],[11,0,22,11,0,11,11,0,11,0,0,0,22],[11,22,22,11,0,11,11,0,22,0,11,11,22],[0,11,22,11,0,11,22,0,22,0,0,0,11],[0,11,22,11,0,0,11,0,22,0,11,0,11]]
DDDSSSAWDWAS
---- correct output:
posicao x:  2
posicao y:  2
moedas:  5
life:  80
---- user output:
posicao x:  2
posicao y:  2
moedas:  6
life:  75
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 17:36:13) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
   if x == 'A':
        xtab = xtab - 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = xtab + 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1

    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
        moeda = moeda + 1
        # Apaga moeda do tabuleiro
   elif tabuleiro[ytab,xtab] == 0 :
		  moeda = moeda
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 17:36:37) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
   if x == 'A':
        xtab = xtab - 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = xtab + 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1

    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
        moeda = moeda + 1
        # Apaga moeda do tabuleiro
   elif tabuleiro[ytab,xtab] == 0 :
		  moeda = moeda
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-27 17:36:56) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
   if x == 'A':
        xtab = xtab - 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = xtab + 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1

    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
        moeda = moeda + 1
        # Apaga moeda do tabuleiro
   elif tabuleiro[ytab,xtab] == 0 :
		  moeda = moeda
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- EXECUTION TIME:
0.933158
-- TEST CASE 1:
---- input:
[[0,11,0,11,0,11,22,0,11,0,11,0,11],[11,0,22,11,0,11,11,0,11,0,0,0,22],[11,22,22,11,0,11,11,0,22,0,11,11,22],[22,11,0,11,0,11,11,0,22,0,0,0,0],[22,11,11,11,0,11,22,0,11,0,22,0,22],[11,11,22,11,0,0,11,0,22,0,0,22,11],[0,11,0,11,0,11,22,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,11,0,0,11,11],[11,11,22,11,0,0,11,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,22,0,0,0,11],[0,11,22,11,0,0,11,0,22,0,11,0,11]]
DDDDSDSAAWW
---- correct output:
posicao x:  3
posicao y:  0
moedas:  6
life:  100

---- user output:
posicao x:  3
posicao y:  0
moedas:  7
life:  100
-- TEST CASE 2:
---- input:
[[22,11,0,11,0,11,11,0,22,0,0,0,0],[22,11,11,11,0,11,22,0,11,0,22,0,22],[11,11,22,11,0,0,11,0,22,0,0,22,11],[0,11,0,11,0,11,22,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,11,0,0,11,11],[11,11,22,11,0,0,11,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,22,0,0,0,11],[0,11,22,11,0,0,11,0,22,0,11,0,11]]
DSSSDSAASD
---- correct output:
posicao x:  1
posicao y:  5
moedas:  7
life:  95
---- user output:
posicao x:  1
posicao y:  5
moedas:  7
life:  95
-- TEST CASE 3:
---- input:
[[22,22,11,11,11,11,22,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,11,0,0,11,11],[11,11,22,11,0,0,11,0,22,0,22,0,11],[0,11,0,11,0,11,22,0,11,0,11,0,11],[11,0,22,11,0,11,11,0,11,0,0,0,22],[11,22,22,11,0,11,11,0,22,0,11,11,22],[0,11,22,11,0,11,22,0,22,0,0,0,11],[0,11,22,11,0,0,11,0,22,0,11,0,11]]
DDDSSSAWDWAS
---- correct output:
posicao x:  2
posicao y:  2
moedas:  5
life:  80
---- user output:
posicao x:  2
posicao y:  2
moedas:  7
life:  80
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 17:37:24) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
   if x == 'A':
        xtab = xtab - 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = xtab + 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1

    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
        moeda = moeda + 1
        # Apaga moeda do tabuleiro
   elif tabuleiro[ytab,xtab] == 0 :
		  moeda = moeda
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5

# Imprime saidas
print("posicao x:  ", xtab)
print("posicao y:  ", ytab)
print("moedas:  ", moeda)
print("life:  ", life)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-27 17:37:48) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
   if x == 'A':
        xtab = xtab - 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = xtab + 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1

    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
        moeda = moeda + 1
        # Apaga moeda do tabuleiro
   elif tabuleiro[ytab,xtab] == 0 :
		  moeda = moeda
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5

# Imprime saidas
print("posicao x:  ", xtab)
print("posicao y:  ", ytab)
print("moedas:  ", moeda)
print("life:  ", life)

-- EXECUTION TIME:
1.10927
-- TEST CASE 1:
---- input:
[[0,11,0,11,0,11,22,0,11,0,11,0,11],[11,0,22,11,0,11,11,0,11,0,0,0,22],[11,22,22,11,0,11,11,0,22,0,11,11,22],[22,11,0,11,0,11,11,0,22,0,0,0,0],[22,11,11,11,0,11,22,0,11,0,22,0,22],[11,11,22,11,0,0,11,0,22,0,0,22,11],[0,11,0,11,0,11,22,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,11,0,0,11,11],[11,11,22,11,0,0,11,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,22,0,0,0,11],[0,11,22,11,0,0,11,0,22,0,11,0,11]]
DDDDSDSAAWW
---- correct output:
posicao x:  3
posicao y:  0
moedas:  6
life:  100

---- user output:
posicao x:   3
posicao y:   0
moedas:   7
life:   100
-- TEST CASE 2:
---- input:
[[22,11,0,11,0,11,11,0,22,0,0,0,0],[22,11,11,11,0,11,22,0,11,0,22,0,22],[11,11,22,11,0,0,11,0,22,0,0,22,11],[0,11,0,11,0,11,22,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,11,0,0,11,11],[11,11,22,11,0,0,11,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,22,0,0,0,11],[0,11,22,11,0,0,11,0,22,0,11,0,11]]
DSSSDSAASD
---- correct output:
posicao x:  1
posicao y:  5
moedas:  7
life:  95
---- user output:
posicao x:   1
posicao y:   5
moedas:   7
life:   95
-- TEST CASE 3:
---- input:
[[22,22,11,11,11,11,22,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,11,0,0,11,11],[11,11,22,11,0,0,11,0,22,0,22,0,11],[0,11,0,11,0,11,22,0,11,0,11,0,11],[11,0,22,11,0,11,11,0,11,0,0,0,22],[11,22,22,11,0,11,11,0,22,0,11,11,22],[0,11,22,11,0,11,22,0,22,0,0,0,11],[0,11,22,11,0,0,11,0,22,0,11,0,11]]
DDDSSSAWDWAS
---- correct output:
posicao x:  2
posicao y:  2
moedas:  5
life:  80
---- user output:
posicao x:   2
posicao y:   2
moedas:   7
life:   80
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-27 17:39:15) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
   if x == 'A':
        xtab = xtab - 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = xtab + 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1

    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
      moeda = moeda + 1
        # Apaga moeda do tabuleiro
   elif tabuleiro[ytab,xtab] == 0 :
	   moeda = moeda
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5

# Imprime saidas
print("posicao x:  ", xtab)
print("posicao y:  ", ytab)
print("moedas:  ", moeda)
print("life:  ", life)

-- EXECUTION TIME:
1.14045
-- TEST CASE 1:
---- input:
[[0,11,0,11,0,11,22,0,11,0,11,0,11],[11,0,22,11,0,11,11,0,11,0,0,0,22],[11,22,22,11,0,11,11,0,22,0,11,11,22],[22,11,0,11,0,11,11,0,22,0,0,0,0],[22,11,11,11,0,11,22,0,11,0,22,0,22],[11,11,22,11,0,0,11,0,22,0,0,22,11],[0,11,0,11,0,11,22,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,11,0,0,11,11],[11,11,22,11,0,0,11,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,22,0,0,0,11],[0,11,22,11,0,0,11,0,22,0,11,0,11]]
DDDDSDSAAWW
---- correct output:
posicao x:  3
posicao y:  0
moedas:  6
life:  100

---- user output:
posicao x:   3
posicao y:   0
moedas:   7
life:   100
-- TEST CASE 2:
---- input:
[[22,11,0,11,0,11,11,0,22,0,0,0,0],[22,11,11,11,0,11,22,0,11,0,22,0,22],[11,11,22,11,0,0,11,0,22,0,0,22,11],[0,11,0,11,0,11,22,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,11,0,0,11,11],[11,11,22,11,0,0,11,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,22,0,0,0,11],[0,11,22,11,0,0,11,0,22,0,11,0,11]]
DSSSDSAASD
---- correct output:
posicao x:  1
posicao y:  5
moedas:  7
life:  95
---- user output:
posicao x:   1
posicao y:   5
moedas:   7
life:   95
-- TEST CASE 3:
---- input:
[[22,22,11,11,11,11,22,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,11,0,0,11,11],[11,11,22,11,0,0,11,0,22,0,22,0,11],[0,11,0,11,0,11,22,0,11,0,11,0,11],[11,0,22,11,0,11,11,0,11,0,0,0,22],[11,22,22,11,0,11,11,0,22,0,11,11,22],[0,11,22,11,0,11,22,0,22,0,0,0,11],[0,11,22,11,0,0,11,0,22,0,11,0,11]]
DDDSSSAWDWAS
---- correct output:
posicao x:  2
posicao y:  2
moedas:  5
life:  80
---- user output:
posicao x:   2
posicao y:   2
moedas:   7
life:   80
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 17:40:24) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
   if x == 'A':
        xtab = xtab - 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = xtab + 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1

    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
      moeda = moeda + 1
		tabuleiro[ytab,xtab] = 0 
        # Apaga moeda do tabuleiro
   elif tabuleiro[ytab,xtab] == 0 :
	   moeda = moeda
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5

# Imprime saidas
print("posicao x:  ", xtab)
print("posicao y:  ", ytab)
print("moedas:  ", moeda)
print("life:  ", life)

-- ERROR:
File "XXXX", line 41
    tabuleiro[ytab,xtab] = 0 
                            ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-27 17:40:44) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
   if x == 'A':
        xtab = xtab - 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = xtab + 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1

    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
      moeda = moeda + 1
		tabuleiro[ytab,xtab] = 0 
        # Apaga moeda do tabuleiro
   elif tabuleiro[ytab,xtab] == 0 :
	   moeda = moeda
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5

# Imprime saidas
print("posicao x:  ", xtab)
print("posicao y:  ", ytab)
print("moedas:  ", moeda)
print("life:  ", life)

-- EXECUTION TIME:
0.808871
-- ERROR:
  File "/home/codebench/codes/1834/1279/main.py", line 41
    tabuleiro[ytab,xtab] = 0 
                            ^
TabError: inconsistent use of tabs and spaces in indentation

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 17:40:47) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
   if x == 'A':
        xtab = xtab - 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = xtab + 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1

    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
      moeda = moeda + 1
		tabuleiro[ytab,xtab] = 0 
        # Apaga moeda do tabuleiro
   elif tabuleiro[ytab,xtab] == 0 :
	   moeda = moeda
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5

# Imprime saidas
print("posicao x:  ", xtab)
print("posicao y:  ", ytab)
print("moedas:  ", moeda)
print("life:  ", life)

-- ERROR:
File "XXXX", line 41
    tabuleiro[ytab,xtab] = 0 
                            ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 17:40:51) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
   if x == 'A':
        xtab = xtab - 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = xtab + 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1

    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
      moeda = moeda + 1
	tabuleiro[ytab,xtab] = 0 
        # Apaga moeda do tabuleiro
   elif tabuleiro[ytab,xtab] == 0 :
	   moeda = moeda
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5

# Imprime saidas
print("posicao x:  ", xtab)
print("posicao y:  ", ytab)
print("moedas:  ", moeda)
print("life:  ", life)

-- ERROR:
File "XXXX", line 41
    tabuleiro[ytab,xtab] = 0 
                            ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 17:40:56) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
   if x == 'A':
        xtab = xtab - 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = xtab + 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1

    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
      moeda = moeda + 1
	   tabuleiro[ytab,xtab] = 0 
        # Apaga moeda do tabuleiro
   elif tabuleiro[ytab,xtab] == 0 :
	   moeda = moeda
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5

# Imprime saidas
print("posicao x:  ", xtab)
print("posicao y:  ", ytab)
print("moedas:  ", moeda)
print("life:  ", life)

-- ERROR:
File "XXXX", line 41
    tabuleiro[ytab,xtab] = 0 
                            ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 17:41:03) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
   if x == 'A':
        xtab = xtab - 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = xtab + 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1

    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
      moeda = moeda + 1
	 	tabuleiro[ytab,xtab] = 0 
        # Apaga moeda do tabuleiro
   elif tabuleiro[ytab,xtab] == 0 :
	   moeda = moeda
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5

# Imprime saidas
print("posicao x:  ", xtab)
print("posicao y:  ", ytab)
print("moedas:  ", moeda)
print("life:  ", life)

-- ERROR:
File "XXXX", line 41
    tabuleiro[ytab,xtab] = 0 
                            ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 17:41:10) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
   if x == 'A':
        xtab = xtab - 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = xtab + 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1

    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
      moeda = moeda + 1
		tabuleiro[ytab,xtab] = 0 
        # Apaga moeda do tabuleiro
   elif tabuleiro[ytab,xtab] == 0 :
	   moeda = moeda
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5

# Imprime saidas
print("posicao x:  ", xtab)
print("posicao y:  ", ytab)
print("moedas:  ", moeda)
print("life:  ", life)

-- ERROR:
File "XXXX", line 41
    tabuleiro[ytab,xtab] = 0 
                            ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 17:41:22) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
   if x == 'A':
        xtab = xtab - 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = xtab + 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1

    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
		moeda = moeda + 1
		tabuleiro[ytab,xtab] = 0 
        # Apaga moeda do tabuleiro
   elif tabuleiro[ytab,xtab] == 0 :
	   moeda = moeda
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5

# Imprime saidas
print("posicao x:  ", xtab)
print("posicao y:  ", ytab)
print("moedas:  ", moeda)
print("life:  ", life)

-- ERROR:
File "XXXX", line 40
    moeda = moeda + 1
                    ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 17:42:02) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
   if x == 'A':
        xtab = xtab - 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = xtab + 1
    # Move personagem para CIMA
	elif x == 'W':
      ytab = ytab - 1
    # Move personagem para BAIXO
	elif x == 'S':
      ytab = ytab + 1

    # Trata evento
    # Moeda
	if tabuleiro[ytab,xtab] == 11:
		moeda = moeda + 1
		tabuleiro[ytab,xtab] = 0 
        # Apaga moeda do tabuleiro
	elif tabuleiro[ytab,xtab] == 0 :
	   moeda = moeda
    # Zumbi
	elif tabuleiro[ytab,xtab] == 22:
      life = life - 5

# Imprime saidas
print("posicao x:  ", xtab)
print("posicao y:  ", ytab)
print("moedas:  ", moeda)
print("life:  ", life)

-- ERROR:
File "XXXX", line 31
    elif x == 'W':
                 ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 17:42:21) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
	if x == 'A':
        xtab = xtab - 1
    # Move personagem para DIREITA
	elif x == 'D':
      xtab = xtab + 1
    # Move personagem para CIMA
	elif x == 'W':
      ytab = ytab - 1
    # Move personagem para BAIXO
	elif x == 'S':
      ytab = ytab + 1

    # Trata evento
    # Moeda
	if tabuleiro[ytab,xtab] == 11:
		moeda = moeda + 1
		tabuleiro[ytab,xtab] = 0 
        # Apaga moeda do tabuleiro
	elif tabuleiro[ytab,xtab] == 0 :
	   moeda = moeda
    # Zumbi
	elif tabuleiro[ytab,xtab] == 22:
      life = life - 5

# Imprime saidas
print("posicao x:  ", xtab)
print("posicao y:  ", ytab)
print("moedas:  ", moeda)
print("life:  ", life)

-- ERROR:
File "XXXX", line 26
    xtab = xtab - 1
                  ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 17:43:04) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
	if x == 'A':
		xtab = xtab - 1
    # Move personagem para DIREITA
	elif x == 'D':
		xtab = xtab + 1
    # Move personagem para CIMA
	elif x == 'W':
		ytab = ytab - 1
    # Move personagem para BAIXO
	elif x == 'S':
		ytab = ytab + 1

    # Trata evento
    # Moeda
	if tabuleiro[ytab,xtab] == 11:
		moeda = moeda + 1
		tabuleiro[ytab,xtab] = 0 
        # Apaga moeda do tabuleiro
	elif tabuleiro[ytab,xtab] == 0 :
	   moeda = moeda
    # Zumbi
	elif tabuleiro[ytab,xtab] == 22:
      life = life - 5

# Imprime saidas
print("posicao x:  ", xtab)
print("posicao y:  ", ytab)
print("moedas:  ", moeda)
print("life:  ", life)

-- ERROR:
File "XXXX", line 47
    life = life - 5
                  ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 17:43:38) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
	if x == 'A':
		xtab = xtab - 1
    # Move personagem para DIREITA
	elif x == 'D':
		xtab = xtab + 1
    # Move personagem para CIMA
	elif x == 'W':
		ytab = ytab - 1
    # Move personagem para BAIXO
	elif x == 'S':
		ytab = ytab + 1

    # Trata evento
    # Moeda
	if tabuleiro[ytab,xtab] == 11:
		moeda = moeda + 1
		tabuleiro[ytab,xtab] = 0 
        # Apaga moeda do tabuleiro
	elif tabuleiro[ytab,xtab] == 0 :
		moeda = moeda
    # Zumbi
	elif tabuleiro[ytab,xtab] == 22:
		life = life - 5

# Imprime saidas
print("posicao x:  ", xtab)
print("posicao y:  ", ytab)
print("moedas:  ", moeda)
print("life:  ", life)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-27 17:44:03) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
	if x == 'A':
		xtab = xtab - 1
    # Move personagem para DIREITA
	elif x == 'D':
		xtab = xtab + 1
    # Move personagem para CIMA
	elif x == 'W':
		ytab = ytab - 1
    # Move personagem para BAIXO
	elif x == 'S':
		ytab = ytab + 1

    # Trata evento
    # Moeda
	if tabuleiro[ytab,xtab] == 11:
		moeda = moeda + 1
		tabuleiro[ytab,xtab] = 0 
        # Apaga moeda do tabuleiro
	elif tabuleiro[ytab,xtab] == 0 :
		moeda = moeda
    # Zumbi
	elif tabuleiro[ytab,xtab] == 22:
		life = life - 5

# Imprime saidas
print("posicao x:  ", xtab)
print("posicao y:  ", ytab)
print("moedas:  ", moeda)
print("life:  ", life)

-- EXECUTION TIME:
1.17124
-- TEST CASE 1:
---- input:
[[0,11,0,11,0,11,22,0,11,0,11,0,11],[11,0,22,11,0,11,11,0,11,0,0,0,22],[11,22,22,11,0,11,11,0,22,0,11,11,22],[22,11,0,11,0,11,11,0,22,0,0,0,0],[22,11,11,11,0,11,22,0,11,0,22,0,22],[11,11,22,11,0,0,11,0,22,0,0,22,11],[0,11,0,11,0,11,22,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,11,0,0,11,11],[11,11,22,11,0,0,11,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,22,0,0,0,11],[0,11,22,11,0,0,11,0,22,0,11,0,11]]
DDDDSDSAAWW
---- correct output:
posicao x:  3
posicao y:  0
moedas:  6
life:  100

---- user output:
posicao x:   3
posicao y:   0
moedas:   6
life:   100
-- TEST CASE 2:
---- input:
[[22,11,0,11,0,11,11,0,22,0,0,0,0],[22,11,11,11,0,11,22,0,11,0,22,0,22],[11,11,22,11,0,0,11,0,22,0,0,22,11],[0,11,0,11,0,11,22,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,11,0,0,11,11],[11,11,22,11,0,0,11,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,22,0,0,0,11],[0,11,22,11,0,0,11,0,22,0,11,0,11]]
DSSSDSAASD
---- correct output:
posicao x:  1
posicao y:  5
moedas:  7
life:  95
---- user output:
posicao x:   1
posicao y:   5
moedas:   7
life:   95
-- TEST CASE 3:
---- input:
[[22,22,11,11,11,11,22,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,11,0,0,11,11],[11,11,22,11,0,0,11,0,22,0,22,0,11],[0,11,0,11,0,11,22,0,11,0,11,0,11],[11,0,22,11,0,11,11,0,11,0,0,0,22],[11,22,22,11,0,11,11,0,22,0,11,11,22],[0,11,22,11,0,11,22,0,22,0,0,0,11],[0,11,22,11,0,0,11,0,22,0,11,0,11]]
DDDSSSAWDWAS
---- correct output:
posicao x:  2
posicao y:  2
moedas:  5
life:  80
---- user output:
posicao x:   2
posicao y:   2
moedas:   5
life:   80
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 17:44:31) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
	if x == 'A':
		xtab = xtab - 1
    # Move personagem para DIREITA
	elif x == 'D':
		xtab = xtab + 1
    # Move personagem para CIMA
	elif x == 'W':
		ytab = ytab - 1
    # Move personagem para BAIXO
	elif x == 'S':
		ytab = ytab + 1

    # Trata evento
    # Moeda
	if tabuleiro[ytab,xtab] == 11:
		moeda = moeda + 1
		#tabuleiro[ytab,xtab] = 0 
        # Apaga moeda do tabuleiro
	elif tabuleiro[ytab,xtab] == 0 :
		moeda = moeda
    # Zumbi
	elif tabuleiro[ytab,xtab] == 22:
		life = life - 5

# Imprime saidas
print("posicao x:  ", xtab)
print("posicao y:  ", ytab)
print("moedas:  ", moeda)
print("life:  ", life)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-27 17:45:22) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
	if x == 'A':
		xtab = xtab - 1
    # Move personagem para DIREITA
	elif x == 'D':
		xtab = xtab + 1
    # Move personagem para CIMA
	elif x == 'W':
		ytab = ytab - 1
    # Move personagem para BAIXO
	elif x == 'S':
		ytab = ytab + 1

    # Trata evento
    # Moeda
	if tabuleiro[ytab,xtab] == 11:
		moeda = moeda + 1
		tabuleiro[ytab,xtab] = 0 
        # Apaga moeda do tabuleiro
	elif tabuleiro[ytab,xtab] == 0 :
		moeda = moeda
    # Zumbi
	elif tabuleiro[ytab,xtab] == 22:
		life = life - 5

# Imprime saidas
print("posicao x:  ", xtab)
print("posicao y:  ", ytab)
print("moedas:  ", moeda)
print("life:  ", life)

-- EXECUTION TIME:
1.00493
-- TEST CASE 1:
---- input:
[[0,11,0,11,0,11,22,0,11,0,11,0,11],[11,0,22,11,0,11,11,0,11,0,0,0,22],[11,22,22,11,0,11,11,0,22,0,11,11,22],[22,11,0,11,0,11,11,0,22,0,0,0,0],[22,11,11,11,0,11,22,0,11,0,22,0,22],[11,11,22,11,0,0,11,0,22,0,0,22,11],[0,11,0,11,0,11,22,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,11,0,0,11,11],[11,11,22,11,0,0,11,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,22,0,0,0,11],[0,11,22,11,0,0,11,0,22,0,11,0,11]]
DDDDSDSAAWW
---- correct output:
posicao x:  3
posicao y:  0
moedas:  6
life:  100

---- user output:
posicao x:   3
posicao y:   0
moedas:   6
life:   100
-- TEST CASE 2:
---- input:
[[22,11,0,11,0,11,11,0,22,0,0,0,0],[22,11,11,11,0,11,22,0,11,0,22,0,22],[11,11,22,11,0,0,11,0,22,0,0,22,11],[0,11,0,11,0,11,22,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,11,0,0,11,11],[11,11,22,11,0,0,11,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,22,0,0,0,11],[0,11,22,11,0,0,11,0,22,0,11,0,11]]
DSSSDSAASD
---- correct output:
posicao x:  1
posicao y:  5
moedas:  7
life:  95
---- user output:
posicao x:   1
posicao y:   5
moedas:   7
life:   95
-- TEST CASE 3:
---- input:
[[22,22,11,11,11,11,22,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,11,0,0,11,11],[11,11,22,11,0,0,11,0,22,0,22,0,11],[0,11,0,11,0,11,22,0,11,0,11,0,11],[11,0,22,11,0,11,11,0,11,0,0,0,22],[11,22,22,11,0,11,11,0,22,0,11,11,22],[0,11,22,11,0,11,22,0,22,0,0,0,11],[0,11,22,11,0,0,11,0,22,0,11,0,11]]
DDDSSSAWDWAS
---- correct output:
posicao x:  2
posicao y:  2
moedas:  5
life:  80
---- user output:
posicao x:   2
posicao y:   2
moedas:   5
life:   80
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
