== TEST (2019-06-30 15:23:41) 
-- CODE:
from numpy import *
# Respostas dos alunos às questões
resp = array ([
['A', 'B', 'A', 'C', 'C', 'D', 'E', 'E', 'A', 'D'],
['D', 'B', 'A', 'B', 'C', 'A', 'E', 'E', 'A', 'D'],
['E', 'D', 'D', 'A', 'C', 'B', 'E', 'E', 'A', 'D'],
['C', 'B', 'A', 'E', 'D', 'C', 'E', 'E', 'A', 'D'],
['A', 'B', 'D', 'C', 'C', 'D', 'E', 'E', 'A', 'D'],
['B', 'B', 'E', 'C', 'C', 'D', 'E', 'E', 'A', 'D'],
['B', 'B', 'A', 'C', 'C', 'D', 'E', 'E', 'A', 'D'],
['E', 'B', 'E', 'C', 'C', 'D', 'E', 'E', 'A', 'D']])

# Gabarito das questões
gab = array(
['D', 'B', 'D', 'C', 'C', 'D', 'A', 'E', 'A', 'D'])

nalunos=shape(resp)[0]
nquestoes=shape(resp)[1]
notas=zeros((nalunos), dtype=int)

for i in range(nalunos):
	for j in range(nquestoes):
		if resp[i,j]==gab[j]:
			notas[i]=notas[i]+1
print(notas)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-30 15:27:29) 
-- CODE:
from numpy import *
# Respostas dos alunos às questões
resp = array ([
['A', 'B', 'A', 'C', 'C', 'D', 'E', 'E', 'A', 'D'],
['D', 'B', 'A', 'B', 'C', 'A', 'E', 'E', 'A', 'D'],
['E', 'D', 'D', 'A', 'C', 'B', 'E', 'E', 'A', 'D'],
['C', 'B', 'A', 'E', 'D', 'C', 'E', 'E', 'A', 'D'],
['A', 'B', 'D', 'C', 'C', 'D', 'E', 'E', 'A', 'D'],
['B', 'B', 'E', 'C', 'C', 'D', 'E', 'E', 'A', 'D'],
['B', 'B', 'A', 'C', 'C', 'D', 'E', 'E', 'A', 'D'],
['E', 'B', 'E', 'C', 'C', 'D', 'E', 'E', 'A', 'D']])

# Gabarito das questões
gab = array(
['D', 'B', 'D', 'C', 'C', 'D', 'A', 'E', 'A', 'D'])

nalunos=shape(resp)[0]
nquestoes=shape(resp)[1]
notas=zeros((nalunos), dtype=int)
for i in range(nalunos):
	for j in range(nquestoes):
		if resp[i,j]=p.T=gab[j]:
			notas[i]=notas[i]+1
print(notas)
print(resp,resp.T)
-- ERROR:
File "XXXX", line 22
    if resp[i,j]=p.T=gab[j]:
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-30 15:27:38) 
-- CODE:
from numpy import *
# Respostas dos alunos às questões
resp = array ([
['A', 'B', 'A', 'C', 'C', 'D', 'E', 'E', 'A', 'D'],
['D', 'B', 'A', 'B', 'C', 'A', 'E', 'E', 'A', 'D'],
['E', 'D', 'D', 'A', 'C', 'B', 'E', 'E', 'A', 'D'],
['C', 'B', 'A', 'E', 'D', 'C', 'E', 'E', 'A', 'D'],
['A', 'B', 'D', 'C', 'C', 'D', 'E', 'E', 'A', 'D'],
['B', 'B', 'E', 'C', 'C', 'D', 'E', 'E', 'A', 'D'],
['B', 'B', 'A', 'C', 'C', 'D', 'E', 'E', 'A', 'D'],
['E', 'B', 'E', 'C', 'C', 'D', 'E', 'E', 'A', 'D']])

# Gabarito das questões
gab = array(
['D', 'B', 'D', 'C', 'C', 'D', 'A', 'E', 'A', 'D'])

nalunos=shape(resp)[0]
nquestoes=shape(resp)[1]
notas=zeros((nalunos), dtype=int)
for i in range(nalunos):
	for j in range(nquestoes):
		if resp[i,j]=p.T=gab[j]:
			notas[i]=notas[i]+1
print(notas)
print(dot(resp,resp.T))
-- ERROR:
File "XXXX", line 22
    if resp[i,j]=p.T=gab[j]:
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-30 15:27:56) 
-- CODE:
from numpy import *
# Respostas dos alunos às questões
resp = array ([
['A', 'B', 'A', 'C', 'C', 'D', 'E', 'E', 'A', 'D'],
['D', 'B', 'A', 'B', 'C', 'A', 'E', 'E', 'A', 'D'],
['E', 'D', 'D', 'A', 'C', 'B', 'E', 'E', 'A', 'D'],
['C', 'B', 'A', 'E', 'D', 'C', 'E', 'E', 'A', 'D'],
['A', 'B', 'D', 'C', 'C', 'D', 'E', 'E', 'A', 'D'],
['B', 'B', 'E', 'C', 'C', 'D', 'E', 'E', 'A', 'D'],
['B', 'B', 'A', 'C', 'C', 'D', 'E', 'E', 'A', 'D'],
['E', 'B', 'E', 'C', 'C', 'D', 'E', 'E', 'A', 'D']])

# Gabarito das questões
gab = array(
['D', 'B', 'D', 'C', 'C', 'D', 'A', 'E', 'A', 'D'])

nalunos=shape(resp)[0]
nquestoes=shape(resp)[1]
notas=zeros((nalunos), dtype=int)
for i in range(nalunos):
	for j in range(nquestoes):
		if resp[i,j]=p.T=gab[j]:
			notas[i]=notas[i]+1

print(dot(resp,resp.T))
-- ERROR:
File "XXXX", line 22
    if resp[i,j]=p.T=gab[j]:
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-30 15:28:12) 
-- CODE:
from numpy import *
# Respostas dos alunos às questões
resp = array ([
['A', 'B', 'A', 'C', 'C', 'D', 'E', 'E', 'A', 'D'],
['D', 'B', 'A', 'B', 'C', 'A', 'E', 'E', 'A', 'D'],
['E', 'D', 'D', 'A', 'C', 'B', 'E', 'E', 'A', 'D'],
['C', 'B', 'A', 'E', 'D', 'C', 'E', 'E', 'A', 'D'],
['A', 'B', 'D', 'C', 'C', 'D', 'E', 'E', 'A', 'D'],
['B', 'B', 'E', 'C', 'C', 'D', 'E', 'E', 'A', 'D'],
['B', 'B', 'A', 'C', 'C', 'D', 'E', 'E', 'A', 'D'],
['E', 'B', 'E', 'C', 'C', 'D', 'E', 'E', 'A', 'D']])

# Gabarito das questões
gab = array(
['D', 'B', 'D', 'C', 'C', 'D', 'A', 'E', 'A', 'D'])

nalunos=shape(resp)[0]
nquestoes=shape(resp)[1]
notas=zeros((nalunos), dtype=int)


print(dot(resp,resp.T))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-30 15:28:47) 
-- CODE:

from numpy import *
from numpy linalg import *
# Respostas dos alunos às questões
resp = array ([
['A', 'B', 'A', 'C', 'C', 'D', 'E', 'E', 'A', 'D'],
['D', 'B', 'A', 'B', 'C', 'A', 'E', 'E', 'A', 'D'],
['E', 'D', 'D', 'A', 'C', 'B', 'E', 'E', 'A', 'D'],
['C', 'B', 'A', 'E', 'D', 'C', 'E', 'E', 'A', 'D'],
['A', 'B', 'D', 'C', 'C', 'D', 'E', 'E', 'A', 'D'],
['B', 'B', 'E', 'C', 'C', 'D', 'E', 'E', 'A', 'D'],
['B', 'B', 'A', 'C', 'C', 'D', 'E', 'E', 'A', 'D'],
['E', 'B', 'E', 'C', 'C', 'D', 'E', 'E', 'A', 'D']])

# Gabarito das questões
gab = array(
['D', 'B', 'D', 'C', 'C', 'D', 'A', 'E', 'A', 'D'])

nalunos=shape(resp)[0]
nquestoes=shape(resp)[1]
notas=zeros((nalunos), dtype=int)


print(dot(resp,resp.T))
-- ERROR:
File "XXXX", line 3
    from numpy linalg import *
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-30 15:29:03) 
-- CODE:

from numpy import *
from numpy.linalg import *
# Respostas dos alunos às questões
resp = array ([
['A', 'B', 'A', 'C', 'C', 'D', 'E', 'E', 'A', 'D'],
['D', 'B', 'A', 'B', 'C', 'A', 'E', 'E', 'A', 'D'],
['E', 'D', 'D', 'A', 'C', 'B', 'E', 'E', 'A', 'D'],
['C', 'B', 'A', 'E', 'D', 'C', 'E', 'E', 'A', 'D'],
['A', 'B', 'D', 'C', 'C', 'D', 'E', 'E', 'A', 'D'],
['B', 'B', 'E', 'C', 'C', 'D', 'E', 'E', 'A', 'D'],
['B', 'B', 'A', 'C', 'C', 'D', 'E', 'E', 'A', 'D'],
['E', 'B', 'E', 'C', 'C', 'D', 'E', 'E', 'A', 'D']])

# Gabarito das questões
gab = array(
['D', 'B', 'D', 'C', 'C', 'D', 'A', 'E', 'A', 'D'])

nalunos=shape(resp)[0]
nquestoes=shape(resp)[1]
notas=zeros((nalunos), dtype=int)


print(dot(resp,resp.T))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-30 15:30:53) 
-- CODE:

from numpy import *
from numpy.linalg import *
# Respostas dos alunos às questões
resp = array ([
['A', 'B', 'A', 'C', 'C', 'D', 'E', 'E', 'A', 'D'],
['D', 'B', 'A', 'B', 'C', 'A', 'E', 'E', 'A', 'D'],
['E', 'D', 'D', 'A', 'C', 'B', 'E', 'E', 'A', 'D'],
['C', 'B', 'A', 'E', 'D', 'C', 'E', 'E', 'A', 'D'],
['A', 'B', 'D', 'C', 'C', 'D', 'E', 'E', 'A', 'D'],
['B', 'B', 'E', 'C', 'C', 'D', 'E', 'E', 'A', 'D'],
['B', 'B', 'A', 'C', 'C', 'D', 'E', 'E', 'A', 'D'],
['E', 'B', 'E', 'C', 'C', 'D', 'E', 'E', 'A', 'D']])

# Gabarito das questões
gab = array(
['D', 'B', 'D', 'C', 'C', 'D', 'A', 'E', 'A', 'D'])

nalunos=shape(resp)[0]
nquestoes=shape(resp)[1]
notas=zeros((nalunos), dtype=int)
for i in range(nalunos):
	for j in range(nquestoes):
		if resp[i,j]==gab[j]:
			notas[i]=notas[i]+1
print(notas)
print(dot(notas,notas.T))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
