== TEST (2019-06-09 17:41:29) 
-- CODE:
from numpy import *
a = int(input("valor: "))
b = "*"
c= "o"
for i in range(a):
	d = b*(i-1)
	e = c*(c-i)
	print(d,e)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 17:42:37) 
-- CODE:
from numpy import *
a = int(input("valor: "))
b = "*"
c= "o"
for i in range(a):
	d = b*(i-1)
	e = c*(a-(a-i))
	print(d,e)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 17:45:36) 
-- CODE:
from numpy import *
a = int(input("valor: "))
b = "*"
c= "o"
for i in range(a):
	d = b*(i)
	e = c*(a-(a-i))
	print(d,e)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 17:46:19) 
-- CODE:
from numpy import *
a = int(input("valor: "))
b = "*"
c= "o"
for i in range(a):
	d = b*(i)
	e = c*(a-(a-i)-1)
	print(d,e)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 17:46:58) 
-- CODE:
from numpy import *
a = int(input("valor: "))
b = "*"
c= "o"
for i in range(a):
	d = b*(b-(b-i))
	e = c*(a-(a-i)-1)
	print(d,e)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 17:47:29) 
-- CODE:
from numpy import *
a = int(input("valor: "))
b = "*"
c= "o"
for i in range(a):
	d = b*(a-(a-i))
	e = c*(a-(a-i)-1)
	print(d,e)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 17:47:59) 
-- CODE:
from numpy import *
a = int(input("valor: "))
b = "*"
c= "o"
for i in range(a):
	d = b*(a-i)
	e = c*(a-(a-i)-1)
	print(d,e)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 17:48:19) 
-- CODE:
from numpy import *
a = int(input("valor: "))
b = "*"
c= "o"
for i in range(a):
	d = b*(a-i)
	e = c*(a-(a-i))
	print(d,e)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 17:51:35) 
-- CODE:
from numpy import *
a = int(input("valor: "))
b = "*"
c= "o"
for i in range(a):
	d = b*(a-i)
	e = c*(a-(a-i))
	print(d,e,e,d)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-09 17:51:49) 
-- CODE:
from numpy import *
a = int(input("valor: "))
b = "*"
c= "o"
for i in range(a):
	d = b*(a-i)
	e = c*(a-(a-i))
	print(d,e,e,d)
	
-- EXECUTION TIME:
0.923154
-- TEST CASE 1:
---- input:
11
---- correct output:
**********************
**********oo**********
*********oooo*********
********oooooo********
*******oooooooo*******
******oooooooooo******
*****oooooooooooo*****
****oooooooooooooo****
***oooooooooooooooo***
**oooooooooooooooooo**
*oooooooooooooooooooo*
---- user output:
***********   ***********
********** o o **********
********* oo oo *********
******** ooo ooo ********
******* oooo oooo *******
****** ooooo ooooo ******
***** oooooo oooooo *****
**** ooooooo ooooooo ****
*** oooooooo oooooooo ***
** ooooooooo ooooooooo **
* oooooooooo oooooooooo *
-- TEST CASE 2:
---- input:
19
---- correct output:
**************************************
******************oo******************
*****************oooo*****************
****************oooooo****************
***************oooooooo***************
**************oooooooooo**************
*************oooooooooooo*************
************oooooooooooooo************
***********oooooooooooooooo***********
**********oooooooooooooooooo**********
*********oooooooooooooooooooo*********
********oooooooooooooooooooooo********
*******oooooooooooooooooooooooo*******
******oooooooooooooooooooooooooo******
*****oooooooooooooooooooooooooooo*****
****oooooooooooooooooooooooooooooo****
***oooooooooooooooooooooooooooooooo***
**oooooooooooooooooooooooooooooooooo**
*oooooooooooooooooooooooooooooooooooo*
---- user output:
*******************   *******************
****************** o o ******************
***************** oo oo *****************
**************** ooo ooo ****************
*************** oooo oooo ***************
************** ooooo ooooo **************
************* oooooo oooooo *************
************ ooooooo ooooooo ************
*********** oooooooo oooooooo ***********
********** ooooooooo ooooooooo **********
********* oooooooooo oooooooooo *********
******** ooooooooooo ooooooooooo ********
******* oooooooooooo oooooooooooo *******
****** ooooooooooooo ooooooooooooo ******
***** oooooooooooooo oooooooooooooo *****
**** ooooooooooooooo ooooooooooooooo ****
*** oooooooooooooooo oooooooooooooooo ***
** ooooooooooooooooo ooooooooooooooooo **
* oooooooooooooooooo oooooooooooooooooo *
-- TEST CASE 3:
---- input:
26
---- correct output:
****************************************************
*************************oo*************************
************************oooo************************
***********************oooooo***********************
**********************oooooooo**********************
*********************oooooooooo*********************
********************oooooooooooo********************
*******************oooooooooooooo*******************
******************oooooooooooooooo******************
*****************oooooooooooooooooo*****************
****************oooooooooooooooooooo****************
***************oooooooooooooooooooooo***************
**************oooooooooooooooooooooooo**************
*************oooooooooooooooooooooooooo*************
************oooooooooooooooooooooooooooo************
***********oooooooooooooooooooooooooooooo***********
**********oooooooooooooooooooooooooooooooo**********
*********oooooooooooooooooooooooooooooooooo*********
********oooooooooooooooooooooooooooooooooooo********
*******oooooooooooooooooooooooooooooooooooooo*******
******oooooooooooooooooooooooooooooooooooooooo******
*****oooooooooooooooooooooooooooooooooooooooooo*****
****oooooooooooooooooooooooooooooooooooooooooooo****
***oooooooooooooooooooooooooooooooooooooooooooooo***
**oooooooooooooooooooooooooooooooooooooooooooooooo**
*oooooooooooooooooooooooooooooooooooooooooooooooooo*
---- user output:
**************************   **************************
************************* o o *************************
************************ oo oo ************************
*********************** ooo ooo ***********************
********************** oooo oooo **********************
********************* ooooo ooooo *********************
******************** oooooo oooooo ********************
******************* ooooooo ooooooo *******************
****************** oooooooo oooooooo ******************
***************** ooooooooo ooooooooo *****************
**************** oooooooooo oooooooooo ****************
*************** ooooooooooo ooooooooooo ***************
************** oooooooooooo oooooooooooo **************
************* ooooooooooooo ooooooooooooo *************
************ oooooooooooooo oooooooooooooo ************
*********** ooooooooooooooo ooooooooooooooo ***********
********** oooooooooooooooo oooooooooooooooo **********
********* ooooooooooooooooo ooooooooooooooooo **
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-09 17:51:59) 
-- CODE:
from numpy import *
a = int(input("valor: "))
b = "*"
c= "o"
for i in range(a):
	d = b*(a-i)
	e = c*(a-(a-i))
	print(d,e,e,d)
	
-- EXECUTION TIME:
1.10768
-- TEST CASE 1:
---- input:
11
---- correct output:
**********************
**********oo**********
*********oooo*********
********oooooo********
*******oooooooo*******
******oooooooooo******
*****oooooooooooo*****
****oooooooooooooo****
***oooooooooooooooo***
**oooooooooooooooooo**
*oooooooooooooooooooo*
---- user output:
***********   ***********
********** o o **********
********* oo oo *********
******** ooo ooo ********
******* oooo oooo *******
****** ooooo ooooo ******
***** oooooo oooooo *****
**** ooooooo ooooooo ****
*** oooooooo oooooooo ***
** ooooooooo ooooooooo **
* oooooooooo oooooooooo *
-- TEST CASE 2:
---- input:
19
---- correct output:
**************************************
******************oo******************
*****************oooo*****************
****************oooooo****************
***************oooooooo***************
**************oooooooooo**************
*************oooooooooooo*************
************oooooooooooooo************
***********oooooooooooooooo***********
**********oooooooooooooooooo**********
*********oooooooooooooooooooo*********
********oooooooooooooooooooooo********
*******oooooooooooooooooooooooo*******
******oooooooooooooooooooooooooo******
*****oooooooooooooooooooooooooooo*****
****oooooooooooooooooooooooooooooo****
***oooooooooooooooooooooooooooooooo***
**oooooooooooooooooooooooooooooooooo**
*oooooooooooooooooooooooooooooooooooo*
---- user output:
*******************   *******************
****************** o o ******************
***************** oo oo *****************
**************** ooo ooo ****************
*************** oooo oooo ***************
************** ooooo ooooo **************
************* oooooo oooooo *************
************ ooooooo ooooooo ************
*********** oooooooo oooooooo ***********
********** ooooooooo ooooooooo **********
********* oooooooooo oooooooooo *********
******** ooooooooooo ooooooooooo ********
******* oooooooooooo oooooooooooo *******
****** ooooooooooooo ooooooooooooo ******
***** oooooooooooooo oooooooooooooo *****
**** ooooooooooooooo ooooooooooooooo ****
*** oooooooooooooooo oooooooooooooooo ***
** ooooooooooooooooo ooooooooooooooooo **
* oooooooooooooooooo oooooooooooooooooo *
-- TEST CASE 3:
---- input:
26
---- correct output:
****************************************************
*************************oo*************************
************************oooo************************
***********************oooooo***********************
**********************oooooooo**********************
*********************oooooooooo*********************
********************oooooooooooo********************
*******************oooooooooooooo*******************
******************oooooooooooooooo******************
*****************oooooooooooooooooo*****************
****************oooooooooooooooooooo****************
***************oooooooooooooooooooooo***************
**************oooooooooooooooooooooooo**************
*************oooooooooooooooooooooooooo*************
************oooooooooooooooooooooooooooo************
***********oooooooooooooooooooooooooooooo***********
**********oooooooooooooooooooooooooooooooo**********
*********oooooooooooooooooooooooooooooooooo*********
********oooooooooooooooooooooooooooooooooooo********
*******oooooooooooooooooooooooooooooooooooooo*******
******oooooooooooooooooooooooooooooooooooooooo******
*****oooooooooooooooooooooooooooooooooooooooooo*****
****oooooooooooooooooooooooooooooooooooooooooooo****
***oooooooooooooooooooooooooooooooooooooooooooooo***
**oooooooooooooooooooooooooooooooooooooooooooooooo**
*oooooooooooooooooooooooooooooooooooooooooooooooooo*
---- user output:
**************************   **************************
************************* o o *************************
************************ oo oo ************************
*********************** ooo ooo ***********************
********************** oooo oooo **********************
********************* ooooo ooooo *********************
******************** oooooo oooooo ********************
******************* ooooooo ooooooo *******************
****************** oooooooo oooooooo ******************
***************** ooooooooo ooooooooo *****************
**************** oooooooooo oooooooooo ****************
*************** ooooooooooo ooooooooooo ***************
************** oooooooooooo oooooooooooo **************
************* ooooooooooooo ooooooooooooo *************
************ oooooooooooooo oooooooooooooo ************
*********** ooooooooooooooo ooooooooooooooo ***********
********** oooooooooooooooo oooooooooooooooo **********
********* ooooooooooooooooo ooooooooooooooooo **
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-09 17:52:06) 
-- CODE:
from numpy import *
a = int(input("valor: "))
b = "*"
c= "o"
for i in range(a):
	d = b*(a-i)
	e = c*(a-(a-i))
	print(d,e,e,d)
	
-- EXECUTION TIME:
1.26997
-- TEST CASE 1:
---- input:
11
---- correct output:
**********************
**********oo**********
*********oooo*********
********oooooo********
*******oooooooo*******
******oooooooooo******
*****oooooooooooo*****
****oooooooooooooo****
***oooooooooooooooo***
**oooooooooooooooooo**
*oooooooooooooooooooo*
---- user output:
***********   ***********
********** o o **********
********* oo oo *********
******** ooo ooo ********
******* oooo oooo *******
****** ooooo ooooo ******
***** oooooo oooooo *****
**** ooooooo ooooooo ****
*** oooooooo oooooooo ***
** ooooooooo ooooooooo **
* oooooooooo oooooooooo *
-- TEST CASE 2:
---- input:
19
---- correct output:
**************************************
******************oo******************
*****************oooo*****************
****************oooooo****************
***************oooooooo***************
**************oooooooooo**************
*************oooooooooooo*************
************oooooooooooooo************
***********oooooooooooooooo***********
**********oooooooooooooooooo**********
*********oooooooooooooooooooo*********
********oooooooooooooooooooooo********
*******oooooooooooooooooooooooo*******
******oooooooooooooooooooooooooo******
*****oooooooooooooooooooooooooooo*****
****oooooooooooooooooooooooooooooo****
***oooooooooooooooooooooooooooooooo***
**oooooooooooooooooooooooooooooooooo**
*oooooooooooooooooooooooooooooooooooo*
---- user output:
*******************   *******************
****************** o o ******************
***************** oo oo *****************
**************** ooo ooo ****************
*************** oooo oooo ***************
************** ooooo ooooo **************
************* oooooo oooooo *************
************ ooooooo ooooooo ************
*********** oooooooo oooooooo ***********
********** ooooooooo ooooooooo **********
********* oooooooooo oooooooooo *********
******** ooooooooooo ooooooooooo ********
******* oooooooooooo oooooooooooo *******
****** ooooooooooooo ooooooooooooo ******
***** oooooooooooooo oooooooooooooo *****
**** ooooooooooooooo ooooooooooooooo ****
*** oooooooooooooooo oooooooooooooooo ***
** ooooooooooooooooo ooooooooooooooooo **
* oooooooooooooooooo oooooooooooooooooo *
-- TEST CASE 3:
---- input:
26
---- correct output:
****************************************************
*************************oo*************************
************************oooo************************
***********************oooooo***********************
**********************oooooooo**********************
*********************oooooooooo*********************
********************oooooooooooo********************
*******************oooooooooooooo*******************
******************oooooooooooooooo******************
*****************oooooooooooooooooo*****************
****************oooooooooooooooooooo****************
***************oooooooooooooooooooooo***************
**************oooooooooooooooooooooooo**************
*************oooooooooooooooooooooooooo*************
************oooooooooooooooooooooooooooo************
***********oooooooooooooooooooooooooooooo***********
**********oooooooooooooooooooooooooooooooo**********
*********oooooooooooooooooooooooooooooooooo*********
********oooooooooooooooooooooooooooooooooooo********
*******oooooooooooooooooooooooooooooooooooooo*******
******oooooooooooooooooooooooooooooooooooooooo******
*****oooooooooooooooooooooooooooooooooooooooooo*****
****oooooooooooooooooooooooooooooooooooooooooooo****
***oooooooooooooooooooooooooooooooooooooooooooooo***
**oooooooooooooooooooooooooooooooooooooooooooooooo**
*oooooooooooooooooooooooooooooooooooooooooooooooooo*
---- user output:
**************************   **************************
************************* o o *************************
************************ oo oo ************************
*********************** ooo ooo ***********************
********************** oooo oooo **********************
********************* ooooo ooooo *********************
******************** oooooo oooooo ********************
******************* ooooooo ooooooo *******************
****************** oooooooo oooooooo ******************
***************** ooooooooo ooooooooo *****************
**************** oooooooooo oooooooooo ****************
*************** ooooooooooo ooooooooooo ***************
************** oooooooooooo oooooooooooo **************
************* ooooooooooooo ooooooooooooo *************
************ oooooooooooooo oooooooooooooo ************
*********** ooooooooooooooo ooooooooooooooo ***********
********** oooooooooooooooo oooooooooooooooo **********
********* ooooooooooooooooo ooooooooooooooooo **
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-09 17:52:18) 
-- CODE:
from numpy import *
a = int(input("valor: "))
b = "*"
c= "o"
for i in range(a):
	d = b*(a-i)
	e = c*(a-(a-i))
	print(d,e,e,d)
	
-- EXECUTION TIME:
1.1577
-- TEST CASE 1:
---- input:
11
---- correct output:
**********************
**********oo**********
*********oooo*********
********oooooo********
*******oooooooo*******
******oooooooooo******
*****oooooooooooo*****
****oooooooooooooo****
***oooooooooooooooo***
**oooooooooooooooooo**
*oooooooooooooooooooo*
---- user output:
***********   ***********
********** o o **********
********* oo oo *********
******** ooo ooo ********
******* oooo oooo *******
****** ooooo ooooo ******
***** oooooo oooooo *****
**** ooooooo ooooooo ****
*** oooooooo oooooooo ***
** ooooooooo ooooooooo **
* oooooooooo oooooooooo *
-- TEST CASE 2:
---- input:
19
---- correct output:
**************************************
******************oo******************
*****************oooo*****************
****************oooooo****************
***************oooooooo***************
**************oooooooooo**************
*************oooooooooooo*************
************oooooooooooooo************
***********oooooooooooooooo***********
**********oooooooooooooooooo**********
*********oooooooooooooooooooo*********
********oooooooooooooooooooooo********
*******oooooooooooooooooooooooo*******
******oooooooooooooooooooooooooo******
*****oooooooooooooooooooooooooooo*****
****oooooooooooooooooooooooooooooo****
***oooooooooooooooooooooooooooooooo***
**oooooooooooooooooooooooooooooooooo**
*oooooooooooooooooooooooooooooooooooo*
---- user output:
*******************   *******************
****************** o o ******************
***************** oo oo *****************
**************** ooo ooo ****************
*************** oooo oooo ***************
************** ooooo ooooo **************
************* oooooo oooooo *************
************ ooooooo ooooooo ************
*********** oooooooo oooooooo ***********
********** ooooooooo ooooooooo **********
********* oooooooooo oooooooooo *********
******** ooooooooooo ooooooooooo ********
******* oooooooooooo oooooooooooo *******
****** ooooooooooooo ooooooooooooo ******
***** oooooooooooooo oooooooooooooo *****
**** ooooooooooooooo ooooooooooooooo ****
*** oooooooooooooooo oooooooooooooooo ***
** ooooooooooooooooo ooooooooooooooooo **
* oooooooooooooooooo oooooooooooooooooo *
-- TEST CASE 3:
---- input:
26
---- correct output:
****************************************************
*************************oo*************************
************************oooo************************
***********************oooooo***********************
**********************oooooooo**********************
*********************oooooooooo*********************
********************oooooooooooo********************
*******************oooooooooooooo*******************
******************oooooooooooooooo******************
*****************oooooooooooooooooo*****************
****************oooooooooooooooooooo****************
***************oooooooooooooooooooooo***************
**************oooooooooooooooooooooooo**************
*************oooooooooooooooooooooooooo*************
************oooooooooooooooooooooooooooo************
***********oooooooooooooooooooooooooooooo***********
**********oooooooooooooooooooooooooooooooo**********
*********oooooooooooooooooooooooooooooooooo*********
********oooooooooooooooooooooooooooooooooooo********
*******oooooooooooooooooooooooooooooooooooooo*******
******oooooooooooooooooooooooooooooooooooooooo******
*****oooooooooooooooooooooooooooooooooooooooooo*****
****oooooooooooooooooooooooooooooooooooooooooooo****
***oooooooooooooooooooooooooooooooooooooooooooooo***
**oooooooooooooooooooooooooooooooooooooooooooooooo**
*oooooooooooooooooooooooooooooooooooooooooooooooooo*
---- user output:
**************************   **************************
************************* o o *************************
************************ oo oo ************************
*********************** ooo ooo ***********************
********************** oooo oooo **********************
********************* ooooo ooooo *********************
******************** oooooo oooooo ********************
******************* ooooooo ooooooo *******************
****************** oooooooo oooooooo ******************
***************** ooooooooo ooooooooo *****************
**************** oooooooooo oooooooooo ****************
*************** ooooooooooo ooooooooooo ***************
************** oooooooooooo oooooooooooo **************
************* ooooooooooooo ooooooooooooo *************
************ oooooooooooooo oooooooooooooo ************
*********** ooooooooooooooo ooooooooooooooo ***********
********** oooooooooooooooo oooooooooooooooo **********
********* ooooooooooooooooo ooooooooooooooooo **
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-09 17:52:34) 
-- CODE:
from numpy import *
a = int(input("valor: "))
b = "*"
c= "o"
for i in range(a):
	d = b*(a-i)
	e = c*(a-(a-i))
	print(d,e,e,d)
	
-- EXECUTION TIME:
1.1951
-- TEST CASE 1:
---- input:
11
---- correct output:
**********************
**********oo**********
*********oooo*********
********oooooo********
*******oooooooo*******
******oooooooooo******
*****oooooooooooo*****
****oooooooooooooo****
***oooooooooooooooo***
**oooooooooooooooooo**
*oooooooooooooooooooo*
---- user output:
***********   ***********
********** o o **********
********* oo oo *********
******** ooo ooo ********
******* oooo oooo *******
****** ooooo ooooo ******
***** oooooo oooooo *****
**** ooooooo ooooooo ****
*** oooooooo oooooooo ***
** ooooooooo ooooooooo **
* oooooooooo oooooooooo *
-- TEST CASE 2:
---- input:
19
---- correct output:
**************************************
******************oo******************
*****************oooo*****************
****************oooooo****************
***************oooooooo***************
**************oooooooooo**************
*************oooooooooooo*************
************oooooooooooooo************
***********oooooooooooooooo***********
**********oooooooooooooooooo**********
*********oooooooooooooooooooo*********
********oooooooooooooooooooooo********
*******oooooooooooooooooooooooo*******
******oooooooooooooooooooooooooo******
*****oooooooooooooooooooooooooooo*****
****oooooooooooooooooooooooooooooo****
***oooooooooooooooooooooooooooooooo***
**oooooooooooooooooooooooooooooooooo**
*oooooooooooooooooooooooooooooooooooo*
---- user output:
*******************   *******************
****************** o o ******************
***************** oo oo *****************
**************** ooo ooo ****************
*************** oooo oooo ***************
************** ooooo ooooo **************
************* oooooo oooooo *************
************ ooooooo ooooooo ************
*********** oooooooo oooooooo ***********
********** ooooooooo ooooooooo **********
********* oooooooooo oooooooooo *********
******** ooooooooooo ooooooooooo ********
******* oooooooooooo oooooooooooo *******
****** ooooooooooooo ooooooooooooo ******
***** oooooooooooooo oooooooooooooo *****
**** ooooooooooooooo ooooooooooooooo ****
*** oooooooooooooooo oooooooooooooooo ***
** ooooooooooooooooo ooooooooooooooooo **
* oooooooooooooooooo oooooooooooooooooo *
-- TEST CASE 3:
---- input:
26
---- correct output:
****************************************************
*************************oo*************************
************************oooo************************
***********************oooooo***********************
**********************oooooooo**********************
*********************oooooooooo*********************
********************oooooooooooo********************
*******************oooooooooooooo*******************
******************oooooooooooooooo******************
*****************oooooooooooooooooo*****************
****************oooooooooooooooooooo****************
***************oooooooooooooooooooooo***************
**************oooooooooooooooooooooooo**************
*************oooooooooooooooooooooooooo*************
************oooooooooooooooooooooooooooo************
***********oooooooooooooooooooooooooooooo***********
**********oooooooooooooooooooooooooooooooo**********
*********oooooooooooooooooooooooooooooooooo*********
********oooooooooooooooooooooooooooooooooooo********
*******oooooooooooooooooooooooooooooooooooooo*******
******oooooooooooooooooooooooooooooooooooooooo******
*****oooooooooooooooooooooooooooooooooooooooooo*****
****oooooooooooooooooooooooooooooooooooooooooooo****
***oooooooooooooooooooooooooooooooooooooooooooooo***
**oooooooooooooooooooooooooooooooooooooooooooooooo**
*oooooooooooooooooooooooooooooooooooooooooooooooooo*
---- user output:
**************************   **************************
************************* o o *************************
************************ oo oo ************************
*********************** ooo ooo ***********************
********************** oooo oooo **********************
********************* ooooo ooooo *********************
******************** oooooo oooooo ********************
******************* ooooooo ooooooo *******************
****************** oooooooo oooooooo ******************
***************** ooooooooo ooooooooo *****************
**************** oooooooooo oooooooooo ****************
*************** ooooooooooo ooooooooooo ***************
************** oooooooooooo oooooooooooo **************
************* ooooooooooooo ooooooooooooo *************
************ oooooooooooooo oooooooooooooo ************
*********** ooooooooooooooo ooooooooooooooo ***********
********** oooooooooooooooo oooooooooooooooo **********
********* ooooooooooooooooo ooooooooooooooooo **
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 17:52:39) 
-- CODE:
from numpy import *
a = int(input("valor: "))
b = "*"
c= "o"
for i in range(a):
	d = b*(a-i)
	e = c*(a-(a-i))
	print(d,e,e,d)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 17:54:42) 
-- CODE:
from numpy import *
a = int(input("valor: "))
b = "*"
c= "o"
for i in range(a):
	d = (b*(a-i))*(c*(a-(a-i)))
	print(d)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 17:55:04) 
-- CODE:
from numpy import *
a = int(input("valor: "))
b = "*"
c= "o"
for i in range(a):
	d = (b*(a-i))+(c*(a-(a-i)))
	print(d)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 17:56:21) 
-- CODE:
from numpy import *
a = int(input("valor: "))
b = "*"
c= "o"
for i in range(a):
	d = (b*(a-i))+(c*(a-(a-i)))+(c*(a-(a-i)))+(b*(a-i))
	print(d)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-09 17:56:35) 
-- CODE:
from numpy import *
a = int(input("valor: "))
b = "*"
c= "o"
for i in range(a):
	d = (b*(a-i))+(c*(a-(a-i)))+(c*(a-(a-i)))+(b*(a-i))
	print(d)
	
-- EXECUTION TIME:
1.30494
-- TEST CASE 1:
---- input:
11
---- correct output:
**********************
**********oo**********
*********oooo*********
********oooooo********
*******oooooooo*******
******oooooooooo******
*****oooooooooooo*****
****oooooooooooooo****
***oooooooooooooooo***
**oooooooooooooooooo**
*oooooooooooooooooooo*
---- user output:
**********************
**********oo**********
*********oooo*********
********oooooo********
*******oooooooo*******
******oooooooooo******
*****oooooooooooo*****
****oooooooooooooo****
***oooooooooooooooo***
**oooooooooooooooooo**
*oooooooooooooooooooo*
-- TEST CASE 2:
---- input:
19
---- correct output:
**************************************
******************oo******************
*****************oooo*****************
****************oooooo****************
***************oooooooo***************
**************oooooooooo**************
*************oooooooooooo*************
************oooooooooooooo************
***********oooooooooooooooo***********
**********oooooooooooooooooo**********
*********oooooooooooooooooooo*********
********oooooooooooooooooooooo********
*******oooooooooooooooooooooooo*******
******oooooooooooooooooooooooooo******
*****oooooooooooooooooooooooooooo*****
****oooooooooooooooooooooooooooooo****
***oooooooooooooooooooooooooooooooo***
**oooooooooooooooooooooooooooooooooo**
*oooooooooooooooooooooooooooooooooooo*
---- user output:
**************************************
******************oo******************
*****************oooo*****************
****************oooooo****************
***************oooooooo***************
**************oooooooooo**************
*************oooooooooooo*************
************oooooooooooooo************
***********oooooooooooooooo***********
**********oooooooooooooooooo**********
*********oooooooooooooooooooo*********
********oooooooooooooooooooooo********
*******oooooooooooooooooooooooo*******
******oooooooooooooooooooooooooo******
*****oooooooooooooooooooooooooooo*****
****oooooooooooooooooooooooooooooo****
***oooooooooooooooooooooooooooooooo***
**oooooooooooooooooooooooooooooooooo**
*oooooooooooooooooooooooooooooooooooo*
-- TEST CASE 3:
---- input:
26
---- correct output:
****************************************************
*************************oo*************************
************************oooo************************
***********************oooooo***********************
**********************oooooooo**********************
*********************oooooooooo*********************
********************oooooooooooo********************
*******************oooooooooooooo*******************
******************oooooooooooooooo******************
*****************oooooooooooooooooo*****************
****************oooooooooooooooooooo****************
***************oooooooooooooooooooooo***************
**************oooooooooooooooooooooooo**************
*************oooooooooooooooooooooooooo*************
************oooooooooooooooooooooooooooo************
***********oooooooooooooooooooooooooooooo***********
**********oooooooooooooooooooooooooooooooo**********
*********oooooooooooooooooooooooooooooooooo*********
********oooooooooooooooooooooooooooooooooooo********
*******oooooooooooooooooooooooooooooooooooooo*******
******oooooooooooooooooooooooooooooooooooooooo******
*****oooooooooooooooooooooooooooooooooooooooooo*****
****oooooooooooooooooooooooooooooooooooooooooooo****
***oooooooooooooooooooooooooooooooooooooooooooooo***
**oooooooooooooooooooooooooooooooooooooooooooooooo**
*oooooooooooooooooooooooooooooooooooooooooooooooooo*
---- user output:
****************************************************
*************************oo*************************
************************oooo************************
***********************oooooo***********************
**********************oooooooo**********************
*********************oooooooooo*********************
********************oooooooooooo********************
*******************oooooooooooooo*******************
******************oooooooooooooooo******************
*****************oooooooooooooooooo*****************
****************oooooooooooooooooooo****************
***************oooooooooooooooooooooo***************
**************oooooooooooooooooooooooo**************
*************oooooooooooooooooooooooooo*************
************oooooooooooooooooooooooooooo************
***********oooooooooooooooooooooooooooooo***********
**********oooooooooooooooooooooooooooooooo**********
*********oooooooooooooooooooooooooooooooooo*********
********oooooooooooooooooooooooooooooooooooo**
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
