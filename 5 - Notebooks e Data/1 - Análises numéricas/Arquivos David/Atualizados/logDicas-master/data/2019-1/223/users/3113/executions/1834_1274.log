== TEST (2019-06-21 12:59:28) 
-- CODE:
n=int(input())

vet=zeros(n,n,dtype=int)

print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    vet=zeros(n,n,dtype=int)
NameError: name 'zeros' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-21 12:59:53) 
-- CODE:
from numpy import*
from numpy.linealg import*
n=int(input())

vet=zeros(n,n,dtype=int)

print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-21 13:00:07) 
-- CODE:
from numpy import*
from numpy.linalg import*
n=int(input())

vet=zeros(n,n,dtype=int)

print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-21 13:00:15) 
-- CODE:
from numpy import*
from numpy.linalg import*
n=int(input())

vet=zeros(n,n)

print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-21 13:00:48) 
-- CODE:
from numpy import*
from numpy.linalg import*
n=int(input())

vet=zeros((n,n),dtype=int)

print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-21 13:02:47) 
-- CODE:
from numpy import*
from numpy.linalg import*
n=int(input())

vet=zeros((n,n),dtype=int)

for i in range(N):
	for j in range(N):
		mat[i,j] = i

print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-21 13:02:52) 
-- CODE:
from numpy import*
from numpy.linalg import*
n=int(input())

vet=zeros((n,n),dtype=int)

for i in range(N):
	for j in range(N):
		mat[i,j] = i

print(mat)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-21 13:03:02) 
-- CODE:
from numpy import*
from numpy.linalg import*
n=int(input())

vet=zeros((n,n),dtype=int)

for i in range(n):
	for j in range(n):
		mat[i,j] = i

print(mat)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-21 13:03:12) 
-- CODE:
from numpy import*
from numpy.linalg import*
n=int(input())

vet=zeros((n,n),dtype=int)

for i in range(n):
	for j in range(n):
		mat[i,j] = 1

print(mat)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-21 13:07:38) 
-- CODE:
from numpy import*
from numpy.linalg import*
n=int(input())

vet=zeros((n,n),dtype=int)

for i in range(n):
	for j in range(n):
		mat[i,j] = 1

print(mat)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-21 13:07:49) 
-- CODE:
from numpy import*
from numpy.linalg import*
n=int(input())

vet=zeros((n,n),dtype=int)

for i in range(n):
	for j in range(n):
		mat[i,j] = 1

print(mat)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-21 13:08:02) 
-- CODE:
from numpy import*
from numpy.linalg import*
n=int(input())

vet=zeros((n,n),dtype=int)

for i in range(n):
	for j in range(n):
		mat[i,j] = j

print(mat)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-21 13:08:13) 
-- CODE:
from numpy import*
from numpy.linalg import*
n=int(input())

vet=zeros((n,n),dtype=int)
k=0

for i in range(n):
	for j in range(n):
		mat[i,j] = k

print(mat)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 16:40:48) 
-- CODE:
from numpy import*
from numpy.linalg import*
n=int(input(""))

vet=zeros((n,n),dtype=int)


for i in range(n):
	for j in range(n):
		if(i>j):
			vet[i,j]=1
		elif(i<j):
			vet[i,j]=1
		else
			vet[i,j]=1
for i in range(n):
	for j in range(n):
		if(i>j+1):
			vet[i,j]=1
		elif(i<j+1):
			vet[i,j]=1
		elif(i==j+1):
			vet[i,j]=1	
	
print(vet)
-- ERROR:
File "XXXX", line 14
    else
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 16:40:55) 
-- CODE:
from numpy import*
from numpy.linalg import*
n=int(input(""))

vet=zeros((n,n),dtype=int)


for i in range(n):
	for j in range(n):
		if(i>j):
			vet[i,j]=1
		elif(i<j):
			vet[i,j]=1
		else:
			vet[i,j]=1
for i in range(n):
	for j in range(n):
		if(i>j+1):
			vet[i,j]=1
		elif(i<j+1):
			vet[i,j]=1
		elif(i==j+1):
			vet[i,j]=1	
	
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 16:41:13) 
-- CODE:
from numpy import*
from numpy.linalg import*
n=int(input(""))

vet=zeros((n,n),dtype=int)


for i in range(n):
	for j in range(n):
		if(i>j):
			vet[i,j]=1
		elif(i<j):
			vet[i,j]=1
		else:
			vet[i,j]=1
for i in range(n):
	for j in range(n):
		if(i>j+1):
			vet[i,j]=2
		elif(i<j+1):
			vet[i,j]=2
		elif(i==j+1):
			vet[i,j]=2	
	
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-25 16:42:14) 
-- CODE:
from numpy import*
from numpy.linalg import*
n=int(input(""))

vet=zeros((n,n),dtype=int)


for i in range(n):
	for j in range(n):
		if(i>j):
			vet[i,j]=1
		elif(i<j):
			vet[i,j]=1
		else:
			vet[i,j]=1
for i in range(n):
	for j in range(n):
		if(i>j+1):
			vet[i,j]=2
		elif(i<j+1):
			vet[i,j]=2
		elif(i==j+1):
			vet[i,j]=2	
	
print(vet)
-- EXECUTION TIME:
1.08265
-- TEST CASE 1:
---- input:
3
---- correct output:
[[1 1 1]
 [1 2 2]
 [1 2 3]]
---- user output:
[[2 2 2]
 [2 2 2]
 [2 2 2]]
-- TEST CASE 2:
---- input:
8
---- correct output:
[[1 1 1 1 1 1 1 1]
 [1 2 2 2 2 2 2 2]
 [1 2 3 3 3 3 3 3]
 [1 2 3 4 4 4 4 4]
 [1 2 3 4 5 5 5 5]
 [1 2 3 4 5 6 6 6]
 [1 2 3 4 5 6 7 7]
 [1 2 3 4 5 6 7 8]]
---- user output:
[[2 2 2 2 2 2 2 2]
 [2 2 2 2 2 2 2 2]
 [2 2 2 2 2 2 2 2]
 [2 2 2 2 2 2 2 2]
 [2 2 2 2 2 2 2 2]
 [2 2 2 2 2 2 2 2]
 [2 2 2 2 2 2 2 2]
 [2 2 2 2 2 2 2 2]]
-- TEST CASE 3:
---- input:
1
---- correct output:
[[1]]
---- user output:
[[2]]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 16:45:11) 
-- CODE:
from numpy import*
from numpy.linalg import*
n=int(input(""))

vet=zeros((n,n),dtype=int)


for j in range(n):
	for i in range(n):
		if(i>j):
			vet[i,j]=1

print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 16:45:44) 
-- CODE:
from numpy import*
from numpy.linalg import*
n=int(input(""))

vet=zeros((n,n),dtype=int)


for j in range(n):
	for i in range(n):
		if(i>j):
			vet[i,j]=i

print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 16:46:23) 
-- CODE:
from numpy import*
from numpy.linalg import*
n=int(input(""))

vet=zeros((n,n),dtype=int)


for j in range(n):
	for i in range(n):
		if(i>j):
			vet[i]=i

print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 16:46:47) 
-- CODE:
from numpy import*
from numpy.linalg import*
n=int(input(""))

vet=zeros((n,n),dtype=int)


for j in range(n):
	for i in range(n):
		if(i>j):
			vet[,ji]=i

print(vet)
-- ERROR:
File "XXXX", line 11
    vet[,ji]=i
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 16:46:50) 
-- CODE:
from numpy import*
from numpy.linalg import*
n=int(input(""))

vet=zeros((n,n),dtype=int)


for j in range(n):
	for i in range(n):
		if(i>j):
			vet[j,i]=i

print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 16:46:52) 
-- CODE:
from numpy import*
from numpy.linalg import*
n=int(input(""))

vet=zeros((n,n),dtype=int)


for j in range(n):
	for i in range(n):
		if(i>j):
			vet[j,i]=i

print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 16:47:11) 
-- CODE:
from numpy import*
from numpy.linalg import*
n=int(input(""))

vet=zeros((n,n),dtype=int)


for i in range(n):
	for j in range(n):
		if(i>j):
			vet[i,j]=i

print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 16:47:38) 
-- CODE:
from numpy import*
from numpy.linalg import*
n=int(input(""))

vet=zeros((n,n),dtype=int)


for j in range(n):
	for i in range(n):
		if(i>j):
			vet[i,j]=i

print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 16:47:50) 
-- CODE:
from numpy import*
from numpy.linalg import*
n=int(input(""))

vet=zeros((n,n),dtype=int)


for j in range(n):
	for i in range(n):
		vet[i,j]=i

print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 16:48:13) 
-- CODE:
from numpy import*
from numpy.linalg import*
n=int(input(""))

vet=zeros((n,n),dtype=int)


for i in range(n):
	for j in range(n):
		vet[j,i]=i

print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 16:55:11) 
-- CODE:
from numpy import*
from numpy.linalg import*
n=int(input(""))

vet=zeros((n,n),dtype=int)


for i in range(n):
	for j in range(n):
		if(i>j):
		vet[j,i]=i

print(vet)
-- ERROR:
File "XXXX", line 11
    vet[j,i]=i
      ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 16:55:15) 
-- CODE:
from numpy import*
from numpy.linalg import*
n=int(input(""))

vet=zeros((n,n),dtype=int)


for i in range(n):
	for j in range(n):
		if(i>j):
			vet[j,i]=i

print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 16:55:35) 
-- CODE:
from numpy import*
from numpy.linalg import*
n=int(input(""))

vet=zeros((n,n),dtype=int)


for i in range(n):
	for j in range(n):
		if(i=j):
			vet[j,i]=i

print(vet)
-- ERROR:
File "XXXX", line 10
    if(i=j):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 16:55:39) 
-- CODE:
from numpy import*
from numpy.linalg import*
n=int(input(""))

vet=zeros((n,n),dtype=int)


for i in range(n):
	for j in range(n):
		if(i==j):
			vet[j,i]=i

print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 16:56:17) 
-- CODE:
from numpy import*
from numpy.linalg import*
n=int(input(""))

vet=zeros((n,n),dtype=int)


for j in range(n):
	for i in range(n):
		if(i>j):
			vet[j,i]=i

print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 16:59:04) 
-- CODE:
from numpy import*
from numpy.linalg import*
n=int(input(""))

vet=zeros((n,n),dtype=int)


for j in range(n):
	for i in range(n):
		if([i-1,j-1]):
			vet[j,i]=i
		else:
			vet[j,i]=0

print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 16:59:20) 
-- CODE:
from numpy import*
from numpy.linalg import*
n=int(input(""))

vet=zeros((n,n),dtype=int)


for j in range(n):
	for i in range(n):
		if([i-1,j-1]):
			vet[i,j]=i
		else:
			vet[i,j]=0

print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 17:17:33) 
-- CODE:
from numpy import*
from numpy.linalg import*
n=int(input(""))

vet=zeros((n,n),dtype=int)


for j in range(n):
	for i in range(n):
		if(i>j):
			vet[i,j]=shape(i)
		else:
			vet[i,j]=0

print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 17:18:05) 
-- CODE:
from numpy import*
from numpy.linalg import*
n=int(input(""))

vet=zeros((n,n),dtype=int)


for j in range(n):
	for i in range(n):
		if(i>j):
			shape(vet[i,j])=[1]
		else:
			vet[i,j]=0

print(vet)
-- ERROR:
File "XXXX", line 11
    shape(vet[i,j])=[1]
    ^
SyntaxError: can't assign to function call
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-30 13:33:23) 
-- CODE:
from numpy import*
from numpy.linalg import*
n=int(input(""))

vet=zeros((n,n),dtype=int)


for j in range(n):
	for i in range(n):
		if(i and j == 0):
			vet[i,:]=1
			vet[:,j]=1
		

print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-30 13:34:33) 
-- CODE:
from numpy import*
from numpy.linalg import*
n=int(input(""))

vet=zeros((n,n),dtype=int)


for j in range(n):
	for i in range(n):
		if(i and j == 0):
			vet[i,:]=1
			vet[:,j]=1
		elif(i and j == 1)
			vet[i,:]=2
			vet[:,j]=2
print(vet)
-- ERROR:
File "XXXX", line 13
    elif(i and j == 1)
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-30 13:34:39) 
-- CODE:
from numpy import*
from numpy.linalg import*
n=int(input(""))

vet=zeros((n,n),dtype=int)


for j in range(n):
	for i in range(n):
		if(i and j == 0):
			vet[i,:]=1
			vet[:,j]=1
		elif(i and j == 1):
			vet[i,:]=2
			vet[:,j]=2
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-30 13:43:08) 
-- CODE:
from numpy import*
from numpy.linalg import*
n=int(input(""))

vet=zeros((n,n),dtype=int)


for j in range(n):
	for i in range(n):
		vet[i,j]=min[i,j]+1
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-30 13:43:26) 
-- CODE:
from numpy import*
from numpy.linalg import*
n=int(input(""))

vet=zeros((n,n),dtype=int)


for j in range(n):
	for i in range(n):
		vet[i,j]=min(i,j)+1
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-30 13:43:50) 
-- CODE:
from numpy import*
from numpy.linalg import*
n=int(input(""))

vet=zeros((n,n),dtype=int)


for j in range(n):
	for i in range(n):
		vet[i,j]=min(i,j)+1
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-30 13:43:58) 
-- CODE:
from numpy import*
from numpy.linalg import*
n=int(input(""))

vet=zeros((n,n),dtype=int)


for j in range(n):
	for i in range(n):
		vet[i,j]=min(i,j)+1
print(vet)
-- EXECUTION TIME:
0.978258
-- TEST CASE 1:
---- input:
3
---- correct output:
[[1 1 1]
 [1 2 2]
 [1 2 3]]
---- user output:
[[1 1 1]
 [1 2 2]
 [1 2 3]]
-- TEST CASE 2:
---- input:
8
---- correct output:
[[1 1 1 1 1 1 1 1]
 [1 2 2 2 2 2 2 2]
 [1 2 3 3 3 3 3 3]
 [1 2 3 4 4 4 4 4]
 [1 2 3 4 5 5 5 5]
 [1 2 3 4 5 6 6 6]
 [1 2 3 4 5 6 7 7]
 [1 2 3 4 5 6 7 8]]
---- user output:
[[1 1 1 1 1 1 1 1]
 [1 2 2 2 2 2 2 2]
 [1 2 3 3 3 3 3 3]
 [1 2 3 4 4 4 4 4]
 [1 2 3 4 5 5 5 5]
 [1 2 3 4 5 6 6 6]
 [1 2 3 4 5 6 7 7]
 [1 2 3 4 5 6 7 8]]
-- TEST CASE 3:
---- input:
1
---- correct output:
[[1]]
---- user output:
[[1]]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 12:02:16) 
-- CODE:
from numpy import*
from numpy.linalg import*
n=int(input(""))

vet=zeros((n,n),dtype=int)


for j in range(n):
	for i in range(n):
		vet[i,j]=max(i,j)-1
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 12:02:31) 
-- CODE:
from numpy import*
from numpy.linalg import*
n=int(input(""))

vet=zeros((n,n),dtype=int)


for j in range(n):
	for i in range(n):
		vet[i,j]=max(i,j)+1
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 15:38:26) 
-- CODE:
from numpy import*
from numpy.linalg import*
n=int(input(""))

vet=zeros((n,n),dtype=int)


for j in range(n):
	for i in range(n):
		vet[i,j]=min(i,j)+1
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 15:38:31) 
-- CODE:
from numpy import*
from numpy.linalg import*
n=int(input(""))

vet=zeros((n,n),dtype=int)


for j in range(n):
	for i in range(n):
		vet[i,j]=min(i,j)+1
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
