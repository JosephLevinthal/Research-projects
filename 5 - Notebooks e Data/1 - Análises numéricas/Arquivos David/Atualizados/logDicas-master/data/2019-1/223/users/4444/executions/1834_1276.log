== TEST (2019-06-25 16:13:40) 
-- CODE:
from numpy import *
# Leitura da matriz 'quadro'
quadro =array(eval(input("M: ")))
print(quadro)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-28 17:51:18) 
-- CODE:
from numpy import *
# Leitura da matriz 'quadro'
quadro =array(eval(input("M: ")))
print(quadro)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-28 17:56:43) 
-- CODE:
from numpy import *
# Leitura da matriz 'quadro'
from numpy import *
from numpy.linalg import *
b=array(eval(input("digite:")))
tamanho=shape(b)[1]
result=zeros(tamanho, dtype=int)

for j in range(tamanho):
	result[j]=sum([:,j])
print(result)
	
	
-- ERROR:
File "XXXX", line 10
    result[j]=sum([:,j])
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-28 17:57:25) 
-- CODE:
from numpy import *
# Leitura da matriz 'quadro'
from numpy import *
from numpy.linalg import *
b=array(eval(input("digite:")))
tamanho=shape(b)[1]
result=zeros(tamanho, dtype=int)

for j in range(tamanho):
	result[j]=sum([:,j])
print(result)

	
-- ERROR:
File "XXXX", line 10
    result[j]=sum([:,j])
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-28 17:57:51) 
-- CODE:
from numpy import *
# Leitura da matriz 'quadro'
from numpy import *
from numpy.linalg import *
b=array(eval(input("digite:")))
tamanho=shape(b)[1]
result=zeros(tamanho, dtype=int)

for j in range(tamanho):
	result[j]=sum([:,j])
print(result)

	
-- ERROR:
File "XXXX", line 10
    result[j]=sum([:,j])
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-28 17:58:18) 
-- CODE:
from numpy import *
# Leitura da matriz 'quadro'
from numpy import *
from numpy.linalg import *
b=array(eval(input("digite:")))
tamanho=shape(b)[1]
result=zeros(tamanho, dtype=int)

for j in range(tamanho):
	result[j]=sum(b[:,j])
print(result)

	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-28 18:04:59) 
-- CODE:
from numpy import *
# Leitura da matriz 'quadro'
from numpy import *
from numpy.linalg import *
b=array(eval(input("digite:")))
tamanho=shape(b)[1]
result=zeros(tamanho, dtype=int)

for j in range(tamanho):
	result[j]=sum(b[:,j])
maior=max(result)
print(maior)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-28 18:06:35) 
-- CODE:
from numpy import *
# Leitura da matriz 'quadro'
from numpy import *
from numpy.linalg import *
b=array(eval(input("digite:")))
tamanho=shape(b)[1]
result=zeros(tamanho, dtype=int)

for j in range(tamanho):
	result[j]=sum(b[:,j])
maior=max(result)
for i in range(tamanho):
	if result[i]==maior:
		print(i+1)
		
	
print(maior)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-28 18:06:57) 
-- CODE:
from numpy import *
# Leitura da matriz 'quadro'
from numpy import *
from numpy.linalg import *
b=array(eval(input("digite:")))
tamanho=shape(b)[1]
result=zeros(tamanho, dtype=int)

for j in range(tamanho):
	result[j]=sum(b[:,j])
maior=max(result)
for i in range(tamanho):
	if result[i]==maior:
		print(i+1)
		
	
	
-- EXECUTION TIME:
1.11607
-- TEST CASE 1:
---- input:
[[4,4,4,4,4,4,4],[3,3,3,3,3,3,3],[6,6,6,6,6,6,6],[1,2,1,2,1,2,7],[9,8,9,3,4,6,8],[5,6,5,6,5,6,8],[2,1,2,3,6,5,2]]
---- correct output:
7
---- user output:
7
-- TEST CASE 2:
---- input:
[[9,8,8,5,3,2,4],[9,9,2,4,5,6,7],[7,8,6,4,3,5,6],[9,9,8,8,8,8,8],[6,6,1,2,1,2,1],[5,6,4,3,4,3,2],[5,9,3,4,5,6,8],[8,7,8,5,6,5,2],[4,9,5,6,8,7,2]]
---- correct output:
2
---- user output:
2
-- TEST CASE 3:
---- input:
[[1,1,7,9,9,9,9],[1,2,7,5,5,5,5],[2,3,7,4,4,4,4],[2,4,7,6,6,6,6],[2,6,6,3,4,3,2],[6,5,6,4,5,6,8],[8,7,7,5,6,5,2],[7,8,9,6,8,7,2]]
---- correct output:
3
---- user output:
3
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
