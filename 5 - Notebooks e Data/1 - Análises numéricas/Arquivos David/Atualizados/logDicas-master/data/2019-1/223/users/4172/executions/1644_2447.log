== TEST (2019-04-05 13:32:06) 
-- CODE:
preco=float(input("preco: "))
pagathemoney=float(input("pagamento: "))

if pagathemoney > preco:
	x=(pagathemoney - preco)
else:
	x=(preco - pagathemoney)

print(x)
-- OUTPUT:
26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 13:32:16) 
-- CODE:
preco=float(input("preco: "))
pagathemoney=float(input("pagamento: "))

if pagathemoney > preco:
	x=(pagathemoney - preco)
else:
	x=(preco - pagathemoney)

print(x)
-- OUTPUT:
26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-05 13:32:25) 
-- CODE:
preco=float(input("preco: "))
pagathemoney=float(input("pagamento: "))

if pagathemoney > preco:
	x=(pagathemoney - preco)
else:
	x=(preco - pagathemoney)

print(x)
-- EXECUTION TIME:
0.190374
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 13:34:01) 
-- CODE:
preco=float(input("preco: "))
pagathemoney=float(input("pagamento: "))

if pagathemoney > preco:
	x= "falta" + (preco - pagathemoney)
else:
	x=  "troco de " + ( pagathemoney - preco)

print(x)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    x=  "troco de " + ( pagathemoney - preco)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 13:35:04) 
-- CODE:
preco=float(input("preco: "))
pagathemoney=float(input("pagamento: "))

if pagathemoney > preco:
	x= str("falta" + (preco - pagathemoney))
else:
	x= str("troco de " + ( pagathemoney - preco))

print(x)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    x= str("troco de " + ( pagathemoney - preco))
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:13:48) 
-- CODE:
preco=float(input("preco: "))
pagathemoney=float(input("pagamento: "))

if pagathemoney > preco:
	x= "falta" + (preco - pagathemoney)
else:
	x= "troco de " + ( pagathemoney - preco)
print(x)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    x= "troco de " + ( pagathemoney - preco)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:16:13) 
-- CODE:
preco=float(input("preco: "))
pagathemoney=float(input("pagamento: "))

if  preco>pagathemoney:
	x= " falta " + (preco - pagathemoney)
else:
	x= "troco de " + ( pagathemoney - preco)
print(round(x,2)
-- ERROR:
File "XXXX", line 9
    
                    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:16:23) 
-- CODE:
preco=float(input("preco: "))
pagathemoney=float(input("pagamento: "))

if  preco>pagathemoney:
	x= " falta " + (preco - pagathemoney)
else:
	x= "troco de " + ( pagathemoney - preco)
print(round(x,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    x= " falta " + (preco - pagathemoney)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:21:00) 
-- CODE:
p=float(input("preco: "))
pa=float(input("pagamento: "))

if  preco>pagathemoney:
	x = " Falta " + (p - pa)
else:
	x = " Troco de " + ( pa - p )
print(round(x,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if  preco>pagathemoney:
NameError: name 'preco' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:21:27) 
-- CODE:
p=float(input("preco: "))
pa=float(input("pagamento: "))

if  p > pa:
	x = " Falta " + (p - pa)
else:
	x = " Troco de " + ( pa - p )
print(round(x,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    x = " Falta " + (p - pa)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:22:42) 
-- CODE:
p=float(input("preco: "))
pa=float(input("pagamento: "))

if  p > pa:
	x = str(" Falta " + (p - pa))
else:
	x =str( " Troco de " + ( pa - p ))
print(round(x,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    x = str(" Falta " + (p - pa))
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:23:51) 
-- CODE:
p=float(input("preco: "))
pa=float(input("pagamento: "))

if  p > pa:
	y=(p - pa)
	x = " Falta " + y
else:
	z=( pa - p )
	x =" Troco de " + z
print(round(x,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    x = " Falta " + y
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 23:24:08) 
-- CODE:
p=float(input("preco: "))
pa=float(input("pagamento: "))

if  p > pa:
	y=(p - pa)
	x = " Falta " + y
else:
	z=( pa - p )
	x = " Troco de " + z
print(round(x,2))
-- EXECUTION TIME:
0.158532
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/2447/main.py", line 6, in <module>
    x = " Falta " + y
TypeError: Can't convert 'float' object to str implicitly

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:24:10) 
-- CODE:
p=float(input("preco: "))
pa=float(input("pagamento: "))

if  p > pa:
	y=(p - pa)
	x = " Falta " + y
else:
	z=( pa - p )
	x = " Troco de " + z
print(round(x,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    x = " Falta " + y
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:24:35) 
-- CODE:
p=float(input("preco: "))

pa=float(input("pagamento: "))

if  p > pa:
	y=(p - pa)
	x = " Falta " + y
else:
	z=( pa - p )
	x = " Troco de " + z
print(round(x,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    x = " Falta " + y
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:24:59) 
-- CODE:
p=float(input("preco: "))

pa=float(input("pagamento: "))

if  p > pa:
	y=(p - pa)
	x = " Falta " + y
else:
	z=( pa - p )
	x =  Troco de  + z
print(round(x,2))
-- ERROR:
File "XXXX", line 10
    x =  Troco de  + z
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:29:39) 
-- CODE:
p=float(input("preco: "))

pa=float(input("pagamento: "))

if  p > pa:
	y=(p - pa)
	x = " Falta " + y
else:

print(round(x,2))
-- ERROR:
File "XXXX", line 10
    print(round(x,2))
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:29:58) 
-- CODE:
p=float(input("preco: "))

pa=float(input("pagamento: "))

if  p > pa:
	y=(p - pa)
	x = " Falta "
else:
	z=( pa - p )
	x = ' Troco de '  + z
-- ERROR:
File "XXXX", line 10
    print(round(x,2))
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:30:31) 
-- CODE:
p=float(input("preco: "))

pa=float(input("pagamento: "))

if  p > pa:
	y=(p - pa)
	x = " falta "
else:
	z=( pa - p )
	x = ' troco de '  
-- ERROR:
File "XXXX", line 10
    print(round(x,2))
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:30:57) 
-- CODE:
p=float(input("preco: "))

pa=float(input("pagamento: "))

if  p > pa:
	y=(p - pa)
	x = " Falta " 
else:
	z=( pa - p )
	x = ' Troco de '  
print(round(x,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(round(x,2))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:31:15) 
-- CODE:
p=float(input("preco: "))

pa=float(input("pagamento: "))

if  p > pa:
	y=(p - pa)
	x = " Falta " 
else:
	z=( pa - p )
	x = ' Troco de '  
print(x,)
-- OUTPUT:
Falta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:32:16) 
-- CODE:
p=float(input("preco: "))

pa=float(input("pagamento: "))

if  p > pa:
	y=(p - pa)
	x = " Falta "+" "+y
else:
	z=( pa - p )
	x = ' Troco de '+" "+z 
print(x,)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    x = " Falta "+" "+y
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:33:35) 
-- CODE:
p=float(input("preco: "))

pa=float(input("pagamento: "))

if  p > pa:
	y=float(p - pa)
	x = " Falta "+" "+y
else:
	z=float( pa - p )
	x = ' Troco de '+" "+z 
print(x,)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    x = " Falta "+" "+y
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:34:55) 
-- CODE:
p=float(input("preco: "))

pa=float(input("pagamento: "))

if  p > pa:
	y=p - pa
	x = " Falta "+y
else:
	z= pa - p 
	x = ' Troco de '+z 
print(x,)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    x = " Falta "+y
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:18:15) 
-- CODE:
p=float(input("preco: "))

pa=float(input("pagamento: "))

if  p > pa:
	y = p - pa
	x = " Falta " +y
else:
	z = pa - p 
	x = " Troco de " +z 
print(x,)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    x = " Falta " +y
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:18:32) 
-- CODE:
p=float(input("preco: "))

pa=float(input("pagamento: "))

if  p > pa:
	y = p - pa
	x = " Falta " + y
else:
	z = pa - p 
	x = " Troco de " + z 
print(x)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    x = " Falta " + y
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:19:27) 
-- CODE:
p=float(input("preco: "))
pa=float(input("pagamento: "))
y = p - pa
z = pa - p
if  p > pa:
	x = " Falta " + y
else:
	
	x = " Troco de " + z 
print(x)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    x = " Falta " + y
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:19:41) 
-- CODE:
p=float(input("preco: "))
pa=float(input("pagamento: "))
y = p - pa
z = pa - p
if  p > pa:
	x = " Falta "  y
else:
	
	x = " Troco de "  z 
print(x)
-- ERROR:
File "XXXX", line 6
    x = " Falta "  y
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:21:59) 
-- CODE:
p=float(input("preco: "))
pa=float(input("pagamento: "))
y = p - pa
z = pa - p
if p > pa:
	x = " Falta " + y
else:
	x = "Troco de" + z 
print(x)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    x = " Falta " + y
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:22:26) 
-- CODE:
p=float(input("preco: "))
pa=float(input("pagamento: "))
y = p - pa
z = pa - p
if p > pa:
	x = (" Falta " + y)
else:
	x = ("Troco de" + z) 
print(x)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    x = (" Falta " + y)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:22:47) 
-- CODE:
p=int(input("preco: "))
pa=int(input("pagamento: "))
y = p - pa
z = pa - p
if p > pa:
	x = (" Falta " + y)
else:
	x = ("Troco de" + z) 
print(x)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    p=int(input())
ValueError: invalid literal for int() with base 10: '38.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:23:22) 
-- CODE:
p=float(input("preco: "))
pa=float(input("pagamento: "))
y = p - pa
z = pa - p
if p > pa:
	x = "Falta" 
else:
	x = "Troco de" 
print(x)
-- OUTPUT:
Falta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:23:53) 
-- CODE:
p=float(input("preco: "))
pa=float(input("pagamento: "))
y = p - pa
z = pa - p
if p > pa:
	x = "Falta" 
else:
	x = "Troco de" 
print(x)
-- OUTPUT:
Falta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:26:07) 
-- CODE:
p=float(input("preco: "))
pa=float(input("pagamento: "))
y = p - pa
z = pa - p
if p > pa:
	x = "Falta" + str(y)
else:
	x = "Troco de" + str(z)
print(x)
-- OUTPUT:
Falta26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:26:22) 
-- CODE:
p=float(input("preco: "))
pa=float(input("pagamento: "))
y = p - pa
z = pa - p
if p > pa:
	x = "Falta" + str(y)
else:
	x = "Troco de" +" "+ str(z)
print(x)
-- OUTPUT:
Falta26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 12:26:28) 
-- CODE:
p=float(input("preco: "))
pa=float(input("pagamento: "))
y = p - pa
z = pa - p
if p > pa:
	x = "Falta" + str(y)
else:
	x = "Troco de" +" "+ str(z)
print(x)
-- EXECUTION TIME:
0.221014
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 12:26:41) 
-- CODE:
p=float(input("preco: "))
pa=float(input("pagamento: "))
y = p - pa
z = pa - p
if p > pa:
	x = "Falta" +" "+ str(y)
else:
	x = "Troco de" +" "+ str(z)
print(x)
-- EXECUTION TIME:
0.198964
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
