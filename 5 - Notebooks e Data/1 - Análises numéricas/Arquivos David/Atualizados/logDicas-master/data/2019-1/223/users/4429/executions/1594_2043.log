== TEST (2019-03-29 16:52:19) 
-- CODE:
nota1=float("digite nota 1: ")
nota2=float("digite nota 2: ")
nota3=float("digite nota 3: ")
nota4=float("digite nota 4: ")

resultado=((nota1*1)+(nota2*2)+(nota3*3)+(nota4*4)/(1+2+3+4))
print(round(resulto,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    nota1=float("digite nota 1: ")
ValueError: could not convert string to float: 'digite nota 1: '
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 16:53:25) 
-- CODE:
nota1=float(input("digite nota 1: "))
nota2=float(input("digite nota 2: "))
nota3=float(input("digite nota 3: "))
nota4=float(input("digite nota 4: "))

resultado=((nota1*1)+(nota2*2)+(nota3*3)+(nota4*4)/(1+2+3+4))
print(round(resulto,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(round(resulto,2))
NameError: name 'resulto' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 16:54:09) 
-- CODE:
nota1=float(input("digite nota 1: "))
nota2=float(input("digite nota 2: "))
nota3=float(input("digite nota 3: "))
nota4=float(input("digite nota 4: "))

resultado=((nota1*1)+(nota2*2)+(nota3*3)+(nota4*4)/(1+2+3+4))
print(round(resultado,2))
-- OUTPUT:
49.6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 16:54:46) 
-- CODE:
nota1=float(input("digite nota 1: "))
nota2=float(input("digite nota 2: "))
nota3=float(input("digite nota 3: "))
nota4=float(input("digite nota 4: "))

resultado=((nota1*1)+(nota2*2)+(nota3*3)+(nota4*4)/(1+2+3+4))
print(round(resultado,2))
-- EXECUTION TIME:
0.284953
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
49.6
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
44.8
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
47.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 16:56:17) 
-- CODE:
nota1=float(input("digite nota 1: "))
nota2=float(input("digite nota 2: "))
nota3=float(input("digite nota 3: "))
nota4=float(input("digite nota 4: "))

resultado=(((nota1*1)+(nota2*2)+(nota3*3)+(nota4*4))/(1+2+3+4))
print(round(resultado,2))
-- OUTPUT:
8.2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 16:57:12) 
-- CODE:
nota1=float(input("digite nota 1: "))
nota2=float(input("digite nota 2: "))
nota3=float(input("digite nota 3: "))
nota4=float(input("digite nota 4: "))

resultado=(((nota1*1)+(nota2*2)+(nota3*3)+(nota4*4))/(1+2+3+4))
print(round(resultado, 2))
-- OUTPUT:
8.2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 16:57:56) 
-- CODE:
nota1=float(input("digite nota 1: "))
nota2=float(input("digite nota 2: "))
nota3=float(input("digite nota 3: "))
nota4=float(input("digite nota 4: "))

resultado=(((nota1*1)+(nota2*2)+(nota3*3)+(nota4*4))/(1+2+3+4))
print(round(resultado, 2))
-- EXECUTION TIME:
0.281415
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
8.2
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
7.0
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
7.94
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 00:45:49) 
-- CODE:
nota1=float(input("digite nota 1: "))
nota2=float(input("digite nota 2: "))
nota3=float(input("digite nota 3: "))
nota4=float(input("digite nota 4: "))

resultado=(((nota1*1)+(nota2*2)+(nota3*3)+(nota4*4))/(1+2+3+4))
print(round(resultado, 2))
-- OUTPUT:
8.2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-12 00:46:09) 
-- CODE:
nota1=float(input("digite nota 1: "))
nota2=float(input("digite nota 2: "))
nota3=float(input("digite nota 3: "))
nota4=float(input("digite nota 4: "))

resultado=(((nota1*1)+(nota2*2)+(nota3*3)+(nota4*4))/(1+2+3+4))
print(round(resultado, 2))
-- EXECUTION TIME:
0.178922
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
8.2
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
7.0
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
7.94
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
