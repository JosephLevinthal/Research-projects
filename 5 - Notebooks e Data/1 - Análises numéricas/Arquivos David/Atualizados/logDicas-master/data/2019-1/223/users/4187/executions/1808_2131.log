== TEST (2019-06-09 08:30:08) 
-- CODE:
from math import*
x = eval(input("digite um angulo:"))
N = int(input("numero de termos:"))

cox = 1
exp = 2
fato = 2
if(-1 < x < 1):
	for i in range(N):
		div = (x**exp)/factorial(fato)
		div = div * (-1)
		cox = cox + div
		exp = exp + 2
		fato = fato + 2
	print(round(cox,11))
		
		
	
-- OUTPUT:
0.70531671532
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 08:30:59) 
-- CODE:
from math import*
x = eval(input("digite um angulo:"))
N = int(input("numero de termos:"))

cox = 1
exp = 2
fato = 2
if(-1 < x < 1):
	for i in range(N):
		div = (x**exp)/factorial(fato)
		div = div * (-1)
		cox = cox + div
		exp = exp + 2
		fato = fato + 2
	print(round(cox,11))
		
		
	
-- OUTPUT:
0.70531671532
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 08:34:34) 
-- CODE:
from math import*
x = eval(input("digite um angulo:"))
N = int(input("numero de termos:"))

cox = 1
exp = 2
fato = 2
if(-1 < x < 1):
	if(N > 1):
		for i in range(N):
			div = (x**exp)/factorial(fato)
			div = div * (-1)
			cox = cox + div
			exp = exp + 2
			fato = fato + 2
		print(round(cox,11))
	else:
		print(1)
		
		
	
-- OUTPUT:
0.70531671532
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 08:34:52) 
-- CODE:
from math import*
x = eval(input("digite um angulo:"))
N = int(input("numero de termos:"))

cox = 1
exp = 2
fato = 2
if(-1 < x < 1):
	if(N > 1):
		for i in range(N):
			div = (x**exp)/factorial(fato)
			div = div * (-1)
			cox = cox + div
			exp = exp + 2
			fato = fato + 2
		print(round(cox,11))
	else:
		print(1)
		
		
	
-- OUTPUT:
0.70531671532
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 08:36:47) 
-- CODE:
from math import*
x = eval(input("digite um angulo:"))
N = int(input("numero de termos:"))

cox = 1
exp = 2
fato = 2
if(-1 < x < 1):
	if(N > 1):
		for i in range(N):
			div = (x**exp)/factorial(fato)
			cox = cox - div
			exp = exp + 2
			fato = fato + 2
			cox = cox * (-1) 
		print(round(cox,11))
		
		
	
-- OUTPUT:
0.73168886887
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 08:37:15) 
-- CODE:
from math import*
x = eval(input("digite um angulo:"))
N = int(input("numero de termos:"))

cox = 1
exp = 2
fato = 2
if(-1 < x < 1):
	if(N > 1):
		for i in range(N):
			div = (x**exp)/factorial(fato)
			cox = cox - div
			exp = exp + 2
			fato = fato + 2
			cox = cox * (-1) 
		print(round(cox,11))
		
		
	
-- OUTPUT:
0.73168886887
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 08:37:41) 
-- CODE:
from math import*
x = eval(input("digite um angulo:"))
N = int(input("numero de termos:"))

cox = 1
exp = 2
fato = 2
if(-1 < x < 1):
	if(N > 1):
		for i in range(N):
			div = (x**exp)/factorial(fato)
			cox = cox - div
			exp = exp + 2
			fato = fato + 2
			cox = cox * (-1) 
		print(round(cox,11))
		
		
	
-- OUTPUT:
0.73168886887
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 08:38:07) 
-- CODE:
from math import*
x = eval(input("digite um angulo:"))
N = int(input("numero de termos:"))

cox = 1
exp = 2
fato = 2
if(-1 < x < 1):
	if(N > 1):
		for i in range(N):
			div = (x**exp)/factorial(fato)
			cox = cox - div
			exp = exp + 2
			fato = fato + 2
			cox = cox * (-1) 
		print(round(cox,11))
		
		
	
-- OUTPUT:
0.73168886887
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 08:39:00) 
-- CODE:
from math import*
x = eval(input("digite um angulo:"))
N = int(input("numero de termos:"))

cox = 1
exp = 2
fato = 2
if(-1 < x < 1):
	for i in range(N):
		div = (x**exp)/factorial(fato)
		cox = cox - div
		exp = exp + 2
		fato = fato + 2
		cox = cox * (-1) 
	print(round(cox,11))
		
		
	
-- OUTPUT:
0.73168886887
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 08:39:15) 
-- CODE:
from math import*
x = eval(input("digite um angulo:"))
N = int(input("numero de termos:"))

cox = 1
exp = 2
fato = 2
if(-1 < x < 1):
	for i in range(N):
		div = (x**exp)/factorial(fato)
		cox = cox - div
		exp = exp + 2
		fato = fato + 2
		cox = cox * (-1) 
	print(round(cox,11))
		
		
	
-- OUTPUT:
0.73168886887
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 14:56:27) 
-- CODE:
from math import*
x = eval(input("digite um angulo:"))
N = int(input("numero de termos:"))

cox = 1
exp = 2
fato = 2
if(-1 < x < 1):
	for i in range(N):
		div = (x**exp)/factorial(fato)
		cox = cox - div
		exp = exp + 2
		fato = fato + 2
		cox = cox * (-1) 
	print(round(cox,11))
		
		
	
-- OUTPUT:
0.73168886887
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 15:31:24) 
-- CODE:
from math import*
x = eval(input("digite um angulo:"))
N = int(input("numero de termos:"))

cox = 1
exp = 2
fato = 2
o = 0
if(-1 < x < 1):
	for i in range(N):
		if(o % 2 == 0 ):
			div = (x**exp)/factorial(fato)
		else:
			div = ((x**exp)/factorial(fato)) * (-1)
		cox = cox - div
		exp = exp + 2
		fato = fato + 2 
	print(round(cox,11))
		
		
	
-- OUTPUT:
0.70531671532
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 15:31:42) 
-- CODE:
from math import*
x = eval(input("digite um angulo:"))
N = int(input("numero de termos:"))

cox = 1
exp = 2
fato = 2
o = 0
if(-1 < x < 1):
	for i in range(N):
		if(o % 2 == 0 ):
			div = (x**exp)/factorial(fato)
		else:
			div = ((x**exp)/factorial(fato)) * (-1)
		cox = cox - div
		exp = exp + 2
		fato = fato + 2 
		o = o + 1
	print(round(cox,11))
		
		
	
-- OUTPUT:
0.73168886887
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 15:32:11) 
-- CODE:
from math import*
x = eval(input("digite um angulo:"))
N = int(input("numero de termos:"))

cox = 1
exp = 2
fato = 2
o = 0
if(-1 < x < 1):
	for i in range(N):
		if(o % 2 == 0 ):
			div = (x**exp)/factorial(fato)
		else:
			div = ((x**exp)/factorial(fato)) * (-1)
		cox = cox - div
		exp = exp + 2
		fato = fato + 2 
		o = o + 1
	print(round(cox,11))
		
		
	
-- OUTPUT:
0.73168886887
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 15:34:10) 
-- CODE:
from math import*
x = eval(input("digite um angulo:"))
N = int(input("numero de termos:"))

cox = 1
exp = 2
fato = 2
o = 0
if(-1 < x < 1 and N > 1):
	for i in range(N):
		if(o % 2 == 0 ):
			div = (x**exp)/factorial(fato)
		else:
			div = ((x**exp)/factorial(fato)) * (-1)
		cox = cox - div
		exp = exp + 2
		fato = fato + 2 
		o = o + 1
	print(round(cox,11))
else:
	print(round(cox,11))
		
	
-- OUTPUT:
0.73168886887
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 15:34:55) 
-- CODE:
from math import*
x = eval(input("digite um angulo:"))
N = int(input("numero de termos:"))

cox = 1.0
exp = 2
fato = 2
o = 0
if(-1 < x < 1 and N > 1):
	for i in range(N):
		if(o % 2 == 0 ):
			div = (x**exp)/factorial(fato)
		else:
			div = ((x**exp)/factorial(fato)) * (-1)
		cox = cox - div
		exp = exp + 2
		fato = fato + 2 
		o = o + 1
	print(round(cox,11))
else:
	print(round(cox,11))
		
	
-- OUTPUT:
0.73168886887
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 15:35:12) 
-- CODE:
from math import*
x = eval(input("digite um angulo:"))
N = int(input("numero de termos:"))

cox = 1.0
exp = 2
fato = 2
o = 0
if(-1 < x < 1 and N > 1):
	for i in range(N):
		if(o % 2 == 0 ):
			div = (x**exp)/factorial(fato)
		else:
			div = ((x**exp)/factorial(fato)) * (-1)
		cox = cox - div
		exp = exp + 2
		fato = fato + 2 
		o = o + 1
	print(round(cox,11))
else:
	print(round(cox,11))
		
	
-- OUTPUT:
0.73168886887
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 15:36:13) 
-- CODE:
from math import*
x = eval(input("digite um angulo:"))
N = int(input("numero de termos:"))

cox = 1.0
exp = 2
fato = 2
o = 0
if(-1 < x < 1 and N > 1):
	for i in range(N):
		if(o % 2 == 0 ):
			div = (x**exp)/factorial(fato) * (-1)
		else:
			div = ((x**exp)/factorial(fato))
		cox = cox - div
		exp = exp + 2
		fato = fato + 2 
		o = o + 1
	print(round(cox,11))
else:
	print(round(cox,11))
		
	
-- OUTPUT:
1.26831113113
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 15:36:23) 
-- CODE:
from math import*
x = eval(input("digite um angulo:"))
N = int(input("numero de termos:"))

cox = 1.0
exp = 2
fato = 2
o = 0
if(-1 < x < 1 and N > 1):
	for i in range(N):
		if(o % 2 == 0 ):
			div = (x**exp)/factorial(fato) * (-1)
		else:
			div = ((x**exp)/factorial(fato))
		cox = cox - div
		exp = exp + 2
		fato = fato + 2 
		o = o + 1
	print(round(cox,11))
else:
	print(round(cox,11))
		
	
-- OUTPUT:
1.26831113113
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 15:37:27) 
-- CODE:
from math import*
x = eval(input("digite um angulo:"))
N = int(input("numero de termos:"))

cox = 1.0
exp = 2
fato = 2
o = 0
if(-1 < x < 1 and N > 1):
	for i in range(N):
		if(o % 2 == 0 ):
			div = (x**exp)/factorial(fato)
		else:
			div = ((x**exp)/factorial(fato))*(-1)
		cox = cox - div
		exp = exp + 2
		fato = fato + 2 
		o = o + 1
	print(round(cox,11))
else:
	print(round(cox,11))
		
	
-- OUTPUT:
0.73168886887
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-09 15:37:48) 
-- CODE:
from math import*
x = eval(input("digite um angulo:"))
N = int(input("numero de termos:"))

cox = 1.0
exp = 2
fato = 2
o = 0
if(-1 < x < 1 and N > 1):
	for i in range(N):
		if(o % 2 == 0 ):
			div = (x**exp)/factorial(fato)
		else:
			div = ((x**exp)/factorial(fato))*(-1)
		cox = cox - div
		exp = exp + 2
		fato = fato + 2 
		o = o + 1
	print(round(cox,11))
else:
	print(round(cox,11))
		
	
-- EXECUTION TIME:
0.886144
-- TEST CASE 1:
---- input:
0.75
36
---- correct output:
0.73168886887
---- user output:
0.73168886887
-- TEST CASE 2:
---- input:
0.26
47
---- correct output:
0.96638997813
---- user output:
0.96638997813
-- TEST CASE 3:
---- input:
0.47
58
---- correct output:
0.8915682882
---- user output:
0.8915682882
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-30 18:12:06) 
-- CODE:
from math import*
x = eval(input("digite um angulo:"))
N = int(input("numero de termos:"))

cox = 1.0
exp = 2
fato = 2
o = 0
if(-1 < x < 1 and N > 1):
	for i in range(N):
		if(o % 2 == 0 ):
			div = (x**exp)/factorial(fato)
		else:
			div = ((x**exp)/factorial(fato))*(-1)
		cox = cox - div
		exp = exp + 2
		fato = fato + 2 
		o = o + 1
	print(round(cox,11))
else:
	print(round(cox,11))
		
	
-- EXECUTION TIME:
0.813491
-- TEST CASE 1:
---- input:
0.75
36
---- correct output:
0.73168886887
---- user output:
0.73168886887
-- TEST CASE 2:
---- input:
0.26
47
---- correct output:
0.96638997813
---- user output:
0.96638997813
-- TEST CASE 3:
---- input:
0.47
58
---- correct output:
0.8915682882
---- user output:
digite um angulo:numero de termos:0.8915682882
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-30 18:16:22) 
-- CODE:
from math import*
x = eval(input("digite um angulo:"))
N = int(input("numero de termos:"))

cox = 1.0
exp = 2
fato = 2
o = 0
if(-1 < x < 1 and N > 1):
	for i in range(N):
		if(o % 2 == 0 ):
			div = (x**exp)/factorial(fato)
		else:
			div = ((x**exp)/factorial(fato))*(-1)
		cox = cox - div
		exp = exp + 2
		fato = fato + 2 
		o = o + 1
	print(round(cox,11))
else:
	print(round(cox,11))
		
	
-- OUTPUT:
0.73168886887
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-30 19:48:29) 
-- CODE:
from math import*
x = eval(input("digite um angulo:"))
N = int(input("numero de termos:"))

cox = 1.0
exp = 2
fato = 2
o = 0
for i in range(N):
		if(o % 2 == 0 ):
			div = (x**exp)/factorial(fato)
		else:
			div = ((x**exp)/factorial(fato))*(-1)
		cox = cox - div
		exp = exp + 2
		fato = fato + 2 
		o = o + 1
	print(round(cox,11))
		
	
-- ERROR:
File "XXXX", line 18
    print(round(cox,11))
                       ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-30 19:48:42) 
-- CODE:
from math import*
x = eval(input("digite um angulo:"))
N = int(input("numero de termos:"))

cox = 1.0
exp = 2
fato = 2
o = 0
for i in range(N):
		if(o % 2 == 0 ):
			div = (x**exp)/factorial(fato)
		else:
			div = ((x**exp)/factorial(fato))*(-1)
		cox = cox - div
		exp = exp + 2
		fato = fato + 2 
		o = o + 1
print(round(cox,11))
		
	
-- OUTPUT:
0.73168886887
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-30 19:49:16) 
-- CODE:
from math import*
x = eval(input("digite um angulo:"))
N = int(input("numero de termos:"))

cox = 1.0
exp = 2
fato = 2
o = 0
for i in range(N):
		if(o % 2 == 0 ):
			div = (x**exp)/factorial(fato)
		else:
			div = ((x**exp)/factorial(fato))*(-1)
		cox = cox - div
		exp = exp + 2
		fato = fato + 2 
		o = o + 1
print(round(cox,11))
		
	
-- EXECUTION TIME:
0.811869
-- TEST CASE 1:
---- input:
0.75
36
---- correct output:
0.73168886887
---- user output:
0.73168886887
-- TEST CASE 2:
---- input:
0.26
47
---- correct output:
0.96638997813
---- user output:
0.96638997813
-- TEST CASE 3:
---- input:
0.47
58
---- correct output:
0.8915682882
---- user output:
0.8915682882
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-30 19:50:37) 
-- CODE:
from math import*
x = eval(input("digite um angulo:"))
N = int(input("numero de termos:"))

cox = 1.0
exp = 2
fato = 2

for i in range(N):
		if(i % 2 == 0 ):
			div = (x**exp)/factorial(fato)
		else:
			div = ((x**exp)/factorial(fato))*(-1)
		cox = cox - div
		exp = exp + 2
		fato = fato + 2
print(round(cox,11))
		
	
-- OUTPUT:
0.73168886887
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-30 19:51:13) 
-- CODE:
from math import*
x = eval(input("digite um angulo:"))
N = int(input("numero de termos:"))

cox = 1.0
exp = 2
fato = 2

for i in range(N):
		if(i % 2 == 0 ):
			div = (x**exp)/factorial(fato)
		else:
			div = ((x**exp)/factorial(fato))*(-1)
		cox = cox - div
		exp = exp + 2
		fato = fato + 2
print(round(cox,11))
		
	
-- OUTPUT:
0.73168886887
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-30 19:51:16) 
-- CODE:
from math import*
x = eval(input("digite um angulo:"))
N = int(input("numero de termos:"))

cox = 1.0
exp = 2
fato = 2

for i in range(N):
		if(i % 2 == 0 ):
			div = (x**exp)/factorial(fato)
		else:
			div = ((x**exp)/factorial(fato))*(-1)
		cox = cox - div
		exp = exp + 2
		fato = fato + 2
print(round(cox,11))
		
	
-- OUTPUT:
0.73168886887
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-30 19:51:30) 
-- CODE:
from math import*
x = eval(input("digite um angulo:"))
N = int(input("numero de termos:"))

cox = 1.0
exp = 2
fato = 2

for i in range(N):
		if(i % 2 == 0 ):
			div = (x**exp)/factorial(fato)
		else:
			div = ((x**exp)/factorial(fato))*(-1)
		cox = cox - div
		exp = exp + 2
		fato = fato + 2
print(round(cox,11))
		
	
-- EXECUTION TIME:
0.757231
-- TEST CASE 1:
---- input:
0.75
36
---- correct output:
0.73168886887
---- user output:
0.73168886887
-- TEST CASE 2:
---- input:
0.26
47
---- correct output:
0.96638997813
---- user output:
0.96638997813
-- TEST CASE 3:
---- input:
0.47
58
---- correct output:
0.8915682882
---- user output:
0.8915682882
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-30 19:52:04) 
-- CODE:
from math import*
x = eval(input("digite um angulo:"))
N = int(input("numero de termos:"))

cox = 1.0
exp = 2
fato = 2

for i in range(N):
		if(i % 2 == 0 ):
			div = (x**exp)/factorial(fato)
		else:
			div = ((x**exp)/factorial(fato))*(-1)
		cox = cox - div
		exp = exp + 2
		fato = fato + 2
print(round(cox,11))
		
	
-- EXECUTION TIME:
0.919238
-- TEST CASE 1:
---- input:
0.75
36
---- correct output:
0.73168886887
---- user output:
0.73168886887
-- TEST CASE 2:
---- input:
0.26
47
---- correct output:
0.96638997813
---- user output:
0.96638997813
-- TEST CASE 3:
---- input:
0.47
58
---- correct output:
0.8915682882
---- user output:
0.8915682882
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
