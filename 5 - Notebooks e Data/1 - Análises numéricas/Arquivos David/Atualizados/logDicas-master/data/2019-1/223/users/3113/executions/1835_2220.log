== TEST (2019-07-02 12:30:13) 
-- CODE:
from numpy import*
from numpu.linalg import*

m=array(eval(input("")))

s=m.shape[0]

for i in range(s):
	f=f+m[:,i]
print(f)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 12:30:20) 
-- CODE:
from numpy import*
from numpy.linalg import*

m=array(eval(input("")))

s=m.shape[0]

for i in range(s):
	f=f+m[:,i]
print(f)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 12:30:32) 
-- CODE:
from numpy import*
from numpy.linalg import*

m=array(eval(input("")))

s=m.shape[0]
f=0
for i in range(s):
	f=f+m[:,i]
print(f)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 12:31:49) 
-- CODE:
from numpy import*
from numpy.linalg import*

m=array(eval(input("")))

s=m.shape[0]
f=0
for i in range(s):
	f=max(m[i,:])
print(f)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 12:32:02) 
-- CODE:
from numpy import*
from numpy.linalg import*

m=array(eval(input("")))

s=m.shape[0]
f=0
for i in range(s):
	f=max(m[i,:])
	print(f)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 12:32:07) 
-- CODE:
from numpy import*
from numpy.linalg import*

m=array(eval(input("")))

s=m.shape[0]
f=0
for i in range(s):
	f=max(m[i,:])
	print(f)
-- EXECUTION TIME:
0.945848
-- TEST CASE 1:
---- input:
[[34.5,67.8,89.7,56.4,65.7,78.9,81.2],[99.9,67.8,87.6,45.4,12.3,45.5,23.7],[27.5,93.1,45.9,47.3,19.2,76.5,49.3]]
---- correct output:
89.7
99.9
93.1
---- user output:
89.7
99.9
93.1
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
