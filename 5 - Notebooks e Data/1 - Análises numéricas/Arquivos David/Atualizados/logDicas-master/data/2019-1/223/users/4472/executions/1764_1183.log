== SUBMITION (2019-05-27 21:31:50) 
-- CODE:
from numpy import *

numeros = array(eval("Informe um conjunto de numeros, incluindo negativos: "))

posicao = 0
N = 0

while (posicao < size(numeros)):
	if (numeros[posicao] > 0):
		N =  N + 1
		posicao = posicao + 1
					 
nvet = zeros(N, dtype=int)
i = 0
i2 = 0

while(i < size(vet)):
	if(vet[i] > 0):
		nvet[i2] = vet[i]
		i2 = i2 + 1
	i = i+ 1
print(nvet)

-- EXECUTION TIME:
0.509941
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1764/1183/main.py", line 3, in <module>
    numeros = array(eval("Informe um conjunto de numeros, incluindo negativos: "))
  File "<string>", line 1
    Informe um conjunto de numeros, incluindo negativos: 
             ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-27 21:34:13) 
-- CODE:
from numpy import *

numeros = array(eval("Informe um conjunto de numeros, incluindo negativos: "))

posicao = 0
N = 0

while (posicao < size(numeros)):
	if (numeros[posicao] > 0):
		N =  N + 1
		posicao = posicao + 1
					 
nvet = zeros(N, dtype=int)
i = 0
i2 = 0

while(i < size(numeros)):
	if(numeros[i] > 0):
		numeros[i2] = numeros[i]
		i2 = i2 + 1
		i = i+ 1
		
print(numeros)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-27 21:35:42) 
-- CODE:
from numpy import *

numeros = array(eval("Informe um conjunto de numeros, incluindo negativos: "))

posicao = 0
N = 0

while (posicao < size(numeros)):
	if (numeros[posicao] > 0):
		N =  N + 1
		posicao = posicao + 1
					 
nvet = zeros(N, dtype=int)
i = 0
i2 = 0

while(i < size(numeros)):
	if(numeros[i] > 0):
		numeros[i2] = numeros[i]
		i2 = i2 + 1
		i = i+ 1
		
print(numeros)

-- EXECUTION TIME:
0.379151
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1764/1183/main.py", line 3, in <module>
    numeros = array(eval("Informe um conjunto de numeros, incluindo negativos: "))
  File "<string>", line 1
    Informe um conjunto de numeros, incluindo negativos: 
             ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-27 21:35:44) 
-- CODE:
from numpy import *

numeros = array(eval("Informe um conjunto de numeros, incluindo negativos: "))

posicao = 0
N = 0

while (posicao < size(numeros)):
	if (numeros[posicao] > 0):
		N =  N + 1
		posicao = posicao + 1
					 
nvet = zeros(N, dtype=int)
i = 0
i2 = 0

while(i < size(numeros)):
	if(numeros[i] > 0):
		numeros[i2] = numeros[i]
		i2 = i2 + 1
		i = i+ 1
		
print(numeros)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-27 21:36:05) 
-- CODE:
from numpy import *

numeros = array(eval("Informe um conjunto de numeros incluindo negativos: "))

posicao = 0
N = 0

while (posicao < size(numeros)):
	if (numeros[posicao] > 0):
		N =  N + 1
		posicao = posicao + 1
					 
nvet = zeros(N, dtype=int)
i = 0
i2 = 0

while(i < size(numeros)):
	if(numeros[i] > 0):
		numeros[i2] = numeros[i]
		i2 = i2 + 1
		i = i+ 1
		
print(numeros)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-27 21:36:05) 
-- CODE:
from numpy import *

numeros = array(eval("Informe um conjunto de numeros incluindo negativos: "))

posicao = 0
N = 0

while (posicao < size(numeros)):
	if (numeros[posicao] > 0):
		N =  N + 1
		posicao = posicao + 1
					 
nvet = zeros(N, dtype=int)
i = 0
i2 = 0

while(i < size(numeros)):
	if(numeros[i] > 0):
		numeros[i2] = numeros[i]
		i2 = i2 + 1
		i = i+ 1
		
print(numeros)

-- EXECUTION TIME:
0.476432
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1764/1183/main.py", line 3, in <module>
    numeros = array(eval("Informe um conjunto de numeros incluindo negativos: "))
  File "<string>", line 1
    Informe um conjunto de numeros incluindo negativos: 
             ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-27 21:36:48) 
-- CODE:
from numpy import *

numeros = array(eval(input("Informe um conjunto de numeros incluindo negativos: ")))

posicao = 0
N = 0

while (posicao < size(numeros)):
	if (numeros[posicao] > 0):
		N =  N + 1
		posicao = posicao + 1
					 
nvet = zeros(N, dtype=int)
i = 0
i2 = 0

while(i < size(numeros)):
	if(numeros[i] > 0):
		numeros[i2] = numeros[i]
		i2 = i2 + 1
		i = i+ 1
		
print(numeros)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-27 21:38:53) 
-- CODE:
from numpy import *

numeros = array(eval(input("Informe um conjunto de numeros incluindo negativos: ")))

posicao = 0
N = 0

while (posicao < size(numeros)):
	if (numeros[posicao] > 0):
		N =  N + 1
		posicao = posicao + 1
					 
numeros = zeros(N, dtype=int)
i = 0
i2 = 0

while(i < size(numeros)):
	if(numeros[i] > 0):
		numeros[i2] = numeros[i]
		i2 = i2 + 1
		i = i+ 1
		
print(numeros)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-27 21:46:11) 
-- CODE:
from numpy import* 

vet = array(eval(input("Valor: ")))
posi = 0
tamanho = size(vet)
NPosit = 0
				
while(posi < tamanho):
	if(vet[posi] > 0):
		NPosit =  NPosit + 1
		posi = posi + 1

nvet = zeros(NPosit, dtype=int)
i = 0

nvet[i2] = vet[i]
i2 = i2 + 1
i = i+ 1

print(nvet)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import* 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-27 21:48:44) 
-- CODE:
from numpy import* 
vet = array(
posi = 0
tamanho = size(vet)
NPosit = 0
while(posi < tamanho):
	if(vet[posi] > 0):
		NPosit =  NPosit + 1
	posi = posi + 1

nvet = zeros(NPosit, dtype=int)
i = 0
i2 = 0
while(i < size(vet)):
	if(vet[i] > 0):
		nvet[i2] = vet[i]
		i2 = i2 + 1
	i = i+ 1
print(nvet)
		
-- ERROR:
File "XXXX", line 4
    tamanho = size(vet)
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-27 21:48:45) 
-- CODE:
from numpy import* 
vet = array(
posi = 0
tamanho = size(vet)
NPosit = 0
while(posi < tamanho):
	if(vet[posi] > 0):
		NPosit =  NPosit + 1
	posi = posi + 1

nvet = zeros(NPosit, dtype=int)
i = 0
i2 = 0
while(i < size(vet)):
	if(vet[i] > 0):
		nvet[i2] = vet[i]
		i2 = i2 + 1
	i = i+ 1
print(nvet)
		
-- EXECUTION TIME:
0.594129
-- ERROR:
  File "/home/codebench/codes/1764/1183/main.py", line 4
    tamanho = size(vet)
          ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-27 21:50:00) 
-- CODE:
from numpy import* 

vet = array(eval(input("Valor: ")))
posi = 0
tamanho = size(vet)
NPosit = 0
while(posi < tamanho):
	if(vet[posi] > 0):
		NPosit =  NPosit + 1
		posi = posi + 1

nvet = zeros(NPosit, dtype=int)
i = 0
i2 = 0

while(i < size(vet)):
	if(vet[i] > 0):
		nvet[i2] = vet[i]
		i2 = i2 + 1
		i = i+ 1
		
print(nvet)
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import* 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-27 21:50:57) 
-- CODE:
from numpy import* 

vet = array(eval(input("Valor: ")))

posi = 0
tamanho = size(vet)
NPosit = 0

while(posi < tamanho):
	if(vet[posi] > 0):
		NPosit =  NPosit + 1
		posi = posi + 1

nvet = zeros(NPosit, dtype=int)
i = 0
i2 = 0

while(i < size(vet)):
	if(vet[i] > 0):
		nvet[i2] = vet[i]
		i2 = i2 + 1
		i = i+ 1
		
print(nvet)
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import* 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-27 21:51:08) 
-- CODE:
from numpy import* 

vet = array(eval(input("Valor: ")))

posi = 0
tamanho = size(vet)
NPosit = 0

while(posi < tamanho):
	if(vet[posi] > 0):
		NPosit =  NPosit + 1
		posi = posi + 1

nvet = zeros(NPosit, dtype=int)
i = 0
i2 = 0

while(i < size(vet)):
	if(vet[i] > 0):
		nvet[i2] = vet[i]
		i2 = i2 + 1
		i = i+ 1
		
print(nvet)
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import* 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-27 22:29:01) 
-- CODE:
from numpy import *

numeros = array(eval(input("Informe um conjunto de numeros incluindo negativos: ")))

posicao = 0
N = 0

while (posicao < size(numeros)):
	if (numeros[posicao] > 0):
		N =  N + 1
		posicao = posicao + 1
					 
nvet = zeros(N, dtype=int)
i = 0
i2 = 0

while(i < size(numeros)):
	if(numeros[i] > 0):
		numeros[i2] = numeros[i]
		i2 = i2 + 1
		i = i+ 1
		
print(numeros)

-- EXECUTION TIME:
837.056
-- ERROR:
Killed

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-27 22:35:01) 
-- CODE:
from numpy import *

numeros = array(eval(input("Informe um conjunto de numeros incluindo negativos: ")))

posicao = 0
N = 0

while (posicao < size(numeros)):
	if (numeros[posicao] > 0):
		N =  N + 1
		posicao = posicao + 1
					 
numeros = zeros(N, dtype=int)
i = 0
i2 = 0

while(i < size(numeros)):
	if(numeros[i] > 0):
		numeros[i2] = numeros[i]
		i2 = i2 + 1
		i = i+ 1
		
print(numeros)

-- EXECUTION TIME:
1035.28
-- ERROR:
Killed

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-27 22:39:01) 
-- CODE:
from numpy import* 

vet = array(eval(input("Valor: ")))

posi = 0
tamanho = size(vet)
NPosit = 0

while(posi < tamanho):
	if(vet[posi] > 0):
		NPosit =  NPosit + 1
		posi = posi + 1

nvet = zeros(NPosit, dtype=int)
i = 0
i2 = 0

while(i < size(vet)):
	if(vet[i] > 0):
		nvet[i2] = vet[i]
		i2 = i2 + 1
		i = i+ 1
		
print(nvet)
		
-- EXECUTION TIME:
1172.96
-- ERROR:
Killed

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 23:00:22) 
-- CODE:
from numpy import* 

vet = array(eval(input("Valor: ")))

posi = 0
tamanho = size(vet)
NPosit = 0

while(posi < tamanho):
	if(vet[posi] > 0):
		NPosit =  NPosit + 1
		posi = posi + 1

nvet = zeros(NPosit, dtype=int)
i = 0
i2 = 0

while(i < size(vet)):
	if(vet[i] > 0):
		nvet[i2] = vet[i]
		i2 = i2 + 1
		i = i+ 1
		
print(nvet)
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import* 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 23:00:36) 
-- CODE:
from numpy import* 

vet = array(eval(input("Valor: ")))

posi = 0
tamanho = size(vet)
NPosit = 0

while(posi < tamanho):
	if(vet[posi] > 0):
		NPosit =  NPosit + 1
		posi = posi + 1

nvet = zeros(NPosit, dtype=int)
i = 0
i2 = 0

while(i < size(vet)):
	if(vet[i] > 0):
		nvet[i2] = vet[i]
		i2 = i2 + 1
		i = i+ 1
		
print(nvet)
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import* 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-28 23:06:55) 
-- CODE:
from numpy import* 

vet = array(eval(input("Valor: ")))

posi = 0
tamanho = size(vet)
NPosit = 0

while(posi < tamanho):
	if(vet[posi] > 0):
		NPosit =  NPosit + 1
		posi = posi + 1

nvet = zeros(NPosit, dtype=int)
i = 0
i2 = 0

while(i < size(vet)):
	if(vet[i] > 0):
		nvet[i2] = vet[i]
		i2 = i2 + 1
		i = i+ 1
		
print(nvet)
		
-- EXECUTION TIME:
357.039
-- TEST CASE 1:
---- input:
[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,1]
---- correct output:
[1]
---- user output:

-- TEST CASE 2:
---- input:
[2,-1,3,-4,5]
---- correct output:
[2 3 5]
---- user output:

-- TEST CASE 3:
---- input:
[-1,18,32,14,25,-6]
---- correct output:
[18 32 14 25]
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 23:15:42) 
-- CODE:
from numpy import* 

vetor = array(eval(input("Informe os valores, incluindo negativos")))

i = 0

print (vetor)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import* 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 23:22:47) 
-- CODE:
from numpy import* 

vetor = array(eval(input("Informe os valores, incluindo negativos")))

i = 0

print (vetor[i:>0])
-- ERROR:
File "XXXX", line 7
    print (vetor[i:>0])
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 23:23:45) 
-- CODE:
from numpy import* 

vetor = array(eval(input("Informe os valores, incluindo negativos")))

i = 0

print (vetor[i]>0)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import* 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-28 23:24:32) 
-- CODE:
from numpy import* 

vetor = array(eval(input("Informe os valores, incluindo negativos: ")))

i = 0

print (vetor[i]>0)
-- EXECUTION TIME:
0.569591
-- TEST CASE 1:
---- input:
[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,1]
---- correct output:
[1]
---- user output:
False
-- TEST CASE 2:
---- input:
[2,-1,3,-4,5]
---- correct output:
[2 3 5]
---- user output:
True
-- TEST CASE 3:
---- input:
[-1,18,32,14,25,-6]
---- correct output:
[18 32 14 25]
---- user output:
False
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-28 23:33:15) 
-- CODE:
from numpy import* 
vet = array(
posi = 0
tamanho = size(vet)
NPosit = 0
while(posi < tamanho):
	if(vet[posi] > 0):
		NPosit =  NPosit + 1
	posi = posi + 1

nvet = zeros(NPosit, dtype=int)
i = 0
i2 = 0
while(i < size(vet)):
	if(vet[i] > 0):
		nvet[i2] = vet[i]
		i2 = i2 + 1
	i = i+ 1
print(nvet)
-- EXECUTION TIME:
0.153352
-- ERROR:
  File "/home/codebench/codes/1764/1183/main.py", line 4
    tamanho = size(vet)
          ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-28 23:33:51) 
-- CODE:
from numpy import* 
vet = array(eval(input("Informe os valores: ")))
posi = 0
tamanho = size(vet)
NPosit = 0
while(posi < tamanho):
	if(vet[posi] > 0):
		NPosit =  NPosit + 1
	posi = posi + 1

nvet = zeros(NPosit, dtype=int)
i = 0
i2 = 0
while(i < size(vet)):
	if(vet[i] > 0):
		nvet[i2] = vet[i]
		i2 = i2 + 1
	i = i+ 1
print(nvet)
-- EXECUTION TIME:
0.373254
-- TEST CASE 1:
---- input:
[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,1]
---- correct output:
[1]
---- user output:
[1]
-- TEST CASE 2:
---- input:
[2,-1,3,-4,5]
---- correct output:
[2 3 5]
---- user output:
[2 3 5]
-- TEST CASE 3:
---- input:
[-1,18,32,14,25,-6]
---- correct output:
[18 32 14 25]
---- user output:
[18 32 14 25]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-28 23:37:16) 
-- CODE:
from numpy import*

vetor = array(eval(input("Informe os valores: ")))

posicao = 0
posicaoX = 0

while(posicao < size(vetor)):
	if(vetor[posicao] > 0):
		posicaoX  =  posicaoX  + 1
	posicao = posicao + 1

nvet = zeros(posicaoX , dtype=int)

i = 0
i2 = 0

while(i < size(vetor)):
	if(vetor[i] > 0):
		nvet[i2] = vetor[i]
		i2 = i2 + 1
	i = i+ 1
	
print(nvet)
-- EXECUTION TIME:
0.380348
-- TEST CASE 1:
---- input:
[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,1]
---- correct output:
[1]
---- user output:
[1]
-- TEST CASE 2:
---- input:
[2,-1,3,-4,5]
---- correct output:
[2 3 5]
---- user output:
[2 3 5]
-- TEST CASE 3:
---- input:
[-1,18,32,14,25,-6]
---- correct output:
[18 32 14 25]
---- user output:
[18 32 14 25]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-29 14:29:03) 
-- CODE:
from numpy import*

vetor = array(eval(input("Informe os valores: ")))

posicao = 0
posicaoX = 0

while(posicao < size(vetor)):
	if(vetor[posicao] > 0):
		posicaoX  =  posicaoX  + 1
	posicao = posicao + 1

nvet = zeros(posicaoX , dtype=int)

i = 0
i2 = 0

while(i < size(vetor)):
	if(vetor[i] > 0):
		nvet[i2] = vetor[i]
		i2 = i2 + 1
	i = i+ 1
	
print(nvet)
-- EXECUTION TIME:
0.394521
-- TEST CASE 1:
---- input:
[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,1]
---- correct output:
[1]
---- user output:
[1]
-- TEST CASE 2:
---- input:
[2,-1,3,-4,5]
---- correct output:
[2 3 5]
---- user output:
[2 3 5]
-- TEST CASE 3:
---- input:
[-1,18,32,14,25,-6]
---- correct output:
[18 32 14 25]
---- user output:
[18 32 14 25]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
