== TEST (2019-04-12 17:27:23) 
-- CODE:
Xa=float(input("ax: "))
Xb=float(input("bx: "))
Ya=float(input("ay: "))
Yb=float(input("by: "))
dAB=(((Xb-Xa)**2 + (Yb-Ya)**2)**(1/2))

print(round(dAB, 3))
-- OUTPUT:
30.806
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 17:28:36) 
-- CODE:
Xa=float(input("ax: "))
Xb=float(input("bx: "))
Ya=float(input("ay: "))
Yb=float(input("by: "))
dAB=((Xb-Xa)**2 + (Yb-Ya)**2)**(1/2)

print(round(dAB, 3))
-- OUTPUT:
30.806
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 17:29:29) 
-- CODE:
Xa=float(input("ax: "))
Xb=float(input("bx: "))
Ya=float(input("ay: "))
Yb=float(input("by: "))
dAB=(((Xb-Xa)**2) + ((Yb-Ya)**2)**(1/2))

print(round(dAB, 3))
-- OUTPUT:
643.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 17:30:51) 
-- CODE:
Xa=float(input("ax: "))
Xb=float(input("bx: "))
Ya=float(input("ay: "))
Yb=float(input("by: "))
dAB=(Xb-Xa)**2 + (Yb-Ya)**2**(1/2)

print(round(dAB, 3))
-- OUTPUT:
684.597
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 17:31:25) 
-- CODE:
Xa=float(input("ax: "))
Xb=float(input("bx: "))
Ya=float(input("ay: "))
Yb=float(input("by: "))
dAB=((Xb-Xa)**2 + (Yb-Ya)**2**(1/2))

print(round(dAB, 3))
-- OUTPUT:
684.597
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 17:32:35) 
-- CODE:
Xa=float(input("ax: "))
Xb=float(input("bx: "))
Ya=float(input("ay: "))
Yb=float(input("by: "))
dAB=((Xb-Xa)**2 + (Yb-Ya)**2**(1/2))

print(round(dAB, 3))
-- OUTPUT:
684.597
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 18:18:30) 
-- CODE:
Xa=float(input("ax: "))
Xb=float(input("bx: "))
Ya=float(input("ay: "))
Yb=float(input("by: "))
x=dAB=((Xb-Xa)**2 + (Yb-Ya)**2**(1/2))

print(round(x, 3))
-- OUTPUT:
684.597
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 00:00:51) 
-- CODE:
Xa=float(input("ax: "))
Xb=float(input("bx: "))
Ya=float(input("ay: "))
Yb=float(input("by: "))
x=(((Xb-Xa)**2) + ((Yb-Ya)**2)**(1/2))

print(round(x, 3))
-- OUTPUT:
643.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 11:56:43) 
-- CODE:
Xa=float(input("ax: "))
Xb=float(input("bx: "))
Ya=float(input("ay: "))
Yb=float(input("by: "))
x=(((Xb-Xa)**2) + ((Yb-Ya)**2)**(1/2))

print(round(x, 3))
-- OUTPUT:
643.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-17 23:44:15) 
-- CODE:
Xa=float(input("ax: "))
Xb=float(input("bx: "))
Ya=float(input("ay: "))
Yb=float(input("by: "))
x=(((Xb-Xa)**2) + ((Yb-Ya)**2)**(1/2))

print(round(x, 3))
-- OUTPUT:
643.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-17 23:55:21) 
-- CODE:
Xa=float(input("ax: "))
Ya=float(input("ya: "))
Xb=float(input("xb: "))
Yb=float(input("by: "))
x=(((Xb-Xa)**2) + ((Yb-Ya)**2)**(1/2))

print(round(x, 3))
-- OUTPUT:
423.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-17 23:58:25) 
-- CODE:
Xa=float(input("ax: "))
Ya=float(input("ya: "))
Xb=float(input("xb: "))
Yb=float(input("by: "))
x=(((Xb-Xa)**2) + ((Yb-Ya)**2)**(1/2))**2

print(round(x, 3))
-- OUTPUT:
178929.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 11:55:50) 
-- CODE:
Xa=float(input("ax: "))
Ya=float(input("ya: "))
Xb=float(input("xb: "))
Yb=float(input("by: "))
x=(((Xb-Xa)**2) + ((Yb-Ya)**2)**(1/2))

print(round(x, 3))
-- OUTPUT:
423.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 11:57:47) 
-- CODE:
Xa=float(input("ax: "))
Ya=float(input("ya: "))
Xb=float(input("xb: "))
Yb=float(input("by: "))
x=((((Xb-Xa)**2) + ((Yb-Ya)**2))**(1/2))

print(round(x, 3))
-- OUTPUT:
30.48
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 11:58:10) 
-- CODE:
Xa=float(input("ax: "))
Ya=float(input("ya: "))
Xb=float(input("xb: "))
Yb=float(input("by: "))
x=((((Xb-Xa)**2) + ((Yb-Ya)**2))**(1/2))

print(round(x, 3))
-- EXECUTION TIME:
0.136183
-- TEST CASE 1:
---- input:
50
25
30
48
---- correct output:
30.48
---- user output:
30.48
-- TEST CASE 2:
---- input:
2.5
3.0
5.0
1.8
---- correct output:
2.773
---- user output:
2.773
-- TEST CASE 3:
---- input:
1.22
2.33
3.44
4.55
---- correct output:
3.14
---- user output:
3.14
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
