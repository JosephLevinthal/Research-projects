== TEST (2019-05-14 17:41:23) 
-- CODE:
n = int(input("Digite um numero: "))

pi = 0 

while(n >= 1):
	if(n % 2 == 1):
		pi = pi + (4/(2*n-1)) #se for impar 
	else:
		pi = pi - (4/(2*n-1)) #se for par
		
	n = n - 1
print(round(pi, 8))
		
	
-- OUTPUT:
3.33968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 17:41:34) 
-- CODE:
n = int(input("Digite um numero: "))

pi = 0 

while(n >= 1):
	if(n % 2 == 1):
		pi = pi + (4/(2*n-1)) #se for impar 
	else:
		pi = pi - (4/(2*n-1)) #se for par
		
	n = n - 1
print(round(pi, 8))
		
	
-- EXECUTION TIME:
0.135914
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.33968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.09616153
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.19418791
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 17:41:35) 
-- CODE:
n = int(input("Digite um numero: "))

pi = 0 

while(n >= 1):
	if(n % 2 == 1):
		pi = pi + (4/(2*n-1)) #se for impar 
	else:
		pi = pi - (4/(2*n-1)) #se for par
		
	n = n - 1
print(round(pi, 8))
		
	
-- OUTPUT:
3.33968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 17:41:50) 
-- CODE:
n = int(input("Digite um numero: "))

pi = 0 

while(n >= 1):
	if(n % 2 == 1):
		pi = pi + (4/(2*n-1)) #se for impar 
	else:
		pi = pi - (4/(2*n-1)) #se for par
		
	n = n + 1
print(round(pi, 8))
		
	
-- OUTPUT:
3.33968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 17:41:57) 
-- CODE:
n = int(input("Digite um numero: "))

pi = 0 

while(n >= 1):
	if(n % 2 == 1):
		pi = pi + (4/(2*n-1)) #se for impar 
	else:
		pi = pi - (4/(2*n-1)) #se for par
		
	n = n - 1
print(round(pi, 8))
		
	
-- EXECUTION TIME:
0.192752
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.33968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.09616153
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.19418791
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 17:41:57) 
-- CODE:
n = int(input("Digite um numero: "))

pi = 0 

while(n >= 1):
	if(n % 2 == 1):
		pi = pi + (4/(2*n-1)) #se for impar 
	else:
		pi = pi - (4/(2*n-1)) #se for par
		
	n = n - 1
print(round(pi, 8))
		
	
-- OUTPUT:
3.33968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 17:42:10) 
-- CODE:
n = int(input("Digite um numero: "))

pi = 0 

while(n >= 1):
	if(n % 2 == 1):
		pi = pi + (4/(2*n-1)) #se for impar 
	else:
		pi = pi - (4/(2*n-1)) #se for par
		
	n = n - 1
print(round(pi, 8))
		
	
-- OUTPUT:
3.33968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 17:42:12) 
-- CODE:
n = int(input("Digite um numero: "))

pi = 0 

while(n >= 1):
	if(n % 2 == 1):
		pi = pi + (4/(2*n-1)) #se for impar 
	else:
		pi = pi - (4/(2*n-1)) #se for par
		
	n = n - 1
print(round(pi, 8))
		
	
-- EXECUTION TIME:
0.27657
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.33968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.09616153
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.19418791
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 17:42:12) 
-- CODE:
n = int(input("Digite um numero: "))

pi = 0 

while(n >= 1):
	if(n % 2 == 1):
		pi = pi + (4/(2*n-1)) #se for impar 
	else:
		pi = pi - (4/(2*n-1)) #se for par
		
	n = n - 1
print(round(pi, 8))
		
	
-- OUTPUT:
3.33968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 17:42:16) 
-- CODE:
n = int(input("Digite um numero: "))

pi = 0 

while(n >= 1):
	if(n % 2 == 1):
		pi = pi + (4/(2*n-1)) #se for impar 
	else:
		pi = pi - (4/(2*n-1)) #se for par
		
	n = n - 1
print(round(pi, 8))
		
	
-- OUTPUT:
3.33968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 17:42:34) 
-- CODE:
n = int(input("Digite um numero: "))

pi = 0 

while(n >= 1):
	if(n % 2 == 1):
		pi = pi + (4/(2*n-1)) #se for impar 
	else:
		pi = pi - (4/(2*n-1)) #se for par
		
	n = n - 1
print(round(pi, 8))
		
	
-- OUTPUT:
3.33968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 17:47:11) 
-- CODE:
n = int(input("Digite um numero: "))

pi = 0 

while(n >= 1):
	if(n % 2 == 1):
		pi = pi + (4/(2*n-1)) #se for impar 
	else:
		pi = pi - (4/(2*n-1)) #se for par
		
	n = n - 1
	
print(round(pi, 8))
		
	
-- EXECUTION TIME:
0.220191
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.33968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.09616153
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.19418791
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 17:47:11) 
-- CODE:
n = int(input("Digite um numero: "))

pi = 0 

while(n >= 1):
	if(n % 2 == 1):
		pi = pi + (4/(2*n-1)) #se for impar 
	else:
		pi = pi - (4/(2*n-1)) #se for par
		
	n = n - 1
	
print(round(pi, 8))
		
	
-- OUTPUT:
3.33968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 17:48:01) 
-- CODE:
n = int(input("Digite um numero: "))

pi = 0 

while(n >= 1):
	if(n % 2 == 1):
		pi = pi + (4/(2*n-1)) #se for impar 
	else:
		pi = pi - (4/(2*n-1)) #se for par
		
	n = n + 1
print(round(pi, 8))
		
	
-- EXECUTION TIME:
369.614
-- ERROR:
Killed

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 11:51:45) 
-- CODE:
n = int(input("Digite um numero: "))
i = 1
soma = 3.0
sinal=+1
while(i< n):
	soma = soma + (sinal*4)/((2*i)*(2*i+1)*(2*i+2))

	i = i + 1
	sinal=-sinal

print(round(soma,8))

-- EXECUTION TIME:
0.176786
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.14155633
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 13:49:03) 
-- CODE:
n = int(input("Digite um numero: "))
i = 1
soma = 3.0
sinal=+1
while(i< n):
	soma = soma + (sinal*4)/((2*i)*(2*i+1)*(2*i+2))

	i = i + 1
	sinal=-sinal

print(round(soma,8))

-- OUTPUT:
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 13:51:48) 
-- CODE:
n = int(input("valor aproximado de pi: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 3

while ( cont < n ):
	# Denominador
	x = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))
	
	
	





-- OUTPUT:
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 13:51:50) 
-- CODE:
n = int(input("valor aproximado de pi: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 3

while ( cont < n ):
	# Denominador
	x = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))
	
	
	





-- EXECUTION TIME:
0.167939
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.14155633
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
