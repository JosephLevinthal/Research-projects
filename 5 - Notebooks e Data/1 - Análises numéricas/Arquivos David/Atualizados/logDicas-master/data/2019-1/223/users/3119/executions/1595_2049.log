== TEST (2019-03-21 16:12:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
X = float(input(int("Qual o valor de X? "))
-- ERROR:
File "XXXX", line 5
    
                                               ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:12:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
X = float(input(int("Qual o valor de X? "))
-- ERROR:
File "XXXX", line 5
    
                                               ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:12:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
X = input(int("Qual o valor de X? "))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    X = input(int("Qual o valor de X? "))
ValueError: invalid literal for int() with base 10: 'Qual o valor de X? '
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:13:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
X = float(input(int("Qual o valor de X? ")))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    X = float(input(int("Qual o valor de X? ")))
ValueError: invalid literal for int() with base 10: 'Qual o valor de X? '
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:13:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
X = input(int("Qual o valor de X? "))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    X = input(int("Qual o valor de X? "))
ValueError: invalid literal for int() with base 10: 'Qual o valor de X? '
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:14:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
X = int(input("Qual o valor de X? "))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    X = input(int("Qual o valor de X? "))
ValueError: invalid literal for int() with base 10: 'Qual o valor de X? '
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:16:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
X = int(input("Qual o valor de X? "))
Y = int(input("Qual o valor de Y? "))

a = X
b = Y
c = a//b
d = a % b

print(a)
-- OUTPUT:
8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:17:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
X = int(input("Qual o valor de X? "))
Y = int(input("Qual o valor de Y? "))

a = X
b = Y
c = a//b
d = a % b

print(a)
print(b)
print(c)
print(d)
-- OUTPUT:
8
5
1
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 16:17:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
X = int(input("Qual o valor de X? "))
Y = int(input("Qual o valor de Y? "))

a = X
b = Y
c = a//b
d = a % b

print(a)
print(b)
print(c)
print(d)
-- EXECUTION TIME:
0.189019
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
8
5
1
3
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
14
2
7
0
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
347
2
173
1
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
