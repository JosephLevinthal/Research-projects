== TEST (2019-04-16 01:29:37) 
-- CODE:
celsius = float(input("Digite valor em Celsius: "))
fahrenheit = float(input("Digite valor em Fahrennheit: "))

if(celsius == "C"):
	C =(5/9)*(fahrenheit-32)
	print(C)
	else:
	F = (9/5)*C+32
	print(F)
	
	
-- ERROR:
File "XXXX", line 7
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 01:29:58) 
-- CODE:
celsius = float(input("Digite valor em Celsius: "))
fahrenheit = float(input("Digite valor em Fahrennheit: "))

if(celsius == "C"):
	C =(5/9)*(fahrenheit-32)
	print(C)
else:
	F = (9/5)*C+32
	print(F)
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    celsius = float(input())
ValueError: could not convert string to float: 'C'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 01:33:29) 
-- CODE:
celsius = float(input("Digite valor em Celsius: "))
fahrenheit = float(input("Digite valor em Fahrennheit: "))

if(celsius == "C"):
	C =(5/9)*(fahrenheit-32)
	print(C)
else:
	F = (9/5)*C+32
	print(F)
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    celsius = float(input())
ValueError: could not convert string to float: 'C'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 01:34:09) 
-- CODE:
celsius = input("Digite valor em Celsius: "))
fahrenheit = input("Digite valor em Fahrennheit: "))

if(celsius == "C"):
	C =(5/9)*(fahrenheit-32)
	print(C)
else:
	F = (9/5)*C+32
	print(F)
	
	
-- ERROR:
File "XXXX", line 1
    celsius = input())
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 01:34:25) 
-- CODE:
celsius = input("Digite valor em Celsius: ")
fahrenheit = input("Digite valor em Fahrennheit: ")

if(celsius == "C"):
	C =(5/9)*(fahrenheit-32)
	print(C)
else:
	F = (9/5)*C+32
	print(F)
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    C =(5/9)*(fahrenheit-32)
TypeError: unsupported operand type(s) for -: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 01:36:12) 
-- CODE:
celsius = input("Digite valor em Celsius: ")
fahrenheit = input("Digite valor em Fahrennheit: ")

if(celsius == "C"):
	formula  = (C =(5/9)*(fahrenheit-32))

else:
	formula = (F = (9/5)*C+32)
	print(formula)
	
	
-- ERROR:
File "XXXX", line 5
    formula  = (C =(5/9)*(fahrenheit-32))
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 01:40:43) 
-- CODE:
celsius = input("Digite valor em Celsius: ")
fahrenheit = input("Digite valor em Fahrennheit: ")

if(celsius == "C"):
	formula  = (5/9)*(fahrenheit-32)

else:
	formula = ((9/5)*celsius+32)
	print(formula)
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    formula  = (5/9)*(fahrenheit-32)
TypeError: unsupported operand type(s) for -: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 01:47:26) 
-- CODE:
temp1 = input("Digite valor: ")
temp2 = input("Digite valor: ")

if(temp1 == "C"):
	formula  = (5/9)*(temp2-32)

else (temp1 == "F"):
	formula = ((9/5)*temp2+32)
	
print(formula)
	
	
-- ERROR:
File "XXXX", line 7
    else (temp1 == "F"):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 01:48:06) 
-- CODE:
temp1 = input("Digite valor: ")
temp2 = input("Digite valor: ")

if(temp1 == "C"):
	formula  = (5/9)*(temp2-32)

else:
	(temp1 == "F")
	formula = ((9/5)*temp2+32)
	
print(formula)
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    formula  = (5/9)*(temp2-32)
TypeError: unsupported operand type(s) for -: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 01:49:43) 
-- CODE:
temp1 = input("Digite valor: ")
temp2 = input("Digite valor: ")

if(temp1 == "C"):
	formula  = ((5/9)*(temp2-32))

else:
	(temp1 == "F")
	formula = ((9/5)*(temp2 + 32))
	
print(formula)
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    formula  = ((5/9)*(temp2-32))
TypeError: unsupported operand type(s) for -: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 01:50:10) 
-- CODE:
temp1 = input("Digite valor: ")
temp2 = input("Digite valor: ")

if(temp1 == "C"):
	formula  = ((5/9)*(temp2-32))

else:
	formula = ((9/5)*(temp2 + 32))
	
print(formula)
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    formula  = ((5/9)*(temp2-32))
TypeError: unsupported operand type(s) for -: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 01:50:41) 
-- CODE:
temp1 = input("Digite valor: ")
temp2 = input("Digite valor: ")

if(temp1 == "C"):
	formula  = ((5/9)*(temp2-32))

else:
	formula = ((9/5)*(temp2 + 32))
	
print(formula)
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    formula  = ((5/9)*(temp2-32))
TypeError: unsupported operand type(s) for -: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 01:54:35) 
-- CODE:
temp1 = input("Digite valor: ")
temp2 = float(input("Digite valor: "))

if(temp1 == "C"):
	formula  = ((5/9)*(temp2 - 32))

else:
	formula = ((9/5)*(temp2 + 32))
	
print(round(formula, 2))
	
	
-- OUTPUT:
160.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 01:55:04) 
-- CODE:
temp1 = input("Digite valor: ")
temp2 = float(input("Digite valor: "))

if(temp1 == "C"):
	formula  = ((5/9)*(temp2 - 32))

else:
	formula = ((9/5)*(temp2 + 32))
	
print(round(formula, 2))
	
	
-- OUTPUT:
160.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 01:55:43) 
-- CODE:
temp1 = input("Digite valor: ")
temp2 = float(input("Digite valor: "))

if(temp1 == "C"):
	formula  = ((5/9)*(temp2 - 32))

else:
	formula = ((9/5)*(temp2 + 32))
	
print(round(formula, 2))
	
	
-- OUTPUT:
160.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 01:57:08) 
-- CODE:
temp1 = input("Digite valor: ")
temp2 = float(input("Digite valor: "))

if(temp1 == "C"):
	formula = ((9/5)*(temp2 + 32))

else:
	formula  = ((5/9)*(temp2 - 32))

print(round(formula, 2))
	
	
-- OUTPUT:
633.6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 01:57:23) 
-- CODE:
temp1 = input("Digite valor: ")
temp2 = float(input("Digite valor: "))

if(temp1 == "C"):
	formula = ((9/5)*(temp2 + 32))

else:
	formula  = ((5/9)*(temp2 - 32))

print(round(formula, 2))
	
	
-- OUTPUT:
633.6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 02:02:00) 
-- CODE:
temp1 = input("Digite valor: ")
temp2 = float(input("Digite valor: "))

if(temp1 == "C"):
	formula  = ((5/9)*(temp2 - 32))

else:
	formula = ((9/5)*(temp2+32))
print(round(formula, 2))
	
	
-- OUTPUT:
160.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 02:02:31) 
-- CODE:
temp1 = input("Digite valor: ")
temp2 = float(input("Digite valor: "))

if(temp1 == "C"):
	formula  = ((5/9)*(temp2 - 32))

else:
	formula = ((9/5)*(temp2+32))
print(round(formula, 2))
	
	
-- OUTPUT:
160.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 02:02:50) 
-- CODE:
temp1 = input("Digite valor: ")
temp2 = float(input("Digite valor: "))

if(temp1 == "F"):
	formula  = ((5/9)*(temp2 - 32))

else:
	formula = ((9/5)*(temp2+32))
print(round(formula, 2))
	
	
-- OUTPUT:
633.6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 02:03:07) 
-- CODE:
temp1 = input("Digite valor: ")
temp2 = float(input("Digite valor: "))

if(temp1 == "F"):
	formula  = ((5/9)*(temp2 - 32))

else:
	formula = ((9/5)*(temp2+32))
print(round(formula, 2))
	
	
-- OUTPUT:
633.6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 02:05:45) 
-- CODE:
temp1 = input("Digite valor: ")
temp2 = float(input("Digite valor: "))

if(temp1 == "F"):
	formula  = ((5/9)*(temp2 - 32))

else:
	formula = ((temp2*(9/5))+32)
print(round(formula, 2))
	
	
-- OUTPUT:
608.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 02:06:00) 
-- CODE:
temp1 = input("Digite valor: ")
temp2 = float(input("Digite valor: "))

if(temp1 == "F"):
	formula  = ((5/9)*(temp2 - 32))

else:
	formula = ((temp2*(9/5))+32)
print(round(formula, 2))
	
	
-- EXECUTION TIME:
0.119503
-- TEST CASE 1:
---- input:
C
320
---- correct output:
608.0
---- user output:
608.0
-- TEST CASE 2:
---- input:
F
320
---- correct output:
160.0
---- user output:
160.0
-- TEST CASE 3:
---- input:
C
0
---- correct output:
32.0
---- user output:
32.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 02:06:41) 
-- CODE:
temp1 = input("Digite valor: ")
temp2 = float(input("Digite valor: "))

if(temp1 == "F"):
	formula  = ((5/9)*(temp2 - 32))

else:
	formula = ((temp2*(9/5))+32)
print(round(formula, 2))
	
	
-- EXECUTION TIME:
0.117639
-- TEST CASE 1:
---- input:
C
320
---- correct output:
608.0
---- user output:
608.0
-- TEST CASE 2:
---- input:
F
320
---- correct output:
160.0
---- user output:
160.0
-- TEST CASE 3:
---- input:
C
0
---- correct output:
32.0
---- user output:
32.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 02:12:08) 
-- CODE:
temp1 = input("Digite valor: ")
temp2 = float(input("Digite valor: "))

if(temp1 == "F"):
	formula  = ((5/9)*(temp2 - 32))

else:
	formula = ((temp2*(9/5))+32)
print(round(formula, 2))
	
	
-- EXECUTION TIME:
0.153869
-- TEST CASE 1:
---- input:
C
320
---- correct output:
608.0
---- user output:
608.0
-- TEST CASE 2:
---- input:
F
320
---- correct output:
160.0
---- user output:
160.0
-- TEST CASE 3:
---- input:
C
0
---- correct output:
32.0
---- user output:
32.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
