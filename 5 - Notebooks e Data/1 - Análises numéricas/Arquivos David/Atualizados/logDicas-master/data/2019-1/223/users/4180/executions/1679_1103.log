== SUBMITION (2019-05-01 15:25:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite um valor para x:"))
a = float(input("digite um valor para a:"))
b = float(input("digite un valor para b:"))

if(b <= a):
	print("Entradas",a,"e",b,"invalidas")
elif(x < a or x > b):
	print(x,"nao pertence ao intervalo",a,",",b)
elif( x >= a and x <= b):
	print(x,"pertence ao intervalo",a,",",b)

-- EXECUTION TIME:
0.131042
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:25:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite um valor para x:"))
a = float(input("digite um valor para a:"))
b = float(input("digite un valor para b:"))

if(b <= a):
	print("Entradas",a,"e",b,"invalidas")
elif(x < a or x > b):
	print(x,"nao pertence ao intervalo",a,",",b)
elif( x >= a and x <= b):
	print(x,"pertence ao intervalo",a,",",b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:08:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite um valor para x:"))
a = float(input("digite um valor para a:"))
b = float(input("digite un valor para b:"))

if(b <= a):
	print("Entradas",a,"e",b,"invalidas")
elif(x < a or x > b):
	print(x,"nao pertence ao intervalo",a,",",b)
elif( x >= a and x <= b):
	print(x,"pertence ao intervalo",a,",",b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:12:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite um valor para x:"))
a = float(input("digite um valor para a:"))
b = float(input("digite un valor para b:"))

if(b <= a):
	print("Entradas",a,"e",b,"invalidas")
elif(x < a or x > b):
	print(x,"nao pertence ao intervalo",a,",",b)
elif( x >= a and x <= b):
	print(x,"pertence ao intervalo",a,",",b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:13:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite um valor para x:"))
a = float(input("digite um valor para a:"))
b = float(input("digite un valor para b:"))

if(b <= a):
	print("Entradas",a,"e",b,"invalidas")
elif(x < a or x > b):
	print(x,"nao pertence ao intervalo",a,",",b)
elif( x >= a and x <= b):
	print(x,"pertence ao intervalo",a,",",b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:13:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite um valor para x:"))
a = float(input("digite um valor para a:"))
b = float(input("digite un valor para b:"))

if(b <= a):
	print("Entradas",a,"e",b,"invalidas")
elif(x < a or x > b):
	print(x,"nao pertence ao intervalo",a,",",b)
elif( x >= a and x <= b):
	print(x,"pertence ao intervalo",a,",",b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
