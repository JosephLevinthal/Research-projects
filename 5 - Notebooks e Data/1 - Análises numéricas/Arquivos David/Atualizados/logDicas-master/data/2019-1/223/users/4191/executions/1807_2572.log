== TEST (2019-06-11 17:38:39) 
-- CODE:
from numpy import *

vetor=array(int(input("...")))
impar=0
for i in range(size(vetor)):
	if(vetor[i]%2!=0):
		impar=impar+1
		
v=zeros(impar, dtype=int)		

for i in range(size(vetor)):
	if(vetor[i]%2!=0):
		vetor[i]=v[i]
		
print(v)		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 17:39:04) 
-- CODE:
from numpy import *

vetor=array((input("..."))
impar=0
for i in range(size(vetor)):
	if(vetor[i]%2!=0):
		impar=impar+1
		
v=zeros(impar, dtype=int)		

for i in range(size(vetor)):
	if(vetor[i]%2!=0):
		vetor[i]=v[i]
		
print(v)		
-- ERROR:
File "XXXX", line 4
    impar=0
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 17:39:11) 
-- CODE:
from numpy import *

vetor=array(input("..."))
impar=0
for i in range(size(vetor)):
	if(vetor[i]%2!=0):
		impar=impar+1
		
v=zeros(impar, dtype=int)		

for i in range(size(vetor)):
	if(vetor[i]%2!=0):
		vetor[i]=v[i]
		
print(v)		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 17:41:22) 
-- CODE:
from numpy import *

vetor=array(input("..."))
impar=0
for i in range(size(vetor)):
	if(vetor[i]%2 != 0):
		impar=impar+1
		
v=zeros(impar, dtype=int)		
d=0
for i in range(size(vetor)):
	if(vetor[i]%2!=0):
		vetor[i]=v[d]
		d=d+1
print(v)		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 17:41:45) 
-- CODE:
from numpy import *

vetor=array(input("..."))
impar=0
for i in range(size(vetor)):
	if(vetor[i]%2 != 0):
		impar=impar+1
		
v=zeros(impar, dtype=int)		
d=0
for i in range(size(vetor)):
	if(vetor[i]%2!=0):
		v[d]=vetor[i]
		d=d+1
print(v)		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 17:42:36) 
-- CODE:
from numpy import *

vetor=array(input("..."))
impar=0
for i in range(size(vetor)):
	if(vetor[i] % 2 != 0):
		impar=impar+1
		
v=zeros(impar, dtype=int)		
d=0
for i in range(size(vetor)):
	if(vetor[i]%2!=0):
		v[d]=vetor[i]
		d=d+1
print(v)		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 17:43:09) 
-- CODE:
from numpy import *

vetor=array(eval(input("...")))
impar=0
for i in range(size(vetor)):
	if(vetor[i] % 2 != 0):
		impar=impar+1
		
v=zeros(impar, dtype=int)		
d=0
for i in range(size(vetor)):
	if(vetor[i]%2!=0):
		v[d]=vetor[i]
		d=d+1
print(v)		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 17:43:21) 
-- CODE:
from numpy import *

vetor=array(eval(input("...")))
impar=0
for i in range(size(vetor)):
	if(vetor[i] % 2 != 0):
		impar=impar+1
		
v=zeros(impar, dtype=int)		
d=0
for i in range(size(vetor)):
	if(vetor[i]%2!=0):
		v[d]=vetor[i]
		d=d+1
print(v)		
-- EXECUTION TIME:
1.09671
-- TEST CASE 1:
---- input:
[75247561,76546316,75713658,97135671,70356874]
---- correct output:
[75247561 97135671]
---- user output:
[75247561 97135671]
-- TEST CASE 2:
---- input:
[13017594,57417542,85024758,12475981,75942785,91875987,29584192,85794217]
---- correct output:
[12475981 75942785 91875987 85794217]
---- user output:
[12475981 75942785 91875987 85794217]
-- TEST CASE 3:
---- input:
[31874903,74902746,23742046]
---- correct output:
[31874903]
---- user output:
[31874903]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
