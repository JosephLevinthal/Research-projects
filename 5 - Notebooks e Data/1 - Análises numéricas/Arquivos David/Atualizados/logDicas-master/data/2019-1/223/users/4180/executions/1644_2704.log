== TEST (2019-04-11 10:50:12) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print("S")
   
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 10:51:20) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print("S")
else :
	print('N')
   
-- EXECUTION TIME:
0.151918
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
N
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
S
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
N
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:51:22) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print("S")
else :
	print('N')
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:53:53) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	float(notadoaluno + 10%)
else :
	print("N")
   
-- ERROR:
File "XXXX", line 3
    float(notadoaluno + 10%)
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:54:21) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	float(notadoaluno + 10%)
	print("S")
else :
	print("N")
   
-- ERROR:
File "XXXX", line 3
    float(notadoaluno + 10%)
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:54:34) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	float(notadoaluno + 0.1)
	print("S")
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 10:54:42) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	float(notadoaluno + 0.1)
	print("S")
else :
	print("N")
   
-- EXECUTION TIME:
0.15537
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
N
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
S
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
N
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:54:44) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	float(notadoaluno + 0.1)
	print("S")
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:54:52) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	float(notadoaluno * 0.1)
	print("S")
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 10:54:56) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	float(notadoaluno * 0.1)
	print("S")
else :
	print("N")
   
-- EXECUTION TIME:
0.168244
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
N
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
S
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
N
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:55:10) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	(notadoaluno * 0.1)
	print("S")
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 10:55:13) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	(notadoaluno * 0.1)
	print("S")
else :
	print("N")
   
-- EXECUTION TIME:
0.177104
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
N
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
S
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
N
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:56:04) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print(notadoaluno * 0.1)
	print("S")
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 10:56:14) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print(notadoaluno * 0.1)
	print("S")
else :
	print("N")
   
-- EXECUTION TIME:
0.191486
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
N
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
0.9
S
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
N
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:56:15) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print(notadoaluno * 0.1)
	print("S")
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:56:35) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print(notadoaluno * 10/100)
	print("S")
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 10:56:42) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print(notadoaluno * 10/100)
	print("S")
else :
	print("N")
   
-- EXECUTION TIME:
0.191907
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
N
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
0.9
S
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
N
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:56:49) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print(notadoaluno * 10/100)
	print("S")
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:56:58) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print(notadoaluno * 10/1000)
	print("S")
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:57:11) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print(notadoaluno * 100/100)
	print("S")
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 10:57:17) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print(notadoaluno * 100/100)
	print("S")
else :
	print("N")
   
-- EXECUTION TIME:
0.228599
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
N
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.0
S
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
N
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:57:19) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print(notadoaluno * 100/100)
	print("S")
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:57:38) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print(notadoaluno * 100/100 + 10%)
	print("S")
else :
	print("N")
   
-- ERROR:
File "XXXX", line 3
    print(notadoaluno * 100/100 + 10%)
                                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:57:50) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print(notadoaluno * 100/100 *0.1)
	print("S")
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 11:04:13) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print(notadoaluno * 1.00 )
	print("S")
else :
	print("N")
   
-- EXECUTION TIME:
0.169584
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
N
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.0
S
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
N
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 11:04:14) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print(notadoaluno * 1.00 )
	print("S")
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 11:04:31) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print(notadoaluno * 1.00 )
	print("S")
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 11:04:37) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print(notadoaluno * 1.00 )
	print("S")
else :
	print("N")
   
-- EXECUTION TIME:
0.178602
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
N
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.0
S
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
N
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 11:06:51) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print(notadoaluno * 0.10 )
	print("S")
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 11:07:05) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print(notadoaluno * 0.10 )
	print("S")
else :
	print("N")
   
-- EXECUTION TIME:
0.172023
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
N
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
0.9
S
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
N
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 11:11:52) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print(notadoaluno * 1.9 )
	print("S")
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 11:12:11) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print(float(notadoaluno * 1.9 ))
	print("S")
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 11:12:16) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print(float(notadoaluno * 1.9 ))
	print("S")
else :
	print("N")
   
-- EXECUTION TIME:
0.254546
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
N
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
17.099999999999998
S
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
N
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 11:12:26) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print(float(notadoaluno * 1.0 ))
	print("S")
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 11:12:35) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print(float(notadoaluno * 1.1 ))
	print("S")
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 11:12:42) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print(float(notadoaluno * 1.1 ))
	print("S")
else :
	print("N")
   
-- EXECUTION TIME:
0.189223
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
N
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
S
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
N
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 11:12:43) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print(float(notadoaluno * 1.1 ))
	print("S")
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 11:13:03) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print(notadoaluno * 1.1 )
	print("S")
else :
	print("N")
   
-- EXECUTION TIME:
0.171729
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
N
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
S
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
N
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 11:13:03) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print(notadoaluno * 1.1 )
	print("S")
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 11:13:04) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print(notadoaluno * 1.1 )
	print("S")
else :
	print("N")
   
-- EXECUTION TIME:
0.233761
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
nota do aluno: N
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
nota do aluno: 9.9
S
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
nota do aluno: N
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 11:13:25) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print(round((notadoaluno * 1.1, 2 )
	print("S")
else :
	print("N")
   
-- EXECUTION TIME:
0.142175
-- ERROR:
  File "/home/codebench/codes/1644/2704/main.py", line 4
    print("S")
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 11:13:26) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print(round((notadoaluno * 1.1, 2 )
	print("S")
else :
	print("N")
   
-- ERROR:
File "XXXX", line 4
    print("S")
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 11:13:42) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print(round(notadoaluno * 1.1, 2 ))
	print("S")
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 11:13:49) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print(round(notadoaluno * 1.1, 2 ))
	print("S")
else :
	print("N")
   
-- EXECUTION TIME:
0.197007
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
N
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
S
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
N
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 11:13:52) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print(round(notadoaluno * 1.1, 2 ))
	print("S")
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 11:14:20) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print(round(notadoaluno * 1.1, 2 ))
	print("S")
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 11:14:53) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print("S")
	print(round(notadoaluno * 1.1, 2 ))
	
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 11:15:02) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print("S")
	print(round(notadoaluno * 1.1, 2 ))
	
else :
	print("N")
   
-- EXECUTION TIME:
0.150882
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
N
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
S
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
N
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 11:15:06) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print("S")
	print(round(notadoaluno * 1.1, 2 ))
	
else :
	print("N")
   
-- EXECUTION TIME:
0.201588
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
N
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
S
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
N
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 11:15:07) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print("S")
	print(round(notadoaluno * 1.1, 2 ))
	
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 11:16:01) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	(notadoaluno * 1.1, 2 )
	print(notadoa, 2("S"))
	
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 11:16:08) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	(notadoaluno * 1.1, 2 )
	print(notadoaluno, 2("S"))
	
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 11:16:18) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	(notadoaluno * 1.1, 2 )
	print(notadoaluno, 2,("S"))
	
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 11:16:32) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	(notadoaluno * 1.1, 2 )
	print(notadoaluno, 2,("S"))
	
else :
	print("N")
   
-- EXECUTION TIME:
0.227465
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
N
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.0 2 S
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
N
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 11:16:34) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	(notadoaluno * 1.1, 2 )
	print(notadoaluno, 2,("S"))
	
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 11:16:50) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	(notadoaluno * 1.1, 2 )
	print(notadoaluno, 2 ("S"))
	
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 11:17:11) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print(round(notadoaluno * 1.1, 2 ))
	
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 11:17:37) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print("S")
	print(round(notadoaluno * 1.1, 2 ))
	
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 11:18:31) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print("S")
	print(round(notadoaluno * 1.1, 2 ))
	
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:29:01) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print("S")
	print(round(notadoaluno * 0.90, 2 ))
	
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 16:30:00) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print("S")
	print(round(notadoaluno + 0.90, 2 ))
	
else :
	print("N")
   
-- EXECUTION TIME:
0.190846
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
N
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
nota do aluno: S
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
nota do aluno: N
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:30:02) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print("S")
	print(round(notadoaluno + 0.90, 2 ))
	
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 16:30:11) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print("S")
	print(round(notadoaluno + 0.90, 2 ))
	
else :
	print("N")
   
-- EXECUTION TIME:
0.194692
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
N
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
S
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
N
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:41:51) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print("S")
	print(round(notadoaluno + 0.90, 2 ))
	
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:42:22) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print("S")
	print(notadoaluno + 0.90)
	
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:42:50) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print("S")
	print(notadoaluno * 0.90)
	
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:43:14) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print("S")
	print(notadoaluno * 10/100)
	
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:43:19) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print("S")
	print(notadoaluno * 10/100)
	
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:43:41) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6):
	print("S")
	print(notadoaluno * 0.1)
	
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:45:17) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6.0):
	print("S")
	print(notadoaluno * 0.1)
	
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:45:43) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6.0):
	print("S")
	print(notadoaluno * 0.95)
	
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:46:00) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6.0):
	print("S")
	print(notadoaluno * 0.95)
	
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:46:16) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6.0):
	print("S")
	print(notadoaluno * 1.0)
	
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:46:27) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6.0):
	print("S")
	print(notadoaluno * 1.6)
	
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:46:36) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6.0):
	print("S")
	print(notadoaluno * 1.1)
	
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 16:46:46) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6.0):
	print("S")
	print(notadoaluno * 1.1)
	
else :
	print("N")
   
-- EXECUTION TIME:
0.148344
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
N
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
S
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
N
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:46:47) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6.0):
	print("S")
	print(notadoaluno * 1.1)
	
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:50:15) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6.0):
	print("S")
	print(notadoaluno * 0.1)
	
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:07:44) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6.0):
	print("S")
	print(notadoaluno + (notadoaluno * 0.1))
	
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 17:07:56) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6.0):
	print("S")
	print(notadoaluno + (notadoaluno * 0.1))
	
else :
	print("N")
   
-- EXECUTION TIME:
0.226786
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
N
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
S
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
N
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:07:57) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6.0):
	print("S")
	print(notadoaluno + (notadoaluno * 0.1))
	
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:08:12) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6.0):
	print("S")
	print(notadoaluno + (notadoaluno * 0.1))
	
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:08:33) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6.0):
	print("S")
	print(notadoaluno + (notadoaluno * 0.1))
	
else :
	print("N")
   
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:09:05) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6.0):
	
print(notadoaluno + (notadoaluno * 0.1))
print("S")
else :
	print("N")
   
-- ERROR:
File "XXXX", line 4
    print(notadoaluno + (notadoaluno * 0.1))
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:09:15) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6.0):
	
print(notadoaluno + (notadoaluno * 0.1)):
print("S")
else :
	print("N")
   
-- ERROR:
File "XXXX", line 4
    print(notadoaluno + (notadoaluno * 0.1)):
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:09:29) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6.0):
print(notadoaluno + (notadoaluno * 0.1))
print("S")
else :
	print("N")
   
-- ERROR:
File "XXXX", line 3
    print(notadoaluno + (notadoaluno * 0.1))
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:09:47) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6.0):
print(notadoaluno + (notadoaluno * 0.1))
print("S")
else :
	print("N")
   
-- ERROR:
File "XXXX", line 3
    print(notadoaluno + (notadoaluno * 0.1))
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:10:07) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6.0):
print(notadoaluno + (notadoaluno * 0.1))
print("S")
else :
	print("N")
   
-- ERROR:
File "XXXX", line 3
    print(notadoaluno + (notadoaluno * 0.1))
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:10:47) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6.0):
print(notadoaluno + (notadoaluno * 0.1))
print("S")
else :
	print("N")
   
-- ERROR:
File "XXXX", line 3
    print(notadoaluno + (notadoaluno * 0.1))
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 17:10:57) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6.0):
print(notadoaluno + (notadoaluno * 0.1))
print("S")
else :
	print("N")
   
-- EXECUTION TIME:
0.210167
-- ERROR:
  File "/home/codebench/codes/1644/2704/main.py", line 3
    print(notadoaluno + (notadoaluno * 0.1))
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:10:58) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6.0):
print(notadoaluno + (notadoaluno * 0.1))
print("S")
else :
	print("N")
   
-- ERROR:
File "XXXX", line 3
    print(notadoaluno + (notadoaluno * 0.1))
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:11:13) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6.0):
	print(notadoaluno + (notadoaluno * 0.1))
   print("S")
else :
	print("N")
   
-- ERROR:
File "XXXX", line 4
    print("S")
             ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:11:16) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6.0):
	print(notadoaluno + (notadoaluno * 0.1))
   print("S")
else :
	print("N")
   
-- ERROR:
File "XXXX", line 4
    print("S")
             ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 17:11:27) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6.0):
	print(notadoaluno + (notadoaluno * 0.1))
print("S")
else :
	print("N")
   
-- EXECUTION TIME:
0.159315
-- ERROR:
  File "/home/codebench/codes/1644/2704/main.py", line 5
    else :
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:11:28) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno >= 6.0):
	print(notadoaluno + (notadoaluno * 0.1))
print("S")
else :
	print("N")
   
-- ERROR:
File "XXXX", line 5
    else :
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:12:08) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
if (notadoaluno 0>=10):
	print(notadoaluno + (notadoaluno * 0.1))
print("S")
else :
	print("N")
   
-- ERROR:
File "XXXX", line 2
    if (notadoaluno 0>=10):
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:24:25) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
bonus = input("bonificacao
if (bonus == "S"):				
				  
	print(nota + (nota * 0.1))
				  
else:
				  print(nota)
				  
				  
   
-- ERROR:
File "XXXX", line 2
    bonus = input("bonificacao
                             ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:24:50) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
bonus = input("bonificacao")
if (bonus == "S"):				
				  
	print(nota + (nota * 0.1))
				  
else:
				  print(nota)
				  
				  
   
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(nota + (nota * 0.1))
NameError: name 'nota' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 08:25:05) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
bonus = input("bonificacao")
if (bonus == "S"):				
				  
	print(nota + (nota * 0.1))
				  
else:
				  print(nota)
				  
				  
   
-- EXECUTION TIME:
0.15831
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/2704/main.py", line 5, in <module>
    print(nota + (nota * 0.1))
NameError: name 'nota' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:26:24) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
bonus = input("bonificacao")
if (bonus == "S"):
	print( notadoaluno + ( notadoaluno * 0.1)
					  				  
else:
				  print(notadoaluno)
				  
				  
   
-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:26:28) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
bonus = input("bonificacao")
if (bonus == "S"):
	print( notadoaluno + ( notadoaluno * 0.1)
					  				  
else:
				  print(notadoaluno)
				  
				  
   
-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 08:26:28) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
bonus = input("bonificacao")
if (bonus == "S"):
	print( notadoaluno + ( notadoaluno * 0.1)
					  				  
else:
				  print(notadoaluno)
				  
				  
   
-- EXECUTION TIME:
0.209968
-- ERROR:
  File "/home/codebench/codes/1644/2704/main.py", line 6
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 08:26:28) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
bonus = input("bonificacao")
if (bonus == "S"):
	print( notadoaluno + ( notadoaluno * 0.1)
					  				  
else:
				  print(notadoaluno)
				  
				  
   
-- EXECUTION TIME:
0.138394
-- ERROR:
  File "/home/codebench/codes/1644/2704/main.py", line 6
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:26:29) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
bonus = input("bonificacao")
if (bonus == "S"):
	print( notadoaluno + ( notadoaluno * 0.1)
					  				  
else:
				  print(notadoaluno)
				  
				  
   
-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 08:26:38) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
bonus = input("bonificacao")
if (bonus == "S"):
	print( notadoaluno + ( notadoaluno * 0.1)
					  				  
else:
				  print(notadoaluno)
				  
				  
   
-- EXECUTION TIME:
0.184366
-- ERROR:
  File "/home/codebench/codes/1644/2704/main.py", line 6
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:26:48) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
bonus = input("bonificacao")
if (bonus == "S"):
	print( notadoaluno + ( notadoaluno * 0.1)
					  				  
else:
			print(notadoaluno)
				  
				  
   
-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:27:12) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
bonus = input("bonificacao:")
if (bonus == "S"):
	print( notadoaluno + ( notadoaluno * 0.1)
					  				  
else:
			print(notadoaluno)
				  
				  
   
-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:27:30) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
bonus = input("bonificacao:")
if (bonus == "S"):
	print( notadoaluno + ( notadoaluno * 0.1)
					  				  
else:
			print(notadoaluno)
				  
				  
   
-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 08:27:35) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
bonus = input("bonificacao:")
if (bonus == "S"):
	print( notadoaluno + ( notadoaluno * 0.1)
					  				  
else:
			print(notadoaluno)
				  
				  
   
-- EXECUTION TIME:
0.194529
-- ERROR:
  File "/home/codebench/codes/1644/2704/main.py", line 6
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:27:37) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
bonus = input("bonificacao:")
if (bonus == "S"):
	print( notadoaluno + ( notadoaluno * 0.1)
					  				  
else:
			print(notadoaluno)
				  
				  
   
-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:27:51) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
bonus = input("bonificacao:")
if (bonus == "S"):
	print( notadoaluno + ( notadoaluno * 0.1)
					  				  
else:
			print(notadoaluno)
				  
				  
   
-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:28:12) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
bonus = input("bonificacao:")
if (bonus == "S"):
	print( notadoaluno + ( notadoaluno * 0.1)
					  				  
else:
	print(notadoaluno)
				  
				  
   
-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:28:26) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
bonus = input("bonificacao:")
if (bonus == "S"):
	print( notadoaluno + ( notadoaluno * 0.1)
					  				  
else:
	print(notadoaluno)
				  
				  
   
-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:28:28) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
bonus = input("bonificacao:")
if (bonus == "S"):
	print( notadoaluno + ( notadoaluno * 0.1)
					  				  
else:
	print(notadoaluno)
				  
				  
   
-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:28:29) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
bonus = input("bonificacao:")
if (bonus == "S"):
	print( notadoaluno + ( notadoaluno * 0.1)
					  				  
else:
	print(notadoaluno)
				  
				  
   
-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:28:29) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
bonus = input("bonificacao:")
if (bonus == "S"):
	print( notadoaluno + ( notadoaluno * 0.1)
					  				  
else:
	print(notadoaluno)
				  
				  
   
-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:28:29) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
bonus = input("bonificacao:")
if (bonus == "S"):
	print( notadoaluno + ( notadoaluno * 0.1)
					  				  
else:
	print(notadoaluno)
				  
				  
   
-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:28:47) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
bonus = input("bonificacao:")
if (bonus == "S"):
	print( notadoaluno + ( notadoaluno * 0.1)
					  				  
else:
	print(notadoaluno)
				  
				  
   
-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:29:15) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
bonus = input("bonificacao:")
if (bonus == "S"):
	print( notadoaluno + ( notadoaluno * 0.1)
					  				  
else:
	 print(notadoaluno)
				  
				  
   
-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:29:19) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
bonus = input("bonificacao:")
if (bonus == "S"):
	print( notadoaluno + ( notadoaluno * 0.1)
					  				  
else:
	  print(notadoaluno)
				  
				  
   
-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:29:23) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
bonus = input("bonificacao:")
if (bonus == "S"):
	print( notadoaluno + ( notadoaluno * 0.1)
					  				  
else:
	   print(notadoaluno)
				  
				  
   
-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 08:29:39) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
bonus = input("bonificacao:")
if (bonus == "S"):
	print( notadoaluno + ( notadoaluno * 0.1)
					  				  
else:
	   print(notadoaluno)
				  
				  
   
-- EXECUTION TIME:
0.173296
-- ERROR:
  File "/home/codebench/codes/1644/2704/main.py", line 6
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:29:52) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
bonus = input("bonificacao:")
if (bonus == "S"):
	print( notadoaluno + ( notadoaluno * 0.1))
					  				  
else:
	   print(notadoaluno)
				  
				  
   
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 08:30:07) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
bonus = input("bonificacao:")
if (bonus == "S"):
	print( notadoaluno + ( notadoaluno * 0.1))
					  				  
else:
	   print(notadoaluno)
				  
				  
   
-- EXECUTION TIME:
0.172868
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:30:32) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
bonus = input("bonificacao:")
if (bonus == "S"):
	print( notadoaluno + ( notadoaluno * 0.1))
					  				  
else:
	print(notadoaluno)
	  
				  
				  
   
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:05:28) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
bonus = input("bonificacao:")
if (bonus == "S"):
	print( notadoaluno + ( notadoaluno * 0.1))
					  				  
else:
	print(notadoaluno)
	  
				  
				  
   
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:06:05) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
bonus = input("bonificacao:")
if (bonus == "S"):
	print( notadoaluno + ( notadoaluno * 0.1))
					  				  
else:
	print(notadoaluno)
	  
				  
				  
   
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:06:20) 
-- CODE:
notadoaluno = float(input("nota do aluno: "))
bonus = input("bonificacao:")
if (bonus == "S"):
	print( notadoaluno + ( notadoaluno * 0.1))
					  				  
else:
	print(notadoaluno)
	  
				  
				  
   
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
