== TEST (2019-04-12 20:44:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v1=float(input("inicial: "))
ang=radians(float(input("angulo: "))
d=float(input("distancia: "))
g=9.8				
r=(((v1)**2 )* sin(2* ang))/g)
if(abs(D - R)<= 0.1):
	print("sim")
else:
	print("nao")
-- ERROR:
File "XXXX", line 7
    d=float(input())
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 20:45:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v1=float(input("inicial: "))
ang=radians(float(input("angulo: "))
d=float(input("distancia: "))
g=9.8				
d=(((v1)**2 )* sin(2* ang))/g)
if(abs(D - R)<= 0.1):
	print("sim")
else:
	print("nao")
-- ERROR:
File "XXXX", line 7
    d=float(input())
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 20:45:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v1=float(input("inicial: "))
ang=radians(float(input("angulo: "))
g=float(input("distancia: "))
g=9.8				
R=(((v1)**2 )* sin(2* ang))/g)
if(abs(D - R)<= 0.1):
	print("sim")
else:
	print("nao")
-- ERROR:
File "XXXX", line 7
    g=float(input())
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 20:46:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v1=float(input("inicial: "))
ang=radians(float(input("angulo: ")))
D=float(input("distancia: "))
g=9.8				
R=(((v1)**2 )* sin(2* ang))/g)
if(abs(D - R)<= 0.1):
	print("sim")
else:
	print("nao")
-- ERROR:
File "XXXX", line 9
    R=(((v1)**2 )* sin(2* ang))/g)
                                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 20:47:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v1=float(input("inicial: "))
ang=radians(float(input("angulo: ")))
D=float(input("distancia: "))
g=9.8				
R=((((v1)**2 )* sin(2* ang))/(g))
if(abs(D - R)<= 0.1):
	print("sim")
else:
	print("nao")
-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-12 20:48:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v1=float(input("inicial: "))
ang=radians(float(input("angulo: ")))
D=float(input("distancia: "))
g=9.8				
R=((((v1)**2 )* sin(2* ang))/(g))
if(abs(D - R)<= 0.1):
	print("sim")
else:
	print("nao")
-- EXECUTION TIME:
0.13131
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
