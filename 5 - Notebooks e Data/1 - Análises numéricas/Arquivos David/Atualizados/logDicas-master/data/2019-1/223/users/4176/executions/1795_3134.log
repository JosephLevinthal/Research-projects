== TEST (2019-05-30 16:40:43) 
-- CODE:
from numpy import*

vet = array(eval(input("Digite: ")))

#numerador é a soma de cada elemento do vetor ao quadrado
# denominador é a quantidade de elementos do vetor

posi = 0
vt= posi - 1

while (posi < size(vet)):
	posi += 1
md = (vt**2/size(vet))**0.5

print(md)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 16:41:20) 
-- CODE:
from numpy import*

vet = array(eval(input("Digite: ")))

#numerador é a soma de cada elemento do vetor ao quadrado
# denominador é a quantidade de elementos do vetor

posi = 0
vt= posi - 1

while (posi < size(vet)):
	posi += 1
md = (vt**2/size(vet))**0.5

print(round(md,2)

-- ERROR:
File "XXXX", line 16
    
                     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 16:41:28) 
-- CODE:
from numpy import*

vet = array(eval(input("Digite: ")))

#numerador é a soma de cada elemento do vetor ao quadrado
# denominador é a quantidade de elementos do vetor

posi = 0
vt= posi - 1

while (posi < size(vet)):
	posi += 1
md = (vt**2/size(vet))**0.5

print(round(md, 2)

-- ERROR:
File "XXXX", line 16
    
                      ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 16:41:46) 
-- CODE:
from numpy import*

vet = array(eval(input("Digite: ")))

#numerador é a soma de cada elemento do vetor ao quadrado
# denominador é a quantidade de elementos do vetor

posi = 0
vt= posi - 1

while (posi < size(vet)):
	posi += 1
md = (vt**2/size(vet))**0.5

print(round(md), 2)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 16:42:08) 
-- CODE:
from numpy import*

vet = array(eval(input("Digite: ")))

#numerador é a soma de cada elemento do vetor ao quadrado
# denominador é a quantidade de elementos do vetor

posi = 0
vt= posi - 1

while (posi < size(vet)):
	posi += 1
md = (vt**2/size(vet))**0.5

print(round(md, 2)

-- ERROR:
File "XXXX", line 16
    
                      ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 16:42:45) 
-- CODE:
from numpy import*

vet = array(eval(input("Digite: ")))

#numerador é a soma de cada elemento do vetor ao quadrado
# denominador é a quantidade de elementos do vetor

posi = 0
vt= posi - 1

while (posi < size(vet)):
	posi += 1
md = round((vt**2/size(vet))**0.5),2

print(md)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 16:42:56) 
-- CODE:
from numpy import*

vet = array(eval(input("Digite: ")))

#numerador é a soma de cada elemento do vetor ao quadrado
# denominador é a quantidade de elementos do vetor

posi = 0
vt= posi - 1

while (posi < size(vet)):
	posi += 1
md = round((vt**2/size(vet))**0.5),2

print(md)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 16:44:00) 
-- CODE:
from numpy import*

vet = array(eval(input("Digite: ")))

#numerador é a soma de cada elemento do vetor ao quadrado
# denominador é a quantidade de elementos do vetor

posi = 0
vt= posi - 1

while (posi < size(vet)):
	posi += 1
	md = (vt**2/size(vet))**0.5
md += md

print(md)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 16:46:15) 
-- CODE:
from numpy import*

vet = array(eval(input("Digite: ")))

#numerador é a soma de cada elemento do vetor ao quadrado
# denominador é a quantidade de elementos do vetor

posi = 0
vt= posi - 1

while (posi < size(vet)):
	posi += 1
	md = (vt**2/size(vet))**0.5
	
md += md

print(md)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 16:53:58) 
-- CODE:
from numpy import*

vet = array(eval(input("Digite: ")))

#numerador é a soma de cada elemento do vetor ao quadrado
# denominador é a quantidade de elementos do vetor

posi = 0
vt= posi - 1

while (posi < size(vet)):
	posi += 1
	md = (vt**2/size(vet))**0.5
	
md += md

print(md)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 16:54:22) 
-- CODE:
from numpy import*

vet = array(eval(input("Digite: ")))

#numerador é a soma de cada elemento do vetor ao quadrado
# denominador é a quantidade de elementos do vetor

posi = 0
vt= posi - 1

while (posi < size(vet)):
	posi += 1
	md = (vt**2/size(vet))**0.5
	
md += md

print(md)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
