== TEST (2019-07-02 16:13:26) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

z = zeros(x)

for k in range(i):
	for l in range(j):
		z[k] = x[k,l]
		
		if z[k] == max[z]:
			g = z[k]
			
print(g)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 16:13:52) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

z = zeros(size(x))

for k in range(i):
	for l in range(j):
		z[k] = x[k,l]
		
		if z[k] == max[z]:
			g = z[k]
			
print(g)
-- EXECUTION TIME:
1.25475
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1871/1727/main.py", line 15, in <module>
    if z[k] == max[z]:
TypeError: 'builtin_function_or_method' object is not subscriptable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:13:52) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

z = zeros(size(x))

for k in range(i):
	for l in range(j):
		z[k] = x[k,l]
		
		if z[k] == max[z]:
			g = z[k]
			
print(g)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 16:14:27) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

z = zeros(size(x))

for k in range(i):
	for l in range(j):
		z[l] = x[k,l]
		
		if z[l] == max[z]:
			g = z[k]
			
print(g)
-- EXECUTION TIME:
0.96073
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1871/1727/main.py", line 15, in <module>
    if z[l] == max[z]:
TypeError: 'builtin_function_or_method' object is not subscriptable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:15:03) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

z = zeros(size(x))

for k in range(i):
	for l in range(j):
		z[l] = x[k,l]
		
		if z[l] == max[z]:
			g = z[k]
			
print(g)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:15:31) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

z = zeros(size(x))

for k in range(i):
	for l in range(j):
		z[l] = x[k,l]
		
		print(z)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:16:17) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

z = zeros(size(x),size(x))

for k in range(i):
	for l in range(j):
		z[k,l] = x[k,l]
		
		print(z)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:16:37) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

z = zeros((size(x),size(x)))

for k in range(i):
	for l in range(j):
		z[k,l] = x[k,l]
		
		print(z)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:17:42) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

z = zeros(x)

for k in range(i):
	for l in range(j):
		if x[k,l] == max(x):
			g = max(x)
		
print(g)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:17:44) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

z = zeros(x)

for k in range(i):
	for l in range(j):
		if x[k,l] == max(x):
			g = max(x)
		
print(g)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 16:17:46) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

z = zeros(x)

for k in range(i):
	for l in range(j):
		if x[k,l] == max(x):
			g = max(x)
		
print(g)
-- EXECUTION TIME:
0.943859
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1871/1727/main.py", line 9, in <module>
    z = zeros(x)
TypeError: only integer scalar arrays can be converted to a scalar index

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:17:52) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

for k in range(i):
	for l in range(j):
		if x[k,l] == max(x):
			g = max(x)
		
print(g)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 16:18:27) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

for k in range(i):
	for l in range(j):
		if x[k,l] == max(x)[l]:
			g = max(x)
		
print(g)
-- EXECUTION TIME:
1.09711
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1871/1727/main.py", line 11, in <module>
    if x[k,l] == max(x)[l]:
ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:18:28) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

for k in range(i):
	for l in range(j):
		if x[k,l] == max(x)[l]:
			g = max(x)
		
print(g)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 16:18:43) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

for k in range(i):
	for l in range(j):
		if x[k,:] == max(x):
			g = max(x)
		
print(g)
-- EXECUTION TIME:
1.10399
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1871/1727/main.py", line 11, in <module>
    if x[k,:] == max(x):
ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:18:44) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

for k in range(i):
	for l in range(j):
		if x[k,:] == max(x):
			g = max(x)
		
print(g)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:19:02) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

print(i,j)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:23:29) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = x[:,1]

print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:24:08) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = x[0,:]
b = x[1,:]
c = x[2,:]

print(a,b,c)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:24:35) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = x[0,:]
b = x[1,:]
c = x[2,:]

print(max(a))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:24:42) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = x[0,:]
b = x[1,:]
c = x[2,:]

print(max(a))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 16:26:33) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b)
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a)
	print(max(b))
else:
	print(max(c))
-- EXECUTION TIME:
0.814796
-- ERROR:
  File "/home/codebench/codes/1871/1727/main.py", line 13
    if max(a) > max(b) > max(c) or max(a) > max(c) > max(b)
                                                          ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:26:53) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b)
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a)
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(c)
-- ERROR:
File "XXXX", line 13
    if max(a) > max(b) > max(c) or max(a) > max(c) > max(b)
                                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 16:27:02) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b)
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a)
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(c):
	print(max(c))
-- EXECUTION TIME:
0.878528
-- ERROR:
  File "/home/codebench/codes/1871/1727/main.py", line 13
    if max(a) > max(b) > max(c) or max(a) > max(c) > max(b)
                                                          ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:27:04) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b)
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a)
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(c):
	print(max(c))
-- ERROR:
File "XXXX", line 13
    if max(a) > max(b) > max(c) or max(a) > max(c) > max(b)
                                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 16:27:14) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(c):
	print(max(c))
-- EXECUTION TIME:
1.1778
-- TEST CASE 1:
---- input:
[[3.0,7.8,3.1,1.4],[0.9,3.5,0.4,0.2],[8.9,2.8,2.1,6.6],[5.1,3.1,8.4,3.8]]
---- correct output:
8.9
---- user output:

-- TEST CASE 2:
---- input:
[[7.4,7.1,6.8,3.7,3.7],[8.5,3.6,8.7,3.3,7.9],[7.6,1.9,7.0,8.3,5.1],[9.9,9.8,2.8,3.2,0.3],[6.0,5.7,2.6,7.1,8.1],[0.1,5.1,8.3,9.8,9.1]]
---- correct output:
9.9
---- user output:
8.7
-- TEST CASE 3:
---- input:
[[8.1,2.2,4.4],[2.5,7.9,3.5],[7.2,2.3,4.3],[2.3,0.3,8.1],[7.0,0.2,7.1]]
---- correct output:
8.1
---- user output:
8.1
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:27:30) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(c):
	print(max(c))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:27:40) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(c):
	print(max(c))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:28:54) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = x[:,0]
b = x[:,1]
c = x[:,2]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(c):
	print(max(c))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:29:07) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = x[:,0]
b = x[:,1]
c = x[:,2]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(c):
	print(max(c))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:29:37) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(c):
	print(max(c))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 16:31:24) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(c):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c)
	print(max(a))
elif max(a) == max(c) and max(c) > max(b)
	print(max(c))
elif max(b) == max(c) and max(b) > max(a)
-- EXECUTION TIME:
0.795488
-- ERROR:
  File "/home/codebench/codes/1871/1727/main.py", line 19
    elif max(a) == max(b) and max(b) > max(c)
                                            ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:31:31) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(c):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c)
	print(max(a))
elif max(a) == max(c) and max(c) > max(b)
	print(max(c))
elif max(b) == max(c) and max(b) > max(a)
	print(max(b))
-- ERROR:
File "XXXX", line 19
    elif max(a) == max(b) and max(b) > max(c)
                                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:31:35) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(c):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c):
	print(max(a))
elif max(a) == max(c) and max(c) > max(b):
	print(max(c))
elif max(b) == max(c) and max(b) > max(a):
	print(max(b))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 16:31:39) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(c):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c):
	print(max(a))
elif max(a) == max(c) and max(c) > max(b):
	print(max(c))
elif max(b) == max(c) and max(b) > max(a):
	print(max(b))
-- EXECUTION TIME:
1.08174
-- TEST CASE 1:
---- input:
[[3.0,7.8,3.1,1.4],[0.9,3.5,0.4,0.2],[8.9,2.8,2.1,6.6],[5.1,3.1,8.4,3.8]]
---- correct output:
8.9
---- user output:

-- TEST CASE 2:
---- input:
[[7.4,7.1,6.8,3.7,3.7],[8.5,3.6,8.7,3.3,7.9],[7.6,1.9,7.0,8.3,5.1],[9.9,9.8,2.8,3.2,0.3],[6.0,5.7,2.6,7.1,8.1],[0.1,5.1,8.3,9.8,9.1]]
---- correct output:
9.9
---- user output:
8.7
-- TEST CASE 3:
---- input:
[[8.1,2.2,4.4],[2.5,7.9,3.5],[7.2,2.3,4.3],[2.3,0.3,8.1],[7.0,0.2,7.1]]
---- correct output:
8.1
---- user output:
8.1
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:31:40) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(c):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c):
	print(max(a))
elif max(a) == max(c) and max(c) > max(b):
	print(max(c))
elif max(b) == max(c) and max(b) > max(a):
	print(max(b))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 16:32:05) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(c):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c):
	print(max(a))
elif max(a) == max(c) and max(c) > max(b):
	print(max(c))
elif max(b) == max(c) and max(b) > max(a):
	print(max(b))
elif max(a) == max(b) == max(c):
	print(max(a))
-- EXECUTION TIME:
1.09828
-- TEST CASE 1:
---- input:
[[3.0,7.8,3.1,1.4],[0.9,3.5,0.4,0.2],[8.9,2.8,2.1,6.6],[5.1,3.1,8.4,3.8]]
---- correct output:
8.9
---- user output:

-- TEST CASE 2:
---- input:
[[7.4,7.1,6.8,3.7,3.7],[8.5,3.6,8.7,3.3,7.9],[7.6,1.9,7.0,8.3,5.1],[9.9,9.8,2.8,3.2,0.3],[6.0,5.7,2.6,7.1,8.1],[0.1,5.1,8.3,9.8,9.1]]
---- correct output:
9.9
---- user output:
8.7
-- TEST CASE 3:
---- input:
[[8.1,2.2,4.4],[2.5,7.9,3.5],[7.2,2.3,4.3],[2.3,0.3,8.1],[7.0,0.2,7.1]]
---- correct output:
8.1
---- user output:
8.1
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:32:06) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(c):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c):
	print(max(a))
elif max(a) == max(c) and max(c) > max(b):
	print(max(c))
elif max(b) == max(c) and max(b) > max(a):
	print(max(b))
elif max(a) == max(b) == max(c):
	print(max(a))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 16:32:48) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(b):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c):
	print(max(a))
elif max(a) == max(c) and max(c) > max(b):
	print(max(c))
elif max(b) == max(c) and max(b) > max(a):
	print(max(b))
elif max(a) == max(b) == max(c):
	print(max(a))
-- EXECUTION TIME:
1.17268
-- TEST CASE 1:
---- input:
[[3.0,7.8,3.1,1.4],[0.9,3.5,0.4,0.2],[8.9,2.8,2.1,6.6],[5.1,3.1,8.4,3.8]]
---- correct output:
8.9
---- user output:
8.9
-- TEST CASE 2:
---- input:
[[7.4,7.1,6.8,3.7,3.7],[8.5,3.6,8.7,3.3,7.9],[7.6,1.9,7.0,8.3,5.1],[9.9,9.8,2.8,3.2,0.3],[6.0,5.7,2.6,7.1,8.1],[0.1,5.1,8.3,9.8,9.1]]
---- correct output:
9.9
---- user output:
8.7
-- TEST CASE 3:
---- input:
[[8.1,2.2,4.4],[2.5,7.9,3.5],[7.2,2.3,4.3],[2.3,0.3,8.1],[7.0,0.2,7.1]]
---- correct output:
8.1
---- user output:
8.1
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 16:34:45) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(b):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c) or max(a) == max(b) and max(a) > max(c):
	print(max(a))
elif max(a) == max(c) and max(c) > max(b) or max(a) == max(c) and max(a) > max(b):
	print(max(c))
elif max(b) == max(c) and max(b) > max(a) or max(b) == max(c) and max(c) > max(a):
	print(max(b))
elif max(a) == max(b) == max(c):
	print(max(a))
-- EXECUTION TIME:
1.18582
-- TEST CASE 1:
---- input:
[[3.0,7.8,3.1,1.4],[0.9,3.5,0.4,0.2],[8.9,2.8,2.1,6.6],[5.1,3.1,8.4,3.8]]
---- correct output:
8.9
---- user output:
8.9
-- TEST CASE 2:
---- input:
[[7.4,7.1,6.8,3.7,3.7],[8.5,3.6,8.7,3.3,7.9],[7.6,1.9,7.0,8.3,5.1],[9.9,9.8,2.8,3.2,0.3],[6.0,5.7,2.6,7.1,8.1],[0.1,5.1,8.3,9.8,9.1]]
---- correct output:
9.9
---- user output:
8.7
-- TEST CASE 3:
---- input:
[[8.1,2.2,4.4],[2.5,7.9,3.5],[7.2,2.3,4.3],[2.3,0.3,8.1],[7.0,0.2,7.1]]
---- correct output:
8.1
---- user output:
8.1
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 16:35:03) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(b):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c) or max(a) == max(b) and max(a) > max(c):
	print(max(a))
elif max(a) == max(c) and max(c) > max(b) or max(a) == max(c) and max(a) > max(b):
	print(max(c))
elif max(b) == max(c) and max(b) > max(a) or max(b) == max(c) and max(c) > max(a):
	print(max(b))
elif max(a) == max(b) == max(c):
	print(max(a))
-- EXECUTION TIME:
2.93104
-- TEST CASE 1:
---- input:
[[3.0,7.8,3.1,1.4],[0.9,3.5,0.4,0.2],[8.9,2.8,2.1,6.6],[5.1,3.1,8.4,3.8]]
---- correct output:
8.9
---- user output:
8.9
-- TEST CASE 2:
---- input:
[[7.4,7.1,6.8,3.7,3.7],[8.5,3.6,8.7,3.3,7.9],[7.6,1.9,7.0,8.3,5.1],[9.9,9.8,2.8,3.2,0.3],[6.0,5.7,2.6,7.1,8.1],[0.1,5.1,8.3,9.8,9.1]]
---- correct output:
9.9
---- user output:
8.7
-- TEST CASE 3:
---- input:
[[8.1,2.2,4.4],[2.5,7.9,3.5],[7.2,2.3,4.3],[2.3,0.3,8.1],[7.0,0.2,7.1]]
---- correct output:
8.1
---- user output:
8.7
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 16:35:04) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(b):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c) or max(a) == max(b) and max(a) > max(c):
	print(max(a))
elif max(a) == max(c) and max(c) > max(b) or max(a) == max(c) and max(a) > max(b):
	print(max(c))
elif max(b) == max(c) and max(b) > max(a) or max(b) == max(c) and max(c) > max(a):
	print(max(b))
elif max(a) == max(b) == max(c):
	print(max(a))
-- EXECUTION TIME:
1.90392
-- TEST CASE 1:
---- input:
[[3.0,7.8,3.1,1.4],[0.9,3.5,0.4,0.2],[8.9,2.8,2.1,6.6],[5.1,3.1,8.4,3.8]]
---- correct output:
8.9
---- user output:
8.9
-- TEST CASE 2:
---- input:
[[7.4,7.1,6.8,3.7,3.7],[8.5,3.6,8.7,3.3,7.9],[7.6,1.9,7.0,8.3,5.1],[9.9,9.8,2.8,3.2,0.3],[6.0,5.7,2.6,7.1,8.1],[0.1,5.1,8.3,9.8,9.1]]
---- correct output:
9.9
---- user output:
8.7
-- TEST CASE 3:
---- input:
[[8.1,2.2,4.4],[2.5,7.9,3.5],[7.2,2.3,4.3],[2.3,0.3,8.1],[7.0,0.2,7.1]]
---- correct output:
8.1
---- user output:
8.7
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 16:35:06) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(b):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c) or max(a) == max(b) and max(a) > max(c):
	print(max(a))
elif max(a) == max(c) and max(c) > max(b) or max(a) == max(c) and max(a) > max(b):
	print(max(c))
elif max(b) == max(c) and max(b) > max(a) or max(b) == max(c) and max(c) > max(a):
	print(max(b))
elif max(a) == max(b) == max(c):
	print(max(a))
-- EXECUTION TIME:
5.7319
-- TEST CASE 1:
---- input:
[[3.0,7.8,3.1,1.4],[0.9,3.5,0.4,0.2],[8.9,2.8,2.1,6.6],[5.1,3.1,8.4,3.8]]
---- correct output:
8.9
---- user output:
8.7
-- TEST CASE 2:
---- input:
[[7.4,7.1,6.8,3.7,3.7],[8.5,3.6,8.7,3.3,7.9],[7.6,1.9,7.0,8.3,5.1],[9.9,9.8,2.8,3.2,0.3],[6.0,5.7,2.6,7.1,8.1],[0.1,5.1,8.3,9.8,9.1]]
---- correct output:
9.9
---- user output:
8.7
-- TEST CASE 3:
---- input:
[[8.1,2.2,4.4],[2.5,7.9,3.5],[7.2,2.3,4.3],[2.3,0.3,8.1],[7.0,0.2,7.1]]
---- correct output:
8.1
---- user output:
8.1
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 16:35:07) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(b):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c) or max(a) == max(b) and max(a) > max(c):
	print(max(a))
elif max(a) == max(c) and max(c) > max(b) or max(a) == max(c) and max(a) > max(b):
	print(max(c))
elif max(b) == max(c) and max(b) > max(a) or max(b) == max(c) and max(c) > max(a):
	print(max(b))
elif max(a) == max(b) == max(c):
	print(max(a))
-- EXECUTION TIME:
9.24166
-- TEST CASE 1:
---- input:
[[3.0,7.8,3.1,1.4],[0.9,3.5,0.4,0.2],[8.9,2.8,2.1,6.6],[5.1,3.1,8.4,3.8]]
---- correct output:
8.9
---- user output:
8.7
-- TEST CASE 2:
---- input:
[[7.4,7.1,6.8,3.7,3.7],[8.5,3.6,8.7,3.3,7.9],[7.6,1.9,7.0,8.3,5.1],[9.9,9.8,2.8,3.2,0.3],[6.0,5.7,2.6,7.1,8.1],[0.1,5.1,8.3,9.8,9.1]]
---- correct output:
9.9
---- user output:
8.1
-- TEST CASE 3:
---- input:
[[8.1,2.2,4.4],[2.5,7.9,3.5],[7.2,2.3,4.3],[2.3,0.3,8.1],[7.0,0.2,7.1]]
---- correct output:
8.1
---- user output:
8.1
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 16:35:08) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(b):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c) or max(a) == max(b) and max(a) > max(c):
	print(max(a))
elif max(a) == max(c) and max(c) > max(b) or max(a) == max(c) and max(a) > max(b):
	print(max(c))
elif max(b) == max(c) and max(b) > max(a) or max(b) == max(c) and max(c) > max(a):
	print(max(b))
elif max(a) == max(b) == max(c):
	print(max(a))
-- EXECUTION TIME:
9.57429
-- TEST CASE 1:
---- input:
[[3.0,7.8,3.1,1.4],[0.9,3.5,0.4,0.2],[8.9,2.8,2.1,6.6],[5.1,3.1,8.4,3.8]]
---- correct output:
8.9
---- user output:
8.7
-- TEST CASE 2:
---- input:
[[7.4,7.1,6.8,3.7,3.7],[8.5,3.6,8.7,3.3,7.9],[7.6,1.9,7.0,8.3,5.1],[9.9,9.8,2.8,3.2,0.3],[6.0,5.7,2.6,7.1,8.1],[0.1,5.1,8.3,9.8,9.1]]
---- correct output:
9.9
---- user output:
8.1
-- TEST CASE 3:
---- input:
[[8.1,2.2,4.4],[2.5,7.9,3.5],[7.2,2.3,4.3],[2.3,0.3,8.1],[7.0,0.2,7.1]]
---- correct output:
8.1
---- user output:
8.9
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 16:35:11) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(b):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c) or max(a) == max(b) and max(a) > max(c):
	print(max(a))
elif max(a) == max(c) and max(c) > max(b) or max(a) == max(c) and max(a) > max(b):
	print(max(c))
elif max(b) == max(c) and max(b) > max(a) or max(b) == max(c) and max(c) > max(a):
	print(max(b))
elif max(a) == max(b) == max(c):
	print(max(a))
-- EXECUTION TIME:
10.9993
-- TEST CASE 1:
---- input:
[[3.0,7.8,3.1,1.4],[0.9,3.5,0.4,0.2],[8.9,2.8,2.1,6.6],[5.1,3.1,8.4,3.8]]
---- correct output:
8.9
---- user output:
8.7
-- TEST CASE 2:
---- input:
[[7.4,7.1,6.8,3.7,3.7],[8.5,3.6,8.7,3.3,7.9],[7.6,1.9,7.0,8.3,5.1],[9.9,9.8,2.8,3.2,0.3],[6.0,5.7,2.6,7.1,8.1],[0.1,5.1,8.3,9.8,9.1]]
---- correct output:
9.9
---- user output:
8.1
-- TEST CASE 3:
---- input:
[[8.1,2.2,4.4],[2.5,7.9,3.5],[7.2,2.3,4.3],[2.3,0.3,8.1],[7.0,0.2,7.1]]
---- correct output:
8.1
---- user output:
8.9
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 16:35:21) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(b):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c) or max(a) == max(b) and max(a) > max(c):
	print(max(a))
elif max(a) == max(c) and max(c) > max(b) or max(a) == max(c) and max(a) > max(b):
	print(max(c))
elif max(b) == max(c) and max(b) > max(a) or max(b) == max(c) and max(c) > max(a):
	print(max(b))
elif max(a) == max(b) == max(c):
	print(max(a))
-- EXECUTION TIME:
5.66833
-- TEST CASE 1:
---- input:
[[3.0,7.8,3.1,1.4],[0.9,3.5,0.4,0.2],[8.9,2.8,2.1,6.6],[5.1,3.1,8.4,3.8]]
---- correct output:
8.9
---- user output:
8.9
-- TEST CASE 2:
---- input:
[[7.4,7.1,6.8,3.7,3.7],[8.5,3.6,8.7,3.3,7.9],[7.6,1.9,7.0,8.3,5.1],[9.9,9.8,2.8,3.2,0.3],[6.0,5.7,2.6,7.1,8.1],[0.1,5.1,8.3,9.8,9.1]]
---- correct output:
9.9
---- user output:
8.7
-- TEST CASE 3:
---- input:
[[8.1,2.2,4.4],[2.5,7.9,3.5],[7.2,2.3,4.3],[2.3,0.3,8.1],[7.0,0.2,7.1]]
---- correct output:
8.1
---- user output:
8.1
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 16:35:22) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(b):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c) or max(a) == max(b) and max(a) > max(c):
	print(max(a))
elif max(a) == max(c) and max(c) > max(b) or max(a) == max(c) and max(a) > max(b):
	print(max(c))
elif max(b) == max(c) and max(b) > max(a) or max(b) == max(c) and max(c) > max(a):
	print(max(b))
elif max(a) == max(b) == max(c):
	print(max(a))
-- EXECUTION TIME:
6.21167
-- TEST CASE 1:
---- input:
[[3.0,7.8,3.1,1.4],[0.9,3.5,0.4,0.2],[8.9,2.8,2.1,6.6],[5.1,3.1,8.4,3.8]]
---- correct output:
8.9
---- user output:
8.1
-- TEST CASE 2:
---- input:
[[7.4,7.1,6.8,3.7,3.7],[8.5,3.6,8.7,3.3,7.9],[7.6,1.9,7.0,8.3,5.1],[9.9,9.8,2.8,3.2,0.3],[6.0,5.7,2.6,7.1,8.1],[0.1,5.1,8.3,9.8,9.1]]
---- correct output:
9.9
---- user output:
8.9
-- TEST CASE 3:
---- input:
[[8.1,2.2,4.4],[2.5,7.9,3.5],[7.2,2.3,4.3],[2.3,0.3,8.1],[7.0,0.2,7.1]]
---- correct output:
8.1
---- user output:
8.7
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 16:35:22) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(b):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c) or max(a) == max(b) and max(a) > max(c):
	print(max(a))
elif max(a) == max(c) and max(c) > max(b) or max(a) == max(c) and max(a) > max(b):
	print(max(c))
elif max(b) == max(c) and max(b) > max(a) or max(b) == max(c) and max(c) > max(a):
	print(max(b))
elif max(a) == max(b) == max(c):
	print(max(a))
-- EXECUTION TIME:
6.26537
-- TEST CASE 1:
---- input:
[[3.0,7.8,3.1,1.4],[0.9,3.5,0.4,0.2],[8.9,2.8,2.1,6.6],[5.1,3.1,8.4,3.8]]
---- correct output:
8.9
---- user output:
8.9
-- TEST CASE 2:
---- input:
[[7.4,7.1,6.8,3.7,3.7],[8.5,3.6,8.7,3.3,7.9],[7.6,1.9,7.0,8.3,5.1],[9.9,9.8,2.8,3.2,0.3],[6.0,5.7,2.6,7.1,8.1],[0.1,5.1,8.3,9.8,9.1]]
---- correct output:
9.9
---- user output:
8.7
-- TEST CASE 3:
---- input:
[[8.1,2.2,4.4],[2.5,7.9,3.5],[7.2,2.3,4.3],[2.3,0.3,8.1],[7.0,0.2,7.1]]
---- correct output:
8.1
---- user output:
8.1
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 16:35:22) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(b):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c) or max(a) == max(b) and max(a) > max(c):
	print(max(a))
elif max(a) == max(c) and max(c) > max(b) or max(a) == max(c) and max(a) > max(b):
	print(max(c))
elif max(b) == max(c) and max(b) > max(a) or max(b) == max(c) and max(c) > max(a):
	print(max(b))
elif max(a) == max(b) == max(c):
	print(max(a))
-- EXECUTION TIME:
5.99369
-- TEST CASE 1:
---- input:
[[3.0,7.8,3.1,1.4],[0.9,3.5,0.4,0.2],[8.9,2.8,2.1,6.6],[5.1,3.1,8.4,3.8]]
---- correct output:
8.9
---- user output:
8.9
-- TEST CASE 2:
---- input:
[[7.4,7.1,6.8,3.7,3.7],[8.5,3.6,8.7,3.3,7.9],[7.6,1.9,7.0,8.3,5.1],[9.9,9.8,2.8,3.2,0.3],[6.0,5.7,2.6,7.1,8.1],[0.1,5.1,8.3,9.8,9.1]]
---- correct output:
9.9
---- user output:
8.7
-- TEST CASE 3:
---- input:
[[8.1,2.2,4.4],[2.5,7.9,3.5],[7.2,2.3,4.3],[2.3,0.3,8.1],[7.0,0.2,7.1]]
---- correct output:
8.1
---- user output:
8.1
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 16:35:23) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(b):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c) or max(a) == max(b) and max(a) > max(c):
	print(max(a))
elif max(a) == max(c) and max(c) > max(b) or max(a) == max(c) and max(a) > max(b):
	print(max(c))
elif max(b) == max(c) and max(b) > max(a) or max(b) == max(c) and max(c) > max(a):
	print(max(b))
elif max(a) == max(b) == max(c):
	print(max(a))
-- EXECUTION TIME:
6.07539
-- TEST CASE 1:
---- input:
[[3.0,7.8,3.1,1.4],[0.9,3.5,0.4,0.2],[8.9,2.8,2.1,6.6],[5.1,3.1,8.4,3.8]]
---- correct output:
8.9
---- user output:
8.7
-- TEST CASE 2:
---- input:
[[7.4,7.1,6.8,3.7,3.7],[8.5,3.6,8.7,3.3,7.9],[7.6,1.9,7.0,8.3,5.1],[9.9,9.8,2.8,3.2,0.3],[6.0,5.7,2.6,7.1,8.1],[0.1,5.1,8.3,9.8,9.1]]
---- correct output:
9.9
---- user output:
8.1
-- TEST CASE 3:
---- input:
[[8.1,2.2,4.4],[2.5,7.9,3.5],[7.2,2.3,4.3],[2.3,0.3,8.1],[7.0,0.2,7.1]]
---- correct output:
8.1
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 16:35:23) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(b):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c) or max(a) == max(b) and max(a) > max(c):
	print(max(a))
elif max(a) == max(c) and max(c) > max(b) or max(a) == max(c) and max(a) > max(b):
	print(max(c))
elif max(b) == max(c) and max(b) > max(a) or max(b) == max(c) and max(c) > max(a):
	print(max(b))
elif max(a) == max(b) == max(c):
	print(max(a))
-- EXECUTION TIME:
5.80362
-- TEST CASE 1:
---- input:
[[3.0,7.8,3.1,1.4],[0.9,3.5,0.4,0.2],[8.9,2.8,2.1,6.6],[5.1,3.1,8.4,3.8]]
---- correct output:
8.9
---- user output:
8.7
-- TEST CASE 2:
---- input:
[[7.4,7.1,6.8,3.7,3.7],[8.5,3.6,8.7,3.3,7.9],[7.6,1.9,7.0,8.3,5.1],[9.9,9.8,2.8,3.2,0.3],[6.0,5.7,2.6,7.1,8.1],[0.1,5.1,8.3,9.8,9.1]]
---- correct output:
9.9
---- user output:
8.1
-- TEST CASE 3:
---- input:
[[8.1,2.2,4.4],[2.5,7.9,3.5],[7.2,2.3,4.3],[2.3,0.3,8.1],[7.0,0.2,7.1]]
---- correct output:
8.1
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:35:27) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(b):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c) or max(a) == max(b) and max(a) > max(c):
	print(max(a))
elif max(a) == max(c) and max(c) > max(b) or max(a) == max(c) and max(a) > max(b):
	print(max(c))
elif max(b) == max(c) and max(b) > max(a) or max(b) == max(c) and max(c) > max(a):
	print(max(b))
elif max(a) == max(b) == max(c):
	print(max(a))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 16:35:41) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(b):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c) or max(a) == max(b) and max(a) > max(c):
	print(max(a))
elif max(a) == max(c) and max(c) > max(b) or max(a) == max(c) and max(a) > max(b):
	print(max(c))
elif max(b) == max(c) and max(b) > max(a) or max(b) == max(c) and max(c) > max(a):
	print(max(b))
elif max(a) == max(b) == max(c):
	print(max(a))
-- EXECUTION TIME:
0.862697
-- TEST CASE 1:
---- input:
[[3.0,7.8,3.1,1.4],[0.9,3.5,0.4,0.2],[8.9,2.8,2.1,6.6],[5.1,3.1,8.4,3.8]]
---- correct output:
8.9
---- user output:
8.9
-- TEST CASE 2:
---- input:
[[7.4,7.1,6.8,3.7,3.7],[8.5,3.6,8.7,3.3,7.9],[7.6,1.9,7.0,8.3,5.1],[9.9,9.8,2.8,3.2,0.3],[6.0,5.7,2.6,7.1,8.1],[0.1,5.1,8.3,9.8,9.1]]
---- correct output:
9.9
---- user output:
8.7
-- TEST CASE 3:
---- input:
[[8.1,2.2,4.4],[2.5,7.9,3.5],[7.2,2.3,4.3],[2.3,0.3,8.1],[7.0,0.2,7.1]]
---- correct output:
8.1
---- user output:
8.1
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:36:03) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(b):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c) or max(a) == max(b) and max(a) > max(c):
	print(max(a))
elif max(a) == max(c) and max(c) > max(b) or max(a) == max(c) and max(a) > max(b):
	print(max(c))
elif max(b) == max(c) and max(b) > max(a) or max(b) == max(c) and max(c) > max(a):
	print(max(b))
elif max(a) == max(b) == max(c):
	print(max(a))
else:
	print(max(a))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 16:36:07) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(b):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c) or max(a) == max(b) and max(a) > max(c):
	print(max(a))
elif max(a) == max(c) and max(c) > max(b) or max(a) == max(c) and max(a) > max(b):
	print(max(c))
elif max(b) == max(c) and max(b) > max(a) or max(b) == max(c) and max(c) > max(a):
	print(max(b))
elif max(a) == max(b) == max(c):
	print(max(a))
else:
	print(max(a))
-- EXECUTION TIME:
1.07841
-- TEST CASE 1:
---- input:
[[3.0,7.8,3.1,1.4],[0.9,3.5,0.4,0.2],[8.9,2.8,2.1,6.6],[5.1,3.1,8.4,3.8]]
---- correct output:
8.9
---- user output:
8.9
-- TEST CASE 2:
---- input:
[[7.4,7.1,6.8,3.7,3.7],[8.5,3.6,8.7,3.3,7.9],[7.6,1.9,7.0,8.3,5.1],[9.9,9.8,2.8,3.2,0.3],[6.0,5.7,2.6,7.1,8.1],[0.1,5.1,8.3,9.8,9.1]]
---- correct output:
9.9
---- user output:
8.7
-- TEST CASE 3:
---- input:
[[8.1,2.2,4.4],[2.5,7.9,3.5],[7.2,2.3,4.3],[2.3,0.3,8.1],[7.0,0.2,7.1]]
---- correct output:
8.1
---- user output:
8.1
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:36:35) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(b):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c) or max(a) == max(b) and max(a) > max(c):
	print(max(a))
elif max(a) == max(c) and max(c) > max(b) or max(a) == max(c) and max(a) > max(b):
	print(max(c))
elif max(b) == max(c) and max(b) > max(a) or max(b) == max(c) and max(c) > max(a):
	print(max(b))
elif max(a) == max(b) == max(c):
	print(max(a))
	
	
z = a+b+c
print(z)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:36:49) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(b):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c) or max(a) == max(b) and max(a) > max(c):
	print(max(a))
elif max(a) == max(c) and max(c) > max(b) or max(a) == max(c) and max(a) > max(b):
	print(max(c))
elif max(b) == max(c) and max(b) > max(a) or max(b) == max(c) and max(c) > max(a):
	print(max(b))
elif max(a) == max(b) == max(c):
	print(max(a))
	
	
z = a,b,c
print(z)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:37:09) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(b):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c) or max(a) == max(b) and max(a) > max(c):
	print(max(a))
elif max(a) == max(c) and max(c) > max(b) or max(a) == max(c) and max(a) > max(b):
	print(max(c))
elif max(b) == max(c) and max(b) > max(a) or max(b) == max(c) and max(c) > max(a):
	print(max(b))
elif max(a) == max(b) == max(c):
	print(max(a))
	
	
z = a,b,c
print(max(z))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:43:00) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

for k in range(i):
	for l in range(j):
		if x[k,l] == max(k)[0]:
			print(x[k,l])


















a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(b):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c) or max(a) == max(b) and max(a) > max(c):
	print(max(a))
elif max(a) == max(c) and max(c) > max(b) or max(a) == max(c) and max(a) > max(b):
	print(max(c))
elif max(b) == max(c) and max(b) > max(a) or max(b) == max(c) and max(c) > max(a):
	print(max(b))
elif max(a) == max(b) == max(c):
	print(max(a))
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
for i in range(size(a))
	z = a,b,c
print(max(z))
-- ERROR:
File "XXXX", line 73
    for i in range(size(a))
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:43:11) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

for k in range(i):
	for l in range(j):
		if x[k,l] == max(k)[0]:
			print(x[k,l])


















a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(b):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c) or max(a) == max(b) and max(a) > max(c):
	print(max(a))
elif max(a) == max(c) and max(c) > max(b) or max(a) == max(c) and max(a) > max(b):
	print(max(c))
elif max(b) == max(c) and max(b) > max(a) or max(b) == max(c) and max(c) > max(a):
	print(max(b))
elif max(a) == max(b) == max(c):
	print(max(a))
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:44:52) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

x = shape(x)

for k in range(i):
	for l in range(j):
		if x[k,l] == max(x):
			print(x[k,l])


















a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(b):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c) or max(a) == max(b) and max(a) > max(c):
	print(max(a))
elif max(a) == max(c) and max(c) > max(b) or max(a) == max(c) and max(a) > max(b):
	print(max(c))
elif max(b) == max(c) and max(b) > max(a) or max(b) == max(c) and max(c) > max(a):
	print(max(b))
elif max(a) == max(b) == max(c):
	print(max(a))
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:45:06) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

for k in range(i):
	for l in range(j):
		if x[k,l] == max(x):
			print(x[k,l])


















a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(b):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c) or max(a) == max(b) and max(a) > max(c):
	print(max(a))
elif max(a) == max(c) and max(c) > max(b) or max(a) == max(c) and max(a) > max(b):
	print(max(c))
elif max(b) == max(c) and max(b) > max(a) or max(b) == max(c) and max(c) > max(a):
	print(max(b))
elif max(a) == max(b) == max(c):
	print(max(a))
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:45:54) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

for k in range(i):
	for l in range(j):
		
		print(x[k,l])


















a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(b):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c) or max(a) == max(b) and max(a) > max(c):
	print(max(a))
elif max(a) == max(c) and max(c) > max(b) or max(a) == max(c) and max(a) > max(b):
	print(max(c))
elif max(b) == max(c) and max(b) > max(a) or max(b) == max(c) and max(c) > max(a):
	print(max(b))
elif max(a) == max(b) == max(c):
	print(max(a))
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:46:05) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

for k in range(i):
	for l in range(j):
		
		print(x[k,l])


















a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(b):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c) or max(a) == max(b) and max(a) > max(c):
	print(max(a))
elif max(a) == max(c) and max(c) > max(b) or max(a) == max(c) and max(a) > max(b):
	print(max(c))
elif max(b) == max(c) and max(b) > max(a) or max(b) == max(c) and max(c) > max(a):
	print(max(b))
elif max(a) == max(b) == max(c):
	print(max(a))
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:46:38) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

for k in range(i):
	for l in range(j):
		
		print(x[k,l])
		print(x[l,k])


















a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(b):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c) or max(a) == max(b) and max(a) > max(c):
	print(max(a))
elif max(a) == max(c) and max(c) > max(b) or max(a) == max(c) and max(a) > max(b):
	print(max(c))
elif max(b) == max(c) and max(b) > max(a) or max(b) == max(c) and max(c) > max(a):
	print(max(b))
elif max(a) == max(b) == max(c):
	print(max(a))
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:47:40) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

print(max(x))


















a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(b):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c) or max(a) == max(b) and max(a) > max(c):
	print(max(a))
elif max(a) == max(c) and max(c) > max(b) or max(a) == max(c) and max(a) > max(b):
	print(max(c))
elif max(b) == max(c) and max(b) > max(a) or max(b) == max(c) and max(c) > max(a):
	print(max(b))
elif max(a) == max(b) == max(c):
	print(max(a))
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 16:47:55) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]




















a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(b):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c) or max(a) == max(b) and max(a) > max(c):
	print(max(a))
elif max(a) == max(c) and max(c) > max(b) or max(a) == max(c) and max(a) > max(b):
	print(max(c))
elif max(b) == max(c) and max(b) > max(a) or max(b) == max(c) and max(c) > max(a):
	print(max(b))
elif max(a) == max(b) == max(c):
	print(max(a))
	

-- EXECUTION TIME:
1.28872
-- TEST CASE 1:
---- input:
[[3.0,7.8,3.1,1.4],[0.9,3.5,0.4,0.2],[8.9,2.8,2.1,6.6],[5.1,3.1,8.4,3.8]]
---- correct output:
8.9
---- user output:
8.9
-- TEST CASE 2:
---- input:
[[7.4,7.1,6.8,3.7,3.7],[8.5,3.6,8.7,3.3,7.9],[7.6,1.9,7.0,8.3,5.1],[9.9,9.8,2.8,3.2,0.3],[6.0,5.7,2.6,7.1,8.1],[0.1,5.1,8.3,9.8,9.1]]
---- correct output:
9.9
---- user output:
8.7
-- TEST CASE 3:
---- input:
[[8.1,2.2,4.4],[2.5,7.9,3.5],[7.2,2.3,4.3],[2.3,0.3,8.1],[7.0,0.2,7.1]]
---- correct output:
8.1
---- user output:
8.1
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:49:17) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

print(size(x))


















a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(b):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c) or max(a) == max(b) and max(a) > max(c):
	print(max(a))
elif max(a) == max(c) and max(c) > max(b) or max(a) == max(c) and max(a) > max(b):
	print(max(c))
elif max(b) == max(c) and max(b) > max(a) or max(b) == max(c) and max(c) > max(a):
	print(max(b))
elif max(a) == max(b) == max(c):
	print(max(a))
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:50:33) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = max(x)[0]
print(a)


















a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(b):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c) or max(a) == max(b) and max(a) > max(c):
	print(max(a))
elif max(a) == max(c) and max(c) > max(b) or max(a) == max(c) and max(a) > max(b):
	print(max(c))
elif max(b) == max(c) and max(b) > max(a) or max(b) == max(c) and max(c) > max(a):
	print(max(b))
elif max(a) == max(b) == max(c):
	print(max(a))
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:51:00) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = max[x,:]
print(a)


















a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(b):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c) or max(a) == max(b) and max(a) > max(c):
	print(max(a))
elif max(a) == max(c) and max(c) > max(b) or max(a) == max(c) and max(a) > max(b):
	print(max(c))
elif max(b) == max(c) and max(b) > max(a) or max(b) == max(c) and max(c) > max(a):
	print(max(b))
elif max(a) == max(b) == max(c):
	print(max(a))
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:51:14) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = max(x[:,1])
print(a)


















a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(b):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c) or max(a) == max(b) and max(a) > max(c):
	print(max(a))
elif max(a) == max(c) and max(c) > max(b) or max(a) == max(c) and max(a) > max(b):
	print(max(c))
elif max(b) == max(c) and max(b) > max(a) or max(b) == max(c) and max(c) > max(a):
	print(max(b))
elif max(a) == max(b) == max(c):
	print(max(a))
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:52:15) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

for k in range(shape(x)):
	a = max(x[:,k-1])
print(a)


















a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(b):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c) or max(a) == max(b) and max(a) > max(c):
	print(max(a))
elif max(a) == max(c) and max(c) > max(b) or max(a) == max(c) and max(a) > max(b):
	print(max(c))
elif max(b) == max(c) and max(b) > max(a) or max(b) == max(c) and max(c) > max(a):
	print(max(b))
elif max(a) == max(b) == max(c):
	print(max(a))
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:52:26) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

for k in range(size(x)):
	a = max(x[:,k-1])
print(a)


















a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(b):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c) or max(a) == max(b) and max(a) > max(c):
	print(max(a))
elif max(a) == max(c) and max(c) > max(b) or max(a) == max(c) and max(a) > max(b):
	print(max(c))
elif max(b) == max(c) and max(b) > max(a) or max(b) == max(c) and max(c) > max(a):
	print(max(b))
elif max(a) == max(b) == max(c):
	print(max(a))
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:52:37) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

for k in range(size(x)):
	a = max(x[:,:])
print(a)


















a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(b):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c) or max(a) == max(b) and max(a) > max(c):
	print(max(a))
elif max(a) == max(c) and max(c) > max(b) or max(a) == max(c) and max(a) > max(b):
	print(max(c))
elif max(b) == max(c) and max(b) > max(a) or max(b) == max(c) and max(c) > max(a):
	print(max(b))
elif max(a) == max(b) == max(c):
	print(max(a))
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:52:57) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = max(x[:,1])
print(a)


















a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(b):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c) or max(a) == max(b) and max(a) > max(c):
	print(max(a))
elif max(a) == max(c) and max(c) > max(b) or max(a) == max(c) and max(a) > max(b):
	print(max(c))
elif max(b) == max(c) and max(b) > max(a) or max(b) == max(c) and max(c) > max(a):
	print(max(b))
elif max(a) == max(b) == max(c):
	print(max(a))
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 16:53:42) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(b):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c) or max(a) == max(b) and max(a) > max(c):
	print(max(a))
elif max(a) == max(c) and max(c) > max(b) or max(a) == max(c) and max(a) > max(b):
	print(max(c))
elif max(b) == max(c) and max(b) > max(a) or max(b) == max(c) and max(c) > max(a):
	print(max(b))
elif max(a) == max(b) == max(c):
	print(max(a))
-- EXECUTION TIME:
1.06555
-- TEST CASE 1:
---- input:
[[3.0,7.8,3.1,1.4],[0.9,3.5,0.4,0.2],[8.9,2.8,2.1,6.6],[5.1,3.1,8.4,3.8]]
---- correct output:
8.9
---- user output:
8.9
-- TEST CASE 2:
---- input:
[[7.4,7.1,6.8,3.7,3.7],[8.5,3.6,8.7,3.3,7.9],[7.6,1.9,7.0,8.3,5.1],[9.9,9.8,2.8,3.2,0.3],[6.0,5.7,2.6,7.1,8.1],[0.1,5.1,8.3,9.8,9.1]]
---- correct output:
9.9
---- user output:
8.7
-- TEST CASE 3:
---- input:
[[8.1,2.2,4.4],[2.5,7.9,3.5],[7.2,2.3,4.3],[2.3,0.3,8.1],[7.0,0.2,7.1]]
---- correct output:
8.1
---- user output:
8.1
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:54:19) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(b):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c) or max(a) == max(b) and max(a) > max(c):
	print(max(a))
elif max(a) == max(c) and max(c) > max(b) or max(a) == max(c) and max(a) > max(b):
	print(max(c))
elif max(b) == max(c) and max(b) > max(a) or max(b) == max(c) and max(c) > max(a):
	print(max(b))
elif max(a) == max(b) == max(c):
	print(max(a))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:54:29) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

i = shape(x)[0]
j = shape(x)[1]

a = x[0,:]
b = x[1,:]
c = x[2,:]

if max(a) > max(b) > max(c) or max(a) > max(c) > max(b):
	print(max(a))
elif max(b) > max(a) > max(c) or max(b) > max(c) > max(a):
	print(max(b))
elif max(c) > max(b) > max(a) or max(c) > max(a) > max(b):
	print(max(c))
elif max(a) == max(b) and max(b) > max(c) or max(a) == max(b) and max(a) > max(c):
	print(max(a))
elif max(a) == max(c) and max(c) > max(b) or max(a) == max(c) and max(a) > max(b):
	print(max(c))
elif max(b) == max(c) and max(b) > max(a) or max(b) == max(c) and max(c) > max(a):
	print(max(b))
elif max(a) == max(b) == max(c):
	print(max(a))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
