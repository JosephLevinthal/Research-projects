== TEST (2019-05-16 01:33:37) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = sqrt(12)
sinal = -1
cont = 1
d1 = 1
d2 = 3 
exd2 = 0 
while (cont < n):
	soma = soma * (cont/d1*(d2**exd2)) * sinal
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
print(round(soma,8))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    soma = soma * (cont/d1*(d2**exd2)) * sinal
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 01:33:51) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = sqrt(12)
sinal = -1
cont = 1
d1 = 1
d2 = 3 
exd2 = 0 
while (cont < n):
	soma = soma * (cont/d1*(d2**exd2)) * sinal
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
print(round(soma,8))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    soma = soma * (cont/d1*(d2**exd2)) * sinal
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 01:33:58) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = sqrt(12)
sinal = -1
cont = 1
d1 = 1
d2 = 3 
exd2 = 0 
while (cont < n):
	soma = soma * (cont/d1*(d2**exd2)) * sinal
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
print(round(soma,8))
	
-- EXECUTION TIME:
0.165656
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1716/2502/main.py", line 10, in <module>
    soma = soma * (cont/d1*(d2**exd2)) * sinal
OverflowError: int too large to convert to float

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 01:34:06) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = sqrt(12)
sinal = -1
cont = 1
d1 = 1
d2 = 3 
exd2 = 0 
while (cont < n):
	soma = soma * (cont/d1*(d2**exd2)) * sinal
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
print(round(soma,8))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    soma = soma * (cont/d1*(d2**exd2)) * sinal
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 01:34:26) 
-- CODE:
from math import *
n = float(input('Digite n: '))
soma = sqrt(12)
sinal = -1
cont = 1
d1 = 1
d2 = 3 
exd2 = 0 
while (cont < n):
	soma = soma * (cont/d1*(d2**exd2)) * sinal
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
print(round(soma,8))
	
-- EXECUTION TIME:
0.12883
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1716/2502/main.py", line 10, in <module>
    soma = soma * (cont/d1*(d2**exd2)) * sinal
OverflowError: int too large to convert to float

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 01:34:43) 
-- CODE:
from math import *
n = float(input('Digite n: '))
soma = sqrt(12)
sinal = -1
cont = 1
d1 = 1
d2 = 3 
exd2 = 0 
while (cont < n):
	soma = soma * (cont/d1*(d2**exd2)) * sinal
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
print(round(soma,8))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    soma = soma * (cont/d1*(d2**exd2)) * sinal
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 01:35:00) 
-- CODE:
from math import *
n = float(input('Digite n: '))
soma = sqrt(12)
sinal = -1
cont = 1
d1 = 1
d2 = 3 
exd2 = 0 
while (cont < n):
	soma = soma * (cont/d1*(d2**exd2)) * sinal
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
print(round(soma,8))
	
-- EXECUTION TIME:
0.146665
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1716/2502/main.py", line 10, in <module>
    soma = soma * (cont/d1*(d2**exd2)) * sinal
OverflowError: int too large to convert to float

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 01:36:17) 
-- CODE:
from math import *
n = float(input('Digite n: '))
soma = sqrt(12)
sinal = -1
cont = 1
d1 = 1
d2 = 3 
exd2 = 0 
while (cont < n):
	soma = soma * (cont/d1*(d2**exd2)) * sinal
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
print(round(soma,8))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    soma = soma * (cont/d1*(d2**exd2)) * sinal
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 01:36:35) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = sqrt(12)
sinal = -1
cont = 1
d1 = 1
d2 = 3 
exd2 = 0 
while (cont < n):
	soma = soma * (cont/d1*(d2**exd2)) * sinal
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
print(round(soma,8))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    soma = soma * (cont/d1*(d2**exd2)) * sinal
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 01:37:01) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = sqrt(12)
sinal = -1
cont = 1
d1 = 1
d2 = 3 
exd2 = 0 
while (cont < n):
	soma = soma * (cont/d1*(d2**exd2)) * sinal
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
print(round(soma,8))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    soma = soma * (cont/d1*(d2**exd2)) * sinal
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 01:37:07) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = sqrt(12)
sinal = -1
cont = 1
d1 = 1
d2 = 3 
exd2 = 0 
while (cont < n):
	soma = soma * (cont/d1*(d2**exd2)) * sinal
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
print(round(soma,8))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    soma = soma * (cont/d1*(d2**exd2)) * sinal
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 01:37:18) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = sqrt(12)
sinal = -1
cont = 1
d1 = 1
d2 = 3 
exd2 = 0 
while (cont < n):
	soma = soma * (cont/d1*(d2**exd2)) * sinal
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
print(round(soma,8))
	
-- EXECUTION TIME:
0.239292
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1716/2502/main.py", line 10, in <module>
    soma = soma * (cont/d1*(d2**exd2)) * sinal
OverflowError: int too large to convert to float

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 01:37:38) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = sqrt(12)
sinal = -1
cont = 1
d1 = 1
d2 = 3 
exd2 = 0 
while (cont < n):
	soma = soma * (cont/d1*(d2**exd2)) * sinal
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
print(round(soma,8))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    soma = soma * (cont/d1*(d2**exd2)) * sinal
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 01:39:29) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = sqrt(12)
sinal = -1
cont = 1
d1 = 1
d2 = 3 
exd2 = 0 
b = 0
while (cont < n):
	b = cont/d1*(d2**exd2)
	soma = soma * b * sinal
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
print(round(soma,8))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    b = cont/d1*(d2**exd2)
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 01:40:18) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = sqrt(12)
sinal = -1
cont = 1
d1 = 1
d2 = 3 
exd2 = 0 
b = 0
while (cont < n):
	soma = soma * (cont/d1*(d2**exd2)) * sinal
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
print(round(soma,8))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    soma = soma * (cont/d1*(d2**exd2)) * sinal
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 01:40:27) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = sqrt(12)
sinal = -1
cont = 1
d1 = 1
d2 = 3 
exd2 = 0 
b = 0
while (cont < n):
	soma = soma * (cont/d1*(d2**exd2)) * sinal
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
print(round(soma,8))
	
-- EXECUTION TIME:
0.184151
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1716/2502/main.py", line 11, in <module>
    soma = soma * (cont/d1*(d2**exd2)) * sinal
OverflowError: int too large to convert to float

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 01:43:39) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = sqrt(12)
sinal = -1
cont = 1
d1 = 1
d2 = 3 
exd2 = 0 
b = 0
while (cont < n):
	soma = (soma * (cont/d1*(d2**exd2)) * sinal)
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
print(round(soma,8))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    soma = (soma * (cont/d1*(d2**exd2)) * sinal)
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 01:43:45) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = sqrt(12)
sinal = -1
cont = 1
d1 = 1
d2 = 3 
exd2 = 0 
b = 0
while (cont < n):
	soma = (soma * (cont/d1*(d2**exd2)) * sinal)
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
print(round(soma,8))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    soma = (soma * (cont/d1*(d2**exd2)) * sinal)
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 01:44:31) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = sqrt(12)
sinal = -1
cont = 1
d1 = 1
d2 = 3 
exd2 = 0 
b = 0
while (cont < n):
	soma = float((soma * (cont/d1*(d2**exd2)) * sinal))
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
print(round(soma,8))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    soma = float((soma * (cont/d1*(d2**exd2)) * sinal))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 01:46:14) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = sqrt(12)
sinal = -1
cont = 1
d1 = 1
d2 = 3 
exd2 = 0 
b = 0
while (cont < n):
	soma = soma * (cont/d1*(d2**exd2)) * sinal
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
print(round(soma,8))
	
-- EXECUTION TIME:
0.192937
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1716/2502/main.py", line 11, in <module>
    soma = soma * (cont/d1*(d2**exd2)) * sinal
OverflowError: int too large to convert to float

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 01:52:36) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = sqrt(12)
sinal = -1
cont = 1
d1 = 1
d2 = 3 
exd2 = 0 
b = 0
while (cont < n):
	soma = soma * (1/d1*(d2**exd2)) * sinal
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
print(round(soma,8))
	
-- EXECUTION TIME:
0.143581
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1716/2502/main.py", line 11, in <module>
    soma = soma * (1/d1*(d2**exd2)) * sinal
OverflowError: int too large to convert to float

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 01:53:00) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = sqrt(12)
sinal = -1
cont = 1
d1 = 1
d2 = 3 
exd2 = 0 
b = 0
while (cont < n):
	soma = soma * (cont/d1*(d2**exd2)) * sinal
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
print(round(soma,8))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    soma = soma * (cont/d1*(d2**exd2)) * sinal
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 05:36:09) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = sqrt(12)
sinal = -1
cont = 1
d1 = 1
d2 = 3 
exd2 = 0 
b = 0
while (cont < n):
	soma = soma * (cont/d1*(d2**exd2)) * sinal
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
print(round(soma,8))
	
-- EXECUTION TIME:
0.151683
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1716/2502/main.py", line 11, in <module>
    soma = soma * (cont/d1*(d2**exd2)) * sinal
OverflowError: int too large to convert to float

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 05:36:13) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = sqrt(12)
sinal = -1
cont = 1
d1 = 1
d2 = 3 
exd2 = 0 
b = 0
while (cont < n):
	soma = soma * (cont/d1*(d2**exd2)) * sinal
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
print(round(soma,8))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    soma = soma * (cont/d1*(d2**exd2)) * sinal
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 05:36:52) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = sqrt(12)
sinal = -1
cont = 1
d1 = 1
d2 = 3 
exd2 = 0 
b = 0
while (cont < n):
	soma = soma * (cont/d1*(d2**exd2)) * sinal
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
print(round(soma,8))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    soma = soma * (cont/d1*(d2**exd2)) * sinal
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 05:38:33) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = sqrt(12)
sinal = -1
cont = 1
d1 = 1
d2 = 3 
exd2 = 0 
b = 0
while (cont < n):
	soma = soma * (1/d1*(d2**exd2)) * sinal
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
	cont = cont + 1
print(round(soma,8))
	
-- EXECUTION TIME:
0.11266
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
-15630953029517.945
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
-4.249249887334171e+29
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
268144.64369278
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 05:38:37) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = sqrt(12)
sinal = -1
cont = 1
d1 = 1
d2 = 3 
exd2 = 0 
b = 0
while (cont < n):
	soma = soma * (1/d1*(d2**exd2)) * sinal
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
	cont = cont + 1
print(round(soma,8))
	
-- OUTPUT:
-15630953029517.945
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 05:38:44) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = sqrt(12)
sinal = -1
cont = 1
d1 = 1
d2 = 3 
exd2 = 0 
b = 0
while (cont < n):
	soma = soma * (1/d1*(d2**exd2)) * sinal
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
	cont = cont + 1
print(round(soma,8))
	
-- OUTPUT:
-15630953029517.945
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 05:40:37) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = 0
sinal = -1
cont = 1
d1 = 1
d2 = 3 
exd2 = 0 
b = 0
while (cont < n):
	soma = soma * (1/d1*(d2**exd2)) * sinal
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
	cont = cont + 1
soma = soma * sqrt(12)
print(round(soma,8))
	
-- OUTPUT:
-0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 05:41:03) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = 0
sinal = -1
cont = 0
d1 = 1
d2 = 3 
exd2 = 0 
b = 0
while (cont < n):
	soma = soma * (1/d1*(d2**exd2)) * sinal
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
	cont = cont + 1
soma = soma * sqrt(12)
print(round(soma,8))
	
-- OUTPUT:
0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 05:42:55) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = 0
sinal = -1
cont = 0
d1 = 1
d2 = 3 
exd2 = 0 
b = 0
while (cont < n):
	soma = soma + (1/d1*(d2**exd2)) * sinal
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
	cont = cont + 1
soma = soma * sqrt(12)
print(round(soma,8))
	
-- OUTPUT:
-7125.58712382
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 05:43:17) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = 0
sinal = 1
cont = 0
d1 = 1
d2 = 3 
exd2 = 0 
b = 0
while (cont < n):
	soma = soma + (1/d1*(d2**exd2)) * sinal
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
	cont = cont + 1
soma = soma * sqrt(12)
print(round(soma,8))
	
-- OUTPUT:
7125.58712382
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 05:43:24) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = 0
sinal = 1
cont = 0
d1 = 1
d2 = 3 
exd2 = 0 
b = 0
while (cont < n):
	soma = soma + (1/d1*(d2**exd2)) * sinal
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
	cont = cont + 1
soma = soma * sqrt(12)
print(round(soma,8))
	
-- OUTPUT:
7125.58712382
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 05:43:34) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = 0
sinal = 1
cont = 0
d1 = 1
d2 = 3 
exd2 = 0 
b = 0
while (cont < n):
	soma = soma + (1/d1*(d2**exd2)) * sinal
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
	cont = cont + 1
soma = soma * sqrt(12)
print(round(soma,8))
	
-- EXECUTION TIME:
0.194572
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
7125.58712382
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
420865.97458955
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
-363.2842469
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 05:44:02) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = 0
sinal = 1
cont = 0
d1 = 1
d2 = 3 
exd2 = 0 
while (cont <= n):
	soma = soma + (1/d1*(d2**exd2)) * sinal
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
	cont = cont + 1
soma = soma * sqrt(12)
print(round(soma,8))
	
-- OUTPUT:
-19555.07412909
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 05:44:50) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = 0
sinal = 1
cont = 0
d1 = 1
d2 = 3 
exd2 = 0 
while (cont <= n):
	soma = soma + (1/d1*(d2**exd2)) * sinal
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
	cont = cont + 1
	print(soma)
soma = soma * sqrt(12)
print(round(soma,8))
	
-- OUTPUT:
1.0
0.0
1.8
-2.057142857142857
6.942857142857143
-15.148051948051947
40.92887112887114
-104.87112887112887
281.0700475994594
-754.8773208215931
2056.9798220355497
-5645.063656225319
-19555.07412909
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 05:45:13) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = 0
sinal = 1
cont = 0
d1 = 1
d2 = 3 
exd2 = 0 
while (cont <= n):
	soma = soma + (1/d1*(d2**exd2)) * sinal
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
	cont = cont + 1
	print(soma)
soma = soma * sqrt(12)
print(round(soma,8))
	
-- OUTPUT:
1.0
0.0
1.8
-2.057142857142857
6.942857142857143
-15.148051948051947
40.92887112887114
-104.87112887112887
281.0700475994594
-754.8773208215931
2056.9798220355497
-5645.063656225319
-19555.07412909
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 05:47:42) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = 0
sinal = 1
cont = 0
d1 = 1
d2 = 3 
exd2 = 0 
while (cont <= n):
	soma = soma + ((1/(d1*(d2**exd2))) * sinal)
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
	cont = cont + 1
	print(soma)
soma = soma * sqrt(12)
print(round(soma,8))
	
-- OUTPUT:
1.0
0.8888888888888888
0.9111111111111111
0.9058201058201059
0.9071918479325887
0.9068177364473661
0.9069232550714033
0.906892771913348
0.9069017375480701
0.9068990635868373
0.90689987001959
0.9068996245835349
3.14159245
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 05:48:00) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = 0
sinal = 1
cont = 0
d1 = 1
d2 = 3 
exd2 = 0 
while (cont <= n):
	soma = soma + ((1/(d1*(d2**exd2))) * sinal)
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
	cont = cont + 1
	print(soma)
soma = soma * sqrt(12)
print(round(soma,8))
	
-- OUTPUT:
1.0
0.8888888888888888
0.9111111111111111
0.9058201058201059
0.9071918479325887
0.9068177364473661
0.9069232550714033
0.906892771913348
0.9069017375480701
0.9068990635868373
0.90689987001959
0.9068996245835349
3.14159245
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 05:50:56) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = 0
sinal = 1
cont = 0
d1 = 1
d2 = 3 
exd2 = 0 
while (cont <= n):
	soma = soma + ((1/(d1*(d2**exd2))) * sinal)
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
	cont = cont + 1
	print(soma)
soma = soma * sqrt(12)
print(round(soma,8))
	
-- OUTPUT:
1.0
0.8888888888888888
0.9111111111111111
0.9058201058201059
0.9071918479325887
0.9068177364473661
0.9069232550714033
0.906892771913348
0.9069017375480701
0.9068990635868373
0.90689987001959
0.9068996245835349
3.14159245
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 05:51:54) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = 0
sinal = 1
cont = 1
d1 = 1
d2 = 3 
exd2 = 0 
while (cont <= n):
	soma = soma + ((1/(d1*(d2**exd2))) * sinal)
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
	cont = cont + 1
	print(soma)
soma = soma * sqrt(12)
print(round(soma,8))
	
-- OUTPUT:
1.0
0.8888888888888888
0.9111111111111111
0.9058201058201059
0.9071918479325887
0.9068177364473661
0.9069232550714033
0.906892771913348
0.9069017375480701
0.9068990635868373
0.90689987001959
3.1415933
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 05:52:03) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = 0
sinal = 1
cont = 1
d1 = 1
d2 = 3 
exd2 = 0 
while (cont <= n):
	soma = soma + ((1/(d1*(d2**exd2))) * sinal)
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
	cont = cont + 1
	print(soma)
soma = soma * sqrt(12)
print(round(soma,8))
	
-- OUTPUT:
1.0
0.8888888888888888
0.9111111111111111
0.9058201058201059
0.9071918479325887
0.9068177364473661
0.9069232550714033
0.906892771913348
0.9069017375480701
0.9068990635868373
0.90689987001959
3.1415933
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 05:52:55) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = 0
sinal = 1
cont = 1
d1 = 1
d2 = 3 
exd2 = 0 
while (cont <= n):
	soma = soma + ((1/(d1*(d2**exd2))) * sinal)
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
	cont = cont + 1
	print(soma)
soma = soma * sqrt(12)
print(round(soma,8))
	
-- OUTPUT:
1.0
0.8888888888888888
0.9111111111111111
0.9058201058201059
0.9071918479325887
0.9068177364473661
0.9069232550714033
0.906892771913348
0.9069017375480701
0.9068990635868373
0.90689987001959
3.1415933
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 05:53:05) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = 0
sinal = 1
cont = 1
d1 = 1
d2 = 3 
exd2 = 0 
while (cont <= n):
	soma = soma + ((1/(d1*(d2**exd2))) * sinal)
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
	cont = cont + 1
	print(soma)
soma = soma * sqrt(12)
print(round(soma,8))
	
-- OUTPUT:
1.0
0.8888888888888888
0.9111111111111111
0.9058201058201059
0.9071918479325887
0.9068177364473661
0.9069232550714033
0.906892771913348
0.9069017375480701
0.9068990635868373
0.90689987001959
3.1415933
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 05:53:17) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = 0
sinal = 1
cont = 1
d1 = 1
d2 = 3 
exd2 = 0 
while (cont <= n):
	soma = soma + ((1/(d1*(d2**exd2))) * sinal)
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
	cont = cont + 1
	print(soma)
soma = soma * sqrt(12)
print(round(soma,8))
	
-- EXECUTION TIME:
0.121249
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
1.0
0.8888888888888888
0.9111111111111111
0.9058201058201059
0.9071918479325887
0.9068177364473661
0.9069232550714033
0.906892771913348
0.9069017375480701
0.9068990635868373
0.90689987001959
3.1415933
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
1.0
0.8888888888888888
0.9111111111111111
0.9058201058201059
0.9071918479325887
0.9068177364473661
0.9069232550714033
0.906892771913348
0.9069017375480701
0.9068990635868373
0.90689987001959
0.9068996245835349
0.9068996998505918
0.9068996766200187
0.9068996838295069
3.14159266
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
1.0
0.8888888888888888
0.9111111111111111
0.9058201058201059
0.9071918479325887
0.9068177364473661
0.9069232550714033
0.906892771913348
3.14156872
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 05:53:41) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = 0
sinal = 1
cont = 1
d1 = 1
d2 = 3 
exd2 = 0 
while (cont <= n):
	soma = soma + ((1/(d1*(d2**exd2))) * sinal)
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
	cont = cont + 1
soma = soma * sqrt(12)
print(round(soma,8))
	
-- EXECUTION TIME:
0.128091
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.1415933
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.14159266
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
3.14156872
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 05:55:30) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = 0
sinal = 1
cont = 1
d1 = 1
d2 = 3 
exd2 = 0 
while (cont <= n):
	soma = soma + (1/(d1*(d2**exd2))) * sinal
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
	cont = cont + 1
soma = soma * sqrt(12)
print(round(soma,8))
	
-- OUTPUT:
3.1415933
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 05:55:36) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = 0
sinal = 1
cont = 1
d1 = 1
d2 = 3 
exd2 = 0 
while (cont <= n):
	soma = soma + (1/(d1*(d2**exd2))) * sinal
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
	cont = cont + 1
soma = soma * sqrt(12)
print(round(soma,8))
	
-- OUTPUT:
3.1415933
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 05:55:45) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = 0
sinal = 1
cont = 1
d1 = 1
d2 = 3 
exd2 = 0 
while (cont <= n):
	soma = soma + (1/(d1*(d2**exd2))) * sinal
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
	cont = cont + 1
soma = soma * sqrt(12)
print(round(soma,8))
	
-- OUTPUT:
3.1415933
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 05:55:53) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = 0
sinal = 1
cont = 1
d1 = 1
d2 = 3 
exd2 = 0 
while (cont <= n):
	soma = soma + (1/(d1*(d2**exd2))) * sinal
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
	cont = cont + 1
soma = soma * sqrt(12)
print(round(soma,8))
	
-- EXECUTION TIME:
0.19194
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.1415933
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.14159266
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
3.14156872
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 06:01:04) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = 0
sinal = 1
cont = 1
d1 = 1
d2 = 3 
exd2 = 0 
while (cont < n):
	soma = soma + (1/(d1*(d2**exd2))) * sinal
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
	cont = cont + 1
soma = soma * sqrt(12)
print(round(soma,8))
	
-- EXECUTION TIME:
0.118262
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.14159051
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.14159263
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
3.14167431
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 06:01:10) 
-- CODE:
from math import *
n = int(input('Digite n: '))
soma = 0
sinal = 1
cont = 1
d1 = 1
d2 = 3 
exd2 = 0 
while (cont <= n):
	soma = soma + (1/(d1*(d2**exd2))) * sinal
	sinal = sinal * (-1)
	d1 = d1 + 2
	exd2 = exd2 + 1
	cont = cont + 1
soma = soma * sqrt(12)
print(round(soma,8))
	
-- EXECUTION TIME:
0.174581
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.1415933
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.14159266
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
3.14156872
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
