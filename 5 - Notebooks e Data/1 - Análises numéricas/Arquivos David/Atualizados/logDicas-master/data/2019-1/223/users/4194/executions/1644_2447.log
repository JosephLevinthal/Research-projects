== TEST (2019-04-11 17:02:05) 
-- CODE:
preco = float(input("Qual o preco da sua compra?"))
pagamento = float(input("Quanto voce pagou?"))

-- OUTPUT:
608.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:05:13) 
-- CODE:
preco = float(input("Qual o preco da sua compra?"))
pagamento = float(input("Quanto voce pagou?"))

if(preco>pagamento):
	mensagem = "Falta "
else:
	
-- ERROR:
File "XXXX", line 8
    
     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:05:51) 
-- CODE:
preco = float(input("Qual o preco da sua compra?"))
pagamento = float(input("Quanto voce pagou?"))

if(preco>pagamento):
	mensagem = "Falta", preco-pagamento
else:
	mensagem
-- ERROR:
File "XXXX", line 8
    
     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:07:22) 
-- CODE:
preco = float(input("Qual o preco da sua compra?"))
pagamento = float(input("Quanto voce pagou?"))

if(preco>pagamento):
	mensagem = "Falta ", preco-pagamento
else:
	mensagem = "Troco de ", pagamento-preco
print(mensagem)
-- OUTPUT:
('Falta ', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:07:39) 
-- CODE:
preco = float(input("Qual o preco da sua compra?"))
pagamento = float(input("Quanto voce pagou?"))

if(preco>pagamento):
	mensagem = "Falta , preco-pagamento
else:
	mensagem = Troco de , pagamento-preco
print(mensagem)
-- ERROR:
File "XXXX", line 5
    mensagem = "Falta , preco-pagamento
                                      ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:07:46) 
-- CODE:
preco = float(input("Qual o preco da sua compra?"))
pagamento = float(input("Quanto voce pagou?"))

if(preco>pagamento):
	mensagem = Falta , preco-pagamento
else:
	mensagem = Troco de , pagamento-preco
print(mensagem)
-- ERROR:
File "XXXX", line 7
    mensagem = Troco de , pagamento-preco
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:07:59) 
-- CODE:
preco = float(input("Qual o preco da sua compra?"))
pagamento = float(input("Quanto voce pagou?"))

if(preco>pagamento):
	mensagem = 'Falta' , preco-pagamento
else:
	mensagem = 'Troco de' , pagamento-preco
print(mensagem)
-- OUTPUT:
('Falta', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:08:29) 
-- CODE:
preco = float(input("Qual o preco da sua compra?"))
pagamento = float(input("Quanto voce pagou?"))

if(preco>pagamento):
	mensagem = 'Falta , preco-pagamento
else:
	mensagem = 'Troco de , pagamento-preco
print( mensagem )
-- ERROR:
File "XXXX", line 5
    mensagem = 'Falta , preco-pagamento
                                      ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:08:37) 
-- CODE:
preco = float(input("Qual o preco da sua compra?"))
pagamento = float(input("Quanto voce pagou?"))

if(preco>pagamento):
	mensagem = Falta , preco-pagamento
else:
	mensagem = Troco de , pagamento-preco
print( mensagem )
-- ERROR:
File "XXXX", line 7
    mensagem = Troco de , pagamento-preco
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:09:01) 
-- CODE:
preco = float(input("Qual o preco da sua compra?"))
pagamento = float(input("Quanto voce pagou?"))

if(preco>pagamento):
	mensagem = "Falta , preco-pagamento"
else:
	mensagem = "Troco de , pagamento-preco'
print( mensagem )
-- ERROR:
File "XXXX", line 7
    mensagem = "Troco de , pagamento-preco'
                                          ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:09:08) 
-- CODE:
preco = float(input("Qual o preco da sua compra?"))
pagamento = float(input("Quanto voce pagou?"))

if(preco>pagamento):
	mensagem = "Falta , preco-pagamento"
else:
	mensagem = "Troco de , pagamento-preco"
print( mensagem )
-- OUTPUT:
Falta , preco-pagamento
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:09:27) 
-- CODE:
preco = float(input("Qual o preco da sua compra?"))
pagamento = float(input("Quanto voce pagou?"))

if(preco>pagamento):
	mensagem = "Falta , (preco-pagamento)"
else:
	mensagem = "Troco de , (pagamento-preco)"
print( mensagem )
-- OUTPUT:
Falta , (preco-pagamento)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:09:49) 
-- CODE:
preco = float(input("Qual o preco da sua compra?"))
pagamento = float(input("Quanto voce pagou?"))

if(preco>pagamento):
	mensagem = "Falta", (preco-pagamento)
else:
	mensagem = "Troco de", (pagamento-preco)
print( mensagem )
-- OUTPUT:
('Falta', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:10:07) 
-- CODE:
preco = float(input("Qual o preco da sua compra?"))
pagamento = float(input("Quanto voce pagou?"))

if(preco>pagamento):
	mensagem = Falta, (preco-pagamento)
else:
	mensagem = Troco de, (pagamento-preco)
print( mensagem )
-- ERROR:
File "XXXX", line 7
    mensagem = Troco de, (pagamento-preco)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:10:21) 
-- CODE:
preco = float(input("Qual o preco da sua compra?"))
pagamento = float(input("Quanto voce pagou?"))

if(preco>pagamento):
	mensagem = (Falta, (preco-pagamento))
else:
	mensagem = (Troco de, (pagamento-preco))
print( mensagem )
-- ERROR:
File "XXXX", line 7
    mensagem = (Troco de, (pagamento-preco))
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:10:36) 
-- CODE:
preco = float(input("Qual o preco da sua compra?"))
pagamento = float(input("Quanto voce pagou?"))

if(preco>pagamento):
	mensagem = ("Falta", (preco-pagamento))
else:
	mensagem = ("Troco de", (pagamento-preco))
print( mensagem )
-- OUTPUT:
('Falta', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:10:48) 
-- CODE:
preco = float(input("Qual o preco da sua compra?"))
pagamento = float(input("Quanto voce pagou?"))

if(preco>pagamento):
	mensagem = "Falta", (preco-pagamento)
else:
	mensagem = "Troco de", (pagamento-preco)
print( mensagem )
-- OUTPUT:
('Falta', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:11:03) 
-- CODE:
preco = float(input("Qual o preco da sua compra?"))
pagamento = float(input("Quanto voce pagou?"))

if(preco>pagamento):
	mensagem = "Falta" (preco-pagamento)
else:
	mensagem = "Troco de" (pagamento-preco)
print( mensagem )
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    mensagem = "Falta" (preco-pagamento)
TypeError: 'str' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:11:17) 
-- CODE:
preco = float(input("Qual o preco da sua compra?"))
pagamento = float(input("Quanto voce pagou?"))

if(preco>pagamento):
	mensagem = "Falta" + (preco-pagamento)
else:
	mensagem = "Troco de" + (pagamento-preco)
print( mensagem )
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    mensagem = "Falta" + (preco-pagamento)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:11:52) 
-- CODE:
preco = float(input("Qual o preco da sua compra?"))
pagamento = float(input("Quanto voce pagou?"))

if(preco>pagamento):
	mensagem = "Falta" , (preco-pagamento)
else:
	mensagem = "Troco de" , (pagamento-preco)
print( mensagem )
-- OUTPUT:
('Falta', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:12:23) 
-- CODE:
preco = float(input("Qual o preco da sua compra?"))
pagamento = float(input("Quanto voce pagou?"))

if(preco>pagamento):
	mensagem = "Falta" , (preco-pagamento)
else:
	mensagem = "Troco de" , (pagamento-preco)
print ( mensagem )
-- OUTPUT:
('Falta', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:13:47) 
-- CODE:
preco = float(input("Qual o preco da sua compra?"))
pagamento = float(input("Quanto voce pagou?"))

if(preco>pagamento):
	mensagem = ("Falta" , (preco-pagamento))
else:
	mensagem = ("Troco de" , (pagamento-preco))
print ( mensagem )
-- OUTPUT:
('Falta', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:14:01) 
-- CODE:
preco = float(input("Qual o preco da sua compra?"))
pagamento = float(input("Quanto voce pagou?"))

if(preco>pagamento):
	mensagem = ("Falta" + (preco-pagamento))
else:
	mensagem = ("Troco de" + (pagamento-preco))
print ( mensagem )
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    mensagem = ("Falta" + (preco-pagamento))
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:14:19) 
-- CODE:
preco = float(input("Qual o preco da sua compra?"))
pagamento = float(input("Quanto voce pagou?"))

if(preco>pagamento):
	mensagem = ("Falta" , (preco-pagamento))
else:
	mensagem = ("Troco de" , (pagamento-preco))
print ( mensagem )
-- OUTPUT:
('Falta', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 17:14:30) 
-- CODE:
preco = float(input("Qual o preco da sua compra?"))
pagamento = float(input("Quanto voce pagou?"))

if(preco>pagamento):
	mensagem = ("Falta" , (preco-pagamento))
else:
	mensagem = ("Troco de" , (pagamento-preco))
print ( mensagem )
-- EXECUTION TIME:
0.182642
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
('Falta', 26.0)
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
('Troco de', 28.0)
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
('Troco de', 0.0)
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:14:41) 
-- CODE:
preco = float(input("Qual o preco da sua compra?"))
pagamento = float(input("Quanto voce pagou?"))

if(preco>pagamento):
	mensagem = ("Falta" , (preco-pagamento))
else:
	mensagem = ("Troco de" , (pagamento-preco))
print ( mensagem )
-- OUTPUT:
('Falta', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:16:00) 
-- CODE:
preco = float(input("Qual o preco da sua compra?"))
pagamento = float(input("Quanto voce pagou?"))

if(preco>pagamento):
	mensagem = "Falta" , (preco-pagamento)
else:
	mensagem = "Troco de" , (pagamento-preco)
print ( mensagem )
-- OUTPUT:
('Falta', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:18:25) 
-- CODE:
preco = float(input("Qual o preco da sua compra?"))
pagamento = float(input("Quanto voce pagou?"))

if(preco>pagamento):
	mensagem = "Falta" (preco-pagamento)
else:
	mensagem = "Troco de" (pagamento-preco)
print ( mensagem )
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    mensagem = "Falta" (preco-pagamento)
TypeError: 'str' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:18:52) 
-- CODE:
preco = float(input("Qual o preco da sua compra?"))
pagamento = float(input("Quanto voce pagou?"))

if(preco>pagamento):
	mensagem = "Falta", (preco-pagamento)
else:
	mensagem = "Troco de", (pagamento-preco)
print ( mensagem )
-- OUTPUT:
('Falta', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:19:43) 
-- CODE:
preco = float(input("Qual o preco da sua compra?"))
pagamento = float(input("Quanto voce pagou?"))

if(preco>pagamento):
	mensagem = "Falta", (preco-pagamento)
else:
	mensagem = "Troco de" + str(pagamento-preco)
print ( mensagem )
-- OUTPUT:
('Falta', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:19:56) 
-- CODE:
preco = float(input("Qual o preco da sua compra?"))
pagamento = float(input("Quanto voce pagou?"))

if(preco>pagamento):
	mensagem = "Falta ", (preco-pagamento)
else:
	mensagem = "Troco de " + str(pagamento-preco)
print ( mensagem )
-- OUTPUT:
('Falta ', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 17:20:06) 
-- CODE:
preco = float(input("Qual o preco da sua compra?"))
pagamento = float(input("Quanto voce pagou?"))

if(preco>pagamento):
	mensagem = "Falta ", (preco-pagamento)
else:
	mensagem = "Troco de " + str(pagamento-preco)
print ( mensagem )
-- EXECUTION TIME:
0.136356
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
('Falta ', 26.0)
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:20:46) 
-- CODE:
preco = float(input("Qual o preco da sua compra?"))
pagamento = float(input("Quanto voce pagou?"))

if(preco>pagamento):
	mensagem = "Falta " + str(preco-pagamento)
else:
	mensagem = "Troco de " + str(pagamento-preco)
print ( mensagem )
-- OUTPUT:
Falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 17:20:53) 
-- CODE:
preco = float(input("Qual o preco da sua compra?"))
pagamento = float(input("Quanto voce pagou?"))

if(preco>pagamento):
	mensagem = "Falta " + str(preco-pagamento)
else:
	mensagem = "Troco de " + str(pagamento-preco)
print ( mensagem )
-- EXECUTION TIME:
0.146845
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
