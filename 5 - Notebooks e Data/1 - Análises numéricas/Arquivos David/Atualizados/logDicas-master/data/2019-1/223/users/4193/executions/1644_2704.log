== TEST (2019-04-16 14:41:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nota=float(input("qual foi a nota ?:"))
bonificacao=input("vai receber  bonificacao?:")
if (bonificao=="S"):
   mensagem=nota+(nota*0.1)
else:
   mensagem=nota
print(round(mensagem , 2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if (bonificao=="S"):
NameError: name 'bonificao' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:45:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nota=float(input("qual foi a nota ?:"))
bonificacao=input("vai receber  bonificacao?:")
if (bonificao=="S"):
   mensagem=nota+(nota*0.1)
else:
   mensagem=nota
print(round(mensagem , 2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if (bonificao=="S"):
NameError: name 'bonificao' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:49:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nota=float(input("qual foi a nota ?:"))
bonificacao=input("vai receber  bonificacao?:")
if (bonificacao=="S"):
   mensagem=nota+(nota*0.1)
else:
   mensagem=nota
print(round(mensagem , 2))

-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 14:51:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nota=float(input("qual foi a nota ?:"))
bonificacao=input("vai receber  bonificacao?:")
if (bonificacao=="S"):
   mensagem=nota+(nota*0.1)
else:
   mensagem=nota
print(round(mensagem , 2))

-- EXECUTION TIME:
0.132541
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
