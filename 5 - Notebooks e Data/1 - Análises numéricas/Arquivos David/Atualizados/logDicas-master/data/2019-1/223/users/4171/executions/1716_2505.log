== TEST (2019-05-09 16:27:10) 
-- CODE:
from math import *

x = radians(eval(input("angulo x: ")))
k = int(input("termos da serie: "))

f = 0
c = 0

while (m < x):
	
	f = x**n/factorial(n)
	c += 1
	
print(round(f,10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    while (m < x):
NameError: name 'm' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 16:27:18) 
-- CODE:
from math import *

x = radians(eval(input("angulo x: ")))
k = int(input("termos da serie: "))

f = 0
c = 0
 
while (m < x):
	
	f = x**n/factorial(n)
	c += 1
	
print(round(f,10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    while (m < x):
NameError: name 'm' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 16:27:25) 
-- CODE:
from math import *

x = radians(eval(input("angulo x: ")))
k = int(input("termos da serie: "))

f = 0
c = 0
 
while (c < x):
	
	f = x**n/factorial(n)
	c += 1
	
print(round(f,10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    f = x**n/factorial(n)
NameError: name 'n' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 16:27:46) 
-- CODE:
from math import *

x = radians(eval(input("angulo x: ")))
k = int(input("termos da serie: "))

f = 0
c = 0
 
while (c < x):
	
	f = f + (x**k/factorial(k))
	c += 1
	
print(round(f,10))
-- OUTPUT:
1e-10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 16:28:53) 
-- CODE:
from math import *

x = radians(eval(input("angulo x: ")))
k = int(input("termos da serie: "))

f = 0
c = 0
 
while (c < x):
	
	f = f + (x**k/factorial(k))
	c += 1
	
print(round(f,10))
-- OUTPUT:
1e-10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 16:31:14) 
-- CODE:
from math import *

x = radians(eval(input("angulo x: ")))
k = int(input("termos da serie: "))

f = 0
c = 0
 
while (c < x):
	
	f = f + (x**k/factorial(k))
	c += 1
	
print(round(f,10))
-- OUTPUT:
1e-10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-09 16:44:47) 
-- CODE:
from math import *

x = radians(eval(input("angulo x: ")))
k = int(input("termos da serie: "))

f = 0
c = 0


while (c < x):
	
	f = f + (x**k/factorial(k))
	f = f - (x**k/factorial(k))
	c += 1
	
print(round(f,10))
-- EXECUTION TIME:
0.123856
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
0.0
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
0
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 16:44:48) 
-- CODE:
from math import *

x = radians(eval(input("angulo x: ")))
k = int(input("termos da serie: "))

f = 0
c = 0


while (c < x):
	
	f = f + (x**k/factorial(k))
	f = f - (x**k/factorial(k))
	c += 1
	
print(round(f,10))
-- OUTPUT:
0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:20:51) 
-- CODE:
from math import *

x = radians(eval(input("angulo x: ")))
k = int(input("termos da serie: "))

f = 0
c = 0

while (c < x):
	
	if c % 2 == 0:
		
		f = f + (x**k/factorial(k))
	else:
		f = f - (x**k/factorial(k))
	
	c += 1
	
print(round(f,10))
-- OUTPUT:
1e-10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:22:00) 
-- CODE:
from math import *

x = radians(eval(input("angulo x: ")))
k = int(input("termos da serie: "))

f = 0
c = 0

while (c < k):
	
	if c % 2 == 0:
		
		f = f + ( x**k / factorial(k) )
	else:
		f = f - ( x**k / factorial(k) )
	
	c += 1
	
print(round(f,10))
-- OUTPUT:
1e-10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:22:11) 
-- CODE:
from math import *

x = radians(eval(input("angulo x: ")))
k = int(input("termos da serie: "))

f = 0
c = 0

while (c < k):
	
	if c % 2 == 0:
		
		f = f + ( x**k / factorial(k) )
	else:
		f = f - ( x**k / factorial(k) )
	
	c += 1
	
print(round(f,10))
print(f)
-- OUTPUT:
1e-10
1.290639572831636e-10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:28:03) 
-- CODE:
from math import *

x = radians(eval(input("angulo x: ")))
k = int(input("termos da serie: "))

f = 0
c = 0

while (c < k):
	
	if c % 2 == 0:
		f = f + ( x**k / factorial(k) )
	
	else:
		f = f - ( x**k / factorial(k) )
	
	c += 1
	
print(round(f,10))
print(f)
-- OUTPUT:
1e-10
1.290639572831636e-10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:28:14) 
-- CODE:
from math import *

x = radians(eval(input("angulo x: ")))
k = int(input("termos da serie: "))

f = 0
c = 0

while (c < k):
	
	if c % 2 == 0:
		f = f + ( x**k / factorial(k) )
	
	else:
		f = f - ( x**k / factorial(k) )
	
	c += 1
	
print(round(f,10))
print(f)
-- OUTPUT:
1e-10
1.290639572831636e-10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:29:52) 
-- CODE:
from math import *

x = radians(eval(input("angulo x: ")))
k = int(input("termos da serie: "))

f = 0
c = 0

while (c < k):
	
	f = f + ( x**k / factorial(k) ) - ( x**k / factorial(k))
		
	c += 1
	
print(round(f,10))
print(f)
-- OUTPUT:
0.0
0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-09 21:29:52) 
-- CODE:
from math import *

x = radians(eval(input("angulo x: ")))
k = int(input("termos da serie: "))

f = 0
c = 0

while (c < k):
	
	f = f + ( x**k / factorial(k) ) - ( x**k / factorial(k))
		
	c += 1
	
print(round(f,10))
print(f)
-- EXECUTION TIME:
0.112114
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
0.0
0.0
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
0.0
0.0
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
angulo x: termos da serie: 0.0
0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:30:33) 
-- CODE:
from math import *

x = radians(eval(input("angulo x: ")))
k = int(input("termos da serie: "))

f = 0
c = 0

while (c < k):
	
	f = f + ( x**c / factorial(c) ) - ( x**c+2 / factorial(c+2))
	
	c += 1
	
print(round(f,10))
print(f)
-- OUTPUT:
-1.4365046308
-1.4365046307627833
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:30:51) 
-- CODE:
from math import *

x = radians(eval(input("angulo x: ")))
k = int(input("termos da serie: "))

f = 0
c = 0

while (c < k):
	
	f = f - ( x**c / factorial(c) ) + ( x**c+2 / factorial(c+2))
	
	c += 1
	
print(round(f,10))
print(f)
-- OUTPUT:
1.4365046308
1.4365046307627833
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:31:01) 
-- CODE:
from math import *

x = radians(eval(input("angulo x: ")))
k = int(input("termos da serie: "))

f = 0
c = 0

while (c < k):
	
	f = f - ( x**c / factorial(c) ) + ( x**c+2 / factorial(c+2))
	
	c += 1
	
print(round(f,10))
print(f)
-- OUTPUT:
1.4365046308
1.4365046307627833
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:32:06) 
-- CODE:
from math import *

x = radians(eval(input("angulo x: ")))
k = int(input("termos da serie: "))

f = 0
c = 0

while (c < k):
	y = ( x**c / factorial(c) ) - ( x**c+2 / factorial(c+2))
	f = f + y
	
	c += 1
	
print(round(f,10))
print(f)
-- OUTPUT:
-1.4365046308
-1.4365046307627833
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:33:40) 
-- CODE:
from math import *

x = radians(eval(input("angulo x: ")))
k = int(input("termos da serie: "))

f = 0
c = 1

while (c < k):
	y = ( x**c / factorial(c) ) - ( x**c+2 / factorial(c+2) )
	f = f + y
	
	c += 1
	
print(round(f,10))
print(f)
-- OUTPUT:
-0.4365046308
-0.43650463076278345
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:34:00) 
-- CODE:
from math import *

x = radians(eval(input("angulo x: ")))
k = int(input("termos da serie: "))

f = 0
c = 1

while (c < k):
	y = ( x**c / factorial(c) ) - ( x**(c+2) / factorial(c+2) )
	f = f + y
	
	c += 1
	
print(round(f,10))
print(f)
-- OUTPUT:
0.0277913743
0.02779137432952201
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:34:45) 
-- CODE:
from math import *

x = (eval(input("angulo x: ")))
k = int(input("termos da serie: "))

f = 0
c = 1

while (c < k):
	y = ( x**c / factorial(c) ) - ( x**(c + 2) / factorial(c + 2) )
	f = f + y
	
	c += 1
	
print(round(f,10))
print(f)
-- OUTPUT:
2.7039407699
2.7039407699215463
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-09 21:34:49) 
-- CODE:
from math import *

x = (eval(input("angulo x: ")))
k = int(input("termos da serie: "))

f = 0
c = 1

while (c < k):
	y = ( x**c / factorial(c) ) - ( x**(c + 2) / factorial(c + 2) )
	f = f + y
	
	c += 1
	
print(round(f,10))
print(f)
-- EXECUTION TIME:
0.158969
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
2.7039407699
2.7039407699215463
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-0.5110726583
-0.5110726583136078
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
1.3540045801
1.3540045800649363
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-09 21:34:52) 
-- CODE:
from math import *

x = (eval(input("angulo x: ")))
k = int(input("termos da serie: "))

f = 0
c = 1

while (c < k):
	y = ( x**c / factorial(c) ) - ( x**(c + 2) / factorial(c + 2) )
	f = f + y
	
	c += 1
	
print(round(f,10))

-- EXECUTION TIME:
0.18586
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
2.7039407699
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-0.5110726583
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
1.3540045801
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:34:53) 
-- CODE:
from math import *

x = (eval(input("angulo x: ")))
k = int(input("termos da serie: "))

f = 0
c = 1

while (c < k):
	y = ( x**c / factorial(c) ) - ( x**(c + 2) / factorial(c + 2) )
	f = f + y
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
2.7039407699
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-09 21:37:58) 
-- CODE:
from math import *

x = (eval(input("angulo x: ")))
k = int(input("termos da serie: "))

f = 0
c = 1

while (c < k):
	y = ( x**c / factorial(c) ) - ( x**(c + 2) / factorial(c + 2) )
	f = f + y
	
	c += 1
	
print(round(f,10))

-- EXECUTION TIME:
0.154895
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
2.7039407699
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-0.5110726583
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
1.3540045801
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-09 21:37:59) 
-- CODE:
from math import *

x = (eval(input("angulo x: ")))
k = int(input("termos da serie: "))

f = 0
c = 1

while (c < k):
	y = ( x**c / factorial(c) ) - ( x**(c + 2) / factorial(c + 2) )
	f = f + y
	
	c += 1
	
print(round(f,10))

-- EXECUTION TIME:
0.134899
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
2.7039407699
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-0.5110726583
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
1.3540045801
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-09 21:38:00) 
-- CODE:
from math import *

x = (eval(input("angulo x: ")))
k = int(input("termos da serie: "))

f = 0
c = 1

while (c < k):
	y = ( x**c / factorial(c) ) - ( x**(c + 2) / factorial(c + 2) )
	f = f + y
	
	c += 1
	
print(round(f,10))

-- EXECUTION TIME:
0.174107
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
2.7039407699
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-0.5110726583
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
1.3540045801
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:38:00) 
-- CODE:
from math import *

x = (eval(input("angulo x: ")))
k = int(input("termos da serie: "))

f = 0
c = 1

while (c < k):
	y = ( x**c / factorial(c) ) - ( x**(c + 2) / factorial(c + 2) )
	f = f + y
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
2.7039407699
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:38:33) 
-- CODE:
from math import *

x = (eval(input("Angulo x: ")))
k = int(input("Termos da serie: "))

f = 0
c = 0

while (c < k):
	y = ( x**c / factorial(c) ) - ( x**(c + 2) / factorial(c + 2) )
	f = f + y
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
2.4702402198
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:38:40) 
-- CODE:
from math import *

x = (eval(input("Angulo x: ")))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	y = ( x**c / factorial(c) ) - ( x**(c + 2) / factorial(c + 2) )
	f = f + y
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
2.7039407699
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:38:43) 
-- CODE:
from math import *

x = (eval(input("Angulo x: ")))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	y = ( x**c / factorial(c) ) - ( x**(c + 2) / factorial(c + 2) )
	f = f + y
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
2.7039407699
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:38:47) 
-- CODE:
from math import *

x = (eval(input("Angulo x: ")))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	y = ( x**c / factorial(c) ) - ( x**(c + 2) / factorial(c + 2) )
	f = f + y
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
2.7039407699
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:38:54) 
-- CODE:
from math import *

x = (eval(input("Angulo x: ")))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	y = ( x**c / factorial(c) ) - ( x**(c + 2) / factorial(c + 2) )
	f = f + y
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
2.7039407699
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:40:55) 
-- CODE:
from math import *

x = (eval(input("Angulo x: ")))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	y = ( x**c / factorial(c) ) - ( x**(c + 2) / factorial(c + 2) )
	f = f + y
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
2.7039407699
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:41:12) 
-- CODE:
from math import *

x = (eval(input("Angulo x: ")))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	y = ( x**c / factorial(c) ) - ( x**(c + 2) / factorial(c + 2) )
	f = f + y
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
2.7039407699
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:43:18) 
-- CODE:
from math import *

x = (eval(input("Angulo x: ")))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	y = ( x**c / factorial(c) ) - ( x**(c + 2) / factorial(c + 2) )
	print(y)
	f = f + y
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
0.9248322292886504
0.9800310422351217
0.5662714712600792
0.23280602713769502
2.7039407699
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:43:25) 
-- CODE:
from math import *

x = (eval(input("Angulo x: ")))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	y = ( x**c / factorial(c) ) - ( x**(c + 2) / factorial(c + 2) )
	print(y)
	f = f + y
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
0.9248322292886504
0.9800310422351217
0.5662714712600792
0.23280602713769502
2.7039407699
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:44:52) 
-- CODE:
from math import *

x = (eval(input("Angulo x: ")))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	y = ( x**c / factorial(c) ) - ( x**(c + 2) / factorial(c + 2) )
	print(y)
	f = f + y
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
0.9248322292886504
0.9800310422351217
0.5662714712600792
0.23280602713769502
2.7039407699
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:47:39) 
-- CODE:
from math import *

x = (eval(input("Angulo x: ")))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	y = ( x**c / factorial(c) ) - ( x**(c + 2) / factorial(c + 2) )
	print(y)
	f = f + y
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
0.9248322292886504
0.9800310422351217
0.5662714712600792
0.23280602713769502
2.7039407699
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:49:59) 
-- CODE:
from math import *

x = (eval(input("Angulo x: ")))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	y = ( x**c / factorial(c) ) - ( x**(c + 2) / factorial(c + 2) )
	print(y)
	f = f + y
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
0.9248322292886504
0.9800310422351217
0.5662714712600792
0.23280602713769502
2.7039407699
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:57:03) 
-- CODE:
from math import *

x = eval(input("Angulo x: "))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	y = ( x**c / factorial(c) ) - ( x**(c + 2) / factorial(c + 2) )
	print(y)
	f = f + y
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
0.9248322292886504
0.9800310422351217
0.5662714712600792
0.23280602713769502
2.7039407699
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:57:07) 
-- CODE:
from math import *

x = eval(input("Angulo x: "))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	y = ( x**c / factorial(c) ) - ( x**(c + 2) / factorial(c + 2) )
	print(y)
	f = f + y
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
0.9248322292886504
0.9800310422351217
0.5662714712600792
0.23280602713769502
2.7039407699
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:58:43) 
-- CODE:
from math import *

x = eval(input("Angulo x: "))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	y = ( x**c / factorial(c) ) - ( x**(c + 2) / factorial(c + 2) )
	print(y)
	f = f + y
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
0.9248322292886504
0.9800310422351217
0.5662714712600792
0.23280602713769502
2.7039407699
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 22:14:13) 
-- CODE:
from math import *

x = eval(input("Angulo x: "))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	y = ( x**c / factorial(c) ) - ( x**(c + 2) / factorial(c + 2) )
	print(y)
	f = f + y
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
0.9248322292886504
0.9800310422351217
0.5662714712600792
0.23280602713769502
2.7039407699
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 22:14:18) 
-- CODE:
from math import *

x = eval(input("Angulo x: "))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	y = ( x**c / factorial(c) ) - ( x**(c + 2) / factorial(c + 2) )
	print(y)
	f = f + y
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
0.9248322292886504
0.9800310422351217
0.5662714712600792
0.23280602713769502
2.7039407699
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 22:14:25) 
-- CODE:
from math import *

x = eval(input("Angulo x: "))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	y = ( x**c / factorial(c) ) - ( x**(c + 2) / factorial(c + 2) )
	print(y)
	f = f + y
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
0.9248322292886504
0.9800310422351217
0.5662714712600792
0.23280602713769502
2.7039407699
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 23:42:44) 
-- CODE:
from math import *

x = eval(input("Angulo x: "))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if n % 2 == 1:
		f +=  ( x**c / factorial(c) )
	else:
		f -=  ( x**c / factorial(c) )
	
	print(y)
	
	f = f + y
	
	c += 1
	
print(round(f,10))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    if n % 2 == 1:
NameError: name 'n' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 23:42:54) 
-- CODE:
from math import *

x = eval(input("Angulo x: "))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 == 1:
		f +=  ( x**c / factorial(c) )
	else:
		f -=  ( x**c / factorial(c) )
	
	print(y)
	
	f = f + y
	
	c += 1
	
print(round(f,10))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 16, in <module>
    print(y)
NameError: name 'y' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 23:43:01) 
-- CODE:
from math import *

x = eval(input("Angulo x: "))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 == 1:
		f +=  ( x**c / factorial(c) )
	else:
		f -=  ( x**c / factorial(c) )
	
	print(f)
	
	f = f + y
	
	c += 1
	
print(round(f,10))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 18, in <module>
    f = f + y
NameError: name 'y' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 23:43:17) 
-- CODE:
from math import *

x = eval(input("Angulo x: "))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 == 1:
		f +=  ( x**c / factorial(c) )
	else:
		f -=  ( x**c / factorial(c) )
	
	print(f)
	
	f += 0
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
1.5707963267948966
0.3370957766587268
0.983059874164973
0.729390366263925
0.7293903663
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 23:43:19) 
-- CODE:
from math import *

x = eval(input("Angulo x: "))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 == 1:
		f +=  ( x**c / factorial(c) )
	else:
		f -=  ( x**c / factorial(c) )
	
	print(f)
	
	f += 0
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
1.5707963267948966
0.3370957766587268
0.983059874164973
0.729390366263925
0.7293903663
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 23:43:39) 
-- CODE:
from math import *

x = eval(input("Angulo x: "))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 == 1:
		f +=  ( x**c / factorial(c) )
	else:
		f -=  ( x**c / factorial(c) )
	
	print(f)
	
	f += 0
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
1.5707963267948966
0.3370957766587268
0.983059874164973
0.729390366263925
0.7293903663
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 23:43:49) 
-- CODE:
from math import *

x = eval(input("Angulo x: "))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 == 1:
		f +=  ( x**c / factorial(c) )
	else:
		f -=  ( x**c / factorial(c) )
	
	print(f)
	
	f += 0
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
1.5707963267948966
0.3370957766587268
0.983059874164973
0.729390366263925
0.7293903663
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 23:43:52) 
-- CODE:
from math import *

x = eval(input("Angulo x: "))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 == 1:
		f +=  ( x**c / factorial(c) )
	else:
		f -=  ( x**c / factorial(c) )
	
	print(f)
	
	f += 0
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
1.5707963267948966
0.3370957766587268
0.983059874164973
0.729390366263925
0.7293903663
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 23:43:58) 
-- CODE:
from math import *

x = eval(input("Angulo x: "))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 == 1:
		f +=  ( x**c / factorial(c) )
	else:
		f -=  ( x**c / factorial(c) )
	
	print(f)
	
	f += 0
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
1.5707963267948966
0.3370957766587268
0.983059874164973
0.729390366263925
0.7293903663
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 23:44:16) 
-- CODE:
from math import *

x = eval(input("Angulo x: "))
k = int(input("Termos da serie: "))

f = 0
c = 0

while (c < k):
	
	if c % 2 == 1:
		f +=  ( x**c / factorial(c) )
	else:
		f -=  ( x**c / factorial(c) )
	
	print(f)
	
	f += 0
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
-1.0
0.5707963267948966
-0.6629042233412732
-0.01694012583502702
-0.270609633736075
-0.2706096337
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 23:44:25) 
-- CODE:
from math import *

x = eval(input("Angulo x: "))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 == 1:
		f +=  ( x**c / factorial(c) )
	else:
		f -=  ( x**c / factorial(c) )
	
	print(f)
	
	f += 0
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
1.5707963267948966
0.3370957766587268
0.983059874164973
0.729390366263925
0.7293903663
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 23:45:03) 
-- CODE:
from math import *

x = eval(input("Angulo x: "))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 == 1:
		f +=  ( x**c / factorial(c) )
	else:
		f -=  ( x**c / factorial(c) )
	
	print(f)
	
	f += 0
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
1.5707963267948966
0.3370957766587268
0.983059874164973
0.729390366263925
0.7293903663
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 23:45:15) 
-- CODE:
from math import *

x = eval(input("Angulo x: "))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 == 1:
		f -=  ( x**c / factorial(c) )
	else:
		f +=  ( x**c / factorial(c) )
	
	print(f)
	
	f += 0
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
-1.5707963267948966
-0.3370957766587268
-0.983059874164973
-0.729390366263925
-0.7293903663
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 23:45:28) 
-- CODE:
from math import *

x = eval(input("Angulo x: "))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 == 1:
		f +=  ( x**c / factorial(c) )
	else:
		f -=  ( x**c / factorial(c) )
	
	print(f)
	
	f += 0
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
1.5707963267948966
0.3370957766587268
0.983059874164973
0.729390366263925
0.7293903663
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 23:45:45) 
-- CODE:
from math import *

x = eval(input("Angulo x: "))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 == 1:
		f +=  ( x**c / factorial(c) )
	else:
		f -=  ( x**c / factorial(c) )
	
	print(f)
	
	
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
1.5707963267948966
0.3370957766587268
0.983059874164973
0.729390366263925
0.7293903663
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 23:46:26) 
-- CODE:
from math import *

x = eval(input("Angulo x: "))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 == 1:
		f +=  ( x**c / factorial(c) )
	else:
		f -=  ( x**c / factorial(c) )
	
	print(f)
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
1.5707963267948966
0.3370957766587268
0.983059874164973
0.729390366263925
0.7293903663
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 23:47:43) 
-- CODE:
from math import *

x = eval(input("Angulo x: "))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 != 0:
		f +=  ( x**c / factorial(c) )
	else:
		f -=  ( x**c / factorial(c) )
	
	print(f)
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
1.5707963267948966
0.3370957766587268
0.983059874164973
0.729390366263925
0.7293903663
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 23:47:46) 
-- CODE:
from math import *

x = eval(input("Angulo x: "))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 != 0:
		f +=  ( x**c / factorial(c) )
	else:
		f -=  ( x**c / factorial(c) )
	
	print(f)
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
1.5707963267948966
0.3370957766587268
0.983059874164973
0.729390366263925
0.7293903663
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 23:50:55) 
-- CODE:
from math import *

x = radians(eval(input("Angulo x: ")))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 != 0:
		f +=  ( x**c / factorial(c) twit)
	else:
		f -=  ( x**c / factorial(c) )
	
	print(f)
	
	c += 1
	
print(round(f,10))

-- ERROR:
File "XXXX", line 12
    f +=  ( x**c / factorial(c) twit)
                                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 23:51:00) 
-- CODE:
from math import *

x = radians(eval(input("Angulo x: ")))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 != 0:
		f +=  ( x**c / factorial(c) )
	else:
		f -=  ( x**c / factorial(c) )
	
	print(f)
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
0.027415567780803774
0.02703976110243185
0.027043195420252977
0.027043171881809727
0.0270431719
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 23:51:07) 
-- CODE:
from math import *

x = radians(eval(input("Angulo x: ")))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 != 0:
		f +=  ( x**c / factorial(c) )
	else:
		f -=  ( x**c / factorial(c) )
	
	print(f)
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
0.027415567780803774
0.02703976110243185
0.027043195420252977
0.027043171881809727
0.0270431719
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 23:51:27) 
-- CODE:
from math import *

x = degrees(eval(input("Angulo x: ")))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 != 0:
		f +=  ( x**c / factorial(c) )
	else:
		f -=  ( x**c / factorial(c) )
	
	print(f)
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
90.0
-3960.0
117540.0
-2616210.0
-2616210.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 23:51:33) 
-- CODE:
from math import *

x = degrees(eval(input("Angulo x: ")))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 != 0:
		f +=  ( x**c / factorial(c) )
	else:
		f -=  ( x**c / factorial(c) )
	
	print(f)
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
90.0
-3960.0
117540.0
-2616210.0
-2616210.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 23:51:39) 
-- CODE:
from math import *

x = radians(eval(input("Angulo x: ")))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 != 0:
		f +=  ( x**c / factorial(c) )
	else:
		f -=  ( x**c / factorial(c) )
	
	print(f)
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
0.027415567780803774
0.02703976110243185
0.027043195420252977
0.027043171881809727
0.0270431719
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 23:51:43) 
-- CODE:
from math import *

x = radians(eval(input("Angulo x: ")))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 != 0:
		f +=  ( x**c / factorial(c) )
	else:
		f -=  ( x**c / factorial(c) )
	
	print(f)
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
0.027415567780803774
0.02703976110243185
0.027043195420252977
0.027043171881809727
0.0270431719
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 23:51:53) 
-- CODE:
from math import *

x = radians(eval(input("Angulo x: ")))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 != 0:
		f +=  ( x**c / factorial(c) )
	else:
		f -=  ( x**c / factorial(c) )
	
	print(f)
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
0.027415567780803774
0.02703976110243185
0.027043195420252977
0.027043171881809727
0.0270431719
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 23:51:55) 
-- CODE:
from math import *

x = radians(eval(input("Angulo x: ")))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 != 0:
		f +=  ( x**c / factorial(c) )
	else:
		f -=  ( x**c / factorial(c) )
	
	print(f)
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
0.027415567780803774
0.02703976110243185
0.027043195420252977
0.027043171881809727
0.0270431719
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 23:52:15) 
-- CODE:
from math import *

x = radians(eval(input("Angulo x: ")))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 != 0:
		f +=  ( x**c / factorial(c) )
	else:
		f -=  ( x**c / factorial(c) )
	
	print(f)
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
0.027415567780803774
0.02703976110243185
0.027043195420252977
0.027043171881809727
0.0270431719
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 23:52:43) 
-- CODE:
from math import *

x = radians(eval(input("Angulo x: ")))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 != 0:
		f +=  ( x**c / factorial(c) )
	else:
		f -=  ( x**c / factorial(c) )
	
	print(f,c,x)
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
0.027415567780803774 1 0.027415567780803774
0.02703976110243185 2 0.027415567780803774
0.027043195420252977 3 0.027415567780803774
0.027043171881809727 4 0.027415567780803774
0.0270431719
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 23:53:50) 
-- CODE:
from math import *

x = (eval(input("Angulo x: ")))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 != 0:
		f +=  ( x**c / factorial(c) )
	else:
		f -=  ( x**c / factorial(c) )
	
	print(f,c,x)
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
1.5707963267948966 1 1.5707963267948966
0.3370957766587268 2 1.5707963267948966
0.983059874164973 3 1.5707963267948966
0.729390366263925 4 1.5707963267948966
0.7293903663
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 23:54:03) 
-- CODE:
from math import *

x = radians(eval(input("Angulo x: ")))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 != 0:
		f +=  ( x**c / factorial(c) )
	else:
		f -=  ( x**c / factorial(c) )
	
	print(f,c,x)
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
0.027415567780803774 1 0.027415567780803774
0.02703976110243185 2 0.027415567780803774
0.027043195420252977 3 0.027415567780803774
0.027043171881809727 4 0.027415567780803774
0.0270431719
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 23:55:03) 
-- CODE:
from math import *

x = eval(input("Angulo x: "))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 != 0:
		f +=  ( x**c / factorial(c) )
		
	else:
		f -=  ( x**c / factorial(c) )
	
	print(f)
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
1.5707963267948966
0.3370957766587268
0.983059874164973
0.729390366263925
0.7293903663
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 23:55:17) 
-- CODE:
from math import *

x = radians(eval(input("Angulo x: ")))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 != 0:
		f +=  ( x**c / factorial(c) )
		
	else:
		f -=  ( x**c / factorial(c) )
	
	print(f)
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
0.027415567780803774
0.02703976110243185
0.027043195420252977
0.027043171881809727
0.0270431719
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 23:56:59) 
-- CODE:
from math import *

x = eval(input("Angulo x: "))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 != 0:
		f +=  ( x**c / factorial(c) )
		
	else:
		f -=  ( x**c / factorial(c) )
	
	print(f)
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
1.5707963267948966
0.3370957766587268
0.983059874164973
0.729390366263925
0.7293903663
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 23:58:12) 
-- CODE:
from math import *

x = eval(input("Angulo x: "))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 != 0:
		f -=  ( x**c / factorial(c) )
		
	else:
		f +=  ( x**c / factorial(c) )
	
	print(f)
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
-1.5707963267948966
-0.3370957766587268
-0.983059874164973
-0.729390366263925
-0.7293903663
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 00:00:06) 
-- CODE:
from math import *

x = eval(input("Angulo x: "))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 != 0:
		f -=  ( x**c / factorial(c) )
		
	else:
		f +=  ( x**c / factorial(c) )
	
	print(f)
	
	c += 1
		
print(round(f,10))

-- OUTPUT:
-1.5707963267948966
-0.3370957766587268
-0.983059874164973
-0.729390366263925
-0.7293903663
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 00:00:12) 
-- CODE:
from math import *

x = eval(input("Angulo x: "))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 != 0:
		f -=  ( x**c / factorial(c) )
		
	else:
		f +=  ( x**c / factorial(c) )
	
	print(f)
	
	c += 1
		
print(round(f,10))

-- OUTPUT:
-1.5707963267948966
-0.3370957766587268
-0.983059874164973
-0.729390366263925
-0.7293903663
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 00:00:20) 
-- CODE:
from math import *

x = eval(input("Angulo x: "))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 != 0:
		f -=  ( x**c / factorial(c) )
		
	else:
		f +=  ( x**c / factorial(c) )
	
	print(f)
	
	c += 1
		
print(round(f,10))

-- OUTPUT:
-1.5707963267948966
-0.3370957766587268
-0.983059874164973
-0.729390366263925
-0.7293903663
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 00:00:30) 
-- CODE:
from math import *

x = radians(eval(input("Angulo x: ")))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 != 0:
		f -=  ( x**c / factorial(c) )
		
	else:
		f +=  ( x**c / factorial(c) )
	
	print(f)
	
	c += 1
		
print(round(f,10))

-- OUTPUT:
-0.027415567780803774
-0.02703976110243185
-0.027043195420252977
-0.027043171881809727
-0.0270431719
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 00:02:11) 
-- CODE:
from math import *

x = eval(input("Angulo x: "))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 != 0:
		f -=  ( x**c / factorial(c) )
		
	else:
		f +=  ( x**c / factorial(c) )
	
	print(f)
	
	c += 1
		
print(round(f,10))

-- OUTPUT:
-1.5707963267948966
-0.3370957766587268
-0.983059874164973
-0.729390366263925
-0.7293903663
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 00:02:37) 
-- CODE:
from math import *

x = eval(input("Angulo x: "))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 == 0:
		f -=  ( x**c / factorial(c) )
		
	else:
		f +=  ( x**c / factorial(c) )
	
	print(f)
	
	c += 1
		
print(round(f,10))

-- OUTPUT:
1.5707963267948966
0.3370957766587268
0.983059874164973
0.729390366263925
0.7293903663
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 00:05:06) 
-- CODE:
from math import *

x = eval(input("Angulo x: "))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 == 1:
		f +=  ( x**c / factorial(c) )
		
	else:
		f -=  ( x**c / factorial(c) )
		
	print(f,c)
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
1.5707963267948966 1
0.3370957766587268 2
0.983059874164973 3
0.729390366263925 4
0.7293903663
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 00:05:52) 
-- CODE:
from math import *

x = eval(input("Angulo x: "))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 == 1:
		f +=  ( x**c / factorial(c) )
		
	else:
		f -=  ( x**c / factorial(c) )
	
	f += 1 - 1
	print(f,c)
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
1.5707963267948966 1
0.3370957766587268 2
0.983059874164973 3
0.729390366263925 4
0.7293903663
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 00:06:38) 
-- CODE:
from math import *

x = eval(input("Angulo x: "))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 == 1:
		f +=  ( x**c / factorial(c) )
		
	else:
		f -=  ( x**c / factorial(c) )
	
	f += 1 - 1
	print(f,c)
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
1.5707963267948966 1
0.3370957766587268 2
0.983059874164973 3
0.729390366263925 4
0.7293903663
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 00:06:48) 
-- CODE:
from math import *

x = eval(input("Angulo x: "))
k = int(input("Termos da serie: "))

f = 0
c = 0

while (c < k):
	
	if c % 2 == 1:
		f +=  ( x**c / factorial(c) )
		
	else:
		f -=  ( x**c / factorial(c) )
	
	f += 1 - 1
	print(f,c)
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
-1.0 0
0.5707963267948966 1
-0.6629042233412732 2
-0.01694012583502702 3
-0.270609633736075 4
-0.2706096337
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-10 00:06:51) 
-- CODE:
from math import *

x = eval(input("Angulo x: "))
k = int(input("Termos da serie: "))

f = 0
c = 0

while (c < k):
	
	if c % 2 == 1:
		f +=  ( x**c / factorial(c) )
		
	else:
		f -=  ( x**c / factorial(c) )
	
	f += 1 - 1
	print(f,c)
	
	c += 1
	
print(round(f,10))

-- EXECUTION TIME:
0.29813
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
-1.0 0
0.5707963267948966 1
-0.6629042233412732 2
-0.01694012583502702 3
-0.270609633736075 4
-0.2706096337
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-1.0 0
-2.5707963267948966 1
-3.8044968769310663 2
-4.450460974437313 3
-4.4504609744
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
-1.0 0
0.04719755119659763 1
-0.5011138044194777 2
-0.5011138044
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 00:06:55) 
-- CODE:
from math import *

x = eval(input("Angulo x: "))
k = int(input("Termos da serie: "))

f = 0
c = 0

while (c < k):
	
	if c % 2 == 1:
		f +=  ( x**c / factorial(c) )
		
	else:
		f -=  ( x**c / factorial(c) )
	
	f += 1 - 1
	print(f,c)
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
-1.0 0
0.5707963267948966 1
-0.6629042233412732 2
-0.01694012583502702 3
-0.270609633736075 4
-0.2706096337
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 00:07:53) 
-- CODE:
from math import *

x = eval(input("Angulo x: "))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 == 1:
		f +=  ( x**c / factorial(c) )
		
	else:
		f -=  ( x**c / factorial(c) )
	
	f += 1 - 1
	
	print(f,c)
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
1.5707963267948966 1
0.3370957766587268 2
0.983059874164973 3
0.729390366263925 4
0.7293903663
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 00:09:17) 
-- CODE:
from math import *

x = eval(input("Angulo x: "))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 == 1:
		f +=  ( x**c / factorial(c) )
		
	else:
		f -=  ( x**c / factorial(c) )
	
	print(f,c)
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
1.5707963267948966 1
0.3370957766587268 2
0.983059874164973 3
0.729390366263925 4
0.7293903663
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 00:09:20) 
-- CODE:
from math import *

x = eval(input("Angulo x: "))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 == 1:
		f +=  ( x**c / factorial(c) )
		
	else:
		f -=  ( x**c / factorial(c) )
	
	print(f,c)
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
1.5707963267948966 1
0.3370957766587268 2
0.983059874164973 3
0.729390366263925 4
0.7293903663
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 00:10:06) 
-- CODE:
from math import *

x = radians(eval(input("Angulo x: ")))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 == 1:
		f +=  ( x**c / factorial(c) )
		
	else:
		f -=  ( x**c / factorial(c) )
	
	print(f,c)
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
0.027415567780803774 1
0.02703976110243185 2
0.027043195420252977 3
0.027043171881809727 4
0.0270431719
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 00:10:11) 
-- CODE:
from math import *

x = radians(eval(input("Angulo x: ")))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 == 1:
		f +=  ( x**c / factorial(c) )
		
	else:
		f -=  ( x**c / factorial(c) )
	
	print(f,c)
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
0.027415567780803774 1
0.02703976110243185 2
0.027043195420252977 3
0.027043171881809727 4
0.0270431719
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 00:10:19) 
-- CODE:
from math import *

x = radians(eval(input("Angulo x: ")))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 == 1:
		f +=  ( x**c / factorial(c) )
		
	else:
		f -=  ( x**c / factorial(c) )
	
	print(f,c)
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
0.027415567780803774 1
0.02703976110243185 2
0.027043195420252977 3
0.027043171881809727 4
0.0270431719
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 00:10:23) 
-- CODE:
from math import *

x = radians(eval(input("Angulo x: ")))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 == 1:
		f +=  ( x**c / factorial(c) )
		
	else:
		f -=  ( x**c / factorial(c) )
	
	print(f,c)
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
0.027415567780803774 1
0.02703976110243185 2
0.027043195420252977 3
0.027043171881809727 4
0.0270431719
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 00:10:32) 
-- CODE:
from math import *

x = radians(eval(input("Angulo x: ")))
k = int(input("Termos da serie: "))

f = 0
c = 1

while (c < k):
	
	if c % 2 == 1:
		f +=  ( x**c / factorial(c) )
		
	else:
		f -=  ( x**c / factorial(c) )
	
	print(f,c)
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
0.027415567780803774 1
0.02703976110243185 2
0.027043195420252977 3
0.027043171881809727 4
0.0270431719
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 00:28:12) 
-- CODE:
from math import *

x = radians(eval(input("Angulo x: ")))
k = int(input("Termos da serie: "))

f = 0
c = 0

while (c < k):
	
	if c % 2 == 1:
		f +=  ( x**c / factorial(c) )
		
	else:
		f -=  ( x**c / factorial(c) )
	
	print(f,c)
	
	c += 1
	
print(round(f,10))

-- OUTPUT:
-1.0 0
-0.9725844322191962 1
-0.9729602388975681 2
-0.972956804579747 3
-0.9729568281181903 4
-0.9729568281
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 00:48:42) 
-- CODE:
from math import *

x = (eval(input("Angulo x: ")))
k = int(input("Termos da serie: "))

soma = 0
i = 0

while (i < k):
	
	g = ((x**(2*i+1) / factorial(2*i+1))
	
	soma = soma + (-1)**i * g
	
	i += 1
	
print(round(soma,10))
-- ERROR:
File "XXXX", line 13
    soma = soma + (-1)**i * g
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-10 00:52:09) 
-- CODE:
from math import *

x = (eval(input("Angulo x: ")))
k = int(input("Termos da serie: "))

soma = 0
i = 0

while (i < k):
	
	g = ((x**(2*i+1)) / factorial(2*i+1))
	
	soma = soma + (-1)**i * g
	
	i += 1
	
print(round(soma,10))


-- EXECUTION TIME:
0.168537
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
1.0000035426
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-0.9998431014
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.8662952838
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-10 00:58:28) 
-- CODE:
from math import *

x = (eval(input("Angulo x: ")))
k = int(input("Termos da serie: "))

soma = 0
i = 0

while (i < k):
	
	tg = ((x**(2*i+1)) / factorial(2*i+1))
	
	soma = soma + (-1)**i * tg
	
	i += 1
	
print(round(soma,10))


-- EXECUTION TIME:
0.14044
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
1.0000035426
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-0.9998431014
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
Angulo x: Termos da serie: 0.8662952838
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 00:58:33) 
-- CODE:
from math import *

x = (eval(input("Angulo x: ")))
k = int(input("Termos da serie: "))

soma = 0
i = 0

while (i < k):
	
	tg = ((x**(2*i+1)) / factorial(2*i+1))
	
	soma = soma + (-1)**i * tg
	
	i += 1
	
print(round(soma,10))


-- OUTPUT:
1.0000035426
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 00:58:37) 
-- CODE:
from math import *

x = (eval(input("Angulo x: ")))
k = int(input("Termos da serie: "))

soma = 0
i = 0

while (i < k):
	
	tg = ((x**(2*i+1)) / factorial(2*i+1))
	
	soma = soma + (-1)**i * tg
	
	i += 1
	
print(round(soma,10))


-- OUTPUT:
1.0000035426
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 00:58:41) 
-- CODE:
from math import *

x = (eval(input("Angulo x: ")))
k = int(input("Termos da serie: "))

soma = 0
i = 0

while (i < k):
	
	tg = ((x**(2*i+1)) / factorial(2*i+1))
	
	soma = soma + (-1)**i * tg
	
	i += 1
	
print(round(soma,10))


-- OUTPUT:
1.0000035426
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 00:58:43) 
-- CODE:
from math import *

x = (eval(input("Angulo x: ")))
k = int(input("Termos da serie: "))

soma = 0
i = 0

while (i < k):
	
	tg = ((x**(2*i+1)) / factorial(2*i+1))
	
	soma = soma + (-1)**i * tg
	
	i += 1
	
print(round(soma,10))


-- OUTPUT:
1.0000035426
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-10 00:58:47) 
-- CODE:
from math import *

x = (eval(input("Angulo x: ")))
k = int(input("Termos da serie: "))

soma = 0
i = 0

while (i < k):
	
	tg = ((x**(2*i+1)) / factorial(2*i+1))
	
	soma = soma + (-1)**i * tg
	
	i += 1
	
print(round(soma,10))


-- EXECUTION TIME:
0.141216
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
1.0000035426
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-0.9998431014
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.8662952838
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
