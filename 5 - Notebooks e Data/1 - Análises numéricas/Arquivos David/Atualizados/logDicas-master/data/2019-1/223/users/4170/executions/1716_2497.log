== TEST (2019-05-09 16:19:01) 
-- CODE:
# Instituto de Computacao - UFAM
# Lab 04 - Ex 04
# 20 / 06 / 2016

qi    = float(input("Quantia inicial: "))
tempo = int(input("Tempo de investimento: "))
juros = 4.0
saldo = qi      # Variavel acumuladora

# Valor inicial da variavel contadora
t = 0

# Atualizacao de saldo
while (qi>1):
	rend = saldo * juros
	saldo = saldo + rend
	t = t + 1

	print(round(saldo, 2)) # Exibicao de resultados

	

-- OUTPUT:
2876.25
14381.25
71906.25
359531.25
1797656.25
8988281.25
44941406.25
224707031.25
1123535156.25
5617675781.25
28088378906.25
140441894531.25
702209472656.25
3511047363281.25
17555236816406.25
87776184082031.25
438880920410156.25
2194404602050781.2
1.0972023010253906e+16
5.486011505126953e+16
2.7430057525634765e+17
1.3715028762817382e+18
6.857514381408691e+18
3.4287571907043455e+19
1.7143785953521726e+20
8.571892976760863e+20
4.2859464883804313e+21
2.1429732441902155e+22
1.0714866220951077e+23
5.3574331104755387e+23
2.6787165552377693e+24
1.3393582776188846e+25
6.696791388094423e+25
3.3483956940472114e+26
1.6741978470236056e+27
8.370989235118029e+27
4.185494617559014e+28
2.092747308779507e+29
1.0463736543897535e+30
5.231868271948767e+30
2.6159341359743834e+31
1.3079670679871918e+32
6.539835339935959e+32
3.2699176699679793e+33
1.6349588349839897e+34
8.174794174919949e+34
4.087397087459974e+35
2.043698543729987e+36
1.0218492718649934e+37
5.109246359324967e+37
2.5546231796624837e+38
1.277
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 16:50:04) 
-- CODE:
# Instituto de Computacao - UFAM
# Lab 04 - Ex 04
# 20 / 06 / 2016

qi    = float(input("Quantia inicial: "))
tempo = int(input("Tempo de investimento: "))
juros = 4.0
saldo = qi      # Variavel acumuladora

# Valor inicial da variavel contadora
t = 0

# Atualizacao de saldo
while (qi>1):
	rend = qi + juros
	saldo = saldo + rend
	t = t + 1

	print(round(saldo, 2)) # Exibicao de resultados

	

-- OUTPUT:
1154.5
1733.75
2313.0
2892.25
3471.5
4050.75
4630.0
5209.25
5788.5
6367.75
6947.0
7526.25
8105.5
8684.75
9264.0
9843.25
10422.5
11001.75
11581.0
12160.25
12739.5
13318.75
13898.0
14477.25
15056.5
15635.75
16215.0
16794.25
17373.5
17952.75
18532.0
19111.25
19690.5
20269.75
20849.0
21428.25
22007.5
22586.75
23166.0
23745.25
24324.5
24903.75
25483.0
26062.25
26641.5
27220.75
27800.0
28379.25
28958.5
29537.75
30117.0
30696.25
31275.5
31854.75
32434.0
33013.25
33592.5
34171.75
34751.0
35330.25
35909.5
36488.75
37068.0
37647.25
38226.5
38805.75
39385.0
39964.25
40543.5
41122.75
41702.0
42281.25
42860.5
43439.75
44019.0
44598.25
45177.5
45756.75
46336.0
46915.25
47494.5
48073.75
48653.0
49232.25
49811.5
50390.75
50970.0
51549.25
52128.5
52707.75
53287.0
53866.25
54445.5
55024.75
55604.0
56183.25
56762.5
57341.75
57921.0
58500.25
59079.5
59658.75
60238.0
60817.25
61396.5
61975.75
62555.0
63134.25
63713.5
64292.75
64872.0
65451.25
66030.5
66609.75
67189.0
67768.25
68347.5
68926.75
69506.0
70085
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 16:50:24) 
-- CODE:
# Instituto de Computacao - UFAM
# Lab 04 - Ex 04
# 20 / 06 / 2016

qi    = float(input("Quantia inicial: "))
tempo = int(input("Tempo de investimento: "))
juros = 4.0
saldo = qi      # Variavel acumuladora

# Valor inicial da variavel contadora
t = 0

# Atualizacao de saldo
while (qi>1):
	rend = qi + juros
	saldo = saldo + rend
	t = t + 1

	print(round(saldo, 2)) # Exibicao de resultados

	

-- OUTPUT:
1154.5
1733.75
2313.0
2892.25
3471.5
4050.75
4630.0
5209.25
5788.5
6367.75
6947.0
7526.25
8105.5
8684.75
9264.0
9843.25
10422.5
11001.75
11581.0
12160.25
12739.5
13318.75
13898.0
14477.25
15056.5
15635.75
16215.0
16794.25
17373.5
17952.75
18532.0
19111.25
19690.5
20269.75
20849.0
21428.25
22007.5
22586.75
23166.0
23745.25
24324.5
24903.75
25483.0
26062.25
26641.5
27220.75
27800.0
28379.25
28958.5
29537.75
30117.0
30696.25
31275.5
31854.75
32434.0
33013.25
33592.5
34171.75
34751.0
35330.25
35909.5
36488.75
37068.0
37647.25
38226.5
38805.75
39385.0
39964.25
40543.5
41122.75
41702.0
42281.25
42860.5
43439.75
44019.0
44598.25
45177.5
45756.75
46336.0
46915.25
47494.5
48073.75
48653.0
49232.25
49811.5
50390.75
50970.0
51549.25
52128.5
52707.75
53287.0
53866.25
54445.5
55024.75
55604.0
56183.25
56762.5
57341.75
57921.0
58500.25
59079.5
59658.75
60238.0
60817.25
61396.5
61975.75
62555.0
63134.25
63713.5
64292.75
64872.0
65451.25
66030.5
66609.75
67189.0
67768.25
68347.5
68926.75
69506.0
70085
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 17:01:44) 
-- CODE:
# Instituto de Computacao - UFAM
# Lab 04 - Ex 04
# 20 / 06 / 2016

qi    = float(input("Quantia inicial: "))
tempo = int(input("Tempo de investimento: "))
juros = 4.0
saldo = qi      # Variavel acumuladora

# Valor inicial da variavel contadora
t = 0

# Atualizacao de saldo
while (tempo>1):
	rend = (qi*juros)/100
	saldo = saldo + rend
	t = t + 1
	print(round(saldo, 2)) # Exibicao de resultados

	

-- OUTPUT:
598.26
621.27
644.28
667.29
690.3
713.31
736.32
759.33
782.34
805.35
828.36
851.37
874.38
897.39
920.4
943.41
966.42
989.43
1012.44
1035.45
1058.46
1081.47
1104.48
1127.49
1150.5
1173.51
1196.52
1219.53
1242.54
1265.55
1288.56
1311.57
1334.58
1357.59
1380.6
1403.61
1426.62
1449.63
1472.64
1495.65
1518.66
1541.67
1564.68
1587.69
1610.7
1633.71
1656.72
1679.73
1702.74
1725.75
1748.76
1771.77
1794.78
1817.79
1840.8
1863.81
1886.82
1909.83
1932.84
1955.85
1978.86
2001.87
2024.88
2047.89
2070.9
2093.91
2116.92
2139.93
2162.94
2185.95
2208.96
2231.97
2254.98
2277.99
2301.0
2324.01
2347.02
2370.03
2393.04
2416.05
2439.06
2462.07
2485.08
2508.09
2531.1
2554.11
2577.12
2600.13
2623.14
2646.15
2669.16
2692.17
2715.18
2738.19
2761.2
2784.21
2807.22
2830.23
2853.24
2876.25
2899.26
2922.27
2945.28
2968.29
2991.3
3014.31
3037.32
3060.33
3083.34
3106.35
3129.36
3152.37
3175.38
3198.39
3221.4
3244.41
3267.42
3290.43
3313.44
3336.45
3359.46
3382.47
3405.48
3428.49
3451.5
3474.51
3497.52
3520.53
3543.54
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 15:01:03) 
-- CODE:
# Instituto de Computacao - UFAM
# Lab 04 - Ex 04
# 20 / 06 / 2016

qi    = float(input("Quantia inicial: "))
tempo = int(input("Tempo de investimento: "))
juros = 4.0
saldo = qi      # Variavel acumuladora

# Valor inicial da variavel contadora
t = 0

# Atualizacao de saldo
while (t < tempo):
	rend = saldo * juros
	saldo = saldo + rend
	t =  t + 1
	print(round(saldo, 2)) # Exibicao de resultados

	

-- OUTPUT:
2876.25
14381.25
71906.25
359531.25
1797656.25
8988281.25
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-09 15:01:09) 
-- CODE:
# Instituto de Computacao - UFAM
# Lab 04 - Ex 04
# 20 / 06 / 2016

qi    = float(input("Quantia inicial: "))
tempo = int(input("Tempo de investimento: "))
juros = 4.0
saldo = qi      # Variavel acumuladora

# Valor inicial da variavel contadora
t = 0

# Atualizacao de saldo
while (t < tempo):
	rend = saldo * juros
	saldo = saldo + rend
	t =  t + 1
	print(round(saldo, 2)) # Exibicao de resultados

	

-- EXECUTION TIME:
0.641551
-- TEST CASE 1:
---- input:
575.25
6
---- correct output:
598.26
622.19
647.08
672.96
699.88
727.87
---- user output:
2876.25
14381.25
71906.25
359531.25
1797656.25
8988281.25
-- TEST CASE 2:
---- input:
825.4
3

---- correct output:
858.42
892.75
928.46
---- user output:
4127.0
20635.0
103175.0
-- TEST CASE 3:
---- input:
1275.65
5
---- correct output:
1326.68
1379.74
1434.93
1492.33
1552.02
---- user output:
6378.25
31891.25
159456.25
797281.25
3986406.25
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-09 15:02:15) 
-- CODE:
# Instituto de Computacao - UFAM
# Lab 04 - Ex 04
# 20 / 06 / 2016

qi    = float(input("Quantia inicial: "))
tempo = int(input("Tempo de investimento: "))
juros = 4/100
saldo = qi      # Variavel acumuladora

# Valor inicial da variavel contadora
t = 0

# Atualizacao de saldo
while (t < tempo):
	rend = saldo * juros
	saldo = saldo + rend
	t =  t + 1
	print(round(saldo, 2)) # Exibicao de resultados

	

-- EXECUTION TIME:
0.54523
-- TEST CASE 1:
---- input:
575.25
6
---- correct output:
598.26
622.19
647.08
672.96
699.88
727.87
---- user output:
598.26
622.19
647.08
672.96
699.88
727.87
-- TEST CASE 2:
---- input:
825.4
3

---- correct output:
858.42
892.75
928.46
---- user output:
858.42
892.75
928.46
-- TEST CASE 3:
---- input:
1275.65
5
---- correct output:
1326.68
1379.74
1434.93
1492.33
1552.02
---- user output:
1326.68
1379.74
1434.93
1492.33
1552.02
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
