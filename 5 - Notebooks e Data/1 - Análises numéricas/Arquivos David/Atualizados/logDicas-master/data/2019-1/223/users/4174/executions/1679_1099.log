== SUBMITION (2019-04-23 15:48:20) 
-- CODE:
from math import*
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))

print("Entradas:", a, ",", b, ",", c)

#testar se pelo menos uma é negativa

if ( a > 0 and b > 0 and c > 0):
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			print("equilatero")
			elif (a == b or b == c or a == c):
				print ("isosceles")
			else:
				print("escaleno")
		else:
			print("invalido")
else:
	print("invalido")
	
	
			

-- EXECUTION TIME:
0.141351
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 16
    elif (a == b or b == c or a == c):
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 15:48:22) 
-- CODE:
from math import*
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))

print("Entradas:", a, ",", b, ",", c)

#testar se pelo menos uma é negativa

if ( a > 0 and b > 0 and c > 0):
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			print("equilatero")
			elif (a == b or b == c or a == c):
				print ("isosceles")
			else:
				print("escaleno")
		else:
			print("invalido")
else:
	print("invalido")
	
	
			

-- ERROR:
File "XXXX", line 16
    elif (a == b or b == c or a == c):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 15:49:00) 
-- CODE:
from math import*
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))



#testar se pelo menos uma é negativa

if ( a > 0 and b > 0 and c > 0):
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			print("equilatero")
			elif (a == b or b == c or a == c):
				print ("isosceles")
			else:
				print("escaleno")
		else:
			print("invalido")
else:
	print("invalido")
	
	
			

-- EXECUTION TIME:
0.193361
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 16
    elif (a == b or b == c or a == c):
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 15:49:01) 
-- CODE:
from math import*
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))



#testar se pelo menos uma é negativa

if ( a > 0 and b > 0 and c > 0):
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			print("equilatero")
			elif (a == b or b == c or a == c):
				print ("isosceles")
			else:
				print("escaleno")
		else:
			print("invalido")
else:
	print("invalido")
	
	
			

-- ERROR:
File "XXXX", line 16
    elif (a == b or b == c or a == c):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 15:49:02) 
-- CODE:
from math import*
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))



#testar se pelo menos uma é negativa

if ( a > 0 and b > 0 and c > 0):
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			print("equilatero")
			elif (a == b or b == c or a == c):
				print ("isosceles")
			else:
				print("escaleno")
		else:
			print("invalido")
else:
	print("invalido")
	
	
			

-- EXECUTION TIME:
0.183259
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 16
    elif (a == b or b == c or a == c):
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 15:49:50) 
-- CODE:
from math import*
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))

print("Entradas:", a, ",", b, ",", c)

#testar se pelo menos uma é negativa

if ( a > 0 and b > 0 and c > 0):
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			print("equilatero")
			elif (a == b or b == c or a == c):
				print ("isosceles")
			else:
				print("escaleno")
		else:
			print("invalido")
else:
	 print("invalido")
	
	
			

-- EXECUTION TIME:
0.169945
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 16
    elif (a == b or b == c or a == c):
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 15:49:51) 
-- CODE:
from math import*
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))

print("Entradas:", a, ",", b, ",", c)

#testar se pelo menos uma é negativa

if ( a > 0 and b > 0 and c > 0):
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			print("equilatero")
			elif (a == b or b == c or a == c):
				print ("isosceles")
			else:
				print("escaleno")
		else:
			print("invalido")
else:
	 print("invalido")
	
	
			

-- EXECUTION TIME:
0.189308
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 16
    elif (a == b or b == c or a == c):
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 15:49:52) 
-- CODE:
from math import*
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))

print("Entradas:", a, ",", b, ",", c)

#testar se pelo menos uma é negativa

if ( a > 0 and b > 0 and c > 0):
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			print("equilatero")
			elif (a == b or b == c or a == c):
				print ("isosceles")
			else:
				print("escaleno")
		else:
			print("invalido")
else:
	 print("invalido")
	
	
			

-- ERROR:
File "XXXX", line 16
    elif (a == b or b == c or a == c):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 15:49:54) 
-- CODE:
from math import*
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))

print("Entradas:", a, ",", b, ",", c)

#testar se pelo menos uma é negativa

if ( a > 0 and b > 0 and c > 0):
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			print("equilatero")
			elif (a == b or b == c or a == c):
				print ("isosceles")
			else:
				print("escaleno")
		else:
			print("invalido")
else:
	 print("invalido")
	
	
			

-- EXECUTION TIME:
0.163889
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 16
    elif (a == b or b == c or a == c):
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 15:50:01) 
-- CODE:
from math import*
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))

print("Entradas:", a, ",", b, ",", c)

#testar se pelo menos uma é negativa

if ( a > 0 and b > 0 and c > 0):
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			print("equilatero")
			elif (a == b or b == c or a == c):
				print ("isosceles")
			else:
				 print("escaleno")
		else:
			 print("invalido")
else:
	 print("invalido")
	
	
			

-- EXECUTION TIME:
0.17401
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 16
    elif (a == b or b == c or a == c):
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 15:50:02) 
-- CODE:
from math import*
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))

print("Entradas:", a, ",", b, ",", c)

#testar se pelo menos uma é negativa

if ( a > 0 and b > 0 and c > 0):
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			print("equilatero")
			elif (a == b or b == c or a == c):
				print ("isosceles")
			else:
				 print("escaleno")
		else:
			 print("invalido")
else:
	 print("invalido")
	
	
			

-- ERROR:
File "XXXX", line 16
    elif (a == b or b == c or a == c):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 15:50:03) 
-- CODE:
from math import*
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))

print("Entradas:", a, ",", b, ",", c)

#testar se pelo menos uma é negativa

if ( a > 0 and b > 0 and c > 0):
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			print("equilatero")
			elif (a == b or b == c or a == c):
				print ("isosceles")
			else:
				 print("escaleno")
		else:
			 print("invalido")
else:
	 print("invalido")
	
	
			

-- EXECUTION TIME:
0.289734
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 16
    elif (a == b or b == c or a == c):
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 15:53:12) 
-- CODE:
from math import*
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))

print("Entradas:", a, ",", b, ",", c)

#testar se pelo menos uma é negativa

if ( a > 0 and b > 0 and c > 0):
	  if (a + b > c and a + c > b and c + b > a):
		   if (a == b and b == c):
			    print("equilatero")
			elif (a == b or b == c or a == c):
				print ("isosceles")
			else:
				 print("escaleno")
		else:
			 print("invalido")
else:
	 print("invalido")
	
	
			

-- EXECUTION TIME:
0.138247
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 16
    elif (a == b or b == c or a == c):
                                     ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 15:53:13) 
-- CODE:
from math import*
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))

print("Entradas:", a, ",", b, ",", c)

#testar se pelo menos uma é negativa

if ( a > 0 and b > 0 and c > 0):
	  if (a + b > c and a + c > b and c + b > a):
		   if (a == b and b == c):
			    print("equilatero")
			elif (a == b or b == c or a == c):
				print ("isosceles")
			else:
				 print("escaleno")
		else:
			 print("invalido")
else:
	 print("invalido")
	
	
			

-- ERROR:
File "XXXX", line 16
    elif (a == b or b == c or a == c):
                                     ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 15:53:20) 
-- CODE:
from math import*
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))

print("Entradas:", a, ",", b, ",", c)

#testar se pelo menos uma é negativa

if ( a > 0 and b > 0 and c > 0):
	  if (a + b > c and a + c > b and c + b > a):
		   if (a == b and b == c):
			    print("equilatero")
			elif (a == b or b == c or a == c):
				print ("isosceles")
			else:
				 print("escaleno")
		else:
			 print("invalido")
else:
	 print("invalido")
	
	
			

-- EXECUTION TIME:
0.139562
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 16
    elif (a == b or b == c or a == c):
                                     ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 15:56:05) 
-- CODE:
from math import*
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))

print("Entradas:", a, ",", b, ",", c)

#testar se pelo menos uma é negativa

if ( a > 0 and b > 0 and c > 0):
	  if (a + b > c and a + c > b and c + b > a):
		   if (a == b and b == c):
			    print("equilatero")
			elif (a == b or b == c or a == c):
				print ("isosceles")
			else:
				 print("escaleno")
		else:
			 print("invalido")
else:
	 print("invalido")
	
	
			

-- ERROR:
File "XXXX", line 16
    elif (a == b or b == c or a == c):
                                     ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:31:32) 
-- CODE:
from math import*
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))

print("Entradas:", a, ",", b, ",", c)

#testar se pelo menos uma é negativa

if ( a > 0 and b > 0 and c > 0):
	  if (a + b > c and a + c > b and c + b > a):
		   if (a == b and b == c):
			    print("equilatero")
			elif (a == b or b == c or a == c):
				print ("isosceles")
			else:
				 print("escaleno")
		else:
			 print("invalido")
else:
	 print("invalido")
	
	
			

-- ERROR:
File "XXXX", line 16
    elif (a == b or b == c or a == c):
                                     ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:31:45) 
-- CODE:
from math import*
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))

print("Entradas:", a, ",", b, ",", c)

#testar se pelo menos uma é negativa

if ( a > 0 and b > 0 and c > 0):
	  if (a + b > c and a + c > b and c + b > a):
		   if (a == b and b == c):
			    print("equilatero")
			elif (a == b or b == c or a == c):
				print ("isosceles")
			else:
				 print("escaleno")
		else:
			 print("invalido")
else:
	 print("invalido")
	
	
			

-- ERROR:
File "XXXX", line 16
    elif (a == b or b == c or a == c):
                                     ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:37:59) 
-- CODE:
from math import*
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))

print("Entradas:", a, ",", b, ",", c)

#testar se pelo menos uma é negativa

if ( a > 0 and b > 0 and c > 0):
	  if (a + b > c and a + c > b and c + b > a):
		   if (a == b and b == c):
			    print("equilatero")
			elif (a == b or b == c or a == c):
				print ("isosceles")
			else:
				 print("escaleno")
		else:
			 print("invalido")
else:
	 print("invalido")
	
	
			

-- ERROR:
File "XXXX", line 16
    elif (a == b or b == c or a == c):
                                     ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:38:09) 
-- CODE:
from math import*
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))

print("Entradas:", a, ",", b, ",", c)

#testar se pelo menos uma é negativa

if ( a > 0 and b > 0 and c > 0):
	  if (a + b > c and a + c > b and c + b > a):
		   if (a == b and b == c):
			    print("equilatero")
			elif(a == b or b == c or a == c):
				print ("isosceles")
			else:
				 print("escaleno")
		else:
			 print("invalido")
else:
	 print("invalido")
	
	
			

-- ERROR:
File "XXXX", line 16
    elif(a == b or b == c or a == c):
                                    ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:38:16) 
-- CODE:
from math import*
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))

print("Entradas:", a, ",", b, ",", c)

#testar se pelo menos uma é negativa

if ( a > 0 and b > 0 and c > 0):
	  if (a + b > c and a + c > b and c + b > a):
		   if (a == b and b == c):
			    print("equilatero")
			elif (a == b or b == c or a == c)
				print ("isosceles")
			else:
				 print("escaleno")
		else:
			 print("invalido")
else:
	 print("invalido")
	
	
			

-- ERROR:
File "XXXX", line 16
    elif (a == b or b == c or a == c)
                                    ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:38:17) 
-- CODE:
from math import*
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))

print("Entradas:", a, ",", b, ",", c)

#testar se pelo menos uma é negativa

if ( a > 0 and b > 0 and c > 0):
	  if (a + b > c and a + c > b and c + b > a):
		   if (a == b and b == c):
			    print("equilatero")
			elif (a == b or b == c or a == c)
				print ("isosceles")
			else:
				 print("escaleno")
		else:
			 print("invalido")
else:
	 print("invalido")
	
	
			

-- ERROR:
File "XXXX", line 16
    elif (a == b or b == c or a == c)
                                    ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 17:38:19) 
-- CODE:
from math import*
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))

print("Entradas:", a, ",", b, ",", c)

#testar se pelo menos uma é negativa

if ( a > 0 and b > 0 and c > 0):
	  if (a + b > c and a + c > b and c + b > a):
		   if (a == b and b == c):
			    print("equilatero")
			elif (a == b or b == c or a == c)
				print ("isosceles")
			else:
				 print("escaleno")
		else:
			 print("invalido")
else:
	 print("invalido")
	
	
			

-- EXECUTION TIME:
0.208723
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 16
    elif (a == b or b == c or a == c)
                                    ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:38:19) 
-- CODE:
from math import*
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))

print("Entradas:", a, ",", b, ",", c)

#testar se pelo menos uma é negativa

if ( a > 0 and b > 0 and c > 0):
	  if (a + b > c and a + c > b and c + b > a):
		   if (a == b and b == c):
			    print("equilatero")
			elif (a == b or b == c or a == c)
				print ("isosceles")
			else:
				 print("escaleno")
		else:
			 print("invalido")
else:
	 print("invalido")
	
	
			

-- ERROR:
File "XXXX", line 16
    elif (a == b or b == c or a == c)
                                    ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:43:20) 
-- CODE:
from math import*
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))



#testar se pelo menos uma é negativa

if ( a > 0 and b > 0 and c > 0):
	  if (a + b > c and a + c > b and c + b > a):
		   if (a == b and b == c):
			    print('equilatero')
			elif (a == b or b == c or a == c)
				print ('isosceles')
			else:
				 print('escaleno')
	   else:
			 print('invalido')
else:
	 print('invalido')
	
	
			

-- ERROR:
File "XXXX", line 16
    elif (a == b or b == c or a == c)
                                    ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:43:28) 
-- CODE:
from math import*
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))



#testar se pelo menos uma é negativa

if ( a > 0 and b > 0 and c > 0):
	  if (a + b > c and a + c > b and c + b > a):
		   if (a == b and b == c):
			    print('equilatero')
			elif (a == b or b == c or a == c)
				print ('isosceles')
			else:
				 print('escaleno')
	   else:
			 print('invalido')
else:
	 print('invalido')
	
	
			

-- ERROR:
File "XXXX", line 16
    elif (a == b or b == c or a == c)
                                    ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:43:39) 
-- CODE:
from math import*
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))



#testar se pelo menos uma é negativa

if ( a > 0 and b > 0 and c > 0):
	  if (a + b > c and a + c > b and c + b > a):
		   if (a == b and b == c):
			    print('equilatero')
			elif (a == b or b == c or a == c):
				print ('isosceles')
			else:
				 print('escaleno')
	   else:
			 print('invalido')
else:
	 print('invalido')
	
	
			

-- ERROR:
File "XXXX", line 16
    elif (a == b or b == c or a == c):
                                     ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 17:43:44) 
-- CODE:
from math import*
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))



#testar se pelo menos uma é negativa

if ( a > 0 and b > 0 and c > 0):
	  if (a + b > c and a + c > b and c + b > a):
		   if (a == b and b == c):
			    print('equilatero')
			elif (a == b or b == c or a == c):
				print ('isosceles')
			else:
				 print('escaleno')
	   else:
			 print('invalido')
else:
	 print('invalido')
	
	
			

-- EXECUTION TIME:
0.153718
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 16
    elif (a == b or b == c or a == c):
                                     ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:43:44) 
-- CODE:
from math import*
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))



#testar se pelo menos uma é negativa

if ( a > 0 and b > 0 and c > 0):
	  if (a + b > c and a + c > b and c + b > a):
		   if (a == b and b == c):
			    print('equilatero')
			elif (a == b or b == c or a == c):
				print ('isosceles')
			else:
				 print('escaleno')
	   else:
			 print('invalido')
else:
	 print('invalido')
	
	
			

-- ERROR:
File "XXXX", line 16
    elif (a == b or b == c or a == c):
                                     ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 15:56:17) 
-- CODE:
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))



#testar se pelo menos uma é negativa

if ( a > 0 and b > 0 and c > 0):
	  if (a + b > c and a + c > b and c + b > a):
		   if (a == b and b == c):
			    print('equilatero')
			elif (a == b or b == c or a == c):
				print ('isosceles')
			else:
				 print('escaleno')
	   else:
			 print('invalido')
else:
	 print('invalido')
	
	
			

-- EXECUTION TIME:
0.151474
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 15
    elif (a == b or b == c or a == c):
                                     ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 15:56:17) 
-- CODE:
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))



#testar se pelo menos uma é negativa

if ( a > 0 and b > 0 and c > 0):
	  if (a + b > c and a + c > b and c + b > a):
		   if (a == b and b == c):
			    print('equilatero')
			elif (a == b or b == c or a == c):
				print ('isosceles')
			else:
				 print('escaleno')
	   else:
			 print('invalido')
else:
	 print('invalido')
	
	
			

-- EXECUTION TIME:
0.15836
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 15
    elif (a == b or b == c or a == c):
                                     ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 15:56:18) 
-- CODE:
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))



#testar se pelo menos uma é negativa

if ( a > 0 and b > 0 and c > 0):
	  if (a + b > c and a + c > b and c + b > a):
		   if (a == b and b == c):
			    print('equilatero')
			elif (a == b or b == c or a == c):
				print ('isosceles')
			else:
				 print('escaleno')
	   else:
			 print('invalido')
else:
	 print('invalido')
	
	
			

-- EXECUTION TIME:
0.114419
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 15
    elif (a == b or b == c or a == c):
                                     ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:56:19) 
-- CODE:
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))



#testar se pelo menos uma é negativa

if ( a > 0 and b > 0 and c > 0):
	  if (a + b > c and a + c > b and c + b > a):
		   if (a == b and b == c):
			    print('equilatero')
			elif (a == b or b == c or a == c):
				print ('isosceles')
			else:
				 print('escaleno')
	   else:
			 print('invalido')
else:
	 print('invalido')
	
	
			

-- ERROR:
File "XXXX", line 15
    elif (a == b or b == c or a == c):
                                     ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:56:28) 
-- CODE:
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))



#testar se pelo menos uma é negativa

if ( a > 0 and b > 0 and c > 0):
	  if (a + b > c and a + c > b and c + b > a):
		   if (a == b and b == c):
			    print('equilatero')
			elif (a == b or b == c or a == c):
				print ('isosceles')
			else:
				 print('escaleno')
	   else:
			 print('invalido')
else:
	 print('invalido')
	
	
			

-- ERROR:
File "XXXX", line 15
    elif (a == b or b == c or a == c):
                                     ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 15:56:39) 
-- CODE:
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))



#testar se pelo menos uma é negativa

if ( a > 0 and b > 0 and c > 0):
	  if (a + b > c and a + c > b and c + b > a):
		   if (a == b and b == c)
			    print('equilatero')
			elif (a == b or b == c or a == c):
				print ('isosceles')
			else:
				 print('escaleno')
	   else:
			 print('invalido')
else:
	 print('invalido')
	
	
			

-- EXECUTION TIME:
0.174267
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 13
    if (a == b and b == c)
                         ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:56:41) 
-- CODE:
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))



#testar se pelo menos uma é negativa

if ( a > 0 and b > 0 and c > 0):
	  if (a + b > c and a + c > b and c + b > a):
		   if (a == b and b == c)
			    print('equilatero')
			elif (a == b or b == c or a == c):
				print ('isosceles')
			else:
				 print('escaleno')
	   else:
			 print('invalido')
else:
	 print('invalido')
	
	
			

-- ERROR:
File "XXXX", line 13
    if (a == b and b == c)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 15:56:41) 
-- CODE:
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))



#testar se pelo menos uma é negativa

if ( a > 0 and b > 0 and c > 0):
	  if (a + b > c and a + c > b and c + b > a):
		   if (a == b and b == c)
			    print('equilatero')
			elif (a == b or b == c or a == c):
				print ('isosceles')
			else:
				 print('escaleno')
	   else:
			 print('invalido')
else:
	 print('invalido')
	
	
			

-- EXECUTION TIME:
0.159064
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 13
    if (a == b and b == c)
                         ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:56:45) 
-- CODE:
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))



#testar se pelo menos uma é negativa

if ( a > 0 and b > 0 and c > 0):
	  if (a + b > c and a + c > b and c + b > a):
		   if (a == b and b == c)
			    print('equilatero')
			elif (a == b or b == c or a == c):
				print ('isosceles')
			else:
				 print('escaleno')
	   else:
			 print('invalido')
else:
	 print('invalido')
	
	
			

-- ERROR:
File "XXXX", line 13
    if (a == b and b == c)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:56:45) 
-- CODE:
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))



#testar se pelo menos uma é negativa

if ( a > 0 and b > 0 and c > 0):
	  if (a + b > c and a + c > b and c + b > a):
		   if (a == b and b == c)
			    print('equilatero')
			elif (a == b or b == c or a == c):
				print ('isosceles')
			else:
				 print('escaleno')
	   else:
			 print('invalido')
else:
	 print('invalido')
	
	
			

-- ERROR:
File "XXXX", line 13
    if (a == b and b == c)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 15:56:45) 
-- CODE:
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))



#testar se pelo menos uma é negativa

if ( a > 0 and b > 0 and c > 0):
	  if (a + b > c and a + c > b and c + b > a):
		   if (a == b and b == c)
			    print('equilatero')
			elif (a == b or b == c or a == c):
				print ('isosceles')
			else:
				 print('escaleno')
	   else:
			 print('invalido')
else:
	 print('invalido')
	
	
			

-- EXECUTION TIME:
0.168842
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 13
    if (a == b and b == c)
                         ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:56:46) 
-- CODE:
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))



#testar se pelo menos uma é negativa

if ( a > 0 and b > 0 and c > 0):
	  if (a + b > c and a + c > b and c + b > a):
		   if (a == b and b == c)
			    print('equilatero')
			elif (a == b or b == c or a == c):
				print ('isosceles')
			else:
				 print('escaleno')
	   else:
			 print('invalido')
else:
	 print('invalido')
	
	
			

-- ERROR:
File "XXXX", line 13
    if (a == b and b == c)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:56:46) 
-- CODE:
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))



#testar se pelo menos uma é negativa

if ( a > 0 and b > 0 and c > 0):
	  if (a + b > c and a + c > b and c + b > a):
		   if (a == b and b == c)
			    print('equilatero')
			elif (a == b or b == c or a == c):
				print ('isosceles')
			else:
				 print('escaleno')
	   else:
			 print('invalido')
else:
	 print('invalido')
	
	
			

-- ERROR:
File "XXXX", line 13
    if (a == b and b == c)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:56:46) 
-- CODE:
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))



#testar se pelo menos uma é negativa

if ( a > 0 and b > 0 and c > 0):
	  if (a + b > c and a + c > b and c + b > a):
		   if (a == b and b == c)
			    print('equilatero')
			elif (a == b or b == c or a == c):
				print ('isosceles')
			else:
				 print('escaleno')
	   else:
			 print('invalido')
else:
	 print('invalido')
	
	
			

-- ERROR:
File "XXXX", line 13
    if (a == b and b == c)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:56:46) 
-- CODE:
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))



#testar se pelo menos uma é negativa

if ( a > 0 and b > 0 and c > 0):
	  if (a + b > c and a + c > b and c + b > a):
		   if (a == b and b == c)
			    print('equilatero')
			elif (a == b or b == c or a == c):
				print ('isosceles')
			else:
				 print('escaleno')
	   else:
			 print('invalido')
else:
	 print('invalido')
	
	
			

-- ERROR:
File "XXXX", line 13
    if (a == b and b == c)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:56:47) 
-- CODE:
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))



#testar se pelo menos uma é negativa

if ( a > 0 and b > 0 and c > 0):
	  if (a + b > c and a + c > b and c + b > a):
		   if (a == b and b == c)
			    print('equilatero')
			elif (a == b or b == c or a == c):
				print ('isosceles')
			else:
				 print('escaleno')
	   else:
			 print('invalido')
else:
	 print('invalido')
	
	
			

-- ERROR:
File "XXXX", line 13
    if (a == b and b == c)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:07:04) 
-- CODE:
from math import*
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))



#testar se pelo menos uma é negativa

if ( a > 0 and b > 0 and c > 0):
	  if (a + b > c and a + c > b and c + b > a):
		   if (a == b and b == c)
			    print('equilatero')
			elif (a == b or b == c or a == c):
				print ('isosceles')
			else:
				 print('escaleno')
	   else:
			 print('invalido')
else:
	 print('invalido')
	
	
			

-- ERROR:
File "XXXX", line 14
    if (a == b and b == c)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:12:15) 
-- CODE:
from math import*
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))



#testar se pelo menos uma é negativa

if (a > 0 and b > 0 and c > 0):
	 
	   if (a + b > c and a + c > b and c + b > a):
		    if (a == b and b == c)
			    print('equilatero')
			elif (a == b or b == c or a == c):
				 print ('isosceles')
			else:
				  print('escaleno')
	   else:
			  print('invalido')
else:
	 print('invalido')
	
	
			

-- EXECUTION TIME:
0.164304
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 15
    if (a == b and b == c)
                         ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:12:16) 
-- CODE:
from math import*
#lados dos triangulos a,b e c

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))



#testar se pelo menos uma é negativa

if (a > 0 and b > 0 and c > 0):
	 
	   if (a + b > c and a + c > b and c + b > a):
		    if (a == b and b == c)
			    print('equilatero')
			elif (a == b or b == c or a == c):
				 print ('isosceles')
			else:
				  print('escaleno')
	   else:
			  print('invalido')
else:
	 print('invalido')
	
	
			

-- ERROR:
File "XXXX", line 15
    if (a == b and b == c)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:35:26) 
-- CODE:
from math import*
a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input"lado 3:")
tt = ("Tipo de triangulo:")

if (a > 0 and b > 0 and c > 0 ):
	if (a + b > c and a + c > b and b + c > a):
		print(tt, "equilatero")
		elif ( a == b or b == c or a == c):
			print(tt, "isosceles")
		else:
			print(tt, "escaleno")
	else:
		print(tt, "invalido")
else:
	print(tt, "invalido")

	

-- ERROR:
File "XXXX", line 4
    c = float(input"lado 3:")
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:35:32) 
-- CODE:
from math import*
a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input"lado 3:")
tt = ("Tipo de triangulo:")

if (a > 0 and b > 0 and c > 0 ):
	if (a + b > c and a + c > b and b + c > a):
		print(tt, "equilatero")
		elif ( a == b or b == c or a == c):
			print(tt, "isosceles")
		else:
			print(tt, "escaleno")
	else:
		print(tt, "invalido")
else:
	print(tt, "invalido")

	

-- ERROR:
File "XXXX", line 4
    c = float(input"lado 3:")
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:36:18) 
-- CODE:
from math import*
a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))
tt = ("Tipo de triangulo:")

if (a > 0 and b > 0 and c > 0 ):
	if (a + b > c and a + c > b and b + c > a):
		print(tt, "equilatero")
		elif ( a == b or b == c or a == c):
			print(tt, "isosceles")
		else:
			print(tt, "escaleno")
	else:
		print(tt, "invalido")
else:
	print(tt, "invalido")

	

-- ERROR:
File "XXXX", line 10
    elif ( a == b or b == c or a == c):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:36:20) 
-- CODE:
from math import*
a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))
tt = ("Tipo de triangulo:")

if (a > 0 and b > 0 and c > 0 ):
	if (a + b > c and a + c > b and b + c > a):
		print(tt, "equilatero")
		elif ( a == b or b == c or a == c):
			print(tt, "isosceles")
		else:
			print(tt, "escaleno")
	else:
		print(tt, "invalido")
else:
	print(tt, "invalido")

	

-- ERROR:
File "XXXX", line 10
    elif ( a == b or b == c or a == c):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:36:51) 
-- CODE:
from math import*
a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))
tt = ("Tipo de triangulo:")

if (a > 0 and b > 0 and c > 0 ):
	if (a + b > c and a + c > b and b + c > a):
		print(tt, "equilatero")
		if ( a == b or b == c or a == c):
			print(tt, "isosceles")
		else:
			print(tt, "escaleno")
	else:
		print(tt, "invalido")
else:
	print(tt, "invalido")

	

-- OUTPUT:
Tipo de triangulo: equilatero
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:37:01) 
-- CODE:
from math import*
a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))
tt = ("Tipo de triangulo:")

if (a > 0 and b > 0 and c > 0 ):
	if (a + b > c and a + c > b and b + c > a):
		print(tt, "equilatero")
		if ( a == b or b == c or a == c):
			print(tt, "isosceles")
		else:
			print(tt, "escaleno")
	else:
		print(tt, "invalido")
else:
	print(tt, "invalido")

	

-- EXECUTION TIME:
0.151374
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Tipo de triangulo: equilatero
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Tipo de triangulo: equilatero
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:37:10) 
-- CODE:
from math import*
a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))
tt = ("Tipo de triangulo:")

if (a > 0 and b > 0 and c > 0 ):
	if (a + b > c and a + c > b and b + c > a):
		print(tt, "equilatero")
		if ( a == b or b == c or a == c):
			print(tt, "isosceles")
		else:
			print(tt, "escaleno")
	else:
		print(tt, "invalido")
else:
	print(tt, "invalido")

	

-- OUTPUT:
Tipo de triangulo: equilatero
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:37:43) 
-- CODE:
from math import*
a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))
tt = ("Tipo de triangulo:")

if (a > 0 and b > 0 and c > 0 ):
	if (a + b > c and a + c > b and b + c > a):
		print(tt, "equilatero")
		if ( a == b or b == c or a == c):
			print(tt, "isosceles")
		else:
			print(tt, "escaleno")
	else:
		print(tt, "invalido")


	

-- OUTPUT:
Tipo de triangulo: equilatero
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:38:41) 
-- CODE:
from math import*
a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))
tt = ("Tipo de triangulo:")


if (a + b > c and a + c > b and b + c > a):
	print(tt, "equilatero")
		if ( a == b or b == c or a == c):
			print(tt, "isosceles")
		else:
			print(tt, "escaleno")
else:
	print(tt, "invalido")


	

-- ERROR:
File "XXXX", line 10
    if ( a == b or b == c or a == c):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:38:43) 
-- CODE:
from math import*
a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))
tt = ("Tipo de triangulo:")


if (a + b > c and a + c > b and b + c > a):
	print(tt, "equilatero")
		if ( a == b or b == c or a == c):
			print(tt, "isosceles")
		else:
			print(tt, "escaleno")
else:
	print(tt, "invalido")


	

-- EXECUTION TIME:
0.1211
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 10
    if ( a == b or b == c or a == c):
    ^
IndentationError: unexpected indent

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:38:43) 
-- CODE:
from math import*
a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))
tt = ("Tipo de triangulo:")


if (a + b > c and a + c > b and b + c > a):
	print(tt, "equilatero")
		if ( a == b or b == c or a == c):
			print(tt, "isosceles")
		else:
			print(tt, "escaleno")
else:
	print(tt, "invalido")


	

-- ERROR:
File "XXXX", line 10
    if ( a == b or b == c or a == c):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:38:56) 
-- CODE:
from math import*
a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))
tt = ("Tipo de triangulo:")


if (a + b > c and a + c > b and b + c > a):
	print(tt, "equilatero")
		  if ( a == b or b == c or a == c):
			print(tt, "isosceles")
		   else:
			print(tt, "escaleno")
else:
	print(tt, "invalido")


	

-- ERROR:
File "XXXX", line 10
    if ( a == b or b == c or a == c):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:38:58) 
-- CODE:
from math import*
a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))
tt = ("Tipo de triangulo:")


if (a + b > c and a + c > b and b + c > a):
	print(tt, "equilatero")
		  if ( a == b or b == c or a == c):
			print(tt, "isosceles")
		   else:
			print(tt, "escaleno")
else:
	print(tt, "invalido")


	

-- ERROR:
File "XXXX", line 10
    if ( a == b or b == c or a == c):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:38:59) 
-- CODE:
from math import*
a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))
tt = ("Tipo de triangulo:")


if (a + b > c and a + c > b and b + c > a):
	print(tt, "equilatero")
		  if ( a == b or b == c or a == c):
			print(tt, "isosceles")
		   else:
			print(tt, "escaleno")
else:
	print(tt, "invalido")


	

-- EXECUTION TIME:
0.119657
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 10
    if ( a == b or b == c or a == c):
    ^
IndentationError: unexpected indent

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:09:45) 
-- CODE:
from math import* 

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))
t = ("Tipo de triangulo:")

if (a > 0 and b > 0 and c > 0):
	if ( a == b and b == c):
		print(t, "isosceles")
-- ERROR:
File "XXXX", line 10
    if ( a == b or b == c or a == c):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:10:00) 
-- CODE:
from math import* 

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))
t = ("Tipo de triangulo:")

if (a > 0 and b > 0 and c > 0):
	if ( a == b and b == c):
		print(t, "isosceles")
-- ERROR:
File "XXXX", line 10
    if ( a == b or b == c or a == c):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:10:01) 
-- CODE:
from math import* 

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))
t = ("Tipo de triangulo:")

if (a > 0 and b > 0 and c > 0):
	if ( a == b and b == c):
		print(t, "isosceles")
-- ERROR:
File "XXXX", line 10
    if ( a == b or b == c or a == c):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:10:01) 
-- CODE:
from math import* 

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))
t = ("Tipo de triangulo:")

if (a > 0 and b > 0 and c > 0):
	if ( a == b and b == c):
		print(t, "isosceles")
-- ERROR:
File "XXXX", line 10
    if ( a == b or b == c or a == c):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:10:01) 
-- CODE:
from math import* 

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))
t = ("Tipo de triangulo:")

if (a > 0 and b > 0 and c > 0):
	if ( a == b and b == c):
		print(t, "isosceles")
-- ERROR:
File "XXXX", line 10
    if ( a == b or b == c or a == c):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:10:01) 
-- CODE:
from math import* 

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))
t = ("Tipo de triangulo:")

if (a > 0 and b > 0 and c > 0):
	if ( a == b and b == c):
		print(t, "isosceles")
-- EXECUTION TIME:
0.099195
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:

-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:

-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:10:03) 
-- CODE:
from math import* 

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))
t = ("Tipo de triangulo:")

if (a > 0 and b > 0 and c > 0):
	if ( a == b and b == c):
		print(t, "isosceles")
-- ERROR:
File "XXXX", line 10
    if ( a == b or b == c or a == c):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:10:28) 
-- CODE:
from math import* 

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))
t = ("Tipo de triangulo:")

if (a > 0 and b > 0 and c > 0):
	if ( a == b and b == c):
		print(t, "isosceles")
-- ERROR:
File "XXXX", line 10
    if ( a == b or b == c or a == c):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:11:02) 
-- CODE:
from math import* 

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))
t = ("Tipo de triangulo:")

if (a > 0 and b > 0 and c > 0):
	if ( a == b and b == c):
		print(t, "isosceles")
else:
	print(t,"invalido")
-- ERROR:
File "XXXX", line 10
    if ( a == b or b == c or a == c):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:11:19) 
-- CODE:
from math import* 

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))
t = ("Tipo de triangulo:")

if (a > 0 and b > 0 and c > 0):
	if ( a == b and b == c):
		print(t, "isosceles")
else:
	print(t,"invalido")
-- ERROR:
File "XXXX", line 10
    if ( a == b or b == c or a == c):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:11:39) 
-- CODE:
from math import* 

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))
t = ("Tipo de triangulo:")

if (a > 0 and b > 0 and c > 0):
	if ( a == b and b == c):
		print(t, "isosceles")
else:
	print(t,"invalido")
-- ERROR:
File "XXXX", line 10
    if ( a == b or b == c or a == c):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:14:31) 
-- CODE:
from math import* 

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))
t = ("Tipo de triangulo:")

if (a > 0 and b > 0 and c > 0):
	if (a + b > c and a + c > b + c > a)
	     if ( a == b and b == c):
		   print(t, "equilatero")


-- ERROR:
File "XXXX", line 9
    if (a + b > c and a + c > b + c > a)
                                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:14:45) 
-- CODE:
from math import* 

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))
t = ("Tipo de triangulo:")

if (a > 0 and b > 0 and c > 0):
	if (a + b > c and a + c > b + c > a)
	     if ( a == b and b == c):
		   print(t, "equilatero")


-- ERROR:
File "XXXX", line 9
    if (a + b > c and a + c > b + c > a)
                                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:17:17) 
-- CODE:
from math import* 

a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))
t = ("Tipo de triangulo:")

if (a > 0 and b > 0 and c > 0):
	if (a + b > c and a + c > b and b + c > a):
			if (a == b and b == c):
				print (t, "equilatero")


-- ERROR:
File "XXXX", line 9
    if (a + b > c and a + c > b + c > a)
                                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 12:33:40) 
-- CODE:

a = float(input("Lado A: "))
b = float(input("Lado B: "))
c = float(input("Lado C: "))
print("Entradas:",a,",",b,",",c)

if((a >= b+c) or (b >= a+c) or (c >= a+b)):
	
	print("Tipo de triangulo: invalido ")
	
elif((a == b)and(b == c)):
	
   print("Tipo de triangulo: equilatero")
	
elif ((a==b)or(b==c)or(c==a)):
	
	print("Tipo de triangulo: isosceles")
	
elif ((a!= b)and(b!= c)and(c!= a)):
	
	print("Tipo de triangulo: escaleno")
	
else:
	
	print("Tipo de triangulo: invalido")


-- EXECUTION TIME:
0.138245
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
