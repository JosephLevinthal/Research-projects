== TEST (2019-07-02 02:13:40) 
-- CODE:
from numpy import *
from numpy.linalg import *

N = int(input("Dimensao da matriz: "))
# Cria matriz de zeros, no formato inteiro
mat = zeros((N,N), dtype=int)
# Preenchimento da matriz
for i in range(N):
	for j in range(N):
# Verifica se diagonal principal
		if (i == j):
			mat[i,j] = i
# Verifica se termo estah ACIMA
		elif (i < j):
			mat[i,j] = i
# termos abaixo da dp
		else:
			mat[i,j] = j

	
print(mat)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 02:14:47) 
-- CODE:
from numpy import *
from numpy.linalg import *

N = int(input("Dimensao da matriz: "))
# Cria matriz de zeros, no formato inteiro
mat = ones((N,N), dtype=int)
# Preenchimento da matriz
for i in range(N):
	for j in range(N):
# Verifica se diagonal principal
		if (i == j):
			mat[i,j] = i
# Verifica se termo estah ACIMA
		elif (i < j):
			mat[i,j] = i
# termos abaixo da dp
		else:
			mat[i,j] = j

	
print(mat)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 02:16:07) 
-- CODE:
from numpy import *
from numpy.linalg import *

N = int(input("Dimensao da matriz: "))
# Cria matriz de zeros, no formato inteiro
mat = zeros((N,N), dtype=int)
# Preenchimento da matriz
for i in range(N):
	for j in range(N):
# Verifica se diagonal principal
		if (i == j):
			mat[i,j] = i
# Verifica se termo estah ACIMA
		elif (i < j):
			mat[i,j] = i
# termos abaixo da dp
		else:
			mat[i,j] = j

	
print(mat)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 02:16:36) 
-- CODE:
from numpy import *
from numpy.linalg import *

N = int(input("Dimensao da matriz: "))
# Cria matriz de zeros, no formato inteiro
mat = zeros((N,N), dtype=int)
# Preenchimento da matriz
for i in range(N):
	for j in range(N):
# Verifica se diagonal principal
		if (i == j):
			mat[i,j] = i
# Verifica se termo estah ACIMA
		elif (i < j):
			mat[i,j] = i
# termos abaixo da dp
		else:
			mat[i,j] = j

	
print(mat)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 02:17:43) 
-- CODE:
from numpy import *
from numpy.linalg import *

N = int(input("Dimensao da matriz: "))
# Cria matriz de zeros, no formato inteiro
mat = zeros((N,N), dtype=int)
# Preenchimento da matriz
for i in range(N):
	for j in range(N):
# Verifica se diagonal principal
		if (i == j):
			mat[i,j] = i
# Verifica se termo estah ACIMA
		elif (i < j):
			mat[i,j] = i
# termos abaixo da dp
		else:
			mat[i,j] = j

	
print(mat)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 13:51:26) 
-- CODE:
from numpy import *
from numpy.linalg import *

N = int(input("Dimensao da matriz: "))
# Cria matriz de zeros, no formato inteiro
mat = zeros((N,N), dtype=int)
# Preenchimento da matriz
for i in range(N):
	for j in range(N):
# Verifica se diagonal principal
		if (i == j):
			mat[i,j] = i
# Verifica se termo estah ACIMA
		elif (i < j):
			mat[i,j] = i
# termos abaixo da dp
		else:
			mat[i,j] = j

	
print(mat)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 14:08:18) 
-- CODE:
from numpy import *
from numpy.linalg import *

N = int(input("Dimensao da matriz: "))
# Cria matriz de zeros, no formato inteiro
mat = zeros((N,N), dtype=int)
# Preenchimento da matriz
for i in range(N):
	for j in range(N):
# Verifica se diagonal principal
		if (i == j):
			mat[i,j] = i
# Verifica se termo estah ACIMA
		elif (i < j):
			mat[i,j] = i
# termos abaixo da dp
		else:
			mat[i,j] = j

	
print(mat)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 14:10:51) 
-- CODE:
from numpy import *
from numpy.linalg import *

N = int(input("Dimensao da matriz: "))
# Cria matriz de zeros, no formato inteiro
mat = zeros((N,N), dtype=int)
# Preenchimento da matriz
for i in range(N):
	for j in range(N):
# Verifica se diagonal principal
		if (i == j):
			mat[i,j] = i+1
# Verifica se termo estah ACIMA
		elif (i < j):
			mat[i,j] = i
# termos abaixo da dp
		else:
			mat[i,j] = j

	
print(mat)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 14:11:06) 
-- CODE:
from numpy import *
from numpy.linalg import *

N = int(input("Dimensao da matriz: "))
# Cria matriz de zeros, no formato inteiro
mat = zeros((N,N), dtype=int)
# Preenchimento da matriz
for i in range(N):
	for j in range(N):
# Verifica se diagonal principal
		if (i == j):
			mat[i,j] = i+1
# Verifica se termo estah ACIMA
		elif (i < j):
			mat[i,j] = i+1
# termos abaixo da dp
		else:
			mat[i,j] = j

	
print(mat)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 14:11:17) 
-- CODE:
from numpy import *
from numpy.linalg import *

N = int(input("Dimensao da matriz: "))
# Cria matriz de zeros, no formato inteiro
mat = zeros((N,N), dtype=int)
# Preenchimento da matriz
for i in range(N):
	for j in range(N):
# Verifica se diagonal principal
		if (i == j):
			mat[i,j] = i+1
# Verifica se termo estah ACIMA
		elif (i < j):
			mat[i,j] = i+1
# termos abaixo da dp
		else:
			mat[i,j] = j+1

	
print(mat)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 14:12:04) 
-- CODE:
from numpy import *
from numpy.linalg import *

N = int(input("Dimensao da matriz: "))
# Cria matriz de zeros, no formato inteiro
mat = zeros((N,N), dtype=int)
# Preenchimento da matriz
for i in range(N):
	for j in range(N):
# Verifica se diagonal principal
		if (i == j):
			mat[i,j] = i+1
# Verifica se termo estah ACIMA
		elif (i < j):
			mat[i,j] = i+1
# termos abaixo da dp
		else:
			mat[i,j] = j+1

	
print(mat)
-- EXECUTION TIME:
1.31779
-- TEST CASE 1:
---- input:
3
---- correct output:
[[1 1 1]
 [1 2 2]
 [1 2 3]]
---- user output:
[[1 1 1]
 [1 2 2]
 [1 2 3]]
-- TEST CASE 2:
---- input:
8
---- correct output:
[[1 1 1 1 1 1 1 1]
 [1 2 2 2 2 2 2 2]
 [1 2 3 3 3 3 3 3]
 [1 2 3 4 4 4 4 4]
 [1 2 3 4 5 5 5 5]
 [1 2 3 4 5 6 6 6]
 [1 2 3 4 5 6 7 7]
 [1 2 3 4 5 6 7 8]]
---- user output:
[[1 1 1 1 1 1 1 1]
 [1 2 2 2 2 2 2 2]
 [1 2 3 3 3 3 3 3]
 [1 2 3 4 4 4 4 4]
 [1 2 3 4 5 5 5 5]
 [1 2 3 4 5 6 6 6]
 [1 2 3 4 5 6 7 7]
 [1 2 3 4 5 6 7 8]]
-- TEST CASE 3:
---- input:
1
---- correct output:
[[1]]
---- user output:
[[1]]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
