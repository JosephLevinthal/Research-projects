== TEST (2019-04-11 16:58:51) 
-- CODE:
X=input("coordenadas:")
Y=input("coordenadas:")
P= (X;Y)
print (P)

-- ERROR:
File "XXXX", line 3
    P= (X;Y)
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:59:02) 
-- CODE:
X=input("coordenadas:")
Y=input("coordenadas:")
P= (X,Y)
print (P)

-- OUTPUT:
('20', '-37')
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:00:17) 
-- CODE:
X=input("coordenadas:")
Y=input("coordenadas:")
P= (X,Y)
C= (2*X+Y==3)
print (C)
-- OUTPUT:
False
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:00:41) 
-- CODE:
X=input("coordenadas:")
Y=input("coordenadas:")
P= (X,Y)
C= (2*X+Y=3)
print (C)
-- ERROR:
File "XXXX", line 4
    C= (2*X+Y=3)
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:01:53) 
-- CODE:
X=input("coordenadas:")
Y=input("coordenadas:")
P= (X,Y)
C= (2*X+Y)== (3)
print (C)
-- OUTPUT:
False
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:04:00) 
-- CODE:
X=input("coordenadas:")
Y=input("coordenadas:")
P= (X,Y)
C= (2*X+Y)== (3)
if (X==1 , Y==1):
	mensagem= "ponto pertence a reta"
else:
	mensagem= "ponto nao pertence a reta"
	print (mensagem)
-- OUTPUT:
False
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:05:27) 
-- CODE:
X=input("coordenadas:")
Y=input("coordenadas:")
C= (2*X+Y)
if (C==3):
	mensagem= "ponto pertence a reta"
else:
	mensagem= "ponto nao pertence a reta"
	print (mensagem)
-- OUTPUT:
ponto nao pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:05:44) 
-- CODE:
X=input("coordenadas:")
Y=input("coordenadas:")
C= (2*X)+(Y)
if (C==3):
	mensagem= "ponto pertence a reta"
else:
	mensagem= "ponto nao pertence a reta"
	print (mensagem)
-- OUTPUT:
ponto nao pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:06:18) 
-- CODE:
X=input("coordenadas:")
Y=input("coordenadas:")
C= (2*X)+(Y)
if (C==3):
	mensagem= "ponto pertence a reta"
else:
	mensagem= "ponto nao pertence a reta"
	print (mensagem)
-- OUTPUT:
ponto nao pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:09:42) 
-- CODE:
X=input("coordenadas:")
Y=input("coordenadas:")
C= (2*X)+(Y)
print(c)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(c)
NameError: name 'c' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:09:55) 
-- CODE:
X=input("coordenadas:")
Y=input("coordenadas:")
C= (2*X)+(Y)
print(C)
-- OUTPUT:
2020-37
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:10:55) 
-- CODE:
x= 2*1+1
print(x)
-- OUTPUT:
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:11:17) 
-- CODE:
X=int(input("coordenadas:")
Y=int(input("coordenadas:")
C= (2*X)+(Y)
if (C==3):
	mensagem= "ponto pertence a reta"
else:
	mensagem= "ponto nao pertence a reta"
	print (mensagem)
-- ERROR:
File "XXXX", line 2
    Y=int(input()
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:11:33) 
-- CODE:
X=int(input("coordenadas:")
Y=(input("coordenadas:")
C= (2*X)+(Y)
if (C==3):
	mensagem= "ponto pertence a reta"
else:
	mensagem= "ponto nao pertence a reta"
	print (mensagem)
-- ERROR:
File "XXXX", line 2
    Y=(input()
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:11:46) 
-- CODE:
X=int(input("coordenadas:"))
Y=int(input("coordenadas:"))
C= (2*X)+(Y)
if (C==3):
	mensagem= "ponto pertence a reta"
else:
	mensagem= "ponto nao pertence a reta"
	print (mensagem)
-- ERROR:
File "XXXX", line 2
    Y=(input()
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:12:33) 
-- CODE:
X=input("coordenadas:")
Y=input("coordenadas:")
C= (2*X)+(Y)
if (C==3):
	mensagem= "ponto pertence a reta"
else:
	mensagem= "ponto nao pertence a reta"
	print (mensagem)
-- OUTPUT:
ponto nao pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:12:49) 
-- CODE:
X=input("coordenadas:")
Y=input("coordenadas:")
C= 2*X+Y
if (C==3):
	mensagem= "ponto pertence a reta"
else:
	mensagem= "ponto nao pertence a reta"
	print (mensagem)
-- OUTPUT:
ponto nao pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:13:10) 
-- CODE:
X=input("coordenadas:")
Y=input("coordenadas:")
C= 2*(X)+(Y)
if (C==3):
	mensagem= "ponto pertence a reta"
else:
	mensagem= "ponto nao pertence a reta"
	print (mensagem)
-- OUTPUT:
ponto nao pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:13:31) 
-- CODE:
X=input("coordenadas:")
Y=input("coordenadas:")
C= int(2*(X)+(Y))
if (C==3):
	mensagem= "ponto pertence a reta"
else:
	mensagem= "ponto nao pertence a reta"
	print (mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    C= int(2*(X)+(Y))
ValueError: invalid literal for int() with base 10: '2020-37'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:13:49) 
-- CODE:
X=input("coordenadas:")
Y=input("coordenadas:")
C= (2*(X)+(Y))
if (C==3):
	mensagem= "ponto pertence a reta"
else:
	mensagem= "ponto nao pertence a reta"
	print (mensagem)
-- OUTPUT:
ponto nao pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:22:22) 
-- CODE:
X=float(input("coordenadas:"))
Y=float(input("coordenadas:"))
C= 2*(X)+(Y)
if (C==3):
	mensagem= "ponto pertence a reta"
else:
	mensagem= "ponto nao pertence a reta"
	print (mensagem)
-- OUTPUT:
ponto nao pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:22:42) 
-- CODE:
X=float(input("coordenadas:"))
Y=float(input("coordenadas:"))
C= 2*(X)+(Y)
if (C==3):
	mensagem= "ponto pertence a reta"
else:
	mensagem= "ponto nao pertence a reta"
print (mensagem)
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 17:22:47) 
-- CODE:
X=float(input("coordenadas:"))
Y=float(input("coordenadas:"))
C= 2*(X)+(Y)
if (C==3):
	mensagem= "ponto pertence a reta"
else:
	mensagem= "ponto nao pertence a reta"
print (mensagem)
-- EXECUTION TIME:
0.161875
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
