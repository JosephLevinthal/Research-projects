== TEST (2019-04-10 12:21:03) 
-- CODE:
var1 = int(input("Valor disponivel: "))
var2 = int(input("Quantidades de tickets do RU: "))
var3 = float(input("Valor dos tickets: "))
var4 = int(input("Quantidades de passe de onibus: "))
var5 = float(input("Valor das passgens: "))

total = (var2*var3)+(var4*var5)

print(total)
-- OUTPUT:
63.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:21:38) 
-- CODE:
var1 = int(input("Valor disponivel: "))
var2 = int(input("Quantidades de tickets do RU: "))
var3 = float(input("Valor dos tickets: "))
var4 = int(input("Quantidades de passe de onibus: "))
var5 = float(input("Valor das passgens: "))

total = (var2*var3)+(var4*var5)

print(total)
-- OUTPUT:
63.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:21:43) 
-- CODE:
var1 = int(input("Valor disponivel: "))
var2 = int(input("Quantidades de tickets do RU: "))
var3 = float(input("Valor dos tickets: "))
var4 = int(input("Quantidades de passe de onibus: "))
var5 = float(input("Valor das passgens: "))

total = (var2*var3)+(var4*var5)

print(total)
-- OUTPUT:
63.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:22:48) 
-- CODE:
var1 = int(input("Valor disponivel: "))
var2 = int(input("Quantidades de tickets do RU: "))
var3 = float(input("Valor dos tickets: "))
var4 = int(input("Quantidades de passe de onibus: "))
var5 = float(input("Valor das passgens: "))

total = (var2*var3)+(var4*var5)

if total < var1 :
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 12:23:07) 
-- CODE:
var1 = int(input("Valor disponivel: "))
var2 = int(input("Quantidades de tickets do RU: "))
var3 = float(input("Valor dos tickets: "))
var4 = int(input("Quantidades de passe de onibus: "))
var5 = float(input("Valor das passgens: "))

total = (var2*var3)+(var4*var5)

if total < var1 :
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- EXECUTION TIME:
0.173621
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
INSUFICIENTE
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
