== TEST (2019-05-09 07:24:54) 
-- CODE:
from math import *
#Entrada dos dados:
k = int(input("Digite um numero natural maior do que zero: "))

e = 1 + 1/factorial(k)
print(e)
-- OUTPUT:
1.0001984126984127
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 07:25:15) 
-- CODE:
from math import *
#Entrada dos dados:
k = int(input("Digite um numero natural maior do que zero: "))

e = 1 + 1/factorial(k)
print(e)
-- OUTPUT:
1.0001984126984127
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 07:42:20) 
-- CODE:
from math import *
#Entrada dos dados:
k = int(input("Digite um numero natural maior do que zero: "))

x=1
e = 1 + 1/factorial(x)
print(e)
-- OUTPUT:
2.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 07:48:30) 
-- CODE:
from math import *
#Entrada dos dados:
k = int(input("Digite um numero natural maior do que zero: "))

x=1

while(x <= k)
	e = 1 + 1/factorial(x)
	print(e)

print(e)
-- ERROR:
File "XXXX", line 7
    while(x <= k)
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 07:48:43) 
-- CODE:
from math import *
#Entrada dos dados:
k = int(input("Digite um numero natural maior do que zero: "))

x=1

while(x <= k):
	e = 1 + 1/factorial(x)
	print(e)

print(e)
-- OUTPUT:
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 07:51:05) 
-- CODE:
from math import *
#Entrada dos dados:
k = int(input("Digite um numero natural maior do que zero: "))

x=1

while(x <= k):
	e = 1 + 1/factorial(x)
print(e)


-- OUTPUT:
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 07:51:33) 
-- CODE:
from math import *
#Entrada dos dados:
k = int(input("Digite um numero natural maior do que zero: "))

x=1

while(x <= k):
	e = 1 + 1/factorial(x)
print(e)


-- OUTPUT:
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
2.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 07:54:13) 
-- CODE:
from math import *
#Entrada dos dados:
k = int(input("Digite um numero natural maior do que zero: "))

x=1

while(x <= k):
	e = 1 + 1/factorial(x)
	x = x+1
	print(e)


-- OUTPUT:
2.0
1.5
1.1666666666666667
1.0416666666666667
1.0083333333333333
1.0013888888888889
1.0001984126984127
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 07:54:27) 
-- CODE:
from math import *
#Entrada dos dados:
k = int(input("Digite um numero natural maior do que zero: "))

x=1

while(x <= k):
	e = 1 + 1/factorial(x)
	x = x+1
	print(e)


-- OUTPUT:
2.0
1.5
1.1666666666666667
1.0416666666666667
1.0083333333333333
1.0013888888888889
1.0001984126984127
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 07:54:50) 
-- CODE:
from math import *
#Entrada dos dados:
k = int(input("Digite um numero natural maior do que zero: "))

x=1

while(x <= k):
	e = 1 + 1/factorial(x)
	x = x+1
	print(e)


-- OUTPUT:
2.0
1.5
1.1666666666666667
1.0416666666666667
1.0083333333333333
1.0013888888888889
1.0001984126984127
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 07:55:07) 
-- CODE:
from math import *
#Entrada dos dados:
k = int(input("Digite um numero natural maior do que zero: "))

x=1

while(x <= k):
	e = 1 + 1/factorial(x)
	x = x+1
	print(e)


-- OUTPUT:
2.0
1.5
1.1666666666666667
1.0416666666666667
1.0083333333333333
1.0013888888888889
1.0001984126984127
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 07:55:23) 
-- CODE:
from math import *
#Entrada dos dados:
k = int(input("Digite um numero natural maior do que zero: "))

x=1

while(x <= k):
	e = 1 + 1/factorial(x)
	x = x+1
	print(e)


-- OUTPUT:
2.0
1.5
1.1666666666666667
1.0416666666666667
1.0083333333333333
1.0013888888888889
1.0001984126984127
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 07:57:04) 
-- CODE:
from math import *
#Entrada dos dados:
k = int(input("Digite um numero natural maior do que zero: "))

x=1

while(x <= k):
	e = 1 + 1/factorial(x)
	x = x+1
print(round(e, 8)


-- ERROR:
File "XXXX", line 12
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 07:58:54) 
-- CODE:
from math import *
#Entrada dos dados:
k = int(input("Digite um numero natural maior do que zero: "))

x=1
e = 1
while(x <= k):
	e = e + 1/factorial(x)
	x = x+1
print(round(e, 8)


-- ERROR:
File "XXXX", line 12
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 07:59:39) 
-- CODE:
from math import *
#Entrada dos dados:
k = int(input("Digite um numero natural maior do que zero: "))

x=1
e = 1
while(x <= k):
	e = e + 1/factorial(x)
	x = x+1

print(round(e, 8)
-- ERROR:
File "XXXX", line 12
    
                     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 08:00:17) 
-- CODE:
from math import *
#Entrada dos dados:
k = int(input("Digite um numero natural maior do que zero: "))

x=1
e = 1
while(x <= k):
	e = e + (1/factorial(x))
	x = x+1
	print(round(e, 8)
-- ERROR:
File "XXXX", line 11
    
                      ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 08:01:10) 
-- CODE:
from math import *
#Entrada dos dados:
k = int(input("Digite um numero natural maior do que zero: "))

x=1
e = 1
while(x <= k):
	e = e + (1/factorial(x))
	x = x+1

print(round(e, 8))
-- OUTPUT:
2.71825397
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 08:01:19) 
-- CODE:
from math import *
#Entrada dos dados:
k = int(input("Digite um numero natural maior do que zero: "))

x=1
e = 1
while(x <= k):
	e = e + (1/factorial(x))
	x = x+1

print(round(e, 8))
-- OUTPUT:
2.71825397
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 08:01:35) 
-- CODE:
from math import *
#Entrada dos dados:
k = int(input("Digite um numero natural maior do que zero: "))

x=1
e = 1
while(x <= k):
	e = e + (1/factorial(x))
	x = x+1

print(round(e, 8))
-- OUTPUT:
2.71825397
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 08:01:48) 
-- CODE:
from math import *
#Entrada dos dados:
k = int(input("Digite um numero natural maior do que zero: "))

x=1
e = 1
while(x <= k):
	x = x+1
	e = e + (1/factorial(x))
	

print(round(e, 8))
-- OUTPUT:
1.71827877
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 08:02:07) 
-- CODE:
from math import *
#Entrada dos dados:
k = int(input("Digite um numero natural maior do que zero: "))

x=1
e = 1
while(x <= k):
	x = x+1
	e = e + (1/factorial(x))
	

print(round(e, 8))
-- OUTPUT:
1.71827877
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 08:02:45) 
-- CODE:
from math import *
#Entrada dos dados:
k = int(input("Digite um numero natural maior do que zero: "))

x=1
e = 1
while(x <= k):
	e = e + (1/factorial(x))
	x = x+1
	

print(round(e, 8))
-- OUTPUT:
2.71825397
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 08:03:25) 
-- CODE:
from math import *
#Entrada dos dados:
k = int(input("Digite um numero natural maior do que zero: "))

x=1
e = 1
while(x <= k):
	e = 1/factorial(x)
	x = x+1
	

print(round(e, 8))
-- OUTPUT:
0.00019841
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 08:03:31) 
-- CODE:
from math import *
#Entrada dos dados:
k = int(input("Digite um numero natural maior do que zero: "))

x=1
e = 1
while(x <= k):
	e = 1/factorial(x)
	x = x+1
	

print(round(e, 8))
-- OUTPUT:
0.00019841
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 08:04:54) 
-- CODE:
from math import *
#Entrada dos dados:
k = int(input("Digite um numero natural maior do que zero: "))

x=1
e = 1
while(x <= k):
	e = 1 + 1/factorial(x)
	x = x+1
	
print(round(e, 8))
-- OUTPUT:
1.00019841
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 08:05:02) 
-- CODE:
from math import *
#Entrada dos dados:
k = int(input("Digite um numero natural maior do que zero: "))

x=1
e = 1
while(x <= k):
	e = 1 + 1/factorial(x)
	x = x+1
	
print(round(e, 8))
-- OUTPUT:
1.00019841
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 08:06:16) 
-- CODE:
from math import *
#Entrada dos dados:
k = int(input("Digite um numero natural maior do que zero: "))

x=1
e = 1
while(x <= k):
	e = 1 + 1/factorial(x)
	x = x+1
	print(round(e, 8))
-- OUTPUT:
2.0
1.5
1.16666667
1.04166667
1.00833333
1.00138889
1.00019841
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 08:07:23) 
-- CODE:
from math import *
#Entrada dos dados:
k = int(input("Digite um numero natural maior do que zero: "))

x=1
e = 1
while(x <= k):
	e = 1 + 1/factorial(x)
	x = x+1
	print(round(e, 8))
-- OUTPUT:
2.0
1.5
1.16666667
1.04166667
1.00833333
1.00138889
1.00019841
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 08:10:54) 
-- CODE:
from math import *
#Entrada dos dados:
k = int(input("Digite um numero natural maior do que zero: "))

x=1
e = 1
while(x <= k):
	soma = e + 1/factorial(x)
	x = x+1
	print(round(soma, 8))
-- OUTPUT:
2.0
1.5
1.16666667
1.04166667
1.00833333
1.00138889
1.00019841
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 08:11:05) 
-- CODE:
from math import *
#Entrada dos dados:
k = int(input("Digite um numero natural maior do que zero: "))

x=1
e = 1
while(x <= k):
	soma = e + 1/factorial(x)
	x = x+1
	print(round(soma, 8))
-- OUTPUT:
2.0
1.5
1.16666667
1.04166667
1.00833333
1.00138889
1.00019841
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 08:13:36) 
-- CODE:
from math import *
#Entrada dos dados:
k = int(input("Digite um numero natural maior do que zero: "))

x=1

while(x <= k):
	e = 1
	soma = e + 1/factorial(x)
	x = x+1
	print(round(soma, 8))
-- OUTPUT:
2.0
1.5
1.16666667
1.04166667
1.00833333
1.00138889
1.00019841
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 08:18:00) 
-- CODE:
from math import *
#Entrada dos dados:
k = int(input("Digite um numero natural maior do que zero: "))

x=1
soma = 1
while(x <= k):
	fac = 1/factorial(x)
	soma = soma + fac
	x = x+1
print(round(soma, 8))
-- OUTPUT:
2.71825397
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 08:18:09) 
-- CODE:
from math import *
#Entrada dos dados:
k = int(input("Digite um numero natural maior do que zero: "))

x=1
soma = 1
while(x <= k):
	fac = 1/factorial(x)
	soma = soma + fac
	x = x+1
print(round(soma, 8))
-- OUTPUT:
2.71825397
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 08:18:18) 
-- CODE:
from math import *
#Entrada dos dados:
k = int(input("Digite um numero natural maior do que zero: "))

x=1
soma = 1
while(x <= k):
	fac = 1/factorial(x)
	soma = soma + fac
	x = x+1
print(round(soma, 8))
-- OUTPUT:
2.71825397
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 08:18:36) 
-- CODE:
from math import *
#Entrada dos dados:
k = int(input("Digite um numero natural maior do que zero: "))

x=1
soma = 1
while(x <= k):
	fac = 1/factorial(x)
	soma = soma + fac
	x = x+1
print(round(soma, 8))
-- OUTPUT:
2.71825397
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 08:18:53) 
-- CODE:
from math import *
#Entrada dos dados:
k = int(input("Digite um numero natural maior do que zero: "))

x=1
soma = 1
while(x <= k):
	fac = 1/factorial(x)
	soma = soma + fac
	x = x+1
print(round(soma, 8))
-- OUTPUT:
2.71825397
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-09 08:19:08) 
-- CODE:
from math import *
#Entrada dos dados:
k = int(input("Digite um numero natural maior do que zero: "))

x=1
soma = 1
while(x <= k):
	fac = 1/factorial(x)
	soma = soma + fac
	x = x+1
print(round(soma, 8))
-- EXECUTION TIME:
0.179317
-- TEST CASE 1:
---- input:
7
---- correct output:
2.71805556
---- user output:
2.71825397
-- TEST CASE 2:
---- input:
15
---- correct output:
2.71828183
---- user output:
2.71828183
-- TEST CASE 3:
---- input:
6
---- correct output:
2.71666667
---- user output:
2.71805556
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 08:19:29) 
-- CODE:
from math import *
#Entrada dos dados:
k = int(input("Digite um numero natural maior do que zero: "))

x=1
soma = 1
while(x <= k):
	fac = 1/factorial(x)
	soma = soma + fac
	x = x+1
print(round(soma, 8))
-- OUTPUT:
2.71825397
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 08:20:08) 
-- CODE:
from math import *
#Entrada dos dados:
k = int(input("Digite um numero natural maior do que zero: "))

x=1
soma = 1
while(x < k):
	fac = 1/factorial(x)
	soma = soma + fac
	x = x+1
print(round(soma, 8))
-- OUTPUT:
2.71805556
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-09 08:20:19) 
-- CODE:
from math import *
#Entrada dos dados:
k = int(input("Digite um numero natural maior do que zero: "))

x=1
soma = 1
while(x < k):
	fac = 1/factorial(x)
	soma = soma + fac
	x = x+1
print(round(soma, 8))
-- EXECUTION TIME:
0.142154
-- TEST CASE 1:
---- input:
7
---- correct output:
2.71805556
---- user output:
2.71805556
-- TEST CASE 2:
---- input:
15
---- correct output:
2.71828183
---- user output:
2.71828183
-- TEST CASE 3:
---- input:
6
---- correct output:
2.71666667
---- user output:
2.71666667
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:33:44) 
-- CODE:
from math import *
#Entrada dos dados:
k = int(input("Digite um numero natural maior do que zero: "))

x=1
soma = 1
while(x < k):
	fac = 1/factorial(x)
	soma = soma + fac
	x = x+1
print(round(soma, 8))
-- OUTPUT:
2.71805556
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:33:55) 
-- CODE:
from math import *
#Entrada dos dados:
k = int(input("Digite um numero natural maior do que zero: "))

x=1
soma = 1
while(x < k):
	fac = 1/factorial(x)
	soma = soma + fac
	x = x+1
print(round(soma, 8))
-- OUTPUT:
2.71805556
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:35:00) 
-- CODE:
from math import *
#Entrada dos dados:
k = int(input("Digite um numero natural maior do que zero: "))

x=1
soma = 1
while(x < k):
	fac = 1/factorial(x)
	soma = soma + fac
	x = x+1
print(round(soma, 8))
-- OUTPUT:
2.71805556
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:35:08) 
-- CODE:
from math import *
#Entrada dos dados:
k = int(input("Digite um numero natural maior do que zero: "))

x=1
soma = 1
while(x < k):
	fac = 1/factorial(x)
	soma = soma + fac
	x = x+1
print(round(soma, 8))
-- OUTPUT:
2.71805556
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
