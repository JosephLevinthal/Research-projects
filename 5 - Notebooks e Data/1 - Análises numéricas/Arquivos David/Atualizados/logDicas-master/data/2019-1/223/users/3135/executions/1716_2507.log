== TEST (2019-05-11 15:46:06) 
-- CODE:
inicial = int(input(" "))
percent = int(input(" "))
cont = 0
res = inicial
while( res > 0 and res < 8000):
	venda = int(input(" "))
		if(cont == 0):
			res = inicial*(percent/100) + inicial - venda
		else:
			res = res*(percent/100) + res - venda
		cont=cont+1
if(res<0):
    print("ZERO")
elif(res>= 8000):
    print("MAXIMO")
print(cont)
-- ERROR:
File "XXXX", line 7
    if(cont == 0):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 15:47:24) 
-- CODE:
inicial = int(input(" "))
percent = int(input(" "))
cont = 0
res = inicial
while( res > 0 and res < 8000):
	venda = int(input(" "))
		if(cont == 0):
			res = inicial*(percent/100) + inicial - venda
		else:
			res = res*(percent/100) + res - venda
cont=cont+1
if(res<0):
    print("ZERO")
elif(res>= 8000):
    print("MAXIMO")
print(cont)
-- ERROR:
File "XXXX", line 7
    if(cont == 0):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 15:47:42) 
-- CODE:
inicial = int(input(" "))
percent = int(input(" "))
cont = 0
res = inicial
while( res > 0 and res < 8000):
venda = int(input(" "))
	if(cont == 0):
		es = inicial*(percent/100) + inicial - venda
	else:
		res = res*(percent/100) + res - venda
cont=cont+1
if(res<0):
    print("ZERO")
elif(res>= 8000):
    print("MAXIMO")
print(cont)
-- ERROR:
File "XXXX", line 6
    venda = int(input())
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:57:31) 
-- CODE:
inicial = int(input(" "))
percent = int(input(" "))
cont = 0
res = inicial
while( res > 0 and res < 8000):
	venda = int(input(" "))
	if(cont == 0):
		es = inicial*(percent/100) + inicial - venda
	else:
		res = res*(percent/100) + res - venda
cont=cont+1
if(res<0):
    print("ZERO")
elif(res>= 8000):
    print("MAXIMO")
print(cont)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    venda = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 09:28:54) 
-- CODE:
qin=int(input("Insira a quantidade inicial"))
p=float(input("Insira a quantidade de crescimento"))
cont=0
res=qi
while(res>0 and res<8000):
	venda=int(input("Insira o valor de cada mes"))
	if(cont==0)
		res = qi*(percent/100) + inicial-venda
	else:
		res = qi*(percent*100) + res-venda
	cont+=1
if(res<0):
	print("ZERO")
elif(res>=8000):
	print("MAXIMO")
print(cont)
-- ERROR:
File "XXXX", line 7
    if(cont==0)
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 09:29:00) 
-- CODE:
qin=int(input("Insira a quantidade inicial"))
p=float(input("Insira a quantidade de crescimento"))
cont=0
res=qi
while(res>0 and res<8000):
	venda=int(input("Insira o valor de cada mes"))
	if(cont==0):
		res = qi*(percent/100) + inicial-venda
	else:
		res = qi*(percent*100) + res-venda
	cont+=1
if(res<0):
	print("ZERO")
elif(res>=8000):
	print("MAXIMO")
print(cont)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    res=qi
NameError: name 'qi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 09:29:16) 
-- CODE:
qin=int(input("Insira a quantidade inicial:"))
p=float(input("Insira a quantidade de crescimento:"))
cont=0
res=qi
while(res>0 and res<8000):
	venda=int(input("Insira o valor de cada mes:"))
	if(cont==0):
		res = qi*(percent/100) + inicial-venda
	else:
		res = qi*(percent*100) + res-venda
	cont+=1
if(res<0):
	print("ZERO")
elif(res>=8000):
	print("MAXIMO")
print(cont)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    res=qi
NameError: name 'qi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 09:29:41) 
-- CODE:
qin=int(input("Insira a quantidade inicial:"))
p=float(input("Insira a quantidade de crescimento:"))
cont=0
res=qin
while(res>0 and res<8000):
	venda=int(input("Insira o valor de cada mes:"))
	if(cont==0):
		res = qin*(percent/100) + inicial-venda
	else:
		res = qin*(percent*100) + res-venda
	cont+=1
if(res<0):
	print("ZERO")
elif(res>=8000):
	print("MAXIMO")
print(cont)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    res = qin*(percent/100) + inicial-venda
NameError: name 'percent' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 09:30:12) 
-- CODE:
qin=int(input("Insira a quantidade inicial:"))
p=float(input("Insira a quantidade de crescimento:"))
cont=0
res=qin
while(res>0 and res<8000):
	venda=int(input("Insira o valor de cada mes:"))
	if(cont==0):
		res = qin*(p/100) + inicial-venda
	else:
		res = qin*(p*100) + res-venda
	cont+=1
if(res<0):
	print("ZERO")
elif(res>=8000):
	print("MAXIMO")
print(cont)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    res = qin*(p/100) + inicial-venda
NameError: name 'inicial' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 09:30:37) 
-- CODE:
qin=int(input("Insira a quantidade inicial:"))
p=float(input("Insira a quantidade de crescimento:"))
cont=0
res=qin
while(res>0 and res<8000):
	venda=int(input("Insira o valor de cada mes:"))
	if(cont==0):
		res = qin*(p/100) + inicial-venda
	else:
		res = qin*(p/100) + res-venda
	cont+=1
if(res<0):
	print("ZERO")
elif(res>=8000):
	print("MAXIMO")
print(cont)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    res = qin*(p/100) + inicial-venda
NameError: name 'inicial' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 09:30:58) 
-- CODE:
qin=int(input("Insira a quantidade inicial:"))
p=float(input("Insira a quantidade de crescimento:"))
cont=0
res=qin
while(res>0 and res<8000):
	venda=int(input("Insira o valor de cada mes:"))
	if(cont==0):
		res = qin*(p/100) + qin-venda
	else:
		res = qin*(p/100) + res-venda
	cont+=1
if(res<0):
	print("ZERO")
elif(res>=8000):
	print("MAXIMO")
print(cont)
-- EXECUTION TIME:
0.164672
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1716/2507/main.py", line 6, in <module>
    venda=int(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 09:30:58) 
-- CODE:
qin=int(input("Insira a quantidade inicial:"))
p=float(input("Insira a quantidade de crescimento:"))
cont=0
res=qin
while(res>0 and res<8000):
	venda=int(input("Insira o valor de cada mes:"))
	if(cont==0):
		res = qin*(p/100) + qin-venda
	else:
		res = qin*(p/100) + res-venda
	cont+=1
if(res<0):
	print("ZERO")
elif(res>=8000):
	print("MAXIMO")
print(cont)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    venda=int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 09:31:16) 
-- CODE:
qin=int(input("Insira a quantidade inicial:"))
p=float(input("Insira a quantidade de crescimento:"))
cont=0
res=qin
while(res>0 and res<8000):
	venda=int(input("Insira o valor de cada mes:"))
	if(cont==0):
		res = qin*(p/100) + qin-venda
	else:
		res = qin*(p/100) + res-venda
	cont+=1
if(res<0):
	print("ZERO")
elif(res>=8000):
	print("MAXIMO")
print(cont)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    venda=int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 09:31:19) 
-- CODE:
qin=int(input("Insira a quantidade inicial:"))
p=float(input("Insira a quantidade de crescimento:"))
cont=0
res=qin
while(res>0 and res<8000):
	venda=int(input("Insira o valor de cada mes:"))
	if(cont==0):
		res = qin*(p/100) + qin-venda
	else:
		res = qin*(p/100) + res-venda
	cont+=1
if(res<0):
	print("ZERO")
elif(res>=8000):
	print("MAXIMO")
print(cont)
-- EXECUTION TIME:
0.214848
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1716/2507/main.py", line 6, in <module>
    venda=int(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 09:37:38) 
-- CODE:
qin=int(input("Insira a quantidade inicial:"))
p=float(input("Insira a quantidade de crescimento:"))
cont=0
res=qin
while(res>0 and res<8000):
	venda=int(input("Insira o valor de cada mes:"))
	if(cont==0):
		res = qin*(p/100) + qin-venda
	else:
		res = qin*(p/100) + res-venda
	cont+=1
if(res<0):
	print("ZERO".upper())
elif(res>=8000):
	print("MAXIMO".upper())
print(cont)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    venda=int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 09:37:55) 
-- CODE:
qin=int(input("Insira a quantidade inicial:"))
p=float(input("Insira a quantidade de crescimento:"))
cont=0
res=qin
while(res>0 and res<8000):
	venda=int(input("Insira o valor de cada mes:"))
	if(cont==0):
		res = qin*(p/100) + qin-venda
	else:
		res = qin*(p/100) + res-venda
	cont+=1
if(res<0):
	print("ZERO".upper())
elif(res>=8000):
	print("MAXIMO".upper())
print(cont)
-- EXECUTION TIME:
0.149277
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1716/2507/main.py", line 6, in <module>
    venda=int(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-31 19:42:08) 
-- CODE:
qin=int(input("Insira a quantidade inicial:"))
p=float(input("Insira a quantidade de crescimento:"))
cont=0
res=qin
while(res>0 and res<8000):
	venda=int(input("Insira o valor de cada mes:"))
	if(cont==0):
		res = qin*(p/100) + qin-venda
	else:
		res = qin*(p/100) + res-venda
	cont+=1
if(res<0):
	print("ZERO".upper())
elif(res>=8000):
	print("MAXIMO".upper())
print(cont)
-- EXECUTION TIME:
0.62341
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1716/2507/main.py", line 6, in <module>
    venda=int(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-03 01:32:27) 
-- CODE:
qin=int(input("Insira a quantidade inicial:"))
p=float(input("Insira a quantidade de crescimento:"))
cont=0
res=qin
while(res>0 and res<8000):
	venda=int(input("Insira o valor de cada mes:"))
	if(cont==0):
		res = qin*(p/100) + qin-venda
	else:
		res = qin*(p/100) + res-venda
	cont+=1
if(res<0):
	print("ZERO".upper())
elif(res>=8000):
	print("MAXIMO".upper())
print(cont)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    venda=int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
