== TEST (2019-06-09 14:52:40) 
-- CODE:
range(5,2,2)
print(range)
-- OUTPUT:
<class 'range'>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 16:23:00) 
-- CODE:
from numpy import *
vet_notas=array(eval(input("digite")))
vet_freq=array(eval(input("digite")))
numero_horas=60
resultado=zeros(3,dtype=int)
for i in range(size(vet_freq)):
	if (vet_freq[i]< 0.75 * numero_horas):
		resultado[2]=resultado[2] =1
	elif(vet_notas<5):
		reultado[1]=reultado[1] +1
	else:
	resultado[0]=reultado[0] +1
print(resultado)
-- ERROR:
File "XXXX", line 12
    resultado[0]=reultado[0] +1
            ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 16:23:10) 
-- CODE:
from numpy import *
vet_notas=array(eval(input("digite")))
vet_freq=array(eval(input("digite")))
numero_horas=60
resultado=zeros(3,dtype=int)
for i in range(size(vet_freq)):
	if (vet_freq[i]< 0.75 * numero_horas):
		resultado[2]=resultado[2] =1
	elif(vet_notas<5):
		reultado[1]=reultado[1] +1
	else:
		resultado[0]=reultado[0] +1
print(resultado)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 16:24:29) 
-- CODE:
from numpy import *
vet_notas=array(eval(input("digite")))
vet_freq=array(eval(input("digite")))
numero_horas=60
resultado=zeros(3,dtype=int)
for i in range(size(vet_freq)):
	if (vet_freq[i]< 0.75 * numero_horas):
		resultado[2]=resultado[2] + 1
	elif(vet_notas<5):
		reultado[1]=reultado[1] +1
	else:
		resultado[0]=reultado[0] +1
print(resultado)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 16:25:11) 
-- CODE:
from numpy import *
vet_notas=array(eval(input("digite")))
vet_freq=array(eval(input("digite")))
numero_horas=60
resultado=zeros(3,dtype=int)
for i in range(size(vet_freq)):
	if (vet_freq[i]< 0.75 * numero_horas):
		resultado[2]=resultado[2] + 1
	elif(vet_notas[i]<5):
		reultado[1]=reultado[1] +1
	else:
		resultado[0]=reultado[0] +1
print(resultado)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 16:25:32) 
-- CODE:
from numpy import *
vet_notas=array(eval(input("digite")))
vet_freq=array(eval(input("digite")))
numero_horas=60
resultado=zeros(3,dtype=int)
for i in range(size(vet_freq)):
	if (vet_freq[i]< 0.75 * numero_horas):
		resultado[2]=resultado[2] + 1
	elif(vet_notas[i]<5):
		reultado[1]=reultado[1] +1
	else:
		resultado[0]=resultado[0] +1
print(resultado)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-09 16:25:50) 
-- CODE:
from numpy import *
vet_notas=array(eval(input("digite")))
vet_freq=array(eval(input("digite")))
numero_horas=60
resultado=zeros(3,dtype=int)
for i in range(size(vet_freq)):
	if (vet_freq[i]< 0.75 * numero_horas):
		resultado[2]=resultado[2] + 1
	elif(vet_notas[i]<5):
		reultado[1]=reultado[1] +1
	else:
		resultado[0]=resultado[0] +1
print(resultado)
-- EXECUTION TIME:
0.970035
-- TEST CASE 1:
---- input:
[6.2,7.3,7.0,7.5,8.9]
[75,76,74,73,72]
100
---- correct output:
[2 0 3]
---- user output:
[5 0 0]
-- TEST CASE 2:
---- input:
[7.4,7.6,7.5,7.2,7.2,7.3,7.8]
[60,80,55,58,61,70,79]
80
---- correct output:
[5 0 2]
---- user output:
[7 0 0]
-- TEST CASE 3:
---- input:
[8.2,6.9,7.0,6.5,7.4,8.5,7.6,6.9,4.5,5.5]
[90,40,70,35,100,110,85,99,100,110]
120
---- correct output:
[5 1 4]
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 16:26:26) 
-- CODE:
from numpy import *
vet_notas=array(eval(input("digite")))
vet_freq=array(eval(input("digite")))
numero_horas=60
resultado=zeros(3,dtype=int)
for i in range(size(vet_freq)):
	if (vet_freq[i]< 0.75 * numero_horas):
		resultado[2] = resultado[2] + 1
	elif(vet_notas[i]<5):
		resultado[1]=resultado[1] +1
	else:
		resultado[0]=resultado[0] +1
print(resultado)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 16:27:32) 
-- CODE:
from numpy import *
vet_notas=array(eval(input("digite")))
vet_freq=array(eval(input("digite")))
numero_horas=int(input('digite'))
resultado=zeros(3,dtype=int)
for i in range(size(vet_freq)):
	if (vet_freq[i]< 0.75 * numero_horas):
		resultado[2] = resultado[2] + 1
	elif(vet_notas[i]<5):
		resultado[1]=resultado[1] +1
	else:
		resultado[0]=resultado[0] +1
print(resultado)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-09 16:27:53) 
-- CODE:
from numpy import *
vet_notas=array(eval(input("digite")))
vet_freq=array(eval(input("digite")))
numero_horas=int(input('digite'))
resultado=zeros(3,dtype=int)
for i in range(size(vet_freq)):
	if (vet_freq[i]< 0.75 * numero_horas):
		resultado[2] = resultado[2] + 1
	elif(vet_notas[i]<5):
		resultado[1]=resultado[1] +1
	else:
		resultado[0]=resultado[0] +1
print(resultado)
-- EXECUTION TIME:
1.03494
-- TEST CASE 1:
---- input:
[6.2,7.3,7.0,7.5,8.9]
[75,76,74,73,72]
100
---- correct output:
[2 0 3]
---- user output:
[2 0 3]
-- TEST CASE 2:
---- input:
[7.4,7.6,7.5,7.2,7.2,7.3,7.8]
[60,80,55,58,61,70,79]
80
---- correct output:
[5 0 2]
---- user output:
[5 0 2]
-- TEST CASE 3:
---- input:
[8.2,6.9,7.0,6.5,7.4,8.5,7.6,6.9,4.5,5.5]
[90,40,70,35,100,110,85,99,100,110]
120
---- correct output:
[5 1 4]
---- user output:
[5 1 4]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
