== TEST (2019-05-02 16:08:14) 
-- CODE:
x=float(input('digite x:  '))
if(x==0):
elif (x <=0):
	print(round(x,4))
-- ERROR:
File "XXXX", line 3
    elif (x <=0):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:08:30) 
-- CODE:
x=float(input('digite x:  '))
if(x == 0):
elif(x <=0):
	print(round(x,4))
-- ERROR:
File "XXXX", line 3
    elif(x <=0):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:09:01) 
-- CODE:
x=float(input('digite x:  '))

if(x == 0):
elif(x <=0):
print(round(x,4))
-- ERROR:
File "XXXX", line 4
    elif(x <=0):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:09:18) 
-- CODE:
x=float(input('digite x:  '))

if(x == 0):
	print(round(x,4))
-- ERROR:
File "XXXX", line 4
    elif(x <=0):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:09:44) 
-- CODE:
x=float(input('digite x:  '))

if(x == 0):
	print(round (x,4))
-- ERROR:
File "XXXX", line 4
    elif(x <=0):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:10:20) 
-- CODE:
x=float(input('digite x:  '))

if(x == 0):
	print(round(x, 4))
else:
	print('erro')
-- OUTPUT:
erro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:10:27) 
-- CODE:
x=float(input('digite x:  '))

if(x == 0):
	print(round(x, 4))
else:
	print('erro')
-- OUTPUT:
erro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:10:37) 
-- CODE:
x=float(input('digite x:  '))

if(x == 0):
	print(round(x,2 ))
else:
	print('erro')
-- OUTPUT:
erro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:10:42) 
-- CODE:
x=float(input('digite x:  '))

if(x == 0):
	print(round(x,2 ))
else:
	print('erro')
-- OUTPUT:
erro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:13:06) 
-- CODE:
x=float(input('digite x:  '))

if(x == 0):
	print(round(x,2 ))
elif((x> 0) and (x>=2)):
	print(round(x**(1/3),4)
-- ERROR:
File "XXXX", line 7
    
                            ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:13:42) 
-- CODE:
x=float(input('digite x:  '))

if(x == 0):
	print(round(x,2 ))
elif((x> 0) and (x>=2)):
	print(x **(1/3),4)
-- ERROR:
File "XXXX", line 7
    
                            ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:14:02) 
-- CODE:
x=float(input('digite x:  '))

if(x == 0):
	print(round(x,2 ))
elif((x> 0) and (x>=2)):
	print(x **(1/3))
-- ERROR:
File "XXXX", line 7
    
                            ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:14:18) 
-- CODE:
x=float(input('digite x:  '))

if(x == 0):
	print(round(x,2 ))
elif((x> 0) and (x>=2)):
	print(round(x **(1/3), 4))
-- ERROR:
File "XXXX", line 7
    
                            ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:16:27) 
-- CODE:
x=float(input('digite x:  '))

if(x == 0):
	print(round(x,2 ))
elif((x> 0) and (x>=2)):
	print(round(x **(1/2), 4))
else:
	print(round(x**(1/3),4))
-- OUTPUT:
0.8291
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:16:34) 
-- CODE:
x=float(input('digite x:  '))

if(x == 0):
	print(round(x,2 ))
elif((x> 0) and (x>=2)):
	print(round(x **(1/2), 4))
else:
	print(round(x**(1/3),4))
-- EXECUTION TIME:
0.161606
-- TEST CASE 1:
---- input:
0.57
---- correct output:
1
---- user output:
0.8291
-- TEST CASE 2:
---- input:
1.99
---- correct output:
1.4107
---- user output:
1.2578
-- TEST CASE 3:
---- input:
2.01
---- correct output:
1.262
---- user output:
1.4177
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:18:16) 
-- CODE:
from import math 8
x=float(input('digite x:  '))
if(x == 0):
	print(round(x,2 ))
elif((x> 0) and (x>=2)):
	print(round(abs(x **(1/2)), 4))
else:
	print(round(x**(1/3),4))
-- EXECUTION TIME:
0.174851
-- ERROR:
  File "/home/codebench/codes/1715/3032/main.py", line 1
    from import math 8
              ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:18:19) 
-- CODE:
from import math 8
x=float(input('digite x:  '))
if(x == 0):
	print(round(x,2 ))
elif((x> 0) and (x>=2)):
	print(round(abs(x **(1/2)), 4))
else:
	print(round(x**(1/3),4))
-- ERROR:
File "XXXX", line 1
    from import math 8
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:18:20) 
-- CODE:
from import math 8
x=float(input('digite x:  '))
if(x == 0):
	print(round(x,2 ))
elif((x> 0) and (x>=2)):
	print(round(abs(x **(1/2)), 4))
else:
	print(round(x**(1/3),4))
-- EXECUTION TIME:
0.140434
-- ERROR:
  File "/home/codebench/codes/1715/3032/main.py", line 1
    from import math 8
              ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:18:32) 
-- CODE:

from import math 8
x=float(input('digite x:  '))
if(x == 0):
	print(round(x,2 ))
elif((x> 0) and (x>=2)):
	print(round(abs(x **(1/2)), 4))
else:
	print(round(x**(1/3),4))
-- EXECUTION TIME:
0.155582
-- ERROR:
  File "/home/codebench/codes/1715/3032/main.py", line 2
    from import math 8
              ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:18:39) 
-- CODE:

from import math *
x=float(input('digite x:  '))
if(x == 0):
	print(round(x,2 ))
elif((x> 0) and (x>=2)):
	print(round(abs(x **(1/2)), 4))
else:
	print(round(x**(1/3),4))
-- ERROR:
File "XXXX", line 2
    from import math *
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:18:40) 
-- CODE:

from import math *
x=float(input('digite x:  '))
if(x == 0):
	print(round(x,2 ))
elif((x> 0) and (x>=2)):
	print(round(abs(x **(1/2)), 4))
else:
	print(round(x**(1/3),4))
-- EXECUTION TIME:
0.139158
-- ERROR:
  File "/home/codebench/codes/1715/3032/main.py", line 2
    from import math *
              ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:18:42) 
-- CODE:

from import math *
x=float(input('digite x:  '))
if(x == 0):
	print(round(x,2 ))
elif((x> 0) and (x>=2)):
	print(round(abs(x **(1/2)), 4))
else:
	print(round(x**(1/3),4))
-- EXECUTION TIME:
0.207467
-- ERROR:
  File "/home/codebench/codes/1715/3032/main.py", line 2
    from import math *
              ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:18:42) 
-- CODE:

from import math *
x=float(input('digite x:  '))
if(x == 0):
	print(round(x,2 ))
elif((x> 0) and (x>=2)):
	print(round(abs(x **(1/2)), 4))
else:
	print(round(x**(1/3),4))
-- EXECUTION TIME:
0.17321
-- ERROR:
  File "/home/codebench/codes/1715/3032/main.py", line 2
    from import math *
              ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:19:00) 
-- CODE:

from import math 8
x=float(input('digite x:  '))
if(x == 0):
	print(round(x,2 ))
elif((x> 0) and (x>=2)):
	print(round(abs(x **(1/2)), 4))
else:
	print(round(x**(1/3),4))
-- EXECUTION TIME:
0.1372
-- ERROR:
  File "/home/codebench/codes/1715/3032/main.py", line 2
    from import math 8
              ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:19:31) 
-- CODE:

from import math 8
x=float(input('digite x:  '))

if(x <0):
	print(round(x,2 ))
elif((x> 0) and (x>=2)):
	print(round(abs(x **(1/2)), 4))
else:
	print(round(x**(1/3),4))
-- EXECUTION TIME:
0.239297
-- ERROR:
  File "/home/codebench/codes/1715/3032/main.py", line 2
    from import math 8
              ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:19:50) 
-- CODE:

from import math 8
x=float(input('digite x:  '))

if(x <0):
	print(round(x,4))
elif((x> 0) and (x>=2)):
	print(round(abs(x **(1/2)), 4))
else:
	print(round(x**(1/3),4))
-- ERROR:
File "XXXX", line 2
    from import math 8
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:19:51) 
-- CODE:

from import math 8
x=float(input('digite x:  '))

if(x <0):
	print(round(x,4))
elif((x> 0) and (x>=2)):
	print(round(abs(x **(1/2)), 4))
else:
	print(round(x**(1/3),4))
-- EXECUTION TIME:
0.138759
-- ERROR:
  File "/home/codebench/codes/1715/3032/main.py", line 2
    from import math 8
              ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:19:53) 
-- CODE:

from import math 8
x=float(input('digite x:  '))

if(x <0):
	print(round(x,4))
elif((x> 0) and (x>=2)):
	print(round(abs(x **(1/2)), 4))
else:
	print(round(x**(1/3),4))
-- ERROR:
File "XXXX", line 2
    from import math 8
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:20:01) 
-- CODE:

from import math *
x=float(input('digite x:  '))

if(x <0):
	print(round(x,4))
elif((x> 0) and (x>=2)):
	print(round(abs(x **(1/2)), 4))
else:
	print(round(x**(1/3),4))
-- ERROR:
File "XXXX", line 2
    from import math *
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:20:12) 
-- CODE:


x=float(input('digite x:  '))

if(x <0):
	print(round(x,4))
elif((x> 0) and (x>=2)):
	print(round(abs(x **(1/2)), 4))
else:
	print(round(x**(1/3),4))
-- EXECUTION TIME:
0.125287
-- TEST CASE 1:
---- input:
0.57
---- correct output:
1
---- user output:
0.8291
-- TEST CASE 2:
---- input:
1.99
---- correct output:
1.4107
---- user output:
1.2578
-- TEST CASE 3:
---- input:
2.01
---- correct output:
1.262
---- user output:
1.4177
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:20:41) 
-- CODE:


x=float(input('digite x:  '))
if(x <=0):
	print(round(x,4))
elif((x> 0) and (x>=2)):
	print(round(abs(x **(1/2)), 4))
else:
	print(round(x**(1/3),4))
-- OUTPUT:
0.8291
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:20:50) 
-- CODE:


x=float(input('digite x:  '))
if(x <=0):
	print(round(x,4))
elif((x> 0) and (x>=2)):
	print(round(abs(x **(1/2)), 4))
else:
	print(round(x**(1/3),4))
-- OUTPUT:
0.8291
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:21:14) 
-- CODE:


x=float(input('digite x:  '))
if(x <=0):
	print(round(x,4))
elif((x> 0) and (x<=1):
	print(round(abs(x **(1/2)), 4))
else:
	print(round(x**(1/3),4))
-- ERROR:
File "XXXX", line 6
    elif((x> 0) and (x<=1):
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:21:29) 
-- CODE:


x=float(input('digite x:  '))
if(x <=0):
	print(round(x,4))
elif((x> 0) and (x<= 1):
	print(round(abs(x **(1/2)), 4))
else:
	print(round(x**(1/3),4))
-- ERROR:
File "XXXX", line 6
    elif((x> 0) and (x<= 1):
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:21:41) 
-- CODE:


x=float(input('digite x:  '))
if(x <=0):
	print(round(x,4))
elif((x> 0) and (x<= 1):,
	  print(round(abs(x **(1/2)), 4))
else:
	print(round(x**(1/3),4))
-- ERROR:
File "XXXX", line 6
    elif((x> 0) and (x<= 1):,
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:21:55) 
-- CODE:


x=float(input('digite x:  '))
if(x <=0):
	print(round(x,4))
elif((x>0) and (x<= 1)),
	  print(round(abs(x **(1/2)), 4))
else:
	print(round(x**(1/3),4))
-- ERROR:
File "XXXX", line 6
    elif((x>0) and (x<= 1)),
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:22:00) 
-- CODE:


x=float(input('digite x:  '))
if(x <=0):
	print(round(x,4))
elif((x>0) and (x<= 1)):
	  print(round(abs(x **(1/2)), 4))
else:
	print(round(x**(1/3),4))
-- OUTPUT:
0.755
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:23:24) 
-- CODE:


x=float(input('digite x:  '))
if(x <=0):
	print(round(x,4))
elif((x>0) and (x<= 1)):
	  print(round(abs(x **(1/2)), 4))

elif(x>1) and (x<=2):
	print(round(abs(x,4)))

else:
	print(round(x**(1/3),4))
-- OUTPUT:
0.755
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:23:54) 
-- CODE:


x=float(input('digite x:  '))
if(x <=0):
	print(round(x,4))
elif((x>0) and (x<= 1)):
	  print(round(abs(x **(1/2)), 4))

elif(x>1) and (x<=2):
	print(round(x,4))

else:
	print(round(x**(1/3),4))
-- OUTPUT:
0.755
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:26:04) 
-- CODE:


x=float(input('digite x:  '))
if(x <=0):
	print(round(x,4))
	
elif((x>0) and (x<= 1)):
	print('1')

	rint(round(abs(x **(1/2)), 4))
elif(x>1) and (x<=2):
	print(round(x,4))

else:
	print(round(x**(1/3),4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    rint(round(abs(x **(1/2)), 4))
NameError: name 'rint' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:28:11) 
-- CODE:
from import math *


x=float(input('digite x:  '))
x=abs(x)

if(x <=0):
	print(round(x,4))
	
elif((x>0) and (x<= 1)):
	print('1')

	rint(round(abs(x **(1/2)), 4))
elif(x>1) and (x<=2):
	print(round(x,4))

else:
	print(round(x**(1/3),4))
-- ERROR:
File "XXXX", line 1
    from import math *
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:28:31) 
-- CODE:
from math import *


x=float(input('digite x:  '))
x=abs(x)

if(x <=0):
	print(round(x,4))
	
elif((x>0) and (x<= 1)):
	print('1')

	rint(round(abs(x **(1/2)), 4))
elif(x>1) and (x<=2):
	print(round(x,4))

else:
	print(round(x**(1/3),4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    rint(round(abs(x **(1/2)), 4))
NameError: name 'rint' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:28:43) 
-- CODE:
from math import *


x=float(input('digite x:  '))
x=abs(x)

if(x <=0):
	print(round(x,4))
	
elif((x>0) and (x<= 1)):
	print('1')

	pint(round(abs(x **(1/2)), 4))
elif(x>1) and (x<=2):
	print(round(x,4))

else:
	print(round(x**(1/3),4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    pint(round(abs(x **(1/2)), 4))
NameError: name 'pint' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:29:24) 
-- CODE:
from math import *

x=float(input('digite x:  '))
x=abs(x)
-
if(x <=0):
	print(round(x,4))
	
elif((x>0) and (x<= 1)):
	print('1')

	pint(round(abs(x **(1/2)), 4))
elif(x>1) and (x<=2):
	print(round(x,4))

else:
	print(round(x**(1/3),4))
-- ERROR:
File "XXXX", line 5
    -
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:29:29) 
-- CODE:
from math import *

x=float(input('digite x:  '))
x=abs(x)

if(x <=0):
	print(round(x,4))
	
elif((x>0) and (x<= 1)):
	print('1')

	pint(round(abs(x **(1/2)), 4))
elif(x>1) and (x<=2):
	print(round(x,4))

else:
	print(round(x**(1/3),4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    pint(round(abs(x **(1/2)), 4))
NameError: name 'pint' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:31:12) 
-- CODE:
x=float(input('digite x:  '))

if(x <= 0):
	print (round(0,4))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    pint(round(abs(x **(1/2)), 4))
NameError: name 'pint' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:32:25) 
-- CODE:
x=float(input('digite x:  '))

if(x <= 0):
	print (round(0,4))
elif((x>0) or (x<=1):
	  print(round(x,4))
	  
	
-- ERROR:
File "XXXX", line 5
    elif((x>0) or (x<=1):
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:32:34) 
-- CODE:
x=float(input('digite x:  '))

if(x <= 0):
	print (round(0,4))
elif((x>0) or (x<=1))
	  print(round(x,4))
	  
	
-- ERROR:
File "XXXX", line 5
    elif((x>0) or (x<=1))
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:32:41) 
-- CODE:
x=float(input('digite x:  '))

if(x <= 0):
	print (round(0,4))
elif((x>0) or (x<=1)):
	  print(round(x,4))
	  
	
-- OUTPUT:
0.57
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:33:03) 
-- CODE:
x=float(input('digite x:  '))

if(x <= 0):
	print (round(0,4))
elif((x>0) or (x<=1)):
	  print(round('1',4))
	  
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(round('1',4))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:33:18) 
-- CODE:
x=float(input('digite x:  '))

if(x <= 0):
	print (round(0,4))
elif((x>0) or (x<=1)):
	  print(round(1,4))
	  
	
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:34:29) 
-- CODE:
x=float(input('digite x:  '))

if(x <= 0):
	print (round(0,4))
elif((x>0) or (x<=1)):
	  print(round(1,4))
elif((x>1) or (x<=2)):
	print(x**(1/2))
	

	  
	
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:35:33) 
-- CODE:
x=float(input('digite x:  '))

if(x <= 0):
	print (round(0,4))
elif((x>0) or (x<=1)):
	  print(round(1,4))
elif((x>1) or (x<=2)):
	print(x **(1/2))

	

	  
	
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:36:04) 
-- CODE:
x=float(input('digite x:  '))

if(x <= 0):
	print (round(0,4))
elif((x>0) or (x<=1)):
	  print(round(1,4))
elif((x>1) or (x<=2)):
	print(round(x**(1/2),4))

	

	  
	
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:37:34) 
-- CODE:
x=float(input('digite x:  '))

if(x <= 0):
	print (round(0,4))
elif((x>0) or (x<=1)):
	  print(round(1,4))
elif((x>1) or (x<=2)):
	print(round(x**(1/2),4))
	

	

	  
	
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:38:33) 
-- CODE:
x=float(input('digite x:  '))

if(x <= 0):
	print (round(0,4))
elif((x>0) or (x<=1)):
	  print(round(1,4))
elif((x>1) or (x<=2)):
	print(round(x**(1/2),4))
else:
	print(round(x**(1/3),4))
	
	
	

	

	  
	
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:39:23) 
-- CODE:
x=float(input('digite x:  '))

if(x <= 0):
	print (round(0,4))
elif((x>0) and (x<=1)):
	  print(round(1,4))
elif((x>1) and(x<=2)):
	print(round(x**(1/2),4))
else:
	print(round(x**(1/3),4))
	
	
	

	

	  
	
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:39:29) 
-- CODE:
x=float(input('digite x:  '))

if(x <= 0):
	print (round(0,4))
elif((x>0) and (x<=1)):
	  print(round(1,4))
elif((x>1) and(x<=2)):
	print(round(x**(1/2),4))
else:
	print(round(x**(1/3),4))
	
	
	

	

	  
	
-- EXECUTION TIME:
0.13252
-- TEST CASE 1:
---- input:
0.57
---- correct output:
1
---- user output:
1
-- TEST CASE 2:
---- input:
1.99
---- correct output:
1.4107
---- user output:
1.4107
-- TEST CASE 3:
---- input:
2.01
---- correct output:
1.262
---- user output:
1.262
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
