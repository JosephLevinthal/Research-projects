== TEST (2019-04-23 15:34:03) 
-- CODE:
# Estrutura para mostrar nomes
nome1 = PEDRO
nome2 = paulo

# Condicional
if nome1 == nome2:
	print(paulo)
else:
	print(pedro.upper())
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    nome1 = PEDRO
NameError: name 'PEDRO' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 15:34:05) 
-- CODE:
# Estrutura para mostrar nomes
nome1 = PEDRO
nome2 = paulo

# Condicional
if nome1 == nome2:
	print(paulo)
else:
	print(pedro.upper())
-- EXECUTION TIME:
0.180928
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1646/2450/main.py", line 2, in <module>
    nome1 = PEDRO
NameError: name 'PEDRO' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 15:34:10) 
-- CODE:
# Estrutura para mostrar nomes
nome1 = PEDRO
nome2 = paulo

# Condicional
if nome1 == nome2:
	print(paulo)
else:
	print(pedro.upper())
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    nome1 = PEDRO
NameError: name 'PEDRO' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 15:34:33) 
-- CODE:
# Estrutura para mostrar nomes
nome1 = pedro
nome2 = paulo

# Condicional
if nome1 == nome2:
	print(paulo)
else:
	print(pedro.upper())
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    nome1 = pedro
NameError: name 'pedro' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 15:34:37) 
-- CODE:
# Estrutura para mostrar nomes
nome1 = pedro
nome2 = paulo

# Condicional
if nome1 == nome2:
	print(paulo)
else:
	print(pedro.upper())
-- EXECUTION TIME:
0.132578
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1646/2450/main.py", line 2, in <module>
    nome1 = pedro
NameError: name 'pedro' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 15:34:54) 
-- CODE:
# Estrutura para mostrar nomes
nome1 = pedro
nome2 = paulo

# Condicional
if nome1 = nome2:
	print(paulo)
else:
	print(pedro.upper())
-- ERROR:
File "XXXX", line 6
    if nome1 = nome2:
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 15:35:25) 
-- CODE:
# Estrutura para mostrar nomes
nome1 = pedro
nome2 = paulo

# Condicional
if (nome1 == nome2):
	print(paulo)
else:
	print(pedro.upper())
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    nome1 = pedro
NameError: name 'pedro' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 15:35:27) 
-- CODE:
# Estrutura para mostrar nomes
nome1 = pedro
nome2 = paulo

# Condicional
if (nome1 == nome2):
	print(paulo)
else:
	print(pedro.upper())
-- EXECUTION TIME:
0.145862
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1646/2450/main.py", line 2, in <module>
    nome1 = pedro
NameError: name 'pedro' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 15:35:30) 
-- CODE:
# Estrutura para mostrar nomes
nome1 = pedro
nome2 = paulo

# Condicional
if (nome1 == nome2):
	print(paulo)
else:
	print(pedro.upper())
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    nome1 = pedro
NameError: name 'pedro' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 15:36:22) 
-- CODE:
# Estrutura para mostrar nomes
nome1 = "pedro"
nome2 = "paulo"

# Condicional
if (nome1 == nome2):
	print(paulo)
else:
	print(pedro.upper())
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(pedro.upper())
NameError: name 'pedro' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 15:37:34) 
-- CODE:
# Estrutura para mostrar nomes
nome1 = "pedro"
nome2 = "paulo"

# Condicional
if (nome1 == nome2):
	print(nome1)
else:
	print(nome2.upper())
-- OUTPUT:
PAULO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 15:37:37) 
-- CODE:
# Estrutura para mostrar nomes
nome1 = "pedro"
nome2 = "paulo"

# Condicional
if (nome1 == nome2):
	print(nome1)
else:
	print(nome2.upper())
-- EXECUTION TIME:
0.13564
-- TEST CASE 1:
---- input:
Ada
Leon
---- correct output:
Ada
Leon
---- user output:
PAULO
-- TEST CASE 2:
---- input:
Marcos
Demetrius
---- correct output:
Demetrius
Marcos
---- user output:
PAULO
-- TEST CASE 3:
---- input:
WILSON
george
---- correct output:
george
WILSON
---- user output:
PAULO
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 15:39:34) 
-- CODE:
# Estrutura para mostrar nomes
nome1 = "pedro"
nome2 = "paulo"

# Condicional
if (nome1 == nome2):
	print(nome1)
	
else:
	print(nome2.upper())
-- OUTPUT:
PAULO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 15:40:13) 
-- CODE:
# Estrutura para mostrar nomes
nome1 = "pedro"
nome2 = "paulo"

# Condicional
if (nome1 == nome2):
	print(nome1)
	
else:
	print(nome2.upper())
-- EXECUTION TIME:
0.163337
-- TEST CASE 1:
---- input:
Ada
Leon
---- correct output:
Ada
Leon
---- user output:
PAULO
-- TEST CASE 2:
---- input:
Marcos
Demetrius
---- correct output:
Demetrius
Marcos
---- user output:
PAULO
-- TEST CASE 3:
---- input:
WILSON
george
---- correct output:
george
WILSON
---- user output:
PAULO
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 15:40:16) 
-- CODE:
# Estrutura para mostrar nomes
nome1 = "pedro"
nome2 = "paulo"

# Condicional
if (nome1 == nome2):
	print(nome1)
	
else:
	print(nome2.upper())
-- OUTPUT:
PAULO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 15:40:32) 
-- CODE:
# Estrutura para mostrar nomes
nome1 = "pedro"
nome2 = "paulo"

# Condicional
if (nome1 == nome2):
	print(nome1.lower())
	
else:
	print(nome2.upper())
-- OUTPUT:
PAULO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 15:40:33) 
-- CODE:
# Estrutura para mostrar nomes
nome1 = "pedro"
nome2 = "paulo"

# Condicional
if (nome1 == nome2):
	print(nome1.lower())
	
else:
	print(nome2.upper())
-- EXECUTION TIME:
0.189388
-- TEST CASE 1:
---- input:
Ada
Leon
---- correct output:
Ada
Leon
---- user output:
PAULO
-- TEST CASE 2:
---- input:
Marcos
Demetrius
---- correct output:
Demetrius
Marcos
---- user output:
PAULO
-- TEST CASE 3:
---- input:
WILSON
george
---- correct output:
george
WILSON
---- user output:
PAULO
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 15:41:31) 
-- CODE:
# Estrutura para mostrar nomes
nome1 = "pedro"
nome2 = "paulo"

# Condicional
if (nome1 == nome2.lower()):
	print(nome1)
	
else:
	print(nome2.upper())
-- OUTPUT:
PAULO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 15:41:33) 
-- CODE:
# Estrutura para mostrar nomes
nome1 = "pedro"
nome2 = "paulo"

# Condicional
if (nome1 == nome2.lower()):
	print(nome1)
	
else:
	print(nome2.upper())
-- EXECUTION TIME:
0.154025
-- TEST CASE 1:
---- input:
Ada
Leon
---- correct output:
Ada
Leon
---- user output:
PAULO
-- TEST CASE 2:
---- input:
Marcos
Demetrius
---- correct output:
Demetrius
Marcos
---- user output:
PAULO
-- TEST CASE 3:
---- input:
WILSON
george
---- correct output:
george
WILSON
---- user output:
PAULO
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
