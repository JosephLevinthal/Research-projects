== SUBMITION (2019-04-24 23:03:43) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Verifica se algum lado é negativo
if a > 0 and b > 0 and c > 0:
	
	#testa medidas de um triangulo
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			x = ("Equilatero")
		elif (a == b or b == c or a == c):
			x = ("Isoceles")
		else:
			x = ("Escaleno")
	else:
		x =  ("Invalido")
			
			
-- EXECUTION TIME:
0.17599
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 23:04:00) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Verifica se algum lado é negativo
if a > 0 and b > 0 and c > 0:
	
	#testa medidas de um triangulo
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			x = ("Equilatero")
		elif (a == b or b == c or a == c):
			x = ("Isoceles")
		else:
			x = ("Escaleno")
	else:
		x =  ("Invalido")
else:
		x =  ("Invalido")
			
			
-- EXECUTION TIME:
0.128549
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 23:04:22) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Verifica se algum lado é negativo
if a > 0 and b > 0 and c > 0:
	
	#testa medidas de um triangulo
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			x = ("Equilatero")
		elif (a == b or b == c or a == c):
			x = ("Isoceles")
		else:
			x = ("Escaleno")
	else:
		x =  ("Invalido")
else:
		x =  ("Invalido")
		
print (x)
			
			
-- EXECUTION TIME:
0.126728
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 23:04:34) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Verifica se algum lado é negativo
if a > 0 and b > 0 and c > 0:
	
	#testa medidas de um triangulo
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			x = ("Equilatero")
		elif (a == b or b == c or a == c):
			x = ("Isoceles")
		else:
			x = ("Escaleno")
	else:
		x =  ("Invalido")

		
print (x)
			
			
-- EXECUTION TIME:
0.150264
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 23:05:17) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Verifica se algum lado é negativo
if a > 0 and b > 0 and c > 0:
	
	#testa medidas de um triangulo
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			x = 'Equilatero'
		elif (a == b or b == c or a == c):
			x = 'Isoceles'
		else:
			x = 'Escaleno'
	else:
		x =  'Invalido'

		
print (x)
			
			
-- EXECUTION TIME:
0.120238
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 23:05:20) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Verifica se algum lado é negativo
if a > 0 and b > 0 and c > 0:
	
	#testa medidas de um triangulo
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			x = 'Equilatero'
		elif (a == b or b == c or a == c):
			x = 'Isoceles'
		else:
			x = 'Escaleno'
	else:
		x =  'Invalido'

		
print (x)
			
			
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 23:05:35) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Verifica se algum lado é negativo
if a > 0 and b > 0 and c > 0:
	
	#testa medidas de um triangulo
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			x = 'Equilatero'
		elif (a == b or b == c or a == c):
			x = 'Isoceles'
		else:
			x = 'Escaleno'
	else:
		x =  'Invalido'

		
print (x)
			
			
-- EXECUTION TIME:
0.196868
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 23:05:56) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Verifica se algum lado é negativo
if a > 0 and b > 0 and c > 0:
	
	#testa medidas de um triangulo
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			x = 'Equilatero'
		elif (a == b or b == c or a == c):
			x = 'Isoceles'
		else:
			x = 'Escaleno'
	else:
		x =  'Invalido'

		
print (x)
			
			
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 23:06:18) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Verifica se algum lado é negativo
if a > 0 and b > 0 and c > 0:
	
	#testa medidas de um triangulo
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			x = 'Equilatero'
		elif (a == b or b == c or a == c):
			x = 'Isoceles'
		else:
			x = 'Escaleno'
else:
	x =  'Invalido'

		
print (x)
			
			
-- EXECUTION TIME:
0.144696
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 23:06:38) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Verifica se algum lado é negativo
if a > 0 and b > 0 and c > 0:
	
	#testa medidas de um triangulo
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			x = 'Equilatero'
		elif (a == b or b == c or a == c):
			x = 'Isoceles'
		else:
			x = 'Escaleno'
	else:
		x =  'Invalido'
else:
	x =  'Invalido'

		
print (x)
			
			
-- EXECUTION TIME:
0.159867
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 23:07:02) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Verifica se algum lado é negativo
if a > 0 and b > 0 and c > 0:
	
	#testa medidas de um triangulo
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			x = 'Equilatero'
		elif (a == b or b == c or a == c):
			x = 'Isoceles'
		else:
			x = 'Escaleno'
	else:
		x =  'Invalido'
else:
	x =  'Invalido'

		
print (x)
			
			
-- EXECUTION TIME:
0.168738
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 23:08:01) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Verifica se algum lado é negativo
if a < 0 and b < 0 and c < 0:
	
	#testa medidas de um triangulo
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			x = 'Equilatero'
		elif (a == b or b == c or a == c):
			x = 'Isoceles'
		else:
			x = 'Escaleno'
	else:
		x =  'Invalido'
else:
	x =  'Invalido'

		
print (x)
			
			
-- EXECUTION TIME:
0.152455
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 23:08:34) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Verifica se algum lado é negativo
if a > 0 and b > 0 and c > 0:
	
	#testa medidas de um triangulo
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			x = 'Equilatero'
		elif (a == b or b == c or a == c):
			x = 'Isoceles'
		else:
			x = 'Escaleno'
	else:
		x =  'Invalido'
else:
	x =  'Invalido'

		
print (x)
			
			
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 23:11:07) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Verifica se algum lado é negativo
if a > 0 and b > 0 and c > 0:
	
	#testa medidas de um triangulo
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			x = 'Equilatero'
		elif (a == b or b == c or a == c):
			x = 'Isoceles'
		else:
			x = 'Escaleno'
	else:
		x =  'Invalido'
else:
	x =  'Invalido'

print ("Entradas: ", a, b, c)
print ("Tipo de triangulo: ", x)
			
			
-- EXECUTION TIME:
0.173979
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Entradas:  2.0 4.0 4.0
Tipo de triangulo:  Isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Entradas:  3.3 4.4 5.5
Tipo de triangulo:  Escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Entradas:  1.0 2.0 7.0
Tipo de triangulo:  Invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 23:11:17) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Verifica se algum lado é negativo
if a > 0 and b > 0 and c > 0:
	
	#testa medidas de um triangulo
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			x = 'Equilatero'
		elif (a == b or b == c or a == c):
			x = 'Isoceles'
		else:
			x = 'Escaleno'
	else:
		x =  'Invalido'
else:
	x =  'Invalido'

print ("Entradas: ", a, b, c)
print ("Tipo de triangulo: ", x)
			
			
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Entradas:  2.0 4.0 4.0
Tipo de triangulo:  Isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 23:12:23) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Verifica se algum lado é negativo
if a > 0 and b > 0 and c > 0:
	
	#testa medidas de um triangulo
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			x = 'Equilatero'
		elif (a == b or b == c or a == c):
			x = 'Isoceles'
		else:
			x = 'Escaleno'
	else:
		x =  'Invalido'
else:
	x =  'Invalido'

print ("Entradas: ", a, " , ", b,  " , " c)
print ("Tipo de triangulo: ", x)
			
			
-- EXECUTION TIME:
0.154517
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 26
    print ("Entradas: ", a, " , ", b,  " , " c)
                                             ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 23:12:27) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Verifica se algum lado é negativo
if a > 0 and b > 0 and c > 0:
	
	#testa medidas de um triangulo
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			x = 'Equilatero'
		elif (a == b or b == c or a == c):
			x = 'Isoceles'
		else:
			x = 'Escaleno'
	else:
		x =  'Invalido'
else:
	x =  'Invalido'

print ("Entradas: ", a, " , ", b,  " , " c)
print ("Tipo de triangulo: ", x)
			
			
-- ERROR:
File "XXXX", line 26
    print ("Entradas: ", a, " , ", b,  " , " c)
                                             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 23:12:46) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Verifica se algum lado é negativo
if a > 0 and b > 0 and c > 0:
	
	#testa medidas de um triangulo
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			x = 'Equilatero'
		elif (a == b or b == c or a == c):
			x = 'Isoceles'
		else:
			x = 'Escaleno'
	else:
		x =  'Invalido'
else:
	x =  'Invalido'

print ("Entradas: ", a, " , ", b,  " , ", c)
print ("Tipo de triangulo: ", x)
			
			
-- EXECUTION TIME:
0.137866
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Entradas:  2.0  ,  4.0  ,  4.0
Tipo de triangulo:  Isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Entradas:  3.3  ,  4.4  ,  5.5
Tipo de triangulo:  Escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Entradas:  1.0  ,  2.0  ,  7.0
Tipo de triangulo:  Invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 23:12:54) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Verifica se algum lado é negativo
if a > 0 and b > 0 and c > 0:
	
	#testa medidas de um triangulo
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			x = 'Equilatero'
		elif (a == b or b == c or a == c):
			x = 'Isoceles'
		else:
			x = 'Escaleno'
	else:
		x =  'Invalido'
else:
	x =  'Invalido'

print ("Entradas: ", a, " , ", b,  " , ", c)
print ("Tipo de triangulo: ", x)
			
			
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Entradas:  2.0  ,  4.0  ,  4.0
Tipo de triangulo:  Isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 23:13:40) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Verifica se algum lado é negativo
if a > 0 and b > 0 and c > 0:
	
	#testa medidas de um triangulo
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			x = 'equilatero'
		elif (a == b or b == c or a == c):
			x = 'isoceles'
		else:
			x = 'escaleno'
	else:
		x =  'invalido'
else:
	x =  'invalido'

print ("Entradas: ", a, " , ", b,  " , ", c)
print ("Tipo de triangulo: ", x)
			
			
-- EXECUTION TIME:
0.118513
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Entradas:  2.0  ,  4.0  ,  4.0
Tipo de triangulo:  isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Entradas:  3.3  ,  4.4  ,  5.5
Tipo de triangulo:  escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Entradas:  1.0  ,  2.0  ,  7.0
Tipo de triangulo:  invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 23:13:46) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Verifica se algum lado é negativo
if a > 0 and b > 0 and c > 0:
	
	#testa medidas de um triangulo
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			x = 'equilatero'
		elif (a == b or b == c or a == c):
			x = 'isoceles'
		else:
			x = 'escaleno'
	else:
		x =  'invalido'
else:
	x =  'invalido'

print ("Entradas: ", a, " , ", b,  " , ", c)
print ("Tipo de triangulo: ", x)
			
			
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Entradas:  2.0  ,  4.0  ,  4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 23:13:59) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Verifica se algum lado é negativo
if a > 0 and b > 0 and c > 0:
	
	#testa medidas de um triangulo
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			x = 'equilatero'
		elif (a == b or b == c or a == c):
			x = 'isoceles'
		else:
			x = 'escaleno'
	else:
		x =  'invalido'
else:
	x =  'invalido'

print ("Entradas: ", a, " , ", b,  " , ", c)
print ("Tipo de triangulo: ", x)
			
			
-- EXECUTION TIME:
0.195445
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Entradas:  2.0  ,  4.0  ,  4.0
Tipo de triangulo:  isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Entradas:  3.3  ,  4.4  ,  5.5
Tipo de triangulo:  escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Entradas:  1.0  ,  2.0  ,  7.0
Tipo de triangulo:  invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 23:14:20) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Verifica se algum lado é negativo
if a > 0 and b > 0 and c > 0:
	
	#testa medidas de um triangulo
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			x = 'equilatero'
		elif (a == b or b == c or a == c):
			x = 'isoceles'
		else:
			x = 'escaleno'
else:
	x =  'invalido'
#else:
#	x =  'invalido'

print ("Entradas: ", a, " , ", b,  " , ", c)
print ("Tipo de triangulo: ", x)
			
			
-- EXECUTION TIME:
0.132199
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Entradas:  2.0  ,  4.0  ,  4.0
Tipo de triangulo:  isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Entradas:  3.3  ,  4.4  ,  5.5
Tipo de triangulo:  escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Entradas:  1.0  ,  2.0  ,  7.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 23:14:26) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Verifica se algum lado é negativo
if a > 0 and b > 0 and c > 0:
	
	#testa medidas de um triangulo
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			x = 'equilatero'
		elif (a == b or b == c or a == c):
			x = 'isoceles'
		else:
			x = 'escaleno'
else:
	x =  'invalido'
#else:
#	x =  'invalido'

print ("Entradas: ", a, " , ", b,  " , ", c)
print ("Tipo de triangulo: ", x)
			
			
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Entradas:  2.0  ,  4.0  ,  4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 23:17:27) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Verifica se algum lado é negativo
if a > 0 and b > 0 and c > 0:
	
	#testa medidas de um triangulo
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			x = 'equilatero'
		elif (a == b or b == c or a == c):
			x = 'isoceles'
		else:
			x = 'escaleno'
	else:
		x =  'invalido'
#else:
#	x =  'invalido'

print ("Entradas: ", a, " , ", b,  " , ", c)
print ("Tipo de triangulo: ", x)
			
			
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Entradas:  2.0  ,  4.0  ,  4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 23:17:41) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Verifica se algum lado é negativo
if a > 0 and b > 0 and c > 0:
	
	#testa medidas de um triangulo
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			x = 'equilatero'
		elif (a == b or b == c or a == c):
			x = 'isoceles'
		else:
			x = 'escaleno'
	else:
		x =  'invalido'
#else:
#	x =  'invalido'

print ("Entradas: ", a, " , ", b,  " , ", c)
print ("Tipo de triangulo: ", x)
			
			
-- EXECUTION TIME:
0.191812
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Entradas:  2.0  ,  4.0  ,  4.0
Tipo de triangulo:  isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Entradas:  3.3  ,  4.4  ,  5.5
Tipo de triangulo:  escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Entradas:  1.0  ,  2.0  ,  7.0
Tipo de triangulo:  invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 23:26:15) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Verifica se algum lado é negativo
if a > 0 and b > 0 and c > 0:
	
	#testa medidas de um triangulo
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			print ("Tipo de triangulo: ", "equilatero")
		elif (a == b or b == c or a == c):
			print ("Tipo de triangulo: ", "isoceles")
		else:
			print ("Tipo de triangulo: ", "escalemo")
	else:
		print ("Tipo de triangulo: ", "invalido")
else:
	print ("Tipo de triangulo: ", "invalido")

print ("Entradas: ", a, " , ", b,  " , ", c)
			
			
-- EXECUTION TIME:
0.208252
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
Entradas:  2.0  ,  4.0  ,  4.0
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo:  escalemo
Entradas:  3.3  ,  4.4  ,  5.5
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:  invalido
Entradas:  1.0  ,  2.0  ,  7.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 23:26:40) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Verifica se algum lado é negativo
if a > 0 and b > 0 and c > 0:
	
	#testa medidas de um triangulo
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			print ("Tipo de triangulo: ", "equilatero")
		elif (a == b and b == c and a == c):
			print ("Tipo de triangulo: ", "isoceles")
		else:
			print ("Tipo de triangulo: ", "escalemo")
	else:
		print ("Tipo de triangulo: ", "invalido")
else:
	print ("Tipo de triangulo: ", "invalido")

print ("Entradas: ", a, " , ", b,  " , ", c)
			
			
-- EXECUTION TIME:
0.147322
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:  escalemo
Entradas:  2.0  ,  4.0  ,  4.0
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo:  escalemo
Entradas:  3.3  ,  4.4  ,  5.5
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:  invalido
Entradas:  1.0  ,  2.0  ,  7.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 23:26:45) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Verifica se algum lado é negativo
if a > 0 and b > 0 and c > 0:
	
	#testa medidas de um triangulo
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			print ("Tipo de triangulo: ", "equilatero")
		elif (a == b and b == c and a == c):
			print ("Tipo de triangulo: ", "isoceles")
		else:
			print ("Tipo de triangulo: ", "escalemo")
	else:
		print ("Tipo de triangulo: ", "invalido")
else:
	print ("Tipo de triangulo: ", "invalido")

print ("Entradas: ", a, " , ", b,  " , ", c)
			
			
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:  escalemo
Entradas:  2.0  ,  4.0  ,  4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 23:27:17) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Verifica se algum lado é negativo
if a > 0 and b > 0 and c > 0:
	
	#testa medidas de um triangulo
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			print ("Tipo de triangulo: ", "equilatero")
		elif (a == b and b == c and a == c):
			print ("Tipo de triangulo: ", "isoceles")
		else:
			print ("Tipo de triangulo: ", "escalemo")
	else:
		print ("Tipo de triangulo: ", "invalido")
else:
	print ("Tipo de triangulo: ", "invalido")


			
			
-- EXECUTION TIME:
0.172524
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:  escalemo
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo:  escalemo
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:  invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 23:29:08) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Verifica se algum lado é negativo
if a > 0 and b > 0 and c > 0:
	
	#testa medidas de um triangulo
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			print ("Tipo de triangulo: equilatero")
		elif (a == b or b == c or a == c):
			print ("Tipo de triangulo: isoceles")
		else:
			print ("Tipo de triangulo: escalemo")
	else:
		print ("Tipo de triangulo: invalido")
else:
	print ("Tipo de triangulo: invalido")


			
			
-- EXECUTION TIME:
0.126206
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escalemo
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 23:29:13) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Verifica se algum lado é negativo
if a > 0 and b > 0 and c > 0:
	
	#testa medidas de um triangulo
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			print ("Tipo de triangulo: equilatero")
		elif (a == b or b == c or a == c):
			print ("Tipo de triangulo: isoceles")
		else:
			print ("Tipo de triangulo: escalemo")
	else:
		print ("Tipo de triangulo: invalido")
else:
	print ("Tipo de triangulo: invalido")


			
			
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 23:29:23) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Verifica se algum lado é negativo
if a > 0 and b > 0 and c > 0:
	
	#testa medidas de um triangulo
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			print ("Tipo de triangulo: equilatero")
		elif (a == b or b == c or a == c):
			print ("Tipo de triangulo: isoceles")
		else:
			print ("Tipo de triangulo: escalemo")
	else:
		print ("Tipo de triangulo: invalido")
else:
	print ("Tipo de triangulo: invalido")


			
			
-- EXECUTION TIME:
0.172638
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escalemo
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 23:42:33) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Verifica se algum lado é negativo
if a > 0 and b > 0 and c > 0:
	
	#testa medidas de um triangulo
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			x = "equilatero"
		elif (a == b or b == c or a == c):
			x = "isoceles"
		else:
			x = "escalemo"
	else:
		x = "invalido"
else:
	x = "invalido"
	
print("Entradas:", a, ",", b, ",", c)
print ("Tipo de triangulo: ", x)


			
			
-- EXECUTION TIME:
0.153541
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo:  escalemo
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:  invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 23:42:37) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Verifica se algum lado é negativo
if a > 0 and b > 0 and c > 0:
	
	#testa medidas de um triangulo
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			x = "equilatero"
		elif (a == b or b == c or a == c):
			x = "isoceles"
		else:
			x = "escalemo"
	else:
		x = "invalido"
else:
	x = "invalido"
	
print("Entradas:", a, ",", b, ",", c)
print ("Tipo de triangulo: ", x)


			
			
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 23:42:44) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Verifica se algum lado é negativo
if a > 0 and b > 0 and c > 0:
	
	#testa medidas de um triangulo
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			x = "equilatero"
		elif (a == b or b == c or a == c):
			x = "isoceles"
		else:
			x = "escalemo"
	else:
		x = "invalido"
else:
	x = "invalido"
	
print("Entradas:", a, ",", b, ",", c)
print ("Tipo de triangulo: ", x)


			
			
-- EXECUTION TIME:
0.126844
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo:  escalemo
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:  invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:02:45) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Verifica se algum lado é negativo
if ((a > 0) and (b > 0) and (c > 0)
	
	#testa medidas de um triangulo
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			x = "equilatero"
		elif (a == b or b == c or a == c):
			x = "isoceles"
		else:
			x = "escalemo"
	else:
		x = "invalido"
else:
	x = "invalido"
	
print("Entradas:", a, ",", b, ",", c)
print ("Tipo de triangulo: ", x)


			
			
-- EXECUTION TIME:
0.196653
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 12
    if (a + b > c and a + c > b and c + b > a):
                                              ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:03:43) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Verifica se algum lado é negativo
if ((a >= 0) or (b >= 0) or (c >= 0))
	
	#testa medidas de um triangulo
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			x = "equilatero"
		elif (a == b or b == c or a == c):
			x = "isoceles"
		else:
			x = "escalemo"
	else:
		x = "invalido"
else:
	x = "invalido"
	
print("Entradas:", a, ",", b, ",", c)
print ("Tipo de triangulo: ", x)


			
			
-- ERROR:
File "XXXX", line 9
    if ((a >= 0) or (b >= 0) or (c >= 0))
                                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:04:32) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Verifica se algum lado é negativo
if ((a >= 0) or (b >= 0) or (c >= 0)):
	
	#testa medidas de um triangulo
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			x = "equilatero"
		elif (a == b or b == c or a == c):
			x = "isoceles"
		else:
			x = "escalemo"
	else:
		x = "invalido"
else:
	x = "invalido"
	
print("Entradas:", a, ",", b, ",", c)
print ("Tipo de triangulo: ", x)


			
			
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:04:39) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Verifica se algum lado é negativo
if ((a >= 0) or (b >= 0) or (c >= 0)):
	
	#testa medidas de um triangulo
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			x = "equilatero"
		elif (a == b or b == c or a == c):
			x = "isoceles"
		else:
			x = "escalemo"
	else:
		x = "invalido"
else:
	x = "invalido"
	
print("Entradas:", a, ",", b, ",", c)
print ("Tipo de triangulo: ", x)


			
			
-- EXECUTION TIME:
0.173914
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo:  escalemo
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:  invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:12:28) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Verifica se algum lado é negativo
if ((a <= 0) or (b <= 0) or (c <= 0)):
	print ("Tipo de triangulo: invalido")

#elif (a + b > c and a + c > b and c + b > a):
elif (a == b and b == c):
	x = "equilatero"
elif (a == b or b == c or a == c):
	x = "isoceles"
else:
	x = "escalemo"
else:
	x = "invalido"
	
print("Entradas:", a, ",", b, ",", c)
print ("Tipo de triangulo: ", x)


			
			
-- EXECUTION TIME:
0.156616
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 19
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:12:32) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Verifica se algum lado é negativo
if ((a <= 0) or (b <= 0) or (c <= 0)):
	print ("Tipo de triangulo: invalido")

#elif (a + b > c and a + c > b and c + b > a):
elif (a == b and b == c):
	x = "equilatero"
elif (a == b or b == c or a == c):
	x = "isoceles"
else:
	x = "escalemo"
else:
	x = "invalido"
	
print("Entradas:", a, ",", b, ",", c)
print ("Tipo de triangulo: ", x)


			
			
-- ERROR:
File "XXXX", line 19
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:12:43) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Verifica se algum lado é negativo
if ((a <= 0) or (b <= 0) or (c <= 0)):
	print ("Tipo de triangulo: invalido")

#elif (a + b > c and a + c > b and c + b > a):
elif (a == b and b == c):
	x = "equilatero"
elif (a == b or b == c or a == c):
	x = "isoceles"
else:
	x = "escalemo"
#else:
#	x = "invalido"
	
print("Entradas:", a, ",", b, ",", c)
print ("Tipo de triangulo: ", x)


			
			
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:12:54) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Verifica se algum lado é negativo
if ((a <= 0) or (b <= 0) or (c <= 0)):
	print ("Tipo de triangulo: invalido")

#elif (a + b > c and a + c > b and c + b > a):
elif (a == b and b == c):
	x = "equilatero"
elif (a == b or b == c or a == c):
	x = "isoceles"
else:
	x = "escaleno"
#else:
#	x = "invalido"
	
print("Entradas:", a, ",", b, ",", c)
print ("Tipo de triangulo: ", x)


			
			
-- EXECUTION TIME:
0.222265
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Lado 1: Lado 2: Lado 3: Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Lado 1: Lado 2: Lado 3: Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo:  escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Lado 1: Lado 2: Lado 3: Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:  escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:13:22) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Verifica se algum lado é negativo
if ((a <= 0) or (b <= 0) or (c <= 0)):
	print ("Tipo de triangulo: invalido")


	#testa medidas de um triangulo
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			x = "equilatero"
		elif (a == b or b == c or a == c):
			x = "isoceles"
		else:
			x = "escaleno"
	else:
		x = "invalido"
else:
	x = "invalido"
	
print("Entradas:", a, ",", b, ",", c)
print ("Tipo de triangulo: ", x)


			
			
-- EXECUTION TIME:
0.13317
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:  invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo:  invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:  invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:13:59) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Verifica se algum lado é negativo
if ((a > 0) and (b > 0) and (c > 0)
	
	#testa medidas de um triangulo
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			x = "equilatero"
		elif (a == b or b == c or a == c):
			x = "isoceles"
		else:
			x = "escaleno"
	else:
		x = "invalido"
else:
	x = "invalido"
	
print("Entradas:", a, ",", b, ",", c)
print ("Tipo de triangulo: ", x)


			
			
-- EXECUTION TIME:
0.166532
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 12
    if (a + b > c and a + c > b and c + b > a):
                                              ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:14:19) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Verifica se algum lado é negativo
if ((a > 0) and (b > 0) and (c > 0)
	x = "invalido"
	#testa medidas de um triangulo
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			x = "equilatero"
		elif (a == b or b == c or a == c):
			x = "isoceles"
		else:
			x = "escaleno"
	else:
		x = "invalido"
else:
	x = "invalido"
	
print("Entradas:", a, ",", b, ",", c)
print ("Tipo de triangulo: ", x)


			
			
-- EXECUTION TIME:
0.182255
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 10
    x = "invalido"
    ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:14:21) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Verifica se algum lado é negativo
if ((a > 0) and (b > 0) and (c > 0)
	x = "invalido"
	#testa medidas de um triangulo
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			x = "equilatero"
		elif (a == b or b == c or a == c):
			x = "isoceles"
		else:
			x = "escaleno"
	else:
		x = "invalido"
else:
	x = "invalido"
	
print("Entradas:", a, ",", b, ",", c)
print ("Tipo de triangulo: ", x)


			
			
-- ERROR:
File "XXXX", line 10
    x = "invalido"
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:14:33) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Verifica se algum lado é negativo
if ((a > 0) and (b > 0) and (c > 0)
	#testa medidas de um triangulo
	if (a + b > c and a + c > b and c + b > a):
		if (a == b and b == c):
			x = "equilatero"
		elif (a == b or b == c or a == c):
			x = "isoceles"
		else:
			x = "escaleno"
	else:
		x = "invalido"
else:
	x = "invalido"
	
print("Entradas:", a, ",", b, ",", c)
print ("Tipo de triangulo: ", x)


			
			
-- ERROR:
File "XXXX", line 11
    if (a + b > c and a + c > b and c + b > a):
                                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:15:08) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Verifica se algum lado é negativo
if ((a > 0) and (b > 0) and (c > 0)
	#testa medidas de um triangulo
	if ((a + b > c) and (a + c > b) and (c + b > a):
		if (a == b and b == c):
			x = "equilatero"
		elif (a == b or b == c or a == c):
			x = "isoceles"
		else:
			x = "escaleno"
	else:
		x = "invalido"
else:
	x = "invalido"
	
print("Entradas:", a, ",", b, ",", c)
print ("Tipo de triangulo: ", x)


			
			
-- ERROR:
File "XXXX", line 11
    if ((a + b > c) and (a + c > b) and (c + b > a):
                                                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:15:30) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Verifica se algum lado é negativo
if ((a > 0) and (b > 0) and (c > 0)
	#testa medidas de um triangulo
	if ((a + b > c) and (a + c > b) and (c + b > a):
		if (a == b) and (b == c):
			x = "equilatero"
		elif (a == b or b == c or a == c):
			x = "isoceles"
		else:
			x = "escaleno"
	else:
		x = "invalido"
else:
	x = "invalido"
	
print("Entradas:", a, ",", b, ",", c)
print ("Tipo de triangulo: ", x)


			
			
-- ERROR:
File "XXXX", line 11
    if ((a + b > c) and (a + c > b) and (c + b > a):
                                                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:15:59) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Verifica se algum lado é negativo
if ((a > 0) and (b > 0) and (c > 0)
	#testa medidas de um triangulo
	if ((a + b > c) and (a + c > b) and (c + b > a):
		if (a == b) and (b == c):
			x = "equilatero"
		elif (a == b or b == c or a == c):
			x = "isoscele"
		else:
			x = "escaleno"
	else:
		x = "invalido"
else:
	x = "invalido"
	
print("Entradas:", a, ",", b, ",", c)
print ("Tipo de triangulo: ", x)


			
			
-- ERROR:
File "XXXX", line 11
    if ((a + b > c) and (a + c > b) and (c + b > a):
                                                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:16:22) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Verifica se algum lado é negativo
if ((a > 0) and (b > 0) and (c > 0)
	#testa medidas de um triangulo
	if ((a + b > c) and (a + c > b) and (c + b > a):
		if (a == b) and (b == c):
			x = "equilatero"
		elif (a == b or b == c or a == c):
			x = "isosceles"
		else:
			x = "escaleno"
	else:
		x = "invalido"
else:
	x = "invalido"
	
print("Entradas:", a, ",", b, ",", c)
print ("Tipo de triangulo: ", x)


			
			
-- ERROR:
File "XXXX", line 11
    if ((a + b > c) and (a + c > b) and (c + b > a):
                                                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:16:38) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Verifica se algum lado é negativo
if ((a > 0) and (b > 0) and (c > 0)
	#testa medidas de um triangulo
	if a + b > c and a + c > b and (c + b > a:
		if (a == b) and (b == c):
			x = "equilatero"
		elif (a == b or b == c or a == c):
			x = "isosceles"
		else:
			x = "escaleno"
	else:
		x = "invalido"
else:
	x = "invalido"
	
print("Entradas:", a, ",", b, ",", c)
print ("Tipo de triangulo: ", x)


			
			
-- ERROR:
File "XXXX", line 11
    if a + b > c and a + c > b and (c + b > a:
                                             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:16:47) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Verifica se algum lado é negativo
if ((a > 0) and (b > 0) and (c > 0)
	#testa medidas de um triangulo
	if a + b > c and a + c > b and c + b > a:
		if (a == b) and (b == c):
			x = "equilatero"
		elif (a == b or b == c or a == c):
			x = "isosceles"
		else:
			x = "escaleno"
	else:
		x = "invalido"
else:
	x = "invalido"
	
print("Entradas:", a, ",", b, ",", c)
print ("Tipo de triangulo: ", x)


			
			
-- ERROR:
File "XXXX", line 11
    if a + b > c and a + c > b and c + b > a:
                                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:16:59) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Verifica se algum lado é negativo
if ((a > 0) and (b > 0) and (c > 0)
	#testa medidas de um triangulo
	if (a + b > c and a + c > b and c + b > a):
		if (a == b) and (b == c):
			x = "equilatero"
		elif (a == b or b == c or a == c):
			x = "isosceles"
		else:
			x = "escaleno"
	else:
		x = "invalido"
else:
	x = "invalido"
	
print("Entradas:", a, ",", b, ",", c)
print ("Tipo de triangulo: ", x)


			
			
-- ERROR:
File "XXXX", line 11
    if (a + b > c and a + c > b and c + b > a):
                                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:17:00) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Verifica se algum lado é negativo
if ((a > 0) and (b > 0) and (c > 0)
	#testa medidas de um triangulo
	if (a + b > c and a + c > b and c + b > a):
		if (a == b) and (b == c):
			x = "equilatero"
		elif (a == b or b == c or a == c):
			x = "isosceles"
		else:
			x = "escaleno"
	else:
		x = "invalido"
else:
	x = "invalido"
	
print("Entradas:", a, ",", b, ",", c)
print ("Tipo de triangulo: ", x)


			
			
-- ERROR:
File "XXXX", line 11
    if (a + b > c and a + c > b and c + b > a):
                                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:17:32) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Verifica se algum lado é negativo
if ((a > 0) and (b > 0) and (c > 0)
	#testa medidas de um triangulo
	if ((a + b > c) and (a + c > b) and (c + b > a):
		if (a == b) and (b == c):
			x = "equilatero"
		elif (a == b or b == c or a == c):
			x = "isosceles"
		else:
			x = "escaleno"
	else:
		x = "invalido"
else:
	x = "invalido"
	
print("Entradas:", a, ",", b, ",", c)
print ("Tipo de triangulo: ", x)


			
			
-- ERROR:
File "XXXX", line 11
    if ((a + b > c) and (a + c > b) and (c + b > a):
                                                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:46:24) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Verifica se algum lado é negativo
if ((a > 0) and (b > 0) and (c > 0)
	#testa medidas de um triangulo
	if ((a + b > c) and (a + c > b) and (c + b > a):
		if (a == b) and (b == c):
			x = "equilatero"
		elif (a == b or b == c or a == c):
			x = "isosceles"
		else:
			x = "escaleno"

	
print("Entradas:", a, ",", b, ",", c)
if (x != 'equilatero' and x != 'isosceles' and x != 'escaleno')
		 print ("Tipo de triangulo: invalido")
else:
		 print ("Tipo de triangulo: ", x)


			
			
-- ERROR:
File "XXXX", line 11
    if ((a + b > c) and (a + c > b) and (c + b > a):
                                                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:47:41) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Verifica se algum lado é negativo
if a > 0 and b > 0 and c > 0
	#testa medidas de um triangulo
	if a + b > c and a + c > b and c + b > a:
		if a == b and b == c:
			x = "equilatero"
		elif a == b or b == c or a == c:
			x = "isosceles"
		else:
			x = "escaleno"
	
print("Entradas:", a, ",", b, ",", c)
if (x != 'equilatero' and x != 'isosceles' and x != 'escaleno')
		 print ("Tipo de triangulo: invalido")
else:
		 print ("Tipo de triangulo: ", x)


			
			
-- ERROR:
File "XXXX", line 9
    if a > 0 and b > 0 and c > 0
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:48:03) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Verifica se algum lado é negativo
if a > 0 and b > 0 and c > 0:
	#testa medidas de um triangulo
	if a + b > c and a + c > b and c + b > a:
		if a == b and b == c:
			x = "equilatero"
		elif a == b or b == c or a == c:
			x = "isosceles"
		else:
			x = "escaleno"
	
print("Entradas:", a, ",", b, ",", c)
if (x != 'equilatero' and x != 'isosceles' and x != 'escaleno')
		 print ("Tipo de triangulo: invalido")
else:
		 print ("Tipo de triangulo: ", x)


			
			
-- ERROR:
File "XXXX", line 20
    if (x != 'equilatero' and x != 'isosceles' and x != 'escaleno')
                                                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:48:39) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Verifica se algum lado é negativo
if a > 0 and b > 0 and c > 0:
	#testa medidas de um triangulo
	if a + b > c and a + c > b and c + b > a:
		if a == b and b == c:
			x = "equilatero"
		elif a == b or b == c or a == c:
			x = "isosceles"
		else:
			x = "escaleno"
	
print("Entradas:", a, ",", b, ",", c)
if x != 'equilatero' and x != 'isosceles' and x != 'escaleno'
		 print ("Tipo de triangulo: invalido")
else:
		 print ("Tipo de triangulo: ", x)


			
			
-- ERROR:
File "XXXX", line 20
    if x != 'equilatero' and x != 'isosceles' and x != 'escaleno'
                                                                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:49:29) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Verifica se algum lado é negativo
if a > 0 and b > 0 and c > 0:
	#testa medidas de um triangulo
	if a + b > c and a + c > b and c + b > a:
		if a == b and b == c:
			x = "equilatero"
		elif a == b or b == c or a == c:
			x = "isosceles"
		else:
			x = "escaleno"
	
print("Entradas:", a, ",", b, ",", c)
if x != "equilatero" and x != "isosceles" and x != "escaleno"
		 print ("Tipo de triangulo: invalido")
else:
		 print ("Tipo de triangulo: ", x)


			
			
-- ERROR:
File "XXXX", line 20
    if x != "equilatero" and x != "isosceles" and x != "escaleno"
                                                                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:45:28) 
-- CODE:
A = float(input("lado A:"))
B = float(input("lado B:"))
C = float(input("lado C:"))
 
if( A <= 0 or B <= 0 or C <= 0 ):
	print("Entradas:",A,",",B,",",C)
	print("Tipo de triangulo:","invalido")
elif((A >= B + C) or (B >= A + C) or (C >= B + A)):
	print("Entradas:",A,",",B,",",C)
	print("Tipo de triangulo:","invalido")
	
elif((A == B) and (B == C)):
	print("Entradas:",A,",",B,",",C)
	print("Tipo de triangulo:","equilatero")
elif((A == B) or (B == C) or (C == A)):
	print("Entradas:",A,",",B,",",C)
	print("Tipo de triangulo:","isosceles")
elif((A != B) and (B != C) and (C != A) ):
	print("Entradas:",A,",",B,",",C)
	print("Tipo de triangulo:","escaleno")
-- EXECUTION TIME:
0.20733
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
