== TEST (2019-04-16 15:38:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = int(input('raio r: '))
area = 3.14**2
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    raio = int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 19:49:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = int(input('raio r: '))
area = 3.14**2
from decimal import 
volume = 4/3 * 3.14**3
print(area)
print(volume)
-- ERROR:
File "XXXX", line 6
    from decimal import 
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 19:49:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = int(input('raio r: '))
area = 3.14**2
volume = 4/3 * 3.14**3
print(area)
print(volume)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    raio = int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 15:08:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = int(input('raio r: '))
area = 3.14**2
volume = 4/3 * 3.14**3
print(area)
print(volume)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    raio = int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 15:09:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = int(input('raio r: '))
area = 3.14**2
volume = 4/3 * 3.14**3
print(round(area,3)
print(round(volume,3)
-- ERROR:
File "XXXX", line 8
    print(round(volume,3)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 15:10:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = int(input('raio r: '))
area = 3.14**2
volume = 4/3 * 3.14**3
print(round(area, 3)
print(round(volume, 3)
-- ERROR:
File "XXXX", line 8
    print(round(volume, 3)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 15:10:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = int(input('raio r: '))
area = 3.14**2
volume = 4/3 * 3.14**3
print(round(area, 3))
print(round(volume, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    raio = int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 15:11:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = int(input('raio r: '))
area = 3.14(raio)**2
volume = 4/3 * 3.14**3
print(round(area, 3))
print(round(volume, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    raio = int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 15:11:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input('raio r: '))
area = 3.14(raio)**2
volume = 4/3 * 3.14**3
print(round(area, 3))
print(round(volume, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    area = 3.14(raio)**2
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 15:11:44) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input('raio r: '))
area = 3.14**2
volume = 4/3 * 3.14**3
print(round(area, 3))
print(round(volume, 3))
-- OUTPUT:
9.86
41.279
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 15:12:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio = float(input('raio r: '))
area = pi**2
volume = 4/3 * 3.14**3
print(round(area, 3))
print(round(volume, 3))
-- OUTPUT:
9.87
41.279
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 15:12:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio = float(input('raio r: '))
area = pi**2
volume = 4/3 * pi**3
print(round(area, 3))
print(round(volume, 3))
-- OUTPUT:
9.87
41.342
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 15:12:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio = float(input('raio r: '))
area = pi * (raio)**2
volume = 4/3 * pi**3
print(round(area, 3))
print(round(volume, 3))
-- OUTPUT:
63.617
41.342
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 15:13:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio = float(input('raio r: '))
area = pi * (raio)**2
volume = 4/3 * pi *(raio)**3
print(round(area, 3))
print(round(volume, 3))
-- OUTPUT:
63.617
381.704
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-24 15:13:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio = float(input('raio r: '))
area = pi * (raio)**2
volume = 4/3 * pi *(raio)**3
print(round(area, 3))
print(round(volume, 3))
-- EXECUTION TIME:
0.445997
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.617
381.704
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.388
7871.076
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
