== TEST (2019-06-21 12:31:11) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 2, 1 ,4 ], [ 1, 2 , 0 ], [ 2,3  , 2 ]])

# Vetor de constantes (informado no enunciado)
compras = array(eval(input(""))
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas) ,compras )

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] == max(preco):
    print("banana")
else:
    print("caqui")
-- ERROR:
File "XXXX", line 15
    compras = compras.T
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-21 12:31:47) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 2, 1 ,4 ], [ 1, 2 , 0 ], [ 2,3  , 2 ]])

# Vetor de constantes (informado no enunciado)
compras = array(eval(input(""))


# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas) ,compras.T )

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] == max(preco):
    print("banana")
else:
    print("caqui")
-- ERROR:
File "XXXX", line 18
    preco = dot(inv(frutas) ,compras.T )
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-21 12:31:51) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 2, 1 ,4 ], [ 1, 2 , 0 ], [ 2,3  , 2 ]])

# Vetor de constantes (informado no enunciado)
compras = array(eval(input(""))


# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas) ,compras )

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] == max(preco):
    print("banana")
else:
    print("caqui")
-- ERROR:
File "XXXX", line 18
    preco = dot(inv(frutas) ,compras )
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-21 12:33:42) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 2, 1 ,4 ], [ 1, 2 , 0 ], [ 2,3  , 2 ]])

# Vetor de constantes (informado no enunciado)
compras = array([[2200,650,1800]])


# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas) ,compras )

# Imprime o preco de cada fruta
print("estafilococo: ", round(preco[0], 1))
print("salmonela: ", round(preco[1], 1))
print("coli: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == min(preco):
    print("estafilococo")
elif preco[1] == min(preco):
    print("salmonela")
else:
    print("coli")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-21 12:33:50) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 2, 1 ,4 ], [ 1, 2 , 0 ], [ 2,3  , 2 ]])

# Vetor de constantes (informado no enunciado)
compras = array([[2200,650,1800]])


# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas) ,compras.T )

# Imprime o preco de cada fruta
print("estafilococo: ", round(preco[0], 1))
print("salmonela: ", round(preco[1], 1))
print("coli: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == min(preco):
    print("estafilococo")
elif preco[1] == min(preco):
    print("salmonela")
else:
    print("coli")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-21 12:34:01) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 2, 1 ,4 ], [ 1, 2 , 0 ], [ 2,3 ,2 ]])

# Vetor de constantes (informado no enunciado)
compras = array([[2200,650,1800]])


# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas) ,compras.T )

# Imprime o preco de cada fruta
print("estafilococo: ", round(preco[0], 1))
print("salmonela: ", round(preco[1], 1))
print("coli: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == min(preco):
    print("estafilococo")
elif preco[1] == min(preco):
    print("salmonela")
else:
    print("coli")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-21 12:36:16) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 2, 1 ,4 ], [ 1, 2 , 0 ], [ 2,3 ,2 ]])

# Vetor de constantes (informado no enunciado)
compras = array([[2200,650,1800]])


# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas) ,compras.T )

# Imprime o preco de cada fruta
print("estafilococo: ", round(preco[0], 1))
print("salmonela: ", round(preco[1], 1))
print("coli: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == min(preco):
    print("estafilococo")
elif preco[1] == min(preco):
    print("salmonela")
else:
    print("coli")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-21 12:36:31) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 2, 1 ,4 ], [ 1, 2 , 0 ], [ 2,3 ,2 ]])

# Vetor de constantes (informado no enunciado)
compras = array([2200,650,1800])


# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas) ,compras.T )

# Imprime o preco de cada fruta
print("estafilococo: ", round(preco[0], 1))
print("salmonela: ", round(preco[1], 1))
print("coli: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == min(preco):
    print("estafilococo")
elif preco[1] == min(preco):
    print("salmonela")
else:
    print("coli")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-21 12:36:38) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 2, 1 ,4 ], [ 1, 2 , 0 ], [ 2,3 ,2 ]])

# Vetor de constantes (informado no enunciado)
compras = array([2200,650,1800])


# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas) ,compras.T )

# Imprime o preco de cada fruta
print("estafilococo: ", round(preco[0], 1))
print("salmonela: ", round(preco[1], 1))
print("coli: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == min(preco):
    print("estafilococo")
elif preco[1] == min(preco):
    print("salmonela")
else:
    print("coli")
-- EXECUTION TIME:
1.09627
-- TEST CASE 1:
---- input:
[3955.25,5652.36,8562.22]
---- correct output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
---- user output:
estafilococo:  450.0
salmonela:  100.0
coli:  300.0
salmonela
-- TEST CASE 2:
---- input:
[2095.52,1855.75,11295.21]

---- correct output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo

---- user output:
estafilococo:  450.0
salmonela:  100.0
coli:  300.0
salmonela
-- TEST CASE 3:
---- input:
[8596.14,3212.68,2652.11]
---- correct output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela

---- user output:
estafilococo:  450.0
salmonela:  100.0
coli:  300.0
salmonela
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-21 12:37:00) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 2, 1 ,4 ], [ 1, 2 , 0 ], [ 2,3 ,2 ]])

# Vetor de constantes (informado no enunciado)
compras = array(eval(input([])))


# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas) ,compras.T )

# Imprime o preco de cada fruta
print("estafilococo: ", round(preco[0], 1))
print("salmonela: ", round(preco[1], 1))
print("coli: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == min(preco):
    print("estafilococo")
elif preco[1] == min(preco):
    print("salmonela")
else:
    print("coli")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-21 12:37:16) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 2, 1 ,4 ], [ 1, 2 , 0 ], [ 2,3 ,2 ]])

# Vetor de constantes (informado no enunciado)
compras = array(eval(input()))


# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas) ,compras.T )

# Imprime o preco de cada fruta
print("estafilococo: ", round(preco[0], 1))
print("salmonela: ", round(preco[1], 1))
print("coli: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == min(preco):
    print("estafilococo")
elif preco[1] == min(preco):
    print("salmonela")
else:
    print("coli")
-- EXECUTION TIME:
0.872166
-- TEST CASE 1:
---- input:
[3955.25,5652.36,8562.22]
---- correct output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
---- user output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
-- TEST CASE 2:
---- input:
[2095.52,1855.75,11295.21]

---- correct output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo

---- user output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo
-- TEST CASE 3:
---- input:
[8596.14,3212.68,2652.11]
---- correct output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela

---- user output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 16:51:09) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 2, 1 ,4 ], [ 1, 2 , 0 ], [ 2,3 ,2 ]])

# Vetor de constantes (informado no enunciado)
compras = array(eval(input()))


# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas) ,compras.T )

# Imprime o preco de cada fruta
print("estafilococo: ", round(preco[0], 1))
print("salmonela: ", round(preco[1], 1))
print("coli: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == min(preco):
    print("estafilococo")
elif preco[1] == min(preco):
    print("salmonela")
else:
    print("coli")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 16:51:34) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 2, 1 ,4 ], [ 1, 2 , 0 ], [ 2,3 ,2 ]])

# Vetor de constantes (informado no enunciado)
compras = array(eval(input()))


# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas) ,compras.T )

# Imprime o preco de cada fruta
print("estafilococo: ", round(preco[0], 1))
print("salmonela: ", round(preco[1], 1))
print("coli: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == min(preco):
    print("estafilococo")
elif preco[1] == min(preco):
    print("salmonela")
else:
    print("coli")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 16:52:59) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 2, 1 ,4 ], [ 1, 2 , 0 ], [ 2,3 ,2 ]])

# Vetor de constantes (informado no enunciado)
compras = array(eval(input()))


# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas) ,compras.T )

# Imprime o preco de cada fruta
print("estafilococo: ", round(preco[0], 1))
print("salmonela: ", round(preco[1], 1))
print("coli: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == min(preco):
    print("estafilococo")
elif preco[1] == min(preco):
    print("salmonela")
else:
    print("coli")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:50:29) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 2, 1 ,4 ], [ 1, 2 , 0 ], [ 2,3 ,2 ]])

# Vetor de constantes (informado no enunciado)
compras = array(eval(input()))


# Resolucao do sistema de equacoes lineares
preco = solve(frutas,compras.T)

# Imprime o preco de cada fruta
print("estafilococo: ", round(preco[0], 1))
print("salmonela: ", round(preco[1], 1))
print("coli: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == min(preco):
    print("estafilococo")
elif preco[1] == min(preco):
    print("salmonela")
else:
    print("coli")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 11:50:42) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 2, 1 ,4 ], [ 1, 2 , 0 ], [ 2,3 ,2 ]])

# Vetor de constantes (informado no enunciado)
compras = array(eval(input()))


# Resolucao do sistema de equacoes lineares
preco = solve(frutas,compras.T)

# Imprime o preco de cada fruta
print("estafilococo: ", round(preco[0], 1))
print("salmonela: ", round(preco[1], 1))
print("coli: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == min(preco):
    print("estafilococo")
elif preco[1] == min(preco):
    print("salmonela")
else:
    print("coli")
-- EXECUTION TIME:
1.07762
-- TEST CASE 1:
---- input:
[3955.25,5652.36,8562.22]
---- correct output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
---- user output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
-- TEST CASE 2:
---- input:
[2095.52,1855.75,11295.21]

---- correct output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo

---- user output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo
-- TEST CASE 3:
---- input:
[8596.14,3212.68,2652.11]
---- correct output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela

---- user output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
