== TEST (2019-05-02 11:12:47) 
-- CODE:
a = float(input("a"))
b = float(input("b"))
x = float(input("x"))

if ((a < x) and (x < b)):
	d = "x pertence ao intervalo" a "," b
print(d)
-- ERROR:
File "XXXX", line 6
    d = "x pertence ao intervalo" a "," b
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:13:04) 
-- CODE:
a = float(input("a"))
b = float(input("b"))
x = float(input("x"))

if ((a < x) and (x < b)):
	d = "x pertence ao intervalo" a"," b
print(d)
-- ERROR:
File "XXXX", line 6
    d = "x pertence ao intervalo" a"," b
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:13:09) 
-- CODE:
a = float(input("a"))
b = float(input("b"))
x = float(input("x"))

if ((a < x) and (x < b)):
	d = "x pertence ao intervalo" ,a"," b
print(d)
-- ERROR:
File "XXXX", line 6
    d = "x pertence ao intervalo" ,a"," b
                                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:13:14) 
-- CODE:
a = float(input("a"))
b = float(input("b"))
x = float(input("x"))

if ((a < x) and (x < b)):
	d = "x pertence ao intervalo" ,a"," ,b
print(d)
-- ERROR:
File "XXXX", line 6
    d = "x pertence ao intervalo" ,a"," ,b
                                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:13:20) 
-- CODE:
a = float(input("a"))
b = float(input("b"))
x = float(input("x"))

if ((a < x) and (x < b)):
	d = "x pertence ao intervalo" ,a",",b
print(d)
-- ERROR:
File "XXXX", line 6
    d = "x pertence ao intervalo" ,a",",b
                                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:13:24) 
-- CODE:
a = float(input("a"))
b = float(input("b"))
x = float(input("x"))

if ((a < x) and (x < b)):
	d = "x pertence ao intervalo" ,a ",",b
print(d)
-- ERROR:
File "XXXX", line 6
    d = "x pertence ao intervalo" ,a ",",b
                                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:13:29) 
-- CODE:
a = float(input("a"))
b = float(input("b"))
x = float(input("x"))

if ((a < x) and (x < b)):
	d = "x pertence ao intervalo" ,a, ",",b
print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:14:36) 
-- CODE:
x = float(input("x"))
a = float(input("a"))
b = float(input("b"))

if ((a < x) and (x < b)):
	d = "x pertence ao intervalo" a , b
print(d)
-- ERROR:
File "XXXX", line 6
    d = "x pertence ao intervalo" a , b
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:14:49) 
-- CODE:
x = float(input("x"))
a = float(input("a"))
b = float(input("b"))

if ((a < x) and (x < b)):
	d = "x pertence ao intervalo" ,a, ",",b
print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:17:04) 
-- CODE:
x = float(input("x"))
a = float(input("a"))
b = float(input("b"))

if ((a < x) and (x < b)):
	d = x "pertence ao intervalo" ,a, ",",b
elif ((a > x) or (b < x)):
	d = x "nao pertence ao intervalo" ,a, ",",b
print(d)
-- ERROR:
File "XXXX", line 6
    d = x "pertence ao intervalo" ,a, ",",b
                                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:17:15) 
-- CODE:
x = float(input("x"))
a = float(input("a"))
b = float(input("b"))

if ((a < x) and (x < b)):
	d = x, "pertence ao intervalo" ,a, ",",b
elif ((a > x) or (b < x)):
	d = x, "nao pertence ao intervalo" ,a, ",",b
print(d)
-- OUTPUT:
(2.0, 'nao pertence ao intervalo', 3.0, ',', 4.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:17:44) 
-- CODE:
x = float(input("x"))
a = float(input("a"))
b = float(input("b"))

if ((a < x) and (x < b)):
	d = x, "pertence ao intervalo" ,a, ",",b
elif ((a > x) or (b < x)):
	d = x, "nao pertence ao intervalo" ,a, ",",b
print(d)
-- OUTPUT:
(2.0, 'nao pertence ao intervalo', 3.0, ',', 4.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:18:11) 
-- CODE:
x = float(input("x"))
a = float(input("a"))
b = float(input("b"))

if ((a < x) and (x < b)):
	d = x, "pertence ao intervalo" ,a, ",",b
elif ((a > x) or (b < x)):
	d = x, "nao pertence ao intervalo" ,a, ",",b
print(d)
-- OUTPUT:
(2.0, 'nao pertence ao intervalo', 3.0, ',', 4.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:19:08) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))

if ((a < x) and (x < b)):
	d = x, "pertence ao intervalo" ,a, ",",b
elif ((a > x) or (b < x)):
	d = x, "nao pertence ao intervalo" ,a, ",",b
print(d)
-- OUTPUT:
(2.0, 'nao pertence ao intervalo', 3.0, ',', 4.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:21:40) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))

if ((a < x) and (x < b)):
	d = x, "pertence ao intervalo" ,a, ",",b
elif ((a > x) or (b < x)):
	d = x, "nao pertence ao intervalo" ,a, ",",b
elif (b <= a):
	d = "Entradas" ,a, "e" b, "invalidas"
print(d)
-- ERROR:
File "XXXX", line 10
    d = "Entradas" ,a, "e" b, "invalidas"
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:21:49) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))

if ((a < x) and (x < b)):
	d = x, "pertence ao intervalo" ,a, ",",b
elif ((a > x) or (b < x)):
	d = x, "nao pertence ao intervalo" ,a, ",",b
elif (b <= a):
	d = "Entradas" ,a, "e" ,b, "invalidas"
print(d)
-- OUTPUT:
(2.0, 'nao pertence ao intervalo', 3.0, ',', 4.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:22:13) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))

if ((a < x) and (x < b)):
	d = x, "pertence ao intervalo" ,a, ",",b
elif ((a > x) or (b < x)):
	d = x, "nao pertence ao intervalo" ,a, ",",b
elif (b <= a):
	d = "Entradas" ,a, "e" ,b, "invalidas"
print(d)
-- OUTPUT:
(2.0, 'nao pertence ao intervalo', 3.0, ',', 4.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 11:22:25) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))

if ((a < x) and (x < b)):
	d = x, "pertence ao intervalo" ,a, ",",b
elif ((a > x) or (b < x)):
	d = x, "nao pertence ao intervalo" ,a, ",",b
elif (b <= a):
	d = "Entradas" ,a, "e" ,b, "invalidas"
print(d)
-- EXECUTION TIME:
0.149535
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
(2.0, 'nao pertence ao intervalo', 3.0, ',', 4.0)
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
(5.5, 'nao pertence ao intervalo', 6.5, ',', 3.5)
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
(6.5, 'pertence ao intervalo', 1.1, ',', 22.2)
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:22:31) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))

if ((a < x) and (x < b)):
	d = x, "pertence ao intervalo" ,a, ",",b
elif ((a > x) or (b < x)):
	d = x, "nao pertence ao intervalo" ,a, ",",b
elif (b <= a):
	d = "Entradas" ,a, "e" ,b, "invalidas"
print(d)
-- OUTPUT:
(2.0, 'nao pertence ao intervalo', 3.0, ',', 4.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:23:01) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))

if ((a < x) and (x < b)):
	d = x, "pertence ao intervalo" ,a, ",",b
elif ((a > x) and (b < x)):
	d = x, "nao pertence ao intervalo" ,a, ",",b
elif (b <= a):
	d = "Entradas" ,a, "e" ,b, "invalidas"
print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 11:23:08) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))

if ((a < x) and (x < b)):
	d = x, "pertence ao intervalo" ,a, ",",b
elif ((a > x) and (b < x)):
	d = x, "nao pertence ao intervalo" ,a, ",",b
elif (b <= a):
	d = "Entradas" ,a, "e" ,b, "invalidas"
print(d)
-- EXECUTION TIME:
0.216811
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1103/main.py", line 11, in <module>
    print(d)
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 15:40:03) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))

if ((a < x) and (x < b)):
	d = x, "pertence ao intervalo" ,a, ",",b
elif ((a > x) and (b < x)):
	d = x, "nao pertence ao intervalo" ,a, ",",b
elif (b <= a):
	d = "Entradas" ,a, "e" ,b, "invalidas"
print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(d)
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 15:40:53) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))

if ((a < x) and (x < b)):
	d = x, "pertence ao intervalo" ,a, ",",b
elif ((a > x) and (b < x)):
	d = x, "nao pertence ao intervalo" ,a, ",",b
elif ((b <= a) or (x <=a)):
	d = "Entradas" ,a, "e" ,b, "invalidas"
print(d)
-- EXECUTION TIME:
0.144314
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
('Entradas', 3.0, 'e', 4.0, 'invalidas')
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
(5.5, 'nao pertence ao intervalo', 6.5, ',', 3.5)
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
(6.5, 'pertence ao intervalo', 1.1, ',', 22.2)
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 15:40:54) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))

if ((a < x) and (x < b)):
	d = x, "pertence ao intervalo" ,a, ",",b
elif ((a > x) and (b < x)):
	d = x, "nao pertence ao intervalo" ,a, ",",b
elif ((b <= a) or (x <=a)):
	d = "Entradas" ,a, "e" ,b, "invalidas"
print(d)
-- OUTPUT:
('Entradas', 3.0, 'e', 4.0, 'invalidas')
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 15:55:38) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))

if ((a < x) and (x < b)):
	d = x, "pertence ao intervalo" ,a, ",",b
elif ((a > x) and (b < x)):
	d = x, "nao pertence ao intervalo" ,a, ",",b
else:
	d = "Entradas" ,a, "e" ,b, "invalidas"
print(d)
-- OUTPUT:
('Entradas', 3.0, 'e', 4.0, 'invalidas')
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 15:55:41) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))

if ((a < x) and (x < b)):
	d = x, "pertence ao intervalo" ,a, ",",b
elif ((a > x) and (b < x)):
	d = x, "nao pertence ao intervalo" ,a, ",",b
else:
	d = "Entradas" ,a, "e" ,b, "invalidas"
print(d)
-- OUTPUT:
('Entradas', 3.0, 'e', 4.0, 'invalidas')
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 15:56:28) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))

if ((a < x) and (x < b)):
	d = x, "pertence ao intervalo" ,a, ",",b
elif ((a > x) and (b < x)):
	d = x, "nao pertence ao intervalo" ,a, ",",b
else:
	d = 'Entradas' ,a, "e" ,b, "invalidas"
print(d)
-- OUTPUT:
('Entradas', 3.0, 'e', 4.0, 'invalidas')
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 15:57:32) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))

if ((a < x) and (x < b)):
	d = x, "pertence ao intervalo" ,a, ",",b
elif ((a > x) and (b < x)):
	d = x, "nao pertence ao intervalo" ,a, ",",b
else:
	d = "Entradas", str(a), "e" str(b), "invalidas"
print(d)
-- ERROR:
File "XXXX", line 10
    d = "Entradas", str(a), "e" str(b), "invalidas"
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 15:57:33) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))

if ((a < x) and (x < b)):
	d = x, "pertence ao intervalo" ,a, ",",b
elif ((a > x) and (b < x)):
	d = x, "nao pertence ao intervalo" ,a, ",",b
else:
	d = "Entradas", str(a), "e" str(b), "invalidas"
print(d)
-- ERROR:
File "XXXX", line 10
    d = "Entradas", str(a), "e" str(b), "invalidas"
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 15:57:46) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))

if ((a < x) and (x < b)):
	d = x, "pertence ao intervalo" ,a, ",",b
elif ((a > x) and (b < x)):
	d = x, "nao pertence ao intervalo" ,a, ",",b
else:
	d = "Entradas", str(a), "e", str(b), "invalidas"
print(d)
-- OUTPUT:
('Entradas', '3.0', 'e', '4.0', 'invalidas')
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 15:58:07) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))

if ((a < x) and (x < b)):
	d = x, "pertence ao intervalo" ,a, ",",b
elif ((a > x) and (b < x)):
	d = x, "nao pertence ao intervalo" ,a, ",",b
else:
	d = "Entradas" + str(a) + "e" + str(b), "invalidas"
print(d)
-- OUTPUT:
('Entradas3.0e4.0', 'invalidas')
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 15:58:13) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))

if ((a < x) and (x < b)):
	d = x, "pertence ao intervalo" ,a, ",",b
elif ((a > x) and (b < x)):
	d = x, "nao pertence ao intervalo" ,a, ",",b
else:
	d = "Entradas" + str(a) + "e" + str(b) + "invalidas"
print(d)
-- OUTPUT:
Entradas3.0e4.0invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 15:58:37) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))

if ((a < x) and (x < b)):
	d = x, "pertence ao intervalo" ,a, ",",b
elif ((a > x) and (b < x)):
	d = x, "nao pertence ao intervalo" ,a, ",",b
else:
	d = "Entradas " + str(a) + "e " + str(b) + " invalidas"
print(d)
-- OUTPUT:
Entradas 3.0e 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 15:58:44) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))

if ((a < x) and (x < b)):
	d = x, "pertence ao intervalo" ,a, ",",b
elif ((a > x) and (b < x)):
	d = x, "nao pertence ao intervalo" ,a, ",",b
else:
	d = "Entradas " + str(a) + " e " + str(b) + " invalidas"
print(d)
-- OUTPUT:
Entradas 3.0 e 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 15:58:57) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))

if ((a < x) and (x < b)):
	d = x, "pertence ao intervalo" ,a, ",",b
elif ((a > x) and (b < x)):
	d = x, "nao pertence ao intervalo" ,a, ",",b
else:
	d = "Entradas " + str(a) + " e " + str(b) + " invalidas"
print(d)
-- EXECUTION TIME:
0.122267
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
Entradas 3.0 e 4.0 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
(5.5, 'nao pertence ao intervalo', 6.5, ',', 3.5)
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
(6.5, 'pertence ao intervalo', 1.1, ',', 22.2)
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 15:59:14) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))

if ((a < x) and (x < b)):
	d = x, "pertence ao intervalo" ,a, ",",b
elif ((a > x) and (b < x)):
	d = x + " nao pertence ao intervalo " + a, ",",b
else:
	d = "Entradas " + str(a) + " e " + str(b) + " invalidas"
print(d)
-- OUTPUT:
Entradas 3.0 e 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 15:59:22) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))

if ((a < x) and (x < b)):
	d = x, "pertence ao intervalo" ,a, ",",b
elif ((a > x) and (b < x)):
	d = x + " nao pertence ao intervalo " + a, ",",b
else:
	d = "Entradas " + str(a) + " e " + str(b) + " invalidas"
print(d)
-- OUTPUT:
Entradas 3.0 e 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 15:59:24) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))

if ((a < x) and (x < b)):
	d = x, "pertence ao intervalo" ,a, ",",b
elif ((a > x) and (b < x)):
	d = x + " nao pertence ao intervalo " + a, ",",b
else:
	d = "Entradas " + str(a) + " e " + str(b) + " invalidas"
print(d)
-- OUTPUT:
Entradas 3.0 e 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-02 19:01:54) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))

if ((a <= x) and (x <= b)):
	d = x + " pertence ao intervalo " + str(a)  ,b
elif ((a > x) and (b < x)):
	d = x + " nao pertence ao intervalo " + a, ",",b
else:
	d = "Entradas " + str(a) + " e " + str(b) + " invalidas"
print(d)
-- EXECUTION TIME:
0.812379
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
x:a:b:Entradas 3.0 e 4.0 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
x:a:b:
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
x:a:b:
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-02 19:02:30) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))

if ((a <= x) and (x <= b)):
	d = x + " pertence ao intervalo " + str(a)  ,b
elif ((a > x) and (b < x)):
	d = x + " nao pertence ao intervalo " + a, ",",b
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    d = "Entradas " + a, + " e " + b, + " invalidas"
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-02 19:04:06) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))

if ((a <= x) and (x <= b)):
	d = x, + "pertence ao intervalo" + str(a)  ,b
elif ((a > x) and (b < x)):
	d = x + " nao pertence ao intervalo " + a, ",",b
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    d = "Entradas " + a, + " e " + b, + " invalidas"
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-02 19:04:40) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))

if ((a <= x) and (x <= b)):
	d = x, + "pertence ao intervalo" + a,b
elif ((a > x) and (b < x)):
	d = x + " nao pertence ao intervalo " + a, ",",b
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    d = "Entradas " + a, + " e " + b, + " invalidas"
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-02 19:05:19) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))

if ((a <= x) and (x <= b)):
	d = x, + "pertence ao intervalo" + a "," b
elif ((a > x) and (b < x)):
	d = x + "nao pertence ao intervalo" + a, ",",b
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
print(d)
-- ERROR:
File "XXXX", line 6
    d = x, + "pertence ao intervalo" + a "," b
                                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-02 19:05:22) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))

if ((a <= x) and (x <= b)):
	d = x, + "pertence ao intervalo" + a "," b
elif ((a > x) and (b < x)):
	d = x + "nao pertence ao intervalo" + a, ",",b
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
print(d)
-- ERROR:
File "XXXX", line 6
    d = x, + "pertence ao intervalo" + a "," b
                                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-02 19:05:34) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))

if ((a <= x) and (x <= b)):
	d = x + "pertence ao intervalo" + a "," b
elif ((a > x) and (b < x)):
	d = x + "nao pertence ao intervalo" + a, ",",b
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
print(d)
-- ERROR:
File "XXXX", line 6
    d = x + "pertence ao intervalo" + a "," b
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-02 19:07:20) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))

if ((a <= x) and (x <= b)):
	d = x + "pertence ao intervalo" + a "," b
elif ((a > x) and (b < x)):
	d = x + "nao pertence ao intervalo" + a, ",",b
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
print(d)
-- ERROR:
File "XXXX", line 6
    d = x + "pertence ao intervalo" + a "," b
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-02 19:08:17) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))

if ((a <= x) and (x <= b)):
	d = x, + "pertence ao intervalo", + a, "," b
elif ((a > x) and (b < x)):
	d = x + "nao pertence ao intervalo" + a, ",",b
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
print(d)
-- ERROR:
File "XXXX", line 6
    d = x, + "pertence ao intervalo", + a, "," b
                                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-02 19:08:24) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))

if ((a <= x) and (x <= b)):
	d = x + "pertence ao intervalo", + a "," b
elif ((a > x) and (b < x)):
	d = x + "nao pertence ao intervalo" + a, ",",b
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
print(d)
-- ERROR:
File "XXXX", line 6
    d = x + "pertence ao intervalo", + a "," b
                                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-02 19:08:32) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))

if ((a <= x) and (x <= b)):
	d = x + "pertence ao intervalo" + a "," b
elif ((a > x) and (b < x)):
	d = x + "nao pertence ao intervalo" + a, ",",b
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
print(d)
-- ERROR:
File "XXXX", line 6
    d = x + "pertence ao intervalo" + a "," b
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-02 19:10:28) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))

if ((a <= x) and (x <= b)):
	d = str(x) + "pertence ao intervalo" + str(a) "," str(b)
elif ((a > x) and (b < x)):
	d = x + "nao pertence ao intervalo" + a, ",",b
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
print(d)
-- ERROR:
File "XXXX", line 6
    d = str(x) + "pertence ao intervalo" + str(a) "," str(b)
                                                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-02 19:10:31) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))

if ((a <= x) and (x <= b)):
	d = str(x) + "pertence ao intervalo" + str(a) "," str(b)
elif ((a > x) and (b < x)):
	d = x + "nao pertence ao intervalo" + a, ",",b
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
print(d)
-- ERROR:
File "XXXX", line 6
    d = str(x) + "pertence ao intervalo" + str(a) "," str(b)
                                                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-02 19:10:34) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))

if ((a <= x) and (x <= b)):
	d = str(x), + "pertence ao intervalo" + str(a) "," str(b)
elif ((a > x) and (b < x)):
	d = x + "nao pertence ao intervalo" + a, ",",b
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
print(d)
-- ERROR:
File "XXXX", line 6
    d = str(x), + "pertence ao intervalo" + str(a) "," str(b)
                                                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-02 19:10:37) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))

if ((a <= x) and (x <= b)):
	d = str(x), + "pertence ao intervalo", + str(a) "," str(b)
elif ((a > x) and (b < x)):
	d = x + "nao pertence ao intervalo" + a, ",",b
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
print(d)
-- ERROR:
File "XXXX", line 6
    d = str(x), + "pertence ao intervalo", + str(a) "," str(b)
                                                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-02 19:10:41) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))

if ((a <= x) and (x <= b)):
	d = str(x), + "pertence ao intervalo", + str(a), "," str(b)
elif ((a > x) and (b < x)):
	d = x + "nao pertence ao intervalo" + a, ",",b
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
print(d)
-- ERROR:
File "XXXX", line 6
    d = str(x), + "pertence ao intervalo", + str(a), "," str(b)
                                                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:33:01) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))

if ((a <= x) and (x <= b)):
	d = str(x), + "pertence ao intervalo", + str(a), "," str(b)
elif ((a > x) and (b < x)):
	d = x + "nao pertence ao intervalo" + a, ",",b
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
print(d)
-- ERROR:
File "XXXX", line 6
    d = str(x), + "pertence ao intervalo", + str(a), "," str(b)
                                                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-04 16:35:30) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))

if ((a <= x) and (x <= b)):
	print(x, "pertence ao intervalo" a","b)
elif ((a > x) and (b < x)):
	print(x,"nao pertence ao intervalo" a","b)
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
print(d)
-- EXECUTION TIME:
0.543686
-- ERROR:
  File "/home/codebench/codes/1679/1103/main.py", line 6
    print(x, "pertence ao intervalo" a","b)
                                     ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:35:30) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))

if ((a <= x) and (x <= b)):
	print(x, "pertence ao intervalo" a","b)
elif ((a > x) and (b < x)):
	print(x,"nao pertence ao intervalo" a","b)
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
print(d)
-- ERROR:
File "XXXX", line 6
    print(x, "pertence ao intervalo" a","b)
                                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:35:40) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))

if ((a <= x) and (x <= b)):
	print(x,+ "pertence ao intervalo" + a","b)
elif ((a > x) and (b < x)):
	print(x,"nao pertence ao intervalo" a","b)
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
print(d)
-- ERROR:
File "XXXX", line 6
    print(x,+ "pertence ao intervalo" + a","b)
                                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:35:50) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))

if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo"  a",",b)
elif ((a > x) and (b < x)):
	print(x,"nao pertence ao intervalo" a","b)
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
print(d)
-- ERROR:
File "XXXX", line 6
    print(x,"pertence ao intervalo"  a",",b)
                                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:36:15) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))

if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo"  a","+b)
elif ((a > x) and (b < x)):
	print(x,"nao pertence ao intervalo" a","b)
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
print(d)
-- ERROR:
File "XXXX", line 6
    print(x,"pertence ao intervalo"  a","+b)
                                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:37:17) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
,
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo"  a,","b)
elif ((a > x) and (b < x)):
	print(x,"nao pertence ao intervalo" a","b)
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
print(d)
-- ERROR:
File "XXXX", line 4
    ,
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:37:23) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo"  a,","b)
elif ((a > x) and (b < x)):
	print(x,"nao pertence ao intervalo" a,","b)
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
print(d)
-- ERROR:
File "XXXX", line 5
    print(x,"pertence ao intervalo"  a,","b)
                                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:37:25) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo"  a,","b)
elif ((a > x) and (b < x)):
	print(x,"nao pertence ao intervalo" a,","b)
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
print(d)
-- ERROR:
File "XXXX", line 5
    print(x,"pertence ao intervalo"  a,","b)
                                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:37:25) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo"  a,","b)
elif ((a > x) and (b < x)):
	print(x,"nao pertence ao intervalo" a,","b)
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
print(d)
-- ERROR:
File "XXXX", line 5
    print(x,"pertence ao intervalo"  a,","b)
                                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:37:26) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo"  a,","b)
elif ((a > x) and (b < x)):
	print(x,"nao pertence ao intervalo" a,","b)
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
print(d)
-- ERROR:
File "XXXX", line 5
    print(x,"pertence ao intervalo"  a,","b)
                                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:37:26) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo"  a,","b)
elif ((a > x) and (b < x)):
	print(x,"nao pertence ao intervalo" a,","b)
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
print(d)
-- ERROR:
File "XXXX", line 5
    print(x,"pertence ao intervalo"  a,","b)
                                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:37:26) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo"  a,","b)
elif ((a > x) and (b < x)):
	print(x,"nao pertence ao intervalo" a,","b)
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
print(d)
-- ERROR:
File "XXXX", line 5
    print(x,"pertence ao intervalo"  a,","b)
                                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:37:26) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo"  a,","b)
elif ((a > x) and (b < x)):
	print(x,"nao pertence ao intervalo" a,","b)
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
print(d)
-- ERROR:
File "XXXX", line 5
    print(x,"pertence ao intervalo"  a,","b)
                                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:37:27) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo"  a,","b)
elif ((a > x) and (b < x)):
	print(x,"nao pertence ao intervalo" a,","b)
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
print(d)
-- ERROR:
File "XXXX", line 5
    print(x,"pertence ao intervalo"  a,","b)
                                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:37:27) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo"  a,","b)
elif ((a > x) and (b < x)):
	print(x,"nao pertence ao intervalo" a,","b)
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
print(d)
-- ERROR:
File "XXXX", line 5
    print(x,"pertence ao intervalo"  a,","b)
                                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:37:27) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo"  a,","b)
elif ((a > x) and (b < x)):
	print(x,"nao pertence ao intervalo" a,","b)
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
print(d)
-- ERROR:
File "XXXX", line 5
    print(x,"pertence ao intervalo"  a,","b)
                                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:37:27) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo"  a,","b)
elif ((a > x) and (b < x)):
	print(x,"nao pertence ao intervalo" a,","b)
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
print(d)
-- ERROR:
File "XXXX", line 5
    print(x,"pertence ao intervalo"  a,","b)
                                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:37:27) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo"  a,","b)
elif ((a > x) and (b < x)):
	print(x,"nao pertence ao intervalo" a,","b)
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
print(d)
-- ERROR:
File "XXXX", line 5
    print(x,"pertence ao intervalo"  a,","b)
                                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:37:27) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo"  a,","b)
elif ((a > x) and (b < x)):
	print(x,"nao pertence ao intervalo" a,","b)
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
print(d)
-- ERROR:
File "XXXX", line 5
    print(x,"pertence ao intervalo"  a,","b)
                                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:39:08) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo"  a,b)
elif ((a > x) and (b < x)):
	print(x,"nao pertence ao intervalo" a,b)
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
print(d)
-- ERROR:
File "XXXX", line 5
    print(x,"pertence ao intervalo"  a,b)
                                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:39:09) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo"  a,b)
elif ((a > x) and (b < x)):
	print(x,"nao pertence ao intervalo" a,b)
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
print(d)
-- ERROR:
File "XXXX", line 5
    print(x,"pertence ao intervalo"  a,b)
                                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:39:20) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo"  a,b)
elif ((a > x) and (b < x)):
	print(x,"nao pertence ao intervalo" a,b)
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
print(d)
-- ERROR:
File "XXXX", line 5
    print(x,"pertence ao intervalo"  a,b)
                                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:42:29) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo"  a,",",b)
elif ((a > x) and (b < x)):
	print(x,"nao pertence ao intervalo" a,",",b)
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
print(d)
-- ERROR:
File "XXXX", line 5
    print(x,"pertence ao intervalo"  a,",",b)
                                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:42:36) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo"  a,","b)
elif ((a > x) and (b < x)):
	print(x,"nao pertence ao intervalo" a,",",b)
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
print(d)
-- ERROR:
File "XXXX", line 5
    print(x,"pertence ao intervalo"  a,","b)
                                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:42:45) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo",  a,","b)
elif ((a > x) and (b < x)):
	print(x,"nao pertence ao intervalo" a,",",b)
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
print(d)
-- ERROR:
File "XXXX", line 5
    print(x,"pertence ao intervalo",  a,","b)
                                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:42:51) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo",  a,",",b)
elif ((a > x) and (b < x)):
	print(x,"nao pertence ao intervalo" a,",",b)
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
print(d)
-- ERROR:
File "XXXX", line 7
    print(x,"nao pertence ao intervalo" a,",",b)
                                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:42:56) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo",  a,",",b)
elif ((a > x) and (b < x)):
	print(x,"nao pertence ao intervalo", a,",",b)
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    d = "Entradas " + a, + " e " + b, + " invalidas"
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-04 16:42:59) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo",  a,",",b)
elif ((a > x) and (b < x)):
	print(x,"nao pertence ao intervalo", a,",",b)
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
print(d)
-- EXECUTION TIME:
0.659747
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1103/main.py", line 9, in <module>
    d = "Entradas " + a, + " e " + b, + " invalidas"
TypeError: Can't convert 'float' object to str implicitly

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:43:03) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo",  a,",",b)
elif ((a > x) and (b < x)):
	print(x,"nao pertence ao intervalo", a,",",b)
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    d = "Entradas " + a, + " e " + b, + " invalidas"
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:43:10) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo",  a,",",b)
elif ((a > x) and (b < x)):
	print(x,"nao pertence ao intervalo", a,",",b)
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
	print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    d = "Entradas " + a, + " e " + b, + " invalidas"
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:43:13) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo",  a,",",b)
elif ((a > x) and (b < x)):
	print(x,"nao pertence ao intervalo", a,",",b)
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
	print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    d = "Entradas " + a, + " e " + b, + " invalidas"
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-04 16:43:24) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo",  a,",",b)
elif ((a > x) and (b < x)):
	print(x,"nao pertence ao intervalo", a,",",b)
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
	print(d)
-- EXECUTION TIME:
1.14499
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1103/main.py", line 9, in <module>
    d = "Entradas " + a, + " e " + b, + " invalidas"
TypeError: Can't convert 'float' object to str implicitly

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-04 16:43:25) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo",  a,",",b)
elif ((a > x) and (b < x)):
	print(x,"nao pertence ao intervalo", a,",",b)
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
	print(d)
-- EXECUTION TIME:
2.51974
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1103/main.py", line 9, in <module>
    d = "Entradas " + a, + " e " + b, + " invalidas"
TypeError: Can't convert 'float' object to str implicitly

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-04 16:43:26) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo",  a,",",b)
elif ((a > x) and (b < x)):
	print(x,"nao pertence ao intervalo", a,",",b)
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
	print(d)
-- EXECUTION TIME:
4.82936
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-04 16:43:26) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo",  a,",",b)
elif ((a > x) and (b < x)):
	print(x,"nao pertence ao intervalo", a,",",b)
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
	print(d)
-- EXECUTION TIME:
4.63506
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-04 16:43:26) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo",  a,",",b)
elif ((a > x) and (b < x)):
	print(x,"nao pertence ao intervalo", a,",",b)
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
	print(d)
-- EXECUTION TIME:
4.55041
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-04 16:43:26) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo",  a,",",b)
elif ((a > x) and (b < x)):
	print(x,"nao pertence ao intervalo", a,",",b)
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
	print(d)
-- EXECUTION TIME:
5.72858
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:43:27) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo",  a,",",b)
elif ((a > x) and (b < x)):
	print(x,"nao pertence ao intervalo", a,",",b)
else:
	d = "Entradas " + a, + " e " + b, + " invalidas"
	print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    d = "Entradas " + a, + " e " + b, + " invalidas"
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-04 16:43:57) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo",  a,",",b)
elif ((a > x) and (b < x)):
	print(x,"nao pertence ao intervalo", a,",",b)
else:
	d = "Entradas ",  a,"e", b, " invalidas"
	print(d)
-- EXECUTION TIME:
0.679915
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
('Entradas ', 3.0, 'e', 4.0, ' invalidas')
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:43:58) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo",  a,",",b)
elif ((a > x) and (b < x)):
	print(x,"nao pertence ao intervalo", a,",",b)
else:
	d = "Entradas ",  a,"e", b, " invalidas"
	print(d)
-- OUTPUT:
('Entradas ', 3.0, 'e', 4.0, ' invalidas')
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:44:09) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo",  a,",",b)
elif ((a > x) and (b < x)):
	print(x,"nao pertence ao intervalo", a,",",b)
else:
	d = "Entradas ",  a,"e", b, " invalidas"
	print(d)
-- OUTPUT:
('Entradas ', 3.0, 'e', 4.0, ' invalidas')
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:44:41) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo",  a,",",b)
elif ((a > x) and (b < x)):
	print(x,"nao pertence ao intervalo", a,",",b)
else:
	print("Entradas",  a,"e", b, " invalidas")
	
-- OUTPUT:
Entradas 3.0 e 4.0  invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-04 16:44:57) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo",  a,",",b)
elif ((a > x) and (b < x)):
	print(x,"nao pertence ao intervalo", a,",",b)
else:
	print("Entradas",  a,"e", b, " invalidas")
	
-- EXECUTION TIME:
0.883045
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
Entradas 3.0 e 4.0  invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-04 16:45:21) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo",  a,",",b)
elif ((a > x) and (b < x)):
	print(x,"nao pertence ao intervalo", a,",",b)
if b <= a:
	print("Entradas",  a,"e", b, " invalidas")
	
-- EXECUTION TIME:
0.796558
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:

-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
Entradas 6.5 e 3.5  invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:45:24) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo",  a,",",b)
elif ((a > x) and (b < x)):
	print(x,"nao pertence ao intervalo", a,",",b)
if b <= a:
	print("Entradas",  a,"e", b, " invalidas")
	
-- OUTPUT:
Entradas 3.0 e 4.0  invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:45:33) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo",  a,",",b)
elif ((a > x) and (b < x)):
	print(x,"nao pertence ao intervalo", a,",",b)
if b <= a:
	print("Entradas",  a,"e", b, " invalidas")
	
-- OUTPUT:
Entradas 3.0 e 4.0  invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:46:27) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo",  a,",",b)
if ((a > x) and (b < x)):
	print(x,"nao pertence ao intervalo", a,",",b)
if b <= a:
	print("Entradas",  a,"e", b, " invalidas")
	
-- OUTPUT:
Entradas 3.0 e 4.0  invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-04 16:47:18) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo",  a,",",b)
else:
	print(x,"nao pertence ao intervalo", a,",",b)
if b <= a:
	print("Entradas",  a,"e", b, " invalidas")
	
-- EXECUTION TIME:
0.5782
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
Entradas 6.5 e 3.5  invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:48:15) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo",  a,",",b)
if ((a > x) or (b < x)):
	print(x,"nao pertence ao intervalo", a,",",b)
if b <= a:
	print("Entradas",  a,"e", b, " invalidas")
	
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 16:49:02) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo",  a,",",b)
if ((a > x) or (b < x)):
	print(x,"nao pertence ao intervalo", a,",",b)
if b <= a and a >= x :
	print("Entradas",  a,"e", b, " invalidas")
	
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-04 16:49:10) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo",  a,",",b)
if ((a > x) or (b < x)):
	print(x,"nao pertence ao intervalo", a,",",b)
if b <= a and a >= x:
	print("Entradas",  a,"e", b, " invalidas")
	
-- EXECUTION TIME:
0.862162
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
Entradas 6.5 e 3.5  invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-04 16:49:18) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo",  a,",",b)
if ((a > x) or (b < x)):
	print(x,"nao pertence ao intervalo", a,",",b)
else:
	print("Entradas",  a,"e", b, " invalidas")
	
-- EXECUTION TIME:
0.801938
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
Entradas 1.1 e 22.2  invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-04 16:49:31) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo",  a,",",b)
elif ((a > x) or (b < x)):
	print(x,"nao pertence ao intervalo", a,",",b)
else:
	print("Entradas",  a,"e", b, " invalidas")
	
-- EXECUTION TIME:
0.838466
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-04 16:49:57) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo",  a,",",b)
elif ((a > x) or (b < x)):
	print(x,"nao pertence ao intervalo", a,",",b)
elif b <= a and a >= x:
	print("Entradas",  a,"e", b, " invalidas")
	
-- EXECUTION TIME:
0.707519
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-04 16:51:40) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if ((a <= x) and (x <= b)):
	print(x,"pertence ao intervalo",  a,",",b)
else:
	print(x,"nao pertence ao intervalo", a,",",b)
if b <= a and a >= x:
	print("Entradas",  a,"e", b, " invalidas")
	
-- EXECUTION TIME:
0.819562
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
Entradas 6.5 e 3.5  invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-04 16:54:35) 
-- CODE:
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if (a <= x <= b):
	print(x,"pertence ao intervalo",  a,",",b)
elif x <= a <=b:
	print(x,"nao pertence ao intervalo", a,",",b)
elif b <= a:
	print("Entradas",  a,"e", b, " invalidas")
	
-- EXECUTION TIME:
0.630771
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5  invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
