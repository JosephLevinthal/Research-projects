== TEST (2019-04-28 23:14:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
tipo=(input("isntalacao (R, I ou C): "))
faixa=int(input("consumo: "))
if(tipo=="R"):
	if(faixa<0):
		preco=-1
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    faixa=int(input())
ValueError: invalid literal for int() with base 10: 'I'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:15:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
tipo=(input("isntalacao (R, I ou C): "))
faixa=int(input("consumo: "))
if(tipo=="R"):
	if(faixa<0):
		preco=-1
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    faixa=int(input())
ValueError: invalid literal for int() with base 10: 'I'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:16:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
tipo=(input("isntalacao (R, I ou C): "))
faixa=int(input("consumo: "))
if(tipo=="R"):
	if(faixa<0):
		preco=-1
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    faixa=int(input())
ValueError: invalid literal for int() with base 10: 'I'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:22:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
tipo=(input("isntalacao (R, I ou C): "))
faixa=int(input("consumo: "))
if(tipo=="R"):
	if(faixa<0):
		preco=-1
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco=-1
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco=-1
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco=-1
print(preco)
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    faixa=int(input())
ValueError: invalid literal for int() with base 10: 'I'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:24:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
tipo=int(input("consumo: "))
faixa=(input("isntalacao (R, I ou C): "))
if(tipo=="R"):
	if(faixa<0):
		preco=-1
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco=-1
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco=-1
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco=-1
print(preco)
		
-- OUTPUT:
-1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:24:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
tipo=float(input("consumo: "))
faixa=(input("isntalacao (R, I ou C): "))
if(tipo=="R"):
	if(faixa<0):
		preco=-1
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco=-1
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco=-1
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco=-1
print(preco)
		
-- OUTPUT:
-1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:27:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
tipo=float(input("consumo: "))
faixa=(input("isntalacao (R, I ou C): "))
if(tipo=="R"):
	if(faixa<0):
		preco=-1
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco=-1
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco=-1
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print(preco)
		
-- OUTPUT:
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:29:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
tipo=float(input("consumo: "))
faixa=(input("isntalacao (R, I ou C): "))
if(tipo=="R"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print(preco)
		
-- OUTPUT:
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:30:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
tipo=float(input("consumo: "))
faixa=(input("isntalacao (R, I ou C): "))
if:(faixa<0)
	if(tipo=="R"):
		preco="invalido"
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print(preco)
		
-- ERROR:
File "XXXX", line 6
    if:(faixa<0)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:30:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao (R, I ou C): "))
if:(faixa<0)
	if(tipo=="R"):
		preco="invalido"
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print(preco)
		
-- ERROR:
File "XXXX", line 6
    if:(faixa<0)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:32:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
tipo=(input("isntalacao (R, I ou C): "))
faixa=float(input("consumo: "))
if(tipo=="R"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print(preco)
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    faixa=float(input())
ValueError: could not convert string to float: 'I'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:35:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
tipo=(input("isntalacao (R, I ou C): "))
faixa=float(input("consumo: "))
if(tipo=="R"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print(preco)
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    faixa=float(input())
ValueError: could not convert string to float: 'I'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:36:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
tipo=(input("isntalacao (R, I ou C): "))
faixa=float(input("consumo: "))
if(tipo=="R"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print(preco)
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    faixa=float(input())
ValueError: could not convert string to float: 'I'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 23:37:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
tipo=(input("isntalacao (R, I ou C): "))
faixa=float(input("consumo: "))
if(tipo=="R"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print(preco)
		
-- EXECUTION TIME:
0.149162
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1101/main.py", line 5, in <module>
    faixa=float(input())
ValueError: could not convert string to float: 'I'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:38:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao (R, I ou C): "))

if(faixa<0):
	if(tipo=="R"):
		preco="invalido"
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print(preco)
		
-- OUTPUT:
-22.400000000000002
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:39:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao (R, I ou C): "))

if(faixa<0):
	if(tipo=="R"):	
	elif(faixa<=500):
		preco="invalido"
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print(preco)
		
-- ERROR:
File "XXXX", line 9
    elif(faixa<=500):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:40:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao (R, I ou C): "))

if(faixa<0):
	if(tipo=="R"):
		preco="invalido"
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print(preco)
		
-- OUTPUT:
-22.400000000000002
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:40:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao (R, I ou C): "))

if(faixa<0):
	if(tipo=="R"):
		preco="invalido"
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print(preco)
		
-- OUTPUT:
-22.400000000000002
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:41:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao (R, I ou C): "))

if(faixa<0):
	if(tipo=="R"):
		preco="invalido"
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print(preco)
		
-- OUTPUT:
-22.400000000000002
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 23:42:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao (R, I ou C): "))

if(faixa<0):
	if(tipo=="R"):
		preco="invalido"
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print(preco)
		
-- EXECUTION TIME:
0.204771
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
-22.400000000000002
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:42:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao (R, I ou C): "))

if(faixa<0):
	if(tipo=="R"):
		preco="invalido"
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print(preco)
		
-- OUTPUT:
-22.400000000000002
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:43:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao (R, I ou C): "))

if(faixa<0):
	elif(tipo=="R"):
		preco="invalido"
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print(preco)
		
-- ERROR:
File "XXXX", line 8
    elif(tipo=="R"):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:43:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao (R, I ou C): "))

if(faixa<0):
	if(tipo=="R"):
		preco="invalido"
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print(preco)
		
-- OUTPUT:
-22.400000000000002
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:45:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao (R, I ou C): "))

if(faixa<0):
	if(tipo=="R"):
		
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print(preco)
		
-- ERROR:
File "XXXX", line 10
    elif(faixa<=500):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:45:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao (R, I ou C): "))

if(faixa<0):
	if(tipo=="R"):		
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print(preco)
		
-- ERROR:
File "XXXX", line 9
    elif(faixa<=500):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 23:46:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao (R, I ou C): "))

if(faixa<0):
	if(tipo=="R"):
		preco="invalido"
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print(preco)
		
-- EXECUTION TIME:
0.202136
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
-22.400000000000002
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:47:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao (R, I ou C): "))

if(faixa<0):
	if(tipo=="R"):
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print(preco)
		
-- ERROR:
File "XXXX", line 9
    elif(faixa<=500):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:47:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao (R, I ou C): "))

if(faixa<0):
	if(tipo=="R"):
	if(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print(preco)
		
-- ERROR:
File "XXXX", line 9
    if(faixa<=500):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:47:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao (R, I ou C): "))

if(faixa<0):
	if(tipo=="R"):
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print(preco)
		
-- ERROR:
File "XXXX", line 9
    elif(faixa<=500):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:47:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao (R, I ou C): "))

if(faixa<0):
	if(tipo=="R"):
elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print(preco)
		
-- ERROR:
File "XXXX", line 9
    elif(faixa<=500):
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:48:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao (R, I ou C): "))

if(faixa<0):
	if(tipo=="R"):
	elif(faixa<=500):
		preco="invalido"
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print(preco)
		
-- ERROR:
File "XXXX", line 9
    elif(faixa<=500):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:48:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao (R, I ou C): "))

if(faixa<0):
	if(tipo=="R"):
	elif(faixa<=500):
		preco=faixa*0.40
		preco="invalido"
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print(preco)
		
-- ERROR:
File "XXXX", line 9
    elif(faixa<=500):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:49:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao (R, I ou C): "))

if(faixa<0):
	if(tipo=="R"):
	preco="invalido"	
	elif(faixa<=500):
		preco=faixa*0.40
		
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print(preco)
		
-- ERROR:
File "XXXX", line 9
    preco="invalido"	
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:49:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao (R, I ou C): "))

if(faixa<0):
	if(tipo=="R"):
	preco="invalido"	
	elif(faixa<=500):
	preco=faixa*0.40	
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print(preco)
		
-- ERROR:
File "XXXX", line 9
    preco="invalido"	
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:49:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao (R, I ou C): "))

if(faixa<0):
	if(tipo=="R"):
		preco="invalido"	
	elif(faixa<=500):
		preco=faixa*0.40	
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print(preco)
		
-- OUTPUT:
-22.400000000000002
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:49:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao (R, I ou C): "))

if(faixa<0):
	if(tipo=="R"):
		preco="invalido"	
	elif(faixa<=500):
		preco=faixa*0.40	
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print(preco)
		
-- OUTPUT:
-22.400000000000002
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:50:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao (R, I ou C): "))

if(faixa<0):
	if(tipo=="R"):
		preco="invalido"	
	elif(faixa<=500):
		preco=faixa*0.40	
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print(preco)
		
-- OUTPUT:
-22.400000000000002
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:52:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao (R, I ou C): "))

if(faixa<0):
	if(tipo=="R"):
		preco="invalido"	
	elif(faixa<=500):
		preco=(faixa*0.40)
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print(preco)
		
-- OUTPUT:
-22.400000000000002
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:55:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(faixa<0):
	if(tipo=="R"):
		preco="invalido"	
	elif(faixa<=500):
		preco=(faixa*0.40)
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print(preco)
		
-- OUTPUT:
-22.400000000000002
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:57:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(faixa<0):
	if(tipo=="R"):
		preco="invalido"	
	elif(faixa<=500):
		preco=(faixa*0.40)
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print (round("Valor total: R$",preco,2)
		
-- ERROR:
File "XXXX", line 32
    
      ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:57:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(faixa<0):
	if(tipo=="R"):
		preco="invalido"	
	elif(faixa<=500):
		preco=(faixa*0.40)
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print (round("Valor total: R$"preco,2)
		
-- ERROR:
File "XXXX", line 30
    print (round("Valor total: R$"preco,2)
                                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:57:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(faixa<0):
	if(tipo=="R"):
		preco="invalido"	
	elif(faixa<=500):
		preco=(faixa*0.40)
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print ("Valor total: R$"(round(preco,2)))
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 30, in <module>
    print ("Valor total: R$"(round(preco,2)))
TypeError: 'str' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:58:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(faixa<0):
	if(tipo=="R"):
		preco="invalido"	
	elif(faixa<=500):
		preco=(faixa*0.40)
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print ("Valor total: R$",(round(preco,2)))
		
-- OUTPUT:
Valor total: R$ -22.4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 23:58:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(faixa<0):
	if(tipo=="R"):
		preco="invalido"	
	elif(faixa<=500):
		preco=(faixa*0.40)
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print ("Valor total: R$",(round(preco,2)))
		
-- EXECUTION TIME:
0.125186
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Valor total: R$ -22.4
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:59:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(faixa<0):
	if(tipo=="R"):
		preco="invalido"	
	elif(faixa<=500):
		preco=(faixa*0.40)
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print ("Valor total: R$",(round(preco,2)))
		
-- OUTPUT:
Valor total: R$ -22.4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:00:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(faixa<0):
	if(tipo=="R"):
		preco="invalido"	
	elif(faixa<=500):
		preco=(faixa*0.40)
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print ("Valor total: R$",(round(preco,2)))
		
-- OUTPUT:
Valor total: R$ -22.4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:01:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(tipo=="R"):
	if(faixa<0):
		preco="invalido"	
	elif(faixa<=500):
		preco=(faixa*0.40)
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print ("Valor total: R$",(round(preco,2)))
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 30, in <module>
    print ("Valor total: R$",(round(preco,2)))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:01:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(tipo=="R"):
	if(faixa<0):
		preco="invalido"	
	elif(faixa<=500):
		preco=(faixa*0.40)
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print ("Valor total: R$",(round(preco,2)))
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 30, in <module>
    print ("Valor total: R$",(round(preco,2)))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 00:02:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(tipo=="R"):
	if(faixa<0):
		preco="invalido"	
	elif(faixa<=500):
		preco=(faixa*0.40)
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print ("Valor total: R$",(round(preco,2)))
		
-- EXECUTION TIME:
0.189815
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1101/main.py", line 30, in <module>
    print ("Valor total: R$",(round(preco,2)))
TypeError: type str doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 00:02:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(tipo=="R"):
	if(faixa<0):
		preco="invalido"	
	elif(faixa<=500):
		preco=(faixa*0.40)
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print ("Valor total: R$",(round(preco,2)))
		
-- EXECUTION TIME:
0.186958
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1101/main.py", line 30, in <module>
    print ("Valor total: R$",(round(preco,2)))
TypeError: type str doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:02:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(tipo=="R"):
	if(faixa<0):
		preco="invalido"	
	elif(faixa<=500):
		preco=(faixa*0.40)
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print ("Valor total: R$",(round(preco,2)))
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 30, in <module>
    print ("Valor total: R$",(round(preco,2)))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:02:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(tipo=="R"):
	if(faixa<0):
		preco="invalido"	
	elif(faixa<=500):
		preco=(faixa*0.40)
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print ("Valor total: R$",(round(preco,2)))
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 30, in <module>
    print ("Valor total: R$",(round(preco,2)))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:02:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(tipo=="R"):
	if(faixa<0):
		preco="invalido"	
	elif(faixa<=500):
		preco=(faixa*0.40)
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print ("Valor total: R$",(round(preco,2)))
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 30, in <module>
    print ("Valor total: R$",(round(preco,2)))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:03:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(tipo=="R"):
	if(faixa<0):
		preco="invalido"	
	elif(faixa<=500):
		preco=(faixa*0.40)
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print ("Valor total: R$",(round(preco,2)))
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 30, in <module>
    print ("Valor total: R$",(round(preco,2)))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:03:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(tipo=="R"):
	if(faixa<0):
		preco="invalido"	
	elif(faixa<=500):
		preco=(faixa*0.40)
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print ("Valor total: R$",(round(preco,2)))
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 30, in <module>
    print ("Valor total: R$",(round(preco,2)))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:03:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(tipo=="R"):
	if(faixa<0):
		preco="invalido"	
	elif(faixa<=500):
		preco=(faixa*0.40)
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print (preco)
		
-- OUTPUT:
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 00:04:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(tipo=="R"):
	if(faixa<0):
		preco="invalido"	
	elif(faixa<=500):
		preco=(faixa*0.40)
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="invalido"
print (preco)
		
-- EXECUTION TIME:
0.14618
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
invalido
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:04:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(tipo=="R"):
	if(faixa<0):
		preco="invalido"	
	elif(faixa<=500):
		preco=(faixa*0.40)
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
		preco="invalido"
print (preco)
		
-- OUTPUT:
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 00:04:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(tipo=="R"):
	if(faixa<0):
		preco="invalido"	
	elif(faixa<=500):
		preco=(faixa*0.40)
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
		preco="invalido"
print (preco)
		
-- EXECUTION TIME:
0.197982
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
invalido
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:05:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(tipo=="R"):
	if(faixa<0):
		preco="invalido"	
	elif(faixa<=500):
		preco=(faixa*0.40)
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
		preco="invalido"
print (preco)
		
-- OUTPUT:
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:06:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(tipo=="R"):
	if(faixa<0):
		preco="invalido"	
	elif(faixa<=500):
		preco=(faixa*0.40)
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
		preco="invalido"
print (preco)
		
-- OUTPUT:
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:07:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(tipo=="R"):
	if(faixa<0):
		preco="invalido"	
	elif(faixa<=500):
		preco=(faixa*0.40)
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
		preco="invalido"
print (preco)
		
-- OUTPUT:
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:08:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(faixa<0):
	if(tipo=="R"):
		preco="invalido"	
	elif(faixa<=500):
		preco=(faixa*0.40)
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
		preco="invalido"
print (preco)
		
-- OUTPUT:
-22.400000000000002
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:09:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(faixa<0):
	if(tipo=="R"):
		preco="invalido"	
	if(faixa<=500):
		preco=(faixa*0.40)
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
		preco="invalido"
print (preco)
		
-- OUTPUT:
-22.400000000000002
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:09:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(faixa<0):
	elif(tipo=="R"):
		preco="invalido"	
	elif(faixa<=500):
		preco=(faixa*0.40)
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
		preco="invalido"
print (preco)
		
-- ERROR:
File "XXXX", line 8
    elif(tipo=="R"):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:10:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(faixa<0):
	if(tipo=="R"):
		preco="invalido"	
	elif(faixa<=500):
		preco=(faixa*0.40)
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
		preco="invalido"
print (preco)
		
-- OUTPUT:
-22.400000000000002
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:11:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(faixa<0):
	if(tipo=="R"):
		preco="invalido"	
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
		preco="invalido"
print (preco)
		
-- OUTPUT:
-22.400000000000002
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:12:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(faixa<0):
	if(tipo=="R"):
		else:
		preco="invalido"	
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
		preco="invalido"
print (preco)
		
-- ERROR:
File "XXXX", line 9
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:12:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(faixa<0):
	elif(tipo=="R"):
		preco="invalido"	
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
		preco="invalido"
print (preco)
		
-- ERROR:
File "XXXX", line 8
    elif(tipo=="R"):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:13:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(faixa<0):
elif(tipo=="R"):
		preco="invalido"	
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
		preco="invalido"
print (preco)
		
-- ERROR:
File "XXXX", line 8
    elif(tipo=="R"):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:13:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

	if(faixa<0):
elif(tipo=="R"):
		preco="invalido"	
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
		preco="invalido"
print (preco)
		
-- ERROR:
File "XXXX", line 7
    if(faixa<0):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:14:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(faixa<0):
elif(tipo=="R"):
	preco="invalido"	
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
		preco="invalido"
print (preco)
		
-- ERROR:
File "XXXX", line 8
    elif(tipo=="R"):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:14:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(faixa<0):
if(tipo=="R"):
	preco="invalido"	
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
		preco="invalido"
print (preco)
		
-- ERROR:
File "XXXX", line 8
    if(tipo=="R"):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:14:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(faixa<0):
	if(tipo=="R"):
	preco="invalido"	
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
		preco="invalido"
print (preco)
		
-- ERROR:
File "XXXX", line 9
    preco="invalido"	
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:14:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(faixa<0):
		if(tipo=="R"):
		preco="invalido"	
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
		preco="invalido"
print (preco)
		
-- ERROR:
File "XXXX", line 9
    preco="invalido"	
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:14:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(faixa<0):
		if(tipo=="R"):
		preco="invalido"	
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
		preco="invalido"
print (preco)
		
-- ERROR:
File "XXXX", line 9
    preco="invalido"	
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:14:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(faixa<0):
		if(tipo=="R"):
	preco="invalido"	
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
		preco="invalido"
print (preco)
		
-- ERROR:
File "XXXX", line 9
    preco="invalido"	
                    ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:15:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(faixa<0):
	if(tipo=="R"):
		preco="invalido"	
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
		preco="invalido"
print (preco)
		
-- OUTPUT:
-22.400000000000002
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:16:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(tipo=="R"):
	if(faixa<0):
		preco="invalido"	
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
		preco="invalido"
print (preco)
		
-- OUTPUT:
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:16:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(tipo=="R"):
	if(faixa<0):
		preco="invalido"	
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
		preco="invalido"
print (preco)
		
-- OUTPUT:
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:16:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(tipo=="R"):
	if(faixa<0):
		preco="invalido"	
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
		preco="invalido"
print (preco)
		
-- OUTPUT:
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 00:17:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(tipo=="R"):
	if(faixa<0):
		preco="invalido"	
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
		preco="invalido"
print (preco)
		
-- EXECUTION TIME:
0.169644
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
invalido
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 00:17:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(tipo=="R"):
	if(faixa<0):
		preco="invalido"	
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
		preco="Invalido"
print (preco)
		
-- EXECUTION TIME:
0.13633
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
invalido
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:18:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(tipo=="R"):
	if(faixa<0):
		preco="Invalido"	
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="Invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="Invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
		preco="Invalido"
print (preco)
		
-- OUTPUT:
Invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 00:18:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(tipo=="R"):
	if(faixa<0):
		preco="Invalido"	
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="Invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="Invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
		preco="Invalido"
print (preco)
		
-- EXECUTION TIME:
0.132606
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Invalido
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:20:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(tipo=="R"):
	if(faixa<0):
		preco="Invalido"	
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="Invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="Invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
		preco="Invalido"
print ("Entradas:",faixa "kWh e tipo",tipo)
print(preco)
		
-- ERROR:
File "XXXX", line 30
    print ("Entradas:",faixa "kWh e tipo",tipo)
                                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:20:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(tipo=="R"):
	if(faixa<0):
		preco="Invalido"	
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="Invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="Invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
		preco="Invalido"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print(preco)
		
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:21:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(tipo=="R"):
	if(faixa<0):
		preco="Invalido"	
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="Invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="Invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
		preco="Invalido"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print(preco)
		
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 00:21:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(tipo=="R"):
	if(faixa<0):
		preco="Invalido"	
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="Invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="Invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
		preco="Invalido"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print(preco)
		
-- EXECUTION TIME:
0.132439
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Invalido
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 00:21:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(tipo=="R"):
	if(faixa<0):
		preco="Invalido"	
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="Invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="Invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
		preco="Invalido"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print(preco)
		
-- EXECUTION TIME:
0.102941
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Invalido
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:21:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(tipo=="R"):
	if(faixa<0):
		preco="Invalido"	
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="Invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="Invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
		preco="Invalido"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print(preco)
		
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:21:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input("consumo: "))
tipo=(input("isntalacao R, I ou ): "))

if(tipo=="R"):
	if(faixa<0):
		preco="Invalido"	
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="Invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="Invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
		preco="Invalido"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print(preco)
		
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 00:22:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Invalido"	
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="Invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="Invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
		preco="Invalido"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print(preco)
		
-- EXECUTION TIME:
0.147398
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Invalido
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:22:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Invalido"	
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="Invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="Invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
		preco="Invalido"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print(preco)
		
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 00:22:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Invalido"	
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="Invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="Invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
		preco="Invalido"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print(preco)
		
-- EXECUTION TIME:
0.119142
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Invalido
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 00:23:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Invalido"	
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="Invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="Invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
		preco="Invalido"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print(preco)
		
-- EXECUTION TIME:
0.195457
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Invalido
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:23:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Invalido"	
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="Invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="Invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
preco="Invalido"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print(preco)
		
-- ERROR:
File "XXXX", line 29
    preco="Invalido"
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:23:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Invalido"	
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="Invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="Invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Invalido"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print(preco)
		
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 00:24:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Invalido"	
	elif(faixa<=500):
		preco=faixa*0.40
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="Invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="Invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Invalido"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print(preco)
		
-- EXECUTION TIME:
0.192702
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Invalido
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 00:25:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Invalido"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="Invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="Invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Invalido"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print(preco)
		
-- EXECUTION TIME:
0.131214
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Invalido
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 00:25:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Invalido"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="Invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="Invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Invalido"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print(preco)
		
-- EXECUTION TIME:
0.269903
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Invalido
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 00:26:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Invalido"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="Invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="Invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Invalido"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print(preco)
		
-- EXECUTION TIME:
0.129146
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Invalido
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 00:30:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Invalido"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="Invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="Invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Invalido"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print(preco)
		
-- EXECUTION TIME:
0.149183
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Invalido
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:30:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Invalido"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="Invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="Invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Invalido"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print(preco)
		
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:32:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		Valor total="Invalido"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		Valor total="Invalido"
	elif(faixa<=1000):
		Valor total=faixa*0.55
	else:
		Valor total=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		Valor total="Invalido"
	elif(faixa<=5000):
		Valor total=faixa*0.55
	else:
		Valor total=faixa*0.60
else:
	Valor total="Invalido"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print(Valor total)
		
-- ERROR:
File "XXXX", line 9
    Valor total="Invalido"	
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:33:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		Valortotal="Invalido"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		Valor total="Invalido"
	elif(faixa<=1000):
		Valor total=faixa*0.55
	else:
		Valor total=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		Valor total="Invalido"
	elif(faixa<=5000):
		Valor total=faixa*0.55
	else:
		Valor total=faixa*0.60
else:
	Valor total="Invalido"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print(Valor total)
		
-- ERROR:
File "XXXX", line 16
    Valor total="Invalido"
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:33:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Invalido"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="Invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="Invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Invalido"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print("Valor total: R$",preco,)
		
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 00:34:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Invalido"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="Invalido"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="Invalido"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Invalido"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print("Valor total: R$",preco,)
		
-- EXECUTION TIME:
0.123057
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Invalido
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:34:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print("Valor total: R$",preco,)
		
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:34:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print("Valor total: R$",preco,)
		
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 00:35:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print("Valor total: R$",preco,)
		
-- EXECUTION TIME:
0.126772
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:35:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print("Valor total: R$",preco,)
		
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 00:37:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=int(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print("Valor total: R$",preco,)
		
-- EXECUTION TIME:
0.138263
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56 kWh e tipo I
Valor total: R$ Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:37:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print("Valor total: R$",preco,)
		
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:38:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print("Valor total: R$",preco,)
		
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 00:38:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print("Valor total: R$",preco,)
		
-- EXECUTION TIME:
0.151495
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ Dados invalidos
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 00:38:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
	if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
	if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print("Valor total: R$",preco,)
		
-- EXECUTION TIME:
0.204714
-- ERROR:
  File "/home/codebench/codes/1679/1101/main.py", line 15
    if(faixa<0):
     ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 00:38:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
	if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
	if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print("Valor total: R$",preco,)
		
-- EXECUTION TIME:
0.145077
-- ERROR:
  File "/home/codebench/codes/1679/1101/main.py", line 15
    if(faixa<0):
     ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 00:38:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
	if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
	if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print("Valor total: R$",preco,)
		
-- EXECUTION TIME:
0.141771
-- ERROR:
  File "/home/codebench/codes/1679/1101/main.py", line 15
    if(faixa<0):
     ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:38:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
	if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
	if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print("Valor total: R$",preco,)
		
-- ERROR:
File "XXXX", line 15
    if(faixa<0):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:39:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print("Valor total: R$",preco,)
		
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 00:39:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print("Valor total: R$",preco,)
		
-- EXECUTION TIME:
0.275199
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ Dados invalidos
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:39:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print("Valor total: R$",preco,)
		
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:40:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
elif(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print("Valor total: R$",preco,)
		
-- ERROR:
File "XXXX", line 8
    elif(faixa<0):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:40:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	elif(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
	elif(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print("Valor total: R$",preco,)
		
-- ERROR:
File "XXXX", line 8
    elif(faixa<0):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:40:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	elif(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
	elif(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print("Valor total: R$",preco,)
		
-- ERROR:
File "XXXX", line 8
    elif(faixa<0):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:40:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
	elif(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print("Valor total: R$",preco,)
		
-- ERROR:
File "XXXX", line 14
    elif(tipo=="I"):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:40:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
	if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print("Valor total: R$",preco,)
		
-- ERROR:
File "XXXX", line 15
    if(faixa<0):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:40:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
	if(tipo=="I"):
	elif(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print("Valor total: R$",preco,)
		
-- ERROR:
File "XXXX", line 15
    elif(faixa<0):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:41:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
	if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print("Valor total: R$",preco,)
		
-- ERROR:
File "XXXX", line 15
    if(faixa<0):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:41:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
elif(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print("Valor total: R$",preco,)
		
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:41:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print("Valor total: R$",preco,)
		
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 00:41:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print("Valor total: R$",preco,)
		
-- EXECUTION TIME:
0.186413
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ Dados invalidos
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:27:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo,)
print("Valor total: R$",preco,)
		
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:28:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo)
print("Valor total: R$",preco)
		
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:28:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa "kWh e tipo",tipo)
print("Valor total: R$",preco)
		
-- ERROR:
File "XXXX", line 30
    print ("Entradas:",faixa "kWh e tipo",tipo)
                                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:28:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo)
print("Valor total: R$",preco)
		
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:10:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo)
print("Valor total: R$",preco)
		
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:11:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo)
print("Valor total: R$",preco)
		
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:12:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo)
print(round("Valor total: R$",preco,2))
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 31, in <module>
    print(round("Valor total: R$",preco,2))
TypeError: round() takes at most 2 arguments (3 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:12:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo)
print(str(round("Valor total: R$",preco,2))
		
-- ERROR:
File "XXXX", line 33
    
      ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:15:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo)
print("Valor total: R$",preco,2)
		
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:17:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo)
print("Valor total: R$"(round(preco,2))
		
-- EXECUTION TIME:
0.139887
-- ERROR:
  File "/home/codebench/codes/1679/1101/main.py", line 33
    
      ^
SyntaxError: unexpected EOF while parsing

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:17:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo)
print("Valor total: R$"(round(preco,2))
		
-- ERROR:
File "XXXX", line 33
    
      ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:17:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo)
print("Valor total: R$"(round(preco,2))
		
-- ERROR:
File "XXXX", line 33
    
      ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:18:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo)
print("Valor total: R$"(round preco,2))
		
-- ERROR:
File "XXXX", line 31
    print("Valor total: R$"(round preco,2))
                                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:19:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo)
print("Valor total: R$":preco)
		
-- EXECUTION TIME:
0.118954
-- ERROR:
  File "/home/codebench/codes/1679/1101/main.py", line 31
    print("Valor total: R$":preco)
                           ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:19:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo)
print("Valor total: R$":preco)
		
-- ERROR:
File "XXXX", line 31
    print("Valor total: R$":preco)
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:19:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo)
print("Valor total: R$",preco)
		
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:25:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo)
print("Valor total: R$:",round (preco,2))
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 31, in <module>
    print("Valor total: R$:",round (preco,2))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:25:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo)
print("Valor total: R$:",round (preco,2))
		
-- EXECUTION TIME:
0.2103
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1101/main.py", line 31, in <module>
    print("Valor total: R$:",round (preco,2))
TypeError: type str doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:26:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo)
print("Valor total: R$:",round (preco,2))
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 31, in <module>
    print("Valor total: R$:",round (preco,2))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:27:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo)
print("Valor total: R$",round (preco,2))
		
-- EXECUTION TIME:
0.218162
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1101/main.py", line 31, in <module>
    print("Valor total: R$",round (preco,2))
TypeError: type str doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:27:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo)
print("Valor total: R$ ",round(preco,2))
		
-- EXECUTION TIME:
0.126802
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1101/main.py", line 31, in <module>
    print("Valor total: R$ ",round(preco,2))
TypeError: type str doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:27:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo)
print("Valor total: R$ ",round(preco,2))
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 31, in <module>
    print("Valor total: R$ ",round(preco,2))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:28:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo)
print("Valor total: R$ {}".format(round(preco,2)))
		
-- EXECUTION TIME:
0.244608
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1101/main.py", line 31, in <module>
    print("Valor total: R$ {}".format(round(preco,2)))
TypeError: type str doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:28:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo)
print("Valor total: R$ {}".format(round(preco,2)))
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 31, in <module>
    print("Valor total: R$ {}".format(round(preco,2)))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:29:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo)
preco = round(preco,2)
print("Valor total: R$ {}".format(preco)
		
-- EXECUTION TIME:
0.136196
-- ERROR:
  File "/home/codebench/codes/1679/1101/main.py", line 34
    
      ^
SyntaxError: unexpected EOF while parsing

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:29:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo)
preco = round(preco,2)
print("Valor total: R$ {}".format(preco)
		
-- ERROR:
File "XXXX", line 34
    
      ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:29:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo)
preco = round(preco,2)
print("Valor total: R$ {}".format(preco)
		
-- ERROR:
File "XXXX", line 34
    
      ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:30:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo)
#preco = round(preco,2)
print("Valor total: R$ {}".format(preco)
		
-- ERROR:
File "XXXX", line 34
    
      ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:30:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo)
#preco = round(preco,2)
print("Valor total: R$ {.f2}".format(preco)
		
-- ERROR:
File "XXXX", line 34
    
      ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:30:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo)
#preco = round(preco,2)
print("Valor total: R$ {.f2}".format(preco))
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 32, in <module>
    print("Valor total: R$ {.f2}".format(preco))
AttributeError: 'str' object has no attribute 'f2'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:30:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo)
#preco = round(preco,2)
print("Valor total: R$ {}".format(preco))
		
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:30:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo)
#preco = round(preco,2)
print("Valor total: R$ {}".format(preco))
		
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:31:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo)
#preco = round(preco,2)
print("Valor total: R$ {}".format(preco))
		
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:31:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo)
preco = round(preco,2)
print("Valor total: R$ {}".format(preco))
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 31, in <module>
    preco = round(preco,2)
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:31:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas:",faixa, "kWh e tipo",tipo)
preco = round(preco,2)
print("Valor total: R$ {}".format(preco))
		
-- EXECUTION TIME:
0.221097
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1101/main.py", line 31, in <module>
    preco = round(preco,2)
TypeError: type str doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:33:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$ {}".format(preco))
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 31, in <module>
    preco = round(preco,2)
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:33:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$ {}".format(preco))
		
-- EXECUTION TIME:
0.231361
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1101/main.py", line 31, in <module>
    preco = round(preco,2)
TypeError: type str doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:35:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" ")).upper()
tipo=str(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$ {}".format(preco))
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    faixa=float(input()).upper()
AttributeError: 'float' object has no attribute 'upper'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:36:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$ {}".format(preco))
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 31, in <module>
    preco = round(preco,2)
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:38:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 31, in <module>
    preco = round(preco,2)
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:38:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 31, in <module>
    preco = round(preco,2)
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:39:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 31, in <module>
    preco = round(preco,2)
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:44:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 31, in <module>
    preco = round(preco,2)
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:44:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- EXECUTION TIME:
0.27608
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1101/main.py", line 31, in <module>
    preco = round(preco,2)
TypeError: type str doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:44:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 31, in <module>
    preco = round(preco,2)
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:47:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 31, in <module>
    preco = round(preco,2)
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:47:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 31, in <module>
    preco = round(preco,2)
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:49:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))

if(tipo=="R"):
	elif(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
if(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- ERROR:
File "XXXX", line 8
    elif(faixa<0):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:49:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))

if(tipo=="R"):
	if(faixa<0):
		preco="Dados invalidos"	
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 31, in <module>
    preco = round(preco,2)
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:01:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))

if(tipo=="R") and (faixa<0) :
	print("Dados invalidos"	)
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- ERROR:
File "XXXX", line 9
    elif(faixa<=500):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:25:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))

if(tipo=="R") and (faixa<0 and tipo!="R") :
	print("Dados invalidos"	)
	elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- ERROR:
File "XXXX", line 9
    elif(faixa<=500):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:26:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))

if(tipo=="R") and (faixa<0 and tipo!="R") :
	print("Dados invalidos"	)
elif(faixa<=500):
		preco=faixa*0.44
	else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- ERROR:
File "XXXX", line 11
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:26:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))

if(tipo=="R") and (faixa<0 and tipo!="R") :
	print("Dados invalidos"	)
elif(faixa<=500):
		preco=faixa*0.44
else:
		preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=1000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- ERROR:
File "XXXX", line 13
    elif(tipo=="I"):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:26:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))

if(tipo=="R") and (faixa<0 and tipo!="R") :
	print("Dados invalidos"	)
elif(faixa<=500):
	preco=faixa*0.44
else:
	preco=faixa*0.65
elif(tipo=="I"):
	if(faixa<0):
		preco="Dados invalidos"
elif(faixa<=1000):
		preco=faixa*0.55
else:
		preco=faixa*0.60
if(tipo=="C"):
	if(faixa<0):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- ERROR:
File "XXXX", line 13
    elif(tipo=="I"):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:29:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))

if(tipo=="R") and (faixa<0 and tipo!="R") :
	print("Dados invalidos"	)
elif(faixa<=500):
	preco=faixa*0.44
else:
	preco=faixa*0.65
if(tipo=="I")and(faixa<0 and tipo!="I"):
		preco="Dados invalidos"
elif(faixa<=1000):
		preco=faixa*0.55
else:
		preco=faixa*0.60
if(tipo=="C")and(faixa<0 and tipo!="C"):
		preco="Dados invalidos"
	elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- ERROR:
File "XXXX", line 21
    elif(faixa<=5000):
                     ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:29:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))

if(tipo=="R") and (faixa<0 and tipo!="R") :
	print("Dados invalidos"	)
elif(faixa<=500):
	preco=faixa*0.44
else:
	preco=faixa*0.65
if(tipo=="I")and(faixa<0 and tipo!="I"):
		preco="Dados invalidos"
elif(faixa<=1000):
		preco=faixa*0.55
else:
		preco=faixa*0.60
if(tipo=="C")and(faixa<0 and tipo!="C"):
		preco="Dados invalidos"
elif(faixa<=5000):
		preco=faixa*0.55
	else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- ERROR:
File "XXXX", line 23
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:29:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))

if(tipo=="R") and (faixa<0 and tipo!="R") :
	print("Dados invalidos"	)
elif(faixa<=500):
	preco=faixa*0.44
else:
	preco=faixa*0.65
if(tipo=="I")and(faixa<0 and tipo!="I"):
		preco="Dados invalidos"
elif(faixa<=1000):
		preco=faixa*0.55
else:
		preco=faixa*0.60
if(tipo=="C")and(faixa<0 and tipo!="C"):
		preco="Dados invalidos"
elif(faixa<=5000):
		preco=faixa*0.55
else:
		preco=faixa*0.60
else:
	preco="Dados invalidos"
print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- ERROR:
File "XXXX", line 25
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:37:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))
if(faixa<0 and tipo!="R","I","C")
print("Dados invalidos")
elif(tipo=="R")and (faixa<=500):
	preco=faixa*0.44
else:
	 preco=(faixa*0.65)
elif(tipo=="I")and(faixa<=1000):
		preco=faixa*0.55
else:
		preco=faixa*0.60
if(tipo=="C")and(faixa<=5000):
		preco=faixa*0.55
else:
		preco=faixa*0.60

print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- ERROR:
File "XXXX", line 6
    if(faixa<0 and tipo!="R","I","C")
                                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:37:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))
if(faixa<0 and tipo!="R","I","C")
print("Dados invalidos")
elif(tipo=="R")and (faixa<=500):
	preco=faixa*0.44
else:
	 preco=(faixa*0.65)
elif(tipo=="I")and(faixa<=1000):
		preco=faixa*0.55
else:
		preco=faixa*0.60
if(tipo=="C")and(faixa<=5000):
		preco=faixa*0.55
else:
		preco=faixa*0.60

print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- ERROR:
File "XXXX", line 6
    if(faixa<0 and tipo!="R","I","C")
                                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:37:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))
if(faixa<0 and tipo!="R","I","C"):
print("Dados invalidos")
elif(tipo=="R")and (faixa<=500):
	preco=faixa*0.44
else:
	 preco=(faixa*0.65)
elif(tipo=="I")and(faixa<=1000):
		preco=faixa*0.55
else:
		preco=faixa*0.60
if(tipo=="C")and(faixa<=5000):
		preco=faixa*0.55
else:
		preco=faixa*0.60

print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- ERROR:
File "XXXX", line 7
    print("Dados invalidos")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:38:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))
if(faixa<0 and tipo!="R","I","C"):
	print("Dados invalidos")
elif(tipo=="R")and (faixa<=500):
	preco=faixa*0.44
else:
	 preco=(faixa*0.65)
elif(tipo=="I")and(faixa<=1000):
		preco=faixa*0.55
else:
		preco=faixa*0.60
if(tipo=="C")and(faixa<=5000):
		preco=faixa*0.55
else:
		preco=faixa*0.60

print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- ERROR:
File "XXXX", line 12
    elif(tipo=="I")and(faixa<=1000):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:38:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))
if(faixa<0 and tipo!="R","I","C"):
	print("Dados invalidos")
elif(tipo=="R")and (faixa<=500):
	preco=faixa*0.44
else:
	 preco=(faixa*0.65)
	elif(tipo=="I")and(faixa<=1000):
		preco=faixa*0.55
else:
		preco=faixa*0.60
if(tipo=="C")and(faixa<=5000):
		preco=faixa*0.55
else:
		preco=faixa*0.60

print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- ERROR:
File "XXXX", line 12
    elif(tipo=="I")and(faixa<=1000):
                                   ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:38:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))
if(faixa<0 and tipo!="R","I","C"):
	print("Dados invalidos")
elif(tipo=="R")and (faixa<=500):
	preco=faixa*0.44
else:
	 preco=(faixa*0.65)
elif(tipo=="I")and(faixa<=1000):
	preco=faixa*0.55
else:
		preco=faixa*0.60
if(tipo=="C")and(faixa<=5000):
		preco=faixa*0.55
else:
		preco=faixa*0.60

print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- ERROR:
File "XXXX", line 12
    elif(tipo=="I")and(faixa<=1000):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:39:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))
if(faixa<0 and tipo!="R","I","C"):
	print("Dados invalidos")
elif(tipo=="R")and (faixa<=500):
	preco=faixa*0.44
else:
	 preco=(faixa*0.65)
if(tipo=="I")and(faixa<=1000):
	preco=faixa*0.55
else:
		preco=faixa*0.60
if(tipo=="C")and(faixa<=5000):
		preco=faixa*0.55
else:
		preco=faixa*0.60

print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- OUTPUT:
Dados invalidos
Entradas: -56.0 kWh e tipo I
Valor total: R$ -33.6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:39:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))
if(faixa<0 and tipo!="R","I","C"):
	print("Dados invalidos")
elif(tipo=="R")and (faixa<=500):
	preco=faixa*0.44
else:
	 preco=(faixa*0.65)
if(tipo=="I")and(faixa<=1000):
	preco=faixa*0.55
else:
		preco=faixa*0.60
if(tipo=="C")and(faixa<=5000):
		preco=faixa*0.55
else:
		preco=faixa*0.60

print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- OUTPUT:
Dados invalidos
Entradas: -56.0 kWh e tipo I
Valor total: R$ -33.6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:39:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))
if(faixa<0 and tipo!="R","I","C"):
	print("Dados invalidos")
elif(tipo=="R")and (faixa<=500):
	preco=faixa*0.44
else:
	 preco=(faixa*0.65)
if(tipo=="I")and(faixa<=1000):
	preco=faixa*0.55
else:
		preco=faixa*0.60
if(tipo=="C")and(faixa<=5000):
		preco=faixa*0.55
else:
		preco=faixa*0.60

print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- OUTPUT:
Dados invalidos
Entradas: -56.0 kWh e tipo I
Valor total: R$ -33.6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:39:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))
if(faixa<0 and tipo!="R","I","C"):
	print("Dados invalidos")
elif(tipo=="R")and (faixa<=500):
	preco=faixa*0.44
else:
	 preco=(faixa*0.65)
if(tipo=="I")and(faixa<=1000):
	preco=faixa*0.55
else:
		preco=faixa*0.60
if(tipo=="C")and(faixa<=5000):
		preco=faixa*0.55
else:
		preco=faixa*0.60

print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- OUTPUT:
Dados invalidos
Entradas: -56.0 kWh e tipo I
Valor total: R$ -33.6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:40:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))
if(faixa<0 and tipo!="R","I","C"):
	print("Dados invalidos")
elif(tipo=="R")and (faixa<=500):
	preco=faixa*0.44
else:
	 preco=(faixa*0.65)
elif(tipo=="I")and(faixa<=1000):
	preco=faixa*0.55
else:
		preco=faixa*0.60
if(tipo=="C")and(faixa<=5000):
		preco=faixa*0.55
else:
		preco=faixa*0.60

print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- ERROR:
File "XXXX", line 12
    elif(tipo=="I")and(faixa<=1000):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:40:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))
if(faixa<0 and tipo!="R","I","C"):
	print("Dados invalidos")
elif(tipo=="R")and (faixa<=500):
	preco=faixa*0.44
else:
	 preco=(faixa*0.65)
	elif(tipo=="I")and(faixa<=1000):
		preco=faixa*0.55
else:
		preco=faixa*0.60
if(tipo=="C")and(faixa<=5000):
		preco=faixa*0.55
else:
		preco=faixa*0.60

print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- ERROR:
File "XXXX", line 12
    elif(tipo=="I")and(faixa<=1000):
                                   ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:40:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))
if(faixa<0 and tipo!="R","I","C"):
	print("Dados invalidos")
elif(tipo=="R")and (faixa<=500):
	preco=faixa*0.44
else:
	 preco=(faixa*0.65)
		elif(tipo=="I")and(faixa<=1000):
				preco=faixa*0.55
else:
		preco=faixa*0.60
if(tipo=="C")and(faixa<=5000):
		preco=faixa*0.55
else:
		preco=faixa*0.60

print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- ERROR:
File "XXXX", line 12
    elif(tipo=="I")and(faixa<=1000):
                                   ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:41:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))
if(faixa<0 and tipo!="R","I","C"):
	print("Dados invalidos")
elif(tipo=="R")and (faixa<=500):
	preco=faixa*0.44
else:
	preco=(faixa*0.65)
elif(tipo=="I")and(faixa<=1000):
	preco=faixa*0.55
else:
		preco=faixa*0.60
if(tipo=="C")and(faixa<=5000):
		preco=faixa*0.55
else:
		preco=faixa*0.60

print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- ERROR:
File "XXXX", line 12
    elif(tipo=="I")and(faixa<=1000):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:41:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))
if(faixa<0 and tipo!="R","I","C"):
	print("Dados invalidos")
elif(tipo=="R")and (faixa<=500):
	preco=faixa*0.44
else:
	preco=(faixa*0.65)
if(tipo=="I")and(faixa<=1000):
	preco=faixa*0.55
else:
		preco=faixa*0.60
if(tipo=="C")and(faixa<=5000):
		preco=faixa*0.55
else:
		preco=faixa*0.60

print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- OUTPUT:
Dados invalidos
Entradas: -56.0 kWh e tipo I
Valor total: R$ -33.6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:42:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))
if(faixa<0 and tipo!="R","I","C",):
	print("Dados invalidos")
elif(tipo=="R")and (faixa<=500):
	preco=faixa*0.44
else:
	preco=(faixa*0.65)
if(tipo=="I")and(faixa<=1000):
	preco=faixa*0.55
else:
		preco=faixa*0.60
if(tipo=="C")and(faixa<=5000):
		preco=faixa*0.55
else:
		preco=faixa*0.60

print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- OUTPUT:
Dados invalidos
Entradas: -56.0 kWh e tipo I
Valor total: R$ -33.6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:43:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))
if(faixa<0 and tipo!=,"R","I","C",):
	print("Dados invalidos")
elif(tipo=="R")and (faixa<=500):
	preco=faixa*0.44
else:
	preco=(faixa*0.65)
if(tipo=="I")and(faixa<=1000):
	preco=faixa*0.55
else:
		preco=faixa*0.60
if(tipo=="C")and(faixa<=5000):
		preco=faixa*0.55
else:
		preco=faixa*0.60

print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- ERROR:
File "XXXX", line 6
    if(faixa<0 and tipo!=,"R","I","C",):
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:43:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))
if(faixa<0 and tipo!="R","I","C",):
	print("Dados invalidos")
elif(tipo=="R")and (faixa<=500):
	preco=faixa*0.44
else:
	preco=(faixa*0.65)
if(tipo=="I")and(faixa<=1000):
	preco=faixa*0.55
else:
		preco=faixa*0.60
if(tipo=="C")and(faixa<=5000):
		preco=faixa*0.55
else:
		preco=faixa*0.60

print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- OUTPUT:
Dados invalidos
Entradas: -56.0 kWh e tipo I
Valor total: R$ -33.6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:43:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))
if(faixa<0 and tipo!="R","I","C",):
	print("Dados invalidos")
if(tipo=="R")and (faixa<=500):
	preco=faixa*0.44
else:
	preco=(faixa*0.65)
if(tipo=="I")and(faixa<=1000):
	preco=faixa*0.55
else:
		preco=faixa*0.60
if(tipo=="C")and(faixa<=5000):
		preco=faixa*0.55
else:
		preco=faixa*0.60

print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- OUTPUT:
Dados invalidos
Entradas: -56.0 kWh e tipo I
Valor total: R$ -33.6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:45:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))
if(faixa<0) and (tipo!="R","I","C",):
	print("Dados invalidos")
if(tipo=="R")and (faixa<=500):
	preco=faixa*0.44
else:
	preco=(faixa*0.65)
if(tipo=="I")and(faixa<=1000):
	preco=faixa*0.55
else:
		preco=faixa*0.60
if(tipo=="C")and(faixa<=5000):
		preco=faixa*0.55
else:
		preco=faixa*0.60

print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- OUTPUT:
Dados invalidos
Entradas: -56.0 kWh e tipo I
Valor total: R$ -33.6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:46:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))
if(faixa<0) and (tipo!="R","I","C",):
	print("Dados invalidos")
elif(tipo=="R")and (faixa<=500):
	preco=faixa*0.44
else:
	preco=(faixa*0.65)
elif(tipo=="I")and(faixa<=1000):
	preco=faixa*0.55
else:
		preco=faixa*0.60
elif(tipo=="C")and(faixa<=5000):
		preco=faixa*0.55
else:
		preco=faixa*0.60

print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- ERROR:
File "XXXX", line 12
    elif(tipo=="I")and(faixa<=1000):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:56:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))
if(faixa<0) and (tipo!="R","I","C",):
	print("Dados invalidos")
	elif(tipo=="R")and (faixa<=500):
		preco=faixa*0.44
else:
preco=(faixa*0.65)
	elif(tipo=="I")and(faixa<=1000):
	 	preco=faixa*0.55
else:
		preco=faixa*0.60
elif(tipo=="C")and(faixa<=5000):
		preco=faixa*0.55
else:
		preco=faixa*0.60

print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- ERROR:
File "XXXX", line 8
    elif(tipo=="R")and (faixa<=500):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:57:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))
if(faixa<0) and (tipo!="R","I","C",):
print("Dados invalidos")
	elif(tipo=="R")and (faixa<=500):
		preco=faixa*0.44
else:
preco=(faixa*0.65)
	elif(tipo=="I")and(faixa<=1000):
	 	preco=faixa*0.55
else:
		preco=faixa*0.60
elif(tipo=="C")and(faixa<=5000):
		preco=faixa*0.55
else:
		preco=faixa*0.60

print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- ERROR:
File "XXXX", line 7
    print("Dados invalidos")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:57:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))
if(faixa<0) and (tipo!="R","I","C",):
	print("Dados invalidos")
elif(tipo=="R")and (faixa<=500):
	preco=faixa*0.44
else:
preco=(faixa*0.65)
	elif(tipo=="I")and(faixa<=1000):
	 	preco=faixa*0.55
else:
		preco=faixa*0.60
elif(tipo=="C")and(faixa<=5000):
		preco=faixa*0.55
else:
		preco=faixa*0.60

print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- ERROR:
File "XXXX", line 11
    preco=(faixa*0.65)
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:57:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))
if(faixa<0) and (tipo!="R","I","C",):
	print("Dados invalidos")
elif(tipo=="R")and (faixa<=500):
	preco=faixa*0.44
else:
	preco=(faixa*0.65)
	elif(tipo=="I")and(faixa<=1000):
	 	preco=faixa*0.55
else:
		preco=faixa*0.60
elif(tipo=="C")and(faixa<=5000):
		preco=faixa*0.55
else:
		preco=faixa*0.60

print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- ERROR:
File "XXXX", line 12
    elif(tipo=="I")and(faixa<=1000):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:57:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))
if(faixa<0) and (tipo!="R","I","C",):
	print("Dados invalidos")
elif(tipo=="R")and (faixa<=500):
	preco=faixa*0.44
else:
	preco=(faixa*0.65)
elif(tipo=="I")and(faixa<=1000):
	 	preco=faixa*0.55
else:
		preco=faixa*0.60
elif(tipo=="C")and(faixa<=5000):
		preco=faixa*0.55
else:
		preco=faixa*0.60

print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- ERROR:
File "XXXX", line 12
    elif(tipo=="I")and(faixa<=1000):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:57:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))
if(faixa<0) and (tipo!="R","I","C",):
	print("Dados invalidos")
elif(tipo=="R")and (faixa<=500):
	preco=faixa*0.44
else:
	preco=(faixa*0.65)
elif(tipo=="I")and(faixa<=1000):
	preco=faixa*0.55
else:
		preco=faixa*0.60
elif(tipo=="C")and(faixa<=5000):
		preco=faixa*0.55
else:
		preco=faixa*0.60

print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- ERROR:
File "XXXX", line 12
    elif(tipo=="I")and(faixa<=1000):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:57:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))
if(faixa<0) and (tipo!="R","I","C",):
	print("Dados invalidos")
elif(tipo=="R")and (faixa<=500):
	preco=faixa*0.44
else:
	preco=(faixa*0.65)
if(tipo=="I")and(faixa<=1000):
	preco=faixa*0.55
else:
		preco=faixa*0.60
elif(tipo=="C")and(faixa<=5000):
		preco=faixa*0.55
else:
		preco=faixa*0.60

print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- ERROR:
File "XXXX", line 16
    elif(tipo=="C")and(faixa<=5000):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:58:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))
if(faixa<0) and (tipo!="R","I","C",):
	print("Dados invalidos")
elif(tipo=="R")and (faixa<=500):
	preco=faixa*0.44
else:
	preco=(faixa*0.65)
if(tipo=="I")and(faixa<=1000):
	preco=faixa*0.55
else:
	preco=faixa*0.60
elif(tipo=="C")and(faixa<=5000):
		preco=faixa*0.55
else:
		preco=faixa*0.60

print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- ERROR:
File "XXXX", line 16
    elif(tipo=="C")and(faixa<=5000):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:58:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))
if(faixa<0) and (tipo!="R","I","C",):
	print("Dados invalidos")
elif(tipo=="R")and (faixa<=500):
	preco=faixa*0.44
else:
	preco=(faixa*0.65)
if(tipo=="I")and(faixa<=1000):
	preco=faixa*0.55
else:
	preco=faixa*0.60
elif(tipo=="C")and(faixa<=5000):
		preco=faixa*0.55
else:
preco=faixa*0.60

print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- ERROR:
File "XXXX", line 16
    elif(tipo=="C")and(faixa<=5000):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:58:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))
if(faixa<0) and (tipo!="R","I","C",):
	print("Dados invalidos")
elif(tipo=="R")and (faixa<=500):
	preco=faixa*0.44
else:
	preco=(faixa*0.65)
if(tipo=="I")and(faixa<=1000):
	preco=faixa*0.55
else:
	preco=faixa*0.60
elif(tipo=="C")and(faixa<=5000):
		preco=faixa*0.55
else:
preco=faixa*0.60

print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- ERROR:
File "XXXX", line 16
    elif(tipo=="C")and(faixa<=5000):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:58:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))
if(faixa<0) and (tipo!="R","I","C",):
	print("Dados invalidos")
elif(tipo=="R")and (faixa<=500):
	preco=faixa*0.44
else:
	preco=(faixa*0.65)
if(tipo=="I")and(faixa<=1000):
	preco=faixa*0.55
else:
	preco=faixa*0.60
elif(tipo=="C")and(faixa<=5000):
		preco=faixa*0.55
else:
preco=faixa*0.60

print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- ERROR:
File "XXXX", line 16
    elif(tipo=="C")and(faixa<=5000):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:58:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))
if(faixa<0) and (tipo!="R","I","C",):
	print("Dados invalidos")
elif(tipo=="R")and (faixa<=500):
	preco=faixa*0.44
else:
	preco=(faixa*0.65)
if(tipo=="I")and(faixa<=1000):
	preco=faixa*0.55
else:
	preco=faixa*0.60
if(tipo=="C")and(faixa<=5000):
		preco=faixa*0.55
else:
preco=faixa*0.60

print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- ERROR:
File "XXXX", line 19
    preco=faixa*0.60
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:58:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))
if(faixa<0) and (tipo!="R","I","C",):
	print("Dados invalidos")
elif(tipo=="R")and (faixa<=500):
	preco=faixa*0.44
else:
	preco=(faixa*0.65)
if(tipo=="I")and(faixa<=1000):
	preco=faixa*0.55
else:
	preco=faixa*0.60
if(tipo=="C")and(faixa<=5000):
		preco=faixa*0.55
else:
	preco=faixa*0.60

print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- OUTPUT:
Dados invalidos
Entradas: -56.0 kWh e tipo I
Valor total: R$ -33.6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:59:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))
if(faixa<0) and (tipo!="R","I","C",):
	print("Dados invalidos")
elif(tipo=="R")and (faixa<=500):
	preco=faixa*0.44
else:
	preco=(faixa*0.65)
if(tipo=="I")and(faixa<=1000):
	preco=faixa*0.55
else:
	preco=faixa*0.60
if(tipo=="C")and(faixa<=5000):
		preco=faixa*0.55
else:
	preco=faixa*0.60

print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- OUTPUT:
Dados invalidos
Entradas: -56.0 kWh e tipo I
Valor total: R$ -33.6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:59:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))
if(faixa<0) and (tipo!="R","I","C",):
	print("Dados invalidos")
elif(tipo=="R")and (faixa<=500):
	preco=faixa*0.44
else:
	preco=(faixa*0.65)
if(tipo=="I")and(faixa<=1000):
	preco=faixa*0.55
else:
	preco=faixa*0.60
if(tipo=="C")and(faixa<=5000):
		preco=faixa*0.55
else:
	preco=faixa*0.60

print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- OUTPUT:
Dados invalidos
Entradas: -56.0 kWh e tipo I
Valor total: R$ -33.6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:00:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))
if(faixa<0) and (tipo!="R","I","C",):
	print("Dados invalidos")
elif(tipo=="R")and(faixa<=500):
	preco=faixa*0.44
else:
	preco=(faixa*0.65)
if(tipo=="I")and(faixa<=1000):
	preco=faixa*0.55
else:
	preco=faixa*0.60
if(tipo=="C")and(faixa<=5000):
		preco=faixa*0.55
else:
	preco=faixa*0.60

print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- OUTPUT:
Dados invalidos
Entradas: -56.0 kWh e tipo I
Valor total: R$ -33.6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:01:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=str(input(" "))
if(faixa<0) and (tipo!="R","I","C",):
	print("Dados invalidos")
elif(tipo=="R")and(faixa<=500):
	preco=faixa*0.44
else:
	preco=(faixa*0.65)
if(tipo=="I")and(faixa<=1000):
	preco=faixa*0.55
else:
	preco=faixa*0.60
if(tipo=="C")and(faixa<=5000):
		preco=faixa*0.55
else:
	preco=faixa*0.60

print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- OUTPUT:
Dados invalidos
Entradas: -56.0 kWh e tipo I
Valor total: R$ -33.6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:02:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input(" "))
tipo=(input(" "))
if(faixa<0) and (tipo!="R","I","C",):
	print("Dados invalidos")
elif(tipo=="R")and(faixa<=500):
	preco=faixa*0.44
else:
	preco=(faixa*0.65)
if(tipo=="I")and(faixa<=1000):
	preco=faixa*0.55
else:
	preco=faixa*0.60
if(tipo=="C")and(faixa<=5000):
		preco=faixa*0.55
else:
	preco=faixa*0.60

print ("Entradas: {} kWh e tipo {}".format(faixa, tipo))
preco = round(preco,2)
print("Valor total: R$",preco)
		
-- OUTPUT:
Dados invalidos
Entradas: -56.0 kWh e tipo I
Valor total: R$ -33.6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 05:53:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
faixa=float(input('qual o consumo de energia: '))
tipo=input('tipo de instalacao R, I ou C:  ')
tipo=tipo.upper()
if(faixa <=0):
	
	print("Entradas: ", faixa, "kWh e tipo", tipo)
	print('Dados invalidos')
elif(tipo != 'R') and (tipo != 'I') and (tipo != 'C'):
	print("Entradas:", faixa, "kWh e tipo", tipo)
	print('Dados invalidos')
elif(tipo == 'R') and (faixa <= 500):
	print("Entradas: ", faixa,"kWh e tipo", tipo)
	print('Valor total: R$',round(faixa * 0.44, 2))
elif(tipo == 'R') and (faixa > 500):
	print("Entradas:", faixa, "kWh e tipo", tipo)
	print('Valor total: R$',round(faixa * 0.65, 2))
	
elif(tipo == 'C') and (faixa <= 1000):
	print("Entradas:", faixa, "kWh e tipo", tipo)
	print('Valor total: R$',round(faixa * 0.55, 2))
elif(tipo == 'C') and (faixa > 1000):
	print("Entradas:", faixa, "kWh e tipo", tipo)
	print('Valor total: R$',round(faixa * 0.60, 2))
	
#industrial <=5000
elif(tipo == 'I') and (faixa <= 5000):
	print('Entradas:', faixa, 'kWh e tipo', tipo)
	print('Valor total: R$',round(faixa * 0.55, 2))
	
elif(tipo == 'I') and (faixa > 5000):
	print("Entradas:", faixa, 'kWh e tipo', tipo)
	print('Valor total: R$',round(faixa * 0.60, 2))

		
-- EXECUTION TIME:
0.231192
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
