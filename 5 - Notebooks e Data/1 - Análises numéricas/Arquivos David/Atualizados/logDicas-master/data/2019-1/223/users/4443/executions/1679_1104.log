== TEST (2019-04-26 21:53:14) 
-- CODE:
# Leitura dos intervalos
a = float(input("Digite um valor para a: "))
b = float(input("Digite um valor para a: "))
c = float(input("Digite um valor para a: "))
d = float(input("Digite um valor para a: "))
x = meio
#Verificacao dos intervalos
if(a>b) or (c>d):
	print("Intervalo 1:", a, b)
	print("Intervalo 2:", c, d)
	print("Entradas invalidas")
elif(x >= a)and (x >= b) and (x >= c) and (x <= d)
	print("Intervalo 1:", a, b)
	print("Intervalo 2:", c, d)
	print("Ha intersecao")
else:	
	print("Intervalo 1:", a, b)
	print("Intervalo 2:", c, d)
	print("Nao ha intersecao")
	
-- ERROR:
File "XXXX", line 12
    elif(x >= a)and (x >= b) and (x >= c) and (x <= d)
                                                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:53:25) 
-- CODE:
# Leitura dos intervalos
a = float(input("Digite um valor para a: "))
b = float(input("Digite um valor para a: "))
c = float(input("Digite um valor para a: "))
d = float(input("Digite um valor para a: "))
x = meio
#Verificacao dos intervalos
if(a>b) or (c>d):
	print("Intervalo 1:", a, b)
	print("Intervalo 2:", c, d)
	print("Entradas invalidas")
elif(x >= a)and (x >= b) and (x >= c) and (x <= d):
	print("Intervalo 1:", a, b)
	print("Intervalo 2:", c, d)
	print("Ha intersecao")
else:	
	print("Intervalo 1:", a, b)
	print("Intervalo 2:", c, d)
	print("Nao ha intersecao")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    x = meio
NameError: name 'meio' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:03:34) 
-- CODE:
# Leitura dos intervalos
a = float(input("Digite um valor para a: "))
b = float(input("Digite um valor para b: "))
c = float(input("Digite um valor para c: "))
d = float(input("Digite um valor para d: "))

#Verificacao dos intervalos
if(a>b) or (c>d):
	print("Intervalo 1:", a, b)
	print("Intervalo 2:", c, d)
	print("Entradas invalidas")

elif(c >= a) and (c <= b) or (a >= c) and (a <= d):
	print("Intervalo 1:", a, b)
	print("Intervalo 2:", c, d)
	print("Ha intersecao")
else:	
	print("Intervalo 1:", a, b)
	print("Intervalo 2:", c, d)
	print("Nao ha intersecao")
	
-- OUTPUT:
Intervalo 1: 1.0 2.0
Intervalo 2: 4.0 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:03:51) 
-- CODE:
# Leitura dos intervalos
a = float(input("Digite um valor para a: "))
b = float(input("Digite um valor para b: "))
c = float(input("Digite um valor para c: "))
d = float(input("Digite um valor para d: "))

#Verificacao dos intervalos
if(a>b) or (c>d):
	print("Intervalo 1:", a, b)
	print("Intervalo 2:", c, d)
	print("Entradas invalidas")

elif(c >= a) and (c <= b) or (a >= c) and (a <= d):
	print("Intervalo 1:", a, b)
	print("Intervalo 2:", c, d)
	print("Ha intersecao")
else:	
	print("Intervalo 1:", a, b)
	print("Intervalo 2:", c, d)
	print("Nao ha intersecao")
	
-- OUTPUT:
Intervalo 1: 1.0 2.0
Intervalo 2: 4.0 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:04:04) 
-- CODE:
# Leitura dos intervalos
a = float(input("Digite um valor para a: "))
b = float(input("Digite um valor para b: "))
c = float(input("Digite um valor para c: "))
d = float(input("Digite um valor para d: "))

#Verificacao dos intervalos
if(a>b) or (c>d):
	print("Intervalo 1:", a, b)
	print("Intervalo 2:", c, d)
	print("Entradas invalidas")

elif(c >= a) and (c <= b) or (a >= c) and (a <= d):
	print("Intervalo 1:", a, b)
	print("Intervalo 2:", c, d)
	print("Ha intersecao")
else:	
	print("Intervalo 1:", a, b)
	print("Intervalo 2:", c, d)
	print("Nao ha intersecao")
	
-- OUTPUT:
Intervalo 1: 1.0 2.0
Intervalo 2: 4.0 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 22:04:37) 
-- CODE:
# Leitura dos intervalos
a = float(input("Digite um valor para a: "))
b = float(input("Digite um valor para b: "))
c = float(input("Digite um valor para c: "))
d = float(input("Digite um valor para d: "))

#Verificacao dos intervalos
if(a>b) or (c>d):
	print("Intervalo 1:", a, b)
	print("Intervalo 2:", c, d)
	print("Entradas invalidas")

elif(c >= a) and (c <= b) or (a >= c) and (a <= d):
	print("Intervalo 1:", a, b)
	print("Intervalo 2:", c, d)
	print("Ha intersecao")
else:	
	print("Intervalo 1:", a, b)
	print("Intervalo 2:", c, d)
	print("Nao ha intersecao")
	
-- EXECUTION TIME:
0.201731
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 2.0
Intervalo 2: 4.0 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 5.0
Intervalo 2: 2.5 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 -3.0
Intervalo 2: 1.0 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:06:14) 
-- CODE:
# Leitura dos intervalos
a = float(input("Digite um valor para a: "))
b = float(input("Digite um valor para b: "))
c = float(input("Digite um valor para c: "))
d = float(input("Digite um valor para d: "))

#Verificacao dos intervalos
if(a>b) or (c>d):
	print("Intervalo 1:", a,"," b)
	print("Intervalo 2:", c,"," d)
	print("Entradas invalidas")

elif(c >= a) and (c <= b) or (a >= c) and (a <= d):
	print("Intervalo 1:", a,"," b)
	print("Intervalo 2:", c,"," d)
	print("Ha intersecao")
else:	
	print("Intervalo 1:", a,"," b)
	print("Intervalo 2:", c,"," d)
	print("Nao ha intersecao")
	
-- ERROR:
File "XXXX", line 9
    print("Intervalo 1:", a,"," b)
                                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:06:43) 
-- CODE:
# Leitura dos intervalos
a = float(input("Digite um valor para a: "))
b = float(input("Digite um valor para b: "))
c = float(input("Digite um valor para c: "))
d = float(input("Digite um valor para d: "))

#Verificacao dos intervalos
if(a>b) or (c>d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Entradas invalidas")

elif(c >= a) and (c <= b) or (a >= c) and (a <= d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Ha intersecao")
else:	
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Nao ha intersecao")
	
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:08:06) 
-- CODE:
# Leitura dos intervalos
a = float(input("Digite um valor para a: "))
b = float(input("Digite um valor para b: "))
c = float(input("Digite um valor para c: "))
d = float(input("Digite um valor para d: "))

#Verificacao dos intervalos
if(a>b) or (c>d):
	print("Intervalo 1:", a, b)
	print("Intervalo 2:", c, d)
	print("Entradas invalidas")

elif(c >= a) and (c <= b) or (a >= c) and (a <= d):
	print("Intervalo 1:", a, b)
	print("Intervalo 2:", c, d)
	print("Ha intersecao")
else:	
	print("Intervalo 1:", a, b)
	print("Intervalo 2:", c, d)
	print("Nao ha intersecao")
	
-- OUTPUT:
Intervalo 1: 1.0 2.0
Intervalo 2: 4.0 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:08:53) 
-- CODE:
# Leitura dos intervalos
a = float(input("Digite um valor para a: "))
b = float(input("Digite um valor para b: "))
c = float(input("Digite um valor para c: "))
d = float(input("Digite um valor para d: "))

#Verificacao dos intervalos
if(a>b) or (c>d):
	print("Intervalo 1:", a, b)
	print("Intervalo 2:", c, d)
	print("Entradas invalidas")

elif(c >= a) and (c <= b) or (a >= c) and (a <= d):
	print("Intervalo 1:", a",", b)
	print("Intervalo 2:", c, d)
	print("Ha intersecao")
else:	
	print("Intervalo 1:", a, b)
	print("Intervalo 2:", c, d)
	print("Nao ha intersecao")
	
-- ERROR:
File "XXXX", line 14
    print("Intervalo 1:", a",", b)
                             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:09:01) 
-- CODE:
# Leitura dos intervalos
a = float(input("Digite um valor para a: "))
b = float(input("Digite um valor para b: "))
c = float(input("Digite um valor para c: "))
d = float(input("Digite um valor para d: "))

#Verificacao dos intervalos
if(a>b) or (c>d):
	print("Intervalo 1:", a, b)
	print("Intervalo 2:", c, d)
	print("Entradas invalidas")

elif(c >= a) and (c <= b) or (a >= c) and (a <= d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c, d)
	print("Ha intersecao")
else:	
	print("Intervalo 1:", a, b)
	print("Intervalo 2:", c, d)
	print("Nao ha intersecao")
	
-- OUTPUT:
Intervalo 1: 1.0 2.0
Intervalo 2: 4.0 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 22:09:53) 
-- CODE:
# Leitura dos intervalos
a = float(input("Digite um valor para a: "))
b = float(input("Digite um valor para b: "))
c = float(input("Digite um valor para c: "))
d = float(input("Digite um valor para d: "))

#Verificacao dos intervalos
if(a>b) or (c>d):
	print("Intervalo 1:", a,"," b)
	print("Intervalo 2:", c,"," d)
	print("Entradas invalidas")

elif(c >= a) and (c <= b) or (a >= c) and (a <= d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,"," d)
	print("Ha intersecao")
else:	
	print("Intervalo 1:", a,"," b)
	print("Intervalo 2:", c,"," d)
	print("Nao ha intersecao")
	
-- EXECUTION TIME:
0.136478
-- ERROR:
  File "/home/codebench/codes/1679/1104/main.py", line 9
    print("Intervalo 1:", a,"," b)
                                ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:10:09) 
-- CODE:
# Leitura dos intervalos
a = float(input("Digite um valor para a: "))
b = float(input("Digite um valor para b: "))
c = float(input("Digite um valor para c: "))
d = float(input("Digite um valor para d: "))

#Verificacao dos intervalos
if(a>b) or (c>d):
	print("Intervalo 1:", a,"," b)
	print("Intervalo 2:", c,"," d)
	print("Entradas invalidas")

elif(c >= a) and (c <= b) or (a >= c) and (a <= d):
	print("Intervalo 1:" a,",", b)
	print("Intervalo 2:", c,"," d)
	print("Ha intersecao")
else:	
	print("Intervalo 1:", a,"," b)
	print("Intervalo 2:", c,"," d)
	print("Nao ha intersecao")
	
-- ERROR:
File "XXXX", line 9
    print("Intervalo 1:", a,"," b)
                                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:10:23) 
-- CODE:
# Leitura dos intervalos
a = float(input("Digite um valor para a: "))
b = float(input("Digite um valor para b: "))
c = float(input("Digite um valor para c: "))
d = float(input("Digite um valor para d: "))

#Verificacao dos intervalos
if(a>b) or (c>d):
	print("Intervalo 1:", a,"," b)
	print("Intervalo 2:", c,"," d)
	print("Entradas invalidas")

elif(c >= a) and (c <= b) or (a >= c) and (a <= d):
	print("Intervalo 1:", a",", b)
	print("Intervalo 2:", c,"," d)
	print("Ha intersecao")
else:	
	print("Intervalo 1:", a,"," b)
	print("Intervalo 2:", c,"," d)
	print("Nao ha intersecao")
	
-- ERROR:
File "XXXX", line 9
    print("Intervalo 1:", a,"," b)
                                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:10:35) 
-- CODE:
# Leitura dos intervalos
a = float(input("Digite um valor para a: "))
b = float(input("Digite um valor para b: "))
c = float(input("Digite um valor para c: "))
d = float(input("Digite um valor para d: "))

#Verificacao dos intervalos
if(a>b) or (c>d):
	print("Intervalo 1:", a,"," b)
	print("Intervalo 2:", c,"," d)
	print("Entradas invalidas")

elif(c >= a) and (c <= b) or (a >= c) and (a <= d):
	print("Intervalo 1:", a, ",", b)
	print("Intervalo 2:", c,"," d)
	print("Ha intersecao")
else:	
	print("Intervalo 1:", a,"," b)
	print("Intervalo 2:", c,"," d)
	print("Nao ha intersecao")
	
-- ERROR:
File "XXXX", line 9
    print("Intervalo 1:", a,"," b)
                                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:11:47) 
-- CODE:
# Leitura dos intervalos
a = float(input("Digite um valor para a: "))
b = float(input("Digite um valor para b: "))
c = float(input("Digite um valor para c: "))
d = float(input("Digite um valor para d: "))

#Verificacao dos intervalos
if(a>b) or (c>d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Entradas invalidas")

elif(c >= a) and (c <= b) or (a >= c) and (a <= d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Ha intersecao")
else:	
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Nao ha intersecao")
	
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:15:02) 
-- CODE:
# Leitura dos intervalos
a = float(input("Digite um valor para a: "))
b = float(input("Digite um valor para b: "))
c = float(input("Digite um valor para c: "))
d = float(input("Digite um valor para d: "))

#Verificacao dos intervalos
if(c >= a) and (c <= b) or (a >= c) and (a <= d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Ha intersecao")
elif(c>a) or (a>d)
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Nao ha intersecao")

else:
	if(a>b) or (c>d):
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", c,",", d)
		print("Entradas invalidas")


else:	
	
-- ERROR:
File "XXXX", line 12
    elif(c>a) or (a>d)
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:15:11) 
-- CODE:
# Leitura dos intervalos
a = float(input("Digite um valor para a: "))
b = float(input("Digite um valor para b: "))
c = float(input("Digite um valor para c: "))
d = float(input("Digite um valor para d: "))

#Verificacao dos intervalos
if(c >= a) and (c <= b) or (a >= c) and (a <= d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Ha intersecao")
elif(c>a) or (a>d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Nao ha intersecao")

else:
	if(a>b) or (c>d):
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", c,",", d)
		print("Entradas invalidas")


else:	
	
-- ERROR:
File "XXXX", line 24
    else:	
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:16:27) 
-- CODE:
# Leitura dos intervalos
a = float(input("Digite um valor para a: "))
b = float(input("Digite um valor para b: "))
c = float(input("Digite um valor para c: "))
d = float(input("Digite um valor para d: "))

#Verificacao dos intervalos
if(c >= a) and (c <= b) or (a >= c) and (a <= d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Ha intersecao")
elif(c>a) or (a>d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Nao ha intersecao")

else:
	if(a>b) or (c>d):
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", c,",", d)
		print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:16:49) 
-- CODE:
# Leitura dos intervalos
a = float(input("Digite um valor para a: "))
b = float(input("Digite um valor para b: "))
c = float(input("Digite um valor para c: "))
d = float(input("Digite um valor para d: "))

#Verificacao dos intervalos
if(c >= a) and (c <= b) or (a >= c) and (a <= d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Ha intersecao")
elif(c>a) or (a>d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Nao ha intersecao")

else:
	if(a>b) or (c>d):
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", c,",", d)
		print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:17:00) 
-- CODE:
# Leitura dos intervalos
a = float(input("Digite um valor para a: "))
b = float(input("Digite um valor para b: "))
c = float(input("Digite um valor para c: "))
d = float(input("Digite um valor para d: "))

#Verificacao dos intervalos
if(c >= a) and (c <= b) or (a >= c) and (a <= d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Ha intersecao")
elif(c>a) or (a>d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Nao ha intersecao")

else:
	if(a>b) or (c>d):
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", c,",", d)
		print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 06:34:36) 
-- CODE:
# Leitura dos intervalos
a = float(input("Digite um valor para a: "))
b = float(input("Digite um valor para b: "))
c = float(input("Digite um valor para c: "))
d = float(input("Digite um valor para d: "))

#Verificacao dos intervalos
if(a>b) or (c>d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Entradas invalidas")

elif(c >= a) and (c <= b) or (a >= c) and (a <= d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Ha intersecao")

elif(c>a) or (a>d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Nao ha intersecao")

	
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 06:35:09) 
-- CODE:
# Leitura dos intervalos
a = float(input("Digite um valor para a: "))
b = float(input("Digite um valor para b: "))
c = float(input("Digite um valor para c: "))
d = float(input("Digite um valor para d: "))

#Verificacao dos intervalos
if(a>b) or (c>d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Entradas invalidas")

elif(c >= a) and (c <= b) or (a >= c) and (a <= d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Ha intersecao")

elif(c>a) or (a>d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Nao ha intersecao")

	
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 06:35:28) 
-- CODE:
# Leitura dos intervalos
a = float(input("Digite um valor para a: "))
b = float(input("Digite um valor para b: "))
c = float(input("Digite um valor para c: "))
d = float(input("Digite um valor para d: "))

#Verificacao dos intervalos
if(a>b) or (c>d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Entradas invalidas")

elif(c >= a) and (c <= b) or (a >= c) and (a <= d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Ha intersecao")

elif(c>a) or (a>d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Nao ha intersecao")

	
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 06:45:11) 
-- CODE:
# Leitura dos intervalos
a = float(input("Digite um valor para a: "))
b = float(input("Digite um valor para b: "))
c = float(input("Digite um valor para c: "))
d = float(input("Digite um valor para d: "))

#Verificacao dos intervalos
if(a>b) or (c>d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Entradas invalidas")

elif(c >= a) and (c <= b) or (a >= c) and (a <= d) or (d <=c ) or (b<=d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Ha intersecao")

elif(c>a) or (a>d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Nao ha intersecao")

	
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 06:45:45) 
-- CODE:
# Leitura dos intervalos
a = float(input("Digite um valor para a: "))
b = float(input("Digite um valor para b: "))
c = float(input("Digite um valor para c: "))
d = float(input("Digite um valor para d: "))

#Verificacao dos intervalos
if(a>b) or (c>d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Entradas invalidas")

elif(c >= a) and (c <= b) or (a >= c) and (a <= d) or (d <=c ) or (b<=d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Ha intersecao")

elif(c>a) or (a>d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Nao ha intersecao")

	
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 07:20:36) 
-- CODE:
# Leitura dos intervalos
a = float(input("Digite um valor para a: "))
b = float(input("Digite um valor para b: "))
c = float(input("Digite um valor para c: "))
d = float(input("Digite um valor para d: "))

#Verificacao dos intervalos
if(a>b) or (c>d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Entradas invalidas")

elif(c >= a) and (c <= b): 
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Ha intersecao")

elif(a >= c) and (a <= d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Ha intersecao")

elif(d >= a) and (d <= c):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Ha intersecao")

elif(b <= d) and (b >= c):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Ha intersecao")

else(c>a) or (a>d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Nao ha intersecao")


-- ERROR:
File "XXXX", line 33
    else(c>a) or (a>d):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 07:21:21) 
-- CODE:
# Leitura dos intervalos
a = float(input("Digite um valor para a: "))
b = float(input("Digite um valor para b: "))
c = float(input("Digite um valor para c: "))
d = float(input("Digite um valor para d: "))

#Verificacao dos intervalos
if(a>b) or (c>d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Entradas invalidas")

elif(c >= a) and (c <= b): 
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Ha intersecao")

elif(a >= c) and (a <= d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Ha intersecao")

elif(d >= a) and (d <= c):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Ha intersecao")

elif(b <= d) and (b >= c):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Ha intersecao")

elif(c>a) or (a>d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Nao ha intersecao")


-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 07:21:34) 
-- CODE:
# Leitura dos intervalos
a = float(input("Digite um valor para a: "))
b = float(input("Digite um valor para b: "))
c = float(input("Digite um valor para c: "))
d = float(input("Digite um valor para d: "))

#Verificacao dos intervalos
if(a>b) or (c>d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Entradas invalidas")

elif(c >= a) and (c <= b): 
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Ha intersecao")

elif(a >= c) and (a <= d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Ha intersecao")

elif(d >= a) and (d <= c):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Ha intersecao")

elif(b <= d) and (b >= c):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Ha intersecao")

elif(c>a) or (a>d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Nao ha intersecao")


-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 07:22:01) 
-- CODE:
# Leitura dos intervalos
a = float(input("Digite um valor para a: "))
b = float(input("Digite um valor para b: "))
c = float(input("Digite um valor para c: "))
d = float(input("Digite um valor para d: "))

#Verificacao dos intervalos
if(a>b) or (c>d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Entradas invalidas")

elif(c >= a) and (c <= b): 
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Ha intersecao")

elif(a >= c) and (a <= d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Ha intersecao")

elif(d >= a) and (d <= c):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Ha intersecao")

elif(b <= d) and (b >= c):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Ha intersecao")

elif(c>a) or (a>d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Nao ha intersecao")


-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 07:22:11) 
-- CODE:
# Leitura dos intervalos
a = float(input("Digite um valor para a: "))
b = float(input("Digite um valor para b: "))
c = float(input("Digite um valor para c: "))
d = float(input("Digite um valor para d: "))

#Verificacao dos intervalos
if(a>b) or (c>d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Entradas invalidas")

elif(c >= a) and (c <= b): 
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Ha intersecao")

elif(a >= c) and (a <= d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Ha intersecao")

elif(d >= a) and (d <= c):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Ha intersecao")

elif(b <= d) and (b >= c):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Ha intersecao")

elif(c>a) or (a>d):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Nao ha intersecao")


-- EXECUTION TIME:
0.187735
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
