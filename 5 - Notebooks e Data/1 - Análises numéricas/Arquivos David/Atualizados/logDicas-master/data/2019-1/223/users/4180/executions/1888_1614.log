== TEST (2019-07-09 16:04:15) 
-- CODE:
from numpy import*

Vetor = array(eval(input("Nome do alimento: ")))
vetor2 = array(eval(input("Qauntidade:")))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 16:04:37) 
-- CODE:
from numpy import*

Vetor = array(eval(input("Nome do alimento: "))).upper()
vetor2 = array(eval(input("Qauntidade:")))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 16:05:06) 
-- CODE:
from numpy import*

Vetor = array(eval(input("Nome do alimento: "))).upper()
vetor2 = array(eval(input("Qauntidade:")))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 16:05:13) 
-- CODE:
from numpy import*

Vetor = array(str(input("Nome do alimento: "))).upper()
vetor2 = array(eval(input("Qauntidade:")))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 16:05:59) 
-- CODE:
from numpy import*

Vetor = array(str(input("Nome do alimento: ")))
vetor2 = array(eval(input("Qauntidade:")))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 16:31:08) 
-- CODE:
from numpy import*

Vetor = array(str(input("Nome do alimento: ")))
vetor2 = array(eval(input("Qauntidade:")))
result = zeros(4, dtype=float)

for ch in range(size(Vetor)):
	

-- ERROR:
File "XXXX", line 9
    
     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 16:33:31) 
-- CODE:
from numpy import*

vet = array(str(input("Nome do alimento: ")))
vet2 = array(eval(input("Qauntidade:")))
result = zeros(4, dtype=float)

for ch in range(size(Vetor)):
	if (vet[i] == "BANANA"):
		
	

-- ERROR:
File "XXXX", line 11
    
     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 16:36:26) 
-- CODE:
from numpy import*

vet = array(str(input("Nome do alimento: ")))
vet2 = array(eval(input("Qauntidade:")))
vet3 = array[0.97,2.95,1.27,1.04,0.2]
result = zeros(4, dtype=float)

for ch in range(size(Vetor)):
	if (vet[i] == "BANANA"):
		vet[] = 0,97
	elif (vet[i] == "BIFE"):
		vet[i] 
		
		
	

-- ERROR:
File "XXXX", line 10
    vet[] = 0,97
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 16:36:34) 
-- CODE:
from numpy import*

vet = array(str(input("Nome do alimento: ")))
vet2 = array(eval(input("Qauntidade:")))
vet3 = array([0.97,2.95,1.27,1.04,0.2])
result = zeros(4, dtype=float)

for ch in range(size(Vetor)):
	if (vet[i] == "BANANA"):
		vet[] = 0,97
	elif (vet[i] == "BIFE"):
		vet[i] 
		
		
	

-- ERROR:
File "XXXX", line 10
    vet[] = 0,97
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 16:38:10) 
-- CODE:
from numpy import*

vet = array(str(input("Nome do alimento: ")))

vet2 = array(eval(input("Qauntidade:")))

vet3 = array([0.97,2.95,1.27,1.04,0.2])

result = zeros(4, dtype=float)

for ch in range(size(Vetor)):
	if (vet[i] == "BANANA"):
		vet[i] = 0,97
	elif (vet[i] == "BIFE"):
		vet[i]  
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 16:39:30) 
-- CODE:
from numpy import*

vet = array(str(input("Nome do alimento: ")))

vet2 = array(eval(input("Qauntidade:")))

vet3 = array([0.97,2.95,1.27,1.04,0.2])

result = zeros(4, dtype=float)

for ch in range(size(Vetor)):
	if (vet[i] == 0,97):
		vet[i] = vet[i]*vet2[i]
		 
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 16:40:07) 
-- CODE:
from numpy import*

vet = array(str(input("Nome do alimento: ")))

vet2 = array(eval(input("Qauntidade:")))

vet3 = array([0.97,2.95,1.27,1.04,0.2])

result = zeros(4, dtype=float)

for ch in range(size(Vetor)):
	if (vet[i] == 0,97):
		if(vet[i] == "BANANA"):
			vet[i] = vet[i]*vet2[i]
		 
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 16:40:40) 
-- CODE:
from numpy import*

vet = array(str(input("Nome do alimento: ")))

vet2 = array(eval(input("Qauntidade:")))

vet3 = array([0.97,2.95,1.27,1.04,0.2])

result = zeros(4, dtype=float)

for I in range(size(Vetor)):
	if (vet[i] == 0,97):
		if(vet[i] == "BANANA"):
			vet[i] = vet[i]*vet2[i]
		 
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 16:41:06) 
-- CODE:
from numpy import*

vet = array(str(input("Nome do alimento: ")))

vet2 = array(eval(input("Qauntidade:")))

vet3 = array([0.97,2.95,1.27,1.04,0.2])

result = zeros(4, dtype=float)

for i in range(size(Vetor)):
	if (vet[i] == 0,97):
		if(vet[i] == "BANANA"):
			vet[i] = vet[i]*vet2[i]
		 
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 16:41:14) 
-- CODE:
from numpy import*

vet = array(str(input("Nome do alimento: ")))

vet2 = array(eval(input("Qauntidade:")))

vet3 = array([0.97,2.95,1.27,1.04,0.2])

result = zeros(4, dtype=float)

for i in range(size(Vetor)):
	if (vet[i] == 0,97):
		if(vet[i] == "BANANA"):
			vet[i] = vet[i]*vet2[i]
		 
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 16:41:42) 
-- CODE:
from numpy import*

vet = array(str(input("Nome do alimento: ")))

vet2 = array(eval(input("Qauntidade:")))

vet3 = array([0.97,2.95,1.27,1.04,0.2])

result = zeros(4, dtype=float)

for i in range(size(vet)):
	if (vet[i] == 0,97):
		if(vet[i] == "BANANA"):
			vet[i] = vet[i]*vet2[i]
		 
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 16:42:09) 
-- CODE:
from numpy import*

vet = array(str(input("Nome do alimento: ")))

vet2 = array(eval(input("Qauntidade:")))

vet3 = array[0.97,2.95,1.27,1.04,0.2]

result = zeros(4, dtype=float)

for i in range(size(vet)):
	if (vet[i] == 0,97):
		if(vet[i] == "BANANA"):
			vet[i] = vet[i]*vet2[i]
		 
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 16:42:58) 
-- CODE:
from numpy import*

vet = array(str(input("Nome do alimento: ")))

vet2 = array(eval(input("Qauntidade:")))

vet3 = array([0.97,2.95,1.27,1.04,0.2])

result = zeros(4, dtype=float)

for i in range(size(vet)):
	if (vet[i] == 0,97):
		if(vet[i] == "BANANA"):
			vet[i] = vet[i]*vet[i]
		 
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 16:52:58) 
-- CODE:
from numpy import*

vet = array(str(input("Nome do alimento: ")))

vet2 = array(eval(input("Qauntidade:")))


result = zeros(size(vet2))

for i in range(size(vet)):
	if(result[i] == "BANANA"):
		result[i] = round((0.97 * vet2[i]),2)
	elif(result[i] == "BIFE"):
		result[i] = round((2.95 * vet2[i]),2)
	elif(result[i] = "FEIJOADA"):
		result[i] = round((1.27 * vet2[i]),2)
	elif(result[i] == "OMELETE"):
		result[i] = round((1.04 * vet2[i]),2)
	elif(result[i] == "TOMATE"):
		result[i] = round((0.2 * vet2[i]),2)
		
print(result)
			
		 
		
		
	

-- ERROR:
File "XXXX", line 15
    elif(result[i] = "FEIJOADA"):
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 16:53:02) 
-- CODE:
from numpy import*

vet = array(str(input("Nome do alimento: ")))

vet2 = array(eval(input("Qauntidade:")))


result = zeros(size(vet2))

for i in range(size(vet)):
	if(result[i] == "BANANA"):
		result[i] = round((0.97 * vet2[i]),2)
	elif(result[i] == "BIFE"):
		result[i] = round((2.95 * vet2[i]),2)
	elif(result[i] = "FEIJOADA"):
		result[i] = round((1.27 * vet2[i]),2)
	elif(result[i] == "OMELETE"):
		result[i] = round((1.04 * vet2[i]),2)
	elif(result[i] == "TOMATE"):
		result[i] = round((0.2 * vet2[i]),2)
		
print(result)
			
		 
		
		
	

-- ERROR:
File "XXXX", line 15
    elif(result[i] = "FEIJOADA"):
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 16:53:13) 
-- CODE:
from numpy import*

vet = array(str(input("Nome do alimento: ")))

vet2 = array(eval(input("Qauntidade:")))


result = zeros(size(vet2))

for i in range(size(vet)):
	if(result[i] == "BANANA"):
		result[i] = round((0.97 * vet2[i]),2)
	elif(result[i] == "BIFE"):
		result[i] = round((2.95 * vet2[i]),2)
	elif(result[i] = "FEIJOADA"):
		result[i] = round((1.27 * vet2[i]),2)
	elif(result[i] == "OMELETE"):
		result[i] = round((1.04 * vet2[i]),2)
	elif(result[i] == "TOMATE"):
		result[i] = round((0.2 * vet2[i]),2)
		
print(result)
			
		 
		
		
	

-- ERROR:
File "XXXX", line 15
    elif(result[i] = "FEIJOADA"):
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 16:53:21) 
-- CODE:
from numpy import*

vet = array(str(input("Nome do alimento: ")))

vet2 = array(eval(input("Qauntidade:")))


result = zeros(size(vet2))

for i in range(size(vet)):
	if(result[i] == "BANANA"):
		result[i] = round((0.97 * vet2[i]),2)
	elif(result[i] == "BIFE"):
		result[i] = round((2.95 * vet2[i]),2)
	elif(result[i] == "FEIJOADA"):
		result[i] = round((1.27 * vet2[i]),2)
	elif(result[i] == "OMELETE"):
		result[i] = round((1.04 * vet2[i]),2)
	elif(result[i] == "TOMATE"):
		result[i] = round((0.2 * vet2[i]),2)
		
print(result)
			
		 
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-09 16:53:28) 
-- CODE:
from numpy import*

vet = array(str(input("Nome do alimento: ")))

vet2 = array(eval(input("Qauntidade:")))


result = zeros(size(vet2))

for i in range(size(vet)):
	if(result[i] == "BANANA"):
		result[i] = round((0.97 * vet2[i]),2)
	elif(result[i] == "BIFE"):
		result[i] = round((2.95 * vet2[i]),2)
	elif(result[i] == "FEIJOADA"):
		result[i] = round((1.27 * vet2[i]),2)
	elif(result[i] == "OMELETE"):
		result[i] = round((1.04 * vet2[i]),2)
	elif(result[i] == "TOMATE"):
		result[i] = round((0.2 * vet2[i]),2)
		
print(result)
			
		 
		
		
	

-- EXECUTION TIME:
0.812437
-- TEST CASE 1:
---- input:
["BANANA","FEIJOADA","TOMATE"]
[300,50,60]
---- correct output:
366.5
---- user output:
[0. 0. 0.]
-- TEST CASE 2:
---- input:
["BANANA","FEIJOADA","OMELETE"]
[150,100,60]
---- correct output:
334.9
---- user output:
[0. 0. 0.]
-- TEST CASE 3:
---- input:
["OMELETE","FEIJOADA","BIFE"]
[100,130,140]
---- correct output:
682.1
---- user output:
[0. 0. 0.]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 16:53:37) 
-- CODE:
from numpy import*

vet = array(str(input("Nome do alimento: ")))

vet2 = array(eval(input("Qauntidade:")))


result = zeros(size(vet2))

for i in range(size(vet)):
	if(result[i] == "BANANA"):
		result[i] = round((0.97 * vet2[i]),2)
	elif(result[i] == "BIFE"):
		result[i] = round((2.95 * vet2[i]),2)
	elif(result[i] == "FEIJOADA"):
		result[i] = round((1.27 * vet2[i]),2)
	elif(result[i] == "OMELETE"):
		result[i] = round((1.04 * vet2[i]),2)
	elif(result[i] == "TOMATE"):
		result[i] = round((0.2 * vet2[i]),2)
		
print(result)
			
		 
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 16:54:26) 
-- CODE:
from numpy import*

vet = array(str(input("Nome do alimento: ")))

vet2 = array(eval(input("Qauntidade:")))


result = zeros(size(vet2))

for i in range(size(vet)):
	if(result[i] == "BANANA"):
		result[i] = round((0.97 * vet2[i]),2)
	elif(result[i] == "BIFE"):
		result[i] = round((2.95 * vet2[i]),2)
	elif(result[i] == "FEIJOADA"):
		result[i] = round((1.27 * vet2[i]),2)
	elif(result[i] == "OMELETE"):
		result[i] = round((1.04 * vet2[i]),2)
	elif(result[i] == "TOMATE"):
		result[i] = round((0.2 * vet2[i]),2)
		
	print(result)
			
		 
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 16:54:59) 
-- CODE:
from numpy import*

vet = array(str(input("Nome do alimento: ")))

vet2 = array(eval(input("Qauntidade:")))


result = zeros(size(vet2))

for i in range(size(vet)):
	if(result[i] == "BANANA"):
		result[i] = round((0.97 * vet2[i]),2)
	elif(result[i] == "BIFE"):
		result[i] = round((2.95 * vet2[i]),2)
	elif(result[i] == "FEIJOADA"):
		result[i] = round((1.27 * vet2[i]),2)
	elif(result[i] == "OMELETE"):
		result[i] = round((1.04 * vet2[i]),2)
	elif(result[i] == "TOMATE"):
		result[i] = round((0.2 * vet2[i]),2)
		
	print(result)
			
		 
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-09 16:55:02) 
-- CODE:
from numpy import*

vet = array(str(input("Nome do alimento: ")))

vet2 = array(eval(input("Qauntidade:")))


result = zeros(size(vet2))

for i in range(size(vet)):
	if(result[i] == "BANANA"):
		result[i] = round((0.97 * vet2[i]),2)
	elif(result[i] == "BIFE"):
		result[i] = round((2.95 * vet2[i]),2)
	elif(result[i] == "FEIJOADA"):
		result[i] = round((1.27 * vet2[i]),2)
	elif(result[i] == "OMELETE"):
		result[i] = round((1.04 * vet2[i]),2)
	elif(result[i] == "TOMATE"):
		result[i] = round((0.2 * vet2[i]),2)
		
	print(result)
			
		 
		
		
	

-- EXECUTION TIME:
1.16971
-- TEST CASE 1:
---- input:
["BANANA","FEIJOADA","TOMATE"]
[300,50,60]
---- correct output:
366.5
---- user output:
[0. 0. 0.]
-- TEST CASE 2:
---- input:
["BANANA","FEIJOADA","OMELETE"]
[150,100,60]
---- correct output:
334.9
---- user output:
[0. 0. 0.]
-- TEST CASE 3:
---- input:
["OMELETE","FEIJOADA","BIFE"]
[100,130,140]
---- correct output:
682.1
---- user output:
[0. 0. 0.]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 16:55:03) 
-- CODE:
from numpy import*

vet = array(str(input("Nome do alimento: ")))

vet2 = array(eval(input("Qauntidade:")))


result = zeros(size(vet2))

for i in range(size(vet)):
	if(result[i] == "BANANA"):
		result[i] = round((0.97 * vet2[i]),2)
	elif(result[i] == "BIFE"):
		result[i] = round((2.95 * vet2[i]),2)
	elif(result[i] == "FEIJOADA"):
		result[i] = round((1.27 * vet2[i]),2)
	elif(result[i] == "OMELETE"):
		result[i] = round((1.04 * vet2[i]),2)
	elif(result[i] == "TOMATE"):
		result[i] = round((0.2 * vet2[i]),2)
		
	print(result)
			
		 
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-09 16:55:07) 
-- CODE:
from numpy import*

vet = array(str(input("Nome do alimento: ")))

vet2 = array(eval(input("Qauntidade:")))


result = zeros(size(vet2))

for i in range(size(vet)):
	if(result[i] == "BANANA"):
		result[i] = round((0.97 * vet2[i]),2)
	elif(result[i] == "BIFE"):
		result[i] = round((2.95 * vet2[i]),2)
	elif(result[i] == "FEIJOADA"):
		result[i] = round((1.27 * vet2[i]),2)
	elif(result[i] == "OMELETE"):
		result[i] = round((1.04 * vet2[i]),2)
	elif(result[i] == "TOMATE"):
		result[i] = round((0.2 * vet2[i]),2)
		
	print(result)
			
		 
		
		
	

-- EXECUTION TIME:
1.34683
-- TEST CASE 1:
---- input:
["BANANA","FEIJOADA","TOMATE"]
[300,50,60]
---- correct output:
366.5
---- user output:
Nome do alimento: Qauntidade:[0. 0. 0.]
-- TEST CASE 2:
---- input:
["BANANA","FEIJOADA","OMELETE"]
[150,100,60]
---- correct output:
334.9
---- user output:
Nome do alimento: Qauntidade:[0. 0. 0.]
-- TEST CASE 3:
---- input:
["OMELETE","FEIJOADA","BIFE"]
[100,130,140]
---- correct output:
682.1
---- user output:
Nome do alimento: Qauntidade:[0. 0. 0.]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-09 16:55:07) 
-- CODE:
from numpy import*

vet = array(str(input("Nome do alimento: ")))

vet2 = array(eval(input("Qauntidade:")))


result = zeros(size(vet2))

for i in range(size(vet)):
	if(result[i] == "BANANA"):
		result[i] = round((0.97 * vet2[i]),2)
	elif(result[i] == "BIFE"):
		result[i] = round((2.95 * vet2[i]),2)
	elif(result[i] == "FEIJOADA"):
		result[i] = round((1.27 * vet2[i]),2)
	elif(result[i] == "OMELETE"):
		result[i] = round((1.04 * vet2[i]),2)
	elif(result[i] == "TOMATE"):
		result[i] = round((0.2 * vet2[i]),2)
		
	print(result)
			
		 
		
		
	

-- EXECUTION TIME:
2.04825
-- TEST CASE 1:
---- input:
["BANANA","FEIJOADA","TOMATE"]
[300,50,60]
---- correct output:
366.5
---- user output:
Nome do alimento: Qauntidade:[0. 0. 0.]
-- TEST CASE 2:
---- input:
["BANANA","FEIJOADA","OMELETE"]
[150,100,60]
---- correct output:
334.9
---- user output:
Nome do alimento: Qauntidade:[0. 0. 0.]
-- TEST CASE 3:
---- input:
["OMELETE","FEIJOADA","BIFE"]
[100,130,140]
---- correct output:
682.1
---- user output:
Nome do alimento: Qauntidade:[0. 0. 0.]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
