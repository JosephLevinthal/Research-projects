== TEST (2019-04-16 13:54:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x:"))
y = float(input("valor de y:"))
if (2*x+y+==3):
	mesangem = "ponto pertence a reta"
else :
	mensagem = "ponto nao pertence a reta"
	print(mensagem)
-- ERROR:
File "XXXX", line 6
    if (2*x+y+==3):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 13:55:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x:"))
y = float(input("valor de y:"))
if (2*x+y==3):
	mesangem = "ponto pertence a reta"
else :
	mensagem = "ponto nao pertence a reta"
	print(mensagem)
-- ERROR:
File "XXXX", line 6
    if (2*x+y+==3):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 13:55:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x:"))
y = float(input("valor de y:"))
if (2*x+y==3):
	mesangem = "ponto pertence a reta"
else :
	mensagem = "ponto nao pertence a reta"
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(mensagem)
NameError: name 'mensagem' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 13:55:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x:"))
y = float(input("valor de y:"))
if (2*x+y==3):
	mesangem = "ponto pertence a reta"
else :
	mensagem = "ponto nao pertence a reta"
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(mensagem)
NameError: name 'mensagem' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 13:56:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x:"))
y = float(input("valor de y:"))
if (2*x+y==3):
	mesangem = "ponto pertence a reta"
else :
	mensagem = "ponto nao pertence a reta"
print(mensagem)
-- EXECUTION TIME:
0.159707
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/1054/main.py", line 10, in <module>
    print(mensagem)
NameError: name 'mensagem' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 13:56:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x:"))
y = float(input("valor de y:"))
if (2*x+y==3):
	mesangem = "ponto pertence a reta"
else :
	mensagem = "ponto nao pertence a reta"
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(mensagem)
NameError: name 'mensagem' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 13:56:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x:"))
y = float(input("valor de y:"))
if (2*x+y==3):
	mensagem = "ponto pertence a reta"
else :
	mensagem = "ponto nao pertence a reta"
print(mensagem)
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 13:56:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x:"))
y = float(input("valor de y:"))
if (2*x+y==3):
	mensagem = "ponto pertence a reta"
else :
	mensagem = "ponto nao pertence a reta"
print(mensagem)
-- EXECUTION TIME:
0.153281
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
