== TEST (2019-06-08 20:55:09) 
-- CODE:
from numpy import *
t1 = array(eval(input("Dgite: ")))
t2 = array(eval(input("Dgite: ")))
r = array(zeros(3,dtype=int))
for i in range(size(vet)):
	if (t1[i] > t2[i]):
		r = r[0] + 1
	elif (t1[i] = t2[i]):
		r = r[1] + 1
	elif (t1[i] < t2[i]):
		r = r[2] + 1
print(r)
-- ERROR:
File "XXXX", line 8
    elif (t1[i] = t2[i]):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-08 20:55:26) 
-- CODE:
from numpy import *
t1 = array(eval(input("Dgite: ")))
t2 = array(eval(input("Dgite: ")))
r = array(zeros(3,dtype=int))
for i in range(size(vet)):
	if (t1[i] > t2[i]):
		r = r[0] + 1
	elif (t1[i] == t2[i]):
		r = r[1] + 1
	elif (t1[i] < t2[i]):
		r = r[2] + 1
print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-08 20:56:28) 
-- CODE:
from numpy import *
t1 = array(eval(input("Dgite: ")))
t2 = array(eval(input("Dgite: ")))
r = array(zeros(3,dtype=int))
for i in range(size(t1)):
	if (t1[i] > t2[i]):
		r = r[0] + 1
	elif (t1[i] == t2[i]):
		r = r[1] + 1
	elif (t1[i] < t2[i]):
		r = r[2] + 1
print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-08 20:59:35) 
-- CODE:
from numpy import *
t1 = array(eval(input("Dgite: ")))
print(t1[0])
t2 = array(eval(input("Dgite: ")))
r = array(zeros(3,dtype=int))
for i in range(size(t1)):
	if (t1[i] > t2[i]):
		r[0] = r[0] 1
	elif (t1[i] == t2[i]):
		r = r[1] + 1
	elif (t1[i] < t2[i]):
		r = r[2] + 1
print(r)
-- ERROR:
File "XXXX", line 8
    r[0] = r[0] 1
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-08 20:59:47) 
-- CODE:
from numpy import *
t1 = array(eval(input("Dgite: ")))
print(t1[0])
t2 = array(eval(input("Dgite: ")))
r = array(zeros(3,dtype=int))
for i in range(size(t1)):
	if (t1[i] > t2[i]):
		r[0] = r[0] + 1
	elif (t1[i] == t2[i]):
		r = r[1] + 1
	elif (t1[i] < t2[i]):
		r = r[2] + 1
print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-08 21:00:44) 
-- CODE:
from numpy import *
t1 = array(eval(input("Dgite: ")))
t2 = array(eval(input("Dgite: ")))
r = array(zeros(3,dtype=int))
for i in range(size(t1)):
	if (t1[i] > t2[i]):
		r[0] = r[0] + 1
	elif (t1[i] == t2[i]):
		r[1] = r[1] 1
	elif (t1[i] < t2[i]):
		r[2] = r[2] + 1
print(r)
-- ERROR:
File "XXXX", line 9
    r[1] = r[1] 1
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-08 21:01:05) 
-- CODE:
from numpy import *
t1 = array(eval(input("Dgite: ")))
t2 = array(eval(input("Dgite: ")))
r = array(zeros(3,dtype=int))
for i in range(size(t1)):
	if (t1[i] > t2[i]):
		r[0] = r[0] + 1
	elif (t1[i] == t2[i]):
		r[1] = r[1] + 1
	elif (t1[i] < t2[i]):
		r[2] = r[2] + 1
print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-08 21:01:50) 
-- CODE:
from numpy import *
t1 = array(eval(input("Dgite: ")))
t2 = array(eval(input("Dgite: ")))
r = array(zeros(3,dtype=int))
for i in range(size(t1)):
	if (t1[i] > t2[i]):
		r[0] = r[0] + 1
	elif (t1[i] == t2[i]):
		r[1] = r[1] + 1
	elif (t1[i] < t2[i]):
		r[2] = r[2] + 1
print(r)
-- EXECUTION TIME:
1.1332
-- TEST CASE 1:
---- input:
[2,3,2,4,3,5,3,4,2,3,1,0]
[3,3,1,0,2,3,3,0,1,2,1,1]
---- correct output:
[7 3 2]
---- user output:
[7 3 2]
-- TEST CASE 2:
---- input:
[1,2,1,2,1,2,1,2,0]
[3,5,3,3,3,3,3,3,3]
---- correct output:
[0 0 9]
---- user output:
[0 0 9]
-- TEST CASE 3:
---- input:
[1,2,2,2,2,1,1,2,2,1,1,2,2]
[0,1,1,1,0,0,0,0,0,0,1,1,1]
---- correct output:
[12 1 0]
---- user output:
[12  1  0]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
