== SUBMITION (2019-04-29 02:03:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite um valor de x: "))
a=float(input("digite um valor para a: "))
b=float(input("digite um valor para b: "))

if( x >= a and x <=b ):
	print(x,"pertencente ao intervalo",a,",",b)
elif( x<a or x ):
	print(x,"nao pertencer ao intervalo",a,",",b)
elif:
	print("Entradas",a,"e",b,"invalidas")
-- EXECUTION TIME:
0.212025
-- ERROR:
  File "/home/codebench/codes/1679/1103/main.py", line 12
    elif:
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 02:03:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite um valor de x: "))
a=float(input("digite um valor para a: "))
b=float(input("digite um valor para b: "))

if( x >= a and x <=b ):
	print(x,"pertencente ao intervalo",a,",",b)
elif( x<a or x ):
	print(x,"nao pertencer ao intervalo",a,",",b)
elif:
	print("Entradas",a,"e",b,"invalidas")
-- ERROR:
File "XXXX", line 12
    elif:
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 02:04:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite um valor de x: "))
a=float(input("digite um valor para a: "))
b=float(input("digite um valor para b: "))

if( x >= a and x <=b ):
	print(x,"pertencente ao intervalo",a,",",b)
elif( x<a or x ):
	print(x,"nao pertencer ao intervalo",a,",",b)
print("Entradas",a,"e",b,"invalidas")
-- EXECUTION TIME:
0.134792
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertencer ao intervalo 3.0 , 4.0
Entradas 3.0 e 4.0 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertencer ao intervalo 6.5 , 3.5
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertencente ao intervalo 1.1 , 22.2
Entradas 1.1 e 22.2 invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 02:04:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite um valor de x: "))
a=float(input("digite um valor para a: "))
b=float(input("digite um valor para b: "))

if( x >= a and x <=b ):
	print(x,"pertencente ao intervalo",a,",",b)
elif( x<a or x ):
	print(x,"nao pertencer ao intervalo",a,",",b)
print("Entradas",a,"e",b,"invalidas")
-- EXECUTION TIME:
0.147869
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertencer ao intervalo 3.0 , 4.0
Entradas 3.0 e 4.0 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertencer ao intervalo 6.5 , 3.5
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertencente ao intervalo 1.1 , 22.2
Entradas 1.1 e 22.2 invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 02:04:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite um valor de x: "))
a=float(input("digite um valor para a: "))
b=float(input("digite um valor para b: "))

if( x >= a and x <=b ):
	print(x,"pertencente ao intervalo",a,",",b)
elif( x<a or x ):
	print(x,"nao pertencer ao intervalo",a,",",b)
print("Entradas",a,"e",b,"invalidas")
-- EXECUTION TIME:
0.122544
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertencer ao intervalo 3.0 , 4.0
Entradas 3.0 e 4.0 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertencer ao intervalo 6.5 , 3.5
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertencente ao intervalo 1.1 , 22.2
Entradas 1.1 e 22.2 invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 02:04:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite um valor de x: "))
a=float(input("digite um valor para a: "))
b=float(input("digite um valor para b: "))

if( x >= a and x <=b ):
	print(x,"pertencente ao intervalo",a,",",b)
elif( x<a or x ):
	print(x,"nao pertencer ao intervalo",a,",",b)
print("Entradas",a,"e",b,"invalidas")
-- OUTPUT:
2.0 nao pertencer ao intervalo 3.0 , 4.0
Entradas 3.0 e 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 02:04:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite um valor de x: "))
a=float(input("digite um valor para a: "))
b=float(input("digite um valor para b: "))

if( x >= a and x <=b ):
	print(x,"pertencente ao intervalo",a,",",b)
elif( x<a or x ):
	print(x,"nao pertencer ao intervalo",a,",",b)
print("Entradas",a,"e",b,"invalidas")
-- EXECUTION TIME:
0.159446
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertencer ao intervalo 3.0 , 4.0
Entradas 3.0 e 4.0 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertencer ao intervalo 6.5 , 3.5
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertencente ao intervalo 1.1 , 22.2
Entradas 1.1 e 22.2 invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 02:04:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite um valor de x: "))
a=float(input("digite um valor para a: "))
b=float(input("digite um valor para b: "))

if( x >= a and x <=b ):
	print(x,"pertencente ao intervalo",a,",",b)
elif( x<a or x ):
	print(x,"nao pertencer ao intervalo",a,",",b)

-- EXECUTION TIME:
0.126404
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertencer ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertencer ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertencente ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 02:04:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite um valor de x: "))
a=float(input("digite um valor para a: "))
b=float(input("digite um valor para b: "))

if( x >= a and x <=b ):
	print(x,"pertencente ao intervalo",a,",",b)
elif( x<a or x ):
	print(x,"nao pertencer ao intervalo",a,",",b)

-- EXECUTION TIME:
0.113336
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertencer ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertencer ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertencente ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 02:04:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite um valor de x: "))
a=float(input("digite um valor para a: "))
b=float(input("digite um valor para b: "))

if( x >= a and x <=b ):
	print(x,"pertencente ao intervalo",a,",",b)
elif( x<a or x ):
	print(x,"nao pertencer ao intervalo",a,",",b)

-- OUTPUT:
2.0 nao pertencer ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 02:05:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite um valor de x: "))
a=float(input("digite um valor para a: "))
b=float(input("digite um valor para b: "))

if( x >= a and x <=b ):
	print(x,"pertence ao intervalo",a,",",b)
elif( x<a or x ):
	print(x,"nao pertence ao intervalo",a,",",b)

-- EXECUTION TIME:
0.114379
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 02:05:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite um valor de x: "))
a=float(input("digite um valor para a: "))
b=float(input("digite um valor para b: "))

if( x >= a and x <=b ):
	print(x,"pertence ao intervalo",a,",",b)
elif( x<a or x ):
	print(x,"nao pertence ao intervalo",a,",",b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 02:05:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite um valor de x: "))
a=float(input("digite um valor para a: "))
b=float(input("digite um valor para b: "))

if( x >= a and x <=b ):
	print(x,"pertence ao intervalo",a,",",b)
elif( x<a or x ):
	print(x,"nao pertence ao intervalo",a,",",b)

-- EXECUTION TIME:
0.126756
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 02:06:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite um valor de x: "))
a=float(input("digite um valor para a: "))
b=float(input("digite um valor para b: "))

if( x >= a and x <=b ):
	print(x,"pertence ao intervalo",a,",",b)
elif( x<a or x ):
	print(x,"nao pertence ao intervalo",a,",",b)
print("Entradas",a,"e",b,"invalidas")
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
Entradas 3.0 e 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 02:06:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite um valor de x: "))
a=float(input("digite um valor para a: "))
b=float(input("digite um valor para b: "))

if( x >= a and x <=b ):
	print(x,"pertence ao intervalo",a,",",b)
elif( x<a or x ):
	print(x,"nao pertence ao intervalo",a,",",b)
print("Entradas",a,"e",b,"invalidas")
-- EXECUTION TIME:
0.181322
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
Entradas 3.0 e 4.0 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
Entradas 1.1 e 22.2 invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 02:06:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite um valor de x: "))
a=float(input("digite um valor para a: "))
b=float(input("digite um valor para b: "))

if( x >= a and x <=b ):
	print(x,"pertence ao intervalo",a,",",b)
elif( x<a or x ):
	print(x,"nao pertence ao intervalo",a,",",b)
print("Entradas",a,"e",b,"invalidas")
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
Entradas 3.0 e 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 02:06:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite um valor de x: "))
a=float(input("digite um valor para a: "))
b=float(input("digite um valor para b: "))

if( x >= a and x <=b ):
	print(x,"pertence ao intervalo",a,",",b)
elif( x<a or x ):
	print(x,"nao pertence ao intervalo",a,",",b)
print("Entradas",a,"e",b,"invalidas")
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
Entradas 3.0 e 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 02:07:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite um valor para a x: "))
a=float(input("digite um valor para a: "))
b=float(input("digite um valor para b: "))

if( x >= a and x <=b ):
	print(x,"pertence ao intervalo",a,",",b)
elif( x < a or x ):
	print(x,"nao pertence ao intervalo",a,",",b)
print("Entradas",a,"e",b,"invalidas")
-- EXECUTION TIME:
0.173648
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
Entradas 3.0 e 4.0 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
Entradas 1.1 e 22.2 invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 02:07:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite um valor para a x: "))
a=float(input("digite um valor para a: "))
b=float(input("digite um valor para b: "))

if( x >= a and x <=b ):
	print(x,"pertence ao intervalo",a,",",b)
elif( x < a or x ):
	print(x,"nao pertence ao intervalo",a,",",b)
print("Entradas",a,"e",b,"invalidas")
-- EXECUTION TIME:
0.259428
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
Entradas 3.0 e 4.0 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
Entradas 1.1 e 22.2 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
Entradas 1.1 e 22.2 invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 02:07:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite um valor para a x: "))
a=float(input("digite um valor para a: "))
b=float(input("digite um valor para b: "))

if( x >= a and x <=b ):
	print(x,"pertence ao intervalo",a,",",b)
elif( x < a or x ):
	print(x,"nao pertence ao intervalo",a,",",b)
print("Entradas",a,"e",b,"invalidas")
-- EXECUTION TIME:
0.0911939
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1679/1103/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 02:07:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite um valor para a x: "))
a=float(input("digite um valor para a: "))
b=float(input("digite um valor para b: "))

if( x >= a and x <=b ):
	print(x,"pertence ao intervalo",a,",",b)
elif( x < a or x ):
	print(x,"nao pertence ao intervalo",a,",",b)
print("Entradas",a,"e",b,"invalidas")
-- EXECUTION TIME:
0.121066
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
Entradas 3.0 e 4.0 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
Entradas 1.1 e 22.2 invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 02:08:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite um valor para a x: "))
a=float(input("digite um valor para a: "))
b=float(input("digite um valor para b: "))

if( x >= a and x <=b ):
	print(x,"pertence ao intervalo",a,",",b)
elif( x < a or x ):
	print(x,"nao pertence ao intervalo",a,",",b)
print("Entradas",a,"e",b,"invalidas")
-- EXECUTION TIME:
0.159647
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
Entradas 3.0 e 4.0 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
Entradas 1.1 e 22.2 invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 02:08:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite um valor para a x: "))
a=float(input("digite um valor para a: "))
b=float(input("digite um valor para b: "))

if( x >= a and x <=b ):
	print(x,"pertence ao intervalo",a,",",b)
elif( x < a or x ):
	print(x,"nao pertence ao intervalo",a,",",b)
print("Entradas",a,"e",b,"invalidas")
-- EXECUTION TIME:
0.230843
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
Entradas 3.0 e 4.0 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
Entradas 1.1 e 22.2 invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 02:08:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite um valor para a x: "))
a=float(input("digite um valor para a: "))
b=float(input("digite um valor para b: "))

if( x >= a and x <=b ):
	print(x,"pertence ao intervalo",a,",",b)
elif( x < a or x ):
	print(x,"nao pertence ao intervalo",a,",",b)
print("Entradas",a,"e",b,"invalidas")
-- EXECUTION TIME:
0.22847
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
Entradas 3.0 e 4.0 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
Entradas 1.1 e 22.2 invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 02:08:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite um valor para a x: "))
a=float(input("digite um valor para a: "))
b=float(input("digite um valor para b: "))

if( x >= a and x <=b ):
	print(x,"pertence ao intervalo",a,",",b)
elif( x < a or x ):
	print(x,"nao pertence ao intervalo",a,",",b)
print("Entradas",a,"e",b,"invalidas")
-- EXECUTION TIME:
0.183409
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
Entradas 3.0 e 4.0 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
Entradas 1.1 e 22.2 invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 02:08:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite um valor para a x: "))
a=float(input("digite um valor para a: "))
b=float(input("digite um valor para b: "))

if( x >= a and x <=b ):
	print(x,"pertence ao intervalo",a,",",b)
elif( x < a or x ):
	print(x,"nao pertence ao intervalo",a,",",b)

	print("Entradas",a,"e",b,"invalidas")
-- EXECUTION TIME:
0.167036
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
Entradas 3.0 e 4.0 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
Entradas 3.0 e 4.0 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
Entradas 6.5 e 3.5 invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 02:08:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite um valor para a x: "))
a=float(input("digite um valor para a: "))
b=float(input("digite um valor para b: "))

if( x >= a and x <=b ):
	print(x,"pertence ao intervalo",a,",",b)
elif( x < a or x ):
	print(x,"nao pertence ao intervalo",a,",",b)

	print("Entradas",a,"e",b,"invalidas")
-- EXECUTION TIME:
0.191804
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 02:08:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite um valor para a x: "))
a=float(input("digite um valor para a: "))
b=float(input("digite um valor para b: "))

if( x >= a and x <=b ):
	print(x,"pertence ao intervalo",a,",",b)
elif( x < a or x ):
	print(x,"nao pertence ao intervalo",a,",",b)

	print("Entradas",a,"e",b,"invalidas")
-- EXECUTION TIME:
0.224482
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
Entradas 3.0 e 4.0 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 02:08:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite um valor para a x: "))
a=float(input("digite um valor para a: "))
b=float(input("digite um valor para b: "))

if( x >= a and x <=b ):
	print(x,"pertence ao intervalo",a,",",b)
elif( x < a or x ):
	print(x,"nao pertence ao intervalo",a,",",b)

	print("Entradas",a,"e",b,"invalidas")
-- EXECUTION TIME:
0.159678
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:

-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 02:08:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite um valor para a x: "))
a=float(input("digite um valor para a: "))
b=float(input("digite um valor para b: "))

if( x >= a and x <=b ):
	print(x,"pertence ao intervalo",a,",",b)
elif( x < a or x ):
	print(x,"nao pertence ao intervalo",a,",",b)

	print("Entradas",a,"e",b,"invalidas")
-- EXECUTION TIME:
0.290888
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
Entradas 3.0 e 4.0 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 02:08:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite um valor para a x: "))
a=float(input("digite um valor para a: "))
b=float(input("digite um valor para b: "))

if( x >= a and x <=b ):
	print(x,"pertence ao intervalo",a,",",b)
elif( x < a or x ):
	print(x,"nao pertence ao intervalo",a,",",b)

	print("Entradas",a,"e",b,"invalidas")
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
Entradas 3.0 e 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 02:08:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite um valor para a x: "))
a=float(input("digite um valor para a: "))
b=float(input("digite um valor para b: "))

if( x >= a and x <=b ):
	print(x,"pertence ao intervalo",a,",",b)
elif( x < a or x ):
	print(x,"nao pertence ao intervalo",a,",",b)

	print("Entradas",a,"e",b,"invalidas")
-- EXECUTION TIME:
0.150911
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
Entradas 3.0 e 4.0 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
digite um valor para a x: digite um valor para a: digite um valor para b: 5.5 nao pertence ao intervalo 6.5 , 3.5
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
digite um valor para a x: digite um valor para a: digite um valor para b: 6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 02:08:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite um valor para a x: "))
a=float(input("digite um valor para a: "))
b=float(input("digite um valor para b: "))

if( x >= a and x <=b ):
	print(x,"pertence ao intervalo",a,",",b)
elif( x < a or x ):
	print(x,"nao pertence ao intervalo",a,",",b)

	print("Entradas",a,"e",b,"invalidas")
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
Entradas 3.0 e 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 02:08:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite um valor para a x: "))
a=float(input("digite um valor para a: "))
b=float(input("digite um valor para b: "))

if( x >= a and x <=b ):
	print(x,"pertence ao intervalo",a,",",b)
elif( x < a or x ):
	print(x,"nao pertence ao intervalo",a,",",b)

	print("Entradas",a,"e",b,"invalidas")
-- EXECUTION TIME:
0.229613
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
Entradas 3.0 e 4.0 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 16:50:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite um valor para a x: "))
a=float(input("digite um valor para a: "))
b=float(input("digite um valor para b: "))

if( x >= a and x <=b ):
	print(x,"pertence ao intervalo",a,",",b)
elif( x < a or x ):
	print(x,"nao pertence ao intervalo",a,",",b)
print("Entradas",a,"e",b,"invalidas")
-- EXECUTION TIME:
0.140507
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
Entradas 3.0 e 4.0 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
Entradas 1.1 e 22.2 invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 16:50:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite um valor para a x: "))
a=float(input("digite um valor para a: "))
b=float(input("digite um valor para b: "))

if( x >= a and x <=b ):
	print(x,"pertence ao intervalo",a,",",b)
elif( x < a or x ):
	print(x,"nao pertence ao intervalo",a,",",b)
print("Entradas",a,"e",b,"invalidas")
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
Entradas 3.0 e 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 16:50:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite um valor para a x: "))
a=float(input("digite um valor para a: "))
b=float(input("digite um valor para b: "))

if( x >= a and x <=b ):
	print(x,"pertence ao intervalo",a,",",b)
elif( x < a or x ):
	print(x,"nao pertence ao intervalo",a,",",b)
print("Entradas",a,"e",b,"invalidas")
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
Entradas 3.0 e 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 16:51:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite um valor para a x: "))
a=float(input("digite um valor para a: "))
b=float(input("digite um valor para b: "))

if( x >= a and x <=b ):
	print(x,"pertence ao intervalo",a,",",b)
elif( x < a or x ):
	print(x,"nao pertence ao intervalo",a,",",b)

-- EXECUTION TIME:
0.118965
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 16:51:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite um valor para a x: "))
a=float(input("digite um valor para a: "))
b=float(input("digite um valor para b: "))

if( x >= a and x <=b ):
	print(x,"pertence ao intervalo",a,",",b)
elif( x < a or x ):
	print(x,"nao pertence ao intervalo",a,",",b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 16:51:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite um valor para a x: "))
a=float(input("digite um valor para a: "))
b=float(input("digite um valor para b: "))

if( x >= a and x <=b ):
	print(x,"pertence ao intervalo",a,",",b)
elif( x < a or x ):
	print(x,"nao pertence ao intervalo",a,",",b)

-- EXECUTION TIME:
0.109331
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
digite um valor para a x: digite um valor para a: digite um valor para b: 6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 16:51:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite um valor para a x: "))
a=float(input("digite um valor para a: "))
b=float(input("digite um valor para b: "))

if( x >= a and x <=b ):
	print(x,"pertence ao intervalo",a,",",b)
elif( x < a or x ):
	print(x,"nao pertence ao intervalo",a,",",b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:01:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite um valor para a x: "))
a=float(input("digite um valor para a: "))
b=float(input("digite um valor para b: "))

if( x >= a and x <=b ):
	print(x,"pertence ao intervalo",a,",",b)
elif( x < a or x ):
	print(x,"nao pertence ao intervalo",a,",",b)
elif( x >= a and x <= b):
	print(x,"pertence ao intervalo",a,",",b)
-- EXECUTION TIME:
0.143602
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 17:01:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite um valor para a x: "))
a=float(input("digite um valor para a: "))
b=float(input("digite um valor para b: "))

if( x >= a and x <=b ):
	print(x,"pertence ao intervalo",a,",",b)
elif( x < a or x ):
	print(x,"nao pertence ao intervalo",a,",",b)
elif( x >= a and x <= b):
	print(x,"pertence ao intervalo",a,",",b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 17:02:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite um valor para a x: "))
a=float(input("digite um valor para a: "))
b=float(input("digite um valor para b: "))

if( x >= a and x <=b ):
	print(x,"pertence ao intervalo",a,",",b)
elif( x < a or x ):
	print(x,"nao pertence ao intervalo",a,",",b)
elif( x >= a and x <= b):
	print(x,"pertence ao intervalo",a,",",b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:02:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite um valor para a x: "))
a=float(input("digite um valor para a: "))
b=float(input("digite um valor para b: "))

if( x >= a and x <=b ):
	print(x,"pertence ao intervalo",a,",",b)
elif( x < a or x ):
	print(x,"nao pertence ao intervalo",a,",",b)
elif( x >= a and x <= b):
	print(x,"pertence ao intervalo",a,",",b)
-- EXECUTION TIME:
0.198014
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:02:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite um valor para a x: "))
a=float(input("digite um valor para a: "))
b=float(input("digite um valor para b: "))

if( x >= a and x <=b ):
	print(x,"pertence ao intervalo",a,",",b)
elif( x < a or x ):
	print(x,"nao pertence ao intervalo",a,",",b)
elif( x >= a and x <= b):
	print(x,"pertence ao intervalo",a,",",b)
-- EXECUTION TIME:
0.124372
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:02:23) 
-- CODE:
# Teste seu código aos poucos.
questão 6
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite um valor para x:"))
a = float(input("digite um valor para a:"))
b = float(input("digite un valor para b:"))

if(b <= a):
	print("Entradas",a,"e",b,"invalidas")
elif(x < a or x > b):
	print(x,"nao pertence ao intervalo",a,",",b)
elif( x >= a and x <= b):
	print(x,"pertence ao intervalo",a,",",b)
-- EXECUTION TIME:
0.156245
-- ERROR:
  File "/home/codebench/codes/1679/1103/main.py", line 2
    quest\xe3o 6
            ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:02:24) 
-- CODE:
# Teste seu código aos poucos.
questão 6
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite um valor para x:"))
a = float(input("digite um valor para a:"))
b = float(input("digite un valor para b:"))

if(b <= a):
	print("Entradas",a,"e",b,"invalidas")
elif(x < a or x > b):
	print(x,"nao pertence ao intervalo",a,",",b)
elif( x >= a and x <= b):
	print(x,"pertence ao intervalo",a,",",b)
-- EXECUTION TIME:
0.127309
-- ERROR:
  File "/home/codebench/codes/1679/1103/main.py", line 2
    quest\xe3o 6
            ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:02:24) 
-- CODE:
# Teste seu código aos poucos.
questão 6
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite um valor para x:"))
a = float(input("digite um valor para a:"))
b = float(input("digite un valor para b:"))

if(b <= a):
	print("Entradas",a,"e",b,"invalidas")
elif(x < a or x > b):
	print(x,"nao pertence ao intervalo",a,",",b)
elif( x >= a and x <= b):
	print(x,"pertence ao intervalo",a,",",b)
-- EXECUTION TIME:
0.090554
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1679/1103/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:02:25) 
-- CODE:
# Teste seu código aos poucos.
questão 6
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite um valor para x:"))
a = float(input("digite um valor para a:"))
b = float(input("digite un valor para b:"))

if(b <= a):
	print("Entradas",a,"e",b,"invalidas")
elif(x < a or x > b):
	print(x,"nao pertence ao intervalo",a,",",b)
elif( x >= a and x <= b):
	print(x,"pertence ao intervalo",a,",",b)
-- EXECUTION TIME:
0.112634
-- ERROR:
  File "/home/codebench/codes/1679/1103/main.py", line 2
    quest\xe3o 6
            ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 17:02:25) 
-- CODE:
# Teste seu código aos poucos.
questão 6
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite um valor para x:"))
a = float(input("digite um valor para a:"))
b = float(input("digite un valor para b:"))

if(b <= a):
	print("Entradas",a,"e",b,"invalidas")
elif(x < a or x > b):
	print(x,"nao pertence ao intervalo",a,",",b)
elif( x >= a and x <= b):
	print(x,"pertence ao intervalo",a,",",b)
-- ERROR:
File "XXXX", line 2
    questão 6
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:02:25) 
-- CODE:
# Teste seu código aos poucos.
questão 6
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite um valor para x:"))
a = float(input("digite um valor para a:"))
b = float(input("digite un valor para b:"))

if(b <= a):
	print("Entradas",a,"e",b,"invalidas")
elif(x < a or x > b):
	print(x,"nao pertence ao intervalo",a,",",b)
elif( x >= a and x <= b):
	print(x,"pertence ao intervalo",a,",",b)
-- EXECUTION TIME:
0.138552
-- ERROR:
  File "/home/codebench/codes/1679/1103/main.py", line 2
    quest\xe3o 6
            ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 17:02:25) 
-- CODE:
# Teste seu código aos poucos.
questão 6
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite um valor para x:"))
a = float(input("digite um valor para a:"))
b = float(input("digite un valor para b:"))

if(b <= a):
	print("Entradas",a,"e",b,"invalidas")
elif(x < a or x > b):
	print(x,"nao pertence ao intervalo",a,",",b)
elif( x >= a and x <= b):
	print(x,"pertence ao intervalo",a,",",b)
-- ERROR:
File "XXXX", line 2
    questão 6
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 17:02:26) 
-- CODE:
# Teste seu código aos poucos.
questão 6
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite um valor para x:"))
a = float(input("digite um valor para a:"))
b = float(input("digite un valor para b:"))

if(b <= a):
	print("Entradas",a,"e",b,"invalidas")
elif(x < a or x > b):
	print(x,"nao pertence ao intervalo",a,",",b)
elif( x >= a and x <= b):
	print(x,"pertence ao intervalo",a,",",b)
-- ERROR:
File "XXXX", line 2
    questão 6
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:02:34) 
-- CODE:

# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite um valor para x:"))
a = float(input("digite um valor para a:"))
b = float(input("digite un valor para b:"))

if(b <= a):
	print("Entradas",a,"e",b,"invalidas")
elif(x < a or x > b):
	print(x,"nao pertence ao intervalo",a,",",b)
elif( x >= a and x <= b):
	print(x,"pertence ao intervalo",a,",",b)
-- EXECUTION TIME:
0.122445
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
