== SUBMITION (2019-04-28 19:52:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = int(input("Valor de A: "))
b = int(input("Valor de B: "))
c = int(input("Valor de C: "))

if (b > a and d > c):
	if (a == c or a == d or b == c or b == d):
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", "c",",", d)
		print ("Ha intersecao")
	elif (a != c or a != d or b != c or b != d):
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", "c",",", d)
		print ("Nao ha intersecao")
	elif (b <= a and d <= c):
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", "c",",", d)
		print ("Entradas invalidas")
else:
	print ("Entradas invalidas")
	
		

-- EXECUTION TIME:
0.168238
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1104/main.py", line 8, in <module>
    if (b > a and d > c):
NameError: name 'd' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:52:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = int(input("Valor de A: "))
b = int(input("Valor de B: "))
c = int(input("Valor de C: "))

if (b > a and d > c):
	if (a == c or a == d or b == c or b == d):
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", "c",",", d)
		print ("Ha intersecao")
	elif (a != c or a != d or b != c or b != d):
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", "c",",", d)
		print ("Nao ha intersecao")
	elif (b <= a and d <= c):
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", "c",",", d)
		print ("Entradas invalidas")
else:
	print ("Entradas invalidas")
	
		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    if (b > a and d > c):
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:53:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Valor de A: "))
b = float(input("Valor de B: "))
c = float(input("Valor de C: "))
d = float(input("Valor de D: "))

if (b > a and d > c):
	if (a == c or a == d or b == c or b == d):
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", "c",",", d)
		print ("Ha intersecao")
	elif (a != c or a != d or b != c or b != d):
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", "c",",", d)
		print ("Nao ha intersecao")
	elif (b <= a and d <= c):
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", "c",",", d)
		print ("Entradas invalidas")
else:
	print ("Entradas invalidas")
	
		

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: c , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 19:54:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Valor de A: "))
b = float(input("Valor de B: "))
c = float(input("Valor de C: "))
d = float(input("Valor de D: "))

if (b > a and d > c):
	if (a == c or a == d or b == c or b == d):
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", "c",",", d)
		print ("Ha intersecao")
	elif (a != c or a != d or b != c or b != d):
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", "c",",", d)
		print ("Nao ha intersecao")
	elif (b <= a and d <= c):
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", "c",",", d)
		print ("Entradas invalidas")
else:
	print ("Entradas invalidas")
	
		

-- EXECUTION TIME:
0.155101
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: c , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: c , 3.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:55:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Valor de A: "))
b = float(input("Valor de B: "))
c = float(input("Valor de C: "))
d = float(input("Valor de D: "))

if (b > a and d > c):
	if (a == c or a == d or b == c or b == d):
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", "c",",", d)
		print ("Ha intersecao")
	elif (a != c or a != d or b != c or b != d):
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", "c",",", d)
		print ("Nao ha intersecao")
	elif (b <= a and d <= c):
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", "c",",", d)
		print ("Entradas invalidas")
else:
	print ("Entradas invalidas")
	
		

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: c , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:57:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Valor de A: "))
b = float(input("Valor de B: "))
c = float(input("Valor de C: "))
d = float(input("Valor de D: "))

if (b > a and d > c):
	if (a == c or a == d or b == c or b == d):
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", "c",",", d)
		print ("Ha intersecao")
	elif (a != c or a != d or b != c or b != d):
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", "c",",", d)
		print ("Nao ha intersecao")
	elif:# (b <= a and d <= c)
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", "c",",", d)
		print ("Entradas invalidas")
else:
	print ("Entradas invalidas")
	
		

-- ERROR:
File "XXXX", line 18
    elif:# (b <= a and d <= c)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 19:57:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Valor de A: "))
b = float(input("Valor de B: "))
c = float(input("Valor de C: "))
d = float(input("Valor de D: "))

if (b > a and d > c):
	if (a == c or a == d or b == c or b == d):
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", "c",",", d)
		print ("Ha intersecao")
	elif (a != c or a != d or b != c or b != d):
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", "c",",", d)
		print ("Nao ha intersecao")
	elif (b <= a and d <= c):
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", "c",",", d)
		print ("Entradas invalidas")
else:
	print ("Entradas invalidas")
	
		

-- EXECUTION TIME:
0.163818
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: c , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: c , 3.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:36:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Valor de A: "))
b = float(input("Valor de B: "))
c = float(input("Valor de C: "))
d = float(input("Valor de D: "))

if (b > a and d > c):
	if (a == c or a == d or b == c or b == d):
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", "c",",", d)
		print ("Ha intersecao")
	elif (a != c or a != d or b != c or b != d):
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", "c",",", d)
		print ("Nao ha intersecao")
	elif (b <= a and d <= c):
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", "c",",", d)
		print ("Entradas invalidas")
else:
	print ("Entradas invalidas")
	
		

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: c , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 23:38:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Valor de A: "))
b = float(input("Valor de B: "))
c = float(input("Valor de C: "))
d = float(input("Valor de D: "))

if (b > a and d > c):
	if (a == c or a == d or b == c or b == d):
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", c,",", d)
		print ("Ha intersecao")
	elif (a != c or a != d or b != c or b != d):
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", c,",", d)
		print ("Nao ha intersecao")
	elif (b <= a and d <= c):
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", c,",", d)
		print ("Entradas invalidas")
else:
	print ("Entradas invalidas")
	
		

-- EXECUTION TIME:
0.137749
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:38:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Valor de A: "))
b = float(input("Valor de B: "))
c = float(input("Valor de C: "))
d = float(input("Valor de D: "))

if (b > a and d > c):
	if (a == c or a == d or b == c or b == d):
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", c,",", d)
		print ("Ha intersecao")
	elif (a != c or a != d or b != c or b != d):
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", c,",", d)
		print ("Nao ha intersecao")
	elif (b <= a and d <= c):
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", c,",", d)
		print ("Entradas invalidas")
else:
	print ("Entradas invalidas")
	
		

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:39:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Valor de A: "))
b = float(input("Valor de B: "))
c = float(input("Valor de C: "))
d = float(input("Valor de D: "))

if (b > a and d > c):
	if (a == c or a == d or b == c or b == d):
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", c,",", d)
		print ("Ha intersecao")
	elif (a != c or a != d or b != c or b != d):
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", c,",", d)
		print ("Nao ha intersecao")
	elif (b <= a and d <= c):
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", c,",", d)
		print ("Entradas invalidas")
else:
	print ("Intervalo 1:", a,",", b)
	print ("Intervalo 2:", c,",", d)
	print ("Entradas invalidas")
	
		

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 23:40:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Valor de A: "))
b = float(input("Valor de B: "))
c = float(input("Valor de C: "))
d = float(input("Valor de D: "))

if (b > a and d > c):
	if (a == c or a == d or b == c or b == d):
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", c,",", d)
		print ("Ha intersecao")
	elif (a != c or a != d or b != c or b != d):
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", c,",", d)
		print ("Nao ha intersecao")
	elif (b <= a and d <= c):
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", c,",", d)
		print ("Entradas invalidas")
else:
	print ("Intervalo 1:", a,",", b)
	print ("Intervalo 2:", c,",", d)
	print ("Entradas invalidas")
	
		

-- EXECUTION TIME:
0.149246
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:41:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Valor de A: "))
b = float(input("Valor de B: "))
c = float(input("Valor de C: "))
d = float(input("Valor de D: "))

if (b > a and d > c):
	if (a == c or a == d or b == c or b == d):
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", c,",", d)
		print ("Ha intersecao")
	elif (a != c or a != d or b != c or b != d):
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", c,",", d)
		print ("Nao ha intersecao")
	elif (b <= a and d <= c):
		print ("Intervalo 1:", a,",", b)
		
		print ("Intervalo 2:", c,",", d)
		
		print ("Entradas invalidas")
else:
	print ("Intervalo 1:", a,",", b)
	
	print ("Intervalo 2:", c,",", d)
	
	print ("Entradas invalidas")
	
		

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:42:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Valor de A: "))
b = float(input("Valor de B: "))
c = float(input("Valor de C: "))
d = float(input("Valor de D: "))

if (b > a and d > c):
	if (a == c or a == d or b == c or b == d):
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", c,",", d)
		print ("Ha intersecao")
	elif (a != c or a != d or b != c or b != d):
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", c,",", d)
		print ("Nao ha intersecao")
	elif (b <= a and d <= c):
		print ("Intervalo 1:", a,",", b)
		print ()	
		print ("Intervalo 2:", c,",", d)
		print ()	
		print ("Entradas invalidas")
else:
	print ("Intervalo 1:", a,",", b)
	print ()	
	print ("Intervalo 2:", c,",", d)
	print ()
	print ("Entradas invalidas")
	
		

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:51:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Valor de A: "))
b = float(input("Valor de B: "))
c = float(input("Valor de C: "))
d = float(input("Valor de D: "))

if (b > a and d > c):
	if a == c:
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", c,",", d)
		print ("Ha intersecao")
	elif a == d:
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", c,",", d)
		print ("Ha intersecao")
	elif b == c:
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", c,",", d)
		print ("Ha intersecao")
	elif b == d:
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", c,",", d)
		print ("Ha intersecao")
	elif a != c:
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", c,",", d)
		print ("Nao ha intersecao")
	elif a != d:
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", c,",", d)
		print ("Nao ha intersecao")
	elif b != c:
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", c,",", d)
		print ("Nao ha intersecao")
	elif b != d:
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", c,",", d)
		print ("Nao ha intersecao")
	elif b <= a:
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", c,",", d)
		print ("Entradas invalidas")
	elif d <= c:
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", c,",", d)
		print ("Entradas invalidas")
else:
	print ("Intervalo 1:", a,",", b)
	print ("Intervalo 2:", c,",", d)
	print ("Entradas invalidas")
	
		

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 23:51:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Valor de A: "))
b = float(input("Valor de B: "))
c = float(input("Valor de C: "))
d = float(input("Valor de D: "))

if (b > a and d > c):
	if a == c:
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", c,",", d)
		print ("Ha intersecao")
	elif a == d:
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", c,",", d)
		print ("Ha intersecao")
	elif b == c:
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", c,",", d)
		print ("Ha intersecao")
	elif b == d:
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", c,",", d)
		print ("Ha intersecao")
	elif a != c:
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", c,",", d)
		print ("Nao ha intersecao")
	elif a != d:
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", c,",", d)
		print ("Nao ha intersecao")
	elif b != c:
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", c,",", d)
		print ("Nao ha intersecao")
	elif b != d:
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", c,",", d)
		print ("Nao ha intersecao")
	elif b <= a:
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", c,",", d)
		print ("Entradas invalidas")
	elif d <= c:
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", c,",", d)
		print ("Entradas invalidas")
else:
	print ("Intervalo 1:", a,",", b)
	print ("Intervalo 2:", c,",", d)
	print ("Entradas invalidas")
	
		

-- EXECUTION TIME:
0.175642
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:42:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Valor de A: "))
b = float(input("Valor de B: "))
c = float(input("Valor de C: "))
d = float(input("Valor de D: "))

if (b > a and d > c):
	if a == c:
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", c,",", d)
		print ("Ha intersecao")
	elif a == d:
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", c,",", d)
		print ("Ha intersecao")
	elif b == c:
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", c,",", d)
		print ("Ha intersecao")
	elif b == d:
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", c,",", d)
		print ("Ha intersecao")
	elif a != c:
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", c,",", d)
		print ("Nao ha intersecao")
	elif a != d:
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", c,",", d)
		print ("Nao ha intersecao")
	elif b != c:
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", c,",", d)
		print ("Nao ha intersecao")
	elif b != d:
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", c,",", d)
		print ("Nao ha intersecao")
	elif b <= a:
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", c,",", d)
		print ("Entradas invalidas")
	elif d <= c:
		print ("Intervalo 1:", a,",", b)
		print ("Intervalo 2:", c,",", d)
		print ("Entradas invalidas")
else:
	print ("Intervalo 1:", a,",", b)
	print ("Intervalo 2:", c,",", d)
	print ("Entradas invalidas")
	
		

-- EXECUTION TIME:
0.146006
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:44:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("digite um valor para a:"))
b = float(input("digite um valor para b:"))
c = float(input("digite um valor para c:"))
d = float(input("digite um valor para d:"))

if((a > b) or (c > d)):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
	print("Entradas invalidas")
	
elif(c <= b and b <= d) or(a <= c and d <= b) or (c <= a and b <= d) or (c <= a and a<= d):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
	print("Ha intersecao")
	
elif(((b > a) and (b < c) and (b < d)) or ((d > c) and (d < a) and (d < b))):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
	print("Nao ha intersecao")
-- EXECUTION TIME:
0.20205
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
