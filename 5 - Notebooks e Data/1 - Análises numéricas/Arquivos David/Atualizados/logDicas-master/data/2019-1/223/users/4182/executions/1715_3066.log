== TEST (2019-05-02 16:23:52) 
-- CODE:
pv = int(input())
v1 = int(input())
v2 = int(input())
v3 = int(input())

perde = pv - (10*n)
print(perde)
n = v1 + v2 + v3
if (pv > 0) and (v1 <= 12) or (v2 <= 12) or (v3 <= 12):
	if (perde > 0):
		print("VIVO")
	else
-- ERROR:
File "XXXX", line 12
    else
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:25:04) 
-- CODE:
pv = int(input())
v1 = int(input())
v2 = int(input())
v3 = int(input())

perde = pv - (10*n)
print(perde)
n = v1 + v2 + v3
if (pv > 0) and (v1 <= 12) or (v2 <= 12) or (v3 <= 12):
	if (perde > 0):
		print("VIVO")
	else:
		print("MORTO")
else:
	print("Entrada invalida")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    perde = pv - (10*n)
NameError: name 'n' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:25:07) 
-- CODE:
pv = int(input())
v1 = int(input())
v2 = int(input())
v3 = int(input())

perde = pv - (10*n)
print(perde)
n = v1 + v2 + v3
if (pv > 0) and (v1 <= 12) or (v2 <= 12) or (v3 <= 12):
	if (perde > 0):
		print("VIVO")
	else:
		print("MORTO")
else:
	print("Entrada invalida")
-- EXECUTION TIME:
0.165053
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1715/3066/main.py", line 6, in <module>
    perde = pv - (10*n)
NameError: name 'n' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:25:18) 
-- CODE:
pv = int(input())
v1 = int(input())
v2 = int(input())
v3 = int(input())

perde = pv - (10*n)
print(perde)
n = v1 + v2 + v3
if (pv > 0) and (v1 <= 12) or (v2 <= 12) or (v3 <= 12):
	if (perde > 0):
		print("VIVO")
	else:
		print("MORTO")
else:
	print("Entrada invalida")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    perde = pv - (10*n)
NameError: name 'n' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:26:12) 
-- CODE:
pv = int(input())
v1 = int(input())
v2 = int(input())
v3 = int(input())
n = v1 + v2 + v3
perde = pv - (10*n)
print(perde)
if (pv > 0) and (v1 <= 12) or (v2 <= 12) or (v3 <= 12):
	if (perde > 0):
		print("VIVO")
	else:
		print("MORTO")
else:
	print("Entrada invalida")
-- OUTPUT:
-130
MORTO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:26:31) 
-- CODE:
pv = int(input())
v1 = int(input())
v2 = int(input())
v3 = int(input())
n = v1 + v2 + v3
perde = pv - (10*n)
print(perde)
if (pv > 0) and (v1 <= 12) or (v2 <= 12) or (v3 <= 12):
	if (perde > 0):
		print("VIVO")
	else:
		print("MORTO")
else:
	print("Entrada invalida")
-- EXECUTION TIME:
0.138267
-- TEST CASE 1:
---- input:
120
6
9
10
---- correct output:
0
MORTO
---- user output:
-130
MORTO
-- TEST CASE 2:
---- input:
200
15
20
3
---- correct output:
Entrada invalida
---- user output:
-180
MORTO
-- TEST CASE 3:
---- input:
260
2
1
2
---- correct output:
210
VIVO
---- user output:
210
VIVO
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:26:47) 
-- CODE:
pv = int(input())
v1 = int(input())
v2 = int(input())
v3 = int(input())
n = v1 + v2 + v3
perde = pv - (10*n)
print(perde)
if (pv > 0) and (v1 <= 12) or (v2 <= 12) or (v3 <= 12):
	if (perde > 0):
		print("VIVO")
	else:
		print("MORTO")
else:
	print("Entrada invalida")
-- OUTPUT:
-130
MORTO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:28:00) 
-- CODE:
pv = int(input())
v1 = int(input())
v2 = int(input())
v3 = int(input())
n = v1 + v2 + v3
perde = pv - (10*n)
print(perde)
if (pv > 0) and (v1 <= 12) or (v2 <= 12) or (v3 <= 12):
	if (perde > 0):
		print("VIVO")
	elif (perde <= 0):
		print("MORTO")
else:
	print("Entrada invalida")
-- EXECUTION TIME:
0.168668
-- TEST CASE 1:
---- input:
120
6
9
10
---- correct output:
0
MORTO
---- user output:
-130
MORTO
-- TEST CASE 2:
---- input:
200
15
20
3
---- correct output:
Entrada invalida
---- user output:
-180
MORTO
-- TEST CASE 3:
---- input:
260
2
1
2
---- correct output:
210
VIVO
---- user output:
210
VIVO
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:29:16) 
-- CODE:
pv = int(input())
v1 = int(input())
v2 = int(input())
v3 = int(input())
n = v1 + v2 + v3
perde = pv - (10*n)
print(perde)
if (pv > 0) and (v1 <= 12) or (v2 <= 12) or (v3 <= 12):
	if (perde > 0):
		print("VIVO")
	else:
		print("MORTO")
else:
	print("Entrada invalida")
-- OUTPUT:
-130
MORTO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:30:00) 
-- CODE:
pv = int(input())
v1 = int(input())
v2 = int(input())
v3 = int(input())
n = v1 + v2 + v3
perde = pv - (10*n)
print(perde)
if (pv > 0) and (v1 <= 12) or (v2 <= 12) or (v3 <= 12):
	if (perde > 0):
		print("VIVO")
	elif (perde < 0):
		print("MORTO")
else:
	print("Entrada invalida")
-- EXECUTION TIME:
0.208635
-- TEST CASE 1:
---- input:
120
6
9
10
---- correct output:
0
MORTO
---- user output:
-130
MORTO
-- TEST CASE 2:
---- input:
200
15
20
3
---- correct output:
Entrada invalida
---- user output:
-180
MORTO
-- TEST CASE 3:
---- input:
260
2
1
2
---- correct output:
210
VIVO
---- user output:
210
VIVO
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:31:52) 
-- CODE:
pv = int(input())
v1 = int(input())
v2 = int(input())
v3 = int(input())
n = v1 + v2 + v3
perde = pv - (10*n)
if (perde < 0):
	print(0)
else:
	print(perde)
if (pv > 0) and (v1 <= 12) or (v2 <= 12) or (v3 <= 12):
	if (perde > 0):
		print("VIVO")
	elif (perde < 0):
		print("MORTO")
else:
	print("Entrada invalida")
-- EXECUTION TIME:
0.201073
-- TEST CASE 1:
---- input:
120
6
9
10
---- correct output:
0
MORTO
---- user output:
0
MORTO
-- TEST CASE 2:
---- input:
200
15
20
3
---- correct output:
Entrada invalida
---- user output:
0
MORTO
-- TEST CASE 3:
---- input:
260
2
1
2
---- correct output:
210
VIVO
---- user output:
210
VIVO
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:31:53) 
-- CODE:
pv = int(input())
v1 = int(input())
v2 = int(input())
v3 = int(input())
n = v1 + v2 + v3
perde = pv - (10*n)
if (perde < 0):
	print(0)
else:
	print(perde)
if (pv > 0) and (v1 <= 12) or (v2 <= 12) or (v3 <= 12):
	if (perde > 0):
		print("VIVO")
	elif (perde < 0):
		print("MORTO")
else:
	print("Entrada invalida")
-- OUTPUT:
0
MORTO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:32:39) 
-- CODE:
pv = int(input())
v1 = int(input())
v2 = int(input())
v3 = int(input())
n = v1 + v2 + v3
perde = pv - (10*n)
if (perde < 0):
	print(0)
else:
	print(perde)
if (pv > 0) and (v1 <= 12) or (v2 <= 12) or (v3 <= 12):
	if (perde > 0):
		print("VIVO")
	elif (perde < 0):
		print("MORTO")
else:
	print("Entrada invalida")
-- EXECUTION TIME:
0.17071
-- TEST CASE 1:
---- input:
120
6
9
10
---- correct output:
0
MORTO
---- user output:
0
MORTO
-- TEST CASE 2:
---- input:
200
15
20
3
---- correct output:
Entrada invalida
---- user output:
0
MORTO
-- TEST CASE 3:
---- input:
260
2
1
2
---- correct output:
210
VIVO
---- user output:
210
VIVO
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:33:27) 
-- CODE:
pv = int(input())
v1 = int(input())
v2 = int(input())
v3 = int(input())

n = v1 + v2 + v3
perde = pv - (10*n)
if (perde < 0):
	print(0)
else:
	print(perde)
if (pv > 0) and (v1 <= 12) or (v2 <= 12) or (v3 <= 12):
	if (perde > 0):
		print("VIVO")
	elif (perde < 0):
		print("MORTO")
else:
	print("Entrada invalida")
-- OUTPUT:
0
MORTO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:33:31) 
-- CODE:
pv = int(input())
v1 = int(input())
v2 = int(input())
v3 = int(input())

n = v1 + v2 + v3
perde = pv - (10*n)
if (perde < 0):
	print(0)
else:
	print(perde)
if (pv > 0) and (v1 <= 12) or (v2 <= 12) or (v3 <= 12):
	if (perde > 0):
		print("VIVO")
	elif (perde < 0):
		print("MORTO")
else:
	print("Entrada invalida")
-- EXECUTION TIME:
0.140431
-- TEST CASE 1:
---- input:
120
6
9
10
---- correct output:
0
MORTO
---- user output:
0
MORTO
-- TEST CASE 2:
---- input:
200
15
20
3
---- correct output:
Entrada invalida
---- user output:
0
MORTO
-- TEST CASE 3:
---- input:
260
2
1
2
---- correct output:
210
VIVO
---- user output:
210
VIVO
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:33:43) 
-- CODE:
pv = int(input())
v1 = int(input())
v2 = int(input())
v3 = int(input())

n = v1 + v2 + v3
perde = pv - (10*n)
if (perde < 0):
	print(0)
else:
	print(perde)
if (pv > 0) and (v1 <= 12) or (v2 <= 12) or (v3 <= 12):
	if (perde > 0):
		print("VIVO")
	elif (perde < 0):
		print("MORTO")
else:
	print("Entrada invalida")
-- OUTPUT:
0
MORTO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:39:16) 
-- CODE:
pv = int(input())
v1 = int(input())
v2 = int(input())
v3 = int(input())

n = v1 + v2 + v3
perde = pv - (10*n)

if (pv > 0) and (v1 <= 12) or (v2 <= 12) or (v3 <= 12):
	if (perde < 0):
		print(0)
		elif (perde > 0):
			print("VIVO")
		elif (perde < 0):
			print("MORTO")
	else:
		print(perde)
else:
	print("Entrada invalida")
-- EXECUTION TIME:
0.168245
-- ERROR:
  File "/home/codebench/codes/1715/3066/main.py", line 12
    elif (perde > 0):
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:39:18) 
-- CODE:
pv = int(input())
v1 = int(input())
v2 = int(input())
v3 = int(input())

n = v1 + v2 + v3
perde = pv - (10*n)

if (pv > 0) and (v1 <= 12) or (v2 <= 12) or (v3 <= 12):
	if (perde < 0):
		print(0)
		elif (perde > 0):
			print("VIVO")
		elif (perde < 0):
			print("MORTO")
	else:
		print(perde)
else:
	print("Entrada invalida")
-- ERROR:
File "XXXX", line 12
    elif (perde > 0):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:42:47) 
-- CODE:
pv = int(input())
v1 = int(input())
v2 = int(input())
v3 = int(input())

n = v1 + v2 + v3
perde = pv - (10*n)

if (pv > 0) and (v1 <= 12) or (v2 <= 12) or (v3 <= 12):
	print(perde)
	if (perde < 0):
		print(0)
		if (perde > 0):
			print("VIVO")
		else:
			print("MORTO")
else:
	print("Entrada invalida")
-- EXECUTION TIME:
0.145314
-- TEST CASE 1:
---- input:
120
6
9
10
---- correct output:
0
MORTO
---- user output:
-130
0
MORTO
-- TEST CASE 2:
---- input:
200
15
20
3
---- correct output:
Entrada invalida
---- user output:
-180
0
MORTO
-- TEST CASE 3:
---- input:
260
2
1
2
---- correct output:
210
VIVO
---- user output:
210
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:42:48) 
-- CODE:
pv = int(input())
v1 = int(input())
v2 = int(input())
v3 = int(input())

n = v1 + v2 + v3
perde = pv - (10*n)

if (pv > 0) and (v1 <= 12) or (v2 <= 12) or (v3 <= 12):
	print(perde)
	if (perde < 0):
		print(0)
		if (perde > 0):
			print("VIVO")
		else:
			print("MORTO")
else:
	print("Entrada invalida")
-- OUTPUT:
-130
0
MORTO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:43:16) 
-- CODE:
pv = int(input())
v1 = int(input())
v2 = int(input())
v3 = int(input())

n = v1 + v2 + v3
perde = pv - (10*n)

if (pv > 0) and (v1 <= 12) or (v2 <= 12) or (v3 <= 12):
	print(perde)
	if (perde < 0):
		print(0)
		if (perde > 0):
			print("VIVO")
		else:
			print("MORTO")
else:
	print("Entrada invalida")
-- OUTPUT:
-130
0
MORTO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:47:28) 
-- CODE:
pv = int(input())
v1 = int(input())
v2 = int(input())
v3 = int(input())

n = v1 + v2 + v3
perde = pv - (10*n)

if (pv > 0) and (v1 <= 12) or (v2 <= 12) or (v3 <= 12):
	elif (perde > 0):
		print(perde)
		print("VIVO")
	elif (perde < 0):
		print(0)
		print("MORTO")
else:
	print("Entrada invalida")
-- EXECUTION TIME:
0.201527
-- ERROR:
  File "/home/codebench/codes/1715/3066/main.py", line 10
    elif (perde > 0):
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:47:29) 
-- CODE:
pv = int(input())
v1 = int(input())
v2 = int(input())
v3 = int(input())

n = v1 + v2 + v3
perde = pv - (10*n)

if (pv > 0) and (v1 <= 12) or (v2 <= 12) or (v3 <= 12):
	elif (perde > 0):
		print(perde)
		print("VIVO")
	elif (perde < 0):
		print(0)
		print("MORTO")
else:
	print("Entrada invalida")
-- ERROR:
File "XXXX", line 10
    elif (perde > 0):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:48:01) 
-- CODE:
pv = int(input())
v1 = int(input())
v2 = int(input())
v3 = int(input())

n = v1 + v2 + v3
perde = pv - (10*n)

if (pv > 0) and (v1 <= 12) or (v2 <= 12) or (v3 <= 12):
	if (perde > 0):
		print(perde)
		print("VIVO")
	else:
		print(0)
		print("MORTO")
else:
	print("Entrada invalida")
-- EXECUTION TIME:
0.137535
-- TEST CASE 1:
---- input:
120
6
9
10
---- correct output:
0
MORTO
---- user output:
0
MORTO
-- TEST CASE 2:
---- input:
200
15
20
3
---- correct output:
Entrada invalida
---- user output:
0
MORTO
-- TEST CASE 3:
---- input:
260
2
1
2
---- correct output:
210
VIVO
---- user output:
210
VIVO
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:48:01) 
-- CODE:
pv = int(input())
v1 = int(input())
v2 = int(input())
v3 = int(input())

n = v1 + v2 + v3
perde = pv - (10*n)

if (pv > 0) and (v1 <= 12) or (v2 <= 12) or (v3 <= 12):
	if (perde > 0):
		print(perde)
		print("VIVO")
	else:
		print(0)
		print("MORTO")
else:
	print("Entrada invalida")
-- OUTPUT:
0
MORTO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:48:24) 
-- CODE:
pv = int(input())
v1 = int(input())
v2 = int(input())
v3 = int(input())

n = v1 + v2 + v3
perde = pv - (10*n)

if (pv > 0) and (v1 <= 12) or (v2 <= 12) or (v3 <= 12):
	if (perde > 0):
		print(perde)
		print("VIVO")
	else:
		print(0)
		print("MORTO")
else:
	print("Entrada invalida")
-- OUTPUT:
0
MORTO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:48:51) 
-- CODE:
pv = int(input())
v1 = int(input())
v2 = int(input())
v3 = int(input())

n = v1 + v2 + v3
perde = pv - (10*n)

if (pv > 0) and (v1 <= 12) or (v2 <= 12) or (v3 <= 12):
	if (perde > 0):
		print(perde)
		print("VIVO")
	else:
		print(0)
		print("MORTO")
else:
	print("Entrada invalida")
-- EXECUTION TIME:
0.164323
-- TEST CASE 1:
---- input:
120
6
9
10
---- correct output:
0
MORTO
---- user output:
0
MORTO
-- TEST CASE 2:
---- input:
200
15
20
3
---- correct output:
Entrada invalida
---- user output:
0
MORTO
-- TEST CASE 3:
---- input:
260
2
1
2
---- correct output:
210
VIVO
---- user output:
210
VIVO
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:49:06) 
-- CODE:
pv = int(input())
v1 = int(input())
v2 = int(input())
v3 = int(input())

n = v1 + v2 + v3
perde = pv - (10*n)

if (pv > 0) and (v1 <= 12) or (v2 <= 12) or (v3 <= 12):
	if (perde > 0):
		print(perde)
		print("VIVO")
	else:
		print(0)
		print("MORTO")
else:
	print("Entrada invalida")
-- OUTPUT:
0
MORTO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:49:27) 
-- CODE:
pv = int(input())
v1 = int(input())
v2 = int(input())
v3 = int(input())

n = v1 + v2 + v3
perde = pv - (10*n)

if (pv > 0) and (v1 <= 12) or (v2 <= 12) or (v3 <= 12):
	if (perde > 0):
		print(perde)
		print("VIVO")
	else:
		print(0)
		print("MORTO")
else:
	print("Entrada invalida")
-- EXECUTION TIME:
0.163926
-- TEST CASE 1:
---- input:
120
6
9
10
---- correct output:
0
MORTO
---- user output:
0
MORTO
-- TEST CASE 2:
---- input:
200
15
20
3
---- correct output:
Entrada invalida
---- user output:
0
MORTO
-- TEST CASE 3:
---- input:
260
2
1
2
---- correct output:
210
VIVO
---- user output:
210
VIVO
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
