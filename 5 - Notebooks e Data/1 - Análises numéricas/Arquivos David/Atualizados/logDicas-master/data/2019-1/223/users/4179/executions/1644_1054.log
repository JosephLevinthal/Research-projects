== SUBMITION (2019-04-09 16:48:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
X=float(input("Qual a coordenada x:? "))
Y=float(input("Qual a coordenada y? "))
reta=2*X+Y
if (reta == 3)
	print("ponto pertence a reta")
else: 
	print("ponto nao pertence a reta")

-- EXECUTION TIME:
0.178742
-- ERROR:
  File "/home/codebench/codes/1644/1054/main.py", line 7
    if (reta == 3)
                 ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 16:48:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
X=float(input("Qual a coordenada x:? "))
Y=float(input("Qual a coordenada y? "))
reta=2*X+Y
if (reta == 3)
	print("ponto pertence a reta")
else: 
	print("ponto nao pertence a reta")

-- ERROR:
File "XXXX", line 7
    if (reta == 3)
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 16:48:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
X=float(input("Qual a coordenada x:? "))
Y=float(input("Qual a coordenada y? "))
reta=2*X+Y
if (reta == 3):
	print("ponto pertence a reta")
else: 
	print("ponto nao pertence a reta")

-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 16:48:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
X=float(input("Qual a coordenada x:? "))
Y=float(input("Qual a coordenada y? "))
reta=2*X+Y
if (reta == 3):
	print("ponto pertence a reta")
else: 
	print("ponto nao pertence a reta")

-- EXECUTION TIME:
0.190243
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
