== SUBMITION (2019-06-06 16:32:52) 
-- CODE:
from math import *
R = float(input("raio: "))
x = float(input("altura: "))
N = int(input("numero: "))

V1=4*pi*(R)**3/3
v2=(pi*x**2)*((3*R)-x)/3
be = (V1-v2)

if N==1 :
	mensagem = (v2)
else:
	mensagem = (be)
	
print(round(mensagem,4))
-- EXECUTION TIME:
0.897173
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-30 12:08:13) 
-- CODE:
From math import *

#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))
rad = radians(a)
Ra = v0**2
Rb = sin(2 * rad)
g = 9.8
R = (Ra * Rb)/g
dif = abs(D - R)
dif = round(dif, 2)

if(dif <= 0.1):
    print("sim")

else:
    print("nao")
-- EXECUTION TIME:
0.79987
-- ERROR:
  File "/home/codebench/codes/1644/2443/main.py", line 1
    From math import *
            ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-30 12:08:27) 
-- CODE:
From math import *

#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))
rad = radians(a)
Ra = v0**2
Rb = sin(2 * rad)
g = 9.8
R = (Ra * Rb)/g
dif = abs(D - R)
dif = round(dif, 2)

if(dif <= 0.1):
    print("sim")

else:
    print("nao")
-- ERROR:
File "XXXX", line 1
    From math import *
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-30 12:08:59) 
-- CODE:
From math import *

#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))
rad = radians(a)
Ra = v0**2
Rb = sin(2 * rad)
g = 9.8
R = (Ra * Rb)/g
dif = abs(D - R)
dif = round(dif, 2)

if(dif <= 0.1):
	print("sim")
else:
	print("nao")
-- ERROR:
File "XXXX", line 1
    From math import *
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-30 12:12:02) 
-- CODE:
From math import *

#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))
rad = radians(a)
Ra = v0**2
Rb = sin(2 * rad)
g = 9.8
R = (Ra * Rb)/g
dif = abs(D - R)
dif = round(dif, 2)

if(dif <= 0.1):
	print("sim")
else:
	print("nao")
-- EXECUTION TIME:
0.67352
-- ERROR:
  File "/home/codebench/codes/1644/2443/main.py", line 1
    From math import *
            ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 14:53:50) 
-- CODE:
From math import *

#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))
rad = radians(a)
Ra = v0**2
Rb = sin(2 * rad)
g = 9.8
R = (Ra * Rb)/g
dif = abs(D - R)
dif = round(dif, 2)

if(dif <= 0.1):
	print("sim")
else:
	print("nao")
-- ERROR:
File "XXXX", line 1
    From math import *
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 14:54:10) 
-- CODE:
from math import *

#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))
rad = radians(a)
Ra = v0**2
Rb = sin(2 * rad)
g = 9.8
R = (Ra * Rb)/g
dif = abs(D - R)
dif = round(dif, 2)

if(dif <= 0.1):
	print("sim")
else:
	print("nao")
-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 14:55:45) 
-- CODE:
from math import *

# Leitura dos dados
r = float(input("raio do tanque: "))
x = float(input("altura da coluna de ar: "))
w = int(input("digite a opcao desejada: "))

#Calculo dos volumes
Ve = (4 * pi * r**3)/3

a = pi * x**2
b = (3*r) - x
Vce = (a * b)/3

gas = Ve - Vce
ar = Vce

if(w == 1):
print(round(ar, 4))
-- ERROR:
File "XXXX", line 19
    print(round(ar, 4))
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 14:55:57) 
-- CODE:
from math import *

# Leitura dos dados
r = float(input("raio do tanque: "))
x = float(input("altura da coluna de ar: "))
w = int(input("digite a opcao desejada: "))

#Calculo dos volumes
Ve = (4 * pi * r**3)/3

a = pi * x**2
b = (3*r) - x
Vce = (a * b)/3

gas = Ve - Vce
ar = Vce

if(w == 1):
	print(round(ar, 4))
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 14:56:16) 
-- CODE:
from math import *

# Leitura dos dados
r = float(input("raio do tanque: "))
x = float(input("altura da coluna de ar: "))
w = int(input("digite a opcao desejada: "))

#Calculo dos volumes
Ve = (4 * pi * r**3)/3

a = pi * x**2
b = (3*r) - x
Vce = (a * b)/3

gas = Ve - Vce
ar = Vce

if(w == 1):
	print(round(ar, 4))
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-01 14:57:22) 
-- CODE:
from math import *

# Leitura dos dados
r = float(input("raio do tanque: "))
x = float(input("altura da coluna de ar: "))
w = int(input("digite a opcao desejada: "))

#Calculo dos volumes
Ve = (4 * pi * r**3)/3

a = pi * x**2
b = (3*r) - x
Vce = (a * b)/3

gas = Ve - Vce
ar = Vce

if(w == 1):
	print(round(ar, 4))
-- EXECUTION TIME:
0.696793
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 14:58:10) 
-- CODE:
from math import *

# Leitura dos dados
r = float(input("raio do tanque: "))
x = float(input("altura da coluna de ar: "))
w = int(input("digite a opcao desejada: "))

#Calculo dos volumes
Ve = (4 * pi * r**3)/3

a = pi * x**2
b = (3*r) - x
Vce = (a * b)/3

gas = Ve - Vce
ar = Vce

if(w == 1):
	print(round(ar, 4))
if(w == 2):
	print(round(gas, 4))
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 14:58:30) 
-- CODE:
from math import *

# Leitura dos dados
r = float(input("raio do tanque: "))
x = float(input("altura da coluna de ar: "))
w = int(input("digite a opcao desejada: "))

#Calculo dos volumes
Ve = (4 * pi * r**3)/3

a = pi * x**2
b = (3*r) - x
Vce = (a * b)/3

gas = Ve - Vce
ar = Vce

if(w == 1):
	print(round(ar, 4))
if(w == 2):
	print(round(gas, 4))
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-01 14:58:43) 
-- CODE:
from math import *

# Leitura dos dados
r = float(input("raio do tanque: "))
x = float(input("altura da coluna de ar: "))
w = int(input("digite a opcao desejada: "))

#Calculo dos volumes
Ve = (4 * pi * r**3)/3

a = pi * x**2
b = (3*r) - x
Vce = (a * b)/3

gas = Ve - Vce
ar = Vce

if(w == 1):
	print(round(ar, 4))
if(w == 2):
	print(round(gas, 4))
-- EXECUTION TIME:
0.768861
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
