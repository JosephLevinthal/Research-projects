== TEST (2019-06-09 19:11:18) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros
IMC = P/(A*A)

for i in size(P):
	print(IMC)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 19:12:45) 
-- CODE:
from numpy import *

P = array(eval(float(input())))
A = array(eval(float(input())))
V = zeros
IMC = P/(A*A)

for i in size(P):
	print(IMC)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 19:13:51) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros
IMC = P/(A*A)

for i in size(P):
	print(IMC)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 19:14:41) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros
IMC = P/(A*A)

for i in P:
	print(IMC)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 19:29:11) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros
IMC = P/(A*A)

for i in P:
	v = round(IMC, 2)
	m = max(v)
	print('O MAIOR IMC DA TURMA EH:', m)
	if v<17:
		print('MUITO ABAIXO DO PESO')
	elif (17<v<18.49):
		print('ABAIXO DO PESO')
	elif (18.5<v<24.99):
		print('PESO NORMAL')
	elif (25<v<29.99):
		print('ACIMA DO PESO')
	elif (30<v<34.99):
		print('OBESIDADE')
	elif (35<v<39.99):
		print('OBESIDADE SEVERA')
	elif (v>40):
		print('OBESIDADE MORBIDA')
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 19:31:46) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
#V = zeros

for i in P:
	v = P/(A*A)
	print(round(v, 2))
	m = max(v)
	print('O MAIOR IMC DA TURMA EH:', m)
	if v<17:
		print('MUITO ABAIXO DO PESO')
	elif (17<v<18.49):
		print('ABAIXO DO PESO')
	elif (18.5<v<24.99):
		print('PESO NORMAL')
	elif (25<v<29.99):
		print('ACIMA DO PESO')
	elif (30<v<34.99):
		print('OBESIDADE')
	elif (35<v<39.99):
		print('OBESIDADE SEVERA')
	elif (v>40):
		print('OBESIDADE MORBIDA')
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 19:35:43) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros

for i in P:
	v = P/(A*A)
	print(v)
	m = max(v)
	print('O MAIOR IMC DA TURMA EH:', m)
	if v<17:
		print('MUITO ABAIXO DO PESO')
	elif (17<v<18.49):
		print('ABAIXO DO PESO')
	elif (18.5<v<24.99):
		print('PESO NORMAL')
	elif (25<v<29.99):
		print('ACIMA DO PESO')
	elif (30<v<34.99):
		print('OBESIDADE')
	elif (35<v<39.99):
		print('OBESIDADE SEVERA')
	elif (v>40):
		print('OBESIDADE MORBIDA')
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 19:37:59) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = P/(A*A)

for i in P:
	v = round(V, 2)
	print(v)
	m = max(v)
	print('O MAIOR IMC DA TURMA EH:', m)
	if (v<17):
		print('MUITO ABAIXO DO PESO')
	elif (17<v<18.49):
		print('ABAIXO DO PESO')
	elif (18.5<v<24.99):
		print('PESO NORMAL')
	elif (25<v<29.99):
		print('ACIMA DO PESO')
	elif (30<v<34.99):
		print('OBESIDADE')
	elif (35<v<39.99):
		print('OBESIDADE SEVERA')
	elif (v>40):
		print('OBESIDADE MORBIDA')
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 19:39:26) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros

for i in P:
	v = P/(A*A)
	print(round(v[i], 2))
	m = max(v)
	print('O MAIOR IMC DA TURMA EH:', m)
	if (v<17):
		print('MUITO ABAIXO DO PESO')
	elif (17<v<18.49):
		print('ABAIXO DO PESO')
	elif (18.5<v<24.99):
		print('PESO NORMAL')
	elif (25<v<29.99):
		print('ACIMA DO PESO')
	elif (30<v<34.99):
		print('OBESIDADE')
	elif (35<v<39.99):
		print('OBESIDADE SEVERA')
	elif (v>40):
		print('OBESIDADE MORBIDA')
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 19:40:14) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros

for i in P:
	v = P/(A*A)
	print(v)
	m = max(v)
	print('O MAIOR IMC DA TURMA EH:', m)
	if (v<17):
		print('MUITO ABAIXO DO PESO')
	elif (17<v<18.49):
		print('ABAIXO DO PESO')
	elif (18.5<v<24.99):
		print('PESO NORMAL')
	elif (25<v<29.99):
		print('ACIMA DO PESO')
	elif (30<v<34.99):
		print('OBESIDADE')
	elif (35<v<39.99):
		print('OBESIDADE SEVERA')
	elif (v>40):
		print('OBESIDADE MORBIDA')
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 19:42:56) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros

for i in P:
	v = P/(A*A)
	print(v)
	m = max(v)
	print('O MAIOR IMC DA TURMA EH:', m)
	if (v[i]<17):
		print('MUITO ABAIXO DO PESO')
	elif (17<v[i]<18.49):
		print('ABAIXO DO PESO')
	elif (18.5<v[i]<24.99):
		print('PESO NORMAL')
	elif (25<v[i]<29.99):
		print('ACIMA DO PESO')
	elif (30<v[i]<34.99):
		print('OBESIDADE')
	elif (35<v[i]<39.99):
		print('OBESIDADE SEVERA')
	elif (v[i]>40):
		print('OBESIDADE MORBIDA')
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 19:43:30) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros

for i in range(P):
	v = P/(A*A)
	print(v)
	m = max(v)
	print('O MAIOR IMC DA TURMA EH:', m)
	if (v[i]<17):
		print('MUITO ABAIXO DO PESO')
	elif (17<v[i]<18.49):
		print('ABAIXO DO PESO')
	elif (18.5<v[i]<24.99):
		print('PESO NORMAL')
	elif (25<v[i]<29.99):
		print('ACIMA DO PESO')
	elif (30<v[i]<34.99):
		print('OBESIDADE')
	elif (35<v[i]<39.99):
		print('OBESIDADE SEVERA')
	elif (v[i]>40):
		print('OBESIDADE MORBIDA')
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 19:44:13) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros

for i in P:
	v = P/(A*A)
	print(v)
	m = max(v)
	print('O MAIOR IMC DA TURMA EH:', m)
	if (v[i]<17):
		print('MUITO ABAIXO DO PESO')
	elif (17<v[i]<18.49):
		print('ABAIXO DO PESO')
	elif (18.5<v[i]<24.99):
		print('PESO NORMAL')
	elif (25<v[i]<29.99):
		print('ACIMA DO PESO')
	elif (30<v[i]<34.99):
		print('OBESIDADE')
	elif (35<v[i]<39.99):
		print('OBESIDADE SEVERA')
	elif (v[i]>40):
		print('OBESIDADE MORBIDA')
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 20:41:15) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros

for i in P:
	v = P/(A*A)
	print(v)
	m = max(v)
	print('O MAIOR IMC DA TURMA EH:', m)
	if (i<17):
		print('MUITO ABAIXO DO PESO')
	elif (17<i<18.49):
		print('ABAIXO DO PESO')
	elif (18.5<i<24.99):
		print('PESO NORMAL')
	elif (25<i<29.99):
		print('ACIMA DO PESO')
	elif (30<i<34.99):
		print('OBESIDADE')
	elif (35<i<39.99):
		print('OBESIDADE SEVERA')
	elif (i>40):
		print('OBESIDADE MORBIDA')
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 20:44:52) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros

for i in P:
	v = P/(A*A)
	print(round(i, 2))
	m = max(v)
	print('O MAIOR IMC DA TURMA EH:', m)
	if (i<17):
		print('MUITO ABAIXO DO PESO')
	elif (17<i<18.49):
		print('ABAIXO DO PESO')
	elif (18.5<i<24.99):
		print('PESO NORMAL')
	elif (25<i<29.99):
		print('ACIMA DO PESO')
	elif (30<i<34.99):
		print('OBESIDADE')
	elif (35<i<39.99):
		print('OBESIDADE SEVERA')
	elif (i>40):
		print('OBESIDADE MORBIDA')
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 20:46:15) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros

for i in P:
	v = P/(A*A)
	print(round(v[i], 2))
	m = max(v)
	print('O MAIOR IMC DA TURMA EH:', m)
	if (i<17):
		print('MUITO ABAIXO DO PESO')
	elif (17<i<18.49):
		print('ABAIXO DO PESO')
	elif (18.5<i<24.99):
		print('PESO NORMAL')
	elif (25<i<29.99):
		print('ACIMA DO PESO')
	elif (30<i<34.99):
		print('OBESIDADE')
	elif (35<i<39.99):
		print('OBESIDADE SEVERA')
	elif (i>40):
		print('OBESIDADE MORBIDA')
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 20:47:48) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros

for i in P:
	v = round(P/(A*A))
	print(v)
	m = max(v)
	print('O MAIOR IMC DA TURMA EH:', m)
	if (i<17):
		print('MUITO ABAIXO DO PESO')
	elif (17<i<18.49):
		print('ABAIXO DO PESO')
	elif (18.5<i<24.99):
		print('PESO NORMAL')
	elif (25<i<29.99):
		print('ACIMA DO PESO')
	elif (30<i<34.99):
		print('OBESIDADE')
	elif (35<i<39.99):
		print('OBESIDADE SEVERA')
	elif (i>40):
		print('OBESIDADE MORBIDA')
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 20:48:42) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = P/(A*A)

for i in P:
	v = round(V, 2)
	print(v)
	m = max(v)
	print('O MAIOR IMC DA TURMA EH:', m)
	if (i<17):
		print('MUITO ABAIXO DO PESO')
	elif (17<i<18.49):
		print('ABAIXO DO PESO')
	elif (18.5<i<24.99):
		print('PESO NORMAL')
	elif (25<i<29.99):
		print('ACIMA DO PESO')
	elif (30<i<34.99):
		print('OBESIDADE')
	elif (35<i<39.99):
		print('OBESIDADE SEVERA')
	elif (i>40):
		print('OBESIDADE MORBIDA')
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 20:52:10) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = round(P/(A*A, 2)

for i in P:
	v = V
	print(v)
	m = max(v)
	print('O MAIOR IMC DA TURMA EH:', m)
	if (i<17):
		print('MUITO ABAIXO DO PESO')
	elif (17<i<18.49):
		print('ABAIXO DO PESO')
	elif (18.5<i<24.99):
		print('PESO NORMAL')
	elif (25<i<29.99):
		print('ACIMA DO PESO')
	elif (30<i<34.99):
		print('OBESIDADE')
	elif (35<i<39.99):
		print('OBESIDADE SEVERA')
	elif (i>40):
		print('OBESIDADE MORBIDA')
	
-- ERROR:
File "XXXX", line 7
    for i in P:
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 20:52:45) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = round(P/(A*A, 2)

for i in range(P):
	v = V
	print(v)
	m = max(v)
	print('O MAIOR IMC DA TURMA EH:', m)
	if (i<17):
		print('MUITO ABAIXO DO PESO')
	elif (17<i<18.49):
		print('ABAIXO DO PESO')
	elif (18.5<i<24.99):
		print('PESO NORMAL')
	elif (25<i<29.99):
		print('ACIMA DO PESO')
	elif (30<i<34.99):
		print('OBESIDADE')
	elif (35<i<39.99):
		print('OBESIDADE SEVERA')
	elif (i>40):
		print('OBESIDADE MORBIDA')
	
-- ERROR:
File "XXXX", line 7
    for i in range(P):
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 20:53:18) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = 

for i in P:
	v = P/(A*A)
	print(v)
	m = max(v)
	print('O MAIOR IMC DA TURMA EH:', m)
	if (i<17):
		print('MUITO ABAIXO DO PESO')
	elif (17<i<18.49):
		print('ABAIXO DO PESO')
	elif (18.5<i<24.99):
		print('PESO NORMAL')
	elif (25<i<29.99):
		print('ACIMA DO PESO')
	elif (30<i<34.99):
		print('OBESIDADE')
	elif (35<i<39.99):
		print('OBESIDADE SEVERA')
	elif (i>40):
		print('OBESIDADE MORBIDA')
	
-- ERROR:
File "XXXX", line 5
    V = 
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 20:53:33) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))

for i in P:
	v = P/(A*A)
	print(v)
	m = max(v)
	print('O MAIOR IMC DA TURMA EH:', m)
	if (i<17):
		print('MUITO ABAIXO DO PESO')
	elif (17<i<18.49):
		print('ABAIXO DO PESO')
	elif (18.5<i<24.99):
		print('PESO NORMAL')
	elif (25<i<29.99):
		print('ACIMA DO PESO')
	elif (30<i<34.99):
		print('OBESIDADE')
	elif (35<i<39.99):
		print('OBESIDADE SEVERA')
	elif (i>40):
		print('OBESIDADE MORBIDA')
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 20:54:49) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))

for i in range(P):
	v = P/(A*A)
	print(v)
	m = max(v)
	print('O MAIOR IMC DA TURMA EH:', m)
	if (i<17):
		print('MUITO ABAIXO DO PESO')
	elif (17<i<18.49):
		print('ABAIXO DO PESO')
	elif (18.5<i<24.99):
		print('PESO NORMAL')
	elif (25<i<29.99):
		print('ACIMA DO PESO')
	elif (30<i<34.99):
		print('OBESIDADE')
	elif (35<i<39.99):
		print('OBESIDADE SEVERA')
	elif (i>40):
		print('OBESIDADE MORBIDA')
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 20:57:51) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))

for i in range(size(P)):
	v = P/(A*A)
	print(v)
	m = max(v)
	print('O MAIOR IMC DA TURMA EH:', m)
	if (i<17):
		print('MUITO ABAIXO DO PESO')
	elif (17<i<18.49):
		print('ABAIXO DO PESO')
	elif (18.5<i<24.99):
		print('PESO NORMAL')
	elif (25<i<29.99):
		print('ACIMA DO PESO')
	elif (30<i<34.99):
		print('OBESIDADE')
	elif (35<i<39.99):
		print('OBESIDADE SEVERA')
	elif (i>40):
		print('OBESIDADE MORBIDA')
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 20:58:56) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))

for i in range(size(P)):
	v = P/(A*A)
	print(round(v, 2)
	m = max(v)
	print('O MAIOR IMC DA TURMA EH:', m)
	if (i<17):
		print('MUITO ABAIXO DO PESO')
	elif (17<i<18.49):
		print('ABAIXO DO PESO')
	elif (18.5<i<24.99):
		print('PESO NORMAL')
	elif (25<i<29.99):
		print('ACIMA DO PESO')
	elif (30<i<34.99):
		print('OBESIDADE')
	elif (35<i<39.99):
		print('OBESIDADE SEVERA')
	elif (i>40):
		print('OBESIDADE MORBIDA')
	
-- ERROR:
File "XXXX", line 9
    m = max(v)
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 20:59:13) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))

for i in range(size(P)):
	v = P/(A*A)
	print(round(v, 2)
	m = max(v[i])
	print('O MAIOR IMC DA TURMA EH:', m)
	if (i<17):
		print('MUITO ABAIXO DO PESO')
	elif (17<i<18.49):
		print('ABAIXO DO PESO')
	elif (18.5<i<24.99):
		print('PESO NORMAL')
	elif (25<i<29.99):
		print('ACIMA DO PESO')
	elif (30<i<34.99):
		print('OBESIDADE')
	elif (35<i<39.99):
		print('OBESIDADE SEVERA')
	elif (i>40):
		print('OBESIDADE MORBIDA')
	
-- ERROR:
File "XXXX", line 9
    m = max(v[i])
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 20:59:34) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))

for i in range(size(P)):
	v = P/(A*A)
	print(round(v, 2)
	m = max(v)
	print('O MAIOR IMC DA TURMA EH:', m)
	if (i<17):
		print('MUITO ABAIXO DO PESO')
	elif (17<i<18.49):
		print('ABAIXO DO PESO')
	elif (18.5<i<24.99):
		print('PESO NORMAL')
	elif (25<i<29.99):
		print('ACIMA DO PESO')
	elif (30<i<34.99):
		print('OBESIDADE')
	elif (35<i<39.99):
		print('OBESIDADE SEVERA')
	elif (i>40):
		print('OBESIDADE MORBIDA')
	
-- ERROR:
File "XXXX", line 9
    m = max(v)
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 20:59:57) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))

for i in range(size(P)):
	v = P/(A*A)
	print(round(v, 2)
	m = max(i)
	print('O MAIOR IMC DA TURMA EH:', i)
	if (i<17):
		print('MUITO ABAIXO DO PESO')
	elif (17<i<18.49):
		print('ABAIXO DO PESO')
	elif (18.5<i<24.99):
		print('PESO NORMAL')
	elif (25<i<29.99):
		print('ACIMA DO PESO')
	elif (30<i<34.99):
		print('OBESIDADE')
	elif (35<i<39.99):
		print('OBESIDADE SEVERA')
	elif (i>40):
		print('OBESIDADE MORBIDA')
	
-- ERROR:
File "XXXX", line 9
    m = max(i)
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 21:00:15) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))

for i in range(size(P)):
	v = P/(A*A)
	print(v)
	m = max(v)
	print('O MAIOR IMC DA TURMA EH:', m)
	if (i<17):
		print('MUITO ABAIXO DO PESO')
	elif (17<i<18.49):
		print('ABAIXO DO PESO')
	elif (18.5<i<24.99):
		print('PESO NORMAL')
	elif (25<i<29.99):
		print('ACIMA DO PESO')
	elif (30<i<34.99):
		print('OBESIDADE')
	elif (35<i<39.99):
		print('OBESIDADE SEVERA')
	elif (i>40):
		print('OBESIDADE MORBIDA')
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 21:01:13) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))

for i in range(size(P)):
	v = P/(A*A)
	print(v)
	m = max(v)
	print('O MAIOR IMC DA TURMA EH:', m)
	if (v<17):
		print('MUITO ABAIXO DO PESO')
	elif (17<v<18.49):
		print('ABAIXO DO PESO')
	elif (18.5<v<24.99):
		print('PESO NORMAL')
	elif (25<v<29.99):
		print('ACIMA DO PESO')
	elif (30<v<34.99):
		print('OBESIDADE')
	elif (35<v<39.99):
		print('OBESIDADE SEVERA')
	elif (v>40):
		print('OBESIDADE MORBIDA')
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 21:02:36) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))

for i in range(size(P)):
	v = P/(A*A)
	print(v)
	m = max(v)
	print('O MAIOR IMC DA TURMA EH:', m)
	if (v[i]<17):
		print('MUITO ABAIXO DO PESO')
	elif (17<v[i]<18.49):
		print('ABAIXO DO PESO')
	elif (18.5<v[i]<24.99):
		print('PESO NORMAL')
	elif (25<v[i]<29.99):
		print('ACIMA DO PESO')
	elif (30<v[i]<34.99):
		print('OBESIDADE')
	elif (35<v[i]<39.99):
		print('OBESIDADE SEVERA')
	elif (v[i]>40):
		print('OBESIDADE MORBIDA')
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 21:03:54) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))

for i in range(size(P)):
	v = P/(A*A)
	print(v)
	m = max(v)
	print(round('O MAIOR IMC DA TURMA EH:', m, 2))
	if (v[i]<17):
		print('MUITO ABAIXO DO PESO')
	elif (17<v[i]<18.49):
		print('ABAIXO DO PESO')
	elif (18.5<v[i]<24.99):
		print('PESO NORMAL')
	elif (25<v[i]<29.99):
		print('ACIMA DO PESO')
	elif (30<v[i]<34.99):
		print('OBESIDADE')
	elif (35<v[i]<39.99):
		print('OBESIDADE SEVERA')
	elif (v[i]>40):
		print('OBESIDADE MORBIDA')
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 21:06:18) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))

for i in range(size(P)):
	v = P/(A*A)
	print(round(v, 2))
	m = max(v)
	print('O MAIOR IMC DA TURMA EH:', m)
	if (v[i]<17):
		print('MUITO ABAIXO DO PESO')
	elif (17<v[i]<18.49):
		print('ABAIXO DO PESO')
	elif (18.5<v[i]<24.99):
		print('PESO NORMAL')
	elif (25<v[i]<29.99):
		print('ACIMA DO PESO')
	elif (30<v[i]<34.99):
		print('OBESIDADE')
	elif (35<v[i]<39.99):
		print('OBESIDADE SEVERA')
	elif (v[i]>40):
		print('OBESIDADE MORBIDA')
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 21:46:59) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))

for i in range(size(P)):
	v = P/(A*A)
	print(v)
	m = max(v)
	print('O MAIOR IMC DA TURMA EH:', m)
	if (v[i]<17):
		print('MUITO ABAIXO DO PESO')
	elif (17<v[i]<18.49):
		print('ABAIXO DO PESO')
	elif (18.5<v[i]<24.99):
		print('PESO NORMAL')
	elif (25<v[i]<29.99):
		print('ACIMA DO PESO')
	elif (30<v[i]<34.99):
		print('OBESIDADE')
	elif (35<v[i]<39.99):
		print('OBESIDADE SEVERA')
	elif (v[i]>40):
		print('OBESIDADE MORBIDA')
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 22:04:39) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))

for i in range(size(P)):
	v = P[i]/(A[i]*A[i])
	print(round(v, 2))
	m = max(v)
	print('O MAIOR IMC DA TURMA EH:', m)
	if (v[i]<17):
		print('MUITO ABAIXO DO PESO')
	elif (17<v[i]<18.49):
		print('ABAIXO DO PESO')
	elif (18.5<v[i]<24.99):
		print('PESO NORMAL')
	elif (25<v[i]<29.99):
		print('ACIMA DO PESO')
	elif (30<v[i]<34.99):
		print('OBESIDADE')
	elif (35<v[i]<39.99):
		print('OBESIDADE SEVERA')
	elif (v[i]>40):
		print('OBESIDADE MORBIDA')
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 22:05:20) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))

for i in range(size(P)):
	v = P[i]/(A[i]*A[i])
	print(round(v, 2))
	m = max(v[i])
	print('O MAIOR IMC DA TURMA EH:', m)
	if (v[i]<17):
		print('MUITO ABAIXO DO PESO')
	elif (17<v[i]<18.49):
		print('ABAIXO DO PESO')
	elif (18.5<v[i]<24.99):
		print('PESO NORMAL')
	elif (25<v[i]<29.99):
		print('ACIMA DO PESO')
	elif (30<v[i]<34.99):
		print('OBESIDADE')
	elif (35<v[i]<39.99):
		print('OBESIDADE SEVERA')
	elif (v[i]>40):
		print('OBESIDADE MORBIDA')
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 15:24:13) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros(size(P))


for i in range(size(P)):
	V[i] = round(P[i]/(A[i]*A[i]), 2)
m = max(V)
print('O MAIOR IMC DA TURMA EH:', m)
if (v[i]<17):
	print('MUITO ABAIXO DO PESO')
elif (17<v[i]<18.49):
	print('ABAIXO DO PESO')
elif (18.5<v[i]<24.99):
	print('PESO NORMAL')
elif (25<v[i]<29.99):
	print('ACIMA DO PESO')
elif (30<v[i]<34.99):
	print('OBESIDADE')
elif (35<v[i]<39.99):
	print('OBESIDADE SEVERA')
elif (v[i]>40):
	print('OBESIDADE MORBIDA')
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 15:25:14) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros(size(P))


for i in range(size(P)):
	V[i] = round(P[i]/(A[i]*A[i]), 2)
m = max(V)
print('O MAIOR IMC DA TURMA EH:', m)
if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
elif (17<V[i]<18.49):
	print('ABAIXO DO PESO')
elif (18.5<V[i]<24.99):
	print('PESO NORMAL')
elif (25<V[i]<29.99):
	print('ACIMA DO PESO')
elif (30<V[i]<34.99):
	print('OBESIDADE')
elif (35<V[i]<39.99):
	print('OBESIDADE SEVERA')
elif (V[i]>40):
	print('OBESIDADE MORBIDA')
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:25:37) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros(size(P))


for i in range(size(P)):
	V[i] = round(P[i]/(A[i]*A[i]), 2)
m = max(V)
print('O MAIOR IMC DA TURMA EH:', m)
if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
elif (17<V[i]<18.49):
	print('ABAIXO DO PESO')
elif (18.5<V[i]<24.99):
	print('PESO NORMAL')
elif (25<V[i]<29.99):
	print('ACIMA DO PESO')
elif (30<V[i]<34.99):
	print('OBESIDADE')
elif (35<V[i]<39.99):
	print('OBESIDADE SEVERA')
elif (V[i]>40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
1.23709
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:27:13) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round(P[i]/(A[i]*A[i]), 2)
m = max(V)
print('O MAIOR IMC DA TURMA EH:', m)
if (V<17):
	print('MUITO ABAIXO DO PESO')
elif (17<V<18.49):
	print('ABAIXO DO PESO')
elif (18.5<V<24.99):
	print('PESO NORMAL')
elif (25<V<29.99):
	print('ACIMA DO PESO')
elif (30<V<34.99):
	print('OBESIDADE')
elif (35<V<39.99):
	print('OBESIDADE SEVERA')
elif (V>40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
1.23974
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1807/2573/main.py", line 11, in <module>
    if (V<17):
ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 15:30:16) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/(A[i])*(A[i]), 2)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH:', m)

if (V<17):
	print('MUITO ABAIXO DO PESO')
elif (17<V<18.49):
	print('ABAIXO DO PESO')
elif (18.5<V<24.99):
	print('PESO NORMAL')
elif (25<V<29.99):
	print('ACIMA DO PESO')
elif (30<V<34.99):
	print('OBESIDADE')
elif (35<V<39.99):
	print('OBESIDADE SEVERA')
elif (V>40):
	print('OBESIDADE MORBIDA')
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 15:31:37) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/(A[i])*(A[i]), 2)
m = max(V)

print('O MAIOR IMC DA TURMA EH:', m)
if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
elif (17<V[i]<18.49):
	print('ABAIXO DO PESO')
elif (18.5<V[i]<24.99):
	print('PESO NORMAL')
elif (25<V[i]<29.99):
	print('ACIMA DO PESO')
elif (30<V[i]<34.99):
	print('OBESIDADE')
elif (35<V[i]<39.99):
	print('OBESIDADE SEVERA')
elif (V[i]>40):
	print('OBESIDADE MORBIDA')
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 15:32:22) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/(A[i])*(A[i]), 2)
	print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH:', m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
elif (17<V[i]<18.49):
	print('ABAIXO DO PESO')
elif (18.5<V[i]<24.99):
	print('PESO NORMAL')
elif (25<V[i]<29.99):
	print('ACIMA DO PESO')
elif (30<V[i]<34.99):
	print('OBESIDADE')
elif (35<V[i]<39.99):
	print('OBESIDADE SEVERA')
elif (V[i]>40):
	print('OBESIDADE MORBIDA')
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 15:33:04) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/(A[i])*(A[i]), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH:', m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
elif (17<V[i]<18.49):
	print('ABAIXO DO PESO')
elif (18.5<V[i]<24.99):
	print('PESO NORMAL')
elif (25<V[i]<29.99):
	print('ACIMA DO PESO')
elif (30<V[i]<34.99):
	print('OBESIDADE')
elif (35<V[i]<39.99):
	print('OBESIDADE SEVERA')
elif (V[i]>40):
	print('OBESIDADE MORBIDA')
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 15:33:51) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH:', m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
elif (17<V[i]<18.49):
	print('ABAIXO DO PESO')
elif (18.5<V[i]<24.99):
	print('PESO NORMAL')
elif (25<V[i]<29.99):
	print('ACIMA DO PESO')
elif (30<V[i]<34.99):
	print('OBESIDADE')
elif (35<V[i]<39.99):
	print('OBESIDADE SEVERA')
elif (V[i]>40):
	print('OBESIDADE MORBIDA')
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:34:33) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH:', m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
elif (17<V[i]<18.49):
	print('ABAIXO DO PESO')
elif (18.5<V[i]<24.99):
	print('PESO NORMAL')
elif (25<V[i]<29.99):
	print('ACIMA DO PESO')
elif (30<V[i]<34.99):
	print('OBESIDADE')
elif (35<V[i]<39.99):
	print('OBESIDADE SEVERA')
elif (V[i]>40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
1.0714
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:38:14) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH:', m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
elif (17<V[i] and V[i]<18.49):
	print('ABAIXO DO PESO')
elif (18.5<V[i] and V[i]<24.99):
	print('PESO NORMAL')
elif (25<V[i] and V[i]<29.99):
	print('ACIMA DO PESO')
elif (30<V[i] and V[i]<34.99):
	print('OBESIDADE')
elif (35<V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
elif (V[i]>40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
0.77983
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:41:01) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH:', m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
elif (17<=V[i] and V[i]<18.49):
	print('ABAIXO DO PESO')
elif (18.5<=V[i] and V[i]<24.99):
	print('PESO NORMAL')
elif (25<=V[i] and V[i]<29.99):
	print('ACIMA DO PESO')
elif (30<=V[i] and V[i]<34.99):
	print('OBESIDADE')
elif (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
elif (V[i]>40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
1.2389
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:41:29) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH:', m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
elif (17<=V[i] and V[i]<=18.49):
	print('ABAIXO DO PESO')
elif (18.5<=V[i] and V[i]<=24.99):
	print('PESO NORMAL')
elif (25<=V[i] and V[i]<=29.99):
	print('ACIMA DO PESO')
elif (30<=V[i] and V[i]<=34.99):
	print('OBESIDADE')
elif (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
elif (V[i]>40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
0.762054
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:42:00) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH:', m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
elif (17<=V[i] and V[i]<=18.49):
	print('ABAIXO DO PESO')
elif (18.5<=V[i] and V[i]<=24.99):
	print('PESO NORMAL')
elif (25<=V[i] and V[i]<=29.99):
	print('ACIMA DO PESO')
elif (30<=V[i] and V[i]<=34.99):
	print('OBESIDADE')
elif (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
elif (V[i]>40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
1.83656
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:42:01) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH:', m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
elif (17<=V[i] and V[i]<=18.49):
	print('ABAIXO DO PESO')
elif (18.5<=V[i] and V[i]<=24.99):
	print('PESO NORMAL')
elif (25<=V[i] and V[i]<=29.99):
	print('ACIMA DO PESO')
elif (30<=V[i] and V[i]<=34.99):
	print('OBESIDADE')
elif (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
elif (V[i]>40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
6.43685
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:42:02) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH:', m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
elif (17<=V[i] and V[i]<=18.49):
	print('ABAIXO DO PESO')
elif (18.5<=V[i] and V[i]<=24.99):
	print('PESO NORMAL')
elif (25<=V[i] and V[i]<=29.99):
	print('ACIMA DO PESO')
elif (30<=V[i] and V[i]<=34.99):
	print('OBESIDADE')
elif (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
elif (V[i]>40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
8.38374
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:42:03) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH:', m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
elif (17<=V[i] and V[i]<=18.49):
	print('ABAIXO DO PESO')
elif (18.5<=V[i] and V[i]<=24.99):
	print('PESO NORMAL')
elif (25<=V[i] and V[i]<=29.99):
	print('ACIMA DO PESO')
elif (30<=V[i] and V[i]<=34.99):
	print('OBESIDADE')
elif (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
elif (V[i]>40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
8.2693
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:42:04) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH:', m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
elif (17<=V[i] and V[i]<=18.49):
	print('ABAIXO DO PESO')
elif (18.5<=V[i] and V[i]<=24.99):
	print('PESO NORMAL')
elif (25<=V[i] and V[i]<=29.99):
	print('ACIMA DO PESO')
elif (30<=V[i] and V[i]<=34.99):
	print('OBESIDADE')
elif (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
elif (V[i]>40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
8.53561
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:42:05) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH:', m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
elif (17<=V[i] and V[i]<=18.49):
	print('ABAIXO DO PESO')
elif (18.5<=V[i] and V[i]<=24.99):
	print('PESO NORMAL')
elif (25<=V[i] and V[i]<=29.99):
	print('ACIMA DO PESO')
elif (30<=V[i] and V[i]<=34.99):
	print('OBESIDADE')
elif (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
elif (V[i]>40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
9.20101
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:42:19) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH:', m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
elif (17<=V[i] and V[i]<=18.49):
	print('ABAIXO DO PESO')
elif (18.5<=V[i] and V[i]<=24.99):
	print('PESO NORMAL')
elif (25<=V[i] and V[i]<=29.99):
	print('ACIMA DO PESO')
elif (30<=V[i] and V[i]<=34.99):
	print('OBESIDADE')
elif (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
elif (V[i]>40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
6.06746
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:42:20) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH:', m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
elif (17<=V[i] and V[i]<=18.49):
	print('ABAIXO DO PESO')
elif (18.5<=V[i] and V[i]<=24.99):
	print('PESO NORMAL')
elif (25<=V[i] and V[i]<=29.99):
	print('ACIMA DO PESO')
elif (30<=V[i] and V[i]<=34.99):
	print('OBESIDADE')
elif (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
elif (V[i]>40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
6.54784
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:42:21) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH:', m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
elif (17<=V[i] and V[i]<=18.49):
	print('ABAIXO DO PESO')
elif (18.5<=V[i] and V[i]<=24.99):
	print('PESO NORMAL')
elif (25<=V[i] and V[i]<=29.99):
	print('ACIMA DO PESO')
elif (30<=V[i] and V[i]<=34.99):
	print('OBESIDADE')
elif (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
elif (V[i]>40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
6.53239
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:42:23) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH:', m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
elif (17<=V[i] and V[i]<=18.49):
	print('ABAIXO DO PESO')
elif (18.5<=V[i] and V[i]<=24.99):
	print('PESO NORMAL')
elif (25<=V[i] and V[i]<=29.99):
	print('ACIMA DO PESO')
elif (30<=V[i] and V[i]<=34.99):
	print('OBESIDADE')
elif (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
elif (V[i]>40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
6.45175
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:42:24) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH:', m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
elif (17<=V[i] and V[i]<=18.49):
	print('ABAIXO DO PESO')
elif (18.5<=V[i] and V[i]<=24.99):
	print('PESO NORMAL')
elif (25<=V[i] and V[i]<=29.99):
	print('ACIMA DO PESO')
elif (30<=V[i] and V[i]<=34.99):
	print('OBESIDADE')
elif (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
elif (V[i]>40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
6.68828
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:42:25) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH:', m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
elif (17<=V[i] and V[i]<=18.49):
	print('ABAIXO DO PESO')
elif (18.5<=V[i] and V[i]<=24.99):
	print('PESO NORMAL')
elif (25<=V[i] and V[i]<=29.99):
	print('ACIMA DO PESO')
elif (30<=V[i] and V[i]<=34.99):
	print('OBESIDADE')
elif (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
elif (V[i]>40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
6.3116
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:42:39) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH:', m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
elif (17<=V[i] and V[i]<=18.49):
	print('ABAIXO DO PESO')
elif (18.5<=V[i] and V[i]<=24.99):
	print('PESO NORMAL')
elif (25<=V[i] and V[i]<=29.99):
	print('ACIMA DO PESO')
elif (30<=V[i] and V[i]<=34.99):
	print('OBESIDADE')
elif (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
elif (V[i]>40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
6.53762
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:42:40) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH:', m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
elif (17<=V[i] and V[i]<=18.49):
	print('ABAIXO DO PESO')
elif (18.5<=V[i] and V[i]<=24.99):
	print('PESO NORMAL')
elif (25<=V[i] and V[i]<=29.99):
	print('ACIMA DO PESO')
elif (30<=V[i] and V[i]<=34.99):
	print('OBESIDADE')
elif (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
elif (V[i]>40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
6.70345
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:42:41) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH:', m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
elif (17<=V[i] and V[i]<=18.49):
	print('ABAIXO DO PESO')
elif (18.5<=V[i] and V[i]<=24.99):
	print('PESO NORMAL')
elif (25<=V[i] and V[i]<=29.99):
	print('ACIMA DO PESO')
elif (30<=V[i] and V[i]<=34.99):
	print('OBESIDADE')
elif (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
elif (V[i]>40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
6.71676
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:42:42) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH:', m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
elif (17<=V[i] and V[i]<=18.49):
	print('ABAIXO DO PESO')
elif (18.5<=V[i] and V[i]<=24.99):
	print('PESO NORMAL')
elif (25<=V[i] and V[i]<=29.99):
	print('ACIMA DO PESO')
elif (30<=V[i] and V[i]<=34.99):
	print('OBESIDADE')
elif (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
elif (V[i]>40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
6.61671
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:42:43) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH:', m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
elif (17<=V[i] and V[i]<=18.49):
	print('ABAIXO DO PESO')
elif (18.5<=V[i] and V[i]<=24.99):
	print('PESO NORMAL')
elif (25<=V[i] and V[i]<=29.99):
	print('ACIMA DO PESO')
elif (30<=V[i] and V[i]<=34.99):
	print('OBESIDADE')
elif (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
elif (V[i]>40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
6.53064
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:42:44) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH:', m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
elif (17<=V[i] and V[i]<=18.49):
	print('ABAIXO DO PESO')
elif (18.5<=V[i] and V[i]<=24.99):
	print('PESO NORMAL')
elif (25<=V[i] and V[i]<=29.99):
	print('ACIMA DO PESO')
elif (30<=V[i] and V[i]<=34.99):
	print('OBESIDADE')
elif (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
elif (V[i]>40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
6.72133
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:42:58) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH:', m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
elif (17<=V[i] and V[i]<=18.49):
	print('ABAIXO DO PESO')
elif (18.5<=V[i] and V[i]<=24.99):
	print('PESO NORMAL')
elif (25<=V[i] and V[i]<=29.99):
	print('ACIMA DO PESO')
elif (30<=V[i] and V[i]<=34.99):
	print('OBESIDADE')
elif (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
elif (V[i]>40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
6.39843
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:42:59) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH:', m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
elif (17<=V[i] and V[i]<=18.49):
	print('ABAIXO DO PESO')
elif (18.5<=V[i] and V[i]<=24.99):
	print('PESO NORMAL')
elif (25<=V[i] and V[i]<=29.99):
	print('ACIMA DO PESO')
elif (30<=V[i] and V[i]<=34.99):
	print('OBESIDADE')
elif (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
elif (V[i]>40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
6.45502
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:43:00) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH:', m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
elif (17<=V[i] and V[i]<=18.49):
	print('ABAIXO DO PESO')
elif (18.5<=V[i] and V[i]<=24.99):
	print('PESO NORMAL')
elif (25<=V[i] and V[i]<=29.99):
	print('ACIMA DO PESO')
elif (30<=V[i] and V[i]<=34.99):
	print('OBESIDADE')
elif (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
elif (V[i]>40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
6.6094
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:43:01) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH:', m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
elif (17<=V[i] and V[i]<=18.49):
	print('ABAIXO DO PESO')
elif (18.5<=V[i] and V[i]<=24.99):
	print('PESO NORMAL')
elif (25<=V[i] and V[i]<=29.99):
	print('ACIMA DO PESO')
elif (30<=V[i] and V[i]<=34.99):
	print('OBESIDADE')
elif (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
elif (V[i]>40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
6.69407
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:43:01) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH:', m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
elif (17<=V[i] and V[i]<=18.49):
	print('ABAIXO DO PESO')
elif (18.5<=V[i] and V[i]<=24.99):
	print('PESO NORMAL')
elif (25<=V[i] and V[i]<=29.99):
	print('ACIMA DO PESO')
elif (30<=V[i] and V[i]<=34.99):
	print('OBESIDADE')
elif (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
elif (V[i]>40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
6.83295
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:43:01) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH:', m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
elif (17<=V[i] and V[i]<=18.49):
	print('ABAIXO DO PESO')
elif (18.5<=V[i] and V[i]<=24.99):
	print('PESO NORMAL')
elif (25<=V[i] and V[i]<=29.99):
	print('ACIMA DO PESO')
elif (30<=V[i] and V[i]<=34.99):
	print('OBESIDADE')
elif (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
elif (V[i]>40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
6.72796
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:43:05) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH:', m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
elif (17<=V[i] and V[i]<=18.49):
	print('ABAIXO DO PESO')
elif (18.5<=V[i] and V[i]<=24.99):
	print('PESO NORMAL')
elif (25<=V[i] and V[i]<=29.99):
	print('ACIMA DO PESO')
elif (30<=V[i] and V[i]<=34.99):
	print('OBESIDADE')
elif (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
elif (V[i]>40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
2.64582
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:43:06) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH:', m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
elif (17<V[i]<18.49):
	print('ABAIXO DO PESO')
elif (18.5<V[i]<24.99):
	print('PESO NORMAL')
elif (25<V[i]<29.99):
	print('ACIMA DO PESO')
elif (30<V[i]<34.99):
	print('OBESIDADE')
elif (35<V[i]<39.99):
	print('OBESIDADE SEVERA')
elif (V[i]>40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
1.52505
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1807/2573/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:44:22) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH:', m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
elif (17<=V[i]<=18.49):
	print('ABAIXO DO PESO')
elif (18.5<=V[i]<=24.99):
	print('PESO NORMAL')
elif (25<=V[i]<=29.99):
	print('ACIMA DO PESO')
elif (30<=V[i]<=34.99):
	print('OBESIDADE')
elif (35<=V[i]<=39.99):
	print('OBESIDADE SEVERA')
elif (V[i]>=40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
1.06221
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:46:54) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH:', m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
if (17<=V[i]<=18.49):
	print('ABAIXO DO PESO')
if (18.5<=V[i]<=24.99):
	print('PESO NORMAL')
if (25<=V[i]<=29.99):
	print('ACIMA DO PESO')
if (30<=V[i]<=34.99):
	print('OBESIDADE')
if (35<=V[i]<=39.99):
	print('OBESIDADE SEVERA')
if (V[i]>=40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
1.17226
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:47:38) 
-- CODE:
from numpy import *

P = array(eval(input()))
A = array(eval(input()))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH: ',m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
if (17<=V[i]<=18.49):
	print('ABAIXO DO PESO')
if (18.5<=V[i]<=24.99):
	print('PESO NORMAL')
if (25<=V[i]<=29.99):
	print('ACIMA DO PESO')
if (30<=V[i]<=34.99):
	print('OBESIDADE')
if (35<=V[i]<=39.99):
	print('OBESIDADE SEVERA')
if (V[i]>=40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
1.11648
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH:  24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH:  17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH:  37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:48:09) 
-- CODE:
from numpy import *

P = array(eval(input('')))
A = array(eval(input('')))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH: ',m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
if (17<=V[i]<=18.49):
	print('ABAIXO DO PESO')
if (18.5<=V[i]<=24.99):
	print('PESO NORMAL')
if (25<=V[i]<=29.99):
	print('ACIMA DO PESO')
if (30<=V[i]<=34.99):
	print('OBESIDADE')
if (35<=V[i]<=39.99):
	print('OBESIDADE SEVERA')
if (V[i]>=40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
1.01818
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH:  24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH:  17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH:  37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:51:52) 
-- CODE:
from numpy import *

P = array(eval(input('')))
A = array(eval(input('')))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH: ',m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
if (17<=V[i]<18.49):
	print('ABAIXO DO PESO')
if (18.5<=V[i]<24.99):
	print('PESO NORMAL')
if (25<=V[i]<29.99):
	print('ACIMA DO PESO')
if (30<=V[i]<34.99):
	print('OBESIDADE')
if (35<=V[i]<39.99):
	print('OBESIDADE SEVERA')
if (V[i]>=40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
1.24911
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH:  24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH:  17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH:  37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:52:53) 
-- CODE:
from numpy import *

P = array(eval(input('')))
A = array(eval(input('')))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH: ',m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
if (17<=V[i] and V[i]<18.49):
	print('ABAIXO DO PESO')
if (18.5<=V[i] and V[i]<24.99):
	print('PESO NORMAL')
if (25<=V[i] and V[i]<29.99):
	print('ACIMA DO PESO')
if (30<=V[i] and V[i]<34.99):
	print('OBESIDADE')
if (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
if (V[i]>=40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
1.18023
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH:  24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH:  17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH:  37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:53:56) 
-- CODE:
from numpy import *

P = array(eval(input('')))
A = array(eval(input('')))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH: ',m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
if (17<=V[i] and V[i]<18.49):
	print('ABAIXO DO PESO')
if (18.5<=V[i] and V[i]<24.99):
	print('PESO NORMAL')
if (25<=V[i] and V[i]<29.99):
	print('ACIMA DO PESO')
if (30<=V[i] and V[i]<34.99):
	print('OBESIDADE')
if (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
if (V[i]>=40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
4.03321
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH:  24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH:  17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH:  37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:53:57) 
-- CODE:
from numpy import *

P = array(eval(input('')))
A = array(eval(input('')))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH: ',m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
if (17<=V[i] and V[i]<18.49):
	print('ABAIXO DO PESO')
if (18.5<=V[i] and V[i]<24.99):
	print('PESO NORMAL')
if (25<=V[i] and V[i]<29.99):
	print('ACIMA DO PESO')
if (30<=V[i] and V[i]<34.99):
	print('OBESIDADE')
if (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
if (V[i]>=40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
1.88407
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH:  24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH:  17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH:  37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:53:58) 
-- CODE:
from numpy import *

P = array(eval(input('')))
A = array(eval(input('')))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH: ',m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
if (17<=V[i] and V[i]<18.49):
	print('ABAIXO DO PESO')
if (18.5<=V[i] and V[i]<24.99):
	print('PESO NORMAL')
if (25<=V[i] and V[i]<29.99):
	print('ACIMA DO PESO')
if (30<=V[i] and V[i]<34.99):
	print('OBESIDADE')
if (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
if (V[i]>=40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
7.20188
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH:  17.44
ABAIXO DO PESO
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH:  17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH:  37.79
OBESIDADE
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:53:59) 
-- CODE:
from numpy import *

P = array(eval(input('')))
A = array(eval(input('')))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH: ',m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
if (17<=V[i] and V[i]<18.49):
	print('ABAIXO DO PESO')
if (18.5<=V[i] and V[i]<24.99):
	print('PESO NORMAL')
if (25<=V[i] and V[i]<29.99):
	print('ACIMA DO PESO')
if (30<=V[i] and V[i]<34.99):
	print('OBESIDADE')
if (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
if (V[i]>=40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
9.56176
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH:  17.44
ABAIXO DO PESO
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH:  17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH:  37.79
OBESIDADE
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:54:00) 
-- CODE:
from numpy import *

P = array(eval(input('')))
A = array(eval(input('')))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH: ',m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
if (17<=V[i] and V[i]<18.49):
	print('ABAIXO DO PESO')
if (18.5<=V[i] and V[i]<24.99):
	print('PESO NORMAL')
if (25<=V[i] and V[i]<29.99):
	print('ACIMA DO PESO')
if (30<=V[i] and V[i]<34.99):
	print('OBESIDADE')
if (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
if (V[i]>=40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
9.15
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH:  17.44
ABAIXO DO PESO
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH:  37.79
OBESIDADE
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH:  37.79
OBESIDADE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:54:01) 
-- CODE:
from numpy import *

P = array(eval(input('')))
A = array(eval(input('')))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH: ',m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
if (17<=V[i] and V[i]<18.49):
	print('ABAIXO DO PESO')
if (18.5<=V[i] and V[i]<24.99):
	print('PESO NORMAL')
if (25<=V[i] and V[i]<29.99):
	print('ACIMA DO PESO')
if (30<=V[i] and V[i]<34.99):
	print('OBESIDADE')
if (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
if (V[i]>=40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
9.28869
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH:  17.44
ABAIXO DO PESO
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH:  37.79
OBESIDADE
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH:  24.61
PESO NORMAL
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:54:15) 
-- CODE:
from numpy import *

P = array(eval(input('')))
A = array(eval(input('')))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH: ',m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
if (17<=V[i] and V[i]<18.49):
	print('ABAIXO DO PESO')
if (18.5<=V[i] and V[i]<24.99):
	print('PESO NORMAL')
if (25<=V[i] and V[i]<29.99):
	print('ACIMA DO PESO')
if (30<=V[i] and V[i]<34.99):
	print('OBESIDADE')
if (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
if (V[i]>=40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
6.05369
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH:  24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH:  17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH:  37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:54:16) 
-- CODE:
from numpy import *

P = array(eval(input('')))
A = array(eval(input('')))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH: ',m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
if (17<=V[i] and V[i]<18.49):
	print('ABAIXO DO PESO')
if (18.5<=V[i] and V[i]<24.99):
	print('PESO NORMAL')
if (25<=V[i] and V[i]<29.99):
	print('ACIMA DO PESO')
if (30<=V[i] and V[i]<34.99):
	print('OBESIDADE')
if (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
if (V[i]>=40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
6.41325
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH:  24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH:  17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH:  37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:54:17) 
-- CODE:
from numpy import *

P = array(eval(input('')))
A = array(eval(input('')))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH: ',m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
if (17<=V[i] and V[i]<18.49):
	print('ABAIXO DO PESO')
if (18.5<=V[i] and V[i]<24.99):
	print('PESO NORMAL')
if (25<=V[i] and V[i]<29.99):
	print('ACIMA DO PESO')
if (30<=V[i] and V[i]<34.99):
	print('OBESIDADE')
if (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
if (V[i]>=40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
6.51182
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH:  24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH:  17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH:  37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:54:18) 
-- CODE:
from numpy import *

P = array(eval(input('')))
A = array(eval(input('')))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH: ',m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
if (17<=V[i] and V[i]<18.49):
	print('ABAIXO DO PESO')
if (18.5<=V[i] and V[i]<24.99):
	print('PESO NORMAL')
if (25<=V[i] and V[i]<29.99):
	print('ACIMA DO PESO')
if (30<=V[i] and V[i]<34.99):
	print('OBESIDADE')
if (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
if (V[i]>=40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
6.58408
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH:  24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH:  17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH:  37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:54:20) 
-- CODE:
from numpy import *

P = array(eval(input('')))
A = array(eval(input('')))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH: ',m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
if (17<=V[i] and V[i]<18.49):
	print('ABAIXO DO PESO')
if (18.5<=V[i] and V[i]<24.99):
	print('PESO NORMAL')
if (25<=V[i] and V[i]<29.99):
	print('ACIMA DO PESO')
if (30<=V[i] and V[i]<34.99):
	print('OBESIDADE')
if (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
if (V[i]>=40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
6.60059
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH:  24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH:  17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH:  37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:54:21) 
-- CODE:
from numpy import *

P = array(eval(input('')))
A = array(eval(input('')))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH: ',m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
if (17<=V[i] and V[i]<18.49):
	print('ABAIXO DO PESO')
if (18.5<=V[i] and V[i]<24.99):
	print('PESO NORMAL')
if (25<=V[i] and V[i]<29.99):
	print('ACIMA DO PESO')
if (30<=V[i] and V[i]<34.99):
	print('OBESIDADE')
if (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
if (V[i]>=40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
6.52503
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH:  17.44
ABAIXO DO PESO
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH:  37.79
OBESIDADE
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH:  24.61
PESO NORMAL
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:54:35) 
-- CODE:
from numpy import *

P = array(eval(input('')))
A = array(eval(input('')))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH: ',m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
if (17<=V[i] and V[i]<18.49):
	print('ABAIXO DO PESO')
if (18.5<=V[i] and V[i]<24.99):
	print('PESO NORMAL')
if (25<=V[i] and V[i]<29.99):
	print('ACIMA DO PESO')
if (30<=V[i] and V[i]<34.99):
	print('OBESIDADE')
if (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
if (V[i]>=40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
6.70471
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH:  24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH:  17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH:  37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:54:36) 
-- CODE:
from numpy import *

P = array(eval(input('')))
A = array(eval(input('')))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH: ',m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
if (17<=V[i] and V[i]<18.49):
	print('ABAIXO DO PESO')
if (18.5<=V[i] and V[i]<24.99):
	print('PESO NORMAL')
if (25<=V[i] and V[i]<29.99):
	print('ACIMA DO PESO')
if (30<=V[i] and V[i]<34.99):
	print('OBESIDADE')
if (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
if (V[i]>=40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
6.53931
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH:  24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH:  17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH:  37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:54:37) 
-- CODE:
from numpy import *

P = array(eval(input('')))
A = array(eval(input('')))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH: ',m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
if (17<=V[i] and V[i]<18.49):
	print('ABAIXO DO PESO')
if (18.5<=V[i] and V[i]<24.99):
	print('PESO NORMAL')
if (25<=V[i] and V[i]<29.99):
	print('ACIMA DO PESO')
if (30<=V[i] and V[i]<34.99):
	print('OBESIDADE')
if (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
if (V[i]>=40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
6.51114
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH:  24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH:  17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH:  37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:54:38) 
-- CODE:
from numpy import *

P = array(eval(input('')))
A = array(eval(input('')))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH: ',m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
if (17<=V[i] and V[i]<18.49):
	print('ABAIXO DO PESO')
if (18.5<=V[i] and V[i]<24.99):
	print('PESO NORMAL')
if (25<=V[i] and V[i]<29.99):
	print('ACIMA DO PESO')
if (30<=V[i] and V[i]<34.99):
	print('OBESIDADE')
if (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
if (V[i]>=40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
6.51521
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH:  24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH:  17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH:  37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:54:39) 
-- CODE:
from numpy import *

P = array(eval(input('')))
A = array(eval(input('')))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH: ',m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
if (17<=V[i] and V[i]<18.49):
	print('ABAIXO DO PESO')
if (18.5<=V[i] and V[i]<24.99):
	print('PESO NORMAL')
if (25<=V[i] and V[i]<29.99):
	print('ACIMA DO PESO')
if (30<=V[i] and V[i]<34.99):
	print('OBESIDADE')
if (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
if (V[i]>=40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
6.57967
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH:  24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH:  17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH:  37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:54:40) 
-- CODE:
from numpy import *

P = array(eval(input('')))
A = array(eval(input('')))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH: ',m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
if (17<=V[i] and V[i]<18.49):
	print('ABAIXO DO PESO')
if (18.5<=V[i] and V[i]<24.99):
	print('PESO NORMAL')
if (25<=V[i] and V[i]<29.99):
	print('ACIMA DO PESO')
if (30<=V[i] and V[i]<34.99):
	print('OBESIDADE')
if (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
if (V[i]>=40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
6.51348
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH:  17.44
ABAIXO DO PESO
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH:  37.79
OBESIDADE
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH:  24.61
PESO NORMAL
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:54:54) 
-- CODE:
from numpy import *

P = array(eval(input('')))
A = array(eval(input('')))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH: ',m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
if (17<=V[i] and V[i]<18.49):
	print('ABAIXO DO PESO')
if (18.5<=V[i] and V[i]<24.99):
	print('PESO NORMAL')
if (25<=V[i] and V[i]<29.99):
	print('ACIMA DO PESO')
if (30<=V[i] and V[i]<34.99):
	print('OBESIDADE')
if (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
if (V[i]>=40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
5.89953
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1807/2573/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:54:55) 
-- CODE:
from numpy import *

P = array(eval(input('')))
A = array(eval(input('')))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH: ',m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
if (17<=V[i] and V[i]<18.49):
	print('ABAIXO DO PESO')
if (18.5<=V[i] and V[i]<24.99):
	print('PESO NORMAL')
if (25<=V[i] and V[i]<29.99):
	print('ACIMA DO PESO')
if (30<=V[i] and V[i]<34.99):
	print('OBESIDADE')
if (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
if (V[i]>=40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
5.70505
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH:  24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH:  17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH:  37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:54:56) 
-- CODE:
from numpy import *

P = array(eval(input('')))
A = array(eval(input('')))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH: ',m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
if (17<=V[i] and V[i]<18.49):
	print('ABAIXO DO PESO')
if (18.5<=V[i] and V[i]<24.99):
	print('PESO NORMAL')
if (25<=V[i] and V[i]<29.99):
	print('ACIMA DO PESO')
if (30<=V[i] and V[i]<34.99):
	print('OBESIDADE')
if (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
if (V[i]>=40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
5.80957
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH:  24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH:  17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH:  37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:54:57) 
-- CODE:
from numpy import *

P = array(eval(input('')))
A = array(eval(input('')))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH: ',m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
if (17<=V[i] and V[i]<18.49):
	print('ABAIXO DO PESO')
if (18.5<=V[i] and V[i]<24.99):
	print('PESO NORMAL')
if (25<=V[i] and V[i]<29.99):
	print('ACIMA DO PESO')
if (30<=V[i] and V[i]<34.99):
	print('OBESIDADE')
if (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
if (V[i]>=40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
6.45294
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH:  24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH:  17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH:  37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:54:58) 
-- CODE:
from numpy import *

P = array(eval(input('')))
A = array(eval(input('')))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH: ',m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
if (17<=V[i] and V[i]<18.49):
	print('ABAIXO DO PESO')
if (18.5<=V[i] and V[i]<24.99):
	print('PESO NORMAL')
if (25<=V[i] and V[i]<29.99):
	print('ACIMA DO PESO')
if (30<=V[i] and V[i]<34.99):
	print('OBESIDADE')
if (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
if (V[i]>=40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
6.11411
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH:  24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH:  17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH:  37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:54:59) 
-- CODE:
from numpy import *

P = array(eval(input('')))
A = array(eval(input('')))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH: ',m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
if (17<=V[i] and V[i]<18.49):
	print('ABAIXO DO PESO')
if (18.5<=V[i] and V[i]<24.99):
	print('PESO NORMAL')
if (25<=V[i] and V[i]<29.99):
	print('ACIMA DO PESO')
if (30<=V[i] and V[i]<34.99):
	print('OBESIDADE')
if (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
if (V[i]>=40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
6.14316
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH:  17.44
ABAIXO DO PESO
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH:  37.79
OBESIDADE
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH:  24.61
PESO NORMAL
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:55:14) 
-- CODE:
from numpy import *

P = array(eval(input('')))
A = array(eval(input('')))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH: ',m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
if (17<=V[i] and V[i]<18.49):
	print('ABAIXO DO PESO')
if (18.5<=V[i] and V[i]<24.99):
	print('PESO NORMAL')
if (25<=V[i] and V[i]<29.99):
	print('ACIMA DO PESO')
if (30<=V[i] and V[i]<34.99):
	print('OBESIDADE')
if (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
if (V[i]>=40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
6.41942
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH:  24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH:  17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH:  37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:55:15) 
-- CODE:
from numpy import *

P = array(eval(input('')))
A = array(eval(input('')))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH: ',m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
if (17<=V[i] and V[i]<18.49):
	print('ABAIXO DO PESO')
if (18.5<=V[i] and V[i]<24.99):
	print('PESO NORMAL')
if (25<=V[i] and V[i]<29.99):
	print('ACIMA DO PESO')
if (30<=V[i] and V[i]<34.99):
	print('OBESIDADE')
if (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
if (V[i]>=40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
6.42712
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH:  24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH:  17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH:  37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:55:16) 
-- CODE:
from numpy import *

P = array(eval(input('')))
A = array(eval(input('')))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH: ',m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
if (17<=V[i] and V[i]<18.49):
	print('ABAIXO DO PESO')
if (18.5<=V[i] and V[i]<24.99):
	print('PESO NORMAL')
if (25<=V[i] and V[i]<29.99):
	print('ACIMA DO PESO')
if (30<=V[i] and V[i]<34.99):
	print('OBESIDADE')
if (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
if (V[i]>=40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
6.44
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH:  24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH:  17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH:  37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:55:17) 
-- CODE:
from numpy import *

P = array(eval(input('')))
A = array(eval(input('')))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH: ',m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
if (17<=V[i] and V[i]<18.49):
	print('ABAIXO DO PESO')
if (18.5<=V[i] and V[i]<24.99):
	print('PESO NORMAL')
if (25<=V[i] and V[i]<29.99):
	print('ACIMA DO PESO')
if (30<=V[i] and V[i]<34.99):
	print('OBESIDADE')
if (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
if (V[i]>=40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
6.78874
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH:  24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH:  17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH:  37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:55:18) 
-- CODE:
from numpy import *

P = array(eval(input('')))
A = array(eval(input('')))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH: ',m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
if (17<=V[i] and V[i]<18.49):
	print('ABAIXO DO PESO')
if (18.5<=V[i] and V[i]<24.99):
	print('PESO NORMAL')
if (25<=V[i] and V[i]<29.99):
	print('ACIMA DO PESO')
if (30<=V[i] and V[i]<34.99):
	print('OBESIDADE')
if (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
if (V[i]>=40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
6.73094
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH:  24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH:  17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH:  37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:55:19) 
-- CODE:
from numpy import *

P = array(eval(input('')))
A = array(eval(input('')))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH: ',m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
if (17<=V[i] and V[i]<18.49):
	print('ABAIXO DO PESO')
if (18.5<=V[i] and V[i]<24.99):
	print('PESO NORMAL')
if (25<=V[i] and V[i]<29.99):
	print('ACIMA DO PESO')
if (30<=V[i] and V[i]<34.99):
	print('OBESIDADE')
if (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
if (V[i]>=40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
6.8117
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH:  17.44
ABAIXO DO PESO
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH:  37.79
OBESIDADE
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH:  24.61
PESO NORMAL
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:55:33) 
-- CODE:
from numpy import *

P = array(eval(input('')))
A = array(eval(input('')))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH: ',m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
if (17<=V[i] and V[i]<18.49):
	print('ABAIXO DO PESO')
if (18.5<=V[i] and V[i]<24.99):
	print('PESO NORMAL')
if (25<=V[i] and V[i]<29.99):
	print('ACIMA DO PESO')
if (30<=V[i] and V[i]<34.99):
	print('OBESIDADE')
if (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
if (V[i]>=40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
5.79629
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH:  24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH:  17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH:  37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:55:34) 
-- CODE:
from numpy import *

P = array(eval(input('')))
A = array(eval(input('')))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH: ',m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
if (17<=V[i] and V[i]<18.49):
	print('ABAIXO DO PESO')
if (18.5<=V[i] and V[i]<24.99):
	print('PESO NORMAL')
if (25<=V[i] and V[i]<29.99):
	print('ACIMA DO PESO')
if (30<=V[i] and V[i]<34.99):
	print('OBESIDADE')
if (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
if (V[i]>=40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
5.93641
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH:  24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH:  17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH:  37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:55:35) 
-- CODE:
from numpy import *

P = array(eval(input('')))
A = array(eval(input('')))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH: ',m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
if (17<=V[i] and V[i]<18.49):
	print('ABAIXO DO PESO')
if (18.5<=V[i] and V[i]<24.99):
	print('PESO NORMAL')
if (25<=V[i] and V[i]<29.99):
	print('ACIMA DO PESO')
if (30<=V[i] and V[i]<34.99):
	print('OBESIDADE')
if (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
if (V[i]>=40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
6.17778
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH:  24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH:  17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH:  37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:55:36) 
-- CODE:
from numpy import *

P = array(eval(input('')))
A = array(eval(input('')))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH: ',m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
if (17<=V[i] and V[i]<18.49):
	print('ABAIXO DO PESO')
if (18.5<=V[i] and V[i]<24.99):
	print('PESO NORMAL')
if (25<=V[i] and V[i]<29.99):
	print('ACIMA DO PESO')
if (30<=V[i] and V[i]<34.99):
	print('OBESIDADE')
if (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
if (V[i]>=40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
6.24402
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH:  24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH:  17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH:  37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:55:37) 
-- CODE:
from numpy import *

P = array(eval(input('')))
A = array(eval(input('')))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH: ',m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
if (17<=V[i] and V[i]<18.49):
	print('ABAIXO DO PESO')
if (18.5<=V[i] and V[i]<24.99):
	print('PESO NORMAL')
if (25<=V[i] and V[i]<29.99):
	print('ACIMA DO PESO')
if (30<=V[i] and V[i]<34.99):
	print('OBESIDADE')
if (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
if (V[i]>=40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
6.13066
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH:  24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH:  17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH:  37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:55:37) 
-- CODE:
from numpy import *

P = array(eval(input('')))
A = array(eval(input('')))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH: ',m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
if (17<=V[i] and V[i]<18.49):
	print('ABAIXO DO PESO')
if (18.5<=V[i] and V[i]<24.99):
	print('PESO NORMAL')
if (25<=V[i] and V[i]<29.99):
	print('ACIMA DO PESO')
if (30<=V[i] and V[i]<34.99):
	print('OBESIDADE')
if (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
if (V[i]>=40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
5.97843
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH:  17.44
ABAIXO DO PESO
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH:  37.79
OBESIDADE
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH:  24.61
PESO NORMAL
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:55:42) 
-- CODE:
from numpy import *

P = array(eval(input('')))
A = array(eval(input('')))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH: ',m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
if (17<=V[i] and V[i]<18.49):
	print('ABAIXO DO PESO')
if (18.5<=V[i] and V[i]<24.99):
	print('PESO NORMAL')
if (25<=V[i] and V[i]<29.99):
	print('ACIMA DO PESO')
if (30<=V[i] and V[i]<34.99):
	print('OBESIDADE')
if (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
if (V[i]>=40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
4.03903
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH:  24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH:  17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH:  37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:55:44) 
-- CODE:
from numpy import *

P = array(eval(input('')))
A = array(eval(input('')))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH: ',m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
if (17<=V[i] and V[i]<18.49):
	print('ABAIXO DO PESO')
if (18.5<=V[i] and V[i]<24.99):
	print('PESO NORMAL')
if (25<=V[i] and V[i]<29.99):
	print('ACIMA DO PESO')
if (30<=V[i] and V[i]<34.99):
	print('OBESIDADE')
if (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
if (V[i]>=40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
2.93601
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH:  24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH:  17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH:  37.79
OBESIDADE
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:55:44) 
-- CODE:
from numpy import *

P = array(eval(input('')))
A = array(eval(input('')))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH: ',m)

if (V[i]<17):
	print('MUITO ABAIXO DO PESO')
if (17<=V[i] and V[i]<18.49):
	print('ABAIXO DO PESO')
if (18.5<=V[i] and V[i]<24.99):
	print('PESO NORMAL')
if (25<=V[i] and V[i]<29.99):
	print('ACIMA DO PESO')
if (30<=V[i] and V[i]<34.99):
	print('OBESIDADE')
if (35<=V[i] and V[i]<39.99):
	print('OBESIDADE SEVERA')
if (V[i]>=40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
1.77375
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1807/2573/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:59:44) 
-- CODE:
from numpy import *

P = array(eval(input('')))
A = array(eval(input('')))
V = zeros(size(P))

for i in range(size(P)):
	V[i] = round((P[i])/((A[i])*(A[i])), 2)
print(V)
	
m = max(V)
print('O MAIOR IMC DA TURMA EH: ',m)

if (m<17):
	print('MUITO ABAIXO DO PESO')
if (17<=m<=18.49):
	print('ABAIXO DO PESO')
if (18.5<=m<=24.99):
	print('PESO NORMAL')
if (25<=m<=29.99):
	print('ACIMA DO PESO')
if (30<=m<=34.99):
	print('OBESIDADE')
if (35<=m<=39.99):
	print('OBESIDADE SEVERA')
if (m>=40):
	print('OBESIDADE MORBIDA')
-- EXECUTION TIME:
1.14569
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH:  24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH:  17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH:  37.79
OBESIDADE SEVERA
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
