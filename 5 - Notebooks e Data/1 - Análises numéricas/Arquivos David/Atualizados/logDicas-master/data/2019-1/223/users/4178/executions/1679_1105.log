== TEST (2019-04-23 17:43:59) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("Sua casa: ").lower()

if x == "lobo":
	msg = "Stark"
elif x == "leao":
	msg = "Lennister"
elif x == "veado"
	msg = "Baratheon"
elif x == "dragao":
	msg = "Targaryen"
elif x == "rosa":
	msg = "Tyrell"
elif x == "sol":
	msg = "Martell"
elif x == "lula":
	msg = "Greyjoy"
elif x == "esfolado":
	msg = "Bolton"
elif x == "turta":
	msg = "Tully"
else:
	msg = "invalido"

print("Entrada:", x)
print("Casa:", msg)
-- ERROR:
File "XXXX", line 9
    elif x == "veado"
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:44:11) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("Sua casa: ").lower()

if x == "lobo":
	msg = "Stark"
elif x == "leao":
	msg = "Lennister"
elif x == "veado":
	msg = "Baratheon"
elif x == "dragao":
	msg = "Targaryen"
elif x == "rosa":
	msg = "Tyrell"
elif x == "sol":
	msg = "Martell"
elif x == "lula":
	msg = "Greyjoy"
elif x == "esfolado":
	msg = "Bolton"
elif x == "turta":
	msg = "Tully"
else:
	msg = "invalido"

print("Entrada:", x)
print("Casa:", msg)
-- OUTPUT:
Entrada: lula
Casa: Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:44:16) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("Sua casa: ").lower()

if x == "lobo":
	msg = "Stark"
elif x == "leao":
	msg = "Lennister"
elif x == "veado":
	msg = "Baratheon"
elif x == "dragao":
	msg = "Targaryen"
elif x == "rosa":
	msg = "Tyrell"
elif x == "sol":
	msg = "Martell"
elif x == "lula":
	msg = "Greyjoy"
elif x == "esfolado":
	msg = "Bolton"
elif x == "turta":
	msg = "Tully"
else:
	msg = "invalido"

print("Entrada:", x)
print("Casa:", msg)
-- OUTPUT:
Entrada: lula
Casa: Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 17:44:20) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("Sua casa: ").lower()

if x == "lobo":
	msg = "Stark"
elif x == "leao":
	msg = "Lennister"
elif x == "veado":
	msg = "Baratheon"
elif x == "dragao":
	msg = "Targaryen"
elif x == "rosa":
	msg = "Tyrell"
elif x == "sol":
	msg = "Martell"
elif x == "lula":
	msg = "Greyjoy"
elif x == "esfolado":
	msg = "Bolton"
elif x == "turta":
	msg = "Tully"
else:
	msg = "invalido"

print("Entrada:", x)
print("Casa:", msg)
-- EXECUTION TIME:
0.164002
-- TEST CASE 1:
---- input:
lula
---- correct output:
Entrada: lula
Casa: Greyjoy
---- user output:
Entrada: lula
Casa: Greyjoy
-- TEST CASE 2:
---- input:
tambaqui
---- correct output:
Entrada: tambaqui
Brasao invalido
---- user output:
Entrada: tambaqui
Casa: invalido
-- TEST CASE 3:
---- input:
dragao
---- correct output:
Entrada: dragao
Casa: Targaryen
---- user output:
Entrada: dragao
Casa: Targaryen
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:44:27) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("Sua casa: ").lower()

if x == "lobo":
	msg = "Stark"
elif x == "leao":
	msg = "Lennister"
elif x == "veado":
	msg = "Baratheon"
elif x == "dragao":
	msg = "Targaryen"
elif x == "rosa":
	msg = "Tyrell"
elif x == "sol":
	msg = "Martell"
elif x == "lula":
	msg = "Greyjoy"
elif x == "esfolado":
	msg = "Bolton"
elif x == "turta":
	msg = "Tully"
else:
	msg = "invalido"

print("Entrada:", x)
print("Casa:", msg)
-- OUTPUT:
Entrada: lula
Casa: Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:44:36) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("Sua casa: ").lower()

if x == "lobo":
	msg = "Stark"
elif x == "leao":
	msg = "Lennister"
elif x == "veado":
	msg = "Baratheon"
elif x == "dragao":
	msg = "Targaryen"
elif x == "rosa":
	msg = "Tyrell"
elif x == "sol":
	msg = "Martell"
elif x == "lula":
	msg = "Greyjoy"
elif x == "esfolado":
	msg = "Bolton"
elif x == "turta":
	msg = "Tully"
else:
	msg = "invalido"

print("Entrada:", x)
print("Casa:", msg)
-- OUTPUT:
Entrada: lula
Casa: Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:44:36) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("Sua casa: ").lower()

if x == "lobo":
	msg = "Stark"
elif x == "leao":
	msg = "Lennister"
elif x == "veado":
	msg = "Baratheon"
elif x == "dragao":
	msg = "Targaryen"
elif x == "rosa":
	msg = "Tyrell"
elif x == "sol":
	msg = "Martell"
elif x == "lula":
	msg = "Greyjoy"
elif x == "esfolado":
	msg = "Bolton"
elif x == "turta":
	msg = "Tully"
else:
	msg = "invalido"

print("Entrada:", x)
print("Casa:", msg)
-- OUTPUT:
Entrada: lula
Casa: Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:44:45) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("Sua casa: ").lower()

if x == "lobo":
	msg = "Stark"
elif x == "leao":
	msg = "Lennister"
elif x == "veado":
	msg = "Baratheon"
elif x == "dragao":
	msg = "Targaryen"
elif x == "rosa":
	msg = "Tyrell"
elif x == "sol":
	msg = "Martell"
elif x == "lula":
	msg = "Greyjoy"
elif x == "esfolado":
	msg = "Bolton"
elif x == "turta":
	msg = "Tully"
else:
	msg = "invalido"

print("Entrada:", x)
print("Casa:", msg)
-- OUTPUT:
Entrada: lula
Casa: Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:44:49) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("Sua casa: ").lower()

if x == "lobo":
	msg = "Stark"
elif x == "leao":
	msg = "Lennister"
elif x == "veado":
	msg = "Baratheon"
elif x == "dragao":
	msg = "Targaryen"
elif x == "rosa":
	msg = "Tyrell"
elif x == "sol":
	msg = "Martell"
elif x == "lula":
	msg = "Greyjoy"
elif x == "esfolado":
	msg = "Bolton"
elif x == "turta":
	msg = "Tully"
else:
	msg = "invalido"

print("Entrada:", x)
print("Casa:", msg)
-- OUTPUT:
Entrada: lula
Casa: Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:44:53) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("Sua casa: ").lower()

if x == "lobo":
	msg = "Stark"
elif x == "leao":
	msg = "Lennister"
elif x == "veado":
	msg = "Baratheon"
elif x == "dragao":
	msg = "Targaryen"
elif x == "rosa":
	msg = "Tyrell"
elif x == "sol":
	msg = "Martell"
elif x == "lula":
	msg = "Greyjoy"
elif x == "esfolado":
	msg = "Bolton"
elif x == "turta":
	msg = "Tully"
else:
	msg = "invalido"

print("Entrada:", x)
print("Casa:", msg)
-- OUTPUT:
Entrada: lula
Casa: Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:44:57) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("Sua casa: ").lower()

if x == "lobo":
	msg = "Stark"
elif x == "leao":
	msg = "Lennister"
elif x == "veado":
	msg = "Baratheon"
elif x == "dragao":
	msg = "Targaryen"
elif x == "rosa":
	msg = "Tyrell"
elif x == "sol":
	msg = "Martell"
elif x == "lula":
	msg = "Greyjoy"
elif x == "esfolado":
	msg = "Bolton"
elif x == "turta":
	msg = "Tully"
else:
	msg = "invalido"

print("Entrada:", x)
print("Casa:", msg)
-- OUTPUT:
Entrada: lula
Casa: Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:45:09) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("Sua casa: ").lower()

if x == "lobo":
	msg = "Stark"
elif x == "leao":
	msg = "Lennister"
elif x == "veado":
	msg = "Baratheon"
elif x == "dragao":
	msg = "Targaryen"
elif x == "rosa":
	msg = "Tyrell"
elif x == "sol":
	msg = "Martell"
elif x == "lula":
	msg = "Greyjoy"
elif x == "esfolado":
	msg = "Bolton"
elif x == "turta":
	msg = "Tully"
else:
	msg = "invalido"

print("Entrada:", x)
print("Casa:", msg)
-- OUTPUT:
Entrada: lula
Casa: Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:45:20) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("Sua casa: ").lower()

if x == "lobo":
	msg = "Stark"
elif x == "leao":
	msg = "Lennister"
elif x == "veado":
	msg = "Baratheon"
elif x == "dragao":
	msg = "Targaryen"
elif x == "rosa":
	msg = "Tyrell"
elif x == "sol":
	msg = "Martell"
elif x == "lula":
	msg = "Greyjoy"
elif x == "esfolado":
	msg = "Bolton"
elif x == "turta":
	msg = "Tully"


print("Entrada:", x)
print("Casa:", msg)
-- OUTPUT:
Entrada: lula
Casa: Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 17:45:21) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("Sua casa: ").lower()

if x == "lobo":
	msg = "Stark"
elif x == "leao":
	msg = "Lennister"
elif x == "veado":
	msg = "Baratheon"
elif x == "dragao":
	msg = "Targaryen"
elif x == "rosa":
	msg = "Tyrell"
elif x == "sol":
	msg = "Martell"
elif x == "lula":
	msg = "Greyjoy"
elif x == "esfolado":
	msg = "Bolton"
elif x == "turta":
	msg = "Tully"


print("Entrada:", x)
print("Casa:", msg)
-- EXECUTION TIME:
0.126316
-- TEST CASE 1:
---- input:
lula
---- correct output:
Entrada: lula
Casa: Greyjoy
---- user output:
Entrada: lula
Casa: Greyjoy
-- TEST CASE 2:
---- input:
tambaqui
---- correct output:
Entrada: tambaqui
Brasao invalido
---- user output:
Entrada: tambaqui
-- TEST CASE 3:
---- input:
dragao
---- correct output:
Entrada: dragao
Casa: Targaryen
---- user output:
Entrada: dragao
Casa: Targaryen
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 17:45:22) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("Sua casa: ").lower()

if x == "lobo":
	msg = "Stark"
elif x == "leao":
	msg = "Lennister"
elif x == "veado":
	msg = "Baratheon"
elif x == "dragao":
	msg = "Targaryen"
elif x == "rosa":
	msg = "Tyrell"
elif x == "sol":
	msg = "Martell"
elif x == "lula":
	msg = "Greyjoy"
elif x == "esfolado":
	msg = "Bolton"
elif x == "turta":
	msg = "Tully"


print("Entrada:", x)
print("Casa:", msg)
-- EXECUTION TIME:
0.116363
-- TEST CASE 1:
---- input:
lula
---- correct output:
Entrada: lula
Casa: Greyjoy
---- user output:
Entrada: lula
Casa: Greyjoy
-- TEST CASE 2:
---- input:
tambaqui
---- correct output:
Entrada: tambaqui
Brasao invalido
---- user output:
Entrada: tambaqui
-- TEST CASE 3:
---- input:
dragao
---- correct output:
Entrada: dragao
Casa: Targaryen
---- user output:
Entrada: dragao
Casa: Targaryen
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 17:45:23) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("Sua casa: ").lower()

if x == "lobo":
	msg = "Stark"
elif x == "leao":
	msg = "Lennister"
elif x == "veado":
	msg = "Baratheon"
elif x == "dragao":
	msg = "Targaryen"
elif x == "rosa":
	msg = "Tyrell"
elif x == "sol":
	msg = "Martell"
elif x == "lula":
	msg = "Greyjoy"
elif x == "esfolado":
	msg = "Bolton"
elif x == "turta":
	msg = "Tully"


print("Entrada:", x)
print("Casa:", msg)
-- EXECUTION TIME:
0.104626
-- TEST CASE 1:
---- input:
lula
---- correct output:
Entrada: lula
Casa: Greyjoy
---- user output:
Entrada: lula
Casa: Greyjoy
-- TEST CASE 2:
---- input:
tambaqui
---- correct output:
Entrada: tambaqui
Brasao invalido
---- user output:
Entrada: lula
Casa: Greyjoy
-- TEST CASE 3:
---- input:
dragao
---- correct output:
Entrada: dragao
Casa: Targaryen
---- user output:
Entrada: tambaqui
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 17:45:23) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("Sua casa: ").lower()

if x == "lobo":
	msg = "Stark"
elif x == "leao":
	msg = "Lennister"
elif x == "veado":
	msg = "Baratheon"
elif x == "dragao":
	msg = "Targaryen"
elif x == "rosa":
	msg = "Tyrell"
elif x == "sol":
	msg = "Martell"
elif x == "lula":
	msg = "Greyjoy"
elif x == "esfolado":
	msg = "Bolton"
elif x == "turta":
	msg = "Tully"


print("Entrada:", x)
print("Casa:", msg)
-- EXECUTION TIME:
0.164475
-- TEST CASE 1:
---- input:
lula
---- correct output:
Entrada: lula
Casa: Greyjoy
---- user output:
Entrada: lula
Casa: Greyjoy
-- TEST CASE 2:
---- input:
tambaqui
---- correct output:
Entrada: tambaqui
Brasao invalido
---- user output:
Entrada: tambaqui
-- TEST CASE 3:
---- input:
dragao
---- correct output:
Entrada: dragao
Casa: Targaryen
---- user output:
Entrada: tambaqui
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 17:45:24) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("Sua casa: ").lower()

if x == "lobo":
	msg = "Stark"
elif x == "leao":
	msg = "Lennister"
elif x == "veado":
	msg = "Baratheon"
elif x == "dragao":
	msg = "Targaryen"
elif x == "rosa":
	msg = "Tyrell"
elif x == "sol":
	msg = "Martell"
elif x == "lula":
	msg = "Greyjoy"
elif x == "esfolado":
	msg = "Bolton"
elif x == "turta":
	msg = "Tully"


print("Entrada:", x)
print("Casa:", msg)
-- EXECUTION TIME:
0.294181
-- TEST CASE 1:
---- input:
lula
---- correct output:
Entrada: lula
Casa: Greyjoy
---- user output:
Entrada: lula
Casa: Greyjoy
-- TEST CASE 2:
---- input:
tambaqui
---- correct output:
Entrada: tambaqui
Brasao invalido
---- user output:
Entrada: tambaqui
-- TEST CASE 3:
---- input:
dragao
---- correct output:
Entrada: dragao
Casa: Targaryen
---- user output:
Entrada: dragao
Casa: Targaryen
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 17:45:24) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("Sua casa: ").lower()

if x == "lobo":
	msg = "Stark"
elif x == "leao":
	msg = "Lennister"
elif x == "veado":
	msg = "Baratheon"
elif x == "dragao":
	msg = "Targaryen"
elif x == "rosa":
	msg = "Tyrell"
elif x == "sol":
	msg = "Martell"
elif x == "lula":
	msg = "Greyjoy"
elif x == "esfolado":
	msg = "Bolton"
elif x == "turta":
	msg = "Tully"


print("Entrada:", x)
print("Casa:", msg)
-- EXECUTION TIME:
0.15186
-- TEST CASE 1:
---- input:
lula
---- correct output:
Entrada: lula
Casa: Greyjoy
---- user output:
Entrada: lula
Casa: Greyjoy
-- TEST CASE 2:
---- input:
tambaqui
---- correct output:
Entrada: tambaqui
Brasao invalido
---- user output:

-- TEST CASE 3:
---- input:
dragao
---- correct output:
Entrada: dragao
Casa: Targaryen
---- user output:
Entrada: dragao
Casa: Targaryen
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 13:19:27) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("Sua casa: ").lower()

if x == "lobo":
	msg = "Stark"
elif x == "leao":
	msg = "Lennister"
elif x == "veado":
	msg = "Baratheon"
elif x == "dragao":
	msg = "Targaryen"
elif x == "rosa":
	msg = "Tyrell"
elif x == "sol":
	msg = "Martell"
elif x == "lula":
	msg = "Greyjoy"
elif x == "esfolado":
	msg = "Bolton"
elif x == "turta":
	msg = "Tully"


print("Entrada:", x)
print("Casa:", msg)
-- OUTPUT:
Entrada: lula
Casa: Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 13:21:03) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("Sua casa: ").lower()

if x == "lobo":
	msg = "Stark"
elif x == "leao":
	msg = "Lennister"
elif x == "veado":
	msg = "Baratheon"
elif x == "dragao":
	msg = "Targaryen"
elif x == "rosa":
	msg = "Tyrell"
elif x == "sol":
	msg = "Martell"
elif x == "lula":
	msg = "Greyjoy"
elif x == "esfolado":
	msg = "Bolton"
elif x == "turta":
	msg = "Tully"


print("Entrada:", x)
print("Casa:", msg)
-- OUTPUT:
Entrada: lula
Casa: Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 13:22:11) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("Sua casa: ").lower()

if x == "lobo":
	msg = "Stark"
elif x == "leao":
	msg = "Lennister"
elif x == "veado":
	msg = "Baratheon"
elif x == "dragao":
	msg = "Targaryen"
elif x == "rosa":
	msg = "Tyrell"
elif x == "sol":
	msg = "Martell"
elif x == "lula":
	msg = "Greyjoy"
elif x == "esfolado":
	msg = "Bolton"
elif x == "turta":
	msg = "Tully"
else:
	msg = "invalido"


print("Entrada:", x)
print("Casa:", msg)
-- OUTPUT:
Entrada: lula
Casa: Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 13:22:15) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("Sua casa: ").lower()

if x == "lobo":
	msg = "Stark"
elif x == "leao":
	msg = "Lennister"
elif x == "veado":
	msg = "Baratheon"
elif x == "dragao":
	msg = "Targaryen"
elif x == "rosa":
	msg = "Tyrell"
elif x == "sol":
	msg = "Martell"
elif x == "lula":
	msg = "Greyjoy"
elif x == "esfolado":
	msg = "Bolton"
elif x == "turta":
	msg = "Tully"
else:
	msg = "invalido"


print("Entrada:", x)
print("Casa:", msg)
-- EXECUTION TIME:
0.098814
-- TEST CASE 1:
---- input:
lula
---- correct output:
Entrada: lula
Casa: Greyjoy
---- user output:
Entrada: lula
Casa: Greyjoy
-- TEST CASE 2:
---- input:
tambaqui
---- correct output:
Entrada: tambaqui
Brasao invalido
---- user output:
Entrada: tambaqui
Casa: invalido
-- TEST CASE 3:
---- input:
dragao
---- correct output:
Entrada: dragao
Casa: Targaryen
---- user output:
Entrada: dragao
Casa: Targaryen
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 13:24:50) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("Sua casa: ").lower()

if x == "lobo":
	msg = "Stark"
elif x == "leao":
	msg = "Lennister"
elif x == "veado":
	msg = "Baratheon"
elif x == "dragao":
	msg = "Targaryen"
elif x == "rosa":
	msg = "Tyrell"
elif x == "sol":
	msg = "Martell"
elif x == "lula":
	msg = "Greyjoy"
elif x == "esfolado":
	msg = "Bolton"
elif x == "turta":
	msg = "Tully"
else:
	msg = "Brasao invalido"


print("Entrada:", x)
print("Casa:", msg)
-- OUTPUT:
Entrada: lula
Casa: Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 13:24:56) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("Sua casa: ").lower()

if x == "lobo":
	msg = "Stark"
elif x == "leao":
	msg = "Lennister"
elif x == "veado":
	msg = "Baratheon"
elif x == "dragao":
	msg = "Targaryen"
elif x == "rosa":
	msg = "Tyrell"
elif x == "sol":
	msg = "Martell"
elif x == "lula":
	msg = "Greyjoy"
elif x == "esfolado":
	msg = "Bolton"
elif x == "turta":
	msg = "Tully"
else:
	msg = "Brasao invalido"


print("Entrada:", x)
print("Casa:", msg)
-- EXECUTION TIME:
0.137085
-- TEST CASE 1:
---- input:
lula
---- correct output:
Entrada: lula
Casa: Greyjoy
---- user output:
Entrada: lula
Casa: Greyjoy
-- TEST CASE 2:
---- input:
tambaqui
---- correct output:
Entrada: tambaqui
Brasao invalido
---- user output:
Entrada: tambaqui
Casa: Brasao invalido
-- TEST CASE 3:
---- input:
dragao
---- correct output:
Entrada: dragao
Casa: Targaryen
---- user output:
Entrada: dragao
Casa: Targaryen
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 13:24:59) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("Sua casa: ").lower()

if x == "lobo":
	msg = "Stark"
elif x == "leao":
	msg = "Lennister"
elif x == "veado":
	msg = "Baratheon"
elif x == "dragao":
	msg = "Targaryen"
elif x == "rosa":
	msg = "Tyrell"
elif x == "sol":
	msg = "Martell"
elif x == "lula":
	msg = "Greyjoy"
elif x == "esfolado":
	msg = "Bolton"
elif x == "turta":
	msg = "Tully"
else:
	msg = "Brasao invalido"


print("Entrada:", x)
print("Casa:", msg)
-- OUTPUT:
Entrada: lula
Casa: Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:06:29) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("Sua casa: ").lower()

if x.lower() == "lobo":
	msg = "Stark"
elif x == "leao":
	msg = "Lennister"
elif x == "veado":
	msg = "Baratheon"
elif x == "dragao":
	msg = "Targaryen"
elif x == "rosa":
	msg = "Tyrell"
elif x == "sol":
	msg = "Martell"
elif x == "lula":
	msg = "Greyjoy"
elif x == "esfolado":
	msg = "Bolton"
elif x == "turta":
	msg = "Tully"
elif 
	msg = "Brasao invalido"

-- ERROR:
File "XXXX", line 23
    elif 
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:06:43) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("Sua casa: ").lower()

if x.lower() == "lobo":
	msg = "Stark"
elif x == "leao":
	msg = "Lennister"
elif x == "veado":
	msg = "Baratheon"
elif x == "dragao":
	msg = "Targaryen"
elif x == "rosa":
	msg = "Tyrell"
elif x == "sol":
	msg = "Martell"
elif x == "lula":
	msg = "Greyjoy"
elif x == "esfolado":
	msg = "Bolton"
elif x == "turta":
	msg = "Tully"


-- ERROR:
File "XXXX", line 23
    elif 
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:09:56) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("Sua casa: ").lower()

if x.lower() == "lobo":
	msg = "Stark"
elif x == "leao":
	msg = "Lennister"
elif x == "veado":
	msg = "Baratheon"
elif x == "dragao":
	msg = "Targaryen"
elif x == "rosa":
	msg = "Tyrell"
elif x == "sol":
	msg = "Martell"
elif x == "lula":
	msg = "Greyjoy"
elif x == "esfolado":
	msg = "Bolton"
elif x == "turta":
	msg = "Tully"


-- ERROR:
File "XXXX", line 23
    elif 
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:11:56) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("Sua casa: ").lower()

if x.lower() == "lobo":
	msg = "Stark"
elif x == "leao":
	msg = "Lennister"
elif x == "veado":
	msg = "Baratheon"
elif x == "dragao":
	msg = "Targaryen"
elif x == "rosa":
	msg = "Tyrell"
elif x == "sol":
	msg = "Martell"
elif x == "lula":
	msg = "Greyjoy"
elif x == "esfolado":
	msg = "Bolton"
elif x == "turta":
	msg = "Tully"
else:
	msg = "Brasao invalido"
print ("Entrada: ", x)
print ("Casa: ",msg)


-- OUTPUT:
Entrada:  lula
Casa:  Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:12:10) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("Sua casa: ").lower()

if x.lower() == "lobo":
	msg = "Stark"
elif x == "leao":
	msg = "Lennister"
elif x == "veado":
	msg = "Baratheon"
elif x == "dragao":
	msg = "Targaryen"
elif x == "rosa":
	msg = "Tyrell"
elif x == "sol":
	msg = "Martell"
elif x == "lula":
	msg = "Greyjoy"
elif x == "esfolado":
	msg = "Bolton"
elif x == "turta":
	msg = "Tully"
else:
	msg = "Brasao invalido"
print ("Entrada: ", x)
print ("Casa: ",msg)


-- EXECUTION TIME:
0.18677
-- TEST CASE 1:
---- input:
lula
---- correct output:
Entrada: lula
Casa: Greyjoy
---- user output:
Entrada:  lula
Casa:  Greyjoy
-- TEST CASE 2:
---- input:
tambaqui
---- correct output:
Entrada: tambaqui
Brasao invalido
---- user output:
Entrada:  tambaqui
Casa:  Brasao invalido
-- TEST CASE 3:
---- input:
dragao
---- correct output:
Entrada: dragao
Casa: Targaryen
---- user output:
Entrada:  dragao
Casa:  Targaryen
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:13:21) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("Sua casa: ").lower()

if (x == "lobo"):
	msg = "Stark"
elif (x == "leao"):
	msg = "Lennister"
elif (x == "veado"):
	msg = "Baratheon"
elif (x == "dragao"):
	msg = "Targaryen"
elif (x == "rosa"):
	msg = "Tyrell"
elif (x == "sol"):
	msg = "Martell"
elif (x == "lula"):
	msg = "Greyjoy"
elif (x == "esfolado"):
	msg = "Bolton"
elif (x == "turta"):
	msg = "Tully"
else:
	msg = "Brasao invalido"
print ("Entrada: ", x)
print ("Casa: ",msg)


-- OUTPUT:
Entrada:  lula
Casa:  Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:13:41) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("Sua casa: ").lower()

if (x == "lobo"):
	msg = "Stark"
elif (x == "leao"):
	msg = "Lennister"
elif (x == "veado"):
	msg = "Baratheon"
elif (x == "dragao"):
	msg = "Targaryen"
elif (x == "rosa"):
	msg = "Tyrell"
elif (x == "sol"):
	msg = "Martell"
elif (x == "lula"):
	msg = "Greyjoy"
elif (x == "esfolado"):
	msg = "Bolton"
elif (x == "turta"):
	msg = "Tully"
else:
	msg = "Brasao invalido"
print ("Entrada: ", x)
print ("Casa: ",msg)


-- OUTPUT:
Entrada:  lula
Casa:  Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
