== TEST (2019-04-17 09:07:10) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (___COMPLETE AQUI___):
	# Testa se medidas correspondem aas de um triangulo
	if (___COMPLETE AQUI___):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")

-- ERROR:
File "XXXX", line 13
    if (___COMPLETE AQUI___):
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 15:33:18) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (___COMPLETE AQUI___):
	# Testa se medidas correspondem aas de um triangulo
	if (___COMPLETE AQUI___):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")




-- ERROR:
File "XXXX", line 13
    if (___COMPLETE AQUI___):
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 15:36:50) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0 and b > 0 and c > 0):



-- ERROR:
File "XXXX", line 13
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 15:36:55) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0 and b > 0 and c > 0):
-- ERROR:
File "XXXX", line 11
    
                                   ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 15:43:10) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0 and b > 0 and c > 0):
	#Testa se medidas correspondem das de um triangulo
	if (a + b > c and a+ c > b and c + b > a):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s - a) * (s - b) * (s - c))
		print(area)
	else:
		print("Não é um triângulo")
else: print("Não é um triângulo")
-- OUTPUT:
Não é um triângulo
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 15:43:11) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0 and b > 0 and c > 0):
	#Testa se medidas correspondem das de um triangulo
	if (a + b > c and a+ c > b and c + b > a):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s - a) * (s - b) * (s - c))
		print(area)
	else:
		print("Não é um triângulo")
else: print("Não é um triângulo")
-- EXECUTION TIME:
0.147419
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1079/main.py", line 18, in <module>
    else: print("N\xe3o \xe9 um tri\xe2ngulo")
UnicodeEncodeError: 'ascii' codec can't encode character '\xe3' in position 1: ordinal not in range(128)

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 15:43:13) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0 and b > 0 and c > 0):
	#Testa se medidas correspondem das de um triangulo
	if (a + b > c and a+ c > b and c + b > a):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s - a) * (s - b) * (s - c))
		print(area)
	else:
		print("Não é um triângulo")
else: print("Não é um triângulo")
-- OUTPUT:
Não é um triângulo
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 15:46:01) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0 and b > 0 and c > 0):
	#Testa se medidas correspondem das de um triangulo
	if (a + b > c and a+ c > b and c + b > a):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s - a) * (s - b) * (s - c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
		
   else: 
	   print("Area: invalida")
-- ERROR:
File "XXXX", line 20
    else: 
         ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 15:46:14) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0 and b > 0 and c > 0):
	#Testa se medidas correspondem das de um triangulo
	if (a + b > c and a+ c > b and c + b > a):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s - a) * (s - b) * (s - c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
		
else: 
	print("Area: invalida")
-- OUTPUT:
Area: invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 15:46:16) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0 and b > 0 and c > 0):
	#Testa se medidas correspondem das de um triangulo
	if (a + b > c and a+ c > b and c + b > a):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s - a) * (s - b) * (s - c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
		
else: 
	print("Area: invalida")
-- EXECUTION TIME:
0.143451
-- TEST CASE 1:
---- input:
-11.0
22.0
33.0
---- correct output:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Area: invalida
-- TEST CASE 2:
---- input:
1.61
2.40
2.89
---- correct output:
Entradas: 1.61 , 2.4 , 2.89
Area: 1.932
---- user output:
Area: 1.932
-- TEST CASE 3:
---- input:
11.0
22.0
33.0
---- correct output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Area: invalida
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 15:46:18) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0 and b > 0 and c > 0):
	#Testa se medidas correspondem das de um triangulo
	if (a + b > c and a+ c > b and c + b > a):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s - a) * (s - b) * (s - c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
		
else: 
	print("Area: invalida")
-- EXECUTION TIME:
0.170198
-- TEST CASE 1:
---- input:
-11.0
22.0
33.0
---- correct output:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Area: invalida
-- TEST CASE 2:
---- input:
1.61
2.40
2.89
---- correct output:
Entradas: 1.61 , 2.4 , 2.89
Area: 1.932
---- user output:
Area: 1.932
-- TEST CASE 3:
---- input:
11.0
22.0
33.0
---- correct output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Area: invalida
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 15:46:20) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a > 0 and b > 0 and c > 0):
	#Testa se medidas correspondem das de um triangulo
	if (a + b > c and a+ c > b and c + b > a):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s - a) * (s - b) * (s - c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
		
else: 
	print("Area: invalida")
-- OUTPUT:
Area: invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 15:47:22) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)
if (a > 0 and b > 0 and c > 0):
	#Testa se medidas correspondem das de um triangulo
	if (a + b > c and a+ c > b and c + b > a):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s - a) * (s - b) * (s - c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
		
else: 
	print("Area: invalida")
-- EXECUTION TIME:
0.166807
-- TEST CASE 1:
---- input:
-11.0
22.0
33.0
---- correct output:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
-- TEST CASE 2:
---- input:
1.61
2.40
2.89
---- correct output:
Entradas: 1.61 , 2.4 , 2.89
Area: 1.932
---- user output:
Entradas: 1.61 , 2.4 , 2.89
Area: 1.932
-- TEST CASE 3:
---- input:
11.0
22.0
33.0
---- correct output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:35:17) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)
if (a > 0 and b > 0 and c > 0):
	#Testa se medidas correspondem das de um triangulo
	if (a + b > c and a+ c > b and c + b > a):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s - a) * (s - b) * (s - c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
		
else: 
	print("Area: invalida")
-- OUTPUT:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 17:37:14) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)
if (a > 0 and b > 0 and c > 0):
	#Testa se medidas correspondem das de um triangulo
	if (a + b > c and a+ c > b and c + b > a):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s - a) * (s - b) * (s - c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
		
else: 
	print("Area: invalida")
-- EXECUTION TIME:
0.152875
-- TEST CASE 1:
---- input:
-11.0
22.0
33.0
---- correct output:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
-- TEST CASE 2:
---- input:
1.61
2.40
2.89
---- correct output:
Entradas: 1.61 , 2.4 , 2.89
Area: 1.932
---- user output:
Entradas: 1.61 , 2.4 , 2.89
Area: 1.932
-- TEST CASE 3:
---- input:
11.0
22.0
33.0
---- correct output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:09:43) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)
if (a > 0 and b > 0 and c > 0):
	#Testa se medidas correspondem das de um triangulo
	if (a + b > c and a+ c > b and c + b > a):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s - a) * (s - b) * (s - c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
		
else: 
	print("Area: invalida")
-- OUTPUT:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:09:50) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)
if (a > 0 and b > 0 and c > 0):
	#Testa se medidas correspondem das de um triangulo
	if (a + b > c and a+ c > b and c + b > a):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s - a) * (s - b) * (s - c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
		
else: 
	print("Area: invalida")
-- OUTPUT:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:10:53) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)
if (a > 0 and b > 0 and c > 0):
	#Testa se medidas correspondem das de um triangulo
	if (a + b > c and a+ c > b and c + b > a):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s - a) * (s - b) * (s - c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
		
else: 
	print("Area: invalida")
-- OUTPUT:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:11:25) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)
if (a > 0 and b > 0 and c > 0):
	#Testa se medidas correspondem das de um triangulo
	if (a + b > c and a+ c > b and c + b > a):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s - a) * (s - b) * (s - c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
		
else: 
	print("Area: invalida")
-- OUTPUT:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:11:46) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)
if (a > 0 and b > 0 and c > 0):
	#Testa se medidas correspondem das de um triangulo
	if (a + b > c and a+ c > b and c + b > a):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s - a) * (s - b) * (s - c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
		
else: 
	print("Area: invalida")
-- OUTPUT:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
