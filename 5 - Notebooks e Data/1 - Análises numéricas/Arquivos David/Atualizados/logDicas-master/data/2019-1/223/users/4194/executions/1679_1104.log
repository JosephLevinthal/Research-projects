== SUBMITION (2019-05-01 03:56:53) 
-- CODE:
a = float(input("N1 "))5
b = float(input("N2 "))15
c = float(input("N3 "))15
d = float(input("N4 "))20
print("Intervalo 1:", a, ",", b)
print("Intervalo 2:", c, ",", d)

if(b>a and d>c):
	if((a<=c and b>=c) or (c<=a and b<=c) or (d>=a and b>=d) or (d<=a and d>=b)):
		print("Ha intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.110029
-- ERROR:
  File "/home/codebench/codes/1679/1104/main.py", line 1
    a = float(input())5
                      ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 03:56:55) 
-- CODE:
a = float(input("N1 "))5
b = float(input("N2 "))15
c = float(input("N3 "))15
d = float(input("N4 "))20
print("Intervalo 1:", a, ",", b)
print("Intervalo 2:", c, ",", d)

if(b>a and d>c):
	if((a<=c and b>=c) or (c<=a and b<=c) or (d>=a and b>=d) or (d<=a and d>=b)):
		print("Ha intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 1
    a = float(input())5
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 03:57:12) 
-- CODE:
a = float(input("N1 "))
b = float(input("N2 "))
c = float(input("N3 "))
d = float(input("N4 "))
print("Intervalo 1:", a, ",", b)
print("Intervalo 2:", c, ",", d)

if(b>a and d>c):
	if((a<=c and b>=c) or (c<=a and b<=c) or (d>=a and b>=d) or (d<=a and d>=b)):
		print("Ha intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 03:58:16) 
-- CODE:
a = float(input("N1 "))
b = float(input("N2 "))
c = float(input("N3 "))
d = float(input("N4 "))
print("Intervalo 1:", a, ",", b)
print("Intervalo 2:", c, ",", d)

if(b>a and d>c):
	if((a<=c and b>=c) or (c<=a and b<=c) or (d>=a and b>=d) or (d<=a and d>=b)):
		print("Ha intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.141017
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
