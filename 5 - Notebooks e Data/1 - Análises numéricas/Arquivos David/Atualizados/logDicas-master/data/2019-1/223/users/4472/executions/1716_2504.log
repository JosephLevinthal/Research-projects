== SUBMITION (2019-05-11 21:02:08) 
-- CODE:
quanInCo = int(input("Quantidade inicial de copias do virus no sangue de Micaleteia:"))
quanInLeu = int(input("Quantidade inicial de leucocitos no sangue:"))
PMultV = int(input("Percentual de multilicacao diaria do virus:"))/100
PMultL = int(input("Percentual de multilicacao diaria dos leucocitos:"))/100

dias = 0
while(quanInCo == quanInLeu/2):
	quanInCo = quanInCo + (quanInCo * PMultV)
	quanInLeu = quanInLeu + (quanInLeu * PMultL)
	dias = dias + 1
print(dias)
-- EXECUTION TIME:
0.030787
-- ERROR:
Error response from daemon: Container 7750cf393d0a684d3f8b44b5b6e202cd99ea3a8d68a2a7b5a0612e96b04382e6 is not running

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-11 21:02:16) 
-- CODE:
quanInCo = int(input("Quantidade inicial de copias do virus no sangue de Micaleteia:"))
quanInLeu = int(input("Quantidade inicial de leucocitos no sangue:"))
PMultV = int(input("Percentual de multilicacao diaria do virus:"))/100
PMultL = int(input("Percentual de multilicacao diaria dos leucocitos:"))/100

dias = 0
while(quanInCo == quanInLeu/2):
	quanInCo = quanInCo + (quanInCo * PMultV)
	quanInLeu = quanInLeu + (quanInLeu * PMultL)
	dias = dias + 1
	print(dias)
-- EXECUTION TIME:
0.0327561
-- ERROR:
Error response from daemon: Container 7750cf393d0a684d3f8b44b5b6e202cd99ea3a8d68a2a7b5a0612e96b04382e6 is not running

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 21:02:22) 
-- CODE:
quanInCo = int(input("Quantidade inicial de copias do virus no sangue de Micaleteia:"))
quanInLeu = int(input("Quantidade inicial de leucocitos no sangue:"))
PMultV = int(input("Percentual de multilicacao diaria do virus:"))/100
PMultL = int(input("Percentual de multilicacao diaria dos leucocitos:"))/100

dias = 0
while(quanInCo == quanInLeu/2):
	quanInCo = quanInCo + (quanInCo * PMultV)
	quanInLeu = quanInLeu + (quanInLeu * PMultL)
	dias = dias + 1
	print(dias)
-- OUTPUT:
11
1
11.0
11
9
1.2222222222222223
11
45
0.24444444444444444
11
189
0.0582010582010582
11
729
0.015089163237311385
11
2673
0.00411522633744856
11
9477
0.0011607048644085682
11
32805
0.0003353147386069197
11
111537
9.862198194321167e-05
11
373977
2.94135735620105e-05
11
1240029
8.87076028060634e-06
3.1415933
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 16:12:59) 
-- CODE:
quanInCo = int(input("Quantidade inicial de copias do virus no sangue de Micaleteia:"))
quanInLeu = int(input("Quantidade inicial de leucocitos no sangue:"))
PMultV = int(input("Percentual de multilicacao diaria do virus:"))/100
PMultL = int(input("Percentual de multilicacao diaria dos leucocitos:"))/100

dias = 0
while(quanInCo == quanInLeu/2):
	quanInCo = quanInCo + (quanInCo * PMultV)
	quanInLeu = quanInLeu + (quanInLeu * PMultL)
	dias = dias + 1
	print(dias)
-- EXECUTION TIME:
0.22268
-- TEST CASE 1:
---- input:
350625
5500
2
75
---- correct output:
9
---- user output:

-- TEST CASE 2:
---- input:
650090
90045
4
90
---- correct output:
5
---- user output:

-- TEST CASE 3:
---- input:
419250
1725
9
59
---- correct output:
17
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 16:13:12) 
-- CODE:
quanInCo = int(input("Quantidade inicial de copias do virus no sangue de Micaleteia:"))
quanInLeu = int(input("Quantidade inicial de leucocitos no sangue:"))
PMultV = int(input("Percentual de multilicacao diaria do virus:"))/100
PMultL = int(input("Percentual de multilicacao diaria dos leucocitos:"))/100

dias = 0
while(quanInCo == quanInLeu/2):
	quanInCo = quanInCo + (quanInCo * PMultV)
	quanInLeu = quanInLeu + (quanInLeu * PMultL)
	dias = dias + 1
	print(dias)
-- EXECUTION TIME:
0.328608
-- TEST CASE 1:
---- input:
350625
5500
2
75
---- correct output:
9
---- user output:

-- TEST CASE 2:
---- input:
650090
90045
4
90
---- correct output:
5
---- user output:

-- TEST CASE 3:
---- input:
419250
1725
9
59
---- correct output:
17
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 16:41:47) 
-- CODE:
quanInCo = int(input("Quantidade inicial de copias do virus no sangue de Micaleteia:"))
quanInLeu = int(input("Quantidade inicial de leucocitos no sangue:"))
PMultV = int(input("Percentual de multilicacao diaria do virus:"))/100
PMultL = int(input("Percentual de multilicacao diaria dos leucocitos:"))/100

dias = 0
while(quanInCo == quanInLeu/2):
	quanInCo = quanInCo + (quanInCo * PMultV)
	quanInLeu = quanInLeu + (quanInLeu * PMultL)
	dias = dias + 1
print(dias)
-- EXECUTION TIME:
0.163026
-- TEST CASE 1:
---- input:
350625
5500
2
75
---- correct output:
9
---- user output:
0
-- TEST CASE 2:
---- input:
650090
90045
4
90
---- correct output:
5
---- user output:
0
-- TEST CASE 3:
---- input:
419250
1725
9
59
---- correct output:
17
---- user output:
0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:42:17) 
-- CODE:
quanInCo = int(input("Quantidade inicial de copias do virus no sangue de Micaleteia:"))
quanInLeu = int(input("Quantidade inicial de leucocitos no sangue:"))
PMultV = int(input("Percentual de multilicacao diaria do virus:"))/100
PMultL = int(input("Percentual de multilicacao diaria dos leucocitos:"))/100

dias = 0
while(quanInCo > quanInLeu/2):
	quanInCo = quanInCo + (quanInCo * PMultV)
	quanInLeu = quanInLeu + (quanInLeu * PMultL)
	dias = dias + 1
print(dias)
-- OUTPUT:
9
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 16:42:19) 
-- CODE:
quanInCo = int(input("Quantidade inicial de copias do virus no sangue de Micaleteia:"))
quanInLeu = int(input("Quantidade inicial de leucocitos no sangue:"))
PMultV = int(input("Percentual de multilicacao diaria do virus:"))/100
PMultL = int(input("Percentual de multilicacao diaria dos leucocitos:"))/100

dias = 0
while(quanInCo > quanInLeu/2):
	quanInCo = quanInCo + (quanInCo * PMultV)
	quanInLeu = quanInLeu + (quanInLeu * PMultL)
	dias = dias + 1
print(dias)
-- EXECUTION TIME:
0.219586
-- TEST CASE 1:
---- input:
350625
5500
2
75
---- correct output:
9
---- user output:
9
-- TEST CASE 2:
---- input:
650090
90045
4
90
---- correct output:
5
---- user output:
5
-- TEST CASE 3:
---- input:
419250
1725
9
59
---- correct output:
17
---- user output:
17
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
