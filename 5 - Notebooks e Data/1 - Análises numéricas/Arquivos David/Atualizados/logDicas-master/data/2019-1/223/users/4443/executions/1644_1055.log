== TEST (2019-04-16 07:25:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import radians

#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
r = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
rad = radians(a)
print(rad)

-- OUTPUT:
0.7941248096574199
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 07:26:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import radians

#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
r = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
rad = radians(a)
print(rad)

-- OUTPUT:
0.7941248096574199
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 07:26:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import radians

#Leitura dos valores
#v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
#r = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
rad = radians(a)
print(rad)

-- OUTPUT:
0.1832595714594046
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 07:29:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import radians

#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
r = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
rad = radians(a)

# Calculo que o passaro percorrera
R = (v0**2 * sin(2*rad))/9.8
print(R)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 16, in <module>
    R = (v0**2 * sin(2*rad))/9.8
NameError: name 'sin' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 07:29:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import radians

#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
r = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
rad = radians(a)

# Calculo que o passaro percorrera
R = (v0**2 * sin(2*rad))/9.8
print(R)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 16, in <module>
    R = (v0**2 * sin(2*rad))/9.8
NameError: name 'sin' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 07:30:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *


#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
r = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
rad = radians(a)

# Calculo que o passaro percorrera
R = (v0**2 * sin(2*rad))/9.8
print(R)

-- OUTPUT:
11.2482865705094
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 07:31:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *


#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
r = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
rad = radians(a)

# Calculo que o passaro percorrera
R = (v0**2 * sin(2*rad))/9.8
print(R)

-- OUTPUT:
11.2482865705094
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 07:33:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *


#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
rad = radians(a)

# Calculo que o passaro percorrera
R = (v0**2 * sin(2*rad))/9.8

if(R == D):
	print("sim")
	
else:
	print("nao")

-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 07:34:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *


#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
rad = radians(a)

# Calculo que o passaro percorrera
R = (v0**2 * sin(2*rad))/9.8

if(R >= D):
	print("sim")
	
else:
	print("nao")

-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 07:38:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *


#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
rad = radians(a)

# Calculo que o passaro percorrera
R = (v0**2 * sin(2*rad))/9.8
T = (R - 0.1)
S = (R + 0.1)
if(T =< R =< S):
	print("sim")
	
else:
	print("nao")

-- ERROR:
File "XXXX", line 20
    if(T =< R =< S):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 07:38:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *


#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
rad = radians(a)

# Calculo que o passaro percorrera
R = (v0**2 * sin(2*rad))/9.8
T = (R - 0.1)
S = (R + 0.1)
if(T =< R):
	print("sim")
	
else:
	print("nao")

-- ERROR:
File "XXXX", line 20
    if(T =< R):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 07:39:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *


#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
rad = radians(a)

# Calculo que o passaro percorrera
R = (v0**2 * sin(2*rad))/9.8
T = (R - 0.1)
S = (R + 0.1)
if(R >= T):
	print("sim")
	
else:
	print("nao")

-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 07:40:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *


#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
rad = radians(a)

# Calculo que o passaro percorrera
R = (v0**2 * sin(2*rad))/9.8
T = (R - 0.1)
S = (R + 0.1)
if(R >= T):
	print("sim")
if(R <= S):
	print("sim")
	
else:
	print("nao")

-- OUTPUT:
sim
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 07:40:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *


#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
rad = radians(a)

# Calculo que o passaro percorrera
R = (v0**2 * sin(2*rad))/9.8
T = (R - 0.1)
S = (R + 0.1)
if(R >= T):
if(R <= S):
	print("sim")
	
else:
	print("nao")

-- ERROR:
File "XXXX", line 21
    if(R <= S):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 07:41:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *


#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
rad = radians(a)

# Calculo que o passaro percorrera
R = (v0**2 * sin(2*rad))/9.8
T = (R - 0.1)
S = (R + 0.1)
if(R >= T):
	if(R <= S):
	print("sim")
	
else:
	print("nao")

-- ERROR:
File "XXXX", line 22
    print("sim")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 07:41:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *


#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
rad = radians(a)

# Calculo que o passaro percorrera
R = (v0**2 * sin(2*rad))/9.8
T = (R - 0.1)
S = (R + 0.1)
if(R >= T):
	if(R <= S):
		print("sim")
	
else:
	print("nao")

-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 07:41:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *


#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
rad = radians(a)

# Calculo que o passaro percorrera
R = (v0**2 * sin(2*rad))/9.8
T = (R - 0.1)
S = (R + 0.1)
if(R >= T):
	if(R <= S):
		print("sim")
	
else:
	print("nao")

-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 07:41:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *


#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
rad = radians(a)

# Calculo que o passaro percorrera
R = (v0**2 * sin(2*rad))/9.8
T = (R - 0.1)
S = (R + 0.1)
if(R >= T):
	if(R <= S):
		print("sim")
	
else:
	print("nao")

-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 07:42:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *


#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
rad = radians(a)

# Calculo que o passaro percorrera
R = (v0**2 * sin(2*rad))/9.8
print(R)

T = (R - 0.1)
S = (R + 0.1)
if(R >= T):
	if(R <= S):
		print("sim")
	
else:
	print("nao")

-- OUTPUT:
11.2482865705094
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:52:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *


#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
rad = radians(a)

# Calculo que o passaro percorrera
R = (v0**2 * sin(2*rad))/9.8
print(R)

d = range(R - 0.1, R + 0.1)

if(R == d):
	print("sim")
	
else:
	print("nao")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 20, in <module>
    d = range(R - 0.1, R + 0.1)
TypeError: 'float' object cannot be interpreted as an integer
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:54:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *


#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
rad = radians(a)

# Calculo que o passaro percorrera
R = (v0**2 * sin(2*rad))/9.8
print(R)

d = float(range(R - 0.1, R + 0.1))

if(R == d):
	print("sim")
	
else:
	print("nao")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 20, in <module>
    d = float(range(R - 0.1, R + 0.1))
TypeError: 'float' object cannot be interpreted as an integer
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:59:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *


#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
rad = radians(a)

# Calculo que o passaro percorrera
R = (v0**2 * sin(2*rad))/9.8
R = round(R, 2)
print(R)

if(R == D):
	print("sim")
	
else:
	print("nao")

-- OUTPUT:
11.25
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 09:00:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *


#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
rad = radians(a)

# Calculo que o passaro percorrera
R = (v0**2 * sin(2*rad))/9.8
R = round(R, 2)
print(R)

if(R == D):
	print("sim")
	
else:
	print("nao")

-- EXECUTION TIME:
0.155317
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
11.25
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
49.91
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:02:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *


#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
rad = radians(a)

# Calculo que o passaro percorrera
R1 = v0**2
R2 = sin(2 * rad)
print R2

#R = round(R, 2)
#print(R)

#if(R == D):
#	print("sim")
	
#else:
#	print("nao")

-- ERROR:
File "XXXX", line 19
    print R2
           ^
SyntaxError: Missing parentheses in call to 'print'. Did you mean print(R2)?
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:03:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *


#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
rad = radians(a)

# Calculo que o passaro percorrera
Ra = v0**2
Rb = sin(2 * rad)
print(Rb)

#R = round(R, 2)
#print(R)

#if(R == D):
#	print("sim")
	
#else:
#	print("nao")

-- OUTPUT:
0.9998476951563913
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:03:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *


#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
rad = radians(a)

# Calculo que o passaro percorrera
Ra = v0**2
Rb = sin(2 * rad)
print(Rb)

#R = round(R, 2)
#print(R)

#if(R == D):
#	print("sim")
	
#else:
#	print("nao")

-- OUTPUT:
0.9998476951563913
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:05:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *


#Leitura dos valores
#v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
#D = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
print(radians(a))

# Calculo que o passaro percorrera
Ra = v0**2
Rb = sin(rad)
print(Rb)

#R = round(R, 2)
#print(R)

#if(R == D):
#	print("sim")
	
#else:
#	print("nao")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 17, in <module>
    Ra = v0**2
NameError: name 'v0' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:08:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *


#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
rad = adians(a)

# Calculo que o passaro percorrera
Ra = v0**2
Rb = sin(2 * rad)
g = 9.8
R = (Ra * Rb)/g

print(R)

#if(R == D):
#	print("sim")
	
#else:
#	print("nao")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    rad = adians(a)
NameError: name 'adians' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:08:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *


#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
rad = radians(a)

# Calculo que o passaro percorrera
Ra = v0**2
Rb = sin(2 * rad)
g = 9.8
R = (Ra * Rb)/g

print(R)

#if(R == D):
#	print("sim")
	
#else:
#	print("nao")

-- OUTPUT:
11.2482865705094
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:10:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *


#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
rad = radians(a)

# Calculo que o passaro percorrera
Ra = v0**2
Rb = sin(2 * rad)
g = 9.8
R = (Ra * Rb)/g
R = round(R, 2)
print(R)

if(R == D):
#	print("sim")
	
#else:
#	print("nao")

-- ERROR:
File "XXXX", line 29
    
                  ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:11:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *


#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
rad = radians(a)

# Calculo que o passaro percorrera
Ra = v0**2
Rb = sin(2 * rad)
g = 9.8
R = (Ra * Rb)/g
R = round(R, 2)
print(R)

#if(R == D):
#	print("sim")
	
#else:
#	print("nao")
-- OUTPUT:
11.25
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:13:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *


#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
rad = radians(a)

# Calculo que o passaro percorrera
Ra = v0**2
Rb = sin(2 * rad)
g = 9.8
R = (Ra * Rb)/g
R = round(R, 2)
print(R)

if(D == R):
	print("sim")
elif(D + 0.1 == R)
	print("sim")
elif(D - 0.1 == R)
	print("sim")
	
else:
	print("nao")
-- ERROR:
File "XXXX", line 26
    elif(D + 0.1 == R)
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:13:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *


#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
rad = radians(a)

# Calculo que o passaro percorrera
Ra = v0**2
Rb = sin(2 * rad)
g = 9.8
R = (Ra * Rb)/g
R = round(R, 2)
print(R)

if(D == R):
	print("sim")
elif(D + 0.1 == R):
	print("sim")
elif(D - 0.1 == R):
	print("sim")
	
else:
	print("nao")
-- OUTPUT:
11.25
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:14:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *


#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
rad = radians(a)

# Calculo que o passaro percorrera
Ra = v0**2
Rb = sin(2 * rad)
g = 9.8
R = (Ra * Rb)/g
R = round(R, 2)
print(R)

if(D == R):
	print("sim")
elif(D + 0.1 == R):
	print("sim")
elif(D - 0.1 == R):
	print("sim")
	
else:
	print("nao")
-- OUTPUT:
11.25
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:14:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *


#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
rad = radians(a)

# Calculo que o passaro percorrera
Ra = v0**2
Rb = sin(2 * rad)
g = 9.8
R = (Ra * Rb)/g
R = round(R, 2)
print(R)

if(D == R):
	print("sim")
elif(D + 0.1 == R):
	print("sim")
elif(D - 0.1 == R):
	print("sim")
	
else:
	print("nao")
-- OUTPUT:
11.25
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:14:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *


#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
rad = radians(a)

# Calculo que o passaro percorrera
Ra = v0**2
Rb = sin(2 * rad)
g = 9.8
R = (Ra * Rb)/g
R = round(R, 2)
print(R)

if(D == R):
	print("sim")
elif(D + 0.1 == R):
	print("sim")
elif(D - 0.1 == R):
	print("sim")
	
else:
	print("nao")
-- OUTPUT:
11.25
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 09:15:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *


#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
rad = radians(a)

# Calculo que o passaro percorrera
Ra = v0**2
Rb = sin(2 * rad)
g = 9.8
R = (Ra * Rb)/g
R = round(R, 2)
print(R)

if(D == R):
	print("sim")
elif(D + 0.1 == R):
	print("sim")
elif(D - 0.1 == R):
	print("sim")
	
else:
	print("nao")
-- EXECUTION TIME:
0.123803
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
11.25
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
49.91
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:16:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *


#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
rad = radians(a)

# Calculo que o passaro percorrera
Ra = v0**2
Rb = sin(2 * rad)
g = 9.8
R = (Ra * Rb)/g
R = round(R, 2)
print(R)

if(D == R):
	print("sim")
if(D == R + 0.1):
	print("sim")
if(D == R - 0.1 ):
	print("sim")
	
else:
	print("nao")
-- OUTPUT:
11.25
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:17:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *


#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
rad = radians(a)

# Calculo que o passaro percorrera
Ra = v0**2
Rb = sin(2 * rad)
g = 9.8
R = (Ra * Rb)/g
R = round(R, 2)
print(R)

if(D == R):
	print("sim")
if(D == R + 0.1):
	print("sim")
if(D == R - 0.1 ):
	print("sim")
	
else:
	print("nao")
-- OUTPUT:
11.25
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:20:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *


#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
rad = radians(a)

# Calculo que o passaro percorrera
Ra = v0**2
Rb = sin(2 * rad)
g = 9.8
R = (Ra * Rb)/g
R = round(R, 2)
print(R)

dif = abs(D - R)
print(dif)

#if(D == R):
#	print("sim")
#if(D == R + 0.1):
#	print("sim")
#if(D == R - 0.1 ):
#	print("sim")
	
#else:
#	print("nao")
-- OUTPUT:
11.25
0.05000000000000071
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:20:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *


#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
rad = radians(a)

# Calculo que o passaro percorrera
Ra = v0**2
Rb = sin(2 * rad)
g = 9.8
R = (Ra * Rb)/g
R = round(R, 2)
print(R)

dif = abs(D - R)
print(round(dif,2)

#if(D == R):
#	print("sim")
#if(D == R + 0.1):
#	print("sim")
#if(D == R - 0.1 ):
#	print("sim")
	
#else:
#	print("nao")
-- ERROR:
File "XXXX", line 36
    
                  ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:21:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *


#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
rad = radians(a)

# Calculo que o passaro percorrera
Ra = v0**2
Rb = sin(2 * rad)
g = 9.8
R = (Ra * Rb)/g
R = round(R, 2)
print(R)

dif = abs(D - R)
dif = round(dif, 2)

#if(D == R):
#	print("sim")
#if(D == R + 0.1):
#	print("sim")
#if(D == R - 0.1 ):
#	print("sim")
	
#else:
#	print("nao")
-- OUTPUT:
11.25
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:21:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *


#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
rad = radians(a)

# Calculo que o passaro percorrera
Ra = v0**2
Rb = sin(2 * rad)
g = 9.8
R = (Ra * Rb)/g
R = round(R, 2)
print(R)

dif = abs(D - R)
dif = round(dif, 2)
print(dif)

#if(D == R):
#	print("sim")
#if(D == R + 0.1):
#	print("sim")
#if(D == R - 0.1 ):
#	print("sim")
	
#else:
#	print("nao")
-- OUTPUT:
11.25
0.05
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:42:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *


#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
rad = radians(a)

# Calculo que o passaro percorrera
Ra = v0**2
Rb = sin(2 * rad)
g = 9.8
R = (Ra * Rb)/g
R = round(R, 2)
print(R)

dif = abs(D - R)
dif = round(dif, 2)
print(dif)

if(D <= R + dif):
	print("sim")
if(D >= R - dif):
	print("sim")
if(D == R):
	print("sim")
	
else:
	print("nao")
-- OUTPUT:
11.25
0.05
sim
sim
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:43:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *


#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
rad = radians(a)

# Calculo que o passaro percorrera
Ra = v0**2
Rb = sin(2 * rad)
g = 9.8
R = (Ra * Rb)/g
R = round(R, 2)
print(R)

dif = abs(D - R)
dif = round(dif, 2)
print(dif)

if(D <= R + dif):
	print("sim")
elif(D >= R - dif):
	print("sim")
elif(D == R):
	print("sim")
	
else:
	print("nao")
-- OUTPUT:
11.25
0.05
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:43:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *


#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
rad = radians(a)

# Calculo que o passaro percorrera
Ra = v0**2
Rb = sin(2 * rad)
g = 9.8
R = (Ra * Rb)/g
R = round(R, 2)
print(R)

dif = abs(D - R)
dif = round(dif, 1)
print(dif)

if(D <= R + dif):
	print("sim")
elif(D >= R - dif):
	print("sim")
elif(D == R):
	print("sim")
	
else:
	print("nao")
-- OUTPUT:
11.25
0.1
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:44:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *


#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
rad = radians(a)

# Calculo que o passaro percorrera
Ra = v0**2
Rb = sin(2 * rad)
g = 9.8
R = (Ra * Rb)/g
R = round(R, 1)
print(R)

dif = abs(D - R)
dif = round(dif, 1)
print(dif)

if(D <= R + dif):
	print("sim")
elif(D >= R - dif):
	print("sim")
elif(D == R):
	print("sim")
	
else:
	print("nao")
-- OUTPUT:
11.2
0.1
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:49:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *


#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))

#Conversao degraus para radianos:
rad = radians(a)

# Calculo que o passaro percorrera
Ra = v0**2
Rb = sin(2 * rad)
g = 9.8
R = (Ra * Rb)/g
R = round(R, 1)
print(R)

dif = abs(D - R)
dif = round(dif, 1)
print(dif)

if(dif <= 1):
	print("sim")

else:
	print("nao")
-- OUTPUT:
11.2
0.1
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:51:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *

#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))
rad = radians(a)
Ra = v0**2
Rb = sin(2 * rad)
g = 9.8
R = (Ra * Rb)/g
print(R)
dif = abs(D - R)
dif = round(dif, 1)
print(dif)

if(dif <= 0.1):
	print("sim")

else:
	print("nao")
-- OUTPUT:
11.2482865705094
0.1
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 09:52:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *

#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))
rad = radians(a)
Ra = v0**2
Rb = sin(2 * rad)
g = 9.8
R = (Ra * Rb)/g
print(R)
dif = abs(D - R)
dif = round(dif, 1)
print(dif)

if(dif <= 0.1):
	print("sim")

else:
	print("nao")
-- EXECUTION TIME:
0.156759
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
11.2482865705094
0.1
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
49.91357750773639
1.1
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:52:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *

#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))
rad = radians(a)
Ra = v0**2
Rb = sin(2 * rad)
g = 9.8
R = (Ra * Rb)/g
dif = abs(D - R)
dif = round(dif, 1)

if(dif <= 0.1):
	print("sim")

else:
	print("nao")
-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:53:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *

#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))
rad = radians(a)
Ra = v0**2
Rb = sin(2 * rad)
g = 9.8
R = (Ra * Rb)/g
dif = abs(D - R)
dif = round(dif, 2)

if(dif <= 0.1):
	print("sim")

else:
	print("nao")
-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 09:53:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import *

#Leitura dos valores
v0 = float(input("Digite a v0: "))
a = float(input("Digite o angulo do vetor de lancamento: "))
D = float(input("Digite a distancia em metros entre o passaro e o porco: "))
rad = radians(a)
Ra = v0**2
Rb = sin(2 * rad)
g = 9.8
R = (Ra * Rb)/g
dif = abs(D - R)
dif = round(dif, 2)

if(dif <= 0.1):
	print("sim")

else:
	print("nao")
-- EXECUTION TIME:
0.165432
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
