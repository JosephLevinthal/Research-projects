== SUBMITION (2019-07-09 14:52:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*

V= float(input("velocidade inicial: "))

ANG= radians(float(input("angulo: ")))

D=float(input("distancia: "))

g = 9.8

R= (V) ** 2 * sin( 2  * ANG )  / g

t= abs(D-R)


if (t<0.1):
	men="sim"
else:
	men="nao"
	
print(men)
-- EXECUTION TIME:
0.68003
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
velocidade inicial: angulo: distancia: nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-09 14:52:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*

V= float(input("velocidade inicial: "))

ANG= radians(float(input("angulo: ")))

D=float(input("distancia: "))

g = 9.8

R= (V) ** 2 * sin( 2  * ANG )  / g

t= abs(D-R)


if (t<0.1):
	men="sim"
else:
	men="nao"
	
print(men)
-- EXECUTION TIME:
0.65066
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
