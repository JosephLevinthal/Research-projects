== TEST (2019-04-14 12:16:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("digite o raio: "))
x = float(input("digite a altura: "))
y = int(input("digite um numero em um intervalo de 1 ate 2: "))


if y == 1:
	V = (4*pi*(r**3))/3
	print(round(V,4)
else y == 2:
	V = ((pi*(x**2))*((3*r) - x))/3
	print(round(V,4))
	

-- ERROR:
File "XXXX", line 13
    else y == 2:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 12:17:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("digite o raio: "))
x = float(input("digite a altura: "))
y = int(input("digite um numero em um intervalo de 1 ate 2: "))


if y == 1:
	V = (4*pi*(r**3))/3
	print(round(V,4)
if y == 2:
	V = ((pi*(x**2))*((3*r) - x))/3
	print(round(V,4))
	

-- ERROR:
File "XXXX", line 13
    if y == 2:
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 12:17:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("digite o raio: "))
x = float(input("digite a altura: "))
y = int(input("digite um numero em um intervalo de 1 ate 2: "))


if y == 1:
	V = (4*pi*(r**3))/3
	print(round(V,4)
if y == 2:
	V = ((pi*(x**2))*((3*r) - x))/3
	print(round(V,4))
	

-- ERROR:
File "XXXX", line 13
    if y == 2:
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 12:17:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("digite o raio: "))
x = float(input("digite a altura: "))
y = int(input("digite um numero em um intervalo de 1 ate 2: "))


if y == 1:
	V = (4*pi*(r**3))/3
	print(round(V,4))
			
if y == 2:
	V = ((pi*(x**2))*((3*r) - x))/3
	print(round(V,4))
	

-- OUTPUT:
179.5944
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 12:17:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("digite o raio: "))
x = float(input("digite a altura: "))
y = int(input("digite um numero em um intervalo de 1 ate 2: "))


if y == 1:
	V = (4*pi*(r**3))/3
	print(round(V,4))
			
else y == 2:
	V = ((pi*(x**2))*((3*r) - x))/3
	print(round(V,4))
	

-- ERROR:
File "XXXX", line 14
    else y == 2:
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 12:17:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("digite o raio: "))
x = float(input("digite a altura: "))
y = int(input("digite um numero em um intervalo de 1 ate 2: "))


if y == 1:
	V = (4*pi*(r**3))/3
	print(round(V,4))
			
else y == 2:
	V = ((pi*(x**2))*((3*r) - x))/3
	print(round(V,4))
	

-- ERROR:
File "XXXX", line 14
    else y == 2:
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 12:17:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("digite o raio: "))
x = float(input("digite a altura: "))
y = int(input("digite um numero em um intervalo de 1 ate 2: "))


if y == 1:
	V = (4*pi*(r**3))/3
	print(round(V,4))
			
if y == 2:
	V = ((pi*(x**2))*((3*r) - x))/3
	print(round(V,4))
	

-- OUTPUT:
179.5944
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 12:17:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("digite o raio: "))
x = float(input("digite a altura: "))
y = int(input("digite um numero em um intervalo de 1 ate 2: "))


if y == 1:
	V = (4*pi*(r**3))/3
	print(round(V,4))
			
if y == 2:
	V = ((pi*(x**2))*((3*r) - x))/3
	print(round(V,4))
	

-- EXECUTION TIME:
0.16698
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
179.5944
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
19.9983
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 12:17:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("digite o raio: "))
x = float(input("digite a altura: "))
y = int(input("digite um numero em um intervalo de 1 ate 2: "))


if y == 1:
	V = (4*pi*(r**3))/3
	print(round(V,4))
			
else:
	V = ((pi*(x**2))*((3*r) - x))/3
	print(round(V,4))
	

-- OUTPUT:
179.5944
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 12:18:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("digite o raio: "))
x = float(input("digite a altura: "))
y = int(input("digite um numero em um intervalo de 1 ate 2: "))


if y == 1:
	V = (4*pi*(r**3))/3
	print(round(V,4))
			
else:
	V = ((pi*(x**2))*((3*r) - x))/3
	print(round(V,4))
	

-- OUTPUT:
179.5944
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 12:18:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("digite o raio: "))
x = float(input("digite a altura: "))
y = int(input("digite um numero em um intervalo de 1 ate 2: "))

print(pi)

if y == 1:
	V = (4*pi*(r**3))/3
	print(round(V,4))
			
else:
	V = ((pi*(x**2))*((3*r) - x))/3
	print(round(V,4))
	

-- OUTPUT:
3.141592653589793
179.5944
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 12:27:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("digite o raio: "))
x = float(input("digite a altura: "))
y = int(input("digite um numero em um intervalo de 1 ate 2: "))

print(pi)

if y == 1:
	V = (4*pi*(r**3))/3
	print(round(V,4))
			
if y == 2:
	V = ((pi*(x**2))*((3*r) - x))/3
	print(round(V,4))
	

-- OUTPUT:
3.141592653589793
179.5944
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 23:14:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("digite o raio: "))
x = float(input("digite a altura: "))
y = int(input("digite um numero em um intervalo de 1 ate 2: "))

if y == 1:
	V = (4*pi*(r**3))/3
	print(round(V,4))
			
else:
	V = ((pi*(x**2))*((3*r) - x))/3
	print(round(V,4))
	

-- OUTPUT:
179.5944
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 23:14:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("digite o raio: "))
x = float(input("digite a altura: "))
y = int(input("digite um numero em um intervalo de 1 ate 2: "))

if y == 1:
	V = (4*pi*(r**3))/3
	print(round(V,4))
			
else:
	V = ((pi*(x**2))*((3*r) - x))/3
	print(round(V,4))
	

-- EXECUTION TIME:
0.146482
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
179.5944
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
19.9983
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 23:14:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("digite o raio: "))
x = float(input("digite a altura: "))
y = int(input("digite um numero em um intervalo de 1 ate 2: "))

if y == 1:
	V = (4*pi*(r**3))/3
	print(round(V,4))
			
else:
	V = ((pi*(x**2))*((3*r) - x))/3
	print(round(V,4))
	

-- OUTPUT:
179.5944
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 23:15:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("digite o raio: "))
x = float(input("digite a altura: "))
y = int(input("digite um numero em um intervalo de 1 ate 2: "))

if y == 1:
	V = (4*pi*(r**3))/3
	print(round(V,4))
			
else:
	V = ((pi*(x**2))*((3*r) - x))/3
	print(round(V,4))
	

-- OUTPUT:
179.5944
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 09:37:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("digite o raio: "))
x = float(input("digite a altura: "))
y = int(input("digite um numero em um intervalo de 1 ate 2: "))

Vt = (4*pi*(r**3))/3
Vx = (pi*(x**2)*((3*r) - x))/3

vc = round(Vt - Vx,4)

if y == 1:
	if vx > 1000:
		print("o volume de ar e igual a " + str(Vx/1000) + "m3")
	else:
		print("o volume de ar e igual a " + str(Vx) + "cm3")
else:
	if vC > 1000:
		print("o volume de combustivel eh igual a " + str(Vc / 1000) + "m3")
	else:
		print("o volume de combustivel eh igual a " + str(Vc) + "cm3")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 15, in <module>
    if vx > 1000:
NameError: name 'vx' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 09:37:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("digite o raio: "))
x = float(input("digite a altura: "))
y = int(input("digite um numero em um intervalo de 1 ate 2: "))

Vt = (4*pi*(r**3))/3
Vx = (pi*(x**2)*((3*r) - x))/3

vC = round(Vt - Vx,4)

if y == 1:
	if vx > 1000:
		print("o volume de ar e igual a " + str(Vx/1000) + "m3")
	else:
		print("o volume de ar e igual a " + str(Vx) + "cm3")
else:
	if vC > 1000:
		print("o volume de combustivel eh igual a " + str(Vc / 1000) + "m3")
	else:
		print("o volume de combustivel eh igual a " + str(Vc) + "cm3")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 15, in <module>
    if vx > 1000:
NameError: name 'vx' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 09:37:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("digite o raio: "))
x = float(input("digite a altura: "))
y = int(input("digite um numero em um intervalo de 1 ate 2: "))

Vt = (4*pi*(r**3))/3
Vx = (pi*(x**2)*((3*r) - x))/3

vC = round(Vt - Vx,4)

if y == 1:
	if vx > 1000:
		print("o volume de ar e igual a " + str(Vx/1000) + "m3")
	else:
		print("o volume de ar e igual a " + str(Vx) + "cm3")
else:
	if vC > 1000:
		print("o volume de combustivel eh igual a " + str(vC / 1000) + "m3")
	else:
		print("o volume de combustivel eh igual a " + str(vC) + "cm3")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 15, in <module>
    if vx > 1000:
NameError: name 'vx' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 09:38:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("digite o raio: "))
x = float(input("digite a altura: "))
y = int(input("digite um numero em um intervalo de 1 ate 2: "))

Vt = (4*pi*(r**3))/3
Vx = (pi*(x**2)*((3*r) - x))/3

vC = round(Vt - Vx,4)

if y == 1:
	if vx > 1000:
		print("o volume de ar e igual a " + str(Vx/1000) + "m3")
	else:
		print("o volume de ar e igual a " + str(Vx) + "cm3")
else:
	if vC > 1000:
		print("o volume de combustivel eh igual a " + str(vC / 1000) + "m3")
	else:
		print("o volume de combustivel eh igual a " + str(vC) + "cm3")
-- EXECUTION TIME:
0.158417
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/2443/main.py", line 15, in <module>
    if vx > 1000:
NameError: name 'vx' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 09:52:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("digite o raio: "))
x = float(input("digite a altura: "))
y = int(input("digite um numero em um intervalo de 1 ate 2: "))

Vt = (4*pi*(r**3))/3
Vx = (pi*(x**2)*((3*r) - x))/3

vC = round(Vt - Vx,4)

if y == 1:
	print("o volume de ar e igual a " + str(Vx) + "m3")
else:
	print("o volume de ar e igual a " + str(vC) + "cm3")

-- EXECUTION TIME:
0.198936
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
o volume de ar e igual a 9.025664794069577m3
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
o volume de ar e igual a 290.3408cm3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 09:52:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("digite o raio: "))
x = float(input("digite a altura: "))
y = int(input("digite um numero em um intervalo de 1 ate 2: "))

Vt = (4*pi*(r**3))/3
Vx = (pi*(x**2)*((3*r) - x))/3

vC = round(Vt - Vx,4)

if y == 1:
	print("o volume de ar e igual a " + str(Vx) + "m3")
else:
	print("o volume de ar e igual a " + str(vC) + "cm3")

-- OUTPUT:
o volume de ar e igual a 9.025664794069577m3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 09:52:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("digite o raio: "))
x = float(input("digite a altura: "))
y = int(input("digite um numero em um intervalo de 1 ate 2: "))

Vt = (4*pi*(r**3))/3
Vx = (pi*(x**2)*((3*r) - x))/3

vC = round(Vt - Vx,4)

if y == 1:
	print(Vx)
else:
	print(vC)

-- EXECUTION TIME:
0.168868
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.025664794069577
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 09:52:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("digite o raio: "))
x = float(input("digite a altura: "))
y = int(input("digite um numero em um intervalo de 1 ate 2: "))

Vt = (4*pi*(r**3))/3
Vx = (pi*(x**2)*((3*r) - x))/3

vC = round(Vt - Vx,4)

if y == 1:
	print(Vx)
else:
	print(vC)

-- OUTPUT:
9.025664794069577
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 09:58:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("digite o raio: "))
x = float(input("digite a altura: "))
y = int(input("digite um numero em um intervalo de 1 ate 2: "))

Vt = (4*pi*(r**3))/3
Vx = (pi*(x**2)*((3*r) - x))/3

vC = (Vt - Vx)

if y == 1:
	print(round(Vx,4)
else:
	print(round(vC,4)

-- EXECUTION TIME:
0.188334
-- ERROR:
  File "/home/codebench/codes/1644/2443/main.py", line 16
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 09:58:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("digite o raio: "))
x = float(input("digite a altura: "))
y = int(input("digite um numero em um intervalo de 1 ate 2: "))

Vt = (4*pi*(r**3))/3
Vx = (pi*(x**2)*((3*r) - x))/3

vC = (Vt - Vx)

if y == 1:
	print(round(Vx,4)
else:
	print(round(vC,4)

-- ERROR:
File "XXXX", line 16
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 09:59:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("digite o raio: "))
x = float(input("digite a altura: "))
y = int(input("digite um numero em um intervalo de 1 ate 2: "))

Vt = (4*pi*(r**3))/3
Vx = (pi*(x**2)*((3*r) - x))/3

vC = (Vt - Vx)

if y == 1:
	print(round(Vx,4))
else:
	print(round(vC,4))

-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 09:59:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("digite o raio: "))
x = float(input("digite a altura: "))
y = int(input("digite um numero em um intervalo de 1 ate 2: "))

Vt = (4*pi*(r**3))/3
Vx = (pi*(x**2)*((3*r) - x))/3

vC = (Vt - Vx)

if y == 1:
	print(round(Vx,4))
else:
	print(round(vC,4))

-- EXECUTION TIME:
0.142969
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 10:03:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("digite o raio: "))
x = float(input("digite a altura: "))
y = int(input("digite um numero em um intervalo de 1 ate 2: "))

Vt = (4*pi*(r**3))/3
Vx = (pi*(x**2)*((3*r) - x))/3

vC = round(Vt - Vx,4)

if y == 1:
	print(Vx,4)
else:
	print(vC,4)

-- EXECUTION TIME:
0.134602
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.025664794069577 4
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408 4
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 10:04:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("digite o raio: "))
x = float(input("digite a altura: "))
y = int(input("digite um numero em um intervalo de 1 ate 2: "))

Vt = (4*pi*(r**3))/3
Vx = (pi*(x**2)*((3*r) - x))/3

vC = round(Vt - Vx,4)

if y == 1:
	print(Vx)
else:
	print(vC)

-- EXECUTION TIME:
0.201018
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.025664794069577
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 10:05:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("digite o raio: "))
x = float(input("digite a altura: "))
y = int(input("digite um numero em um intervalo de 1 ate 2: "))

Vt = (4*pi*(r**3))/3
Vx = round((pi*(x**2)*((3*r) - x))/3,4)

vC = round(Vt - Vx,4)

if y == 1:
	print(Vx)
else:
	print(vC)

-- EXECUTION TIME:
0.159958
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
