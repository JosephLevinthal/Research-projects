== TEST (2019-04-16 10:24:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math
vo=float(input("Velocidade inicial: "))
a=float(input("Angulo do vetor: "))
D=float(input("Distancia: "))

R=vo**2*sin(radians(2*a))/9.8

if (D-R < 0.1):
	print("sim")
else:
	print("nao")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    R=vo**2*sin(radians(2*a))/9.8
NameError: name 'sin' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:24:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math
vo=float(input("Velocidade inicial: "))
a=float(input("Angulo do vetor: "))
D=float(input("Distancia: "))

R=vo**2*sin(2*a))/9.8

if (D-R < 0.1):
	print("sim")
else:
	print("nao")
-- ERROR:
File "XXXX", line 9
    R=vo**2*sin(2*a))/9.8
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:25:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math
vo=float(input("Velocidade inicial: "))
a=float(input("Angulo do vetor: "))
D=float(input("Distancia: "))

R=vo**2*sin(2*a)/9.8

if (D-R < 0.1):
	print("sim")
else:
	print("nao")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    R=vo**2*sin(2*a)/9.8
NameError: name 'sin' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:26:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math
vo=float(input("Velocidade inicial: "))
a=float(input("Angulo do vetor: "))
D=float(input("Distancia: "))

R=(vo**2)*sin(2*a)/9.8

if (D-R < 0.1):
	print("sim")
else:
	print("nao")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    R=(vo**2)*sin(2*a)/9.8
NameError: name 'sin' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:26:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math
vo=float(input("Velocidade inicial: "))
a=float(input("Angulo do vetor: "))
D=float(input("Distancia: "))

R=(vo**2)*sin*(2*a)/9.8

if (D-R < 0.1):
	print("sim")
else:
	print("nao")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    R=(vo**2)*sin*(2*a)/9.8
NameError: name 'sin' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:27:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math
vo=float(input("Velocidade inicial: "))
a=float(input("Angulo do vetor: "))
D=float(input("Distancia: "))

R=(vo**2)*sin2*a/9.8

if (D-R < 0.1):
	print("sim")
else:
	print("nao")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    R=(vo**2)*sin2*a/9.8
NameError: name 'sin2' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:27:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math
vo=float(input("Velocidade inicial: "))
a=float(input("Angulo do vetor: "))
D=float(input("Distancia: "))

R=(vo**2)*math.sin(2*a)/9.8

if (D-R < 0.1):
	print("sim")
else:
	print("nao")
-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 10:27:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math
vo=float(input("Velocidade inicial: "))
a=float(input("Angulo do vetor: "))
D=float(input("Distancia: "))

R=(vo**2)*math.sin(2*a)/9.8

if (D-R < 0.1):
	print("sim")
else:
	print("nao")
-- EXECUTION TIME:
0.162186
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:28:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math
vo=float(input("Velocidade inicial: "))
a=float(input("Angulo do vetor: "))
D=float(input("Distancia: "))

R=(vo**2)*math.sin(math.radians(2*a))/9.8

if (D-R < 0.1):
	print("sim")
else:
	print("nao")
-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 10:29:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math
vo=float(input("Velocidade inicial: "))
a=float(input("Angulo do vetor: "))
D=float(input("Distancia: "))

R=(vo**2)*math.sin(math.radians(2*a))/9.8

if (D-R < 0.1):
	print("sim")
else:
	print("nao")
-- EXECUTION TIME:
0.221811
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:31:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math
vo=float(input("Velocidade inicial: "))
a=float(input("Angulo do vetor: "))
D=float(input("Distancia: "))

R=(vo**2)*math.sin(math.radians(2*a))/9.8

if abs(D-R < 0.1):
	print("sim")
else:
	print("nao")
-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 10:31:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math
vo=float(input("Velocidade inicial: "))
a=float(input("Angulo do vetor: "))
D=float(input("Distancia: "))

R=(vo**2)*math.sin(math.radians(2*a))/9.8

if abs(D-R < 0.1):
	print("sim")
else:
	print("nao")
-- EXECUTION TIME:
0.222221
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
