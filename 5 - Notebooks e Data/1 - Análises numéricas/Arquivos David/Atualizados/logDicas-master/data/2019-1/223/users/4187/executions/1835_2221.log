== TEST (2019-06-27 20:29:02) 
-- CODE:
from numpy import *
from numpy.linalg import *

notas = array(eval(input("notas:")))
N_alunos = shape(notas)[0]

soma_M_Nota = 0
for i in range(N_alunos):
	soma_M_Nota = soma_M_Nota + min(notas[i,:])
media = soma_M_Nota/N_alunos
print(media)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 20:29:49) 
-- CODE:
from numpy import *
from numpy.linalg import *

notas = array(eval(input("notas:")))
N_alunos = shape(notas)[0]

soma_M_Nota = 0
for i in range(N_alunos):
	soma_M_Nota = soma_M_Nota + min(notas[i,:])
media = soma_M_Nota/N_alunos
print(round(media,2))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-27 20:29:56) 
-- CODE:
from numpy import *
from numpy.linalg import *

notas = array(eval(input("notas:")))
N_alunos = shape(notas)[0]

soma_M_Nota = 0
for i in range(N_alunos):
	soma_M_Nota = soma_M_Nota + min(notas[i,:])
media = soma_M_Nota/N_alunos
print(round(media,2))


-- EXECUTION TIME:
1.06759
-- TEST CASE 1:
---- input:
[[8.9,7.3,5.2,7.7],[10.0,5.6,8.8,9.5],[3.2,5.6,7.8,8.7]]
---- correct output:
4.67
---- user output:
4.67
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-01 13:34:00) 
-- CODE:
from numpy import *
from numpy.linalg import *

notas = array(eval(input("notas:")))

N_alunos = shape(notas)[0]

soma_M_Nota = 0
for i in range(N_alunos):
	soma_M_Nota = soma_M_Nota + min(notas[i,:])
	
media = soma_M_Nota / N_alunos

print(round(media,2))


-- EXECUTION TIME:
1.14981
-- TEST CASE 1:
---- input:
[[8.9,7.3,5.2,7.7],[10.0,5.6,8.8,9.5],[3.2,5.6,7.8,8.7]]
---- correct output:
4.67
---- user output:
4.67
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-01 13:34:43) 
-- CODE:
from numpy import *
from numpy.linalg import *

notas = array(eval(input("notas:")))

N_alunos = shape(notas)[0]

soma = 0
for i in range(N_alunos):
	soma = soma + min(notas[i,:])
	
media = soma / N_alunos

print(round(media,2))


-- EXECUTION TIME:
1.21024
-- TEST CASE 1:
---- input:
[[8.9,7.3,5.2,7.7],[10.0,5.6,8.8,9.5],[3.2,5.6,7.8,8.7]]
---- correct output:
4.67
---- user output:
4.67
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 13:34:46) 
-- CODE:
from numpy import *
from numpy.linalg import *

notas = array(eval(input("notas:")))

N_alunos = shape(notas)[0]

soma = 0
for i in range(N_alunos):
	soma = soma + min(notas[i,:])
	
media = soma / N_alunos

print(round(media,2))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 13:35:02) 
-- CODE:
from numpy import *
from numpy.linalg import *

notas = array(eval(input("notas:")))

N_alunos = shape(notas)[0]

soma = 0
for i in range(N_alunos):
	soma = soma + min(notas[i,:])
	
media = soma / N_alunos

print(round(media,2))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 13:35:27) 
-- CODE:
from numpy import *
from numpy.linalg import *

notas = array(eval(input("notas:")))

Na = shape(notas)[0]

soma = 0
for i in range(Na):
	soma = soma + min(notas[i,:])
	
media = soma / N_alunos

print(round(media,2))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 13:35:43) 
-- CODE:
from numpy import *
from numpy.linalg import *

notas = array(eval(input("notas:")))

Na = shape(notas)[0]

soma = 0
for i in range(Na):
	soma = soma + min(notas[i,:])
	
media = soma / Na

print(round(media,2))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 13:36:00) 
-- CODE:
from numpy import *
from numpy.linalg import *

mat = array(eval(input("notas:")))

Na = shape(notas)[0]

soma = 0
for i in range(Na):
	soma = soma + min(mat[i,:])
	
media = soma / Na

print(round(media,2))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 13:36:09) 
-- CODE:
from numpy import *
from numpy.linalg import *

mat = array(eval(input("notas:")))

Na = shape(mat)[0]

soma = 0
for i in range(Na):
	soma = soma + min(mat[i,:])
	
media = soma / Na

print(round(media,2))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
