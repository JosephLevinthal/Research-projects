== TEST (2019-06-04 17:21:14) 
-- CODE:
from numpy import*

# Leitura do primeiro vetor
vet = array(eval(input("Primeiro vetor: ")))

# Verifica se o programa vai terminar
while (size(vet) > 1):
   # Zera contador de elementos pares
   a = 0
	
   # Conta quantidade de elementos pares
   for elemento in vet:
      if (elemento > 7):
         a =  + 1
			
   # No. de elementos pares
   print(npar)

   # Leitura do proximo vetor
   vet = array(eval(input("Proximo vetor: ")))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 17:21:27) 
-- CODE:
from numpy import*

# Leitura do primeiro vetor
vet = array(eval(input("Primeiro vetor: ")))

# Verifica se o programa vai terminar
while (size(vet) > 1):
   # Zera contador de elementos pares
   a = 0
	
   # Conta quantidade de elementos pares
   for elemento in vet:
      if (elemento > 7):
         a =  + 1
			
   # No. de elementos pares
   print(a)

   # Leitura do proximo vetor
   vet = array(eval(input("Proximo vetor: ")))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 17:21:40) 
-- CODE:
from numpy import*

# Leitura do primeiro vetor
vet = array(eval(input("Primeiro vetor: ")))

# Verifica se o programa vai terminar
while (size(vet) > 1):
   # Zera contador de elementos pares
   a = 0
	
   # Conta quantidade de elementos pares
   for elemento in vet:
      if (elemento > 7):
         a = a + 1
			
   # No. de elementos pares
   print(a)

   # Leitura do proximo vetor
   vet = array(eval(input("Proximo vetor: ")))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-04 17:22:24) 
-- CODE:
from numpy import*

# Leitura do primeiro vetor
vet = array(eval(input("Primeiro vetor: ")))

# Verifica se o programa vai terminar
while (size(vet) > 1):
   # Zera contador de elementos pares
   a = 0
	
   # Conta quantidade de elementos pares
   for elemento in vet:
      if (elemento > 7):
         a = a + 1
			
   # No. de elementos pares
   print(a)

   # Leitura do proximo vetor
   vet = array(eval(input("Proximo vetor: ")))

-- EXECUTION TIME:
1.1098
-- TEST CASE 1:
---- input:
[6.3,6.4,6.0,6.9,5.5,5.2]
[4.5,3.8,7.8,4.8,9.6,9.2,8.7,2.3,2.9]
[5.6,4.7,3.8,7.5,8.2,8.4,7.1,6.9,6.7]
[1.1,3.1,2.7,7.8,6.7,4.6,4.9,7.0]
[1]
---- correct output:
6
0
3
1
---- user output:
0
4
4
1
-- TEST CASE 2:
---- input:
[5.1,5.2,5.4,5.3,5.7,5.8,6.1,5.6,5.5,5.9,6.2]
[2.7,6.8,4.7,5.7,3.5,6.6,7.0,5.4]
[8.7,8.6,8.9,8.6,7.5,7.2,6.9,7.4,7.2]
[1]
---- correct output:
11
4
1
---- user output:
0
0
8
-- TEST CASE 3:
---- input:
[8.5,7.5,6.8,6.9,7.0,5.6,5.8,6.3]
[7.3,7.1,7.0,6.8,6.0,5.0]
[1]
---- correct output:
5
3
---- user output:
2
2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 17:25:34) 
-- CODE:
from numpy import*

# Leitura do primeiro vetor
vet = array(eval(input("Primeiro vetor: ")))

while (size(vet) > 1):
   a = 0
	
   for elemento in vet:
      if (elemento => 5 and elemento < 7):
         a = a + 1
			
   print(a)

   vet = array(eval(input("Proximo vetor: ")))

-- ERROR:
File "XXXX", line 10
    if (elemento => 5 and elemento < 7):
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 17:25:40) 
-- CODE:
from numpy import*

# Leitura do primeiro vetor
vet = array(eval(input("Primeiro vetor: ")))

while (size(vet) > 1):
   a = 0
	
   for elemento in vet:
      if (elemento >= 5 and elemento < 7):
         a = a + 1
			
   print(a)

   vet = array(eval(input("Proximo vetor: ")))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-04 17:25:58) 
-- CODE:
from numpy import*

# Leitura do primeiro vetor
vet = array(eval(input("Primeiro vetor: ")))

while (size(vet) > 1):
   a = 0
	
   for elemento in vet:
      if (elemento >= 5 and elemento < 7):
         a = a + 1
			
   print(a)

   vet = array(eval(input("Proximo vetor: ")))

-- EXECUTION TIME:
1.17683
-- TEST CASE 1:
---- input:
[6.3,6.4,6.0,6.9,5.5,5.2]
[4.5,3.8,7.8,4.8,9.6,9.2,8.7,2.3,2.9]
[5.6,4.7,3.8,7.5,8.2,8.4,7.1,6.9,6.7]
[1.1,3.1,2.7,7.8,6.7,4.6,4.9,7.0]
[1]
---- correct output:
6
0
3
1
---- user output:
6
0
3
1
-- TEST CASE 2:
---- input:
[5.1,5.2,5.4,5.3,5.7,5.8,6.1,5.6,5.5,5.9,6.2]
[2.7,6.8,4.7,5.7,3.5,6.6,7.0,5.4]
[8.7,8.6,8.9,8.6,7.5,7.2,6.9,7.4,7.2]
[1]
---- correct output:
11
4
1
---- user output:
11
4
1
-- TEST CASE 3:
---- input:
[8.5,7.5,6.8,6.9,7.0,5.6,5.8,6.3]
[7.3,7.1,7.0,6.8,6.0,5.0]
[1]
---- correct output:
5
3
---- user output:
5
3
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
