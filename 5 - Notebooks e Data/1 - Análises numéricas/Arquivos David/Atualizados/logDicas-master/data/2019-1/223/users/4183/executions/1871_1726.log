== TEST (2019-07-02 17:11:43) 
-- CODE:
from numpy import *
from numpy.linalg import *
m = array(eval(input("Digite: ")))
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m[i,j])):
			print(m[i,j])
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 17:13:32) 
-- CODE:
from numpy import *
from numpy.linalg import *
m = array(eval(input("Digite: ")))
a = 0
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m[i,j])):
			a = m[i,j]
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 17:13:58) 
-- CODE:
from numpy import *
m = array(eval(input("Digite: ")))
a = 0
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m[i,j])):
			a = m[i,j]
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 17:14:56) 
-- CODE:
from numpy import *
m = array(eval(input("Digite: ")))
a = 0
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m[i,j])):
			a = m[i,j]
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 17:16:18) 
-- CODE:
from numpy import *
m = array(eval(input("Digite: ")))
a = 0
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m[i,j])):
			a = m[i,j]
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 17:16:37) 
-- CODE:
from numpy import *
m = array(eval(input("Digite: ")))
a = 0
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m[i,j])):
			a = m[i,j]
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 17:18:29) 
-- CODE:
from numpy import *
m = array(eval(input("Digite: ")))
a = 0
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m[i,j])):
			a = m[i,j]
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 17:18:45) 
-- CODE:
from numpy import *
m = array(eval(input("Digite: ")))
a = 0
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m[i])):
			a = m[i,j]
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 17:18:57) 
-- CODE:
from numpy import *
m = array(eval(input("Digite: ")))
a = 0
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m[j])):
			a = m[i,j]
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 17:19:05) 
-- CODE:
from numpy import *
m = array(eval(input("Digite: ")))
a = 0
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m[j])):
			a = m[i,j]
print(a)
-- EXECUTION TIME:
1.17958
-- TEST CASE 1:
---- input:
[[3.0,7.8,3.1,1.4],[0.9,3.5,0.4,0.2],[8.9,2.8,2.1,6.6],[5.1,3.1,8.4,3.8]]
---- correct output:
0.2
---- user output:
2.1
-- TEST CASE 2:
---- input:
[[7.4,7.1,6.8,3.7,3.7],[8.5,3.6,8.7,3.3,7.9],[7.6,1.9,7.0,8.3,5.1],[9.9,9.8,2.8,3.2,0.3],[6.0,5.7,2.6,7.1,8.1],[0.1,5.1,8.3,9.8,9.1]]
---- correct output:
0.1
---- user output:
0
-- TEST CASE 3:
---- input:
[[8.1,2.2,4.4],[2.5,7.9,3.5],[7.2,2.3,4.3],[2.3,0.3,8.1],[7.0,0.2,7.1]]
---- correct output:
0.2
---- user output:
0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 17:19:30) 
-- CODE:
from numpy import *
m = array(eval(input("Digite: ")))
a = 0
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m[j])):
			a = m[i,j]
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 17:19:41) 
-- CODE:
from numpy import *
m = array(eval(input("Digite: ")))
a = 0
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m[j])):
			a = m[i,j]
print(a)
-- EXECUTION TIME:
1.15562
-- TEST CASE 1:
---- input:
[[3.0,7.8,3.1,1.4],[0.9,3.5,0.4,0.2],[8.9,2.8,2.1,6.6],[5.1,3.1,8.4,3.8]]
---- correct output:
0.2
---- user output:
2.1
-- TEST CASE 2:
---- input:
[[7.4,7.1,6.8,3.7,3.7],[8.5,3.6,8.7,3.3,7.9],[7.6,1.9,7.0,8.3,5.1],[9.9,9.8,2.8,3.2,0.3],[6.0,5.7,2.6,7.1,8.1],[0.1,5.1,8.3,9.8,9.1]]
---- correct output:
0.1
---- user output:
0
-- TEST CASE 3:
---- input:
[[8.1,2.2,4.4],[2.5,7.9,3.5],[7.2,2.3,4.3],[2.3,0.3,8.1],[7.0,0.2,7.1]]
---- correct output:
0.2
---- user output:
0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 17:20:13) 
-- CODE:
from numpy import *
from numpy.linalg import *
m = array(eval(input("Digite: ")))
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m[j])):
			print(m[i,j])
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 17:20:55) 
-- CODE:
from numpy import *
from numpy.linalg import *
m = array(eval(input("Digite: ")))
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m[0,j])):
			print(m[i,j])
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 17:21:11) 
-- CODE:
from numpy import *
from numpy.linalg import *
m = array(eval(input("Digite: ")))
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m[:,j])):
			print(m[i,j])
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 17:21:24) 
-- CODE:
from numpy import *
from numpy.linalg import *
m = array(eval(input("Digite: ")))
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m[:,j])):
			print(m[i,j])
-- EXECUTION TIME:
1.09543
-- TEST CASE 1:
---- input:
[[3.0,7.8,3.1,1.4],[0.9,3.5,0.4,0.2],[8.9,2.8,2.1,6.6],[5.1,3.1,8.4,3.8]]
---- correct output:
0.2
---- user output:
0.9
0.4
0.2
2.8
-- TEST CASE 2:
---- input:
[[7.4,7.1,6.8,3.7,3.7],[8.5,3.6,8.7,3.3,7.9],[7.6,1.9,7.0,8.3,5.1],[9.9,9.8,2.8,3.2,0.3],[6.0,5.7,2.6,7.1,8.1],[0.1,5.1,8.3,9.8,9.1]]
---- correct output:
0.1
---- user output:
1.9
3.2
0.3
2.6
0.1
-- TEST CASE 3:
---- input:
[[8.1,2.2,4.4],[2.5,7.9,3.5],[7.2,2.3,4.3],[2.3,0.3,8.1],[7.0,0.2,7.1]]
---- correct output:
0.2
---- user output:
3.5
2.3
0.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 17:21:44) 
-- CODE:
from numpy import *
from numpy.linalg import *
m = array(eval(input("Digite: ")))
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m[i,:])):
			print(m[i,j])
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 17:22:05) 
-- CODE:
from numpy import *
from numpy.linalg import *
m = array(eval(input("Digite: ")))
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m[:,j])):
			print(m[i,j])
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 17:22:24) 
-- CODE:
from numpy import *
from numpy.linalg import *
m = array(eval(input("Digite: ")))
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m[j])):
			print(m[i,j])
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 17:22:39) 
-- CODE:
from numpy import *
from numpy.linalg import *
m = array(eval(input("Digite: ")))
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m)):
			print(m[i,j])
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 17:23:22) 
-- CODE:
from numpy import *
from numpy.linalg import *
m = array(eval(input("Digite: ")))
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m[j])):
			print(m[i,j])
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 17:23:41) 
-- CODE:
from numpy import *
from numpy.linalg import *
m = array(eval(input("Digite: ")))
for j in range(m.shape[1]):
	if (m[i,j] == min(m[j])):
		print(m[i,j])
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 17:24:25) 
-- CODE:
from numpy import *
from numpy.linalg import *
m = array(eval(input("Digite: ")))
for j in range(m.shape[1]):
	for i in range(m.shape[0]):
		if (m[i,j] == min(m[j])):
			print(m[i,j])
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 17:25:17) 
-- CODE:
from numpy import *
from numpy.linalg import *
m = array(eval(input("Digite: ")))
a = 0
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m[j])):
			a = m[i,j]
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 17:25:28) 
-- CODE:
from numpy import *
from numpy.linalg import *
m = array(eval(input("Digite: ")))
a = 0
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m[j])):
			a = m[i,j]
print(a)
-- EXECUTION TIME:
0.970633
-- TEST CASE 1:
---- input:
[[3.0,7.8,3.1,1.4],[0.9,3.5,0.4,0.2],[8.9,2.8,2.1,6.6],[5.1,3.1,8.4,3.8]]
---- correct output:
0.2
---- user output:
2.1
-- TEST CASE 2:
---- input:
[[7.4,7.1,6.8,3.7,3.7],[8.5,3.6,8.7,3.3,7.9],[7.6,1.9,7.0,8.3,5.1],[9.9,9.8,2.8,3.2,0.3],[6.0,5.7,2.6,7.1,8.1],[0.1,5.1,8.3,9.8,9.1]]
---- correct output:
0.1
---- user output:
0
-- TEST CASE 3:
---- input:
[[8.1,2.2,4.4],[2.5,7.9,3.5],[7.2,2.3,4.3],[2.3,0.3,8.1],[7.0,0.2,7.1]]
---- correct output:
0.2
---- user output:
0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 17:25:35) 
-- CODE:
from numpy import *
from numpy.linalg import *
m = array(eval(input("Digite: ")))
a = 0
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m[j])):
			a = a + m[i,j]
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 17:26:51) 
-- CODE:
from numpy import *
from numpy.linalg import *
m = array(eval(input("Digite: ")))
a = zeros(m.shape[0],dtype=float)
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m[j])):
			v[i] = m[i,j]
print(min(a))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 17:27:01) 
-- CODE:
from numpy import *
from numpy.linalg import *
m = array(eval(input("Digite: ")))
a = zeros(m.shape[0],dtype=float)
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m[j])):
			a[i] = m[i,j]
print(min(a))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 17:27:22) 
-- CODE:
from numpy import *
from numpy.linalg import *
m = array(eval(input("Digite: ")))
a = zeros(2,dtype=float)
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m[j])):
			a[i] = m[i,j]
print(min(a))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 17:27:31) 
-- CODE:
from numpy import *
from numpy.linalg import *
m = array(eval(input("Digite: ")))
a = zeros(2,dtype=float)
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m[j])):
			a[i] = m[i,j]
print(min(a))
-- EXECUTION TIME:
0.972415
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1871/1726/main.py", line 8, in <module>
    a[i] = m[i,j]
IndexError: index 2 is out of bounds for axis 0 with size 2

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 17:27:54) 
-- CODE:
from numpy import *
from numpy.linalg import *
m = array(eval(input("Digite: ")))
a = 0
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m[j])):
			a = m[i,j]
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 17:28:11) 
-- CODE:
from numpy import *
from numpy.linalg import *
m = array(eval(input("Digite: ")))
a = 0
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m[j])):
			a = m[i,j]
print(a)
-- EXECUTION TIME:
1.14989
-- TEST CASE 1:
---- input:
[[3.0,7.8,3.1,1.4],[0.9,3.5,0.4,0.2],[8.9,2.8,2.1,6.6],[5.1,3.1,8.4,3.8]]
---- correct output:
0.2
---- user output:
2.1
-- TEST CASE 2:
---- input:
[[7.4,7.1,6.8,3.7,3.7],[8.5,3.6,8.7,3.3,7.9],[7.6,1.9,7.0,8.3,5.1],[9.9,9.8,2.8,3.2,0.3],[6.0,5.7,2.6,7.1,8.1],[0.1,5.1,8.3,9.8,9.1]]
---- correct output:
0.1
---- user output:
0
-- TEST CASE 3:
---- input:
[[8.1,2.2,4.4],[2.5,7.9,3.5],[7.2,2.3,4.3],[2.3,0.3,8.1],[7.0,0.2,7.1]]
---- correct output:
0.2
---- user output:
0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 17:28:15) 
-- CODE:
from numpy import *
from numpy.linalg import *
m = array(eval(input("Digite: ")))
a = 0
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m[j])):
			a = m[i,j]
			print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 17:28:29) 
-- CODE:
from numpy import *
from numpy.linalg import *
m = array(eval(input("Digite: ")))
a = 1
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m[j])):
			a = m[i,j]
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 17:28:39) 
-- CODE:
from numpy import *
from numpy.linalg import *
m = array(eval(input("Digite: ")))
a = 1
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m[j])):
			a = m[i,j]
print(a)
-- EXECUTION TIME:
1.09241
-- TEST CASE 1:
---- input:
[[3.0,7.8,3.1,1.4],[0.9,3.5,0.4,0.2],[8.9,2.8,2.1,6.6],[5.1,3.1,8.4,3.8]]
---- correct output:
0.2
---- user output:
2.1
-- TEST CASE 2:
---- input:
[[7.4,7.1,6.8,3.7,3.7],[8.5,3.6,8.7,3.3,7.9],[7.6,1.9,7.0,8.3,5.1],[9.9,9.8,2.8,3.2,0.3],[6.0,5.7,2.6,7.1,8.1],[0.1,5.1,8.3,9.8,9.1]]
---- correct output:
0.1
---- user output:
1
-- TEST CASE 3:
---- input:
[[8.1,2.2,4.4],[2.5,7.9,3.5],[7.2,2.3,4.3],[2.3,0.3,8.1],[7.0,0.2,7.1]]
---- correct output:
0.2
---- user output:
1
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 17:29:42) 
-- CODE:
from numpy import *
from numpy.linalg import *
m = array(eval(input("Digite: ")))
a = 1
for j in range(m.shape[1]):
	if (m[j] == min(m[j])):
		a = m[i,j]
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 17:29:44) 
-- CODE:
from numpy import *
from numpy.linalg import *
m = array(eval(input("Digite: ")))
a = 1
for j in range(m.shape[1]):
	if (m[j] == min(m[j])):
		a = m[i,j]
print(a)
-- EXECUTION TIME:
1.18833
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1871/1726/main.py", line 6, in <module>
    if (m[j] == min(m[j])):
ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 17:30:29) 
-- CODE:
from numpy import *
from numpy.linalg import *
m = array(eval(input("Digite: ")))
a = 0
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m[j])):
			a = m[i,j]
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 17:30:37) 
-- CODE:
from numpy import *
from numpy.linalg import *
m = array(eval(input("Digite: ")))
a = 0
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m[j])):
			a = m[i,j]
print(a)
-- EXECUTION TIME:
1.20182
-- TEST CASE 1:
---- input:
[[3.0,7.8,3.1,1.4],[0.9,3.5,0.4,0.2],[8.9,2.8,2.1,6.6],[5.1,3.1,8.4,3.8]]
---- correct output:
0.2
---- user output:
2.1
-- TEST CASE 2:
---- input:
[[7.4,7.1,6.8,3.7,3.7],[8.5,3.6,8.7,3.3,7.9],[7.6,1.9,7.0,8.3,5.1],[9.9,9.8,2.8,3.2,0.3],[6.0,5.7,2.6,7.1,8.1],[0.1,5.1,8.3,9.8,9.1]]
---- correct output:
0.1
---- user output:
0
-- TEST CASE 3:
---- input:
[[8.1,2.2,4.4],[2.5,7.9,3.5],[7.2,2.3,4.3],[2.3,0.3,8.1],[7.0,0.2,7.1]]
---- correct output:
0.2
---- user output:
0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 17:31:37) 
-- CODE:
from numpy import *
from numpy.linalg import *
m = array(eval(input("Digite: ")))
a = 0
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m[j]) and m[i,j] == min(m[i])):
			a = m[i,j]
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 17:31:45) 
-- CODE:
from numpy import *
from numpy.linalg import *
m = array(eval(input("Digite: ")))
a = 0
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m[j]) and m[i,j] == min(m[i])):
			a = m[i,j]
print(a)
-- EXECUTION TIME:
1.10313
-- TEST CASE 1:
---- input:
[[3.0,7.8,3.1,1.4],[0.9,3.5,0.4,0.2],[8.9,2.8,2.1,6.6],[5.1,3.1,8.4,3.8]]
---- correct output:
0.2
---- user output:
2.1
-- TEST CASE 2:
---- input:
[[7.4,7.1,6.8,3.7,3.7],[8.5,3.6,8.7,3.3,7.9],[7.6,1.9,7.0,8.3,5.1],[9.9,9.8,2.8,3.2,0.3],[6.0,5.7,2.6,7.1,8.1],[0.1,5.1,8.3,9.8,9.1]]
---- correct output:
0.1
---- user output:
0
-- TEST CASE 3:
---- input:
[[8.1,2.2,4.4],[2.5,7.9,3.5],[7.2,2.3,4.3],[2.3,0.3,8.1],[7.0,0.2,7.1]]
---- correct output:
0.2
---- user output:
0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 17:32:17) 
-- CODE:
from numpy import *
from numpy.linalg import *
m = array(eval(input("Digite: ")))
a = 0
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m[j]) and m[i,j] == min(m[i])):
			a = m[i,j]
print(a)
-- EXECUTION TIME:
1.09685
-- TEST CASE 1:
---- input:
[[3.0,7.8,3.1,1.4],[0.9,3.5,0.4,0.2],[8.9,2.8,2.1,6.6],[5.1,3.1,8.4,3.8]]
---- correct output:
0.2
---- user output:
2.1
-- TEST CASE 2:
---- input:
[[7.4,7.1,6.8,3.7,3.7],[8.5,3.6,8.7,3.3,7.9],[7.6,1.9,7.0,8.3,5.1],[9.9,9.8,2.8,3.2,0.3],[6.0,5.7,2.6,7.1,8.1],[0.1,5.1,8.3,9.8,9.1]]
---- correct output:
0.1
---- user output:
0
-- TEST CASE 3:
---- input:
[[8.1,2.2,4.4],[2.5,7.9,3.5],[7.2,2.3,4.3],[2.3,0.3,8.1],[7.0,0.2,7.1]]
---- correct output:
0.2
---- user output:
0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 17:32:23) 
-- CODE:
from numpy import *
from numpy.linalg import *
m = array(eval(input("Digite: ")))
a = 0
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m[j]) and m[i,j] == min(m[i])):
			a = m[i,j]
print(a)
-- EXECUTION TIME:
1.03338
-- TEST CASE 1:
---- input:
[[3.0,7.8,3.1,1.4],[0.9,3.5,0.4,0.2],[8.9,2.8,2.1,6.6],[5.1,3.1,8.4,3.8]]
---- correct output:
0.2
---- user output:
2.1
-- TEST CASE 2:
---- input:
[[7.4,7.1,6.8,3.7,3.7],[8.5,3.6,8.7,3.3,7.9],[7.6,1.9,7.0,8.3,5.1],[9.9,9.8,2.8,3.2,0.3],[6.0,5.7,2.6,7.1,8.1],[0.1,5.1,8.3,9.8,9.1]]
---- correct output:
0.1
---- user output:
0
-- TEST CASE 3:
---- input:
[[8.1,2.2,4.4],[2.5,7.9,3.5],[7.2,2.3,4.3],[2.3,0.3,8.1],[7.0,0.2,7.1]]
---- correct output:
0.2
---- user output:
0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 17:32:23) 
-- CODE:
from numpy import *
from numpy.linalg import *
m = array(eval(input("Digite: ")))
a = 0
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m[j]) and m[i,j] == min(m[i])):
			a = m[i,j]
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 17:32:42) 
-- CODE:
from numpy import *
from numpy.linalg import *
m = array(eval(input("Digite: ")))
a = 0
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m[j]) and m[i,j] == min(m[i])):
			a = m[i,j]
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 17:35:02) 
-- CODE:
from numpy import *
from numpy.linalg import *
m = array(eval(input("Digite: ")))
a = 0
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m[j]) and m[i,j] == min(m[i])):
			a = m[i,j]
print(a)
-- EXECUTION TIME:
1.23132
-- TEST CASE 1:
---- input:
[[3.0,7.8,3.1,1.4],[0.9,3.5,0.4,0.2],[8.9,2.8,2.1,6.6],[5.1,3.1,8.4,3.8]]
---- correct output:
0.2
---- user output:
2.1
-- TEST CASE 2:
---- input:
[[7.4,7.1,6.8,3.7,3.7],[8.5,3.6,8.7,3.3,7.9],[7.6,1.9,7.0,8.3,5.1],[9.9,9.8,2.8,3.2,0.3],[6.0,5.7,2.6,7.1,8.1],[0.1,5.1,8.3,9.8,9.1]]
---- correct output:
0.1
---- user output:
0
-- TEST CASE 3:
---- input:
[[8.1,2.2,4.4],[2.5,7.9,3.5],[7.2,2.3,4.3],[2.3,0.3,8.1],[7.0,0.2,7.1]]
---- correct output:
0.2
---- user output:
0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 17:35:18) 
-- CODE:
from numpy import *
from numpy.linalg import *
m = array(eval(input("Digite: ")))
a = 0
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m[j]) and m[i,j] == min(m[i])):
			a = m[i,j]
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 17:36:38) 
-- CODE:
from numpy import *
from numpy.linalg import *
m = array(eval(input("Digite: ")))
a = 0
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m[j]) and m[i,j] == min(m[i])):
			a = m[i,j]
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 17:37:56) 
-- CODE:
from numpy import *
from numpy.linalg import *
m = array(eval(input("Digite: ")))
a = 0
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m[j]) and m[i,j] == min(m[i])):
			a = m[i,j]
print(a)
-- EXECUTION TIME:
0.971965
-- TEST CASE 1:
---- input:
[[3.0,7.8,3.1,1.4],[0.9,3.5,0.4,0.2],[8.9,2.8,2.1,6.6],[5.1,3.1,8.4,3.8]]
---- correct output:
0.2
---- user output:
2.1
-- TEST CASE 2:
---- input:
[[7.4,7.1,6.8,3.7,3.7],[8.5,3.6,8.7,3.3,7.9],[7.6,1.9,7.0,8.3,5.1],[9.9,9.8,2.8,3.2,0.3],[6.0,5.7,2.6,7.1,8.1],[0.1,5.1,8.3,9.8,9.1]]
---- correct output:
0.1
---- user output:
0
-- TEST CASE 3:
---- input:
[[8.1,2.2,4.4],[2.5,7.9,3.5],[7.2,2.3,4.3],[2.3,0.3,8.1],[7.0,0.2,7.1]]
---- correct output:
0.2
---- user output:
0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 17:38:05) 
-- CODE:
from numpy import *
from numpy.linalg import *
m = array(eval(input("Digite: ")))
a = 0
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m[j]) and m[i,j] == min(m[i])):
			a = m[i,j]
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 17:38:49) 
-- CODE:
from numpy import *
from numpy.linalg import *
m = array(eval(input("Digite: ")))
a = 0
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m[j]) and m[i,j] == min(m[i])):
			a = m[i,j]
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 17:39:48) 
-- CODE:
from numpy import *
from numpy.linalg import *
m = array(eval(input("Digite: ")))
a = 0
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] == min(m[j])):
			a = m[i,j]
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 17:44:27) 
-- CODE:
from numpy import *
from numpy.linalg import *
m = array(eval(input("Digite: ")))
x = 10
a = 0
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] <= x):
			a = m[i,j]
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 17:44:42) 
-- CODE:
from numpy import *
from numpy.linalg import *
m = array(eval(input("Digite: ")))
x = 10
a = 0
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] <= x):
			a = m[i,j]
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 17:46:29) 
-- CODE:
from numpy import *
from numpy.linalg import *
m = array(eval(input("Digite: ")))
x = 10
a = 0
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		x = min(m[i,j])
		if (m[i,j] == x):
			a = m[i,j]
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 17:47:58) 
-- CODE:
from numpy import *
from numpy.linalg import *
m = array(eval(input("Digite: ")))
x = 10
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] <= x):
			x = m[i,j]
print(x)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 17:48:07) 
-- CODE:
from numpy import *
from numpy.linalg import *
m = array(eval(input("Digite: ")))
x = 10
for i in range(m.shape[0]):
	for j in range(m.shape[1]):
		if (m[i,j] <= x):
			x = m[i,j]
print(x)
-- EXECUTION TIME:
0.963692
-- TEST CASE 1:
---- input:
[[3.0,7.8,3.1,1.4],[0.9,3.5,0.4,0.2],[8.9,2.8,2.1,6.6],[5.1,3.1,8.4,3.8]]
---- correct output:
0.2
---- user output:
0.2
-- TEST CASE 2:
---- input:
[[7.4,7.1,6.8,3.7,3.7],[8.5,3.6,8.7,3.3,7.9],[7.6,1.9,7.0,8.3,5.1],[9.9,9.8,2.8,3.2,0.3],[6.0,5.7,2.6,7.1,8.1],[0.1,5.1,8.3,9.8,9.1]]
---- correct output:
0.1
---- user output:
0.1
-- TEST CASE 3:
---- input:
[[8.1,2.2,4.4],[2.5,7.9,3.5],[7.2,2.3,4.3],[2.3,0.3,8.1],[7.0,0.2,7.1]]
---- correct output:
0.2
---- user output:
0.2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
