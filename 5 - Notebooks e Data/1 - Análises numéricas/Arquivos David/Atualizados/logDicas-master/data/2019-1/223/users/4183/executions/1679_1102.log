== TEST (2019-04-30 17:14:54) 
-- CODE:
from math import *

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio dos bojos: "))
print("Entradas: ", H, ",", h, ",", r)
 
if(H < 0 or h < 0 or r < 0) or (H < h or H < 2*r):
	print("Entradas invalidas")
else:
	V = (pi/3)*(H**2)*((3*r) - H) - h
	
print("Volume:", V)








-- OUTPUT:
Entradas:  11.3 , 5.7 , 2.3
Volume: -594.053283374092
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:16:43) 
-- CODE:
from math import *

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio dos bojos: "))
print("Entradas: ", H, ",", h, ",", r)
 
if(H < 0 or h < 0 or r < 0) or (H < h or H < 2*r):
	print("Entradas invalidas")
else:
	V = h - (pi/3)*(H**2)*((3*r) - H) 
	
print("Volume:", V)








-- OUTPUT:
Entradas:  11.3 , 5.7 , 2.3
Volume: 594.053283374092
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:17:13) 
-- CODE:
from math import *

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio dos bojos: "))
print("Entradas: ", H, ",", h, ",", r)
 
if(H < 0 or h < 0 or r < 0) or (H < h or H < 2*r):
	print("Entradas invalidas")
else:
	V = h - (pi/3)*(H**2)*((3*r) - H) 
	
print("Volume:", round(V,3))








-- OUTPUT:
Entradas:  11.3 , 5.7 , 2.3
Volume: 594.053
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-08 22:32:56) 
-- CODE:
from math import *

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio dos bojos: "))
print("Entradas: ", H, ",", h, ",", r)
 
if(H < 0 or h < 0 or r < 0) or (H < h or H < 2*r):
	print("Entradas invalidas")
else:
	V = h - (pi/3)*(H**2)*((3*r) - H) 
	
print("Volume:", round(V,3))








-- OUTPUT:
Entradas:  11.3 , 5.7 , 2.3
Volume: 594.053
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 01:41:33) 
-- CODE:
from math import *

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio dos bojos: "))
print("Entradas: ", H, ",", h, ",", r)
 
if(H < 0 or h < 0 or r < 0) or (H < h or H < 2*r):
	print("Entradas invalidas")
else:
	V = (4/3)*pi*(r**3)
	if (h == r):
		v = (V/2)*1000
		print("Volume: ", round(v,3), "litros")
	elif (h<r):
		v = ((pi/3)*(h**2)*(3*r-h))*1000
		print("Volume: ", round(v,3), "litros")
	elif (h>r and h<=H-r):
		v = V/2	
		C = pi*(r**2)*(h-r)
		V1 = (v+C)*1000
		print("Volume", round(V1,3), "litros")
	elif (h > H-r):
		C = pi*(r**2)*(h-r)
		vc = (pi/3)*((H-h)**2)*(3*r - (H-h))
		V1 = ((V/2) + C - vc)*1000
		print("Volume:", round(V,3), "litros")








-- OUTPUT:
Entradas:  11.3 , 5.7 , 2.3
Volume 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-09 01:41:54) 
-- CODE:
from math import *

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio dos bojos: "))
print("Entradas: ", H, ",", h, ",", r)
 
if(H < 0 or h < 0 or r < 0) or (H < h or H < 2*r):
	print("Entradas invalidas")
else:
	V = (4/3)*pi*(r**3)
	if (h == r):
		v = (V/2)*1000
		print("Volume: ", round(v,3), "litros")
	elif (h<r):
		v = ((pi/3)*(h**2)*(3*r-h))*1000
		print("Volume: ", round(v,3), "litros")
	elif (h>r and h<=H-r):
		v = V/2	
		C = pi*(r**2)*(h-r)
		V1 = (v+C)*1000
		print("Volume", round(V1,3), "litros")
	elif (h > H-r):
		C = pi*(r**2)*(h-r)
		vc = (pi/3)*((H-h)**2)*(3*r - (H-h))
		V1 = ((V/2) + C - vc)*1000
		print("Volume:", round(V,3), "litros")








-- EXECUTION TIME:
0.729526
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas:  11.3 , 5.7 , 2.3
Volume 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas:  8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas:  8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 01:42:46) 
-- CODE:
H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio dos bojos: "))
print("Entradas: ", H, ",", h, ",", r)

from math import *
 
if(H < 0 or h < 0 or r < 0) or (H < h or H < 2*r):
	print("Entradas invalidas")
else:
	V = (4/3)*pi*(r**3)
	if (h == r):
		v = (V/2)*1000
		print("Volume: ", round(v,3), "litros")
	elif (h<r):
		v = ((pi/3)*(h**2)*(3*r-h))*1000
		print("Volume: ", round(v,3), "litros")
	elif (h>r and h<=H-r):
		v = V/2	
		C = pi*(r**2)*(h-r)
		V1 = (v+C)*1000
		print("Volume", round(V1,3), "litros")
	elif (h > H-r):
		C = pi*(r**2)*(h-r)
		vc = (pi/3)*((H-h)**2)*(3*r - (H-h))
		V1 = ((V/2) + C - vc)*1000
		print("Volume:", round(V,3), "litros")








-- OUTPUT:
Entradas:  11.3 , 5.7 , 2.3
Volume 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-09 01:43:08) 
-- CODE:
H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio dos bojos: "))
print("Entradas: ", H, ",", h, ",", r)

from math import *
 
if(H < 0 or h < 0 or r < 0) or (H < h or H < 2*r):
	print("Entradas invalidas")
else:
	V = (4/3)*pi*(r**3)
	if (h == r):
		v = (V/2)*1000
		print("Volume: ", round(v,3), "litros")
	elif (h<r):
		v = ((pi/3)*(h**2)*(3*r-h))*1000
		print("Volume: ", round(v,3), "litros")
	elif (h>r and h<=H-r):
		v = V/2	
		C = pi*(r**2)*(h-r)
		V1 = (v+C)*1000
		print("Volume", round(V1,3), "litros")
	elif (h > H-r):
		C = pi*(r**2)*(h-r)
		vc = (pi/3)*((H-h)**2)*(3*r - (H-h))
		V1 = ((V/2) + C - vc)*1000
		print("Volume:", round(V,3), "litros")








-- EXECUTION TIME:
0.679602
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas:  11.3 , 5.7 , 2.3
Volume 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas:  8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas:  8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-09 01:43:54) 
-- CODE:
H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio dos bojos: "))
print("Entradas: ", H, ",", h, ",", r)

from math import *
 
if(H < 0 or h < 0 or r < 0) or (H < h or h < 2*r):
	print("Entradas invalidas")
else:
	V = (4/3)*pi*(r**3)
	if (h == r):
		v = (V/2)*1000
		print("Volume: ", round(v,3), "litros")
	elif (h<r):
		v = ((pi/3)*(h**2)*(3*r-h))*1000
		print("Volume: ", round(v,3), "litros")
	elif (h>r and h<=H-r):
		v = V/2	
		C = pi*(r**2)*(h-r)
		V1 = (v+C)*1000
		print("Volume", round(V1,3), "litros")
	elif (h > H-r):
		C = pi*(r**2)*(h-r)
		vc = (pi/3)*((H-h)**2)*(3*r - (H-h))
		V1 = ((V/2) + C - vc)*1000
		print("Volume:", round(V,3), "litros")








-- EXECUTION TIME:
0.87261
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas:  11.3 , 5.7 , 2.3
Volume 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas:  8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Altura total do tanque: Nivel de combustivel no tanque: Raio dos bojos: Entradas:  8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
