== TEST (2019-04-14 13:02:44) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
oimo ="Kristen Stewart é linda e louca."
print (oimo.upper())
-- OUTPUT:
KRISTEN STEWART É LINDA E LOUCA.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:03:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
oimo = "Kristen Stewart é linda e louca."
print (oimo.upper())
-- OUTPUT:
KRISTEN STEWART É LINDA E LOUCA.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:04:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
oimo = "Kristen Stewart, linda e louca."
print (oimo.upper())
-- OUTPUT:
KRISTEN STEWART, LINDA E LOUCA.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 13:04:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
oimo = "Kristen Stewart, linda e louca."
print (oimo.upper())
-- EXECUTION TIME:
0.179724
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
KRISTEN STEWART, LINDA E LOUCA.
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:05:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
oimo = "Kristen Stewart, linda e louca."
print (oimo.upper())
-- OUTPUT:
KRISTEN STEWART, LINDA E LOUCA.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 15:43:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
oimo = "Kristen Stewart, linda e louca."
print (oimo.upper())
-- OUTPUT:
KRISTEN STEWART, LINDA E LOUCA.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 15:43:54) 
-- CODE:
oimo = "Kristen Stewart, linda e louca."
print (oimo.upper())
-- OUTPUT:
KRISTEN STEWART, LINDA E LOUCA.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 15:44:11) 
-- CODE:
oimo = "Kristen Stewart, linda e louca."
print (oimo.upper())
-- EXECUTION TIME:
0.151533
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
KRISTEN STEWART, LINDA E LOUCA.
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 15:44:15) 
-- CODE:
oimo = "Kristen Stewart, linda e louca."
print (oimo.upper())
-- OUTPUT:
KRISTEN STEWART, LINDA E LOUCA.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 17:24:34) 
-- CODE:
oimo = "Kristen Stewart, linda e louca."
print (oimo.upper())
-- EXECUTION TIME:
0.136581
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
KRISTEN STEWART, LINDA E LOUCA.
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 17:24:46) 
-- CODE:
oimo = "Kristen Stewart, linda e louca."
print (oimo.upper())
-- OUTPUT:
KRISTEN STEWART, LINDA E LOUCA.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 17:25:32) 
-- CODE:
oimo = "Kristen Stewart, linda e louca."
print(oimo.upper())
-- EXECUTION TIME:
0.119805
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
KRISTEN STEWART, LINDA E LOUCA.
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 17:25:42) 
-- CODE:
oimo = "Kristen Stewart, linda e louca."
print(oimo.upper())
-- OUTPUT:
KRISTEN STEWART, LINDA E LOUCA.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 17:26:06) 
-- CODE:
oimo = "Kristen Stewart, linda e louca."
print(oimo.upper())
-- EXECUTION TIME:
0.255597
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
KRISTEN STEWART, LINDA E LOUCA.
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 17:42:33) 
-- CODE:
oimo = "Kristen Stewart, linda e louca."
print(oimo.upper())
-- OUTPUT:
KRISTEN STEWART, LINDA E LOUCA.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 17:43:44) 
-- CODE:
oimo = "Kristen Stewart, linda e louca."
print(oimo.upper())
-- EXECUTION TIME:
0.261973
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
KRISTEN STEWART, LINDA E LOUCA.
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 17:45:14) 
-- CODE:
oimo = "batatinha quando nasce se esparrama pelo chão"

print(oimo.upper())
-- OUTPUT:
BATATINHA QUANDO NASCE SE ESPARRAMA PELO CHÃO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 17:45:39) 
-- CODE:
oimo = "batatinha quando nasce se esparrama pelo chao"

print(oimo.upper())
-- OUTPUT:
BATATINHA QUANDO NASCE SE ESPARRAMA PELO CHAO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 17:45:58) 
-- CODE:
oimo = "batatinha quando nasce se esparrama pelo chao"

print(oimo.upper())
-- EXECUTION TIME:
0.1446
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
BATATINHA QUANDO NASCE SE ESPARRAMA PELO CHAO
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 17:46:08) 
-- CODE:
oimo = "batatinha quando nasce se esparrama pelo chao"

print(oimo.upper())
-- EXECUTION TIME:
0.220682
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
BATATINHA QUANDO NASCE SE ESPARRAMA PELO CHAO
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 17:46:12) 
-- CODE:
oimo = "batatinha quando nasce se esparrama pelo chao"

print(oimo.upper())
-- OUTPUT:
BATATINHA QUANDO NASCE SE ESPARRAMA PELO CHAO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 18:56:28) 
-- CODE:
oimo = "batatinha quando nasce se esparrama pelo chao"

print(oimo.upper())
-- OUTPUT:
BATATINHA QUANDO NASCE SE ESPARRAMA PELO CHAO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 19:22:52) 
-- CODE:
input("batatinha quando nasce se esparrama pelo chao")

print(input.upper())
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    print(input.upper())
AttributeError: 'builtin_function_or_method' object has no attribute 'upper'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 19:23:56) 
-- CODE:
input("batatinha quando nasce se esparrama pelo chao")

print(input.upper())
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    print(input.upper())
AttributeError: 'builtin_function_or_method' object has no attribute 'upper'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 19:31:06) 
-- CODE:
nome = input("batatinha quando nasce se esparrama pelo chao")

print(nome.upper())
-- OUTPUT:
PRIMEIRO_CASO_DE_TESTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 19:31:41) 
-- CODE:
nome = input ("batatinha quando nasce se esparrama pelo chao")

print (nome.upper())
-- OUTPUT:
PRIMEIRO_CASO_DE_TESTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 19:32:44) 
-- CODE:
nome = input ("batatinha quando nasce se esparrama pelo chao")

print (nome.upper())
-- OUTPUT:
PRIMEIRO_CASO_DE_TESTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 19:33:57) 
-- CODE:
nome = input ("batatinha quando nasce se esparrama pelo chao");

print (nome.upper());
-- OUTPUT:
PRIMEIRO_CASO_DE_TESTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 19:34:26) 
-- CODE:
nome = read ("batatinha quando nasce se esparrama pelo chao");

print (nome.upper());
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    nome = read ("batatinha quando nasce se esparrama pelo chao");
NameError: name 'read' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 19:34:55) 
-- CODE:
nome = input ("batatinha quando nasce se esparrama pelo chao");

print (nome.upper());
-- OUTPUT:
PRIMEIRO_CASO_DE_TESTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 19:36:31) 
-- CODE:
nome = input ("batatinha quando nasce se esparrama pelo chao");

print (nome.upper());
-- OUTPUT:
PRIMEIRO_CASO_DE_TESTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 19:43:20) 
-- CODE:
nome = input ("batatinha quando nasce se esparrama pelo chao: ");

print (nome.upper());
-- OUTPUT:
PRIMEIRO_CASO_DE_TESTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:40:20) 
-- CODE:
nome = int (input ("batatinha quando nasce se esparrama pelo chao"))

print (nome.upper())
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    nome = int (input())
ValueError: invalid literal for int() with base 10: 'Primeiro_caso_de_teste'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:41:10) 
-- CODE:
nome = int(input ("batatinha quando nasce se esparrama pelo chao"))

print (nome.upper())
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    nome = int(input())
ValueError: invalid literal for int() with base 10: 'Primeiro_caso_de_teste'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:41:38) 
-- CODE:
nome = input ("batatinha quando nasce se esparrama pelo chao")
 
print (nome.upper())
-- OUTPUT:
PRIMEIRO_CASO_DE_TESTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:42:23) 
-- CODE:
nome = input ("batatinha quando nasce se esparrama pelo chao")
 
print (nome)
-- OUTPUT:
Primeiro_caso_de_teste
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:42:45) 
-- CODE:
nome = input ("batatinha quando nasce se esparrama pelo chao")
 
print (nome.upper ())
-- OUTPUT:
PRIMEIRO_CASO_DE_TESTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:43:03) 
-- CODE:
nome = input ("batatinha quando nasce se esparrama pelo chao")
 
print (nome.upper())
-- OUTPUT:
PRIMEIRO_CASO_DE_TESTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 07:58:04) 
-- CODE:
nome = input("Digite algo: ")
 
print (nome.upper())
-- OUTPUT:
PRIMEIRO_CASO_DE_TESTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 07:58:33) 
-- CODE:
nome = input("Digite algo: ")
 
print (nome.upper())
-- OUTPUT:
PRIMEIRO_CASO_DE_TESTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 07:59:04) 
-- CODE:
nome = input("Digite algo: ")
 
print (nome.upper())
-- EXECUTION TIME:
0.135542
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
PRIMEIRO_CASO_DE_TESTE
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
