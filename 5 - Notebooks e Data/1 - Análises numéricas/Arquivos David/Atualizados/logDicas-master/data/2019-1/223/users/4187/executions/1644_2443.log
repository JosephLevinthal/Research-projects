== TEST (2019-04-16 10:40:11) 
-- CODE:
from math import*
r = radians(float(input("valor do raio do tanque:")))
x = float(input("altura da coluna de ar na parte suerior do tanque:"))
opçao = input("digite a opçao: (1/2)")
# "var" é o volume de ar no tanque 
var = (4 * (pi) * (r**2)) / 3
# "vcom" é o volume do combustivel no tanque
vcom = ((pi) * (x**2) * (3 * r - x))  / 3

if(opçao == "1"):
	print(round(var,4))
else(oçao == "2":
	  print(round(vco,4))
			
-- ERROR:
File "XXXX", line 12
    else(oçao == "2":
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:40:40) 
-- CODE:
from math import*
r = radians(float(input("valor do raio do tanque:")))
x = float(input("altura da coluna de ar na parte suerior do tanque:"))
opçao = input("digite a opçao: (1/2)")
# "var" é o volume de ar no tanque 
var = (4 * (pi) * (r**2)) / 3
# "vcom" é o volume do combustivel no tanque
vcom = ((pi) * (x**2) * (3 * r - x))  / 3

if(opçao == "1"):
	print(round(var,4))
else(opçao == "2":
	  print(round(vco,4))
			
-- ERROR:
File "XXXX", line 12
    else(opçao == "2":
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:41:11) 
-- CODE:
from math import*
r = radians(float(input("valor do raio do tanque:")))
x = float(input("altura da coluna de ar na parte suerior do tanque:"))
opçao = input("digite a opçao: (1/2)")
# "var" é o volume de ar no tanque 
var = (4 * (pi) * (r**2)) / 3
# "vcom" é o volume do combustivel no tanque
vcom = ((pi) * (x**2) * (3 * r - x))  / 3

if(opçao == "1"):
	print(round(var,4))
if(opçao == "2"):
	  print(round(vco,4))
			
-- OUTPUT:
0.0156
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:41:38) 
-- CODE:
from math import*
r = radians(float(input("valor do raio do tanque:")))
x = float(input("altura da coluna de ar na parte suerior do tanque:"))
opçao = input("digite a opçao: (1/2)")
# "var" é o volume de ar no tanque 
var = (4 * (pi) * (r**2)) / 3
# "vcom" é o volume do combustivel no tanque
vcom = ((pi) * (x**2) * (3 * r - x))  / 3

if(opçao == "1"):
	print(round(var,4))
if(opçao == "2"):
	  print(round(vco,4))
			
-- OUTPUT:
0.0156
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:41:48) 
-- CODE:
from math import*
r = radians(float(input("valor do raio do tanque:")))
x = float(input("altura da coluna de ar na parte suerior do tanque:"))
opçao = input("digite a opçao: (1/2)")
# "var" é o volume de ar no tanque 
var = (4 * (pi) * (r**2)) / 3
# "vcom" é o volume do combustivel no tanque
vcom = ((pi) * (x**2) * (3 * r - x))  / 3

if(opçao == "1"):
	print(round(var,4))
if(opçao == "2"):
	  print(round(vco,4))
			
-- OUTPUT:
0.0156
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:45:34) 
-- CODE:
from math import*
r = radians(float(input("valor do raio do tanque:")))
x = float(input("altura da coluna de ar na parte suerior do tanque:"))
opçao = input("digite a opçao: (1/2)")

var = (4 * (pi) * (r**2)) / 3
vcom = ((pi) * (x**2) * (3 * r - x))  / 3

if(opçao == "1"):
	print(round(var,4))
if(opçao == "2"):
	  print(round(vco,4))
			
-- OUTPUT:
0.0156
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 11:03:21) 
-- CODE:
from math import*
r = radians(float(input("valor do raio do tanque:")))
x = float(input("altura da coluna de ar na parte suerior do tanque:"))
opçao = input("digite a opçao: (1/2)")

var = (4 * (pi) * (r**2)) / 3
vcom = ((pi) * (x**2) * (3 * r - x))  / 3

if(opçao == "1"):
	print(round(var,4))
if(opçao == "2"):
	  print(round(vco,4))
			
-- EXECUTION TIME:
0.147772
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
0.0156
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 11:03:40) 
-- CODE:
from math import*
r = radians(float(input("valor do raio do tanque:")))
x = float(input("altura da coluna de ar na parte suerior do tanque:"))
opçao = input("digite a opçao: (1/2)")

var = (4 * (pi) * (r**2)) / 3
vcom = ((pi) * (x**2) * (3 * r - x))  / 3

if(opçao == "1"):
	print(round(var,4))
if(opçao == "2"):
	  print(round(vco,4))
			
-- OUTPUT:
0.0156
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 11:05:06) 
-- CODE:
from math import*
r = radians(float(input("valor do raio do tanque:")))
x = float(input("altura da coluna de ar na parte suerior do tanque:"))
opçao = input("digite a opçao: (1/2) ")

var = (4 * (pi) * (r**2)) / 3
vcom = ((pi) * (x**2) * (3 * r - x))  / 3

if(opçao == "1"):
	print(round(var,4))
if(opçao == "2"):
	  print(round(vco,4))
			
-- OUTPUT:
0.0156
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 11:06:01) 
-- CODE:
from math import*
r = radians(float(input("valor do raio do tanque:")))
x = float(input("altura da coluna de ar na parte suerior do tanque:"))
opçao = input("digite a opçao: (1/2) ")

var = (4 * (pi) * (r**2)) / 3
vcom = ((pi) * (x**2) * (3 * r - x))  / 3

if(opçao == "1"):
	print(round(var,4))
if(opçao == "2"):
	  print(round(vcom,4))
			
-- EXECUTION TIME:
0.189574
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
0.0156
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
-1.9115
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:25:49) 
-- CODE:
from math import*
r = radians(float(input("valor do raio do tanque:")))
x = float(input("altura da coluna de ar na parte suerior do tanque:"))
opçao = input("digite a opçao: (1/2) ")

var = (4 * (pi) * (r**2)) / 3
vcom = ((pi) * (x**2) * (3 * r - x))  / 3

if(opçao == "1"):
	print(round(var,4))
if(opçao == "2"):
	  print(round(vcom,4))
			
-- OUTPUT:
0.0156
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 15:32:40) 
-- CODE:
from math import*
r = radians(float(input("valor do raio do tanque:")))
x = float(input("altura da coluna de ar na parte suerior do tanque:"))
opçao = input("digite a opçao: (1/2) ")

var = (4 * (pi) * (r**2)) / 3
vcom = ((pi) * (x**2) * (3 * r - x))  / 3

if(opçao == "1"):
	print(round(var,4))
if(opçao == "2"):
	  print(round(vcom,4))
			
-- EXECUTION TIME:
0.208695
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
0.0156
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
-1.9115
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 15:32:41) 
-- CODE:
from math import*
r = radians(float(input("valor do raio do tanque:")))
x = float(input("altura da coluna de ar na parte suerior do tanque:"))
opçao = input("digite a opçao: (1/2) ")

var = (4 * (pi) * (r**2)) / 3
vcom = ((pi) * (x**2) * (3 * r - x))  / 3

if(opçao == "1"):
	print(round(var,4))
if(opçao == "2"):
	  print(round(vcom,4))
			
-- OUTPUT:
0.0156
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 15:33:12) 
-- CODE:
from math import*
r = radians(float(input("valor do raio do tanque:")))
x = float(input("altura da coluna de ar na parte suerior do tanque:"))
op = input("digite a op: (1/2) ")

var = (4 * (pi) * (r**2)) / 3
vcom = ((pi) * (x**2) * (3 * r - x))  / 3

if(opçao == "1"):
	print(round(var,4))
if(opçao == "2"):
	  print(round(vcom,4))
			
-- EXECUTION TIME:
0.151955
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/2443/main.py", line 9, in <module>
    if(op\xe7ao == "1"):
NameError: name 'op\xe7ao' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 15:33:14) 
-- CODE:
from math import*
r = radians(float(input("valor do raio do tanque:")))
x = float(input("altura da coluna de ar na parte suerior do tanque:"))
op = input("digite a op: (1/2) ")

var = (4 * (pi) * (r**2)) / 3
vcom = ((pi) * (x**2) * (3 * r - x))  / 3

if(opçao == "1"):
	print(round(var,4))
if(opçao == "2"):
	  print(round(vcom,4))
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    if(opçao == "1"):
NameError: name 'opçao' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 15:33:53) 
-- CODE:
from math import*
r = radians(float(input("valor do raio do tanque:")))
x = float(input("altura da coluna de ar na parte suerior do tanque:"))
op = input("digite a op: (1/2) ")

var = (4 * (pi) * (r**2)) / 3
vcom = ((pi) * (x**2) * (3 * r - x))  / 3

if(op == "1"):
	print(round(var,4))
if(op == "2"):
	  print(round(vcom,4))
			
-- OUTPUT:
0.0156
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 15:34:08) 
-- CODE:
from math import*
r = radians(float(input("valor do raio do tanque:")))
x = float(input("altura da coluna de ar na parte suerior do tanque:"))
op = input("digite a op: (1/2) ")

var = (4 * (pi) * (r**2)) / 3
vcom = ((pi) * (x**2) * (3 * r - x))  / 3

if(op == "1"):
	print(round(var,4))
if(op == "2"):
	  print(round(vcom,4))
			
-- EXECUTION TIME:
0.251529
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
0.0156
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
-1.9115
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 15:34:10) 
-- CODE:
from math import*
r = radians(float(input("valor do raio do tanque:")))
x = float(input("altura da coluna de ar na parte suerior do tanque:"))
op = input("digite a op: (1/2) ")

var = (4 * (pi) * (r**2)) / 3
vcom = ((pi) * (x**2) * (3 * r - x))  / 3

if(op == "1"):
	print(round(var,4))
if(op == "2"):
	  print(round(vcom,4))
			
-- EXECUTION TIME:
0.167083
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
0.0156
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
-1.9115
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 15:34:27) 
-- CODE:
from math import*
r = radians(float(input("valor do raio do tanque:")))
x = float(input("altura da coluna de ar na parte suerior do tanque:"))
op = input("digite a op: (1/2) ")

var = (4 * (pi) * (r**2)) / 3
vcom = ((pi) * (x**2) * (3 * r - x))  / 3

if(op == "1"):
	print(round(var,4))
if(op == "2"):
	  print(round(vcom,4))
			
-- OUTPUT:
0.0156
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 15:35:37) 
-- CODE:
from math import*
r = radians(float(input("valor do raio do tanque:")))
x = float(input("altura da coluna de ar na parte suerior do tanque:"))
op = input("digite a op: (1/2) ")

var = (4 * (pi) * (r**2)) / 3
vcom = ((pi) * (x**2) * ((3 * r) - x))  / 3

if(op == "1"):
	print(round(var,4))
if(op == "2"):
	  print(round(vcom,4))
			
-- OUTPUT:
0.0156
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 15:35:44) 
-- CODE:
from math import*
r = radians(float(input("valor do raio do tanque:")))
x = float(input("altura da coluna de ar na parte suerior do tanque:"))
op = input("digite a op: (1/2) ")

var = (4 * (pi) * (r**2)) / 3
vcom = ((pi) * (x**2) * ((3 * r) - x))  / 3

if(op == "1"):
	print(round(var,4))
if(op == "2"):
	  print(round(vcom,4))
			
-- OUTPUT:
0.0156
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 15:36:43) 
-- CODE:
from math import*
r = radians(float(input("valor do raio do tanque:")))
x = float(input("altura da coluna de ar na parte suerior do tanque:"))
op = input("digite a op: (1/2) ")

var = (4 * (pi) * (r**2)) / 3
vcom = (((pi) * (x**2)) * ( (3 * r) - x) )  / 3

if(op == "1"):
	print(round(var,4))
if(op == "2"):
	  print(round(vcom,4))
			
-- OUTPUT:
0.0156
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 15:37:25) 
-- CODE:
from math import*
r = float(input("valor do raio do tanque:"))
x = float(input("altura da coluna de ar na parte suerior do tanque:"))
op = input("digite a op: (1/2) ")

var = (4 * (pi) * (r**2)) / 3
vcom = (((pi) * (x**2)) * ( (3 * r) - x) )  / 3

if(op == "1"):
	print(round(var,4))
if(op == "2"):
	  print(round(vcom,4))
			
-- OUTPUT:
51.3127
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 15:37:44) 
-- CODE:
from math import*
r = float(input("valor do raio do tanque:"))
x = float(input("altura da coluna de ar na parte suerior do tanque:"))
op = input("digite a op: (1/2) ")

var = (4 * (pi) * (r**2)) / 3
vcom = (((pi) * (x**2)) * ( (3 * r) - x) )  / 3

if(op == "1"):
	print(round(var,4))
if(op == "2"):
	  print(round(vcom,4))
			
-- EXECUTION TIME:
0.159004
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
51.3127
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
19.9983
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 15:40:16) 
-- CODE:
from math import*
r = float(input("valor do raio do tanque:"))
x = float(input("altura da coluna de ar na parte suerior do tanque:"))
op = input("digite a op: (1/2) ")

var = (4 * (pi) * (r**2)) / 3
vcom = ((((pi) * (x**2)) * ( (3 * r) - x) )  / 3) -((4 * (pi) * (r**2)) / 3)

if(op == "1"):
	print(round(var,4))
if(op == "2"):
	  print(round(vcom,4))
			
-- OUTPUT:
51.3127
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 15:43:33) 
-- CODE:
from math import*
r = float(input("valor do raio do tanque:"))
x = float(input("altura da coluna de ar na parte suerior do tanque:"))
op = input("digite a op: (1/2) ")

var = (4 * (pi) * (r**2)) / 3
vtotal = ((((pi) * (x**2)) * ( (3 * r) - x) )  / 3) + ((4 * (pi) * (r**2)) / 3)
vcom = vtotal -((((pi) * (x**2)) * ( (3 * r) - x) )  / 3)

if(op == "1"):
	print(round(var,4))
if(op == "2"):
	  print(round(vcom,4))
			
-- OUTPUT:
51.3127
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 15:49:50) 
-- CODE:
from math import *

raio = float(input("Raio: "))
alturaX = float(input("Altura da Coluna de Ar: "))
opcao = int(input("Opcao desejada (1- Volume de Ar | 2- Volume do Combustivel) "))

volumeAr = ((pi * (alturaX ** 2)) * ((3 * raio) - alturaX)) / 3
volumeEsfera = (4 * pi * (raio ** 3)) / 3
volumeCombustivel = volumeEsfera - volumeAr

if opcao == 1:
	print (round(volumeAr,4))
else:
	print (round(volumeCombustivel,4))
-- EXECUTION TIME:
0.192659
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
