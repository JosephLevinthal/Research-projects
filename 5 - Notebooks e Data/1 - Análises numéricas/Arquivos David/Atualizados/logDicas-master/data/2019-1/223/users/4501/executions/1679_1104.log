== TEST (2019-04-26 17:56:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("numero: "))
b=float(input("numero: "))
print("Intervalo 1: ", a, b)

c=float(input("numero: "))
d=float(input("numero: "))
print("Intervalo 2: ", c, d)

if(b >= a and d >= c):
	if(c >= a and c <= b) or (d >= a and d >= b):
		print("Ha intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1:  1.0 2.0
Intervalo 2:  4.0 5.0
Ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:57:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("numero: "))
b=float(input("numero: "))
c=float(input("numero: "))
d=float(input("numero: "))
print("Intervalo 1: ", a, b)
print("Intervalo 2: ", c, d)

if(b >= a and d >= c):
	if(c >= a and c <= b) or (d >= a and d >= b):
		print("Ha intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1:  1.0 2.0
Intervalo 2:  4.0 5.0
Ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:58:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("numero: "))
b=float(input("numero: "))
c=float(input("numero: "))
d=float(input("numero: "))
print("Intervalo 1: ", a, "," ,b)
print("Intervalo 2: ", c, "," ,d)

if(b >= a and d >= c):
	if(c >= a and c <= b) or (d >= a and d >= b):
		print("Ha intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 17:59:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("numero: "))
b=float(input("numero: "))
c=float(input("numero: "))
d=float(input("numero: "))
print("Intervalo 1: ", a, "," ,b)
print("Intervalo 2: ", c, "," ,d)

if(b >= a and d >= c):
	if(c >= a and c <= b) or (d >= a and d >= b):
		print("Ha intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.147451
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1:  1.5 , 5.0
Intervalo 2:  2.5 , 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1:  -1.0 , -3.0
Intervalo 2:  1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 18:00:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("numero: "))
b=float(input("numero: "))
c=float(input("numero: "))
d=float(input("numero: "))
print("Intervalo 1: ", a, "," ,b)
print("Intervalo 2: ", c, "," ,d)

if(b >= a and d >= c):
	if((c >= a and c <= b) or (d >= a and d >= b)):
		print("Ha intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 18:01:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("numero: "))
b=float(input("numero: "))
c=float(input("numero: "))
d=float(input("numero: "))
print("Intervalo 1: ", a, "," ,b)
print("Intervalo 2: ", c, "," ,d)

if(b >= a and d >= c):
	if((c >= a and c <= b) or (d >= a and d >= b)):
		print("Ha intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.18997
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1:  1.5 , 5.0
Intervalo 2:  2.5 , 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1:  -1.0 , -3.0
Intervalo 2:  1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 18:01:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("numero: "))
b=float(input("numero: "))
c=float(input("numero: "))
d=float(input("numero: "))
print("Intervalo 1: ", a, "," ,b)
print("Intervalo 2: ", c, "," ,d)

if(b >= a and d >= c):
	if(c >= a and c <= b or d >= a and d >= b):
		print("Ha intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:30:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("numero: "))
b=float(input("numero: "))
c=float(input("numero: "))
d=float(input("numero: "))
print("Intervalo 1: ", a, "," ,b)
print("Intervalo 2: ", c, "," ,d)

if(b >= a and d >= c):
	elif(c >= a and c <= b) or (d >= a and d >= b):
		print("Ha intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 12
    elif(c >= a and c <= b) or (d >= a and d >= b):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:30:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("numero: "))
b=float(input("numero: "))
c=float(input("numero: "))
d=float(input("numero: "))
print("Intervalo 1: ", a, "," ,b)
print("Intervalo 2: ", c, "," ,d)

if(b >= a and d >= c):
	if(c >= a and c <= b) or (d >= a and d >= b):
		print("Ha intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 22:32:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("numero: "))
b=float(input("numero: "))
c=float(input("numero: "))
d=float(input("numero: "))
print("Intervalo 1: ", a, "," ,b)
print("Intervalo 2: ", c, "," ,d)

if(b > a and d > c):
	if(c >= a and c <= b) or (d >= a and d >= b):
		print("Ha intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.213742
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1:  1.5 , 5.0
Intervalo 2:  2.5 , 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1:  -1.0 , -3.0
Intervalo 2:  1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:56:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("numero: "))
b=float(input("numero: "))
c=float(input("numero: "))
d=float(input("numero: "))
print("Intervalo 1: ", a, "," ,b)
print("Intervalo 2: ", c, "," ,d)

if(b > a and d > c):
	if(c >= a and c <= b) or (d >= a and d >= b):
		print("Ha intersecao")
	elif(c >= a and c <= b) or (d >= a and d >= b):
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:57:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("numero: "))
b=float(input("numero: "))
c=float(input("numero: "))
d=float(input("numero: "))
print("Intervalo 1: ", a, "," ,b)
print("Intervalo 2: ", c, "," ,d)

if(b > a and d > c):
	if(c >= a and c <= b) or (d >= a and d >= b):
		print("Ha intersecao")
	elif(c >= a and c <= b) or (d >= a and d >= b):
		print("Nao ha intersecao")
	else:
		print("Entradas invalidas")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:58:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("numero: "))
b=float(input("numero: "))
c=float(input("numero: "))
d=float(input("numero: "))
print("Intervalo 1: ", a, "," ,b)
print("Intervalo 2: ", c, "," ,d)

if(b > a and d > c):
	if(c >= a and c <= b) or (d >= a and d >= b):
		print("Ha intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 22:59:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("numero: "))
b=float(input("numero: "))
c=float(input("numero: "))
d=float(input("numero: "))
print("Intervalo 1: ", a, "," ,b)
print("Intervalo 2: ", c, "," ,d)

if(b > a and d > c):
	if(c >= a and c <= b) or (d >= a and d >= b):
		print("Ha intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.159645
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1:  1.5 , 5.0
Intervalo 2:  2.5 , 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1:  -1.0 , -3.0
Intervalo 2:  1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:59:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("numero: "))
b=float(input("numero: "))
c=float(input("numero: "))
d=float(input("numero: "))
print("Intervalo 1: ", a, "," ,b)
print("Intervalo 2: ", c, "," ,d)

if(b > a and d > c):
	if(c >= a and c <= b) or (d >= a and d >= b):
		print("Ha intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 21:26:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("numero: "))
b=float(input("numero: "))
c=float(input("numero: "))
d=float(input("numero: "))
print("Intervalo 1: ", a, "," ,b)
print("Intervalo 2: ", c, "," ,d)

if(b > a and d > c):
	if(c >= a and c <= b) or (d >= a and d >= b):
		print("Ha intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.191804
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1:  1.5 , 5.0
Intervalo 2:  2.5 , 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1:  -1.0 , -3.0
Intervalo 2:  1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 21:26:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("numero: "))
b=float(input("numero: "))
c=float(input("numero: "))
d=float(input("numero: "))
print("Intervalo 1: ", a, "," ,b)
print("Intervalo 2: ", c, "," ,d)

if(b > a and d > c):
	if(c >= a and c <= b) or (d >= a and d >= b):
		print("Ha intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 21:27:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("numero: "))
b=float(input("numero: "))
c=float(input("numero: "))
d=float(input("numero: "))
print("Intervalo 1: ", a, "," ,b)
print("Intervalo 2: ", c, "," ,d)

if(b > a and d > c):
	if(c >= a and c <= b) or (d >= a and d >= b):
		print("Ha intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.181127
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1:  1.5 , 5.0
Intervalo 2:  2.5 , 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1:  -1.0 , -3.0
Intervalo 2:  1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 21:30:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("numero: "))
b=float(input("numero: "))
c=float(input("numero: "))
d=float(input("numero: "))
print("Intervalo 1: ", a, "," ,b)
print("Intervalo 2: ", c, "," ,d)
if(a >0 and b > 0 and c > 0):
	if(b > a and d > c):
		if(c >= a and c <= b) or (d >= a and d >= b):
			print("Ha intersecao")
		else:
			print("Nao ha intersecao")
	else:
		print("Entradas invalidas")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 21:30:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("numero: "))
b=float(input("numero: "))
c=float(input("numero: "))
d=float(input("numero: "))
print("Intervalo 1: ", a, "," ,b)
print("Intervalo 2: ", c, "," ,d)
if(a >0 and b > 0 and c > 0):
	if(b > a and d > c):
		if(c >= a and c <= b) or (d >= a and d >= b):
			print("Ha intersecao")
		else:
			print("Nao ha intersecao")
	else:
		print("Entradas invalidas")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.193786
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1:  1.5 , 5.0
Intervalo 2:  2.5 , 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1:  -1.0 , -3.0
Intervalo 2:  1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 21:31:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("numero: "))
b=float(input("numero: "))
c=float(input("numero: "))
d=float(input("numero: "))
print("Intervalo 1: ", a, "," ,b)
print("Intervalo 2: ", c, "," ,d)
if(a >0 and b > 0 and c > 0):
	if(b > a and d > c):
		if(c >= a and c <= b) or (d >= a and d >= b):
			print("Ha intersecao")
		else:
			print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 21:32:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("numero: "))
b=float(input("numero: "))
c=float(input("numero: "))
d=float(input("numero: "))
print("Intervalo 1: ", a, "," ,b)
print("Intervalo 2: ", c, "," ,d)
if(a >0 and b > 0 and c > 0):
	if(b > a and d > c):
		if(c >= a and c <= b) or (d >= a and d >= b):
			print("Ha intersecao")
		else:
			print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.203364
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1:  1.5 , 5.0
Intervalo 2:  2.5 , 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1:  -1.0 , -3.0
Intervalo 2:  1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 21:36:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("numero: "))
b=float(input("numero: "))
c=float(input("numero: "))
d=float(input("numero: "))
print("Intervalo 1: ", a, "," ,b)
print("Intervalo 2: ", c, "," ,d)

if(a > 0 and b > 0 and c > 0):
	if(b == a and d == c):
		if(c == a or c == b or d == a or d == b):
			print("Ha intersecao")
		else:
			print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 21:37:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("numero: "))
b=float(input("numero: "))
c=float(input("numero: "))
d=float(input("numero: "))
print("Intervalo 1: ", a, "," ,b)
print("Intervalo 2: ", c, "," ,d)

if(a > 0 and b > 0 and c > 0):
	if(b == a and d == c):
		if(c <= a or c <= b or d >= a or d >= b):
			print("Ha intersecao")
		else:
			print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 21:37:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("numero: "))
b=float(input("numero: "))
c=float(input("numero: "))
d=float(input("numero: "))
print("Intervalo 1: ", a, "," ,b)
print("Intervalo 2: ", c, "," ,d)

if(a > 0 and b > 0 and c > 0):
	if(b > a and d > c):
		if(c <= a or c <= b or d >= a or d >= b):
			print("Ha intersecao")
		else:
			print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 21:38:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("numero: "))
b=float(input("numero: "))
c=float(input("numero: "))
d=float(input("numero: "))
print("Intervalo 1: ", a, "," ,b)
print("Intervalo 2: ", c, "," ,d)

if(a > 0 and b > 0 and c > 0):
	if(b > a and d > c):
		if(c <= a and c <= b) or (d >= a and d >= b):
			print("Ha intersecao")
		else:
			print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 21:39:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("numero: "))
b=float(input("numero: "))
c=float(input("numero: "))
d=float(input("numero: "))
print("Intervalo 1: ", a, "," ,b)
print("Intervalo 2: ", c, "," ,d)

if(a > 0 and b > 0 and c > 0):
	if(b > a or d > c):
		if(c <= a and c <= b) or (d >= a and d >= b):
			print("Ha intersecao")
		else:
			print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 21:42:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("numero: "))
b=float(input("numero: "))
c=float(input("numero: "))
d=float(input("numero: "))
print("Intervalo 1: ", a, "," ,b)
print("Intervalo 2: ", c, "," ,d)

if(a > 0 and b > 0 and c > 0):
	if(b >= a and d >= c):
		if(c >= a and c <= b) or (d >= a and d <= b):
			print("Ha intersecao")
		else:
			print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 21:42:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("numero: "))
b=float(input("numero: "))
c=float(input("numero: "))
d=float(input("numero: "))
print("Intervalo 1: ", a, "," ,b)
print("Intervalo 2: ", c, "," ,d)

if(a > 0 and b > 0 and c > 0):
	if(b >= a and d >= c):
		if(c >= a and c <= b) or (d >= a and d <= b):
			print("Ha intersecao")
		else:
			print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.292015
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1:  1.5 , 5.0
Intervalo 2:  2.5 , 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1:  -1.0 , -3.0
Intervalo 2:  1.0 , 3.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
