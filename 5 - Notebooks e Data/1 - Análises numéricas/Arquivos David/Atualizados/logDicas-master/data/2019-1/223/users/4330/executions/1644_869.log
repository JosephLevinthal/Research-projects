== TEST (2019-04-11 17:16:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco"))
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:17:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:23:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	a = a*5/100
else
-- ERROR:
File "XXXX", line 8
    else
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:23:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	a = a*5/100
else
-- ERROR:
File "XXXX", line 8
    else
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:25:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	a = a*5/100
	print(a)
else:
	print(a)
-- OUTPUT:
10.0045
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:27:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	s = a*5/100
	p = s - a
	print(p)
else:
	print(p)
-- OUTPUT:
-190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:27:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	s = a*5/100
	p = a - s
	print(p)
else:
	print(p)
-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:31:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	s = a*5/100
	p = a - s
	k = p
	print(k)

	else:
	k = a
	print(k)
-- ERROR:
File "XXXX", line 12
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 17:31:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	s = a*5/100
	p = a - s
	k = p
	print(k)

	else:
	k = a
	print(k)
-- EXECUTION TIME:
0.173302
-- ERROR:
  File "/home/codebench/codes/1644/869/main.py", line 12
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:31:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	s = a*5/100
	p = a - s
	k = p
	print(k)

	else:
	k = a
	print(k)
-- ERROR:
File "XXXX", line 12
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:31:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	s = a*5/100
	p = a - s
	k = p
	print(k)

else:
	k = a
	print(k)
-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 17:31:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	s = a*5/100
	p = a - s
	k = p
	print(k)

else:
	k = a
	print(k)
-- EXECUTION TIME:
0.174054
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.0855
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5035
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 17:31:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	s = a*5/100
	p = a - s
	k = p
	print(k)

else:
	k = a
	print(k)
-- EXECUTION TIME:
0.140188
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.0855
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5035
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:31:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	s = a*5/100
	p = a - s
	k = p
	print(k)

else:
	k = a
	print(k)
-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 17:31:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	s = a*5/100
	p = a - s
	k = p
	print(k)

else:
	k = a
	print(k)
-- EXECUTION TIME:
0.144598
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.0855
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5035
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 17:31:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	s = a*5/100
	p = a - s
	k = p
	print(k)

else:
	k = a
	print(k)
-- EXECUTION TIME:
0.15872
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.0855
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5035
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 17:31:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	s = a*5/100
	p = a - s
	k = p
	print(k)

else:
	k = a
	print(k)
-- EXECUTION TIME:
0.113055
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.0855
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5035
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 17:31:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	s = a*5/100
	p = a - s
	k = p
	print(k)

else:
	k = a
	print(k)
-- EXECUTION TIME:
0.116025
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.0855
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5035
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 17:31:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	s = a*5/100
	p = a - s
	k = p
	print(k)

else:
	k = a
	print(k)
-- EXECUTION TIME:
0.130537
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.0855
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5035
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 17:31:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	s = a*5/100
	p = a - s
	k = p
	print(k)

else:
	k = a
	print(k)
-- EXECUTION TIME:
0.10495
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1644/869/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 17:31:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	s = a*5/100
	p = a - s
	k = p
	print(k)

else:
	k = a
	print(k)
-- EXECUTION TIME:
0.209073
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.0855
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.0855
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 17:31:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	s = a*5/100
	p = a - s
	k = p
	print(k)

else:
	k = a
	print(k)
-- EXECUTION TIME:
0.157316
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.0855
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.0855
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 17:31:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	s = a*5/100
	p = a - s
	k = p
	print(k)

else:
	k = a
	print(k)
-- EXECUTION TIME:
0.110379
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1644/869/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 17:31:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	s = a*5/100
	p = a - s
	k = p
	print(k)

else:
	k = a
	print(k)
-- EXECUTION TIME:
0.21234
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.0855
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5035
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 17:31:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	s = a*5/100
	p = a - s
	k = p
	print(k)

else:
	k = a
	print(k)
	
print(k)
-- EXECUTION TIME:
0.210989
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.0855
190.0855
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5035
190.5035
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 17:31:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	s = a*5/100
	p = a - s
	k = p
	print(k)

else:
	k = a
	print(k)
	
print(k)
-- EXECUTION TIME:
0.169566
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.0855
190.0855
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5035
190.5035
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 17:31:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	s = a*5/100
	p = a - s
	k = p
	print(k)

else:
	k = a
	print(k)
	
print(k)
-- EXECUTION TIME:
0.154284
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.0855
190.0855
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5035
190.5035
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:31:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	s = a*5/100
	p = a - s
	k = p
	print(k)

else:
	k = a
	print(k)
	
print(k)
-- OUTPUT:
190.0855
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 17:31:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	s = a*5/100
	p = a - s
	k = p
	print(k)

else:
	k = a
	print(k)
	
print(k)
-- EXECUTION TIME:
0.222208
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.0855
190.0855
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5035
190.5035
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 17:32:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	s = a*5/100
	p = a - s
	k = p
	print(k)

else:
	k = a
	print(k)
	
print(k)
-- EXECUTION TIME:
0.136756
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.0855
190.0855
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.0855
190.0855
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 17:32:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	s = a*5/100
	p = a - s
	k = p
	print(k)

else:
	k = a
	print(k)
	
print(k)
-- EXECUTION TIME:
0.156287
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.0855
190.0855
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5035
190.5035
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 17:32:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	s = a*5/100
	p = a - s
	k = p
	print(k)

else:
	k = a
	print(k)
	
print(k)
-- EXECUTION TIME:
0.194998
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.0855
190.0855
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5035
190.5035
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:32:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	s = a*5/100
	p = a - s
	k = p
	print(k)

else:
	k = a
	print(k)
	
print(k)
-- OUTPUT:
190.0855
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:32:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	s = a*5/100
	p = a - s
	k = p
	print(k)

else:
	k = a
	print(k)
	
print(k)
-- OUTPUT:
190.0855
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:32:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	s = a*5/100
	p = a - s
	k = p
	print(k)

else:
	k = a
	print(a)
	
print(k)
-- OUTPUT:
190.0855
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 17:32:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	s = a*5/100
	p = a - s
	k = p
	print(k)

else:
	k = a
	print(a)
	
print(k)
-- EXECUTION TIME:
0.145796
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.0855
190.0855
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5035
190.5035
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:32:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	s = a*5/100
	p = a - s
	k = p
	print(k)

else:
	k = a
	print(a)
	
print(k)
-- OUTPUT:
190.0855
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 17:32:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	s = a*5/100
	p = a - s
	k = p
	print(k)

else:
	k = a
	print(k)
	
print(a)
-- EXECUTION TIME:
0.193309
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.0855
200.09
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5035
200.53
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:32:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	s = a*5/100
	p = a - s
	k = p
	print(k)

else:
	k = a
	print(k)
	
print(a)
-- OUTPUT:
190.0855
200.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:32:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	s = a*5/100
	p = a - s
	k = p
	print(k)

else:
	k = a
	print(k)
	
print
-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 17:33:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	s = a*5/100
	p = a - s
	k = p
	print(k)

else:
	k = a
	print(k)
	
print(round(k,2))
-- EXECUTION TIME:
0.183982
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.0855
190.09
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
preco:190.5035
190.5
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:33:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	s = a*5/100
	p = a - s
	k = p
	print(k)

else:
	k = a
	print(k)
	
print(round(k,2))
-- OUTPUT:
190.0855
190.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:33:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	s = a*5/100
	p = a - s
	k = p
	print(k)

else:
	k = a
	print(k)
	
print(round(k,2))
-- OUTPUT:
190.0855
190.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:33:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	s = a*5/100
	p = a - s
	k = p
	print(k)

else:
	k = a
	print(k)
	
print(round( k,2 ))
-- OUTPUT:
190.0855
190.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 17:33:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	s = a*5/100
	p = a - s
	k = p
	print(k)

else:
	k = a
	print(k)
	
print(round( k,2 ))
-- EXECUTION TIME:
0.175864
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.0855
190.09
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5035
190.5
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 17:33:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	s = a*5/100
	p = a - s
	k = p
	print(k)

else:
	k = a
	print(k)
	
print(round( k,2 ))
-- EXECUTION TIME:
0.125647
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.0855
190.09
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5035
190.5
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:40:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	s = a*5/100
	p = a - s
	k = p

else:
	k = a
	
print(round( k,2 ))
-- OUTPUT:
190.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 17:40:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	s = a*5/100
	p = a - s
	k = p

else:
	k = a
	
print(round( k,2 ))
-- EXECUTION TIME:
0.141135
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.09
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 01:15:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	s = a*5/100
	p = a - s
	k = p

else:
	k = a
	
print(round( k,2 ))
-- EXECUTION TIME:
0.183135
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.09
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:21:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("preco:"))

if (a >= 200):
	s = a*5/100
	p = a - s
	k = p

else:
	k = a
	
print(round( k,2 ))
-- OUTPUT:
190.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
