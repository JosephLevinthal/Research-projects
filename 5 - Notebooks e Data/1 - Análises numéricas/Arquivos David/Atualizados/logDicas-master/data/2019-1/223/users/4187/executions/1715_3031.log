== TEST (2019-05-02 16:03:26) 
-- CODE:
valorx = float(input("digite o valor para x:"))

if(valorx <= 1):
	valorx = 1
print(valorx)
-- OUTPUT:
3.6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:03:33) 
-- CODE:
valorx = float(input("digite o valor para x:"))

if(valorx <= 1):
	valorx = 1
print(valorx)
-- OUTPUT:
3.6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:06:13) 
-- CODE:
valorx = float(input("digite o valor para x:"))

if(valorx <= 1):
	valorx = 1
	
elif(valorx > 1 and valorx <= 2):
	valorx = 2
	
elif(valorx > 2 and valorx <= 3):
	valorx = (valorx**2)
	
print(valorx)
-- OUTPUT:
3.6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:07:49) 
-- CODE:
valorx = float(input("digite o valor para x:"))

if(valorx <= 1):
	valorx = 1
	
elif(valorx > 1 and valorx <= 2):
	valorx = 2
	
elif(valorx > 2 and valorx <= 3):
	valorx = (valorx**2)
	
elif(valorx > 3):
	valorx = (valorx**3)
	
print(round(valorx,2))
-- OUTPUT:
46.66
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:07:56) 
-- CODE:
valorx = float(input("digite o valor para x:"))

if(valorx <= 1):
	valorx = 1
	
elif(valorx > 1 and valorx <= 2):
	valorx = 2
	
elif(valorx > 2 and valorx <= 3):
	valorx = (valorx**2)
	
elif(valorx > 3):
	valorx = (valorx**3)
	
print(round(valorx,2))
-- OUTPUT:
46.66
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 16:08:05) 
-- CODE:
valorx = float(input("digite o valor para x:"))

if(valorx <= 1):
	valorx = 1
	
elif(valorx > 1 and valorx <= 2):
	valorx = 2
	
elif(valorx > 2 and valorx <= 3):
	valorx = (valorx**2)
	
elif(valorx > 3):
	valorx = (valorx**3)
	
print(round(valorx,2))
-- OUTPUT:
46.66
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 16:08:13) 
-- CODE:
valorx = float(input("digite o valor para x:"))

if(valorx <= 1):
	valorx = 1
	
elif(valorx > 1 and valorx <= 2):
	valorx = 2
	
elif(valorx > 2 and valorx <= 3):
	valorx = (valorx**2)
	
elif(valorx > 3):
	valorx = (valorx**3)
	
print(round(valorx,2))
-- EXECUTION TIME:
0.217085
-- TEST CASE 1:
---- input:
3.6
---- correct output:
46.66
---- user output:
46.66
-- TEST CASE 2:
---- input:
2.9
---- correct output:
8.41
---- user output:
8.41
-- TEST CASE 3:
---- input:
1.2
---- correct output:
2
---- user output:
2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
