== TEST (2019-06-14 03:00:57) 
-- CODE:
x = ???????????????????
y = ???????????????????


a = zeros(???????)

for i in range(???????):
	a[i] = round(x[i]/(y[i]*y[i]),2)
	
c = ""
n = ???(a)

for i in range(???????)):
	if n < 17:
		c = "muito abaixo do peso"
	if 17 <= n <= 18.49:
		c = "abaixo do peso"
	if 18.5 <= n <= 24.99:
		c= "peso normal"
	if 25 <= n <= 29.99:
		c= "acima do peso"
	if 30 <= n <=34.99:
		c = "obesidade"
	if 35 <= n <= 39.99:
		c= "obesidade severa"
	if n > 40:
		c = "obesidade morbida"
print(a)
print("O MAIOR IMC DA TURMA EH: ",n)
print(c.upper())
-- ERROR:
File "XXXX", line 1
    x = ???????????????????
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-14 03:01:13) 
-- CODE:
x = ???????????????????
y = ???????????????????


a = zeros(???????)

for i in range(???????):
	a[i] = round(x[i]/(y[i]*y[i]),2)
	
c = ""
n = ???(a)

for i in range(???????)):
	if n < 17:
		c = "muito abaixo do peso"
	if 17 <= n <= 18.49:
		c = "abaixo do peso"
	if 18.5 <= n <= 24.99:
		c= "peso normal"
	if 25 <= n <= 29.99:
		c= "acima do peso"
	if 30 <= n <=34.99:
		c = "obesidade"
	if 35 <= n <= 39.99:
		c= "obesidade severa"
	if n > 40:
		c = "obesidade morbida"
print(a)
print("O MAIOR IMC DA TURMA EH: ",n)
print(c.upper())
-- EXECUTION TIME:
1.20787
-- ERROR:
  File "/home/codebench/codes/1807/2573/main.py", line 1
    x = ???????????????????
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-14 03:01:14) 
-- CODE:
x = ???????????????????
y = ???????????????????


a = zeros(???????)

for i in range(???????):
	a[i] = round(x[i]/(y[i]*y[i]),2)
	
c = ""
n = ???(a)

for i in range(???????)):
	if n < 17:
		c = "muito abaixo do peso"
	if 17 <= n <= 18.49:
		c = "abaixo do peso"
	if 18.5 <= n <= 24.99:
		c= "peso normal"
	if 25 <= n <= 29.99:
		c= "acima do peso"
	if 30 <= n <=34.99:
		c = "obesidade"
	if 35 <= n <= 39.99:
		c= "obesidade severa"
	if n > 40:
		c = "obesidade morbida"
print(a)
print("O MAIOR IMC DA TURMA EH: ",n)
print(c.upper())
-- EXECUTION TIME:
1.79499
-- ERROR:
  File "/home/codebench/codes/1807/2573/main.py", line 1
    x = ???????????????????
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-14 03:01:14) 
-- CODE:
x = ???????????????????
y = ???????????????????


a = zeros(???????)

for i in range(???????):
	a[i] = round(x[i]/(y[i]*y[i]),2)
	
c = ""
n = ???(a)

for i in range(???????)):
	if n < 17:
		c = "muito abaixo do peso"
	if 17 <= n <= 18.49:
		c = "abaixo do peso"
	if 18.5 <= n <= 24.99:
		c= "peso normal"
	if 25 <= n <= 29.99:
		c= "acima do peso"
	if 30 <= n <=34.99:
		c = "obesidade"
	if 35 <= n <= 39.99:
		c= "obesidade severa"
	if n > 40:
		c = "obesidade morbida"
print(a)
print("O MAIOR IMC DA TURMA EH: ",n)
print(c.upper())
-- EXECUTION TIME:
2.0916
-- ERROR:
  File "/home/codebench/codes/1807/2573/main.py", line 1
    x = ???????????????????
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-18 15:58:51) 
-- CODE:
from numpy import*

p=array(
al=array(

imc=p/(al*al)
for i in range(size(imc)):
	imc[i]=round(imc[i],2)
a=0
for i in range(size(p)):
	if max(imc)<7:
		a="MUITO ABAIXO DO PESO"
	if max(imc)> 17 and max(imc)<18.49:
		a="ABAIXO DO PESO"
	if max(imc)> 18.5 and max(imc)<24.99:
		a="PESO NORMAL"
	if max(imc)> 25 and max(imc)<29.99:
		a="ACIMA DO PESO"
	if max(imc)> 30 and max(imc)<34.99:
		a="OBESIDADE"
	if max(imc)> 35 and max(imc)<39.99:
		a="OBESIDADE SEVERA"
	if max(imc)>40:
		a="OBESIDADE MORBIDA"


print(imc)
print("O MAIOR IMC DA TURMA EH:",max(imc))
print(a)

-- EXECUTION TIME:
0.675497
-- ERROR:
  File "/home/codebench/codes/1807/2573/main.py", line 7
    for i in range(size(imc)):
      ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-18 15:59:12) 
-- CODE:
from numpy import*

p=array(eval(input())
al=array(eval(input())

imc=p/(al*al)
for i in range(size(imc)):
	imc[i]=round(imc[i],2)
a=0
for i in range(size(p)):
	if max(imc)<7:
		a="MUITO ABAIXO DO PESO"
	if max(imc)> 17 and max(imc)<18.49:
		a="ABAIXO DO PESO"
	if max(imc)> 18.5 and max(imc)<24.99:
		a="PESO NORMAL"
	if max(imc)> 25 and max(imc)<29.99:
		a="ACIMA DO PESO"
	if max(imc)> 30 and max(imc)<34.99:
		a="OBESIDADE"
	if max(imc)> 35 and max(imc)<39.99:
		a="OBESIDADE SEVERA"
	if max(imc)>40:
		a="OBESIDADE MORBIDA"


print(imc)
print("O MAIOR IMC DA TURMA EH:",max(imc))
print(a)

-- EXECUTION TIME:
0.576439
-- ERROR:
  File "/home/codebench/codes/1807/2573/main.py", line 4
    al=array(eval(input())
     ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-18 15:59:34) 
-- CODE:
from numpy import*

p=array(eval(input()))
al=array(eval(input()))

imc=p/(al*al)
for i in range(size(imc)):
	imc[i]=round(imc[i],2)
a=0
for i in range(size(p)):
	if max(imc)<7:
		a="MUITO ABAIXO DO PESO"
	if max(imc)> 17 and max(imc)<18.49:
		a="ABAIXO DO PESO"
	if max(imc)> 18.5 and max(imc)<24.99:
		a="PESO NORMAL"
	if max(imc)> 25 and max(imc)<29.99:
		a="ACIMA DO PESO"
	if max(imc)> 30 and max(imc)<34.99:
		a="OBESIDADE"
	if max(imc)> 35 and max(imc)<39.99:
		a="OBESIDADE SEVERA"
	if max(imc)>40:
		a="OBESIDADE MORBIDA"


print(imc)
print("O MAIOR IMC DA TURMA EH:",max(imc))
print(a)

-- EXECUTION TIME:
0.942645
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
