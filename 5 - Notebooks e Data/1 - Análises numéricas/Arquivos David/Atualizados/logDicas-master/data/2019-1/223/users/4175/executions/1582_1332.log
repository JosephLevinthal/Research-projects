== TEST (2019-03-14 11:43:02) 
-- CODE:
aresta = 5
area = 
 
print(round(area, 4))
-- ERROR:
File "XXXX", line 2
    area = 
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:43:51) 
-- CODE:
aresta = 5
area = (3/2*((3*(5**2))**0.5))
 
print(round(area, 4))
-- OUTPUT:
12.9904
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 11:43:54) 
-- CODE:
aresta = 5
area = (3/2*((3*(5**2))**0.5))
 
print(round(area, 4))
-- EXECUTION TIME:
0.21372
-- TEST CASE 1:
---- input:
xxx
---- correct output:
64.9519
---- user output:
12.9904
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:43:59) 
-- CODE:
aresta = 5
area = (3/2*((3*(5**2))**0.5))
 
print(round(area, 4))
-- OUTPUT:
12.9904
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:44:20) 
-- CODE:
aresta = 5
area = (3/2*((3*(5**2))**0.5))
 
print(round(area,4))
-- OUTPUT:
12.9904
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 11:44:21) 
-- CODE:
aresta = 5
area = (3/2*((3*(5**2))**0.5))
 
print(round(area,4))
-- EXECUTION TIME:
0.241475
-- TEST CASE 1:
---- input:
xxx
---- correct output:
64.9519
---- user output:
12.9904
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:44:23) 
-- CODE:
aresta = 5
area = (3/2*((3*(5**2))**0.5))
 
print(round(area,4))
-- OUTPUT:
12.9904
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:44:26) 
-- CODE:
aresta = 5
area = (3/2*((3*(5**2))**0.5))
 
print(round(area,2))
-- OUTPUT:
12.99
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 11:44:27) 
-- CODE:
aresta = 5
area = (3/2*((3*(5**2))**0.5))
 
print(round(area,2))
-- EXECUTION TIME:
0.193662
-- TEST CASE 1:
---- input:
xxx
---- correct output:
64.9519
---- user output:
12.99
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:44:29) 
-- CODE:
aresta = 5
area = (3/2*((3*(5**2))**0.5))
 
print(round(area,2))
-- OUTPUT:
12.99
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:47:36) 
-- CODE:
aresta = 5
area = (3/2*((3*(5**2))))
 
print(round(area,4))
-- OUTPUT:
112.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 11:47:38) 
-- CODE:
aresta = 5
area = (3/2*((3*(5**2))))
 
print(round(area,4))
-- EXECUTION TIME:
0.146186
-- TEST CASE 1:
---- input:
xxx
---- correct output:
64.9519
---- user output:
112.5
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:48:35) 
-- CODE:
aresta = 5
area = (3/2*((3*(5**2)**0.5)))
 
print(round(area,4))
-- OUTPUT:
22.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 11:48:37) 
-- CODE:
aresta = 5
area = (3/2*((3*(5**2)**0.5)))
 
print(round(area,4))
-- EXECUTION TIME:
0.184478
-- TEST CASE 1:
---- input:
xxx
---- correct output:
64.9519
---- user output:
22.5
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:48:38) 
-- CODE:
aresta = 5
area = (3/2*((3*(5**2)**0.5)))
 
print(round(area,4))
-- OUTPUT:
22.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:50:05) 
-- CODE:
aresta = 5
area = (3/2*((3*(5**2)**0.5)))
 
print(round(area,4))
-- OUTPUT:
22.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:51:12) 
-- CODE:
aresta = 5
area = (3/2*(3*5)
 
print(round(area,4))
-- ERROR:
File "XXXX", line 4
    print(round(area,4))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:51:17) 
-- CODE:
aresta = 5
area = (3/2*(3*5)
 
print(round(area,0))
-- ERROR:
File "XXXX", line 4
    print(round(area,0))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:51:25) 
-- CODE:
aresta = 5
area = (3/2*(3*5)
 
print(area)
-- ERROR:
File "XXXX", line 4
    print(area)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:51:31) 
-- CODE:
aresta = 5
area = (3/2*(3*5))
 
print(area)
-- OUTPUT:
22.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:51:35) 
-- CODE:
aresta = 5
area = (3/2*(3*5))
 
print(area)
-- OUTPUT:
22.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 11:51:38) 
-- CODE:
aresta = 5
area = (3/2*(3*5))
 
print(area)
-- EXECUTION TIME:
0.214422
-- TEST CASE 1:
---- input:
xxx
---- correct output:
64.9519
---- user output:
22.5
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:51:39) 
-- CODE:
aresta = 5
area = (3/2*(3*5))
 
print(area)
-- OUTPUT:
22.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:51:48) 
-- CODE:
aresta = 5
area = (3/2*(3*5))
 
print(round(area,4))
-- OUTPUT:
22.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 11:51:49) 
-- CODE:
aresta = 5
area = (3/2*(3*5))
 
print(round(area,4))
-- EXECUTION TIME:
0.141548
-- TEST CASE 1:
---- input:
xxx
---- correct output:
64.9519
---- user output:
22.5
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:51:51) 
-- CODE:
aresta = 5
area = (3/2*(3*5))
 
print(round(area,4))
-- OUTPUT:
22.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:52:09) 
-- CODE:
aresta = 5
area = (3/2*((3*(5*5))**0.5))
 
print(round(area,4))
-- OUTPUT:
12.9904
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 11:52:11) 
-- CODE:
aresta = 5
area = (3/2*((3*(5*5))**0.5))
 
print(round(area,4))
-- EXECUTION TIME:
0.130301
-- TEST CASE 1:
---- input:
xxx
---- correct output:
64.9519
---- user output:
12.9904
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:52:13) 
-- CODE:
aresta = 5
area = (3/2*((3*(5*5))**0.5))
 
print(round(area,4))
-- OUTPUT:
12.9904
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:52:17) 
-- CODE:
aresta = 5
area = (3/2*((3*(5*2))**0.5))
 
print(round(area,4))
-- OUTPUT:
8.2158
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:52:19) 
-- CODE:
aresta = 5
area = (3/2*((3*(5*2))**0.5))
 
print(round(area,4))
-- OUTPUT:
8.2158
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:52:21) 
-- CODE:
aresta = 5
area = (3/2*((3*(5*2))**0.5))
 
print(round(area,4))
-- OUTPUT:
8.2158
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:52:24) 
-- CODE:
aresta = 5
area = (3/2*((3*(5*2))**1))
 
print(round(area,4))
-- OUTPUT:
45.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 11:52:25) 
-- CODE:
aresta = 5
area = (3/2*((3*(5*2))**1))
 
print(round(area,4))
-- EXECUTION TIME:
0.226354
-- TEST CASE 1:
---- input:
xxx
---- correct output:
64.9519
---- user output:
45.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:52:26) 
-- CODE:
aresta = 5
area = (3/2*((3*(5*2))**1))
 
print(round(area,4))
-- OUTPUT:
45.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 11:52:29) 
-- CODE:
aresta = 5
area = (3/2*((3*(5*2))**2))
 
print(round(area,4))
-- EXECUTION TIME:
0.132293
-- TEST CASE 1:
---- input:
xxx
---- correct output:
64.9519
---- user output:
1350.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:52:30) 
-- CODE:
aresta = 5
area = (3/2*((3*(5*2))**2))
 
print(round(area,4))
-- OUTPUT:
1350.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:52:35) 
-- CODE:
aresta = 5
area = (3/2*((3*(5*2))**0,5))
 
print(round(area,4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    area = (3/2*((3*(5*2))**0,5))
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:52:46) 
-- CODE:
aresta = 5
area = (3/2*((3*(5*2))**0.5))
 
print(round(area,4))
-- OUTPUT:
8.2158
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 11:52:49) 
-- CODE:
aresta = 5
area = (3/2*((3*(5*2))**0.5))
 
print(round(area,4))
-- EXECUTION TIME:
0.300291
-- TEST CASE 1:
---- input:
xxx
---- correct output:
64.9519
---- user output:
8.2158
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:52:52) 
-- CODE:
aresta = 5
area = (3/2*((3*(5*2))**0.5))
 
print(round(area,4))
-- OUTPUT:
8.2158
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:53:50) 
-- CODE:
aresta = 5
area = (3/2*((3*(5*2))**0.5))
print = ((5*2)**0.5)
print(round(area,4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(round(area,4))
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:54:10) 
-- CODE:
aresta = 5
area = (3/2*((3*(5*2))**0.5))
print = (5*2)**0.5

print(round(area,4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(round(area,4))
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:54:16) 
-- CODE:
aresta = 5
area = (3/2*((3*(5*2))**0.5))
print = (5*2)**0.5

print(round(area,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(round(area,2))
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:54:38) 
-- CODE:
aresta = 5
area = (3/2*((3*(5*2))**0.5))
 
print(round(area,4))
-- OUTPUT:
8.2158
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:54:55) 
-- CODE:
aresta = 5
area = (3/2*((3*(5*2))**0.5))
 
print(round(area,4))

print(5*2)**0.5
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(5*2)**0.5
TypeError: unsupported operand type(s) for ** or pow(): 'NoneType' and 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:55:04) 
-- CODE:
aresta = 5
area = (3/2*((3*(5*2))**0.5))
 
print(round(area,4))

print((5*2)**0.5)
-- OUTPUT:
8.2158
3.1622776601683795
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:55:37) 
-- CODE:
aresta = 5
area = (3/2*((3*(5*2))**0.5))
 
print(round(area,4))

print((3*(5*2)**0.5))
-- OUTPUT:
8.2158
9.486832980505138
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:56:10) 
-- CODE:
aresta = 5
area = (3/2*((3*(5*2))**0.5))
 
print(round(area,4))

print((3*(5*2)**0.5))
print(3/2)
print(9.486832980505138*)
-- ERROR:
File "XXXX", line 8
    print(9.486832980505138*)
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:56:19) 
-- CODE:
aresta = 5
area = (3/2*((3*(5*2))**0.5))
 
print(round(area,4))

print((3*(5*2)**0.5))
print(3/2)

-- OUTPUT:
8.2158
9.486832980505138
1.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:56:25) 
-- CODE:
aresta = 5
area = (3/2*((3*(5*2))**0.5))
 
print(round(area,4))

print((3*(5*2)**0.5))
print(3/2)
print(9.486832980505138*1.5)
-- OUTPUT:
8.2158
9.486832980505138
1.5
14.230249470757707
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:56:47) 
-- CODE:
aresta = 5
area = (9.486832980505138*1.5)
 
print(round(area,4))

print((3*(5*2)**0.5))
print(3/2)
print(9.486832980505138*1.5)
-- OUTPUT:
14.2302
9.486832980505138
1.5
14.230249470757707
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:56:51) 
-- CODE:
aresta = 5
area = (9.486832980505138*1.5)
 
print(round(area,4))
-- OUTPUT:
14.2302
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 11:56:52) 
-- CODE:
aresta = 5
area = (9.486832980505138*1.5)
 
print(round(area,4))
-- EXECUTION TIME:
0.172728
-- TEST CASE 1:
---- input:
xxx
---- correct output:
64.9519
---- user output:
14.2302
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:56:54) 
-- CODE:
aresta = 5
area = (9.486832980505138*1.5)
 
print(round(area,4))
-- OUTPUT:
14.2302
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:57:46) 
-- CODE:
aresta = 5
area = (3/2*((3*(5*2))**5))
 
print(round(area,4))
-- OUTPUT:
36450000.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 11:57:47) 
-- CODE:
aresta = 5
area = (3/2*((3*(5*2))**5))
 
print(round(area,4))
-- EXECUTION TIME:
0.17077
-- TEST CASE 1:
---- input:
xxx
---- correct output:
64.9519
---- user output:
36450000.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:57:49) 
-- CODE:
aresta = 5
area = (3/2*((3*(5*2))**5))
 
print(round(area,4))
-- OUTPUT:
36450000.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:57:54) 
-- CODE:
aresta = 5
area = (3/2*((3*(5*2))**2)
 
print(round(area,4))
-- ERROR:
File "XXXX", line 4
    print(round(area,4))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 11:57:55) 
-- CODE:
aresta = 5
area = (3/2*((3*(5*2))**2)
 
print(round(area,4))
-- EXECUTION TIME:
0.14735
-- ERROR:
  File "/home/codebench/codes/1582/1332/main.py", line 4
    print(round(area,4))
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:58:08) 
-- CODE:
aresta = 5
area = (3/2*((3*(5*2))**0.3
 
print(round(area,4))
-- ERROR:
File "XXXX", line 4
    print(round(area,4))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:58:12) 
-- CODE:
aresta = 5
area = (3/2*((3*(5*2))**0.3))
 
print(round(area,4))
-- OUTPUT:
4.1613
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 11:58:14) 
-- CODE:
aresta = 5
area = (3/2*((3*(5*2))**0.3))
 
print(round(area,4))
-- EXECUTION TIME:
0.139819
-- TEST CASE 1:
---- input:
xxx
---- correct output:
64.9519
---- user output:
4.1613
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 11:58:16) 
-- CODE:
aresta = 5
area = (3/2*((3*(5*2))**0.3))
 
print(round(area,4))
-- OUTPUT:
4.1613
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 16:05:15) 
-- CODE:
aresta = 5
area = (3/2*((3**0.5(5*2)))
 
print(round(area,4))
-- ERROR:
File "XXXX", line 4
    print(round(area,4))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 16:05:32) 
-- CODE:
aresta = 5
area = (3/2*((3**0.5(5*2))))
 
print(round(area,4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    area = (3/2*((3**0.5(5*2))))
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 16:06:31) 
-- CODE:
aresta = 5
area = (3/2*(3**0.5(5*2)))
 
print(round(area,4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    area = (3/2*(3**0.5(5*2)))
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 16:06:43) 
-- CODE:
aresta = 5
area = (3/2*(3**1/2(5*2)))
 
print(round(area,4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    area = (3/2*(3**1/2(5*2)))
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 16:06:52) 
-- CODE:
aresta = 5
area = (3/2*(3**(1/2)(5*2)))
 
print(round(area,4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    area = (3/2*(3**(1/2)(5*2)))
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 16:07:00) 
-- CODE:
aresta = 5
area = (3/2*(3**(1/2)*(5*2)))
 
print(round(area,4))
-- OUTPUT:
25.9808
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 16:07:02) 
-- CODE:
aresta = 5
area = (3/2*(3**(1/2)*(5*2)))
 
print(round(area,4))
-- EXECUTION TIME:
0.121925
-- TEST CASE 1:
---- input:
xxx
---- correct output:
64.9519
---- user output:
25.9808
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 16:07:03) 
-- CODE:
aresta = 5
area = (3/2*(3**(1/2)*(5*2)))
 
print(round(area,4))
-- OUTPUT:
25.9808
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 16:07:20) 
-- CODE:
aresta = 5
area = (3/2*(3**(1/2)*(5**2)))
 
print(round(area,4))
-- OUTPUT:
64.9519
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 16:07:22) 
-- CODE:
aresta = 5
area = (3/2*(3**(1/2)*(5**2)))
 
print(round(area,4))
-- EXECUTION TIME:
0.195474
-- TEST CASE 1:
---- input:
xxx
---- correct output:
64.9519
---- user output:
64.9519
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:00:21) 
-- CODE:
from math import *
aresta = 5
area = ((3/2)*(sqrt(3*(a**2))))
 
print(round(area,4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    area = ((3/2)*(sqrt(3*(a**2))))
NameError: name 'a' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:00:30) 
-- CODE:
from math import *
aresta = 5
area = ((3/2)*(sqrt(3*(aresta**2))))
 
print(round(area,4))
-- OUTPUT:
12.9904
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 09:00:33) 
-- CODE:
from math import *
aresta = 5
area = ((3/2)*(sqrt(3*(aresta**2))))
 
print(round(area,4))
-- EXECUTION TIME:
0.219283
-- TEST CASE 1:
---- input:
xxx
---- correct output:
64.9519
---- user output:
12.9904
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:00:34) 
-- CODE:
from math import *
aresta = 5
area = ((3/2)*(sqrt(3*(aresta**2))))
 
print(round(area,4))
-- OUTPUT:
12.9904
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:02:46) 
-- CODE:
from math import *
aresta = 5
area = ((3/2*(3**(0.5)*(5**2))))
 
print(round(area,4))
-- OUTPUT:
64.9519
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:02:53) 
-- CODE:
from math import *
aresta = 5
area = ((3/2*(3**(1/2)*(5**2))))
 
print(round(area,4))
-- OUTPUT:
64.9519
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:03:22) 
-- CODE:
aresta = 5
area = (3/2*((3**(1/2))*(5**2)))
 
print(round(area,4))
-- OUTPUT:
64.9519
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 09:03:25) 
-- CODE:
aresta = 5
area = (3/2*((3**(1/2))*(5**2)))
 
print(round(area,4))
-- EXECUTION TIME:
0.190847
-- TEST CASE 1:
---- input:
xxx
---- correct output:
64.9519
---- user output:
64.9519
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:04:00) 
-- CODE:
aresta = 5
area = (3/2*((3**(1/2))*(5**2)))
 
print(round(area,4))
-- OUTPUT:
64.9519
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:04:06) 
-- CODE:
aresta = 5
area = (3/2*((3**(0.5))*(5**2)))
 
print(round(area,4))
-- OUTPUT:
64.9519
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 09:04:08) 
-- CODE:
aresta = 5
area = (3/2*((3**(0.5))*(5**2)))
 
print(round(area,4))
-- EXECUTION TIME:
0.130363
-- TEST CASE 1:
---- input:
xxx
---- correct output:
64.9519
---- user output:
64.9519
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:04:09) 
-- CODE:
aresta = 5
area = (3/2*((3**(0.5))*(5**2)))
 
print(round(area,4))
-- OUTPUT:
64.9519
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:04:16) 
-- CODE:
aresta = 5
area = (3/2*(3**(0.5)*(5**2)))
 
print(round(area,4))
-- OUTPUT:
64.9519
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 09:04:18) 
-- CODE:
aresta = 5
area = (3/2*(3**(0.5)*(5**2)))
 
print(round(area,4))
-- EXECUTION TIME:
0.161476
-- TEST CASE 1:
---- input:
xxx
---- correct output:
64.9519
---- user output:
64.9519
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:05:40) 
-- CODE:
from math import *
aresta = 5
area = (3/2*(sqrt(3*(5**2))))
 
print(round(area,4))
-- OUTPUT:
12.9904
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 09:05:42) 
-- CODE:
from math import *
aresta = 5
area = (3/2*(sqrt(3*(5**2))))
 
print(round(area,4))
-- EXECUTION TIME:
0.12567
-- TEST CASE 1:
---- input:
xxx
---- correct output:
64.9519
---- user output:
12.9904
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:05:46) 
-- CODE:
from math import *
aresta = 5
area = (3/2*(sqrt(3*(5**2))))
 
print(round(area,4))
-- OUTPUT:
12.9904
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:06:05) 
-- CODE:
aresta = 5
area = (3/2*((3**(0.5)*(5**2)))
 
print(round(area,4))
-- ERROR:
File "XXXX", line 4
    print(round(area,4))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:06:09) 
-- CODE:
aresta = 5
area = (3/2*((3**(0.5)*(5**2))))
 
print(round(area,4))
-- OUTPUT:
64.9519
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 08:19:57) 
-- CODE:
aresta = 5
area = (3/2*((3**(0.5)*(5**2))))
 
print(round(area,4))
-- EXECUTION TIME:
0.142
-- TEST CASE 1:
---- input:
xxx
---- correct output:
64.9519
---- user output:
64.9519
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
