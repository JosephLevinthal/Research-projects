== TEST (2019-07-02 15:12:46) 
-- CODE:
from numpy import *
from numpy.linalg import *

N = int(input())
M = zeros((M, M), dtype=int)

for i in range(N):
	for j in range(N):
		M[i, j] = min(i, j)+1
	
print(M)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 15:13:05) 
-- CODE:
from numpy import *
from numpy.linalg import *

N = int(input())
M = zeros((N, N), dtype=int)

for i in range(N):
	for j in range(N):
		M[i, j] = min(i, j)+1
	
print(M)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 15:13:24) 
-- CODE:
from numpy import *
from numpy.linalg import *

N = int(input())
M = zeros((N, N), dtype=int)

for i in range(N):
	for j in range(N):
		M[i, j] = min(i, j)+1
	
print(M)
-- EXECUTION TIME:
1.19548
-- TEST CASE 1:
---- input:
3
---- correct output:
[[1 1 1]
 [1 2 2]
 [1 2 3]]
---- user output:
[[1 1 1]
 [1 2 2]
 [1 2 3]]
-- TEST CASE 2:
---- input:
8
---- correct output:
[[1 1 1 1 1 1 1 1]
 [1 2 2 2 2 2 2 2]
 [1 2 3 3 3 3 3 3]
 [1 2 3 4 4 4 4 4]
 [1 2 3 4 5 5 5 5]
 [1 2 3 4 5 6 6 6]
 [1 2 3 4 5 6 7 7]
 [1 2 3 4 5 6 7 8]]
---- user output:
[[1 1 1 1 1 1 1 1]
 [1 2 2 2 2 2 2 2]
 [1 2 3 3 3 3 3 3]
 [1 2 3 4 4 4 4 4]
 [1 2 3 4 5 5 5 5]
 [1 2 3 4 5 6 6 6]
 [1 2 3 4 5 6 7 7]
 [1 2 3 4 5 6 7 8]]
-- TEST CASE 3:
---- input:
1
---- correct output:
[[1]]
---- user output:
[[1]]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 15:14:25) 
-- CODE:
from numpy import *
from numpy.linalg import *

N = int(input())
M = zeros((N, N), dtype=int)

for i in range(N):
	for j in range(N):
		M[i, j] = min(i, j)
	
print(M)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
