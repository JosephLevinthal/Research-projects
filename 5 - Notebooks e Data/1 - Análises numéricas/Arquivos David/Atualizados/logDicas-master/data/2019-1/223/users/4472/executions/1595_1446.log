== TEST (2019-03-30 19:45:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Informe a quantidade de litros de polpas: ")
polpa = float(var)

print("Michel ficará com: ", round((polpa * 0.33),3))

-- OUTPUT:
Michel ficará com:  2.31
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 19:45:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Informe a quantidade de litros de polpas: ")
polpa = float(var)

print("Michel ficara com: ", round((polpa * 0.33),3))

-- OUTPUT:
Michel ficara com:  2.31
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 19:45:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Informe a quantidade de litros de polpas: ")
polpa = float(var)

print("Michel ficara com: ", round((polpa * 0.33),3))

-- EXECUTION TIME:
0.137379
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
Michel ficara com:  2.31
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
Michel ficara com:  6.6
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
Michel ficara com:  4.95
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 19:48:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Informe a quantidade de litros de polpas: ")
polpa = float(var)

print(round((polpa * 0.33),3))

-- OUTPUT:
2.31
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 19:48:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Informe a quantidade de litros de polpas: ")
polpa = float(var)

print(round((polpa * 0.33),3))

-- EXECUTION TIME:
0.160571
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
2.31
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
6.6
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
4.95
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 19:48:24) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Informe a quantidade de litros de polpas: ")
polpa = int(var)

print(round((polpa * 0.33),3))

-- OUTPUT:
2.31
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 19:48:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Informe a quantidade de litros de polpas: ")
polpa = int(var)

print(round((polpa * 0.33),3))

-- EXECUTION TIME:
0.212453
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
2.31
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:

-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
4.95
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 19:49:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Informe a quantidade de litros de polpas: ")
polpa = int(var)

print(round((polpa * 0.0033),3))

-- OUTPUT:
0.023
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 19:49:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Informe a quantidade de litros de polpas: ")
polpa = int(var)

print(round((polpa * 0.0033),3))

-- EXECUTION TIME:
0.128198
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
0.023
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:

-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
0.05
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 19:49:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Informe a quantidade de litros de polpas: ")
polpa = int(var)

print(round((polpa * 0.00033),3))

-- OUTPUT:
0.002
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 19:50:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Informe a quantidade de litros de polpas: ")
polpa = int(var)

print(round((polpa * 0.00033),3))

-- EXECUTION TIME:
0.156031
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
0.002
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:

-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
0.005
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 19:51:40) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Informe a quantidade de litros de polpas: ")
polpa = int(round(var * 0.03),3)


print(polpa)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    polpa = int(round(var * 0.03),3)
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 19:52:24) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Informe a quantidade de litros de polpas: ")
polpa = int(round(var * 0.03),3)


print float(polpa)

-- ERROR:
File "XXXX", line 9
    print float(polpa)
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 19:53:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Informe a quantidade de litros de polpas: ")
polpa = int(round(var * 0.03),3)

michael = float(polpa)
print (michael)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    polpa = int(round(var * 0.03),3)
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 19:53:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Informe a quantidade de litros de polpas: ")
polpa = int(var)

michael = float(polpa)
print (michael)

-- OUTPUT:
7.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 19:58:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Informe a quantidade de litros de polpas: ")
polpa = float(var)

michael = polpa * 0.003

print (round(michael),3)
-- OUTPUT:
0 3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 19:58:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Informe a quantidade de litros de polpas: ")
polpa = float(var)

michael = polpa * 0.03

print (round(michael),3)
-- OUTPUT:
0 3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 19:59:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Informe a quantidade de litros de polpas: ")
polpa = float(var)

michael = polpa * (1/3)

print (round(michael),3)
-- OUTPUT:
2 3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 19:59:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Informe a quantidade de litros de polpas: ")
polpa = float(var)

michael = polpa * (1/3)

print (round(michael),3)
-- EXECUTION TIME:
0.210965
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
2 3
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
7 3
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
5 3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 20:00:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Informe a quantidade de litros de polpas: ")
polpa = int(var)

michael = polpa * (1/3)

print (round(michael),3)
-- OUTPUT:
2 3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 20:00:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Informe a quantidade de litros de polpas: ")
polpa = int(var)

michael = polpa * (1/3)

print (round(michael),3)
-- EXECUTION TIME:
0.13382
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
2 3
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:

-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
5 3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 20:01:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Informe a quantidade de litros de polpas: ")
polpa = int(var)

michael = float(polpa) * 0.3

print (round(michael),3)
-- OUTPUT:
2 3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 20:01:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Informe a quantidade de litros de polpas: ")
polpa = int(var)

michael = float(polpa) * 3

print (round(michael),3)
-- OUTPUT:
21 3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 20:01:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Informe a quantidade de litros de polpas: ")
polpa = int(var)

michael = (polpa) * 3

print (round(michael),3)
-- OUTPUT:
21 3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 20:02:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Informe a quantidade de litros de polpas: ")
polpa = float(var)

michael = (polpa) * 3

print (round(michael),3)
-- OUTPUT:
21 3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 20:17:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Informe a quantidade de litros de polpas: ")
polpa = int(var)

michael = (polpa) * 0.3333

print (round(michael),3)
-- OUTPUT:
2 3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 20:17:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Informe a quantidade de litros de polpas: ")
polpa = float(var)

michael = (polpa) * 0.3333

print (round(michael),3)
-- OUTPUT:
2 3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 20:18:08) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Informe a quantidade de litros de polpas: ")
polpa = float(var)

michael = (polpa) * 0.3333

print (round(michael),3)
-- EXECUTION TIME:
0.121356
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
2 3
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
7 3
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
5 3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 20:18:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Informe a quantidade de litros de polpas: ")
polpa = float(var)

michael = polpa * 0.3333

print (round(michael),3)
-- OUTPUT:
2 3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 20:19:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Informe a quantidade de litros de polpas: ")
polpa = float(var)

michael = polpa * 0.3333

print (round(michael),3)
-- EXECUTION TIME:
0.177133
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
2 3
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
7 3
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
5 3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 20:19:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Informe a quantidade de litros de polpas: ")
polpa = float(var)

michael = polpa * 0.3333

print (round(michael,3))
-- OUTPUT:
2.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 20:19:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Informe a quantidade de litros de polpas: ")
polpa = float(var)

michael = polpa * 0.3333

print (round(michael,3))
-- EXECUTION TIME:
0.136016
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
2.333
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
6.666
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
4.999
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 20:20:13) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Informe a quantidade de litros de polpas: ")
polpa = float(var)

michael = polpa * 0.3333

print (michael)
-- OUTPUT:
2.3331
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 20:21:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Informe a quantidade de litros de polpas: ")
polpa = float(var)

michael = polpa * 0.3333

print round((michael),3)
-- ERROR:
File "XXXX", line 10
    print round((michael),3)
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 20:21:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Informe a quantidade de litros de polpas: ")
polpa = float(var)

michael = polpa * 0.3333

print (round((michael),3))
-- OUTPUT:
2.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 20:21:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Informe a quantidade de litros de polpas: ")
polpa = float(var)

michael = polpa * 0.3333

print (round((michael),3))
-- EXECUTION TIME:
0.110644
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
2.333
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
6.666
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
4.999
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 20:22:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Informe a quantidade de litros de polpas: ")
polpa = float(var)

print (round((polpa * 0.3333),3))
-- OUTPUT:
2.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 20:22:44) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Informe a quantidade de litros de polpas: ")
polpa = float(var)

print (round((polpa * 0.3333),3))
-- EXECUTION TIME:
0.178337
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
2.333
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
6.666
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
4.999
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 20:23:08) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Informe a quantidade de litros de polpas: ")
polpa = int(var)

print (round((polpa * 0.3333),3))
-- OUTPUT:
2.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 20:23:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Informe a quantidade de litros de polpas: ")
polpa = int(var)

print (round((polpa * 0.3333),3))
-- EXECUTION TIME:
0.118317
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
2.333
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:

-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
4.999
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 20:25:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Informe a quantidade de litros de polpas: ")
polpa = (var)

print (round((polpa * 0.3333), 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print (round((polpa * 0.3333), 3))
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 20:26:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Informe a quantidade de litros de polpas: ")
polpa = (round((var), 3))

print (round((polpa * 0.3333), 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    polpa = (round((var), 3))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 20:26:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Informe a quantidade de litros de polpas: ")
polpa = (round((var), 3)

print (round((polpa * 0.3333), 3))
-- ERROR:
File "XXXX", line 8
    print (round((polpa * 0.3333), 3))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 20:27:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Informe a quantidade de litros de polpas: ")
polpa = (round((var), 2)

print (round((polpa * 0.3333), 3))
-- ERROR:
File "XXXX", line 8
    print (round((polpa * 0.3333), 3))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 20:29:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Polpas: ")

print (round(var * 0.3333),3)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print (round(var * 0.3333),3)
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 20:31:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Polpas: ")

print float(round(var * 0.3333),3)
-- ERROR:
File "XXXX", line 7
    print float(round(var * 0.3333),3)
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 20:52:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Litros de Polpas: ")
polpas = float(var)

michael = (polpas) * (1/3)

print (michael)
-- OUTPUT:
2.333333333333333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 20:53:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Litros de Polpas: ")
polpas = float(var)

michael = (polpas) * (1/3)

print round(michael),3
-- ERROR:
File "XXXX", line 10
    print round(michael),3
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 20:53:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Litros de Polpas: ")
polpas = float(var)

michael = (polpas) * (1/3)

print (round(michael),3)
-- OUTPUT:
2 3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 20:54:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Litros de Polpas: ")
polpas = float(var)

michael = polpas * (1/3)

print (round(michael), 3)
-- OUTPUT:
2 3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 20:55:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Litros de Polpas: ")
polpas = float(var)

michael = polpas * 0.3333

print (round(michael), 3)
-- OUTPUT:
2 3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 20:55:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Litros de Polpas: ")
polpas = int(var)

michael = polpas * 0.3333

print (round(michael), 3)
-- OUTPUT:
2 3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 20:56:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Litros de Polpas: ")
polpas = int(var)

michael = polpas * 0.3333

print (round((michael), 3)
-- ERROR:
File "XXXX", line 11
    
                              ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 20:56:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Litros de Polpas: ")
polpas = int(var)

michael = polpas * 0.3333

print (round((michael), 3))
-- OUTPUT:
2.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 20:56:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Litros de Polpas: ")
polpas = int(var)

michael = polpas * 0.3333

print (round((michael), 3))
-- EXECUTION TIME:
0.194312
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
2.333
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:

-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
4.999
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 20:57:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Litros de Polpas: ")
polpas = int(var)

michael = polpas * (1/3)

print (round((michael), 3))
-- OUTPUT:
2.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 20:57:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Litros de Polpas: ")
polpas = int(var)

michael = polpas * (1/3)

print (round((michael), 3))
-- EXECUTION TIME:
0.124651
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
2.333
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:

-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
5.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 20:58:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Litros de Polpas: ")
polpas = float(var)

michael = polpas * (1/3)

print (round((michael), 3))
-- OUTPUT:
2.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 20:58:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var = input("Litros de Polpas: ")
polpas = float(var)

michael = polpas * (1/3)

print (round((michael), 3))
-- EXECUTION TIME:
0.12687
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
2.333
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
6.667
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
5.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
