== TEST (2019-04-11 16:02:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra=float(input("valor do rafarl: "))

if (compra>=200):
	mensagem= compra - (5/100)*compra
	
else:
	mensagen= compra 
	
print(round, 2)
	
-- OUTPUT:
<built-in function round> 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:02:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra=float(input("valor do rafael: "))

if (compra>=200):
	mensagem= compra - (5/100)*compra
	
else:
	mensagen= compra 
	
print(round, 2)
	
-- OUTPUT:
<built-in function round> 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:10:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra=float(input("valor do rafael: "))

if (compra>=200):
	mensagem= compra - (5/100)*compra
	
else:
	mensagen= compra 
	
print(round, 2)
	
-- OUTPUT:
<built-in function round> 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:30:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra=float(input("valor do rafael: "))

if (compra>=200):
	mensagem= compra - (5/100)*compra
	
else:
	
print(round(compra, 2))
	
-- ERROR:
File "XXXX", line 11
    print(round(compra, 2))
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:33:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra=float(input("valor do rafael: "))

if (compra>=200):
	mensagem= compra - (5/100)*compra
	
else:
	print(round(compra, 2))
	
-- ERROR:
File "XXXX", line 11
    print(round(compra, 2))
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:33:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra=float(input("valor do rafael: "))

if (compra>=200):
	mensagem= compra - (5/100)*compra
	
else:
print(round(compra, 2))
	
-- ERROR:
File "XXXX", line 10
    print(round(compra, 2))
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:33:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra=float(input("valor do rafael: "))

if (compra>=200):
	mensagem= compra - (5/100)*compra
	
else:
print(round(compra, 2))
	
-- ERROR:
File "XXXX", line 10
    print(round(compra, 2))
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:33:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra=float(input("valor do rafael: "))

if (compra>=200):
	mensagem= compra - (5/100)*compra
	
else:
print(round(compra, 2))
	
-- ERROR:
File "XXXX", line 10
    print(round(compra, 2))
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:33:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra=float(input("valor do rafael: "))

if (compra>=200):
	mensagem= compra - (5/100)*compra
	
else:
print(round(compra, 2))
	
-- ERROR:
File "XXXX", line 10
    print(round(compra, 2))
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:33:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra=float(input("valor do rafael: "))

if (compra>=200):
	mensagem= compra - (5/100)*compra
	
else:
print(round(compra, 2))
	
-- ERROR:
File "XXXX", line 10
    print(round(compra, 2))
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:39:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra=float(input("valor do rafael: "))

if (compra>=200):
	print(round( compra - compra * (5/100,2))
	
else:
	print(round(compra, 2))
	
-- ERROR:
File "XXXX", line 9
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:40:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra=float(input("valor do rafael: "))

if (compra>=200):
	print(round( compra - compra * (5/100))
	
else:
	print(round(compra,2))
-- ERROR:
File "XXXX", line 9
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:40:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra=float(input("valor do rafael: "))

if (compra>=200):
	print(round( compra - compra * (5/100))
	
else:
	print(round(compra,2))
-- ERROR:
File "XXXX", line 9
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:43:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra=float(input("valor do rafael: "))

if (compra>=200):
	mensagem= round( compra - compra * (5/100))
	
else:
	print(round(compra,2))
-- ERROR:
File "XXXX", line 9
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:43:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra=float(input("valor do rafael: "))

if (compra>=200):
	mensagem= round( compra - compra * (5/100,2))
	
else:
	print(round(compra,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    mensagem= round( compra - compra * (5/100,2))
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:43:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra=float(input("valor do rafael: "))

if (compra>=200):
	mensagem= round( compra - compra * (5/100)2)
	
else:
	print(round(compra,2))
-- ERROR:
File "XXXX", line 7
    mensagem= round( compra - compra * (5/100)2)
                                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:43:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra=float(input("valor do rafael: "))

if (compra>=200):
	mensagem= round( compra - compra * (5/100))
	
else:
	print(round(compra,2))
-- ERROR:
File "XXXX", line 7
    mensagem= round( compra - compra * (5/100)2)
                                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:44:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra=float(input("valor do rafael: "))

if (compra>=200):
	mensagem=( compra - compra * (5/100))
	
else:
	print(round(compra,2))
-- ERROR:
File "XXXX", line 7
    mensagem= round( compra - compra * (5/100)2)
                                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:52:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra=float(input("valor do rafael: "))

if (compra>=200):
	mensagem=compra - compra * (5/100)
	
else:
	print(round(compra,2))
-- ERROR:
File "XXXX", line 7
    mensagem= round( compra - compra * (5/100)2)
                                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:55:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra=float(input("valor do rafael: "))

if (compra>=200):
	mensagem=compra - compra * (5/100)
	
else:
	print(round(compra,2))
-- ERROR:
File "XXXX", line 7
    mensagem= round( compra - compra * (5/100)2)
                                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:55:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra=float(input("valor do rafael: "))

if (compra>=200):
	mensagem=compra-(5/100)*compra
	
else:
	print(round(compra,2))
-- ERROR:
File "XXXX", line 7
    mensagem= round( compra - compra * (5/100)2)
                                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:01:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra=float(input("valor do rafael: "))

if (compra>=200):
	mensagem=compra-(5/100)*compra
	
else:
	print(round(compra,2))
-- ERROR:
File "XXXX", line 7
    mensagem= round( compra - compra * (5/100)2)
                                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:03:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra=float(input("valor: "))

if (compra>=200):
	mensagem=valor-(5/100)*compra
	
else:
	print(round(compra,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    mensagem=valor-(5/100)*compra
NameError: name 'valor' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:03:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra=float(input("valor: "))

if (compra>=200):
	mensagem= (compra-(5/100)*compra)
	
else:
	print(round(compra,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    mensagem=valor-(5/100)*compra
NameError: name 'valor' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 12:51:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra=float(input("valor: "))

if (compra>=200):
	mensagem= (compra-(5/100)*compra)
	
else:
	print(round(compra,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    mensagem=valor-(5/100)*compra
NameError: name 'valor' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 12:51:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra=float(input("valor: "))

if (compra>=200):
	mensagem= (compra-(5/100)*compra)
	
else:
	print(round(compra,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    mensagem=valor-(5/100)*compra
NameError: name 'valor' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 12:51:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra=float(input("valor: "))

if (compra>=200):
	mensagem= (compra-(5/100)*compra)
	
else:
print(round(compra,2))
-- ERROR:
File "XXXX", line 10
    print(round(compra,2))
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 12:51:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra=float(input("valor: "))

if (compra>=200):
	mensagem= (compra-(5/100)*compra)
	
else:

print(round(compra,2))
-- ERROR:
File "XXXX", line 11
    print(round(compra,2))
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
