== TEST (2019-04-30 17:27:57) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))

if(H>0 and h>0 and r >0):
	print(H,h,r)
else:
	print("entradas invalidas")
-- OUTPUT:
11.3 5.7 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:28:10) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))

if(H and h and r >0):
	print(H,h,r)
else:
	print("entradas invalidas")
-- OUTPUT:
11.3 5.7 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:28:22) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))

if((H and h and r) >0):
	print(H,h,r)
else:
	print("entradas invalidas")
-- OUTPUT:
11.3 5.7 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:29:19) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))

if(H>0 and h>0 and r >0 and H>h and H>2*r):
	print(H,h,r)
else:
	print("entradas invalidas")
-- OUTPUT:
11.3 5.7 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:29:25) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))

if(H>0 and h>0 and r >0 and H>h and H>2*r):
	print(H,h,r)
else:
	print("entradas invalidas")
-- OUTPUT:
11.3 5.7 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:29:32) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))

if(H>0 and h>0 and r >0 and H>h and H>2*r):
	print(H,h,r)
else:
	print("entradas invalidas")
-- OUTPUT:
11.3 5.7 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:29:42) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))

if(H>0 and h>0 and r >0 and H>h and H>2*r):
	print(H,h,r)
else:
	print("entradas invalidas")
-- OUTPUT:
11.3 5.7 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:30:43) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))

if(H>0 and h>0 and r >0 and H>h and H>2*r):
	
else:
	print("Entradas:", H ,",", h ,"," r)
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 13
    else:
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:30:53) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))

if(H>0 and h>0 and r >0 and H>h and H>2*r):
	
else:
	print("Entradas:", H ,",", h ,",", r)
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 13
    else:
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:31:28) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))

if(H>0 and h>0 and r >0 and H>h and H>2*r):
	
else:
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 13
    else:
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:31:53) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))

if(H>0 and h>0 and r >0 and H>h and H>2*r):
	
else:
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 13
    else:
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:32:05) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))

if(H>0 and h>0 and r >0 and H>h and H>2*r):
	print(H)
else:
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
-- OUTPUT:
11.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:52:10) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))

if(H>0 and h>0 and r >0 and H>h and H>2*r):
	elif(h<r):
		v=(1/3)*pi*h**2*(3*r-h)
		
	elif(h<h-r):
		v=(2/3)*pi*r**3+pi*r**2*(h-r)
		
	elif(h<H):
		v=(4/3)*pi**3+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
	print("Entradas:", H, ",", h, ",", r)
	print("Volume:", v,"litros")
	
else:
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 12
    elif(h<r):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:52:43) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))

if(H>0 and h>0 and r >0 and H>h and H>2*r):
elif(h<r):
	v=(1/3)*pi*h**2*(3*r-h)
	
elif(h<h-r):
	v=(2/3)*pi*r**3+pi*r**2*(h-r)
	
elif(h<H):
	v=(4/3)*pi**3+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
print("Entradas:", H, ",", h, ",", r)
print("Volume:", v,"litros")
	
else:
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 12
    elif(h<r):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:52:54) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))

if(H>0 and h>0 and r >0 and H>h and H>2*r):
elif(h<r):
	v=(1/3)*pi*h**2*(3*r-h)
	
elif(h<h-r):
	v=(2/3)*pi*r**3+pi*r**2*(h-r)
	
elif(h<H):
	v=(4/3)*pi**3+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
	print("Entradas:", H, ",", h, ",", r)
	print("Volume:", v,"litros")
	
else:
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 12
    elif(h<r):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:53:09) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))

if(H>0 and h>0 and r >0 and H>h and H>2*r):
	if(h<r):
		v=(1/3)*pi*h**2*(3*r-h)
	
	elif(h<h-r):
		v=(2/3)*pi*r**3+pi*r**2*(h-r)
	
	elif(h<H):
		v=(4/3)*pi**3+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
	print("Entradas:", H, ",", h, ",", r)
	print("Volume:", v,"litros")
	
else:
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 64.7759019605156 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:53:53) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))

if(H>0 and h>0 and r >0 and H>h and H>2*r):
	if(h<r):
		v=(1/3)*pi*h**2*(3*r-h)
	
	elif(h<h-r):
		v=(2/3)*pi*r**3+pi*r**2*(h-r)
	
	elif(h<H):
		v=(4/5)*pi**5+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
	print("Entradas:", H, ",", h, ",", r)
	print("Volume:", v,"litros")
	
else:
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 268.24994754834097 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:54:06) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))

if(H>0 and h>0 and r >0 and H>h and H>2*r):
	if(h<r):
		v=(1/3)*pi*h**2*(3*r-h)
	
	elif(h<h-r):
		v=(2/3)*pi*r**3+pi*r**2*(h-r)
	
	elif(h<H):
		v=(4/5)*pi**5+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
	print("Entradas:", H, ",", h, ",", r)
	print("Volume:", v,"litros")
	
else:
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
-- EXECUTION TIME:
0.165916
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 268.24994754834097 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:55:05) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))

if(H>0 and h>0 and r >0 and H>h and H>2*r):
	if(h<r):
		v=(1/3)*pi*h**2*(3*r-h)
	
	elif(h<h-r):
		v=(2/3)*pi*r**3+pi*r**2*(h-r)
	
	elif(h<H):
		v=(4/5)*pi**5+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
	print("Entradas:", H, ",", h, ",", r)
	print("Volume:", v,"litros")
	
else:
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 268.24994754834097 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:55:21) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))

if(H>0 and h>0 and r >0):
	if(h<r):
		v=(1/3)*pi*h**2*(3*r-h)
	
	elif(h<h-r):
		v=(2/3)*pi*r**3+pi*r**2*(h-r)
	
	elif(h<H):
		v=(4/5)*pi**5+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
	print("Entradas:", H, ",", h, ",", r)
	print("Volume:", v,"litros")
	
else:
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 268.24994754834097 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:55:51) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))

if(H>0 and h>0 and r >0):
	if(h<r):
		v=(1/3)*pi*h**2*(3*r-h)
	
	elif(h<h-r):
		v=(2/3)*pi*r**3+pi*r**2*(h-r)
	
	elif(h<H):
		v=(4/3)*pi**3+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
	print("Entradas:", H, ",", h, ",", r)
	print("Volume:", v,"litros")
	
else:
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 64.7759019605156 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:56:25) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))

if(H>0 and h>0 and r >0):
	if(h<r):
		v=(1/3)*pi*h**2*(3*r-h)-1
	
	elif(h<h-r):
		v=(2/3)*pi*r**3+pi*r**2*(h-r)-1
	
	elif(h<H):
		v=(4/3)*pi**3+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)-1
	print("Entradas:", H, ",", h, ",", r)
	print("Volume:", v,"litros")
	
else:
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 63.7759019605156 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:58:33) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))

if(H>0 and h>0 and r >0):
	if(h<r):
		v=(1/3)*pi*h**2*(3*r-h)
		print("Entradas:", H, ",", h, ",", r)
		print("Volume:", v,"litros")
	elif(h<h-r):
		v=(2/3)*pi*r**3+pi*r**2*(h-r)
		print("Entradas:", H, ",", h, ",", r)
		print("Volume:", v,"litros")
	elif(h<H):
		v=(4/3)*pi**3+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
		print("Entradas:", H, ",", h, ",", r)
		print("Volume:", v,"litros")
	
else:
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
-- EXECUTION TIME:
0.161505
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 64.7759019605156 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:

-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 234.57225146803788 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:59:13) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))

if(H>0 and h>0 and r >0):
	v=-1
	if(h<r):
		v=(1/3)*pi*h**2*(3*r-h)
		print("Entradas:", H, ",", h, ",", r)
		print("Volume:", v,"litros")
	elif(h<h-r):
		v=(2/3)*pi*r**3+pi*r**2*(h-r)
		print("Entradas:", H, ",", h, ",", r)
		print("Volume:", v,"litros")
	elif(h<H):
		v=(4/3)*pi**3+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
		print("Entradas:", H, ",", h, ",", r)
		print("Volume:", v,"litros")
	
else:
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 64.7759019605156 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:00:30) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))

if(H>0 and h>0 and r >0):
	v=-1
	if(h<r):
		v=(1/3)*pi*h**2*(3*r-h)
		print("Entradas:", H, ",", h, ",", r)
		print("Volume:", round(v,3),"litros")
	elif(h<h-r):
		v=(2/3)*pi*r**3+pi*r**2*(h-r)
		print("Entradas:", H, ",", h, ",", r)
		print("Volume:", round(v,3),"litros")
	elif(h<H):
		v=(4/3)*pi**3+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
		print("Entradas:", H, ",", h, ",", r)
		print("Volume:", round(v,3),"litros")
	
else:
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 64.776 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 18:00:40) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))

if(H>0 and h>0 and r >0):
	v=-1
	if(h<r):
		v=(1/3)*pi*h**2*(3*r-h)
		print("Entradas:", H, ",", h, ",", r)
		print("Volume:", round(v,3),"litros")
	elif(h<h-r):
		v=(2/3)*pi*r**3+pi*r**2*(h-r)
		print("Entradas:", H, ",", h, ",", r)
		print("Volume:", round(v,3),"litros")
	elif(h<H):
		v=(4/3)*pi**3+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
		print("Entradas:", H, ",", h, ",", r)
		print("Volume:", round(v,3),"litros")
	
else:
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
-- EXECUTION TIME:
0.175255
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 64.776 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:

-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 234.572 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:00:49) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))

if(H>0 and h>0 and r >0):
	v=-1
	if(h<r):
		v=(1/3)*pi*h**2*(3*r-h)
		print("Entradas:", H, ",", h, ",", r)
		print("Volume:", round(v,3),"litros")
	elif(h<h-r):
		v=(2/3)*pi*r**3+pi*r**2*(h-r)
		print("Entradas:", H, ",", h, ",", r)
		print("Volume:", round(v,3),"litros")
	elif(h<H):
		v=(4/3)*pi**3+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
		print("Entradas:", H, ",", h, ",", r)
		print("Volume:", round(v,3),"litros")
	
else:
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 64.776 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 18:04:09) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))

if(H>0 and h>0 and r >0):
	v=-1
	if(h<r):
		v=(1/3)*pi*h**2*(3*r-h)
		
	elif(h<h-r):
		v=(2/3)*pi*r**3+pi*r**2*(h-r)
		
	elif(h<H):
		v=(4/3)*pi**3+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
	print("Entradas:", H, ",", h, ",", r)
	print("Volume:", round(v,3),"litros")
	
else:
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
-- EXECUTION TIME:
0.147197
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 64.776 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Volume: -1 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 234.572 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:04:09) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))

if(H>0 and h>0 and r >0):
	v=-1
	if(h<r):
		v=(1/3)*pi*h**2*(3*r-h)
		
	elif(h<h-r):
		v=(2/3)*pi*r**3+pi*r**2*(h-r)
		
	elif(h<H):
		v=(4/3)*pi**3+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
	print("Entradas:", H, ",", h, ",", r)
	print("Volume:", round(v,3),"litros")
	
else:
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 64.776 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:06:05) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))

if(H>0 and h>0 and r >0):
	if(h<r):
		v=(1/3)*pi*h**2*(3*r-h)
		
	elif(h<h-r):
		v=(2/3)*pi*r**3+pi*r**2*(h-r)
		
	elif(h<H):
		v=(4/3)*pi*r**3+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
	print("Entradas:", H, ",", h, ",", r)
	print("Volume:", round(v,3),"litros")
	
else:
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 74.399 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:06:28) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))

if(H>0 and h>0 and r >0):
	if(h<r):
		v=(1/3)*pi*h**2*(3*r-h)
		
	elif(h<h-r):
		v=(2/3)*pi*r**3+pi*r**2*(h-r)
		
	elif(h<H):
		v=(4/3)*pi*r**3+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
	print("Entradas:", H, ",", h, ",", r)
	print("Volume:", round(v,3),"litros")
	
else:
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 74.399 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:06:54) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))

if(H<0 and h<0 and r<0):
	if(h<r):
		v=(1/3)*pi*h**2*(3*r-h)
		
	elif(h<h-r):
		v=(2/3)*pi*r**3+pi*r**2*(h-r)
		
	elif(h<H):
		v=(4/3)*pi*r**3+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
	print("Entradas:", H, ",", h, ",", r)
	print("Volume:", round(v,3),"litros")
	
else:
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Entradas invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:06:58) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))

if(H<0 and h<0 and r<0):
	if(h<r):
		v=(1/3)*pi*h**2*(3*r-h)
		
	elif(h<h-r):
		v=(2/3)*pi*r**3+pi*r**2*(h-r)
		
	elif(h<H):
		v=(4/3)*pi*r**3+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
	print("Entradas:", H, ",", h, ",", r)
	print("Volume:", round(v,3),"litros")
	
else:
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Entradas invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:19:58) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))

if(H<0 or h<0 or r<0):
	v="Entradas invalidas"
	print("Entradas:", H, ",", h, ",", r)
	print(v)
	
elif(h<r):
	v=(1/3)*pi*h**2*(3*r-h)
elif(h<h-r):
	v=(2/3)*pi*r**3+pi*r**2*(h-r)
elif(h<=H):
	v=(4/3)*pi*r**3+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
print("Entradas:", H, ",", h, ",", r)
print("Volume:", round(v,3),"litros")
else:
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 24
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:22:32) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))
print("Entradas:", H, ",", h, ",", r)
if(H<0 or h<0 or r<0):
	v="Entradas invalidas"
elif(h<r):
	v=(1/3)*pi*h**2*(3*r-h)
elif(h<h-r):
	v=(2/3)*pi*r**3+pi*r**2*(h-r)
elif(h<=H):
	v=(4/3)*pi*r**3+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
else:
	v="Entradas invalidas"
print("Volume:", v,"litros")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 74.39921014175187 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:22:47) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))
print("Entradas:", H, ",", h, ",", r)
if(H<0 or h<0 or r<0):
	v="Entradas invalidas"
elif(h<r):
	v=(1/3)*pi*h**2*(3*r-h)
elif(h<h-r):
	v=(2/3)*pi*r**3+pi*r**2*(h-r)
elif(h<=H):
	v=(4/3)*pi*r**3+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
else:
	v="Entradas invalidas"
print("Volume:", round(v,3),"litros")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 74.399 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:23:03) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))
print("Entradas:", H, ",", h, ",", r)
if(H<0 or h<0 or r<0):
	v="Entradas invalidas"
elif(h<r):
	v=(1/3)*pi*h**2*(3*r-h)
elif(h<h-r):
	v=(2/3)*pi*r**3+pi*r**2*(h-r)
elif(h<=H):
	v=(4/3)*pi*r**3+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
else:
	v="Entradas invalidas"
print("Volume:", round(v,3),"litros")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 74.399 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:25:51) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))
print("Entradas:", H, ",", h, ",", r)
if(H<0 or h<0 or r<0 and H>h and H>2*r):
	v="Entradas invalidas"
elif(h<r):
	v=(1/3)*pi*h**2*(3*r-h)
elif(h<h-r):
	v=(2/3)*pi*r**3+pi*r**2*(h-r)
elif(h<=H):
	v=(4/3)*pi*r**3+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
else:
	v="Entradas invalidas"
print("Volume:", round(v,3),"litros")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 74.399 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:25:56) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))
print("Entradas:", H, ",", h, ",", r)
if(H<0 or h<0 or r<0 and H>h and H>2*r):
	v="Entradas invalidas"
elif(h<r):
	v=(1/3)*pi*h**2*(3*r-h)
elif(h<h-r):
	v=(2/3)*pi*r**3+pi*r**2*(h-r)
elif(h<=H):
	v=(4/3)*pi*r**3+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
else:
	v="Entradas invalidas"
print("Volume:", round(v,3),"litros")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 74.399 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:26:03) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))
print("Entradas:", H, ",", h, ",", r)
if(H<0 or h<0 or r<0 and H>h and H>2*r):
	v="Entradas invalidas"
elif(h<r):
	v=(1/3)*pi*h**2*(3*r-h)
elif(h<h-r):
	v=(2/3)*pi*r**3+pi*r**2*(h-r)
elif(h<=H):
	v=(4/3)*pi*r**3+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
else:
	v="Entradas invalidas"
print("Volume:", round(v,3),"litros")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 74.399 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:26:10) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))
print("Entradas:", H, ",", h, ",", r)
if(H<0 or h<0 or r<0 and H>h and H>2*r):
	v="Entradas invalidas"
elif(h<r):
	v=(1/3)*pi*h**2*(3*r-h)
elif(h<h-r):
	v=(2/3)*pi*r**3+pi*r**2*(h-r)
elif(h<=H):
	v=(4/3)*pi*r**3+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
else:
	v="Entradas invalidas"
print("Volume:", round(v,3),"litros")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 74.399 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:27:13) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))
print("Entradas:", H, ",", h, ",", r)
if(H<0 or h<0 or r<0 and H>h and H>2*r):
	v="Entradas invalidas"
	if(h<r):
		v=(1/3)*pi*h**2*(3*r-h)
	elif(h<h-r):
		v=(2/3)*pi*r**3+pi*r**2*(h-r)
	elif(h<=H):
		v=(4/3)*pi*r**3+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
	print("Volume:", round(v,3),"litros")
else:
	v="Entradas invalidas"
print(v)

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Entradas invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:27:19) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))
print("Entradas:", H, ",", h, ",", r)
if(H<0 or h<0 or r<0 and H>h and H>2*r):
	v="Entradas invalidas"
	if(h<r):
		v=(1/3)*pi*h**2*(3*r-h)
	elif(h<h-r):
		v=(2/3)*pi*r**3+pi*r**2*(h-r)
	elif(h<=H):
		v=(4/3)*pi*r**3+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
	print("Volume:", round(v,3),"litros")
else:
	v="Entradas invalidas"
print(v)

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Entradas invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:27:24) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))
print("Entradas:", H, ",", h, ",", r)
if(H<0 or h<0 or r<0 and H>h and H>2*r):
	v="Entradas invalidas"
	if(h<r):
		v=(1/3)*pi*h**2*(3*r-h)
	elif(h<h-r):
		v=(2/3)*pi*r**3+pi*r**2*(h-r)
	elif(h<=H):
		v=(4/3)*pi*r**3+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
	print("Volume:", round(v,3),"litros")
else:
	v="Entradas invalidas"
print(v)

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Entradas invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:27:29) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))
print("Entradas:", H, ",", h, ",", r)
if(H<0 or h<0 or r<0 and H>h and H>2*r):
	v="Entradas invalidas"
	if(h<r):
		v=(1/3)*pi*h**2*(3*r-h)
	elif(h<h-r):
		v=(2/3)*pi*r**3+pi*r**2*(h-r)
	elif(h<=H):
		v=(4/3)*pi*r**3+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
	print("Volume:", round(v,3),"litros")
else:
	v="Entradas invalidas"
print(v)

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Entradas invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:27:32) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))
print("Entradas:", H, ",", h, ",", r)
if(H<0 or h<0 or r<0 and H>h and H>2*r):
	v="Entradas invalidas"
	if(h<r):
		v=(1/3)*pi*h**2*(3*r-h)
	elif(h<h-r):
		v=(2/3)*pi*r**3+pi*r**2*(h-r)
	elif(h<=H):
		v=(4/3)*pi*r**3+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
	print("Volume:", round(v,3),"litros")
else:
	v="Entradas invalidas"
print(v)

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Entradas invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:27:38) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))
print("Entradas:", H, ",", h, ",", r)
if(H<0 or h<0 or r<0 and H>h and H>2*r):
	v="Entradas invalidas"
	if(h<r):
		v=(1/3)*pi*h**2*(3*r-h)
	elif(h<h-r):
		v=(2/3)*pi*r**3+pi*r**2*(h-r)
	elif(h<=H):
		v=(4/3)*pi*r**3+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
	print("Volume:", round(v,3),"litros")
else:
	v="Entradas invalidas"
print(v)

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Entradas invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:27:45) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))
print("Entradas:", H, ",", h, ",", r)
if(H<0 or h<0 or r<0 and H>h and H>2*r):
	v="Entradas invalidas"
	if(h<r):
		v=(1/3)*pi*h**2*(3*r-h)
	elif(h<h-r):
		v=(2/3)*pi*r**3+pi*r**2*(h-r)
	elif(h<=H):
		v=(4/3)*pi*r**3+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
	print("Volume:", round(v,3),"litros")
else:
	v="Entradas invalidas"
print(v)

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Entradas invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:27:52) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))
print("Entradas:", H, ",", h, ",", r)
if(H<0 or h<0 or r<0 and H>h and H>2*r):
	v="Entradas invalidas"
	if(h<r):
		v=(1/3)*pi*h**2*(3*r-h)
	elif(h<h-r):
		v=(2/3)*pi*r**3+pi*r**2*(h-r)
	elif(h<=H):
		v=(4/3)*pi*r**3+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
	print("Volume:", round(v,3),"litros")
else:
	v="Entradas invalidas"
print(v)

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Entradas invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:28:13) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))
print("Entradas:", H, ",", h, ",", r)
if(H>0 or h>0 or r>0 and H>h and H>2*r):
	if(h<r):
		v=(1/3)*pi*h**2*(3*r-h)
	elif(h<h-r):
		v=(2/3)*pi*r**3+pi*r**2*(h-r)
	elif(h<=H):
		v=(4/3)*pi*r**3+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
	print("Volume:", round(v,3),"litros")
else:
	v="Entradas invalidas"
print(v)

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 74.399 litros
74.39921014175187
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:28:20) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))
print("Entradas:", H, ",", h, ",", r)
if(H>0 or h>0 or r>0 and H>h and H>2*r):
	if(h<r):
		v=(1/3)*pi*h**2*(3*r-h)
	elif(h<h-r):
		v=(2/3)*pi*r**3+pi*r**2*(h-r)
	elif(h<=H):
		v=(4/3)*pi*r**3+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
	print("Volume:", round(v,3),"litros")
else:
	v="Entradas invalidas"
print(v)

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 74.399 litros
74.39921014175187
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:28:42) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))
print("Entradas:", H, ",", h, ",", r)
if(H>0 and h>0 and r>0 and H>h and H>2*r):
	if(h<r):
		v=(1/3)*pi*h**2*(3*r-h)
	elif(h<h-r):
		v=(2/3)*pi*r**3+pi*r**2*(h-r)
	elif(h<=H):
		v=(4/3)*pi*r**3+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
	print("Volume:", round(v,3),"litros")
else:
	v="Entradas invalidas"
print(v)

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 74.399 litros
74.39921014175187
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:28:47) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))
print("Entradas:", H, ",", h, ",", r)
if(H>0 and h>0 and r>0 and H>h and H>2*r):
	if(h<r):
		v=(1/3)*pi*h**2*(3*r-h)
	elif(h<h-r):
		v=(2/3)*pi*r**3+pi*r**2*(h-r)
	elif(h<=H):
		v=(4/3)*pi*r**3+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
	print("Volume:", round(v,3),"litros")
else:
	v="Entradas invalidas"
print(v)

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 74.399 litros
74.39921014175187
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:28:52) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))
print("Entradas:", H, ",", h, ",", r)
if(H>0 and h>0 and r>0 and H>h and H>2*r):
	if(h<r):
		v=(1/3)*pi*h**2*(3*r-h)
	elif(h<h-r):
		v=(2/3)*pi*r**3+pi*r**2*(h-r)
	elif(h<=H):
		v=(4/3)*pi*r**3+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
	print("Volume:", round(v,3),"litros")
else:
	v="Entradas invalidas"
print(v)

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 74.399 litros
74.39921014175187
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:28:58) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))
print("Entradas:", H, ",", h, ",", r)
if(H>0 and h>0 and r>0 and H>h and H>2*r):
	if(h<r):
		v=(1/3)*pi*h**2*(3*r-h)
	elif(h<h-r):
		v=(2/3)*pi*r**3+pi*r**2*(h-r)
	elif(h<=H):
		v=(4/3)*pi*r**3+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
	print("Volume:", round(v,3),"litros")
else:
	v="Entradas invalidas"
print(v)

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 74.399 litros
74.39921014175187
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:29:16) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))
print("Entradas:", H, ",", h, ",", r)
if(H>0 and h>0 and r>0 and H>h and H>2*r):
	if(h<r):
		v=(1/3)*pi*h**2*(3*r-h)
	elif(h<h-r):
		v=(2/3)*pi*r**3+pi*r**2*(h-r)
	elif(h<=H):
		v=(4/3)*pi*r**3+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
	print("Volume:", round(v,3),"litros")
else:
	v="Entradas invalidas"
	print(v)

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 74.399 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:32:07) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))
print("Entradas:", H, ",", h, ",", r)
if(H>0 and h>0 and r>0 and H>h and H>2*r):
	if(h<r):
		v1=(1/3)*pi*h**2*(3*r-h)
		v=v1*1000
	elif(h<h-r):
		v1=(2/3)*pi*r**3+pi*r**2*(h-r)
		v=v1*1000
	elif(h<=H):
		v1=(4/3)*pi*r**3+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
		v=v1*1000
	print("Volume:", round(v,3),"litros")
else:
	v="Entradas invalidas"
	print(v)

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 74399.21 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:36:42) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))
print("Entradas:", H, ",", h, ",", r)
if(H>0 and h>0 and r>0 and H>h and H>2*r):
	if(h<r):
		v1=(1/3)*pi*h**2*(r-h)
		v=v1*1000
	elif(h<h-r):
		v1=(2/3)*pi*r**3+pi*r**2*(h-r)
		v=v1*1000
	elif(h<=H):
		v1=(4/3)*pi*r**3+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
		v=v1*1000
	print("Volume:", round(v,3),"litros")
else:
	v="Entradas invalidas"
	print(v)

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 74399.21 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:36:52) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))
print("Entradas:", H, ",", h, ",", r)
if(H>0 and h>0 and r>0 and H>h and H>2*r):
	if(h<r):
		v1=(1/3)*pi*h**2*(r-h)
		v=v1*1000
	elif(h<h-r):
		v1=(2/3)*pi*r**3+pi*r**2*(h-r)
		v=v1*1000
	elif(h<=H):
		v1=(4/3)*pi*r**3+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
		v=v1*1000
	print("Volume:", round(v,3),"litros")
else:
	v="Entradas invalidas"
	print(v)

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 74399.21 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:37:12) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))
print("Entradas:", H, ",", h, ",", r)
if(H>0 and h>0 and r>0 and H>h and H>2*r):
	if(h<r):
		v1=(1/3)*pi*h**2*(r-h)
		v=v1*1000
	elif(h<h-r):
		v1=(2/3)*pi*r**3+pi*r**2*(3*h-r)
		v=v1*1000
	elif(h<=H):
		v1=(4/3)*pi*r**3+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
		v=v1*1000
	print("Volume:", round(v,3),"litros")
else:
	v="Entradas invalidas"
	print(v)

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 74399.21 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:39:57) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))
print("Entradas:", H, ",", h, ",", r)
if(H>0 and h>0 and r>0 and H>h and H>2*r):
	if(h<r):
		v1=(1/3)*pi*h**2*(3*r-h)
		v=v1*1000
	elif(h<H-r):
		v1=(2/3)*pi*r**3+pi*r**2*(h-r)
		v=v1*1000
	elif(h<=H):
		v1=(4/3)*pi*r**3+pi**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
		v=v1*1000
	print("Volume:", round(v,3),"litros")
else:
	v="Entradas invalidas"
	print(v)

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:41:43) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))
print("Entradas:", H, ",", h, ",", r)
if(H>0 and h>0 and r>0 and H>h and H>2*r):
	if(h<r):
		v1=(1/3)*pi*h**2*(3*r-h)
		v=v1*1000
	elif(h<H-r):
		v1=(2/3)*pi*r**3+pi*r**2*(h-r)
		v=v1*1000
	elif(h<=H):
		v1=(4/3)*pi*r**3+pi*r**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
		v=v1*1000
	print("Volume:", round(v,3),"litros")
else:
	v="Entradas invalidas"
	print(v)

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 18:41:53) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio dos bojos semiesfericos inferior e superior:"))
print("Entradas:", H, ",", h, ",", r)
if(H>0 and h>0 and r>0 and H>h and H>2*r):
	if(h<r):
		v1=(1/3)*pi*h**2*(3*r-h)
		v=v1*1000
	elif(h<H-r):
		v1=(2/3)*pi*r**3+pi*r**2*(h-r)
		v=v1*1000
	elif(h<=H):
		v1=(4/3)*pi*r**3+pi*r**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
		v=v1*1000
	print("Volume:", round(v,3),"litros")
else:
	v="Entradas invalidas"
	print(v)

-- EXECUTION TIME:
0.189204
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
