== TEST (2019-03-26 16:50:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=int(input("a"))
y=int(input("b"))
z=int(input("c"))
print(min(x,y,z))
print(max(x,y,z))
-- OUTPUT:
-2
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 16:50:40) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=int(input("a"))
y=int(input("b"))
z=int(input("c"))
print(min(x,y,z))
print(max(x,y,z))
-- EXECUTION TIME:
0.201539
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:51:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=int(input("a"))
y=int(input("b"))
z=int(input("c"))
print(min(x,y,z))
print(max(x,y,z))
-- OUTPUT:
-2
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:55:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=int(input("a"))
y=int(input("b"))
z=int(input("c"))
v=((a+b+c)-l-u)
l=min(x,y,z)
u=max(x,y,z)
print(l)
print
print(u)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    v=((a+b+c)-l-u)
NameError: name 'a' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:56:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=int(input("a"))
y=int(input("b"))
z=int(input("c"))
v=((x+y+z)-l-u)
l=min(x,y,z)
u=max(x,y,z)
print(l)
print
print(u)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    v=((x+y+z)-l-u)
NameError: name 'l' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:57:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=int(input("a"))
y=int(input("b"))
z=int(input("c"))
v=((x+y+z)-y-x)
l=min(x,y,z)
u=max(x,y,z)
print(l)
print
print(u)
-- OUTPUT:
-2
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:57:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=int(input("a"))
y=int(input("b"))
z=int(input("c"))
v=((x+y+z)-y-x)
l=min(x,y,z)
u=max(x,y,z)
print(l)
print(v)
print(u)
-- OUTPUT:
-2
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:57:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=int(input("a"))
y=int(input("b"))
z=int(input("c"))
v=((x+y+z)-y-x)
l=min(x,y,z)
u=max(x,y,z)
print(l)
print(v)
print(u)
-- OUTPUT:
-2
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 16:58:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=int(input("a"))
y=int(input("b"))
z=int(input("c"))
v=((x+y+z)-y-x)
l=min(x,y,z)
u=max(x,y,z)
print(l)
print(v)
print(u)
-- EXECUTION TIME:
0.18782
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
0
10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
