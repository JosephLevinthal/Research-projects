== TEST (2019-04-13 21:11:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
α = float(input("digite o angulo α: "))
D = float(input("digite a distancia horizontal em metros: "))

Vº = v**2
-- OUTPUT:
acesso liberado
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:12:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = float(input("digite o angulo α: "))
D = float(input("digite a distancia horizontal em metros: "))

Vº = v**2
-- OUTPUT:
acesso liberado
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:12:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = float(input("digite o angulo a: "))
D = float(input("digite a distancia horizontal em metros: "))

Vº = v**2
-- OUTPUT:
acesso liberado
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:12:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = float(input("digite o angulo a: "))
D = float(input("digite a distancia horizontal em metros: "))

Vº = v**2
print(Vº)
-- OUTPUT:
110.25
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:12:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = float(input("digite o angulo a: "))
D = float(input("digite a distancia horizontal em metros: "))

V° = v**2
print(V°)
-- ERROR:
File "XXXX", line 9
    V° = v**2
     ^
SyntaxError: invalid character in identifier
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:13:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = float(input("digite o angulo a: "))
D = float(input("digite a distancia horizontal em metros: "))

V = v**2
print(V)
-- OUTPUT:
110.25
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:16:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(input("digite o angulo a: "))
D = float(input("digite a distancia horizontal em metros: "))

g = 9.8

V = v**2
A = sin(2*a)

y = V*A

print(y)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    a = radians(input())
TypeError: must be real number, not str
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:16:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = float(radians(input("digite o angulo a: ")))
D = float(input("digite a distancia horizontal em metros: "))

g = 9.8

V = v**2
A = sin(2*a)

y = V*A

print(y)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    a = float(radians(input()))
TypeError: must be real number, not str
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:17:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float((input("digite o angulo a: ")))
D = float(input("digite a distancia horizontal em metros: "))

g = 9.8

V = v**2
A = sin(2*a)

y = V*A

print(y)

-- ERROR:
File "XXXX", line 7
    D = float(input())
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:17:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
d = float(input("digite a distancia horizontal em metros: "))

g = 9.8

V = v**2
A = sin(2*a)

y = V*A

print(y)

-- OUTPUT:
110.23320839099213
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:18:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
d = float(input("digite a distancia horizontal em metros: "))

g = 9.8

V = v**2
A = sin(2*a)

y = V*A
u = y/g

print(u)

-- OUTPUT:
11.2482865705094
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:19:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
D = float(input("digite a distancia horizontal em metros: "))

g = 9.8

V = v**2
A = sin(2*a)

y = V*A
R = y/g

f = abs(D - R)

print(f)

-- OUTPUT:
0.05171342949060076
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:21:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
D = float(input("digite a distancia horizontal em metros: "))

g = 9.8

V = v**2
A = sin(2*a)

y = V*A
R = y/g

f = abs(D - R)

if D == 20 or D==19.9:
	print("sim")
else:
	print("nao")

-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:22:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
D = float(input("digite a distancia horizontal em metros: "))

g = 9.8

V = v**2
A = sin(2*a)

y = V*A
R = y/g

f = abs(D - R)

if D >=19.9 or D<=20.1:
	print("sim")
else:
	print("nao")

-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:22:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
D = float(input("digite a distancia horizontal em metros: "))

g = 9.8

V = v**2
A = sin(2*a)

y = V*A
R = y/g

f = abs(D - R)

if D >= 19.9 or D <=20.1:
	print("sim")
else:
	print("nao")

-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:25:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
D = float(input("digite a distancia horizontal em metros: "))

g = 9.8

V = v**2
A = sin(2*a)

y = V*A
R = y/g
j = D-R

f = abs(j)
print(f)
if  f == f:
	print("sim")
else:
	print("nao")

-- OUTPUT:
0.05171342949060076
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:27:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
D = float(input("digite a distancia horizontal em metros: "))

g = 9.8

V = v**2
A = sin(2*a)

y = V*A
R = y/g
j = D-R

f = abs(j)
print(f)
if  f==19.9 or f==20.1:
	print("sim")
else:
	print("nao")

-- OUTPUT:
0.05171342949060076
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 21:27:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
D = float(input("digite a distancia horizontal em metros: "))

g = 9.8

V = v**2
A = sin(2*a)

y = V*A
R = y/g
j = D-R

f = abs(j)
print(f)
if  f==19.9 or f==20.1:
	print("sim")
else:
	print("nao")

-- EXECUTION TIME:
0.197105
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
0.05171342949060076
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
1.0864224922636083
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:30:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
D = float(input("digite a distancia horizontal em metros: "))

g = 9.8

R = (((v)**2) * sin(2*a))/g

j =(D - R)

f = abs(j)
print(f)
if  f==19.9 or f==20.1:
	print("sim")
else:
	print("nao")

-- OUTPUT:
0.05171342949060076
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 21:30:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
D = float(input("digite a distancia horizontal em metros: "))

g = 9.8

R = (((v)**2) * sin(2*a))/g

j =(D - R)

f = abs(j)

if  f==19.9 or f==20.1:
	print("sim")
else:
	print("nao")

-- EXECUTION TIME:
0.152649
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:30:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
D = float(input("digite a distancia horizontal em metros: "))

g = 9.8

R = (((v)**2) * sin(2*a))/g

j =(D - R)

f = abs(j)

if  f==19.9 or f==20.1:
	print("sim")
else:
	print("nao")

-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:32:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
D = float(input("digite a distancia horizontal em metros: "))

g = 9.8

R = (((v)**2) * sin(2*a))/g

j =(D - R)

l = float(9)

f = abs(j - l)

print(f)

if  f==19.9 or f==20.1:
	print("sim")
else:
	print("nao")

-- OUTPUT:
8.9482865705094
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:32:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
D = float(input("digite a distancia horizontal em metros: "))

g = 9.8

R = (((v)**2) * sin(2*a))/g

j =(D - R)

l = float(9)

f = abs(j - l)

print(f)

if  f==19.9 or f==20.1:
	print("sim")
else:
	print("nao")

-- OUTPUT:
8.9482865705094
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:34:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
d = float(input("digite a distancia horizontal em metros: "))

D = d/1000

g = 9.8

R = (((v)**2) * sin(2*a))/g

j =(D - R)

l = float(9)

f = abs(j)

print(f)

if  f==19.9 or f==20.1:
	print("sim")
else:
	print("nao")

-- OUTPUT:
11.2369865705094
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:38:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
d = float(input("digite a distancia horizontal em metros: "))

D = d/1000

g = 9.8

r = (((v)**2) * sin(2*a))/g

j =(D - r)

x = r * m

p = abs(D - x)
print(p)


f = abs(j)

print(f)

if  f==19.9 or f==20.1:
	print("sim")
else:
	print("nao")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 17, in <module>
    x = r * m
NameError: name 'm' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:38:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
d = float(input("digite a distancia horizontal em metros: "))

D = d/1000

g = 9.8

r = (((v)**2) * sin(2*a))/g

j =(D - r)

x = r * j

p = abs(D - x)
print(p)


f = abs(j)

print(f)

if  f==19.9 or f==20.1:
	print("sim")
else:
	print("nao")

-- OUTPUT:
126.40814513405536
11.2369865705094
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:43:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
d = float(input("digite a distancia horizontal em metros: "))

D = d/1000

g = 9.8

R = (((v)**2) * sin(2*a))/g

e = abs(D - R)



if  e==19.9 or e==20.1:
	print("sim")
else:
	print("nao")

-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 21:43:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
d = float(input("digite a distancia horizontal em metros: "))

D = d/1000

g = 9.8

R = (((v)**2) * sin(2*a))/g

e = abs(D - R)



if  e==19.9 or e==20.1:
	print("sim")
else:
	print("nao")

-- EXECUTION TIME:
0.147024
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:43:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
d = float(input("digite a distancia horizontal em metros: "))

D = d/1000

g = 9.8

R = (((v)**2) * sin(2*a))/g

e = abs(D - R)



if  e==19.9 or e==20.1:
	print("sim")
else:
	print("nao")

-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 21:43:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
d = float(input("digite a distancia horizontal em metros: "))

D = d/1000

g = 9.8

R = (((v)**2) * sin(2*a))/g

e = abs(D - R)



if  e==19.9 or e==20.1:
	print("sim")
else:
	print("nao")

-- EXECUTION TIME:
0.169441
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 21:43:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
d = float(input("digite a distancia horizontal em metros: "))

D = d/1000

g = 9.8

R = (((v)**2) * sin(2*a))/g

e = abs(D - R)

if  e==19.9 or e==20.1:
	print("sim")
else:
	print("nao")

-- EXECUTION TIME:
0.153688
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
digite a velocidade inicial em metros: digite o angulo a: digite a distancia horizontal em metros: nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 21:43:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
d = float(input("digite a distancia horizontal em metros: "))

D = d/1000

g = 9.8

R = (((v)**2) * sin(2*a))/g

e = abs(D - R)

if  e==19.9 or e==20.1:
	print("sim")
else:
	print("nao")

-- EXECUTION TIME:
0.191357
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:44:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
d = float(input("digite a distancia horizontal em metros: "))

D = d/1000

g = 9.8

R = (((v)**2) * sin(2*a))/g

e = abs(D - R)

e < 0.1

if  e==19.9 or e==20.1:
	print("sim")
else:
	print("nao")

-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 21:44:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
d = float(input("digite a distancia horizontal em metros: "))

D = d/1000

g = 9.8

R = (((v)**2) * sin(2*a))/g

e = abs(D - R)

e < 0.1

if  e==19.9 or e==20.1:
	print("sim")
else:
	print("nao")

-- EXECUTION TIME:
0.148003
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:44:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
d = float(input("digite a distancia horizontal em metros: "))

D = d/1000

g = 9.8

R = (((v)**2) * sin(2*a))/g

e = abs(D - R)

e < 0.1

if  e==19.9 or e==20.1:
	print("sim")
else:
	print("nao")

-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:44:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
d = float(input("digite a distancia horizontal em metros: "))

D = d/1000

g = 9.8

R = (((v)**2) * sin(2*a))/g

e = abs(D - R)

e < 0.1

if  e==19.9 or e==20.1:
	print("sim")
else:
	print("nao")

-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:44:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
d = float(input("digite a distancia horizontal em metros: "))

D = d/1000

g = 9.8

R = (((v)**2) * sin(2*a))/g

e = abs(D - R)

e < 0.1

print(e)
if  e==19.9 or e==20.1:
	print("sim")
else:
	print("nao")

-- OUTPUT:
11.2369865705094
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:44:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
d = float(input("digite a distancia horizontal em metros: "))

D = d/1000

g = 9.8

R = (((v)**2) * sin(2*a))/g

e = abs(D - R)


print(e)
if  e==19.9 or e==20.1:
	print("sim")
else:
	print("nao")

-- OUTPUT:
11.2369865705094
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:45:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
d = float(input("digite a distancia horizontal em metros: "))

D = d/1000

g = 9.8

R = (((v)**2) * sin(2*a))/g

e = abs(D - R)


print(e)
if  e==19.9 or e==20.1:
	print("sim")
else:
	print("nao")

-- OUTPUT:
11.2369865705094
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:45:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
d = float(input("digite a distancia horizontal em metros: "))

D = d/100

g = 9.8

R = (((v)**2) * sin(2*a))/g

e = abs(D - R)


print(e)
if  e==19.9 or e==20.1:
	print("sim")
else:
	print("nao")

-- OUTPUT:
11.1352865705094
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 21:45:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
d = float(input("digite a distancia horizontal em metros: "))

D = d/100

g = 9.8

R = (((v)**2) * sin(2*a))/g

e = abs(D - R)


print(e)
if  e==19.9 or e==20.1:
	print("sim")
else:
	print("nao")

-- EXECUTION TIME:
0.156353
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
11.1352865705094
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
49.403577507736394
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:45:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
D = float(input("digite a distancia horizontal em metros: "))

g = 9.8

R = (((v)**2) * sin(2*a))/g

e = abs(D - R)


print(e)
if  e==19.9 or e==20.1:
	print("sim")
else:
	print("nao")

-- OUTPUT:
0.05171342949060076
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 21:46:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
D = float(input("digite a distancia horizontal em metros: "))

g = 9.8

R = (((v)**2) * sin(2*a))/g

e = abs(D - R)


print(e)
if  e==19.9 or e==20.1:
	print("sim")
else:
	print("nao")

-- EXECUTION TIME:
0.162214
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
0.05171342949060076
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
1.0864224922636083
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:46:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
D = float(input("digite a distancia horizontal em metros: "))

g = 9.8

R = (((v)**2) * sin(2*a))/g

e = abs(D - R)


print(e)
if  e==19.9 or e==20.1:
	print("sim")
else:
	print("nao")

-- OUTPUT:
0.05171342949060076
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 21:46:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
D = float(input("digite a distancia horizontal em metros: "))

g = 9.8

R = (((v)**2) * sin(2*a))/g

e = abs(D - R)

if  D==19.9 or D==20.1:
	print("sim")
else:
	print("nao")

-- EXECUTION TIME:
0.220889
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:46:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
D = float(input("digite a distancia horizontal em metros: "))

g = 9.8

R = (((v)**2) * sin(2*a))/g

e = abs(D - R)

if  D==19.9 or D==20.1:
	print("sim")
else:
	print("nao")

-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 21:48:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
D = float(input("digite a distancia horizontal em metros: "))

g = 9.8

R = (((v)**2) * sin(2*a))/g

e = abs(D - R)

if  R==19.9 or R==20.1:
	print("sim")
else:
	print("nao")

-- EXECUTION TIME:
0.137077
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:50:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
D = float(input("digite a distancia horizontal em metros: "))

V = v/1000
d = d/1000



g = 9.8


R = (((V)**2) * sin(2*a))/g

e = abs(D - R)

print(e)

if  R==19.9 or R==20.1:
	print("sim")
else:
	print("nao")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    d = d/1000
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:51:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
d = float(input("digite a distancia horizontal em metros: "))

V = v/1000
D = d/1000



g = 9.8


R = (((V)**2) * sin(2*a))/g

e = abs(D - R)

print(e)

if  R==19.9 or R==20.1:
	print("sim")
else:
	print("nao")

-- OUTPUT:
0.011288751713429492
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 21:51:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
d = float(input("digite a distancia horizontal em metros: "))

V = v/1000
D = d/1000



g = 9.8


R = (((V)**2) * sin(2*a))/g

e = abs(D - R)

print(e)

if  R==19.9 or R==20.1:
	print("sim")
else:
	print("nao")

-- EXECUTION TIME:
0.173752
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
0.011288751713429492
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
0.05095008642249226
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:51:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
d = float(input("digite a distancia horizontal em metros: "))

V = v/1000
D = d/1000



g = 9.8


R = (((V)**2) * sin(2*a))/g

e = abs(D - R)

print(e)

if  e==19.9 or e==20.1:
	print("sim")
else:
	print("nao")

-- OUTPUT:
0.011288751713429492
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 21:51:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
d = float(input("digite a distancia horizontal em metros: "))

V = v/1000
D = d/1000



g = 9.8


R = (((V)**2) * sin(2*a))/g

e = abs(D - R)

print(e)

if  e==19.9 or e==20.1:
	print("sim")
else:
	print("nao")

-- EXECUTION TIME:
0.131389
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
0.011288751713429492
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
0.05095008642249226
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 21:51:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
d = float(input("digite a distancia horizontal em metros: "))

V = v/1000
D = d/1000



g = 9.8


R = (((V)**2) * sin(2*a))/g

e = abs(D - R)

print(e)

if  e<0.1:
	print("sim")
else:
	print("nao")

-- EXECUTION TIME:
0.15102
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
0.011288751713429492
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
0.05095008642249226
sim
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:51:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
d = float(input("digite a distancia horizontal em metros: "))

V = v/1000
D = d/1000



g = 9.8


R = (((V)**2) * sin(2*a))/g

e = abs(D - R)

print(e)

if  e<0.1:
	print("sim")
else:
	print("nao")

-- OUTPUT:
0.011288751713429492
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 11:44:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
d = float(input("digite a distancia horizontal em metros: "))

g = 9.8

R = (((V)**2) * sin(2*a))/g

e = abs(D - R)

print(e)

if  e<0.1:
	print("sim")
else:
	print("nao")

-- EXECUTION TIME:
0.24788
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/1055/main.py", line 11, in <module>
    R = (((V)**2) * sin(2*a))/g
NameError: name 'V' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 11:47:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
d = float(input("digite a distancia horizontal em metros: "))

g = 9.8

R = ((V**2) * sin(2*a))/g

result = abs(D - R)

if  result < 0.1:
	print("sim")
else:
	print("nao")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    R = ((V**2) * sin(2*a))/g
NameError: name 'V' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 11:47:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
d = float(input("digite a distancia horizontal em metros: "))

g = 9.8

R = ((v**2) * sin(2*a))/g

result = abs(D - R)

if  result < 0.1:
	print("sim")
else:
	print("nao")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    result = abs(D - R)
NameError: name 'D' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 11:47:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
d = float(input("digite a distancia horizontal em metros: "))

g = 9.8

R = ((v**2) * sin(2*a))/g

result = abs(d - R)

if  result < 0.1:
	print("sim")
else:
	print("nao")

-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 11:47:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("digite a velocidade inicial em metros: "))
a = radians(float(input("digite o angulo a: ")))
d = float(input("digite a distancia horizontal em metros: "))

g = 9.8

R = ((v**2) * sin(2*a))/g

result = abs(d - R)

if  result < 0.1:
	print("sim")
else:
	print("nao")

-- EXECUTION TIME:
0.156751
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
