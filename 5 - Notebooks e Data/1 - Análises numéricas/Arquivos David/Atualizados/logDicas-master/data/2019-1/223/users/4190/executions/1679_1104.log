== TEST (2019-04-26 16:59:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input('Insira um valor para a: '))
b = float(input('Insira um valor para b: '))
c = float(input('Insira um valor para c: '))
d = float(input('Insira um valor para d: '))
print('Intervalo 1:', a, b)
print('Intervalo 2:', c, d)

if (b<a or d<c):
	print('Entradas invalidas')
elif (b==d or b==c or a==d or a==c):
	print('Ha intersecao')
else:
	print('Nao ha intersecao')

-- OUTPUT:
Intervalo 1: 1.0 2.0
Intervalo 2: 4.0 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:00:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input('Insira um valor para a: '))
b = float(input('Insira um valor para b: '))
c = float(input('Insira um valor para c: '))
d = float(input('Insira um valor para d: '))
print('Intervalo 1:', a, b)
print('Intervalo 2:', c, d)

if (b<a or d<c):
	print('Entradas invalidas')
elif (b==d or b==c or a==d or a==c):
	print('Ha intersecao')
else:
	print('Nao ha intersecao')

-- OUTPUT:
Intervalo 1: 1.0 2.0
Intervalo 2: 4.0 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:01:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input('Insira um valor para a: '))
b = float(input('Insira um valor para b: '))
c = float(input('Insira um valor para c: '))
d = float(input('Insira um valor para d: '))
print('Intervalo 1:', a,',' b)
print('Intervalo 2:', c,',' d)

if (b<a or d<c):
	print('Entradas invalidas')
elif (b==d or b==c or a==d or a==c):
	print('Ha intersecao')
else:
	print('Nao ha intersecao')

-- ERROR:
File "XXXX", line 8
    print('Intervalo 1:', a,',' b)
                                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:01:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input('Insira um valor para a: '))
b = float(input('Insira um valor para b: '))
c = float(input('Insira um valor para c: '))
d = float(input('Insira um valor para d: '))
print('Intervalo 1:', a,',', b)
print('Intervalo 2:', c,',', d)

if (b<a or d<c):
	print('Entradas invalidas')
elif (b==d or b==c or a==d or a==c):
	print('Ha intersecao')
else:
	print('Nao ha intersecao')

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:03:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input('Insira um valor para a: '))
b = float(input('Insira um valor para b: '))
c = float(input('Insira um valor para c: '))
d = float(input('Insira um valor para d: '))
print('Intervalo 1:', a,',', b)
print('Intervalo 2:', c,',', d)

if (b<a or d<c):
	print('Entradas invalidas')
elif (b==d or b==c or a==d or a==c):
	print('Ha intersecao')
else:
	print('Nao ha intersecao')

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 17:05:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input('Insira um valor para a: '))
b = float(input('Insira um valor para b: '))
c = float(input('Insira um valor para c: '))
d = float(input('Insira um valor para d: '))
print('Intervalo 1:', a,',', b)
print('Intervalo 2:', c,',', d)

if (b<a or d<c):
	print('Entradas invalidas')
elif (b==d or b==c or a==d or a==c):
	print('Ha intersecao')
else:
	print('Nao ha intersecao')

-- EXECUTION TIME:
0.148694
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:13:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input('Insira um valor para a: '))
b = float(input('Insira um valor para b: '))
c = float(input('Insira um valor para c: '))
d = float(input('Insira um valor para d: '))
print('Intervalo 1:', a,',', b)
print('Intervalo 2:', c,',', d)

if (b>a and d>c):
	if (b==d or b==c or a==d or a==c):
		print('Ha intersecao')
	else:
		print('Nao ha intersecao')
else:
	print('Entradas invalidas')

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:14:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input('Insira um valor para a: '))
b = float(input('Insira um valor para b: '))
c = float(input('Insira um valor para c: '))
d = float(input('Insira um valor para d: '))
print('Intervalo 1:', a,',', b)
print('Intervalo 2:', c,',', d)

if (b>a and d>c):
	if (b==d or b==c or a==d or a==c):
		print('Ha intersecao')
	else:
		print('Nao ha intersecao')
else:
	print('Entradas invalidas')

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 17:14:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input('Insira um valor para a: '))
b = float(input('Insira um valor para b: '))
c = float(input('Insira um valor para c: '))
d = float(input('Insira um valor para d: '))
print('Intervalo 1:', a,',', b)
print('Intervalo 2:', c,',', d)

if (b>a and d>c):
	if (b==d or b==c or a==d or a==c):
		print('Ha intersecao')
	else:
		print('Nao ha intersecao')
else:
	print('Entradas invalidas')

-- EXECUTION TIME:
0.13456
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 18:37:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input('Insira um valor para a: '))
b = float(input('Insira um valor para b: '))
c = float(input('Insira um valor para c: '))
d = float(input('Insira um valor para d: '))
print('Intervalo 1:', a,',', b)
print('Intervalo 2:', c,',', d)

if ((b>a) and (d>c)):
	if ((a==c) and (b==d)):
		print('Ha intersecao')
	else:
		print('Nao ha intersecao')
else:
	print('Entradas invalidas')

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 18:39:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input('Insira um valor para a: '))
b = float(input('Insira um valor para b: '))
c = float(input('Insira um valor para c: '))
d = float(input('Insira um valor para d: '))
print('Intervalo 1:', a,',', b)
print('Intervalo 2:', c,',', d)

if ((b>a) and (d>c)):
	if ((a==c) and (b==d)):
		print('Ha intersecao')
	else:
		print('Nao ha intersecao')
else:
	print('Entradas invalidas')

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 18:39:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input('Insira um valor para a: '))
b = float(input('Insira um valor para b: '))
c = float(input('Insira um valor para c: '))
d = float(input('Insira um valor para d: '))
print('Intervalo 1:', a,',', b)
print('Intervalo 2:', c,',', d)

if ((b>a) and (d>c)):
	if ((a==c) and (b==d)):
		print('Ha intersecao')
	else:
		print('Nao ha intersecao')
else:
	print('Entradas invalidas')

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 18:42:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input('Insira um valor para a: '))
b = float(input('Insira um valor para b: '))
c = float(input('Insira um valor para c: '))
d = float(input('Insira um valor para d: '))
print('Intervalo 1:', a,',', b)
print('Intervalo 2:', c,',', d)

if ((b>a) and (d>
-- ERROR:
File "XXXX", line 12
    
                     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 19:07:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input('Insira um valor para a: '))
b = float(input('Insira um valor para b: '))
c = float(input('Insira um valor para c: '))
d = float(input('Insira um valor para d: '))
print('Intervalo 1:', a,',', b)
print('Intervalo 2:', c,',', d)

if ((b>a) and (d>c)):
	if ((a+b>=c+d) or (c+d>=b+a)):
		print('Ha intersecao')
	else:
		print('Nao ha intersecao')
else:
	print('Entradas invalidas')
	
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 19:09:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input('Insira um valor para a: '))
b = float(input('Insira um valor para b: '))
c = float(input('Insira um valor para c: '))
d = float(input('Insira um valor para d: '))
print('Intervalo 1:', a,',', b)
print('Intervalo 2:', c,',', d)

if ((b>a) and (d>c)):
	if ((a+b>=c+d) or (c+d>=b+a)):
		print('Ha intersecao')
	else:
		print('Nao ha intersecao')
else:
	print('Entradas invalidas')
	
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 19:13:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input('Insira um valor para a: '))
b = float(input('Insira um valor para b: '))
c = float(input('Insira um valor para c: '))
d = float(input('Insira um valor para d: '))
print('Intervalo 1:', a,',', b)
print('Intervalo 2:', c,',', d)

if ((b>a) and (d>c)):
	if ((a+b>=c+d) or (c+d>=b+a)):
		print('Ha intersecao')
	else:
		print('Nao ha intersecao')
else:
	print('Entradas invalidas')
	
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 20:47:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input('Insira um valor para a: '))
b = float(input('Insira um valor para b: '))
c = float(input('Insira um valor para c: '))
d = float(input('Insira um valor para d: '))
print('Intervalo 1:', a,',', b)
print('Intervalo 2:', c,',', d)

if ((b>a) and (d>c)):
	if ((a>c and b>d) or (c>a and d>b)):
		print('Ha intersecao')
	else:
		print('Nao ha intersecao')
else:
	print('Entradas invalidas')
	
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 20:47:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input('Insira um valor para a: '))
b = float(input('Insira um valor para b: '))
c = float(input('Insira um valor para c: '))
d = float(input('Insira um valor para d: '))
print('Intervalo 1:', a,',', b)
print('Intervalo 2:', c,',', d)

if ((b>a) and (d>c)):
	if ((a>=c and b>=d) or (c>=a and d>=b)):
		print('Ha intersecao')
	else:
		print('Nao ha intersecao')
else:
	print('Entradas invalidas')
	
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:04:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input('Insira um valor para a: '))
b = float(input('Insira um valor para b: '))
c = float(input('Insira um valor para c: '))
d = float(input('Insira um valor para d: '))
print('Intervalo 1:', a,',', b)
print('Intervalo 2:', c,',', d)

if ((b>a) and (d>c)):
	if ((a<=c and b>=c) or (c<=a and b<=c) or (d>=a and b>=d) or (d<=a and d>=b)):
		print('Ha intersecao')
	else:
		print('Nao ha intersecao')
else:
	print('Entradas invalidas')
	
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:06:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input('Insira um valor para a: '))
b = float(input('Insira um valor para b: '))
c = float(input('Insira um valor para c: '))
d = float(input('Insira um valor para d: '))
print('Intervalo 1:', a,',', b)
print('Intervalo 2:', c,',', d)

if ((b>a) and (d>c)):
	if ((a<=c and b>=c) or (c<=a and b<=c) or (d>=a and b>=d) or (d<=a and d>=b)):
		print('Ha intersecao')
	else:
		print('Nao ha intersecao')
else:
	print('Entradas invalidas')
	
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:08:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input('Insira um valor para a: '))
b = float(input('Insira um valor para b: '))
c = float(input('Insira um valor para c: '))
d = float(input('Insira um valor para d: '))
print('Intervalo 1:', a,',', b)
print('Intervalo 2:', c,',', d)

if ((b>a) and (d>c)):
	if ((a<=c and b>=c) or (c<=a and b<=c) or (d>=a and b>=d) or (d<=a and d>=b)):
		print('Ha intersecao')
	else:
		print('Nao ha intersecao')
else:
	print('Entradas invalidas')
	
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 21:08:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input('Insira um valor para a: '))
b = float(input('Insira um valor para b: '))
c = float(input('Insira um valor para c: '))
d = float(input('Insira um valor para d: '))
print('Intervalo 1:', a,',', b)
print('Intervalo 2:', c,',', d)

if ((b>a) and (d>c)):
	if ((a<=c and b>=c) or (c<=a and b<=c) or (d>=a and b>=d) or (d<=a and d>=b)):
		print('Ha intersecao')
	else:
		print('Nao ha intersecao')
else:
	print('Entradas invalidas')
	
-- EXECUTION TIME:
0.132308
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
