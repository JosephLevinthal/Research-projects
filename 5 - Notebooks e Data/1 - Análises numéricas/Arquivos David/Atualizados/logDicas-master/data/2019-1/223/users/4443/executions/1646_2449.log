== TEST (2019-04-16 10:40:14) 
-- CODE:
#Valores dos coeficientes
a = float(input("digite o valor de a: "))
b = float(input("digite o valor de b: "))
c = float(input("digite o valor de c: "))
d = float(input("digite o valor de d: "))
e = float(input("digite o valor de e: "))
f = float(input("digite o valor de f: "))

x = (c*e - b*f)/(a*e - b*d)
y = (a*f - c*d)/(a*e - b*d)
print(x)
print(y)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    x = (c*e - b*f)/(a*e - b*d)
ZeroDivisionError: float division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:42:34) 
-- CODE:
#Valores dos coeficientes
a = float(input("digite o valor de a: "))
b = float(input("digite o valor de b: "))
c = float(input("digite o valor de c: "))
d = float(input("digite o valor de d: "))
e = float(input("digite o valor de e: "))
f = float(input("digite o valor de f: "))

nx = (c*e - b*f)
ny = (a*f - c*d)
d = (a*e - b*d)
x = nx/d
y = ny/d

if(d == 0):
	print("Nao tem solucao")

else:
	print(x)
	print(y)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    x = nx/d
ZeroDivisionError: float division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:42:48) 
-- CODE:
#Valores dos coeficientes
a = float(input("digite o valor de a: "))
b = float(input("digite o valor de b: "))
c = float(input("digite o valor de c: "))
d = float(input("digite o valor de d: "))
e = float(input("digite o valor de e: "))
f = float(input("digite o valor de f: "))

nx = (c*e - b*f)
ny = (a*f - c*d)
d = (a*e - b*d)
x = nx/d
y = ny/d

if(d == 0):
	print("Nao tem solucao")

else:
	print(x)
	print(y)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    x = nx/d
ZeroDivisionError: float division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:45:27) 
-- CODE:
#Valores dos coeficientes
a = float(input("digite o valor de a: "))
b = float(input("digite o valor de b: "))
c = float(input("digite o valor de c: "))
d = float(input("digite o valor de d: "))
e = float(input("digite o valor de e: "))
f = float(input("digite o valor de f: "))

nx = (c*e - b*f)
ny = (a*f - c*d)
d = (a*e - b*d)

if(d == 0):
	print("Nao tem solucao")

else:
	print(nx/d)
	print(ny/d)
	
-- OUTPUT:
Nao tem solucao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:46:01) 
-- CODE:
#Valores dos coeficientes
a = float(input("digite o valor de a: "))
b = float(input("digite o valor de b: "))
c = float(input("digite o valor de c: "))
d = float(input("digite o valor de d: "))
e = float(input("digite o valor de e: "))
f = float(input("digite o valor de f: "))

nx = (c*e - b*f)
ny = (a*f - c*d)
d = (a*e - b*d)

if(d == 0):
	print("Nao tem solucao")

else:
	print(nx/d)
	print(ny/d)
	
-- OUTPUT:
Nao tem solucao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 10:46:30) 
-- CODE:
#Valores dos coeficientes
a = float(input("digite o valor de a: "))
b = float(input("digite o valor de b: "))
c = float(input("digite o valor de c: "))
d = float(input("digite o valor de d: "))
e = float(input("digite o valor de e: "))
f = float(input("digite o valor de f: "))

nx = (c*e - b*f)
ny = (a*f - c*d)
d = (a*e - b*d)

if(d == 0):
	print("Nao tem solucao")

else:
	print(nx/d)
	print(ny/d)
	
-- EXECUTION TIME:
0.281983
-- TEST CASE 1:
---- input:
10.0
10.0
12.0
10.0
10.0
12.0
---- correct output:
Nao tem solucao
---- user output:
Nao tem solucao
-- TEST CASE 2:
---- input:
1.0
8.0
12.0
16.0
22.0
30.0
---- correct output:
-0.22641509433962265
1.528301886792453
---- user output:
-0.22641509433962265
1.528301886792453
-- TEST CASE 3:
---- input:
24.0
48.0
52.0
112.0
16.0
1.0
---- correct output:
-0.15705128205128205
1.1618589743589745
---- user output:
-0.15705128205128205
1.1618589743589745
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
