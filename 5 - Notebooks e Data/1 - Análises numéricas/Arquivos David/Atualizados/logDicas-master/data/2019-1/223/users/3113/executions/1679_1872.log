== TEST (2019-04-30 00:12:32) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
X=float(input("coordenada x:"))
Y=float(input("coordenada y:"))
Q1=X>0 and Y>0
Q2=Y>0 and X<0
Q3=X<0 and Y<0
Q4=Y<0 and X>0

if((X and Y)==Q1):
	r="Eixo X"
elif((X and Y)==Q2):
	r="Eixo Y"
elif((X and Y)==Q3):
	r="Eixo X"
elif((X and Y)==Q4):
	r="Eixo Y"
print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 17, in <module>
    print(r)
NameError: name 'r' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 00:12:52) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
X=float(input("coordenada x:"))
Y=float(input("coordenada y:"))
Q1=X>0 and Y>0
Q2=Y>0 and X<0
Q3=X<0 and Y<0
Q4=Y<0 and X>0

if((X and Y)==Q1):
	r="Eixo Y"
elif((X and Y)==Q2):
	r="Eixo X"
elif((X and Y)==Q3):
	r="Eixo Y"
elif((X and Y)==Q4):
	r="Eixo X"
print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 17, in <module>
    print(r)
NameError: name 'r' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 00:13:05) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
X=float(input("coordenada x:"))
Y=float(input("coordenada y:"))
Q1=X>0 and Y>0
Q2=Y>0 and X<0
Q3=X<0 and Y<0
Q4=Y<0 and X>0

if((X and Y)==Q1):
	r="Eixo Y"
elif((X and Y)==Q2):
	r="Eixo X"
elif((X and Y)==Q3):
	r="Eixo Y"
elif((X and Y)==Q4):
	r="Eixo X"
print(r)
-- EXECUTION TIME:
0.198599
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1872/main.py", line 17, in <module>
    print(r)
NameError: name 'r' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 00:14:26) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
X=float(input("coordenada x:"))
Y=float(input("coordenada y:"))
Q1=X>=0 and Y>=0
Q2=Y>=0 and X<=0
Q3=X<=0 and Y<=0
Q4=Y<=0 and X>=0

if((X and Y)==Q1):
	r="Eixo Y"
elif((X and Y)==Q2):
	r="Eixo X"
elif((X and Y)==Q3):
	r="Eixo Y"
elif((X and Y)==Q4):
	r="Eixo X"
else:
	r="Origem"
print(r)
-- OUTPUT:
Origem
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 00:14:30) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
X=float(input("coordenada x:"))
Y=float(input("coordenada y:"))
Q1=X>=0 and Y>=0
Q2=Y>=0 and X<=0
Q3=X<=0 and Y<=0
Q4=Y<=0 and X>=0

if((X and Y)==Q1):
	r="Eixo Y"
elif((X and Y)==Q2):
	r="Eixo X"
elif((X and Y)==Q3):
	r="Eixo Y"
elif((X and Y)==Q4):
	r="Eixo X"
else:
	r="Origem"
print(r)
-- OUTPUT:
Origem
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 00:14:36) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
X=float(input("coordenada x:"))
Y=float(input("coordenada y:"))
Q1=X>=0 and Y>=0
Q2=Y>=0 and X<=0
Q3=X<=0 and Y<=0
Q4=Y<=0 and X>=0

if((X and Y)==Q1):
	r="Eixo Y"
elif((X and Y)==Q2):
	r="Eixo X"
elif((X and Y)==Q3):
	r="Eixo Y"
elif((X and Y)==Q4):
	r="Eixo X"
else:
	r="Origem"
print(r)
-- OUTPUT:
Origem
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 00:14:48) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
X=float(input("coordenada x:"))
Y=float(input("coordenada y:"))
Q1=X>=0 and Y>=0
Q2=Y>=0 and X<=0
Q3=X<=0 and Y<=0
Q4=Y<=0 and X>=0

if((X and Y)==Q1):
	r="Eixo Y"
elif((X and Y)==Q2):
	r="Eixo X"
elif((X and Y)==Q3):
	r="Eixo Y"
elif((X and Y)==Q4):
	r="Eixo X"
else:
	r="Origem"
print(r)
-- OUTPUT:
Origem
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 00:19:41) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
X=float(input("coordenada x:"))
Y=float(input("coordenada y:"))
Q1=X>=0 and Y>=0
Q2=Y>=0 and X<=0
Q3=X<=0 and Y<=0
Q4=Y<=0 and X>=0

if(X>0 and Y==0):
	r="Eixo X"
elif(X==0 and Y>0):
	r="Eixo Y"
else:
	r="Origem"
print(r)
-- EXECUTION TIME:
0.139241
-- TEST CASE 1:
---- input:
4.5
-2.2
---- correct output:
Q4
---- user output:
Origem
-- TEST CASE 2:
---- input:
0.1
0
---- correct output:
Eixo X
---- user output:
Eixo X
-- TEST CASE 3:
---- input:
0.0
0.0
---- correct output:
Origem
---- user output:
Origem
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 00:21:16) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
X=float(input("coordenada x:"))
Y=float(input("coordenada y:"))
Q1=X>=0 and Y>=0
Q2=Y>=0 and X<=0
Q3=X<=0 and Y<=0
Q4=Y<=0 and X>=0

if((X and Y)==Q1):
	r="Q1"
elif(X>0 and Y==0):
	r="Eixo X"
elif(X==0 and Y>0):
	r="Eixo Y"
else:
	r="Origem"
print(r)
-- OUTPUT:
Origem
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 00:21:23) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
X=float(input("coordenada x:"))
Y=float(input("coordenada y:"))
Q1=X>=0 and Y>=0
Q2=Y>=0 and X<=0
Q3=X<=0 and Y<=0
Q4=Y<=0 and X>=0

if((X and Y)==Q1):
	r="Q1"
elif(X>0 and Y==0):
	r="Eixo X"
elif(X==0 and Y>0):
	r="Eixo Y"
else:
	r="Origem"
print(r)
-- OUTPUT:
Origem
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 00:21:59) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
X=float(input("coordenada x:"))
Y=float(input("coordenada y:"))
Q1=X>0 and Y>0
Q2=Y>0 and X<0
Q3=X<0 and Y<0
Q4=Y<0 and X>0

if((X and Y)==Q1):
	r="Q1"
elif(X>0 and Y==0):
	r="Eixo X"
elif(X==0 and Y>0):
	r="Eixo Y"
else:
	r="Origem"
print(r)
-- OUTPUT:
Origem
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 00:22:47) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
X=float(input("coordenada x:"))
Y=float(input("coordenada y:"))
Q1=X>0 and Y>0
Q2=Y>0 and X<0
Q3=X<0 and Y<0
Q4=Y<0 and X>0

if((X and Y)==Q1):
	r="Q1"
elif(X>0 and Y==0 or X<0 and Y==0):
	r="Eixo X"
elif(X==0 and Y>0 or X==0 and Y<0):
	r="Eixo Y"
else:
	r="Origem"
print(r)
-- OUTPUT:
Origem
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 00:23:17) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
X=float(input("coordenada x:"))
Y=float(input("coordenada y:"))
Q1=X>0 and Y>0
Q2=Y>0 and X<0
Q3=X<0 and Y<0
Q4=Y<0 and X>0


IF(X>0 and Y==0 or X<0 and Y==0):
	r="Eixo X"
elif(X==0 and Y>0 or X==0 and Y<0):
	r="Eixo Y"
else:
	r="Origem"
print(r)
-- ERROR:
File "XXXX", line 10
    IF(X>0 and Y==0 or X<0 and Y==0):
                                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 00:23:22) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
X=float(input("coordenada x:"))
Y=float(input("coordenada y:"))
Q1=X>0 and Y>0
Q2=Y>0 and X<0
Q3=X<0 and Y<0
Q4=Y<0 and X>0


if(X>0 and Y==0 or X<0 and Y==0):
	r="Eixo X"
elif(X==0 and Y>0 or X==0 and Y<0):
	r="Eixo Y"
else:
	r="Origem"
print(r)
-- OUTPUT:
Origem
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 00:25:02) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
X=float(input("coordenada x:"))
Y=float(input("coordenada y:"))
Q1=X>0 and Y>0
Q2=Y>0 and X<0
Q3=X<0 and Y<0
Q4=Y<0 and X>0

if(X>0 and Y>0):
	r="Q1"
elif(Y>0 and X<0):
	r="Q2"
elif(X<0 and Y<0):
	r="Q3"
elif(Y<0 and X>0):
	r="Q4"
elif(X>0 and Y==0 or X<0 and Y==0):
	r="Eixo X"
elif(X==0 and Y>0 or X==0 and Y<0):
	r="Eixo Y"
else:
	r="Origem"
print(r)
-- OUTPUT:
Q4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 00:25:06) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
X=float(input("coordenada x:"))
Y=float(input("coordenada y:"))
Q1=X>0 and Y>0
Q2=Y>0 and X<0
Q3=X<0 and Y<0
Q4=Y<0 and X>0

if(X>0 and Y>0):
	r="Q1"
elif(Y>0 and X<0):
	r="Q2"
elif(X<0 and Y<0):
	r="Q3"
elif(Y<0 and X>0):
	r="Q4"
elif(X>0 and Y==0 or X<0 and Y==0):
	r="Eixo X"
elif(X==0 and Y>0 or X==0 and Y<0):
	r="Eixo Y"
else:
	r="Origem"
print(r)
-- OUTPUT:
Q4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 00:25:08) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
X=float(input("coordenada x:"))
Y=float(input("coordenada y:"))
Q1=X>0 and Y>0
Q2=Y>0 and X<0
Q3=X<0 and Y<0
Q4=Y<0 and X>0

if(X>0 and Y>0):
	r="Q1"
elif(Y>0 and X<0):
	r="Q2"
elif(X<0 and Y<0):
	r="Q3"
elif(Y<0 and X>0):
	r="Q4"
elif(X>0 and Y==0 or X<0 and Y==0):
	r="Eixo X"
elif(X==0 and Y>0 or X==0 and Y<0):
	r="Eixo Y"
else:
	r="Origem"
print(r)
-- OUTPUT:
Q4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 00:25:19) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
X=float(input("coordenada x:"))
Y=float(input("coordenada y:"))
Q1=X>0 and Y>0
Q2=Y>0 and X<0
Q3=X<0 and Y<0
Q4=Y<0 and X>0

if(X>0 and Y>0):
	r="Q1"
elif(Y>0 and X<0):
	r="Q2"
elif(X<0 and Y<0):
	r="Q3"
elif(Y<0 and X>0):
	r="Q4"
elif(X>0 and Y==0 or X<0 and Y==0):
	r="Eixo X"
elif(X==0 and Y>0 or X==0 and Y<0):
	r="Eixo Y"
else:
	r="Origem"
print(r)
-- OUTPUT:
Q4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 00:25:29) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
X=float(input("coordenada x:"))
Y=float(input("coordenada y:"))
Q1=X>0 and Y>0
Q2=Y>0 and X<0
Q3=X<0 and Y<0
Q4=Y<0 and X>0

if(X>0 and Y>0):
	r="Q1"
elif(Y>0 and X<0):
	r="Q2"
elif(X<0 and Y<0):
	r="Q3"
elif(Y<0 and X>0):
	r="Q4"
elif(X>0 and Y==0 or X<0 and Y==0):
	r="Eixo X"
elif(X==0 and Y>0 or X==0 and Y<0):
	r="Eixo Y"
else:
	r="Origem"
print(r)
-- EXECUTION TIME:
0.142867
-- TEST CASE 1:
---- input:
4.5
-2.2
---- correct output:
Q4
---- user output:
Q4
-- TEST CASE 2:
---- input:
0.1
0
---- correct output:
Eixo X
---- user output:
Eixo X
-- TEST CASE 3:
---- input:
0.0
0.0
---- correct output:
Origem
---- user output:
Origem
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
