== TEST (2019-04-16 14:16:15) 
-- CODE:
preco= int(input())
pag= int(input())
if (preco>pag):
	x= preco-pag
	print('falta',round(x,2))
else:
	y=pag-preco
	print('troco de,round(y,2))
-- ERROR:
File "XXXX", line 8
    print('troco de,round(y,2))
                              ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:25:49) 
-- CODE:
preco= int(input())
pag= int(input())
if (preco>pag):
	x= preco-pag
	print('falta',round(x,2))
else:
	y=pag-preco
	print('troco de,round(y,2))
-- ERROR:
File "XXXX", line 8
    print('troco de,round(y,2))
                              ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:34:34) 
-- CODE:
preco= int(input())
pag= int(input())
if (preco>pag):
	x= preco-pag
	print('falta',round(x,2))
else:
	y=pag-preco
	print('troco de,round(y,2))
-- ERROR:
File "XXXX", line 8
    print('troco de,round(y,2))
                              ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:35:54) 
-- CODE:
preco= int(input())
pag= int(input())
if (preco>pag):
	x= preco-pag
	print('falta',round(x,2))
else:
	y=pag-preco
	print('troco de,round(y,2))
-- ERROR:
File "XXXX", line 8
    print('troco de,round(y,2))
                              ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:36:40) 
-- CODE:
preco= int(input())
pag= int(input())
if (preco>pag):
	x= preco-pag
	print('falta',round(x,2))
else:
	y=pag-preco
	print('troco de,round(y,2))
-- ERROR:
File "XXXX", line 8
    print('troco de,round(y,2))
                              ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:36:45) 
-- CODE:
preco= int(input())
pag= int(input())
if (preco>pag):
	x= preco-pag
	print('falta',round(x,2))
else:
	y=pag-preco
	print('troco de,round(y,2))
-- ERROR:
File "XXXX", line 8
    print('troco de,round(y,2))
                              ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:39:26) 
-- CODE:
preco= int(input())
pag= int(input())
if (preco>pag):
	x= preco-pag
	print('falta',round(x,2))
else:
	y=pag-preco
	print('troco de,round(y,2))
-- ERROR:
File "XXXX", line 8
    print('troco de,round(y,2))
                              ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:39:42) 
-- CODE:
preco=(input())
pag=(input())
if (preco>pag):
	x= preco-pag
	print('falta',round(x,2))
else:
	y=pag-preco
	print('troco de,round(y,2))
-- ERROR:
File "XXXX", line 8
    print('troco de,round(y,2))
                              ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:40:04) 
-- CODE:
preco=input()
pag=input()
if (preco>pag):
	x= preco-pag
	print('falta',round(x,2))
else:
	y=pag-preco
	print('troco de,round(y,2))
-- ERROR:
File "XXXX", line 8
    print('troco de,round(y,2))
                              ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:51:08) 
-- CODE:
preco=input()
pag=input()
if (preco>pag):
	x= preco-pag
	print('falta',round(x,2))
else:
	y=pag-preco
	print('troco de,round(y,2))
-- ERROR:
File "XXXX", line 8
    print('troco de,round(y,2))
                              ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:51:40) 
-- CODE:
preco=input('preÃ§o')
pag=input()
if (preco>pag):
	x= preco-pag
	print('falta',round(x,2))
else:
	y=pag-preco
	print('troco de,round(y,2))
-- ERROR:
File "XXXX", line 8
    print('troco de,round(y,2))
                              ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:52:01) 
-- CODE:
preco=input('preco')
pag=input('pagamento')
if (preco>pag):
	x= preco-pag
	print('falta',round(x,2))
else:
	y=pag-preco
	print('troco de,round(y,2))
-- ERROR:
File "XXXX", line 8
    print('troco de,round(y,2))
                              ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:52:42) 
-- CODE:
preco=int(input('preco'))
pag=int(input('pagamento'))
if (preco>pag):
	x= preco-pag
	print('falta',round(x,2))
else:
	y=pag-preco
	print('troco de,round(y,2))
-- ERROR:
File "XXXX", line 8
    print('troco de,round(y,2))
                              ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:55:20) 
-- CODE:
preco=int(input('preco'))
pag=int(input('pagamento'))
if (preco>pag):
	x= preco-pag
	print('falta',round(x,2))
else:
	y=pag-preco
	print('troco de,round(y,2))
-- ERROR:
File "XXXX", line 8
    print('troco de,round(y,2))
                              ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:55:37) 
-- CODE:
preco=int(input('preco'))
pag=int(input('pagamento'))
if (preco>pag):
x= preco-pag
	print('falta',round(x,2))
else:
	y=pag-preco
	print('troco de,round(y,2))
-- ERROR:
File "XXXX", line 4
    x= preco-pag
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:55:46) 
-- CODE:
preco=int(input('preco'))
pag=int(input('pagamento'))
if (preco>pag):
   x= preco-pag
	print('falta',round(x,2))
else:
	y=pag-preco
	print('troco de,round(y,2))
-- ERROR:
File "XXXX", line 5
    print('falta',round(x,2))
                            ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:55:56) 
-- CODE:
preco=int(input('preco'))
pag=int(input('pagamento'))
if (preco>pag):
   x= preco-pag
print('falta',round(x,2))
else:
	y=pag-preco
	print('troco de,round(y,2))
-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:56:13) 
-- CODE:
preco=int(input('preco'))
pag=int(input('pagamento'))
if (preco>pag):
   x= preco-pag
print('falta',round(x,2))
elif:
	y=pag-preco
	print('troco de,round(y,2))
-- ERROR:
File "XXXX", line 6
    elif:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:56:23) 
-- CODE:
preco=int(input('preco'))
pag=int(input('pagamento'))
if (preco>pag):
   x= preco-pag
print('falta',round(x,2))
else
	y=pag-preco
	print('troco de,round(y,2))
-- ERROR:
File "XXXX", line 6
    else
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:56:43) 
-- CODE:
preco=int(input('preco'))
pag=int(input('pagamento'))
if (preco>pag):
   x= preco-pag
print('falta',round(x,2))
else:
	y=pag-preco
	print('troco de,round(y,2))
-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:56:49) 
-- CODE:
preco=int(input('preco'))
pag=int(input('pagamento'))
if (preco>pag):
   x= preco-pag
print('falta',round(x,2))
 else:
	y=pag-preco
	print('troco de,round(y,2))
-- ERROR:
File "XXXX", line 6
    else:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:58:05) 
-- CODE:
preco=int(input('preco'))
pag=int(input('pagamento'))
if (preco>pag):
   x= preco-pag
print('falta',round(x,2))
 else:
	y=pag-preco
	print('troco de,round(y,2))
-- ERROR:
File "XXXX", line 6
    else:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:58:12) 
-- CODE:
preco=int(input('preco'))
pag=int(input('pagamento'))
if (preco>pag):
   x= preco-pag
print('falta',round(x,2))
else:
	y=pag-preco
	print('troco de,round(y,2))
-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 15:02:06) 
-- CODE:
preco=int(input('preco'))
pag=int(input('pagamento'))
if (preco>pag):
   x= preco-pag
print('falta',round(x,2))

	y=pag-preco
	print('troco de,round(y,2))
-- ERROR:
File "XXXX", line 7
    y=pag-preco
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 15:13:44) 
-- CODE:
preco=int(input('preco'))
pag=int(input('pagamento'))
if (preco>pag):
   x= preco-pag
print('falta',round(x,2))
else:
	y=pag-preco
	print('troco de,round(y,2)')
-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 15:14:13) 
-- CODE:
preco=int(input('preco'))
pag=int(input('pagamento'))
if (preco>pag):
   x= preco-pag
else:
print('falta',round(x,2))
	y=pag-preco
	print('troco de,round(y,2)')
-- ERROR:
File "XXXX", line 6
    print('falta',round(x,2))
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 15:15:17) 
-- CODE:
preco=int(input('preco'))
pag=int(input('pagamento'))
if (preco>pag):
   x= preco-pag
print('falta',round(x,2))
else:
	y=pag-preco
	print('troco de,round(y,2)')
-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 15:18:00) 
-- CODE:
preco=int(input('preco'))
pag=int(input('pagamento'))
if (preco>pag):
   x= preco-pag
print('falta',round(x,2))
else:
	y=pag-preco
	print('troco de,round(y,2)')
-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 15:26:06) 
-- CODE:
preco=int(input('preco'))
pag=int(input('pagamento'))
if (preco>pag):
   x= preco-pag
print('falta',round(x,2))
else:
	y=pag-preco
	print('troco de,round(y,2)')
-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 15:26:41) 
-- CODE:
preco=int(input('preco'))
pag=int(input('pagamento'))
if (preco>pag):
print('falta',round(x,2))
   x= preco-pag

else:
	y=pag-preco
	print('troco de,round(y,2)')
-- ERROR:
File "XXXX", line 4
    print('falta',round(x,2))
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 19:53:54) 
-- CODE:
preco=int(input('preco'))
pag=int(input('pagamento'))
if (preco>pag):
print('falta',round(x,2))
   x= preco-pag

else:
	y=pag-preco
	print('troco de,round(y,2)')
-- ERROR:
File "XXXX", line 4
    print('falta',round(x,2))
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 19:54:18) 
-- CODE:
preco=int(input('preco'))
pag=int(input('pagamento'))
if (preco>pag):
   print('falta',round(x,2))
   x= preco-pag

else:
	y=pag-preco
	print('troco de,round(y,2)')
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    preco=int(input())
ValueError: invalid literal for int() with base 10: '38.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 19:55:07) 
-- CODE:
preco=int(input('preco'))
pag=int(input('pagamento'))
if (preco>pag):
   print('falta',round(x,2))
   x= preco-pag

else:
	y=pag-preco
	print("troco de", round(y,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    preco=int(input())
ValueError: invalid literal for int() with base 10: '38.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 19:55:26) 
-- CODE:
preco=int(input('preco'))
pag=int(input('pagamento'))
if (preco>pag):
   print('falta',round(x,2))
   x= preco-pag

else:
	y=pag-preco
	print("troco de", round(y,2))
-- EXECUTION TIME:
0.666167
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/2447/main.py", line 1, in <module>
    preco=int(input())
ValueError: invalid literal for int() with base 10: '38.0'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 19:55:43) 
-- CODE:
preco=int(input('preco'))
pag=int(input('pagamento'))
if (preco>pag):
   print('falta',round(x,2))
   x= preco-pag

else:
	y=pag-preco
	print("Troco de", round(y,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    preco=int(input())
ValueError: invalid literal for int() with base 10: '38.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 19:56:36) 
-- CODE:
preco=int(input("preco "))
pag=int(input("pagamento "))
if (preco>pag):
   print("falta", round(x,2))
   x= preco-pag

else:
	y=pag-preco
	print("Troco de", round(y,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    preco=int(input())
ValueError: invalid literal for int() with base 10: '38.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 19:57:43) 
-- CODE:
preco= float(input("")
pag= float(input("")
if (preco>pag):
   print("falta", round(x,2))
   x= preco-pag

else:
	y=pag-preco
	print("Troco de", round(y,2))
-- ERROR:
File "XXXX", line 2
    pag= float(input("")
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 19:58:18) 
-- CODE:
preco= float(input(""))
pag= float(input(""))
if (preco>pag):
   print("falta", round(x,2))
   x= preco-pag

else:
	y=pag-preco
	print("Troco de", round(y,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print("falta", round(x,2))
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 19:58:32) 
-- CODE:
preco= float(input(""))
pag= float(input(""))
if (preco>pag):
   print("falta", round(x,2))
   x= preco-pag

else:
	y=pag-preco
	print("Troco de", round(y,2))
-- EXECUTION TIME:
0.691045
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/2447/main.py", line 4, in <module>
    print("falta", round(x,2))
NameError: name 'x' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 19:59:17) 
-- CODE:
preco= float(input(""))
pag= float(input(""))
if (preco>pag):
   print("Falta", round(x,2))
   x= preco-pag

else:
	y=pag-preco
	print("Troco de", round(y,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print("Falta", round(x,2))
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 19:59:42) 
-- CODE:
preco= float(input(""))
pag= float(input(""))
if (preco>pag):
   print("Falta", round(x,2))
   x= preco-pag

else:
	y=pag-preco
	print("Troco de", round(y,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print("Falta", round(x,2))
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 19:59:47) 
-- CODE:
preco= float(input(""))
pag= float(input(""))
if (preco>pag):
   print("Falta", round(x,2))
   x= preco-pag

else:
	y=pag-preco
	print("Troco de", round(y,2))
-- EXECUTION TIME:
0.734043
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/2447/main.py", line 4, in <module>
    print("Falta", round(x,2))
NameError: name 'x' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 20:01:10) 
-- CODE:
preco= float(input(""))
pag= float(input(""))
if (preco>pag):
	x= preco-pag
   print("Falta", round(x,2))

else:
	y=pag-preco
	print("Troco de", round(y,2))
-- ERROR:
File "XXXX", line 5
    print("Falta", round(x,2))
                             ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 20:01:27) 
-- CODE:
preco= float(input(""))
pag= float(input(""))
if (preco>pag):
	x= preco-pag
   print("Falta", round(x,2)

else:
	y=pag-preco
	print("Troco de", round(y,2))
-- ERROR:
File "XXXX", line 5
    print("Falta", round(x,2)
                            ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 20:01:34) 
-- CODE:
preco= float(input(""))
pag= float(input(""))
if (preco>pag):
	x= preco-pag
   print("Falta", round(x,2))

else:
	y=pag-preco
	print("Troco de", round(y,2))
-- ERROR:
File "XXXX", line 5
    print("Falta", round(x,2))
                             ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 20:01:45) 
-- CODE:
preco= float(input(""))
pag= float(input(""))
if (preco>pag):
	x= preco-pag
   print("Falta", round(x,2)):

else:
	y=pag-preco
	print("Troco de", round(y,2))
-- ERROR:
File "XXXX", line 5
    print("Falta", round(x,2)):
                              ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 20:02:16) 
-- CODE:
preco= float(input(""))
pag= float(input(""))
if (preco>pag):
	x= preco-pag
   print("Falta", round(x,2))

else:
	y=pag-preco
	print("Troco de", round(y,2))
-- ERROR:
File "XXXX", line 5
    print("Falta", round(x,2))
                             ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 20:02:23) 
-- CODE:
preco= float(input(""))
pag= float(input(""))
if (preco>pag):
	x= preco-pag
   print("Falta", round(x,2)

else:
	y=pag-preco
	print("Troco de", round(y,2))
-- ERROR:
File "XXXX", line 5
    print("Falta", round(x,2)
                            ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 20:02:48) 
-- CODE:
preco= float(input(""))
pag= float(input(""))
if (preco>pag):
	x= preco-pag
   print("Falta", round(x,2))

else:
	y=pag-preco
	print("Troco de", round(y,2))
-- ERROR:
File "XXXX", line 5
    print("Falta", round(x,2))
                             ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 20:04:03) 
-- CODE:
preco= float(input(""))
pag= float(input(""))
if (preco>pag):
   print("Falta", round(x,2))
	x= preco-pag

else:
	y=pag-preco
	print("Troco de", round(y,2))
-- ERROR:
File "XXXX", line 5
    x= preco-pag
               ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 20:04:14) 
-- CODE:
preco= float(input(""))
pag= float(input(""))
if (preco>pag):
   print("Falta", round(x,2))
	x= preco-pag
else:
	y=pag-preco
	print("Troco de", round(y,2))
-- ERROR:
File "XXXX", line 5
    x= preco-pag
               ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 20:04:37) 
-- CODE:
preco= float(input(""))
pag= float(input(""))
if (preco>pag):
   print("Falta", round(x,2))
	
else:
	y=pag-preco
	print("Troco de", round(y,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print("Falta", round(x,2))
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 20:04:47) 
-- CODE:
preco= float(input(""))
pag= float(input(""))
if (preco>pag):
   print("Falta", round(x,2))
	
else:
	y=pag-preco
	print("Troco de", round(y,2))
-- EXECUTION TIME:
0.637329
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/2447/main.py", line 4, in <module>
    print("Falta", round(x,2))
NameError: name 'x' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 20:05:46) 
-- CODE:
preco= float(input(""))
pag= float(input(""))
if (preco>pag):
	x= preco-pag
	print("Falta", round(x,2))
	
else:
	y=pag-preco
	print("Troco de", round(y,2))
-- OUTPUT:
Falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 20:05:52) 
-- CODE:
preco= float(input(""))
pag= float(input(""))
if (preco>pag):
	x= preco-pag
	print("Falta", round(x,2))
	
else:
	y=pag-preco
	print("Troco de", round(y,2))
-- EXECUTION TIME:
0.792937
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
