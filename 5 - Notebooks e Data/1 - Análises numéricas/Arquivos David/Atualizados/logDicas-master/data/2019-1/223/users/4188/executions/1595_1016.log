== TEST (2019-03-26 16:47:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=float(input("digite o valor do a: "))
b=float(input("digite o valor de b: "))
c=float(input("digite o valor do c: "))
s=(a+b+c)/2
from math import sqrt()
a=sqrt(s*(s-a)*(s-b)*(s-c))
print(round(a,5))
-- ERROR:
File "XXXX", line 8
    from math import sqrt()
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:47:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=float(input("digite o valor do a: "))
b=float(input("digite o valor de b: "))
c=float(input("digite o valor do c: "))
s=(a+b+c)/2
from math import sqrt
a=sqrt(s*(s-a)*(s-b)*(s-c))
print(round(a,5))
-- OUTPUT:
69.41967
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:48:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=float(input("digite o valor do a: "))
b=float(input("digite o valor de b: "))
c=float(input("digite o valor do c: "))
s=(a+b+c)/2
from math import sqrt
a=sqrt(s*(s-a)*(s-b)*(s-c))
print(round(a,5))
-- OUTPUT:
69.41967
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 16:48:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=float(input("digite o valor do a: "))
b=float(input("digite o valor de b: "))
c=float(input("digite o valor do c: "))
s=(a+b+c)/2
from math import sqrt
a=sqrt(s*(s-a)*(s-b)*(s-c))
print(round(a,5))
-- EXECUTION TIME:
0.103158
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.41967
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709.16654
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
