== TEST (2019-04-11 17:34:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

# Digitar quatros numeros
var = int(input("Digite quatro numeros: "))

soma_digitos = var//1%10
print(soma_digitos)
-- OUTPUT:
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:34:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

# Digitar quatros numeros
var = int(input("Digite quatro numeros: "))

soma_digitos = var//10%10
print(soma_digitos)
-- OUTPUT:
7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:34:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

# Digitar quatros numeros
var = int(input("Digite quatro numeros: "))

soma_digitos = var//100%10
print(soma_digitos)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:34:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

# Digitar quatros numeros
var = int(input("Digite quatro numeros: "))

soma_digitos = var//100%10
print(soma_digitos)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:34:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

# Digitar quatros numeros
var = int(input("Digite quatro numeros: "))

soma_digitos = var//1000%10
print(soma_digitos)
-- OUTPUT:
9
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:36:05) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

# Digitar quatros numeros
var = int(input("Digite quatro numeros: "))

a = var//1000%10
b = var//100%10
c = var//10%10
d = var//1%10

print(abcd)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    print(abcd)
NameError: name 'abcd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:36:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

# Digitar quatros numeros
var = int(input("Digite quatro numeros: "))

a = var//1000%10
b = var//100%10
c = var//10%10
d = var//1%10

print(a,b,c,d)
-- OUTPUT:
9 1 7 3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:37:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

# Digitar quatros numeros
var = int(input("Digite quatro numeros: "))

a = var//1000%10
b = var//100%10
c = var//10%10
d = var//1%10

soma_digitos = a + b + c + d

print(soma_digitos)
-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 17:37:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

# Digitar quatros numeros
var = int(input("Digite quatro numeros: "))

a = var//1000%10
b = var//100%10
c = var//10%10
d = var//1%10

soma_digitos = a + b + c + d

print(soma_digitos)
-- EXECUTION TIME:
0.242148
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
