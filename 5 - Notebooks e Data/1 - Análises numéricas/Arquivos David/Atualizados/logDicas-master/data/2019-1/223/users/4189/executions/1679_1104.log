== SUBMITION (2019-07-09 14:49:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

from numpy import *
from numpy.linalg import*

x = array(
y = shape(x)[1]
w = zeros(y, dtype = int)

for i in range(size(w)):
	w[i] = sum(x[:,i])

for i in range(size(w)):
	if w[i] == max(w):
		z = i + 1
		print(z)	
deix
from numpy import *

t = array(
a = t.shape[0]
b = t.shape[1]
-- EXECUTION TIME:
0.721112
-- ERROR:
  File "/home/codebench/codes/1679/1104/main.py", line 10
    w = zeros(y, dtype = int)
    ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-09 14:56:03) 
-- CODE:
a=float(input("a: "))
b=float(input("b: "))
c=float(input("c: "))
d=float(input("d: "))

if(b>a)and(d>c):
	if (a <= c)and(c <= b)or(d >= a)and(d <= b):
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Ha intersecao")
	else:
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Nao ha intersecao")
else:
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
	print("Entradas invalidas")
-- EXECUTION TIME:
0.496088
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
