== TEST (2019-04-11 18:34:05) 
-- CODE:
preco=float(input("Valor do preco: "))
pagamento=float(input("Valor do pagamento: "))
if (preco>pagamento):
	mensagem = "Falta" preco-pagamento
else:
	mensagem = "Troco de" pagamento-preco
print(round(mensagem, 2))	
	
	

-- ERROR:
File "XXXX", line 4
    mensagem = "Falta" preco-pagamento
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:34:35) 
-- CODE:
preco=float(input("Valor do preco: "))
pagamento=float(input("Valor do pagamento: "))
if (preco>pagamento):
	mensagem = "Falta" + preco-pagamento
else:
	mensagem = "Troco de" + pagamento-preco
print(round(mensagem, 2))	
	
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    mensagem = "Falta" + preco-pagamento
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:35:18) 
-- CODE:
preco=float(input("Valor do preco: "))
pagamento=float(input("Valor do pagamento: "))
if (preco>pagamento):
	mensagem = "Falta" , preco-pagamento
else:
	mensagem = "Troco de" , pagamento-preco
print(round(mensagem, 2))	
	
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(round(mensagem, 2))	
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:36:09) 
-- CODE:
preco=float(input("Valor do preco: "))
pagamento=float(input("Valor do pagamento: "))
if (preco>pagamento):
	mensagem = "Falta" , preco - pagamento
else:
	mensagem = "Troco de" , pagamento - preco
print(round(mensagem, 2))	
	
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(round(mensagem, 2))	
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:37:27) 
-- CODE:
preco=float(input("Valor do preco: "))
pagamento=float(input("Valor do pagamento: "))
if (preco>pagamento):
	mensagem = "Falta" + preco - pagamento
else:
	mensagem = "Troco de" + pagamento - preco
print(round(mensagem, 2))	
	
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    mensagem = "Falta" + preco - pagamento
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:37:59) 
-- CODE:
preco=float(input("Valor do preco: "))
pagamento=float(input("Valor do pagamento: "))
if (preco>pagamento):
	mensagem = "Falta" , preco - pagamento
else:
	mensagem = "Troco de" , pagamento - preco
print(round(mensagem, 2))	
	
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(round(mensagem, 2))	
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:38:40) 
-- CODE:
preco=float(input("Valor do preco: "))
pagamento=float(input("Valor do pagamento: "))
if (preco>pagamento):
	mensagem = "Falta" , preco - pagamento
else:
	mensagem = "Troco de" , pagamento - preco
print(mensagem)
	

-- OUTPUT:
('Falta', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 18:39:06) 
-- CODE:
preco=float(input("Valor do preco: "))
pagamento=float(input("Valor do pagamento: "))
if (preco>pagamento):
	mensagem = "Falta" , preco - pagamento
else:
	mensagem = "Troco de" , pagamento - preco
print(mensagem)
	

-- EXECUTION TIME:
0.15712
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
('Falta', 26.0)
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
('Troco de', 28.0)
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
('Troco de', 0.0)
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:39:54) 
-- CODE:
preco=float(input("Valor do preco: "))
pagamento=float(input("Valor do pagamento: "))
if (preco>pagamento):
	mensagem = 'Falta' + preco - pagamento
else:
	mensagem = 'Troco de' + pagamento - preco
print(mensagem)
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    mensagem = 'Falta' + preco - pagamento
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:40:33) 
-- CODE:
preco=float(input("Valor do preco: "))
pagamento=float(input("Valor do pagamento: "))
if (preco>pagamento):
	mensagem = 'Falta' + (preco - pagamento)
else:
	mensagem = 'Troco de' + (pagamento - preco)
print(mensagem)
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    mensagem = 'Falta' + (preco - pagamento)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:41:01) 
-- CODE:
preco=float(input("Valor do preco: "))
pagamento=float(input("Valor do pagamento: "))
if (preco>pagamento):
	mensagem = "Falta" + (preco - pagamento)
else:
	mensagem = "Troco de" + (pagamento - preco)
print(mensagem)
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    mensagem = "Falta" + (preco - pagamento)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 08:56:44) 
-- CODE:
preco=float(input("Valor do preco: "))
pagamento=float(input("Valor do pagamento: "))
if (preco>pagamento):
	mensagem = "Falta" + (preco - pagamento)
else:
	mensagem = "Troco de" + (pagamento - preco)
print(mensagem)
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    mensagem = "Falta" + (preco - pagamento)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 08:56:59) 
-- CODE:
preco=float(input("Valor do preco: "))
pagamento=float(input("Valor do pagamento: "))
if (preco>pagamento):
	mensagem = "Falta" + (preco - pagamento)
else:
	mensagem = "Troco de" + (pagamento - preco)
print(mensagem)
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    mensagem = "Falta" + (preco - pagamento)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 08:58:11) 
-- CODE:
preco=float(input("Valor do preco: "))
pagamento=float(input("Valor do pagamento: "))
if (preco>pagamento):
	mensagem = preco- pagamento + "Falta"
else:
	mensagem = "Troco de" + (pagamento - preco)
print(mensagem)
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    mensagem = preco- pagamento + "Falta"
TypeError: unsupported operand type(s) for +: 'float' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 12:50:38) 
-- CODE:
preco=float(input("Valor do preco: "))
pagamento=float(input("Valor do pagamento: "))
if (preco>=pagamento):
	mensagem = "Falta" + str(preco - pagamento)
else:
	mensagem = "Troco de" + str(pagamento - preco)
print(mensagem)
	

-- OUTPUT:
Falta26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 12:51:22) 
-- CODE:
preco=float(input("Valor do preco: "))
pagamento=float(input("Valor do pagamento: "))
if (preco>=pagamento):
	mensagem = "Falta" + str(preco - pagamento)
else:
	mensagem = "Troco de" +" "+str(pagamento - preco)
print(mensagem)
	

-- OUTPUT:
Falta26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 12:51:46) 
-- CODE:
preco=float(input("Valor do preco: "))
pagamento=float(input("Valor do pagamento: "))
if (preco>=pagamento):
	mensagem = "Falta" +" "+ str(preco - pagamento)
else:
	mensagem = "Troco de" +" "+str(pagamento - preco)
print(mensagem)
	

-- OUTPUT:
Falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 12:51:53) 
-- CODE:
preco=float(input("Valor do preco: "))
pagamento=float(input("Valor do pagamento: "))
if (preco>=pagamento):
	mensagem = "Falta" +" "+ str(preco - pagamento)
else:
	mensagem = "Troco de" +" "+str(pagamento - preco)
print(mensagem)
	

-- EXECUTION TIME:
0.130688
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Falta 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 12:52:01) 
-- CODE:
preco=float(input("Valor do preco: "))
pagamento=float(input("Valor do pagamento: "))
if (preco>=pagamento):
	mensagem = "Falta" +" "+ str(preco - pagamento)
else:
	mensagem = "Troco de" +" "+str(pagamento - preco)
print(mensagem)
	

-- OUTPUT:
Falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 12:52:09) 
-- CODE:
preco=float(input("Valor do preco: "))
pagamento=float(input("Valor do pagamento: "))
if (preco>=pagamento):
	mensagem = "Falta" +" "+ str(preco - pagamento)
else:
	mensagem = "Troco de" +" "+str(pagamento - preco)
print(mensagem)
	

-- OUTPUT:
Falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 12:52:33) 
-- CODE:
preco=float(input("Valor do preco: "))
pagamento=float(input("Valor do pagamento: "))
if (preco>pagamento):
	mensagem = "Falta" +" "+ str(preco - pagamento)
else:
	mensagem = "Troco de" +" "+str(pagamento - preco)
print(mensagem)
	

-- OUTPUT:
Falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 12:52:43) 
-- CODE:
preco=float(input("Valor do preco: "))
pagamento=float(input("Valor do pagamento: "))
if (preco>pagamento):
	mensagem = "Falta" +" "+ str(preco - pagamento)
else:
	mensagem = "Troco de" +" "+str(pagamento - preco)
print(mensagem)
	

-- EXECUTION TIME:
0.206012
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
