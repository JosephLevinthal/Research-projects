== TEST (2019-04-23 15:36:42) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

maior = max(a, b, c)
menor = min(a, b, c)
meio = (a+b+c) - maior - menor

# Testa se pelo menos uma das entradas eh negativa 
if ((a>0) and
	 (b>0) and
	 (c>0)
	):
		# Testa se medidas correspondem aas de um triangulo
	if (maior < meio + menor):
		if((a==b) and
			(b==c)
		  ):
		  	print("equilatero")
		if((a==b) or
			(a==c) or
			(b==c)
		):
			print(isoceles)
		if(
		):	
		if((a!=b) and
			(a!=c) and
			(b!=c)
		):	
			print("escaleno")
	else:
		print("invalido")
else:
	print("invalido")

-- ERROR:
File "XXXX", line 32
    if((a!=b) and
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 15:37:16) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

maior = max(a, b, c)
menor = min(a, b, c)
meio = (a+b+c) - maior - menor

# Testa se pelo menos uma das entradas eh negativa 
if((a>0) and
	(b>0) and
	(c>0)
	):
		# Testa se medidas correspondem aas de um triangulo
	if (maior < meio + menor):
		if((a==b) and
			(b==c)
		  ):
		  	print("equilatero")
		if((a==b) or
			(a==c) or
			(b==c)
		):
			print(isoceles)
		if(
		):	
		if((a!=b) and
			(a!=c) and
			(b!=c)
		):	
			print("escaleno")
	else:
		print("invalido")
else:
	print("invalido")

-- ERROR:
File "XXXX", line 32
    if((a!=b) and
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 15:38:03) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

maior = max(a, b, c)
menor = min(a, b, c)
meio = (a+b+c) - maior - menor

# Testa se pelo menos uma das entradas eh negativa 
if((a>0) and
	(b>0) and
	(c>0)
	):
		# Testa se medidas correspondem aas de um triangulo
	if (maior < meio + menor):
		if((a==b) and
			(b==c)
		  ):
		  	print("equilatero")
		if((a==b) or
			(a==c) or
			(b==c)
		):
			print(isoceles)
		if((a!=b) and
			(a!=c) and
			(b!=c)
		):	
			print("escaleno")
	else:
		print("invalido")
else:
	print("invalido")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 29, in <module>
    print(isoceles)
NameError: name 'isoceles' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 15:38:17) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

maior = max(a, b, c)
menor = min(a, b, c)
meio = (a+b+c) - maior - menor

# Testa se pelo menos uma das entradas eh negativa 
if((a>0) and
	(b>0) and
	(c>0)
	):
		# Testa se medidas correspondem aas de um triangulo
	if (maior < meio + menor):
		if((a==b) and
			(b==c)
		  ):
		  	print("equilatero")
		if((a==b) or
			(a==c) or
			(b==c)
		):
			print(isoceles)
		if((a!=b) and
			(a!=c) and
			(b!=c)
		):	
			print("escaleno")
	else:
		print("invalido")
else:
	print("invalido")

-- EXECUTION TIME:
0.20894
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1099/main.py", line 29, in <module>
    print(isoceles)
NameError: name 'isoceles' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 15:38:30) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

maior = max(a, b, c)
menor = min(a, b, c)
meio = (a+b+c) - maior - menor

# Testa se pelo menos uma das entradas eh negativa 
if((a>0) and
	(b>0) and
	(c>0)
	):
		# Testa se medidas correspondem aas de um triangulo
	if (maior < meio + menor):
		if((a==b) and
			(b==c)
		  ):
		  	print("equilatero")
		if((a==b) or
			(a==c) or
			(b==c)
		):
			print(isoceles)
		if((a!=b) and
			(a!=c) and
			(b!=c)
		):	
			print("escaleno")
	else:
		print("invalido")
else:
	print("invalido")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 29, in <module>
    print(isoceles)
NameError: name 'isoceles' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 15:38:50) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

maior = max(a, b, c)
menor = min(a, b, c)
meio = (a+b+c) - maior - menor

# Testa se pelo menos uma das entradas eh negativa 
if((a>0) and
	(b>0) and
	(c>0)
	):
		# Testa se medidas correspondem aas de um triangulo
	if (maior < meio + menor):
		if((a==b) and
			(b==c)
		  ):
		  	print("equilatero")
		if((a==b) or
			(a==c) or
			(b==c)
		):
			print("isoceles")
		if((a!=b) and
			(a!=c) and
			(b!=c)
		):	
			print("escaleno")
	else:
		print("invalido")
else:
	print("invalido")

-- EXECUTION TIME:
0.120189
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 15:38:53) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

maior = max(a, b, c)
menor = min(a, b, c)
meio = (a+b+c) - maior - menor

# Testa se pelo menos uma das entradas eh negativa 
if((a>0) and
	(b>0) and
	(c>0)
	):
		# Testa se medidas correspondem aas de um triangulo
	if (maior < meio + menor):
		if((a==b) and
			(b==c)
		  ):
		  	print("equilatero")
		if((a==b) or
			(a==c) or
			(b==c)
		):
			print("isoceles")
		if((a!=b) and
			(a!=c) and
			(b!=c)
		):	
			print("escaleno")
	else:
		print("invalido")
else:
	print("invalido")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 15:42:49) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

maior = max(a, b, c)
menor = min(a, b, c)
meio = (a+b+c) - maior - menor

# Testa se pelo menos uma das entradas eh negativa 
if((a>0) and
	(b>0) and
	(c>0)
	):
		# Testa se medidas correspondem aas de um triangulo
	if (maior < meio + menor):
		if((a==b) and
			(b==c)
		  ):
		  	print("equilatero")
		if((a==b) and
			(a!=c) and
			(b!=c) or
			(a!=b) and
			(a==c) and
			(b!=c) or
			(a!=b) and
			(a!=c) and
			(b==c)
			):
			print("isoceles")
		if((a!=b) and
			(a!=c) and
			(b!=c)
		):	
			print("escaleno")
	else:
		print("invalido")
else:
	print("invalido")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 15:42:57) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

maior = max(a, b, c)
menor = min(a, b, c)
meio = (a+b+c) - maior - menor

# Testa se pelo menos uma das entradas eh negativa 
if((a>0) and
	(b>0) and
	(c>0)
	):
		# Testa se medidas correspondem aas de um triangulo
	if (maior < meio + menor):
		if((a==b) and
			(b==c)
		  ):
		  	print("equilatero")
		if((a==b) and
			(a!=c) and
			(b!=c) or
			(a!=b) and
			(a==c) and
			(b!=c) or
			(a!=b) and
			(a!=c) and
			(b==c)
			):
			print("isoceles")
		if((a!=b) and
			(a!=c) and
			(b!=c)
		):	
			print("escaleno")
	else:
		print("invalido")
else:
	print("invalido")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 15:43:21) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

maior = max(a, b, c)
menor = min(a, b, c)
meio = (a+b+c) - maior - menor

# Testa se pelo menos uma das entradas eh negativa 
if((a>0) and
	(b>0) and
	(c>0)
	):
		# Testa se medidas correspondem aas de um triangulo
	if (maior < meio + menor):
		if((a==b) and
			(b==c)
		  ):
		  	print("equilatero")
		if((a==b) and
			(a!=c) and
			(b!=c) or
			(a!=b) and
			(a==c) and
			(b!=c) or
			(a!=b) and
			(a!=c) and
			(b==c)
			):
			print("isoceles")
		if((a!=b) and
			(a!=c) and
			(b!=c)
		):	
			print("escaleno")
	else:
		print("invalido")
else:
	print("invalido")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 15:43:33) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

maior = max(a, b, c)
menor = min(a, b, c)
meio = (a+b+c) - maior - menor

# Testa se pelo menos uma das entradas eh negativa 
if((a>0) and
	(b>0) and
	(c>0)
	):
		# Testa se medidas correspondem aas de um triangulo
	if (maior < meio + menor):
		if((a==b) and
			(b==c)
		  ):
		  	print("equilatero")
		if((a==b) and
			(a!=c) and
			(b!=c) or
			(a!=b) and
			(a==c) and
			(b!=c) or
			(a!=b) and
			(a!=c) and
			(b==c)
			):
			print("isoceles")
		if((a!=b) and
			(a!=c) and
			(b!=c)
		):	
			print("escaleno")
	else:
		print("invalido")
else:
	print("invalido")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 15:43:41) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

maior = max(a, b, c)
menor = min(a, b, c)
meio = (a+b+c) - maior - menor

# Testa se pelo menos uma das entradas eh negativa 
if((a>0) and
	(b>0) and
	(c>0)
	):
		# Testa se medidas correspondem aas de um triangulo
	if (maior < meio + menor):
		if((a==b) and
			(b==c)
		  ):
		  	print("equilatero")
		if((a==b) and
			(a!=c) and
			(b!=c) or
			(a!=b) and
			(a==c) and
			(b!=c) or
			(a!=b) and
			(a!=c) and
			(b==c)
			):
			print("isoceles")
		if((a!=b) and
			(a!=c) and
			(b!=c)
		):	
			print("escaleno")
	else:
		print("invalido")
else:
	print("invalido")

-- EXECUTION TIME:
0.149458
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 16:50:22) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

maior = max(a, b, c)
menor = min(a, b, c)
meio = (a+b+c) - maior - menor

# Testa se pelo menos uma das entradas eh negativa 
if((a>0) and
	(b>0) and
	(c>0)
	):
		# Testa se medidas correspondem aas de um triangulo
	if (maior < meio + menor):
		if((a==b) and
			(b==c)
		  ):
		  	print("Tipo de triangulo: equilatero")
		if((a==b) and
			(a!=c) and
			(b!=c) or
			(a!=b) and
			(a==c) and
			(b!=c) or
			(a!=b) and
			(a!=c) and
			(b==c)
			):
			print("Tipo de triangulo: isoceles")
		if((a!=b) and
			(a!=c) and
			(b!=c)
		):	
			print("Tipo de triangulo: escaleno")
	else:
		print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")

-- EXECUTION TIME:
0.185113
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 16:50:34) 
-- CODE:
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

maior = max(a, b, c)
menor = min(a, b, c)
meio = (a+b+c) - maior - menor

# Testa se pelo menos uma das entradas eh negativa 
if((a>0) and
	(b>0) and
	(c>0)
	):
		# Testa se medidas correspondem aas de um triangulo
	if (maior < meio + menor):
		if((a==b) and
			(b==c)
		  ):
		  	print("Tipo de triangulo: equilatero")
		if((a==b) and
			(a!=c) and
			(b!=c) or
			(a!=b) and
			(a==c) and
			(b!=c) or
			(a!=b) and
			(a!=c) and
			(b==c)
			):
			print("Tipo de triangulo: isoceles")
		if((a!=b) and
			(a!=c) and
			(b!=c)
		):	
			print("Tipo de triangulo: escaleno")
	else:
		print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 16:51:37) 
-- CODE:
# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

maior = max(a, b, c)
menor = min(a, b, c)
meio = (a+b+c) - maior - menor

# Testa se pelo menos uma das entradas eh negativa 
if((a>0) and
	(b>0) and
	(c>0)
	):
		# Testa se medidas correspondem aas de um triangulo
	if (maior < meio + menor):
		if((a==b) and
			(b==c)
		  ):
		  	print("Tipo de triangulo: equilatero")
		if((a==b) and
			(a!=c) and
			(b!=c) or
			(a!=b) and
			(a==c) and
			(b!=c) or
			(a!=b) and
			(a!=c) and
			(b==c)
			):
			print("Tipo de triangulo: isoceles")
		if((a!=b) and
			(a!=c) and
			(b!=c)
		):	
			print("Tipo de triangulo: escaleno")
	else:
		print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")

-- EXECUTION TIME:
0.137733
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 16:51:51) 
-- CODE:
# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

maior = max(a, b, c)
menor = min(a, b, c)
meio = (a+b+c) - maior - menor

# Testa se pelo menos uma das entradas eh negativa 
if((a>0) and
	(b>0) and
	(c>0)
	):
		# Testa se medidas correspondem aas de um triangulo
	if (maior < meio + menor):
		if((a==b) and
			(b==c)
		  ):
		  	print("Tipo de triangulo: equilatero")
		if((a==b) and
			(a!=c) and
			(b!=c) or
			(a!=b) and
			(a==c) and
			(b!=c) or
			(a!=b) and
			(a!=c) and
			(b==c)
			):
			print("Tipo de triangulo: isoceles")
		if((a!=b) and
			(a!=c) and
			(b!=c)
		):	
			print("Tipo de triangulo: escaleno")
	else:
		print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 16:53:24) 
-- CODE:
# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

maior = max(a, b, c)
menor = min(a, b, c)
meio = (a+b+c) - maior - menor

# Testa se pelo menos uma das entradas eh negativa 
if((a>0) and
	(b>0) and
	(c>0)
	):
		# Testa se medidas correspondem aas de um triangulo
	if (maior < meio + menor):
		if((a==b) and
			(b==c)
		  ):
		  	print("Tipo de triangulo: equilatero")
		if((a==b) and
			(a!=c) and
			(b!=c) or
			(a!=b) and
			(a==c) and
			(b!=c) or
			(a!=b) and
			(a!=c) and
			(b==c)
			):
			print("Tipo de triangulo: isoceles")
		if((a!=b) and
			(a!=c) and
			(b!=c)
		):	
			print("Tipo de triangulo: escaleno")
	else:
		print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 16:54:22) 
-- CODE:
# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

maior = max(a, b, c)
menor = min(a, b, c)
meio = (a+b+c) - maior - menor

# Testa se pelo menos uma das entradas eh negativa 
if((a>0) and
	(b>0) and
	(c>0)
	):
		# Testa se medidas correspondem aas de um triangulo
	if (maior < meio + menor):
		if((a==b) and
			(b==c)
		  ):
		  	print("Entradas:", a, ",", b, ",", c)
			print("Tipo de triangulo: equilatero")
		if((a==b) and
			(a!=c) and
			(b!=c) or
			(a!=b) and
			(a==c) and
			(b!=c) or
			(a!=b) and
			(a!=c) and
			(b==c)
			):
			print("Tipo de triangulo: isoceles")
		if((a!=b) and
			(a!=c) and
			(b!=c)
		):	
			print("Tipo de triangulo: escaleno")
	else:
		print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")

-- ERROR:
File "XXXX", line 21
    print("Tipo de triangulo: equilatero")
                                         ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 16:55:22) 
-- CODE:
# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

maior = max(a, b, c)
menor = min(a, b, c)
meio = (a+b+c) - maior - menor

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if((a>0) and
	(b>0) and
	(c>0)
	):
		# Testa se medidas correspondem aas de um triangulo
	if (maior < meio + menor):
		if((a==b) and
			(b==c)
		  ):
		  	print("Tipo de triangulo: equilatero")
		if((a==b) and
			(a!=c) and
			(b!=c) or
			(a!=b) and
			(a==c) and
			(b!=c) or
			(a!=b) and
			(a!=c) and
			(b==c)
			):
			print("Tipo de triangulo: isoceles")
		if((a!=b) and
			(a!=c) and
			(b!=c)
		):	
			print("Tipo de triangulo: escaleno")
	else:
		print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:07:19) 
-- CODE:
# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if((a>0) and
	(b>0) and
	(c>0)
	):
		# Testa se medidas correspondem aas de um triangulo
	if (a >= b + c) or (b >= a + c) or (c >= a + b):
		if((a==b) and
			(b==c)
		  ):
		  	print("Tipo de triangulo: equilatero")
		if((a==b) or
			(a==c) or
			(b==c)
			):
			print("Tipo de triangulo: isoceles")
		
		else:	
			print("Tipo de triangulo: escaleno")
	else:
		print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:09:32) 
-- CODE:
# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if((a>0) and
	(b>0) and
	(c>0)
	):
		# Testa se medidas correspondem aas de um triangulo
	if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
		
		if((a==b) and
			(b==c)
		  ):
		  	print("Tipo de triangulo: equilatero")
		if((a==b) or
			(a==c) or
			(b==c)
			):
			print("Tipo de triangulo: isoceles")
		
		else:	
			print("Tipo de triangulo: escaleno")
	else:
		print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:12:51) 
-- CODE:
# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if((a>0) and
	(b>0) and
	(c>0)
	):
		# Testa se medidas correspondem aas de um triangulo
	if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
		print("Tipo de triangulo: invalido")
	else: 		
		if((a==b) and
			(b==c)
		  ):
		  	print("Tipo de triangulo: equilatero")
		if((a==b) or
			(a==c) or
			(b==c)
			):
			print("Tipo de triangulo: isoceles")
		
		else:	
			print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 17:13:04) 
-- CODE:
# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if((a>0) and
	(b>0) and
	(c>0)
	):
		# Testa se medidas correspondem aas de um triangulo
	if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
		print("Tipo de triangulo: invalido")
	else: 		
		if((a==b) and
			(b==c)
		  ):
		  	print("Tipo de triangulo: equilatero")
		if((a==b) or
			(a==c) or
			(b==c)
			):
			print("Tipo de triangulo: isoceles")
		
		else:	
			print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")

-- EXECUTION TIME:
0.197047
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:13:13) 
-- CODE:
# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if((a>0) and
	(b>0) and
	(c>0)
	):
		# Testa se medidas correspondem aas de um triangulo
	if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
		print("Tipo de triangulo: invalido")
	else: 		
		if((a==b) and
			(b==c)
		  ):
		  	print("Tipo de triangulo: equilatero")
		if((a==b) or
			(a==c) or
			(b==c)
			):
			print("Tipo de triangulo: isoceles")
		
		else:	
			print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 17:13:47) 
-- CODE:
# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if(a>0) and (b>0) and (c>0):
	
		# Testa se medidas correspondem aas de um triangulo
	if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
		print("Tipo de triangulo: invalido")
	else: 		
		if((a==b) and
			(b==c)
		  ):
		  	print("Tipo de triangulo: equilatero")
		if((a==b) or
			(a==c) or
			(b==c)
			):
			print("Tipo de triangulo: isoceles")
		
		else:	
			print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")

-- EXECUTION TIME:
0.143003
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:13:49) 
-- CODE:
# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if(a>0) and (b>0) and (c>0):
	
		# Testa se medidas correspondem aas de um triangulo
	if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
		print("Tipo de triangulo: invalido")
	else: 		
		if((a==b) and
			(b==c)
		  ):
		  	print("Tipo de triangulo: equilatero")
		if((a==b) or
			(a==c) or
			(b==c)
			):
			print("Tipo de triangulo: isoceles")
		
		else:	
			print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:14:02) 
-- CODE:
# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if(a>0) and (b>0) and (c>0):
	
		# Testa se medidas correspondem aas de um triangulo
	if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
		print("Tipo de triangulo: invalido")
	else: 		
		if((a==b) and
			(b==c)
		  ):
		  	print("Tipo de triangulo: equilatero")
		if((a==b) or
			(a==c) or
			(b==c)
			):
			print("Tipo de triangulo: isoceles")
		
		else:	
			print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:14:48) 
-- CODE:
# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if(a>0) and (b>0) and (c>0):
	
		# Testa se medidas correspondem aas de um triangulo
	if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
		print("Tipo de triangulo: invalido")
	else: 		
		if((a==b) and
			(b==c)
		  ):
		  	print("Tipo de triangulo: equilatero")
		if((a==b) or
			(a==c) or
			(b==c)
			):
			print("Tipo de triangulo: isoceles")
		
		else:	
			print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:17:34) 
-- CODE:
# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if(a>0) and (b>0) and (c>0):
	
		# Testa se medidas correspondem aas de um triangulo
	if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
		print("Tipo de triangulo: invalido")
	
	else: 		
		if(a==b) and (b==c):
		  	print("Tipo de triangulo: equilatero")
		
		else:
			if (a==b) or (a==c) or (b==c):
				print("Tipo de triangulo: isoceles")
			else:
				print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 17:18:12) 
-- CODE:
# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if(a>0) and (b>0) and (c>0):
	
		# Testa se medidas correspondem aas de um triangulo
	if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
		print("Tipo de triangulo: invalido")
	
	else: 		
		if(a==b) and (b==c):
		  	print("Tipo de triangulo: equilatero")
		
		else:
			if (a==b) or (a==c) or (b==c):
				print("Tipo de triangulo: isoceles")
			else:
				print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")

-- EXECUTION TIME:
0.138698
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:21:57) 
-- CODE:
# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if(a>0) and (b>0) and (c>0):
	
		# Testa se medidas correspondem aas de um triangulo
	if (a >= b + c) or (b >= a + c) or (c >= a + b) or (a<0) or (b<0) or (c<0):
		print("Tipo de triangulo: invalido")
	
	else: 		
		if(a==b) and (b==c):
		  	print("Tipo de triangulo: equilatero")
		
		else:
			if (a==b) or (a==c) or (b==c):
				print("Tipo de triangulo: isoceles")
			else:
				print("Tipo de triangulo: escaleno")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:22:47) 
-- CODE:
# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se medidas correspondem aas de um triangulo
if (a >= b + c) or (b >= a + c) or (c >= a + b) or (a<0) or (b<0) or (c<0):
	print("Tipo de triangulo: invalido")
	
else: 		
	if(a==b) and (b==c):
	  	print("Tipo de triangulo: equilatero")
	
	else:
		if (a==b) or (a==c) or (b==c):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:22:55) 
-- CODE:
# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se medidas correspondem aas de um triangulo
if (a >= b + c) or (b >= a + c) or (c >= a + b) or (a<0) or (b<0) or (c<0):
	print("Tipo de triangulo: invalido")
	
else: 		
	if(a==b) and (b==c):
	  	print("Tipo de triangulo: equilatero")
	
	else:
		if (a==b) or (a==c) or (b==c):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 17:23:18) 
-- CODE:
# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se medidas correspondem aas de um triangulo
if (a >= b + c) or (b >= a + c) or (c >= a + b) or (a<0) or (b<0) or (c<0):
	print("Tipo de triangulo: invalido")
	
else: 		
	if(a==b) and (b==c):
	  	print("Tipo de triangulo: equilatero")
	
	else:
		if (a==b) or (a==c) or (b==c):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")

-- EXECUTION TIME:
0.154439
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:26:13) 
-- CODE:
# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas: ", a, ",", b, ",", c)

# Testa se medidas correspondem aas de um triangulo
if (a >= b + c) or (b >= a + c) or (c >= a + b) or (a < 0) or (b < 0) or (c < 0):
	print("Tipo de triangulo: invalido")
	
else: 		
	if(a==b) and (b==c):
	  	print("Tipo de triangulo: equilatero")
	
	else:
		if(a==b) or (a==c) or (b==c):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")

-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:26:24) 
-- CODE:
# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas: ", a, ",", b, ",", c)

# Testa se medidas correspondem aas de um triangulo
if (a >= b + c) or (b >= a + c) or (c >= a + b) or (a < 0) or (b < 0) or (c < 0):
	print("Tipo de triangulo: invalido")
	
else: 		
	if(a==b) and (b==c):
	  	print("Tipo de triangulo: equilatero")
	
	else:
		if(a==b) or (a==c) or (b==c):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")

-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:26:44) 
-- CODE:
# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas: ", a, ",", b, ",", c)

# Testa se medidas correspondem aas de um triangulo
if (a >= b + c) or (b >= a + c) or (c >= a + b) or (a < 0) or (b < 0) or (c < 0):
	print("Tipo de triangulo: invalido")
	
else: 		
	if(a==b) and (b==c):
	  	print("Tipo de triangulo: equilatero")
	
	else:
		if(a==b) or (a==c) or (b==c):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")

-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:26:54) 
-- CODE:
# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas: ", a, ",", b, ",", c)

# Testa se medidas correspondem aas de um triangulo
if (a >= b + c) or (b >= a + c) or (c >= a + b) or (a < 0) or (b < 0) or (c < 0):
	print("Tipo de triangulo: invalido")
	
else: 		
	if(a==b) and (b==c):
	  	print("Tipo de triangulo: equilatero")
	
	else:
		if(a==b) or (a==c) or (b==c):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")

-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:27:06) 
-- CODE:
# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas: ", a, ",", b, ",", c)

# Testa se medidas correspondem aas de um triangulo
if (a >= b + c) or (b >= a + c) or (c >= a + b) or (a < 0) or (b < 0) or (c < 0):
	print("Tipo de triangulo: invalido")
	
else: 		
	if(a==b) and (b==c):
	  	print("Tipo de triangulo: equilatero")
	
	else:
		if(a==b) or (a==c) or (b==c):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")

-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:27:34) 
-- CODE:
# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas: ", a, ",", b, ",", c)

# Testa se medidas correspondem aas de um triangulo
if ((a >= b + c) or (b >= a + c) or (c >= a + b) or (a < 0) or (b < 0) or (c < 0)):
	print("Tipo de triangulo: invalido")
	
else: 		
	if(a==b) and (b==c):
	  	print("Tipo de triangulo: equilatero")
	
	else:
		if(a==b) or (a==c) or (b==c):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")

-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:30:31) 
-- CODE:
# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas: ", a, ",", b, ",", c)

# Testa se medidas correspondem aas de um triangulo
if ((a >= b + c) or (b >= a + c) or (c >= a + b) or (a < 0) or (b < 0) or (c < 0)):
	print("Tipo de triangulo: invalido")
	
else: 		
	if(a==b) and (b==c):
	  	print("Tipo de triangulo: equilatero")
	
	else:
		if(a==b) or (b==c) or (c==a):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")

-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:31:26) 
-- CODE:
# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas: ", a, ",", b, ",", c)

# Testa se medidas correspondem aas de um triangulo
if ((a >= b + c) or (b >= a + c) or (c >= a + b) or (a < 0) or (b < 0) or (c < 0)):
	print("Tipo de triangulo: invalido")
	
else: 		
	if(a==b) and (b==c):
	  	print("Tipo de triangulo: equilatero")
	
	else:
		if(a==b) or (b==c) or (c==a):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")

-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:31:39) 
-- CODE:
# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas: ", a, ",", b, ",", c)

# Testa se medidas correspondem aas de um triangulo
if ((a >= b + c) or (b >= a + c) or (c >= a + b) or (a < 0) or (b < 0) or (c < 0)):
	print("Tipo de triangulo: invalido")
	
else: 		
	if(a==b) and (b==c):
	  	print("Tipo de triangulo: equilatero")
	
	else:
		if(a==b) or (b==c) or (c==a):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")

-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:32:02) 
-- CODE:
# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas: ", a, ",", b, ",", c)

# Testa se medidas correspondem aas de um triangulo
if ((a >= b + c) or (b >= a + c) or (c >= a + b) or (a < 0) or (b < 0) or (c < 0)):
	print("Tipo de triangulo: invalido")
	
else: 		
	if(a==b) and (b==c):
	  	print("Tipo de triangulo: equilatero")
	
	else:
		if(a==b) or (b==c) or (c==a):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")

-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:32:11) 
-- CODE:
# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas: ", a, ",", b, ",", c)

# Testa se medidas correspondem aas de um triangulo
if ((a >= b + c) or (b >= a + c) or (c >= a + b) or (a < 0) or (b < 0) or (c < 0)):
	print("Tipo de triangulo: invalido")
	
else: 		
	if(a==b) and (b==c):
	  	print("Tipo de triangulo: equilatero")
	
	else:
		if(a==b) or (b==c) or (c==a):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")

-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:35:12) 
-- CODE:
# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas: ", round(a,1), ",", round(b,1), ",", round(c,1))

# Testa se medidas correspondem aas de um triangulo
if ((a >= b + c) or (b >= a + c) or (c >= a + b) or (a < 0) or (b < 0) or (c < 0)):
	print("Tipo de triangulo: invalido")
	
else: 		
	if(a==b) and (b==c):
	  	print("Tipo de triangulo: equilatero")
	
	else:
		if(a==b) or (b==c) or (c==a):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")

-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 17:35:22) 
-- CODE:
# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas: ", round(a,1), ",", round(b,1), ",", round(c,1))

# Testa se medidas correspondem aas de um triangulo
if ((a >= b + c) or (b >= a + c) or (c >= a + b) or (a < 0) or (b < 0) or (c < 0)):
	print("Tipo de triangulo: invalido")
	
else: 		
	if(a==b) and (b==c):
	  	print("Tipo de triangulo: equilatero")
	
	else:
		if(a==b) or (b==c) or (c==a):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")

-- EXECUTION TIME:
0.169076
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:35:55) 
-- CODE:
# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas: ", round(a,1), ",", round(b,1), ",", round(c,1))

# Testa se medidas correspondem aas de um triangulo
if ((a >= b + c) or (b >= a + c) or (c >= a + b) or (a < 0) or (b < 0) or (c < 0)):
	print("Tipo de triangulo: invalido")
	
else: 		
	if(a==b) and (b==c):
	  	print("Tipo de triangulo: equilatero")
	
	else:
		if(a==b) or (b==c) or (c==a):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")

-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 17:37:44) 
-- CODE:
# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas: ", round(a,1), ",", round(b,1), ",", round(c,1))

# Testa se medidas correspondem aas de um triangulo
if ((a >= b + c) or (b >= a + c) or (c >= a + b) or (a < 0) or (b < 0) or (c < 0)):
	print("Tipo de triangulo: invalido")
	
else: 		
	if(a==b) and (b==c):
	  	print("Tipo de triangulo: equilatero")
	
	else:
		if(a==b) or (b==c) or (c==a):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")

-- EXECUTION TIME:
0.175046
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
