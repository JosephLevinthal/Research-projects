== TEST (2019-03-26 17:06:09) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(5)

# Impressao do dobro do numero
print(num*2)
-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:06:13) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(5)

# Impressao do dobro do numero
print(num*2)
-- EXECUTION TIME:
0.155172
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
10
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:07:09) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(5)

# Impressao do dobro do numero
print int(num*2)
-- EXECUTION TIME:
0.192231
-- ERROR:
  File "/home/codebench/codes/1582/2897/main.py", line 7
    print int(num*2)
            ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:07:11) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(5)

# Impressao do dobro do numero
print int(num*2)
-- ERROR:
File "XXXX", line 7
    print int(num*2)
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:07:19) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(5)

# Impressao do dobro do numero
print(num*2)
-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:07:27) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(5)

# Impressao do dobro do numero
print(num*2)
-- EXECUTION TIME:
0.14293
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
10
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:08:15) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int("digite um numero: ")

# Impressao do dobro do numero
print(num*2)
-- EXECUTION TIME:
0.206577
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1582/2897/main.py", line 4, in <module>
    num = int("digite um numero: ")
ValueError: invalid literal for int() with base 10: 'digite um numero: '

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:08:18) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int("digite um numero: ")

# Impressao do dobro do numero
print(num*2)
-- EXECUTION TIME:
0.13503
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1582/2897/main.py", line 4, in <module>
    num = int("digite um numero: ")
ValueError: invalid literal for int() with base 10: 'digite um numero: '

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:08:20) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int("digite um numero: ")

# Impressao do dobro do numero
print(num*2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    num = int("digite um numero: ")
ValueError: invalid literal for int() with base 10: 'digite um numero: '
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:08:45) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("digite um numero: "))

# Impressao do dobro do numero
print(num*2)
-- OUTPUT:
2468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:08:52) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("digite um numero: "))

# Impressao do dobro do numero
print(num*2)
-- EXECUTION TIME:
0.157447
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
2468
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
888
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
