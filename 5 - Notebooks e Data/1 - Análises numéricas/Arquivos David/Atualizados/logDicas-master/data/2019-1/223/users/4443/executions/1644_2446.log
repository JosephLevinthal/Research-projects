== TEST (2019-04-16 07:46:04) 
-- CODE:
# Leitura da senha do usuario
senha = int(input("Digite uma senha com 6 digitos: ")

#separacao dos digitos por posica:
1 = senha//10000
print(1)				
-- ERROR:
File "XXXX", line 5
    1 = senha//10000
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 07:46:21) 
-- CODE:
# Leitura da senha do usuario
senha = int(input("Digite uma senha com 6 digitos: ")

#separacao dos digitos por posica:
p1 = senha//10000
print(1)				
-- ERROR:
File "XXXX", line 5
    p1 = senha//10000
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 07:52:38) 
-- CODE:
# Leitura da senha do usuario
senha = int(input("Digite uma senha com 6 digitos: ")

#separacao dos digitos por posica:
p = senha//10000
print(p)				
-- ERROR:
File "XXXX", line 5
    p = senha//10000
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 07:53:07) 
-- CODE:
# Leitura da senha do usuario
senha = int(input("Digite uma senha com 6 digitos: ")

#separacao dos digitos por posica:
p = senha//10000
print(p)				
-- ERROR:
File "XXXX", line 5
    p = senha//10000
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 07:53:16) 
-- CODE:
# Leitura da senha do usuario
senha = int(input("Digite uma senha com 6 digitos: ")

#separacao dos digitos por posica:
x = senha//10000
print(p)				
-- ERROR:
File "XXXX", line 5
    x = senha//10000
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 07:53:30) 
-- CODE:
# Leitura da senha do usuario
senha = int(input("Digite uma senha com 6 digitos: ")

#separacao dos digitos por posica:
print(senha)				
-- ERROR:
File "XXXX", line 5
    print(senha)				
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 07:54:41) 
-- CODE:
# Leitura da senha do usuario
senha = int(input("Digite uma senha com 6 digitos: ")

#separacao dos digitos por posica:
print(senha)				
-- ERROR:
File "XXXX", line 5
    print(senha)				
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 07:55:01) 
-- CODE:
# Leitura da senha do usuario
senha = int(input("Digite uma senha com 6 digitos: ")
print(senha)				
-- ERROR:
File "XXXX", line 3
    print(senha)				
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 07:55:14) 
-- CODE:
# Leitura da senha do usuario
senha = int(input("Digite uma senha com 6 digitos: ")

-- ERROR:
File "XXXX", line 3
    
                       ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 07:55:29) 
-- CODE:
# Leitura da senha do usuario
senha = int(input("Digite uma senha com 6 digitos: ")
print(senha)
-- ERROR:
File "XXXX", line 3
    print(senha)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 07:56:16) 
-- CODE:
# Leitura da senha do usuario
#senha = int(input("Digite uma senha com 6 digitos: ")
x = 1
print(x)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 07:56:41) 
-- CODE:
# Leitura da senha do usuario
x = int(input("Digite uma senha com 6 digitos: ")
print(x)
-- ERROR:
File "XXXX", line 3
    print(x)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 07:57:08) 
-- CODE:
# Leitura da senha do usuario
x = int(input("Digite uma senha com 6 digitos: ")

-- ERROR:
File "XXXX", line 3
    
                   ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 07:58:04) 
-- CODE:
# Leitura da senha do usuario
senha = int(input("Digite uma senha com 6 digitos: ")
x = senha/10
print(x)
-- ERROR:
File "XXXX", line 3
    x = senha/10
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 07:59:20) 
-- CODE:
senha = int(input("Digite uma senha com 6 digitos: "))
x = senha/10
print(x)
-- OUTPUT:
8761.2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:02:19) 
-- CODE:
#Coleta da senha do usuario
senha = int(input("Digite uma senha com 6 digitos: "))

#Separacao dos numeros por posicao
x = senha/100000
print(x)
-- OUTPUT:
0.87612
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:03:19) 
-- CODE:
#Coleta da senha do usuario
senha = int(input("Digite uma senha com 6 digitos: "))

#Separacao dos numeros por posicao
p = senha/100000
rp = senha%100000
s = rp/100000
print(s)
-- OUTPUT:
0.87612
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:03:37) 
-- CODE:
#Coleta da senha do usuario
senha = int(input("Digite uma senha com 6 digitos: "))

#Separacao dos numeros por posicao
p = senha/100000
rp = senha%100000
s = rp/10000
print(s)
-- OUTPUT:
8.7612
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:06:49) 
-- CODE:
#Coleta da senha do usuario
senha = int(input("Digite uma senha com 6 digitos: "))

#Separacao dos numeros por posicao
p = senha/100000
rp = senha%100000
s = rp/10000
rs = s%10000
t = rs/1000
rt = t%1000
q = rt/100
rq = q%100
qui = rq/10
sex = qui%10
print(sex)
-- OUTPUT:
8.7612e-06
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:07:30) 
-- CODE:
#Coleta da senha do usuario
senha = int(input("Digite uma senha com 6 digitos: "))

#Separacao dos numeros por posicao
p = senha/100000
rp = senha%100000
s = rp/10000
rs = s%10000
t = rs/1000
rt = t%1000
q = rt/100
rq = q%100
qui = rq/10
sex = qui%10
print(s)
-- OUTPUT:
8.7612
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:07:46) 
-- CODE:
#Coleta da senha do usuario
senha = int(input("Digite uma senha com 6 digitos: "))

#Separacao dos numeros por posicao
p = senha/100000
rp = senha%100000
s = rp/10000
rs = s%10000
t = rs/1000
rt = t%1000
q = rt/100
rq = q%100
qui = rq/10
sex = qui%10
print(rs)
-- OUTPUT:
8.7612
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:08:59) 
-- CODE:
#Coleta da senha do usuario
senha = int(input("Digite uma senha com 6 digitos: "))

#Separacao dos numeros por posicao
p = senha/100000
rp = senha%100000
s = rp/10000
rs = s%10000
t = rs/1000
rt = t%1000
q = rt/100
rq = q%100
qui = rq/10
sex = qui%10
print(s)
-- OUTPUT:
8.7612
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:09:50) 
-- CODE:
#Coleta da senha do usuario
senha = int(input("Digite uma senha com 6 digitos: "))

#Separacao dos numeros por posicao
p = senha/100000
rp = senha%100000
s = rp/10000
rs = rp % 10000
t = rs/1000
rt = t%1000
q = rt/100
rq = q%100
qui = rq/10
sex = qui%10
print(s)
-- OUTPUT:
8.7612
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:10:09) 
-- CODE:
#Coleta da senha do usuario
senha = int(input("Digite uma senha com 6 digitos: "))

#Separacao dos numeros por posicao
p = senha/100000
rp = senha%100000
s = rp/10000
rs = rp % 10000
t = rs/1000
rt = t%1000
q = rt/100
rq = q%100
qui = rq/10
sex = qui%10
print(rs)
-- OUTPUT:
7612
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:11:06) 
-- CODE:
#Coleta da senha do usuario
senha = int(input("Digite uma senha com 6 digitos: "))

#Separacao dos numeros por posicao
p = senha/100000
rp = senha%100000
s = rp/10000
rs = rp % 10000
t = rs/1000
rt = rs%1000
q = rt/100
rq = rt%100
qui = rq/10
sex = rq%10
print(sex)
-- OUTPUT:
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:12:05) 
-- CODE:
#Coleta da senha do usuario
senha = int(input("Digite uma senha com 6 digitos: "))

#Separacao dos numeros por posicao
p = senha/100000
rp = senha%100000
s = rp/10000
rs = rp % 10000
t = rs/1000
rt = rs%1000
q = rt/100
rq = rt%100
qui = rq/10
sex = rq%10
#Soma das posicoes pares
par = s+q+sex
print(par)
-- OUTPUT:
16.8812
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:12:50) 
-- CODE:
#Coleta da senha do usuario
senha = int(input("Digite uma senha com 6 digitos: "))

#Separacao dos numeros por posicao
p = senha/100000
rp = senha%100000
s = rp/10000
rs = rp % 10000
t = rs/1000
rt = rs%1000
q = rt/100
rq = rt%100
qui = rq/10
sex = rq%10
#Soma das posicoes pares
par = s+q+sex
print(par)
-- OUTPUT:
16.8812
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:13:19) 
-- CODE:
#Coleta da senha do usuario
senha = int(input("Digite uma senha com 6 digitos: "))

#Separacao dos numeros por posicao
p = senha/100000
rp = senha%100000
s = rp/10000
rs = rp % 10000
t = rs/1000
rt = rs%1000
q = rt/100
rq = rt%100
qui = rq/10
sex = rq%10
#Soma das posicoes pares
print(s)
print(q)
print(sex)
-- OUTPUT:
8.7612
6.12
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:13:58) 
-- CODE:
#Coleta da senha do usuario
senha = int(input("Digite uma senha com 6 digitos: "))

#Separacao dos numeros por posicao
p = senha//100000
rp = senha%100000
s = rp//10000
rs = rp % 10000
t = rs//1000
rt = rs%1000
q = rt//100
rq = rt%100
qui = rq//10
sex = rq%10
#Soma das posicoes pares
print(s)
print(q)
print(sex)
-- OUTPUT:
8
6
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:14:16) 
-- CODE:
#Coleta da senha do usuario
senha = int(input("Digite uma senha com 6 digitos: "))

#Separacao dos numeros por posicao
p = senha//100000
rp = senha%100000
s = rp//10000
rs = rp % 10000
t = rs//1000
rt = rs%1000
q = rt//100
rq = rt%100
qui = rq//10
sex = rq%10
#Soma das posicoes pares
print(p)
print(t)
print(qui)
-- OUTPUT:
0
7
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:14:42) 
-- CODE:
#Coleta da senha do usuario
senha = int(input("Digite uma senha com 6 digitos: "))

#Separacao dos numeros por posicao
p = senha//100000
rp = senha%100000
s = rp//10000
rs = rp % 10000
t = rs//1000
rt = rs%1000
q = rt//100
rq = rt%100
qui = rq//10
sex = rq%10
#Soma das posicoes pares
par = print(s + q + sex)
-- OUTPUT:
16
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:15:35) 
-- CODE:
#Coleta da senha do usuario
senha = int(input("Digite uma senha com 6 digitos: "))

#Separacao dos numeros por posicao
p = senha//100000
rp = senha%100000
s = rp//10000
rs = rp % 10000
t = rs//1000
rt = rs%1000
q = rt//100
rq = rt%100
qui = rq//10
sex = rq%10
#Soma das posicoes pares
par = s + q + sex
impar = p + t + qui
print(par)
print(impar)
-- OUTPUT:
16
8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:18:17) 
-- CODE:
#Coleta da senha do usuario
senha = int(input("Digite uma senha com 6 digitos: "))

#Separacao dos numeros por posicao
p = senha//100000
rp = senha%100000
s = rp//10000
rs = rp % 10000
t = rs//1000
rt = rs%1000
q = rt//100
rq = rt%100
qui = rq//10
sex = rq%10
#Soma das posicoes pares
par = s + q + sex
impar = p + t + qui
print(par)
print(impar)
#verificacao da senha
inf(par/impar == 0):
	print("ok")
else:
	print("nok")
-- ERROR:
File "XXXX", line 21
    inf(par/impar == 0):
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:18:28) 
-- CODE:
#Coleta da senha do usuario
senha = int(input("Digite uma senha com 6 digitos: "))

#Separacao dos numeros por posicao
p = senha//100000
rp = senha%100000
s = rp//10000
rs = rp % 10000
t = rs//1000
rt = rs%1000
q = rt//100
rq = rt%100
qui = rq//10
sex = rq%10
#Soma das posicoes pares
par = s + q + sex
impar = p + t + qui
print(par)
print(impar)
#verificacao da senha
if(par/impar == 0):
	print("ok")
else:
	print("nok")
-- OUTPUT:
16
8
nok
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:18:41) 
-- CODE:
#Coleta da senha do usuario
senha = int(input("Digite uma senha com 6 digitos: "))

#Separacao dos numeros por posicao
p = senha//100000
rp = senha%100000
s = rp//10000
rs = rp % 10000
t = rs//1000
rt = rs%1000
q = rt//100
rq = rt%100
qui = rq//10
sex = rq%10
#Soma das posicoes pares
par = s + q + sex
impar = p + t + qui
print(par)
print(impar)
#verificacao da senha
if(par/impar == 0):
	print("ok")
else:
	print("nok")
-- OUTPUT:
16
8
nok
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:19:16) 
-- CODE:
#Coleta da senha do usuario
senha = int(input("Digite uma senha com 6 digitos: "))

#Separacao dos numeros por posicao
p = senha//100000
rp = senha%100000
s = rp//10000
rs = rp % 10000
t = rs//1000
rt = rs%1000
q = rt//100
rq = rt%100
qui = rq//10
sex = rq%10
#Soma das posicoes pares
par = s + q + sex
impar = p + t + qui
print(par)
print(impar)
#verificacao da senha
if(par%impar == 0):
	print("ok")
else:
	print("nok")
-- OUTPUT:
16
8
ok
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:19:28) 
-- CODE:
#Coleta da senha do usuario
senha = int(input("Digite uma senha com 6 digitos: "))

#Separacao dos numeros por posicao
p = senha//100000
rp = senha%100000
s = rp//10000
rs = rp % 10000
t = rs//1000
rt = rs%1000
q = rt//100
rq = rt%100
qui = rq//10
sex = rq%10
#Soma das posicoes pares
par = s + q + sex
impar = p + t + qui
print(par)
print(impar)
#verificacao da senha
if(par%impar == 0):
	print("ok")
else:
	print("nok")
-- OUTPUT:
16
8
ok
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:19:40) 
-- CODE:
#Coleta da senha do usuario
senha = int(input("Digite uma senha com 6 digitos: "))

#Separacao dos numeros por posicao
p = senha//100000
rp = senha%100000
s = rp//10000
rs = rp % 10000
t = rs//1000
rt = rs%1000
q = rt//100
rq = rt%100
qui = rq//10
sex = rq%10
#Soma das posicoes pares
par = s + q + sex
impar = p + t + qui
print(par)
print(impar)
#verificacao da senha
if(par%impar == 0):
	print("ok")
else:
	print("nok")
-- OUTPUT:
16
8
ok
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:20:15) 
-- CODE:
#Coleta da senha do usuario
senha = int(input("Digite uma senha com 6 digitos: "))

#Separacao dos numeros por posicao
p = senha//100000
rp = senha%100000
s = rp//10000
rs = rp % 10000
t = rs//1000
rt = rs%1000
q = rt//100
rq = rt%100
qui = rq//10
sex = rq%10
#Soma das posicoes pares
par = s + q + sex
impar = p + t + qui
print(par)
print(impar)
#verificacao da senha
if(par%impar == 0):
	if(impar%par == 0):
	print("ok")
else:
	print("nok")
-- ERROR:
File "XXXX", line 23
    print("ok")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:20:24) 
-- CODE:
#Coleta da senha do usuario
senha = int(input("Digite uma senha com 6 digitos: "))

#Separacao dos numeros por posicao
p = senha//100000
rp = senha%100000
s = rp//10000
rs = rp % 10000
t = rs//1000
rt = rs%1000
q = rt//100
rq = rt%100
qui = rq//10
sex = rq%10
#Soma das posicoes pares
par = s + q + sex
impar = p + t + qui
print(par)
print(impar)
#verificacao da senha
if(par%impar == 0):
	if(impar%par == 0):
		print("ok")
else:
	print("nok")
-- OUTPUT:
16
8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:20:33) 
-- CODE:
#Coleta da senha do usuario
senha = int(input("Digite uma senha com 6 digitos: "))

#Separacao dos numeros por posicao
p = senha//100000
rp = senha%100000
s = rp//10000
rs = rp % 10000
t = rs//1000
rt = rs%1000
q = rt//100
rq = rt%100
qui = rq//10
sex = rq%10
#Soma das posicoes pares
par = s + q + sex
impar = p + t + qui
print(par)
print(impar)
#verificacao da senha
if(par%impar == 0):
	if(impar%par == 0):
		print("ok")
else:
	print("nok")
-- OUTPUT:
16
8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:20:58) 
-- CODE:
#Coleta da senha do usuario
senha = int(input("Digite uma senha com 6 digitos: "))

#Separacao dos numeros por posicao
p = senha//100000
rp = senha%100000
s = rp//10000
rs = rp % 10000
t = rs//1000
rt = rs%1000
q = rt//100
rq = rt%100
qui = rq//10
sex = rq%10
#Soma das posicoes pares
par = s + q + sex
impar = p + t + qui
print(par)
print(impar)
#verificacao da senha
if(par%impar == 0):
	if(impar%par == 0):
		print("ok")
else:
	print("nok")
-- OUTPUT:
16
8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:21:15) 
-- CODE:
#Coleta da senha do usuario
senha = int(input("Digite uma senha com 6 digitos: "))

#Separacao dos numeros por posicao
p = senha//100000
rp = senha%100000
s = rp//10000
rs = rp % 10000
t = rs//1000
rt = rs%1000
q = rt//100
rq = rt%100
qui = rq//10
sex = rq%10
#Soma das posicoes pares
par = s + q + sex
impar = p + t + qui
print(par)
print(impar)
#verificacao da senha
if(par%impar == 0):
	if(impar%par == 0):
		print("ok")
else:
	print("nok")
-- OUTPUT:
16
8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:22:53) 
-- CODE:
#Coleta da senha do usuario
senha = int(input("Digite uma senha com 6 digitos: "))

#Separacao dos numeros por posicao
p = senha//100000
rp = senha%100000
s = rp//10000
rs = rp % 10000
t = rs//1000
rt = rs%1000
q = rt//100
rq = rt%100
qui = rq//10
sex = rq%10
#Soma das posicoes pares
par = s + q + sex
impar = p + t + qui
print(par)
print(impar)
#verificacao da senha
if(par%impar == 0):
			print("acesso liberado")
else:
	print("senha invalida")
-- OUTPUT:
16
8
acesso liberado
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:23:11) 
-- CODE:
#Coleta da senha do usuario
senha = int(input("Digite uma senha com 6 digitos: "))

#Separacao dos numeros por posicao
p = senha//100000
rp = senha%100000
s = rp//10000
rs = rp % 10000
t = rs//1000
rt = rs%1000
q = rt//100
rq = rt%100
qui = rq//10
sex = rq%10
#Soma das posicoes pares
par = s + q + sex
impar = p + t + qui
#verificacao da senha
if(par%impar == 0):
			print("acesso liberado")
else:
	print("senha invalida")
-- OUTPUT:
acesso liberado
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 08:23:29) 
-- CODE:
#Coleta da senha do usuario
senha = int(input("Digite uma senha com 6 digitos: "))

#Separacao dos numeros por posicao
p = senha//100000
rp = senha%100000
s = rp//10000
rs = rp % 10000
t = rs//1000
rt = rs%1000
q = rt//100
rq = rt%100
qui = rq//10
sex = rq%10
#Soma das posicoes pares
par = s + q + sex
impar = p + t + qui
#verificacao da senha
if(par%impar == 0):
			print("acesso liberado")
else:
	print("senha invalida")
-- EXECUTION TIME:
0.16681
-- TEST CASE 1:
---- input:
087612
---- correct output:
acesso liberado
---- user output:
acesso liberado
-- TEST CASE 2:
---- input:
760834
---- correct output:
senha invalida
---- user output:
senha invalida
-- TEST CASE 3:
---- input:
122967
---- correct output:
acesso liberado
---- user output:
acesso liberado
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
