== TEST (2019-04-11 17:08:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

# Leia tres numeros inteiros
x = int (input("insira um numero: "))
y = int (input("insira outro numero: "))
z = int (input("insira mais um numero"))

min(x,y,z)
max(x,y,z)

z_int=(x+y+z)-(max-min)

# impressao dos valores crescentes
print(min(x,y,z))
print(z_int)
print(max(x,y,z))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    z_int=(x+y+z)-(max-min)
TypeError: unsupported operand type(s) for -: 'builtin_function_or_method' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:09:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

# Leia tres numeros inteiros
x = int (input("insira um numero: "))
y = int (input("insira outro numero: "))
z = int (input("insira mais um numero:"))

min(x,y,z)
max(x,y,z)

z_int=(x+y+z)

# impressao dos valores crescentes
print(min(x,y,z))
print(z_int)
print(max(x,y,z))

-- OUTPUT:
-2
8
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:11:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

# Leia tres numeros inteiros
x = int (input("insira um numero: "))
y = int (input("insira outro numero: "))
z = int (input("insira mais um numero:"))

min(x,y,z)
max(x,y,z)

z_int=((x+y+z)-max(x,y,z)-min(x,y,z)

# impressao dos valores crescentes
print(min(x,y,z))
print(z_int)
print(max(x,y,z))

-- ERROR:
File "XXXX", line 16
    print(min(x,y,z))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:11:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

# Leia tres numeros inteiros
x = int (input("insira um numero: "))
y = int (input("insira outro numero: "))
z = int (input("insira mais um numero:"))

min(x,y,z)
max(x,y,z)

z_int=((x+y+z)-max(x,y,z)-min(x,y,z)

# impressao dos valores crescentes
print(min(x,y,z))
print(z_int)
print(max(x,y,z))

-- ERROR:
File "XXXX", line 16
    print(min(x,y,z))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:12:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

# Leia tres numeros inteiros
x = int (input("insira um numero: "))
y = int (input("insira outro numero: "))
z = int (input("insira mais um numero:"))

a = min(x,y,z)
c = max(x,y,z)

b = ((x+y+z)-max(x,y,z)-min(x,y,z)

# impressao dos valores crescentes
print(a)
print(b)
print(c)

-- ERROR:
File "XXXX", line 16
    print(a)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:13:27) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

# Leia tres numeros inteiros
x = int (input("insira um numero: "))
y = int (input("insira outro numero: "))
z = int (input("insira mais um numero:"))

a = min(x,y,z)
c = max(x,y,z)

b = (((x+y+z)-a)-b)

# impressao dos valores crescentes
print(a)
print(b)
print(c)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    b = (((x+y+z)-a)-b)
NameError: name 'b' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:14:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

# Leia tres numeros inteiros
x = int (input("insira um numero: "))
y = int (input("insira outro numero: "))
z = int (input("insira mais um numero:"))

a = min(x,y,z)
c = max(x,y,z)

b = (((x+y+z)-a)-c)

# impressao dos valores crescentes
print(a)
print(b)
print(c)

-- OUTPUT:
-2
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 17:14:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

# Leia tres numeros inteiros
x = int (input("insira um numero: "))
y = int (input("insira outro numero: "))
z = int (input("insira mais um numero:"))

a = min(x,y,z)
c = max(x,y,z)

b = (((x+y+z)-a)-c)

# impressao dos valores crescentes
print(a)
print(b)
print(c)

-- EXECUTION TIME:
0.156088
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
0
10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
