== SUBMITION (2019-05-14 16:33:40) 
-- CODE:
from math import*
x = eval(input("x: "))
k = int(input())
contador = 1
sinal = -1
soma = x
exp = 3
while(contador < 5):
	soma = soma + (sinal*(x**exp/factorial(exp)))
	sinal = sinal*(-1)
	exp = exp + 2
	print(soma)
-- EXECUTION TIME:
0.204456
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1716/2505/main.py", line 9, in <module>
    soma = soma + (sinal*(x**exp/factorial(exp)))
OverflowError: int too large to convert to float

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:33:44) 
-- CODE:
from math import*
x = eval(input("x: "))
k = int(input())
contador = 1
sinal = -1
soma = x
exp = 3
while(contador < 5):
	soma = soma + (sinal*(x**exp/factorial(exp)))
	sinal = sinal*(-1)
	exp = exp + 2
	print(soma)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    soma = soma + (sinal*(x**exp/factorial(exp)))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:33:58) 
-- CODE:
from math import*
x = eval(input("x: "))
k = int(input())
contador = 1
sinal = -1
soma = x
exp = 3
while(contador < 5):
	soma = soma + (sinal*(x**exp/factorial(exp)))
	sinal = sinal*(-1)
	exp = exp + 2
	print(soma)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    soma = soma + (sinal*(x**exp/factorial(exp)))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:33:58) 
-- CODE:
from math import*
x = eval(input("x: "))
k = int(input())
contador = 1
sinal = -1
soma = x
exp = 3
while(contador < 5):
	soma = soma + (sinal*(x**exp/factorial(exp)))
	sinal = sinal*(-1)
	exp = exp + 2
	print(soma)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    soma = soma + (sinal*(x**exp/factorial(exp)))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:33:58) 
-- CODE:
from math import*
x = eval(input("x: "))
k = int(input())
contador = 1
sinal = -1
soma = x
exp = 3
while(contador < 5):
	soma = soma + (sinal*(x**exp/factorial(exp)))
	sinal = sinal*(-1)
	exp = exp + 2
	print(soma)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    soma = soma + (sinal*(x**exp/factorial(exp)))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:33:58) 
-- CODE:
from math import*
x = eval(input("x: "))
k = int(input())
contador = 1
sinal = -1
soma = x
exp = 3
while(contador < 5):
	soma = soma + (sinal*(x**exp/factorial(exp)))
	sinal = sinal*(-1)
	exp = exp + 2
	print(soma)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    soma = soma + (sinal*(x**exp/factorial(exp)))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:33:58) 
-- CODE:
from math import*
x = eval(input("x: "))
k = int(input())
contador = 1
sinal = -1
soma = x
exp = 3
while(contador < 5):
	soma = soma + (sinal*(x**exp/factorial(exp)))
	sinal = sinal*(-1)
	exp = exp + 2
	print(soma)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    soma = soma + (sinal*(x**exp/factorial(exp)))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:33:59) 
-- CODE:
from math import*
x = eval(input("x: "))
k = int(input())
contador = 1
sinal = -1
soma = x
exp = 3
while(contador < 5):
	soma = soma + (sinal*(x**exp/factorial(exp)))
	sinal = sinal*(-1)
	exp = exp + 2
	print(soma)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    soma = soma + (sinal*(x**exp/factorial(exp)))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:33:59) 
-- CODE:
from math import*
x = eval(input("x: "))
k = int(input())
contador = 1
sinal = -1
soma = x
exp = 3
while(contador < 5):
	soma = soma + (sinal*(x**exp/factorial(exp)))
	sinal = sinal*(-1)
	exp = exp + 2
	print(soma)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    soma = soma + (sinal*(x**exp/factorial(exp)))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:34:00) 
-- CODE:
from math import*
x = eval(input("x: "))
k = int(input())
contador = 1
sinal = -1
soma = x
exp = 3
while(contador < 5):
	soma = soma + (sinal*(x**exp/factorial(exp)))
	sinal = sinal*(-1)
	exp = exp + 2
	print(soma)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    soma = soma + (sinal*(x**exp/factorial(exp)))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:34:00) 
-- CODE:
from math import*
x = eval(input("x: "))
k = int(input())
contador = 1
sinal = -1
soma = x
exp = 3
while(contador < 5):
	soma = soma + (sinal*(x**exp/factorial(exp)))
	sinal = sinal*(-1)
	exp = exp + 2
	print(soma)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    soma = soma + (sinal*(x**exp/factorial(exp)))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:34:00) 
-- CODE:
from math import*
x = eval(input("x: "))
k = int(input())
contador = 1
sinal = -1
soma = x
exp = 3
while(contador < 5):
	soma = soma + (sinal*(x**exp/factorial(exp)))
	sinal = sinal*(-1)
	exp = exp + 2
	print(soma)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    soma = soma + (sinal*(x**exp/factorial(exp)))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:34:00) 
-- CODE:
from math import*
x = eval(input("x: "))
k = int(input())
contador = 1
sinal = -1
soma = x
exp = 3
while(contador < 5):
	soma = soma + (sinal*(x**exp/factorial(exp)))
	sinal = sinal*(-1)
	exp = exp + 2
	print(soma)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    soma = soma + (sinal*(x**exp/factorial(exp)))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:34:00) 
-- CODE:
from math import*
x = eval(input("x: "))
k = int(input())
contador = 1
sinal = -1
soma = x
exp = 3
while(contador < 5):
	soma = soma + (sinal*(x**exp/factorial(exp)))
	sinal = sinal*(-1)
	exp = exp + 2
	print(soma)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    soma = soma + (sinal*(x**exp/factorial(exp)))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:34:00) 
-- CODE:
from math import*
x = eval(input("x: "))
k = int(input())
contador = 1
sinal = -1
soma = x
exp = 3
while(contador < 5):
	soma = soma + (sinal*(x**exp/factorial(exp)))
	sinal = sinal*(-1)
	exp = exp + 2
	print(soma)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    soma = soma + (sinal*(x**exp/factorial(exp)))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:34:00) 
-- CODE:
from math import*
x = eval(input("x: "))
k = int(input())
contador = 1
sinal = -1
soma = x
exp = 3
while(contador < 5):
	soma = soma + (sinal*(x**exp/factorial(exp)))
	sinal = sinal*(-1)
	exp = exp + 2
	print(soma)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    soma = soma + (sinal*(x**exp/factorial(exp)))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:34:01) 
-- CODE:
from math import*
x = eval(input("x: "))
k = int(input())
contador = 1
sinal = -1
soma = x
exp = 3
while(contador < 5):
	soma = soma + (sinal*(x**exp/factorial(exp)))
	sinal = sinal*(-1)
	exp = exp + 2
	print(soma)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    soma = soma + (sinal*(x**exp/factorial(exp)))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:34:01) 
-- CODE:
from math import*
x = eval(input("x: "))
k = int(input())
contador = 1
sinal = -1
soma = x
exp = 3
while(contador < 5):
	soma = soma + (sinal*(x**exp/factorial(exp)))
	sinal = sinal*(-1)
	exp = exp + 2
	print(soma)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    soma = soma + (sinal*(x**exp/factorial(exp)))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:34:01) 
-- CODE:
from math import*
x = eval(input("x: "))
k = int(input())
contador = 1
sinal = -1
soma = x
exp = 3
while(contador < 5):
	soma = soma + (sinal*(x**exp/factorial(exp)))
	sinal = sinal*(-1)
	exp = exp + 2
	print(soma)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    soma = soma + (sinal*(x**exp/factorial(exp)))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:34:01) 
-- CODE:
from math import*
x = eval(input("x: "))
k = int(input())
contador = 1
sinal = -1
soma = x
exp = 3
while(contador < 5):
	soma = soma + (sinal*(x**exp/factorial(exp)))
	sinal = sinal*(-1)
	exp = exp + 2
	print(soma)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    soma = soma + (sinal*(x**exp/factorial(exp)))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 16:34:07) 
-- CODE:
from math import*
x = eval(input("x: "))
k = int(input())
contador = 1
sinal = -1
soma = x
exp = 3
while(contador < 5):
	soma = soma + (sinal*(x**exp/factorial(exp)))
	sinal = sinal*(-1)
	exp = exp + 2
print(soma)
-- EXECUTION TIME:
0.136493
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1716/2505/main.py", line 9, in <module>
    soma = soma + (sinal*(x**exp/factorial(exp)))
OverflowError: int too large to convert to float

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:34:09) 
-- CODE:
from math import*
x = eval(input("x: "))
k = int(input())
contador = 1
sinal = -1
soma = x
exp = 3
while(contador < 5):
	soma = soma + (sinal*(x**exp/factorial(exp)))
	sinal = sinal*(-1)
	exp = exp + 2
print(soma)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    soma = soma + (sinal*(x**exp/factorial(exp)))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 16:34:28) 
-- CODE:
from math import*
x = eval(input("x: "))
k = int(input())
contador = 1
sinal = -1
soma = x
exp = 3
while(contador < k):
	soma = soma + (sinal*(x**exp/factorial(exp)))
	sinal = sinal*(-1)
	exp = exp + 2
print(soma)
-- EXECUTION TIME:
0.125264
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1716/2505/main.py", line 9, in <module>
    soma = soma + (sinal*(x**exp/factorial(exp)))
OverflowError: int too large to convert to float

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 16:34:54) 
-- CODE:
from math import*
x = eval(input("x: "))
k = int(input())
contador = 1
sinal = -1
soma = x
exp = 3
while(contador < k):
	soma = soma + (sinal*(x**exp/factorial(exp)))
	sinal = sinal*(-1)
	exp = exp + 2
	contador = contador + 1

	print(soma)
-- EXECUTION TIME:
0.14773
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
0.9248322292886504
1.0045248555348174
0.9998431013994987
1.0000035425842861
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-0.9248322292886504
-1.0045248555348174
-0.9998431013994987
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.8558007815651173
0.8662952837868347
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 16:34:58) 
-- CODE:
from math import*
x = eval(input("x: "))
k = int(input())
contador = 1
sinal = -1
soma = x
exp = 3
while(contador < k):
	soma = soma + (sinal*(x**exp/factorial(exp)))
	sinal = sinal*(-1)
	exp = exp + 2
	contador = contador + 1

print(soma)
-- EXECUTION TIME:
0.208477
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
1.0000035425842861
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-0.9998431013994987
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.8662952837868347
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:35:06) 
-- CODE:
from math import*
x = eval(input("x: "))
k = int(input())
contador = 1
sinal = -1
soma = x
exp = 3
while(contador < k):
	soma = soma + (sinal*(x**exp/factorial(exp)))
	sinal = sinal*(-1)
	exp = exp + 2
	contador = contador + 1

print(soma)
-- OUTPUT:
1.0000035425842861
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:35:09) 
-- CODE:
from math import*
x = eval(input("x: "))
k = int(input())
contador = 1
sinal = -1
soma = x
exp = 3
while(contador < k):
	soma = soma + (sinal*(x**exp/factorial(exp)))
	sinal = sinal*(-1)
	exp = exp + 2
	contador = contador + 1

print(soma)
-- OUTPUT:
1.0000035425842861
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:35:15) 
-- CODE:
from math import*
x = eval(input("x: "))
k = int(input())
contador = 1
sinal = -1
soma = x
exp = 3
while(contador < k):
	soma = soma + (sinal*(x**exp/factorial(exp)))
	sinal = sinal*(-1)
	exp = exp + 2
	contador = contador + 1

print(soma)
-- OUTPUT:
1.0000035425842861
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 16:36:15) 
-- CODE:
from math import*
x = eval(input("x: "))
k = int(input())
contador = 1
sinal = -1
soma = x
exp = 3
while(contador < k):
	soma = soma + (sinal*(x**exp/factorial(exp)))
	sinal = sinal*(-1)
	exp = exp + 2
	contador += 1

print(soma)
-- EXECUTION TIME:
0.152219
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
1.0000035425842861
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-0.9998431013994987
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.8662952837868347
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:36:15) 
-- CODE:
from math import*
x = eval(input("x: "))
k = int(input())
contador = 1
sinal = -1
soma = x
exp = 3
while(contador < k):
	soma = soma + (sinal*(x**exp/factorial(exp)))
	sinal = sinal*(-1)
	exp = exp + 2
	contador += 1

print(soma)
-- OUTPUT:
1.0000035425842861
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 16:36:27) 
-- CODE:
from math import*
x = eval(input("x: "))
k = int(input())
contador = 1
sinal = -1
soma = x
exp = 3
while(contador < k):
	soma = soma + (sinal*(x**exp/factorial(exp)))
	sinal = sinal*(-1)
	exp = exp + 2
	contador += 1

print(soma)
-- EXECUTION TIME:
0.143255
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
1.0000035425842861
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-0.9998431013994987
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.8662952837868347
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 16:36:28) 
-- CODE:
from math import*
x = eval(input("x: "))
k = int(input())
contador = 1
sinal = -1
soma = x
exp = 3
while(contador < k):
	soma = soma + (sinal*(x**exp/factorial(exp)))
	sinal = sinal*(-1)
	exp = exp + 2
	contador += 1

print(soma)
-- EXECUTION TIME:
0.141155
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
1.0000035425842861
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-0.9998431013994987
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.8662952837868347
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 16:36:29) 
-- CODE:
from math import*
x = eval(input("x: "))
k = int(input())
contador = 1
sinal = -1
soma = x
exp = 3
while(contador < k):
	soma = soma + (sinal*(x**exp/factorial(exp)))
	sinal = sinal*(-1)
	exp = exp + 2
	contador += 1

print(soma)
-- EXECUTION TIME:
0.123861
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
1.0000035425842861
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-0.9998431013994987
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.8662952837868347
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 16:36:43) 
-- CODE:
from math import*
x = eval(input("x: "))
k = int(input())
contador = 1
sinal = -1
soma = x
exp = 3
while(contador < k):
	soma = soma + (sinal*(x**exp/factorial(exp)))
	sinal = sinal*(-1)
	exp += 2
	contador += 1

print(soma)
-- EXECUTION TIME:
0.196069
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
1.0000035425842861
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-0.9998431013994987
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.8662952837868347
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 16:37:08) 
-- CODE:
from math import*
x = eval(input("x: "))
k = int(input())
contador = 1
sinal = -1
soma = x
exp = 3
while(contador < k):
	soma = soma * (sinal*(x**exp/factorial(exp)))
	sinal = sinal*(-1)
	exp += 2
	contador += 1

print(soma)
-- EXECUTION TIME:
0.194736
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
6.073945069471757e-08
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
0.0003785776748982402
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
-0.0021034154779255494
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 16:37:09) 
-- CODE:
from math import*
x = eval(input("x: "))
k = int(input())
contador = 1
sinal = -1
soma = x
exp = 3
while(contador < k):
	soma = soma * (sinal*(x**exp/factorial(exp)))
	sinal = sinal*(-1)
	exp += 2
	contador += 1

print(soma)
-- EXECUTION TIME:
0.18502
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
6.073945069471757e-08
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
0.0003785776748982402
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
-0.0021034154779255494
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 16:37:13) 
-- CODE:
from math import*
x = eval(input("x: "))
k = int(input())
contador = 1
sinal = -1
soma = x
exp = 3
while(contador < k):
	soma = soma + (sinal*(x**exp/factorial(exp)))
	sinal = sinal*(-1)
	exp += 2
	contador += 1

print(soma)
-- EXECUTION TIME:
0.195504
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
1.0000035425842861
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-0.9998431013994987
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.8662952837868347
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 16:37:58) 
-- CODE:
from math import*
x = eval(input("x: "))
k = int(input())
contador = 1
sinal = -1
soma = x
exp = 3
while(contador < k):
	soma = soma + (sinal*(x**exp/factorial(exp)))
	sinal = sinal*(-1)
	exp += 2
	contador += 1

print(round(soma,10))
-- EXECUTION TIME:
0.162216
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
1.0000035426
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-0.9998431014
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.8662952838
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
