== SUBMITION (2019-04-23 17:53:44) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Tipo de triangulo: invalido")
	
-- EXECUTION TIME:
0.12964
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 00:33:33) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Tipo de triangulo: invalido")

	
-- OUTPUT:
escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 00:34:03) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Tipo de triangulo: invalido")

	
-- EXECUTION TIME:
0.142441
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 00:34:31) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Tipo de triangulo: invalido")

	
-- EXECUTION TIME:
0.152912
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 00:34:32) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Tipo de triangulo: invalido")

	
-- EXECUTION TIME:
0.138523
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 00:34:32) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Tipo de triangulo: invalido")

	
-- EXECUTION TIME:
0.090848
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1679/1099/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 00:34:32) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Tipo de triangulo: invalido")

	
-- EXECUTION TIME:
0.201806
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Tipo de triangulo: invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 00:34:32) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Tipo de triangulo: invalido")

	
-- EXECUTION TIME:
0.0760081
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1679/1099/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 00:34:32) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Tipo de triangulo: invalido")

	
-- EXECUTION TIME:
0.181984
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 00:35:30) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Tipo de triangulo: invalido")

	
-- OUTPUT:
escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 00:36:10) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Tipo de triangulo: invalido")

print()

	
-- EXECUTION TIME:
0.133286
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 00:36:11) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Tipo de triangulo: invalido")

print()

	
-- OUTPUT:
escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 00:36:11) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Tipo de triangulo: invalido")

print()

	
-- EXECUTION TIME:
0.171206
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
valor de x: valor de y: valor de z: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
valor de x: valor de y: valor de z: Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 00:36:18) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Tipo de triangulo: invalido")

print()

	
-- OUTPUT:
escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 00:37:23) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.272897
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 00:37:24) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.114809
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 00:39:20) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print(x" ",y" ",z"")
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.124544
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 14
    print(x" ",y" ",z"")
             ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 00:39:22) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print(x" ",y" ",z"")
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.195663
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 14
    print(x" ",y" ",z"")
             ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 00:39:22) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print(x" ",y" ",z"")
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.118859
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 14
    print(x" ",y" ",z"")
             ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 00:39:23) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print(x" ",y" ",z"")
	print("Tipo de triangulo: invalido")


	
-- ERROR:
File "XXXX", line 14
    print(x" ",y" ",z"")
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 00:45:22) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print(Entradas:"x","y","z")
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.266342
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 14
    print(Entradas:"x","y","z")
                  ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 00:45:24) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print(Entradas:"x","y","z")
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.132868
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 14
    print(Entradas:"x","y","z")
                  ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 00:45:37) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print(Entradas:"x","y","z")
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.131323
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 14
    print(Entradas:"x","y","z")
                  ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 00:45:37) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print(Entradas:"x","y","z")
	print("Tipo de triangulo: invalido")


	
-- ERROR:
File "XXXX", line 14
    print(Entradas:"x","y","z")
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 00:45:38) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print(Entradas:"x","y","z")
	print("Tipo de triangulo: invalido")


	
-- ERROR:
File "XXXX", line 14
    print(Entradas:"x","y","z")
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 00:45:39) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print(Entradas:"x","y","z")
	print("Tipo de triangulo: invalido")


	
-- ERROR:
File "XXXX", line 14
    print(Entradas:"x","y","z")
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 00:46:01) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Tipo de triangulo: invalido")


	
-- OUTPUT:
escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 00:46:03) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Tipo de triangulo: invalido")


	
-- OUTPUT:
escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 00:46:04) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Tipo de triangulo: invalido")


	
-- OUTPUT:
escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 00:46:05) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Tipo de triangulo: invalido")


	
-- OUTPUT:
escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 00:46:05) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Tipo de triangulo: invalido")


	
-- OUTPUT:
escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 00:46:06) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Tipo de triangulo: invalido")


	
-- OUTPUT:
escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 00:46:06) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Tipo de triangulo: invalido")


	
-- OUTPUT:
escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 00:56:23) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entrada:x,y,z)
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.188154
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 14
    print("Entrada:x,y,z)
                        ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 00:56:25) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entrada:x,y,z)
	print("Tipo de triangulo: invalido")


	
-- ERROR:
File "XXXX", line 14
    print("Entrada:x,y,z)
                        ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 00:56:25) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entrada:x,y,z)
	print("Tipo de triangulo: invalido")


	
-- ERROR:
File "XXXX", line 14
    print("Entrada:x,y,z)
                        ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 00:56:25) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entrada:x,y,z)
	print("Tipo de triangulo: invalido")


	
-- ERROR:
File "XXXX", line 14
    print("Entrada:x,y,z)
                        ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 00:56:54) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas:x,y,z)
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.148388
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 14
    print("Entradas:x,y,z)
                         ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 00:56:57) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas:x,y,z)
	print("Tipo de triangulo: invalido")


	
-- ERROR:
File "XXXX", line 14
    print("Entradas:x,y,z)
                         ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 00:58:50) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas:)
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.22355
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 14
    print("Entradas:)
                    ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 00:58:50) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas:)
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.203455
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 14
    print("Entradas:)
                    ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 00:58:53) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas:)
	print("Tipo de triangulo: invalido")


	
-- ERROR:
File "XXXX", line 14
    print("Entradas:)
                    ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 00:59:58) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas:x,y,z")
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.12496
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:x,y,z
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 00:59:59) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas:x,y,z")
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.188429
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:x,y,z
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 00:59:59) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas:x,y,z")
	print("Tipo de triangulo: invalido")


	
-- OUTPUT:
escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 01:00:00) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas:x,y,z")
	print("Tipo de triangulo: invalido")


	
-- OUTPUT:
escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 01:00:00) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas:x,y,z")
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.115145
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
valor de x: valor de y: valor de z: Entradas:x,y,z
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 01:01:46) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas:",x,",",y,",",z,")
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.213744
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 14
    print("Entradas:",x,",",y,",",z,")
                                     ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 01:01:47) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas:",x,",",y,",",z,")
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.136295
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 14
    print("Entradas:",x,",",y,",",z,")
                                     ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 01:01:48) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas:",x,",",y,",",z,")
	print("Tipo de triangulo: invalido")


	
-- ERROR:
File "XXXX", line 14
    print("Entradas:",x,",",y,",",z,")
                                     ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 01:01:48) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas:",x,",",y,",",z,")
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.1274
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 14
    print("Entradas:",x,",",y,",",z,")
                                     ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 01:02:33) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas:",X,",",Y,",",Z,")
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.204609
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 14
    print("Entradas:",X,",",Y,",",Z,")
                                     ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 01:02:34) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas:",X,",",Y,",",Z,")
	print("Tipo de triangulo: invalido")


	
-- ERROR:
File "XXXX", line 14
    print("Entradas:",X,",",Y,",",Z,")
                                     ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 01:02:35) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas:",X,",",Y,",",Z,")
	print("Tipo de triangulo: invalido")


	
-- ERROR:
File "XXXX", line 14
    print("Entradas:",X,",",Y,",",Z,")
                                     ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 01:05:12) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas:",X,",",Y,",",Z,")
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.218697
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 14
    print("Entradas:",X,",",Y,",",Z,")
                                     ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 01:06:07) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas:",X,",",Y,",",Z")
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.1282
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 14
    print("Entradas:",X,",",Y,",",Z")
                                    ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 01:06:08) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas:",X,",",Y,",",Z")
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.200299
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 14
    print("Entradas:",X,",",Y,",",Z")
                                    ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 01:06:08) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas:",X,",",Y,",",Z")
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.156406
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 14
    print("Entradas:",X,",",Y,",",Z")
                                    ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 01:06:09) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas:",X,",",Y,",",Z")
	print("Tipo de triangulo: invalido")


	
-- ERROR:
File "XXXX", line 14
    print("Entradas:",X,",",Y,",",Z")
                                    ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 01:07:17) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas:",x,",",y,",",z")
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.183712
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 14
    print("Entradas:",x,",",y,",",z")
                                    ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 01:07:18) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas:",x,",",y,",",z")
	print("Tipo de triangulo: invalido")


	
-- ERROR:
File "XXXX", line 14
    print("Entradas:",x,",",y,",",z")
                                    ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 01:07:18) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas:",x,",",y,",",z")
	print("Tipo de triangulo: invalido")


	
-- ERROR:
File "XXXX", line 14
    print("Entradas:",x,",",y,",",z")
                                    ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 01:07:19) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas:",x,",",y,",",z")
	print("Tipo de triangulo: invalido")


	
-- ERROR:
File "XXXX", line 14
    print("Entradas:",x,",",y,",",z")
                                    ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 01:07:19) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas:",x,",",y,",",z")
	print("Tipo de triangulo: invalido")


	
-- ERROR:
File "XXXX", line 14
    print("Entradas:",x,",",y,",",z")
                                    ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 01:07:19) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas:",x,",",y,",",z")
	print("Tipo de triangulo: invalido")


	
-- ERROR:
File "XXXX", line 14
    print("Entradas:",x,",",y,",",z")
                                    ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 01:07:19) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas:",x,",",y,",",z")
	print("Tipo de triangulo: invalido")


	
-- ERROR:
File "XXXX", line 14
    print("Entradas:",x,",",y,",",z")
                                    ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 01:07:20) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas:",x,",",y,",",z")
	print("Tipo de triangulo: invalido")


	
-- ERROR:
File "XXXX", line 14
    print("Entradas:",x,",",y,",",z")
                                    ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 01:07:20) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas:",x,",",y,",",z")
	print("Tipo de triangulo: invalido")


	
-- ERROR:
File "XXXX", line 14
    print("Entradas:",x,",",y,",",z")
                                    ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 01:07:20) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas:",x,",",y,",",z")
	print("Tipo de triangulo: invalido")


	
-- ERROR:
File "XXXX", line 14
    print("Entradas:",x,",",y,",",z")
                                    ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 01:07:20) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas:",x,",",y,",",z")
	print("Tipo de triangulo: invalido")


	
-- ERROR:
File "XXXX", line 14
    print("Entradas:",x,",",y,",",z")
                                    ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 01:07:41) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas: ",x,",",y,",",z")
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.140063
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 14
    print("Entradas: ",x,",",y,",",z")
                                     ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 01:07:43) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas: ",x,",",y,",",z")
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.155331
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 14
    print("Entradas: ",x,",",y,",",z")
                                     ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 01:08:52) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas:",x,",",y,",",z")
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.119658
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 14
    print("Entradas:",x,",",y,",",z")
                                    ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 01:08:53) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas:",x,",",y,",",z")
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.178651
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 14
    print("Entradas:",x,",",y,",",z")
                                    ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 01:08:53) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas:",x,",",y,",",z")
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.200917
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 14
    print("Entradas:",x,",",y,",",z")
                                    ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 01:08:53) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas:",x,",",y,",",z")
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.260721
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 14
    print("Entradas:",x,",",y,",",z")
                                    ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 01:08:54) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas:",x,",",y,",",z")
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.259839
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 14
    print("Entradas:",x,",",y,",",z")
                                    ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 01:08:54) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas:",x,",",y,",",z")
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.348225
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 14
    print("Entradas:",x,",",y,",",z")
                                    ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 01:11:21) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas:",x,",",y,",",z")
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.17872
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 14
    print("Entradas:",x,",",y,",",z")
                                    ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 01:11:21) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas:",x,",",y,",",z")
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.246455
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 14
    print("Entradas:",x,",",y,",",z")
                                    ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 01:11:21) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas:",x,",",y,",",z")
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.199471
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 14
    print("Entradas:",x,",",y,",",z")
                                    ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 03:34:40) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.169531
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 03:34:40) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.151125
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 03:34:41) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.195232
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 03:34:41) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("isoceles")
else:
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.130015
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
valor de x: valor de y: valor de z: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
valor de x: valor de y: valor de z: Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 03:35:29) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("Entradas:",x,",",y,",",z)
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("Entradas:",x,",",y,",",z)
	print("isoceles")
else:
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.187865
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 03:35:29) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("Entradas:",x,",",y,",",z)
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("Entradas:",x,",",y,",",z)
	print("isoceles")
else:
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.152184
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 03:35:30) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("Entradas:",x,",",y,",",z)
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("Entradas:",x,",",y,",",z)
	print("isoceles")
else:
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.204036
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 03:35:30) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("Entradas:",x,",",y,",",z)
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("Entradas:",x,",",y,",",z)
	print("isoceles")
else:
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.0926979
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 03:36:25) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("Entradas:",x,",",y,",",z)
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("Entradas:",x,",",y,",",z)
	print("isoceles")
elif:
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.127646
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 16
    elif:
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 03:36:27) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("Entradas:",x,",",y,",",z)
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("Entradas:",x,",",y,",",z)
	print("isoceles")
elif:
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo: invalido")


	
-- ERROR:
File "XXXX", line 16
    elif:
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 03:38:12) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("Entradas:",x,",",y,",",z)
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("Entradas:",x,",",y,",",z)
	print("isoceles")
else ( x !=y ) and ( x != z ) and ( z != x ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.123476
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 16
    else ( x !=y ) and ( x != z ) and ( z != x ):
         ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 03:38:13) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("Entradas:",x,",",y,",",z)
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("Entradas:",x,",",y,",",z)
	print("isoceles")
else ( x !=y ) and ( x != z ) and ( z != x ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.18352
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 16
    else ( x !=y ) and ( x != z ) and ( z != x ):
         ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 03:38:14) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("Entradas:",x,",",y,",",z)
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("Entradas:",x,",",y,",",z)
	print("isoceles")
else ( x !=y ) and ( x != z ) and ( z != x ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.117664
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 16
    else ( x !=y ) and ( x != z ) and ( z != x ):
         ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 03:38:14) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("Entradas:",x,",",y,",",z)
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("Entradas:",x,",",y,",",z)
	print("isoceles")
else ( x !=y ) and ( x != z ) and ( z != x ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.130362
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 16
    else ( x !=y ) and ( x != z ) and ( z != x ):
         ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 03:38:15) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("Entradas:",x,",",y,",",z)
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("Entradas:",x,",",y,",",z)
	print("isoceles")
else ( x !=y ) and ( x != z ) and ( z != x ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.0744219
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1679/1099/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 03:38:15) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("Entradas:",x,",",y,",",z)
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("Entradas:",x,",",y,",",z)
	print("isoceles")
else ( x !=y ) and ( x != z ) and ( z != x ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.091068
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 16
    else ( x !=y ) and ( x != z ) and ( z != x ):
         ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 03:38:15) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("Entradas:",x,",",y,",",z)
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("Entradas:",x,",",y,",",z)
	print("isoceles")
else ( x !=y ) and ( x != z ) and ( z != x ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.151732
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 16
    else ( x !=y ) and ( x != z ) and ( z != x ):
         ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 03:39:23) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("Entradas:",x,",",y,",",z)
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("Entradas:",x,",",y,",",z)
	print("isoceles")
else:
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.138282
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 03:39:24) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("Entradas:",x,",",y,",",z)
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("Entradas:",x,",",y,",",z)
	print("isoceles")
else:
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.164239
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 2.0 , 4.0 , 4.0
escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 03:39:24) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x < y + z) and ( y < x + z ) and ( z < x +y)):
	print("Entradas:",x,",",y,",",z)
	print("escaleno")
elif (( x == y ) or ( x == z) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("Entradas:",x,",",y,",",z)
	print("isoceles")
else:
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.117062
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 03:50:46) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x != y ) and ( y != z ) and ( z != x)):
	print("Entradas:",x,",",y,",",z)
	print("escaleno")
elif (( x == y ) and ( x == z) and ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("Entradas:",x,",",y,",",z)
	print("isosceles")
else:
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.118552
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 03:50:47) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x != y ) and ( y != z ) and ( z != x)):
	print("Entradas:",x,",",y,",",z)
	print("escaleno")
elif (( x == y ) and ( x == z) and ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("Entradas:",x,",",y,",",z)
	print("isosceles")
else:
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.0977771
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 03:50:47) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x != y ) and ( y != z ) and ( z != x)):
	print("Entradas:",x,",",y,",",z)
	print("escaleno")
elif (( x == y ) and ( x == z) and ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("Entradas:",x,",",y,",",z)
	print("isosceles")
else:
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo: invalido")


	
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 03:50:49) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x != y ) and ( y != z ) and ( z != x)):
	print("Entradas:",x,",",y,",",z)
	print("escaleno")
elif (( x == y ) and ( x == z) and ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("Entradas:",x,",",y,",",z)
	print("isosceles")
else:
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo: invalido")


	
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 02:03:36) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x >  y + z ) and ( y != z ) and ( z != x)):
	print("Entradas:",x,",",y,",",z)
	print("escaleno")
elif (( x == y ) and ( x == z) and ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("Entradas:",x,",",y,",",z)
	print("isosceles")
else:
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.129738
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 02:03:36) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x >  y + z ) and ( y != z ) and ( z != x)):
	print("Entradas:",x,",",y,",",z)
	print("escaleno")
elif (( x == y ) and ( x == z) and ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("Entradas:",x,",",y,",",z)
	print("isosceles")
else:
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.0960469
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 02:03:37) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x >  y + z ) and ( y != z ) and ( z != x)):
	print("Entradas:",x,",",y,",",z)
	print("escaleno")
elif (( x == y ) and ( x == z) and ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("Entradas:",x,",",y,",",z)
	print("isosceles")
else:
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.115627
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:

-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 02:03:42) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x >  y + z ) and ( y != z ) and ( z != x)):
	print("Entradas:",x,",",y,",",z)
	print("escaleno")
elif (( x == y ) and ( x == z) and ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("Entradas:",x,",",y,",",z)
	print("isosceles")
else:
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo: invalido")


	
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 02:03:43) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if (( x >  y + z ) and ( y != z ) and ( z != x)):
	print("Entradas:",x,",",y,",",z)
	print("escaleno")
elif (( x == y ) and ( x == z) and ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("equilatero")
elif (( x != y == z) or ( y != x == z) or ( z != x == y)):
	print("Entradas:",x,",",y,",",z)
	print("isosceles")
else:
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo: invalido")


	
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:18:49) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) or ( x != z ) or ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:19:05) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) or ( x != z ) or ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.178301
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:21:32) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
else (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.183982
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 19
    else (( x != y) and ( x != z ) and ( y != z )):
         ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:21:34) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
else (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.137237
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 19
    else (( x != y) and ( x != z ) and ( y != z )):
         ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:21:48) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
else: 
	(( x != y) and ( x != z ) and ( y != z ))
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.202679
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:22:36) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z ))
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.163283
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 19
    elif (( x != y) and ( x != z ) and ( y != z ))
                                                 ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:22:42) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.176827
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:23:03) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif: 
	(( x != y) and ( x != z ) and ( y != z ))
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.125727
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 19
    elif: 
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:23:07) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif: 
	(( x != y) and ( x != z ) and ( y != z ))
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.138913
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 19
    elif: 
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:23:27) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
else: 
	(( x != y) and ( x != z ) and ( y != z ))
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.141479
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:25:43) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.192981
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
valor de x: valor de y: valor de z: Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
valor de x: valor de y: valor de z: Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
valor de x: valor de y: valor de z: Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:25:51) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.235739
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 17:20:58) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 17:21:07) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 17:21:09) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 17:21:28) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 17:21:58) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,y,z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:22:08) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,y,z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.133061
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:03) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.173562
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 17:23:05) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 17:23:10) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 17:23:29) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:30) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.118694
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:30) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.188047
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:

-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:31) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.277905
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 17:23:32) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:33) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.150933
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:33) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.213629
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:

-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:33) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.239341
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:

-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:33) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.19143
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:34) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.349393
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:34) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.164272
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1679/1099/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 17:23:34) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:34) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.240435
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:

-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
valor de x: valor de y: valor de z: Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:35) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.193908
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:35) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.197022
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 17:23:35) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:36) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.16836
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1679/1099/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:36) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.158832
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
valor de x: valor de y: valor de z: Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:

-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
valor de x: valor de y: valor de z: Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:37) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.144658
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:38) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.116234
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:39) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.14261
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:39) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.114471
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:43) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.202676
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:43) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.182724
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:44) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.185123
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1679/1099/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:44) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.21793
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:44) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.356019
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:45) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.18017
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1679/1099/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:45) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.201449
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:

-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:45) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.254498
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:45) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.104039
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1679/1099/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:46) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.180226
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1679/1099/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:46) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.2133
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1679/1099/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:46) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.335345
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:

-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:51) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.154199
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:52) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.242286
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:52) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.239781
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:52) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.222514
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:53) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.30488
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:53) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.521657
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:53) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.463065
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:53) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.427086
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:53) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.391714
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:

-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:54) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.433734
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:54) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.316848
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:54) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.519613
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:55) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.43673
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:55) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.470077
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1679/1099/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:55) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.518741
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1679/1099/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:55) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.341882
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:

-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:55) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.256589
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:56) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.462449
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:56) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.325241
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:

-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:56) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.425599
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:23:56) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.293589
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:24:18) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.174107
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:24:19) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("valor de x: "))
y = float(input("valor de y: "))
z = float(input("valor de z: "))

if ( x <= 0 or y <= 0 or z <=0 ):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x >= y + z ) or ( y >= x + z) or ( z >= x + y)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","invalido")
elif (( x == y ) and ( y == z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","equilatero")
elif (( x == y ) or ( y == z ) or ( z == x)):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","isosceles")
elif (( x != y) and ( x != z ) and ( y != z )):
	print("Entradas:",x,",",y,",",z)
	print("Tipo de triangulo:","escaleno")


-- EXECUTION TIME:
0.193916
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
