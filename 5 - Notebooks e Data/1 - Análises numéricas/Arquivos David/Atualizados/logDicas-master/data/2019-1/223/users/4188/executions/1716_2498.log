== TEST (2019-05-11 12:56:16) 
-- CODE:
A=int(input("habitante da cidade A: "))
B=int(input("habitante da cidade B: "))
a=float(input("% da cidade A: "))
b=float(input("% da cidade B: "))
ha=0
hb=0
t=0
while(A<=B):
	A=ha+(A*(a/100))
	B=hb+(B*(b/100))
	t=t+1
print(t)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 12:57:14) 
-- CODE:
A=int(input("habitante da cidade A: "))
B=int(input("habitante da cidade B: "))
a=float(input("% da cidade A: "))
b=float(input("% da cidade B: "))
ha=0
hb=0
t=0
while(A<=B):
	A=ha+(A*(a/100))
	B=hb+(B*(b/100))
	t=t+1
print(t)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 13:01:46) 
-- CODE:
A=int(input("habitante da cidade A: "))
B=int(input("habitante da cidade B: "))
a=float(input("% da cidade A: "))
b=float(input("% da cidade B: "))
ha=A
hb=B
t=0
while(A<B):
	A=ha+(A*(a/100))
	B=hb+(B*(b/100))
	t=t+1
print(t)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 13:06:38) 
-- CODE:
A=int(input("habitante da cidade A: "))
B=int(input("habitante da cidade B: "))
a=float(input("% da cidade A: "))
b=float(input("% da cidade B: "))
ha=A
hb=B
t=0
while(A<B):
	A=ha+(A*(a/100))
	B=hb+(B*(b/100))
	t=t+1
print(t)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 13:10:41) 
-- CODE:
A=int(input("habitante da cidade A: "))
B=int(input("habitante da cidade B: "))
a=float(input("% da cidade A: "))
b=float(input("% da cidade B: "))
t=0
while(A<B):
	A=A+(A*(a/100))
	B=B+(B*(b/100))
	t=t+1
print(t)
-- OUTPUT:
5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-11 13:11:05) 
-- CODE:
A=int(input("habitante da cidade A: "))
B=int(input("habitante da cidade B: "))
a=float(input("% da cidade A: "))
b=float(input("% da cidade B: "))
t=0
while(A<B):
	A=A+(A*(a/100))
	B=B+(B*(b/100))
	t=t+1
print(t)
-- EXECUTION TIME:
0.154078
-- TEST CASE 1:
---- input:
250150
580000
35.5
10.5
---- correct output:
5
---- user output:
5
-- TEST CASE 2:
---- input:
180250
1200000
10.25
5.7
---- correct output:
45
---- user output:
45
-- TEST CASE 3:
---- input:
1000000
1650000
12.75
3.2
---- correct output:
6
---- user output:
6
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
