== SUBMITION (2019-04-06 02:41:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

r = float(input("raio do tanque: "))
x = float(input("altura da coluna: "))
n = int(input("volume de ar/combustivel (1 / 2) "))

if n = 1:
	V = (4 * pi * r**3)/3
	print(V)
else:
	V = (pi * x ** 2 * (r * 3 - x))/3
	print(V)
-- EXECUTION TIME:
0.18988
-- ERROR:
  File "/home/codebench/codes/1644/2443/main.py", line 10
    if n = 1:
         ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 02:42:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

r = float(input("raio do tanque: "))
x = float(input("altura da coluna: "))
n = int(input("volume de ar/combustivel (1 / 2) "))

if n = 1:
	V = (4 * pi * r**3)/3
	print(V)
else:
	V = (pi * x ** 2 * (r * 3 - x))/3
	print(V)
-- ERROR:
File "XXXX", line 10
    if n = 1:
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 02:42:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

r = float(input("raio do tanque: "))
x = float(input("altura da coluna: "))
n = int(input("volume de ar/combustivel (1 / 2) "))

if n == 1:
	V = (4 * pi * r**3)/3
	print(V)
else:
	V = (pi * x ** 2 * (r * 3 - x))/3
	print(V)
-- OUTPUT:
179.5943800302165
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 02:42:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

r = float(input("raio do tanque: "))
x = float(input("altura da coluna: "))
n = int(input("volume de ar/combustivel (1 / 2) "))

if n == 1:
	V = (4 * pi * r**3)/3
	print(V)
else:
	V = (pi * x ** 2 * (r * 3 - x))/3
	print(V)
-- EXECUTION TIME:
0.141288
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
179.5943800302165
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
19.998331635201428
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 02:42:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

r = float(input("raio do tanque: "))
x = float(input("altura da coluna: "))
n = int(input("volume de ar/combustivel (1 / 2) "))

if n == 1:
	V = (4 * pi * r**3)/3
	print(V)
else:
	V = (pi * x ** 2 * (r * 3 - x))/3
	print(V)
-- OUTPUT:
179.5943800302165
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 02:42:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

r = float(input("raio do tanque: "))
x = float(input("altura da coluna: "))
n = int(input("volume de ar/combustivel (1 / 2) "))

if n == 1:
	V = (4 * pi * r**3)/3
	print(round(V),4)
else:
	V = (pi * x ** 2 * (r * 3 - x))/3
	print(round(V),4)
-- EXECUTION TIME:
0.192102
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
180 4
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
20 4
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 02:42:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

r = float(input("raio do tanque: "))
x = float(input("altura da coluna: "))
n = int(input("volume de ar/combustivel (1 / 2) "))

if n == 1:
	V = (4 * pi * r**3)/3
	print(round(V),4)
else:
	V = (pi * x ** 2 * (r * 3 - x))/3
	print(round(V),4)
-- OUTPUT:
180 4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 02:42:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

r = float(input("raio do tanque: "))
x = float(input("altura da coluna: "))
n = int(input("volume de ar/combustivel (1 / 2) "))

if n == 1:
	V = (4 * pi * r**3)/3
	print(round(V,4))
else:
	V = (pi * x ** 2 * (r * 3 - x))/3
	print(round(V,4))
-- OUTPUT:
179.5944
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 02:43:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

r = float(input("raio do tanque: "))
x = float(input("altura da coluna: "))
n = int(input("volume de ar/combustivel (1 / 2) "))

if n == 1:
	V = (4 * pi * r**3)/3
	print(round(V,4))
else:
	V = (pi * x ** 2 * (r * 3 - x))/3
	print(round(V,4))
-- EXECUTION TIME:
0.120918
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
179.5944
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
19.9983
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 02:43:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

r = float(input("raio do tanque: "))
x = float(input("altura da coluna: "))
n = int(input("volume de ar/combustivel (1 / 2) "))

if n == 1:
	V = (4 * pi * r**3)/3
	print(round(V,4))
else:
	V = (pi * x ** 2 * (r * 3 - x))/3
	print(round(V,4))
-- OUTPUT:
179.5944
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 02:43:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

r = float(input("raio do tanque: "))
x = float(input("altura da coluna: "))
n = int(input("volume de ar/combustivel (1 / 2) "))

if n == 2:
	V = (4 * pi * r**3)/3
	print(round(V,4))
else:
	V = (pi * x ** 2 * (r * 3 - x))/3
	print(round(V,4))
-- EXECUTION TIME:
0.130058
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
310.3391
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 02:45:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

r = float(input("raio do tanque: "))
x = float(input("altura da coluna: "))
n = int(input("volume de ar/combustivel (1 / 2) "))

if n == 1:
	V = (pi * x ** 2 * (r * 3 - x))/3
	print(round(V,4))
else:
	V = (pi * x ** 2 * (r * 3 - x))/3
	V2 = (4 * pi * r**3)/3
	print(round(V - V2,4))

-- EXECUTION TIME:
0.253123
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
-290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 02:45:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

r = float(input("raio do tanque: "))
x = float(input("altura da coluna: "))
n = int(input("volume de ar/combustivel (1 / 2) "))

if n == 1:
	V = (pi * x ** 2 * (r * 3 - x))/3
	print(round(V,4))
else:
	V = (pi * x ** 2 * (r * 3 - x))/3
	V2 = (4 * pi * r**3)/3
	print(round(V - V2,4))

-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 02:45:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

r = float(input("raio do tanque: "))
x = float(input("altura da coluna: "))
n = int(input("volume de ar/combustivel (1 / 2) "))

if n == 1:
	V = (pi * x ** 2 * (r * 3 - x))/3
	print(abs(round(V,4)))
else:
	V = (pi * x ** 2 * (r * 3 - x))/3
	V2 = (4 * pi * r**3)/3
	print(round(V - V2,4))

-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 02:45:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

r = float(input("raio do tanque: "))
x = float(input("altura da coluna: "))
n = int(input("volume de ar/combustivel (1 / 2) "))

if n == 1:
	V = (pi * x ** 2 * (r * 3 - x))/3
	print(abs(round(V,4)))
else:
	V = (pi * x ** 2 * (r * 3 - x))/3
	V2 = (4 * pi * r**3)/3
	print(round(V - V2,4))

-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 02:45:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

r = float(input("raio do tanque: "))
x = float(input("altura da coluna: "))
n = int(input("volume de ar/combustivel (1 / 2) "))

if n == 1:
	V = (pi * x ** 2 * (r * 3 - x))/3
	print(abs(round(V,4)))
else:
	V = (pi * x ** 2 * (r * 3 - x))/3
	V2 = (4 * pi * r**3)/3
	print(abs(round(V - V2,4)))

-- EXECUTION TIME:
0.13915
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 22:47:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

r = float(input("raio do tanque: "))
x = float(input("altura da coluna: "))
n = int(input("volume de ar/combustivel (1 / 2) "))

if n == 1:
	V = (pi * x ** 2 * (r * 3 - x))/3
	print(abs(round(V,4)))
else:
	V = (pi * x ** 2 * (r * 3 - x))/3
	V2 = (4 * pi * r**3)/3
	print(abs(round(V - V2,4)))

-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 22:47:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

r = float(input("raio do tanque: "))
x = float(input("altura da coluna: "))
n = int(input("volume de ar/combustivel (1 / 2) "))

if n == 1:
	V = (pi * x ** 2 * (r * 3 - x))/3
	print(abs(round(V,4)))
else:
	V = (pi * x ** 2 * (r * 3 - x))/3
	V2 = (4 * pi * r**3)/3
	print(abs(round(V - V2,4)))

-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
