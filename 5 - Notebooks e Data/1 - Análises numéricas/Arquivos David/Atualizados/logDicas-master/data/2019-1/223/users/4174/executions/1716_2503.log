== TEST (2019-05-14 16:53:53) 
-- CODE:
from math import*

n = int(input("numero natural de n:"))
-- OUTPUT:
874
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 17:01:34) 
-- CODE:
from math import*

n = int(input("numero natural de n:"))

cont = 1
sinal = -1
resultado = x

while( cont < n ):
	resultado = resultado + sinal
	sinal = sinal * -1
	cont += 1
print(round(cont,8))	
	
	


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    resultado = x
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 17:02:21) 
-- CODE:
from math import*

n = int(input("numero natural de n:"))

cont = 1
sinal = -1
resultado = n

while( cont < n ):
	resultado = resultado + sinal
	sinal = sinal * -1
	cont += 1
print(round(cont,8))	
	
	


-- OUTPUT:
136
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 17:03:19) 
-- CODE:
from math import*

n = int(input("numero natural de n:"))

cont = 1
sinal = -1
resultado = n

while( cont < n ):
	resultado = resultado + sinal
	sinal = sinal * -1
	cont += 1
print(round(cont,8))	
	
	


-- OUTPUT:
136
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 17:05:27) 
-- CODE:
from math import*

n = int(input("numero natural de n:"))

cont = 4
sinal = -1
resultado = n
den = 1 

while( cont < n ):
	resultado = resultado + (sinal * (cont / den ))
	sinal = sinal * -1
	cont += 1
print(round(cont,8))	
	
	


-- OUTPUT:
136
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 17:05:44) 
-- CODE:
from math import*

n = int(input("numero natural de n:"))

cont = 4
sinal = -1
resultado = n
den = 1 

while( cont < n ):
	resultado = resultado + (sinal * (cont / den ))
	sinal = sinal * -1
	cont += 1
print(round(cont,8))	
	
	


-- EXECUTION TIME:
0.126058
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
136
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
22
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:
15
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 17:05:54) 
-- CODE:
from math import*

n = int(input("numero natural de n:"))

cont = 4
sinal = -1
resultado = n
den = 1 

while( cont < n ):
	resultado = resultado + (sinal * (cont / den ))
	sinal = sinal * -1
	cont += 1
print(round(cont,8))	
	
	


-- EXECUTION TIME:
0.179701
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
136
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
136
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:
136
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 17:05:55) 
-- CODE:
from math import*

n = int(input("numero natural de n:"))

cont = 4
sinal = -1
resultado = n
den = 1 

while( cont < n ):
	resultado = resultado + (sinal * (cont / den ))
	sinal = sinal * -1
	cont += 1
print(round(cont,8))	
	
	


-- EXECUTION TIME:
0.289339
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
136
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
22
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:
22
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 17:05:55) 
-- CODE:
from math import*

n = int(input("numero natural de n:"))

cont = 4
sinal = -1
resultado = n
den = 1 

while( cont < n ):
	resultado = resultado + (sinal * (cont / den ))
	sinal = sinal * -1
	cont += 1
print(round(cont,8))	
	
	


-- EXECUTION TIME:
0.222489
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
15
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:

-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 17:05:55) 
-- CODE:
from math import*

n = int(input("numero natural de n:"))

cont = 4
sinal = -1
resultado = n
den = 1 

while( cont < n ):
	resultado = resultado + (sinal * (cont / den ))
	sinal = sinal * -1
	cont += 1
print(round(cont,8))	
	
	


-- EXECUTION TIME:
0.32501
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1716/2503/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 17:05:55) 
-- CODE:
from math import*

n = int(input("numero natural de n:"))

cont = 4
sinal = -1
resultado = n
den = 1 

while( cont < n ):
	resultado = resultado + (sinal * (cont / den ))
	sinal = sinal * -1
	cont += 1
print(round(cont,8))	
	
	


-- EXECUTION TIME:
0.129217
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
136
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
22
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:
15
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 17:05:56) 
-- CODE:
from math import*

n = int(input("numero natural de n:"))

cont = 4
sinal = -1
resultado = n
den = 1 

while( cont < n ):
	resultado = resultado + (sinal * (cont / den ))
	sinal = sinal * -1
	cont += 1
print(round(cont,8))	
	
	


-- EXECUTION TIME:
0.152192
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
136
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
22
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:
15
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 17:06:02) 
-- CODE:
from math import*

n = int(input("numero natural de n:"))

cont = 4
sinal = -1
resultado = n
den = 1 

while( cont < n ):
	resultado = resultado + (sinal * (cont / den ))
	sinal = sinal * -1
	cont += 1
print(round(cont,8))	
	
	


-- OUTPUT:
136
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 17:06:21) 
-- CODE:
from math import*

n = int(input("numero natural de n:"))

cont = 1
sinal = -1
resultado = n
den = 1 

while( cont < n ):
	resultado = resultado + (sinal * (cont / den ))
	sinal = sinal * -1
	cont += 1
print(round(cont,8))	
	
	


-- OUTPUT:
136
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 17:08:38) 
-- CODE:
from math import*

n = int(input("numero natural de n:"))

cont = 4
sinal = -1
resultado = n
den = 1 

while( cont < n ):
	resultado = resultado + (sinal * (cont / den ))
	sinal = sinal * -1
	cont += 1

	print(round(resultado,8))	
	
	


-- OUTPUT:
132.0
137.0
131.0
138.0
130.0
139.0
129.0
140.0
128.0
141.0
127.0
142.0
126.0
143.0
125.0
144.0
124.0
145.0
123.0
146.0
122.0
147.0
121.0
148.0
120.0
149.0
119.0
150.0
118.0
151.0
117.0
152.0
116.0
153.0
115.0
154.0
114.0
155.0
113.0
156.0
112.0
157.0
111.0
158.0
110.0
159.0
109.0
160.0
108.0
161.0
107.0
162.0
106.0
163.0
105.0
164.0
104.0
165.0
103.0
166.0
102.0
167.0
101.0
168.0
100.0
169.0
99.0
170.0
98.0
171.0
97.0
172.0
96.0
173.0
95.0
174.0
94.0
175.0
93.0
176.0
92.0
177.0
91.0
178.0
90.0
179.0
89.0
180.0
88.0
181.0
87.0
182.0
86.0
183.0
85.0
184.0
84.0
185.0
83.0
186.0
82.0
187.0
81.0
188.0
80.0
189.0
79.0
190.0
78.0
191.0
77.0
192.0
76.0
193.0
75.0
194.0
74.0
195.0
73.0
196.0
72.0
197.0
71.0
198.0
70.0
199.0
69.0
200.0
68.0
201.0
67.0
202.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 17:08:52) 
-- CODE:
from math import*

n = int(input("numero natural de n:"))

cont = 4
sinal = -1
resultado = n
den = 1 

while( cont < n ):
	resultado = resultado + (sinal * (cont / den ))
	sinal = sinal * -1
	cont += 1

	print(round(cont,8))	
	
	


-- EXECUTION TIME:
0.211066
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:
5
6
7
8
9
10
11
12
13
14
15
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 17:10:21) 
-- CODE:
from math import*

n = int(input("numero natural de n:"))

cont = 4
sinal = -1
resultado = n
den = 1 

while( cont < n ):
	resultado =  (sinal * (cont / den ))
	sinal = sinal * -1
	cont += 1

	print(round(cont,8))	
	
	


-- OUTPUT:
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 17:11:17) 
-- CODE:
from math import*

n = (input("numero natural de n:"))

cont = 4
sinal = -1
resultado = n
den = 1 

while( cont < n ):
	resultado = resultado + (sinal * (cont / den ))
	sinal = sinal * -1
	cont += 1

print(round(cont,8))	
	
	


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    while( cont < n ):
TypeError: '<' not supported between instances of 'int' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 17:12:07) 
-- CODE:
from math import*

n = (input("numero natural de n:"))

cont = 1
sinal = -1
resultado = n
den = 1 

while( cont < n ):
	resultado = resultado + (sinal * (cont / den ))
	sinal = sinal * -1
	cont += 1

print(round(cont,8))	
	
	


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    while( cont < n ):
TypeError: '<' not supported between instances of 'int' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 17:13:33) 
-- CODE:
from math import*

n = (input("numero natural de n:"))

cont = 1
sinal = -1
resultado = n
den = 1 

while( cont < n ):
	resultado = resultado + (sinal * (cont / den ))
	sinal = sinal * -1
	cont += 1

print(round(cont,8))	
	
	


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    while( cont < n ):
TypeError: '<' not supported between instances of 'int' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 17:13:50) 
-- CODE:
from math import*

n = int(input("numero natural de n:"))

cont = 1
sinal = -1
resultado = n
den = 1 

while( cont < n ):
	resultado = resultado + (sinal * (cont / den ))
	sinal = sinal * -1
	cont += 1

print(round(cont,8))	
	
	


-- OUTPUT:
136
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 17:14:43) 
-- CODE:
from math import*

n = int(input("numero natural de n:"))

cont = 1
sinal = -1
resultado = n
den = 1 

while( cont < n ):
	resultado = resultado + (sinal * (cont / den ))
	sinal = sinal * -1
	cont += 1

print(round(resultado,8))	
	
	


-- EXECUTION TIME:
0.15072
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
68.0
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
11.0
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:
22.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 17:14:43) 
-- CODE:
from math import*

n = int(input("numero natural de n:"))

cont = 1
sinal = -1
resultado = n
den = 1 

while( cont < n ):
	resultado = resultado + (sinal * (cont / den ))
	sinal = sinal * -1
	cont += 1

print(round(resultado,8))	
	
	


-- OUTPUT:
68.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 17:23:21) 
-- CODE:
from math import*

n = int(input("numero natural de n:"))

cont = 1
sinal = -1
resultado = n
den = 2

while( cont < n ):
	resultado = resultado + (sinal * (cont / den ))
	sinal = sinal * -1
	cont += 1

print(round(resultado,8))	
	
	


-- OUTPUT:
102.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 17:38:04) 
-- CODE:
from math import*

n = int(input("numero natural de n:"))
pi = 0 

while (n >= 1):
	if( 2% == 1):
	pi = pi + (4/ (2*n-1)) 
	else:
		pi = pi - (4/(2*n-1))
		
		n = n-1
print(round(pi,8))		
	


-- EXECUTION TIME:
0.201849
-- ERROR:
  File "/home/codebench/codes/1716/2503/main.py", line 7
    if( 2% == 1):
            ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 17:38:05) 
-- CODE:
from math import*

n = int(input("numero natural de n:"))
pi = 0 

while (n >= 1):
	if( 2% == 1):
	pi = pi + (4/ (2*n-1)) 
	else:
		pi = pi - (4/(2*n-1))
		
		n = n-1
print(round(pi,8))		
	


-- EXECUTION TIME:
0.212512
-- ERROR:
  File "/home/codebench/codes/1716/2503/main.py", line 7
    if( 2% == 1):
            ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 17:38:06) 
-- CODE:
from math import*

n = int(input("numero natural de n:"))
pi = 0 

while (n >= 1):
	if( 2% == 1):
	pi = pi + (4/ (2*n-1)) 
	else:
		pi = pi - (4/(2*n-1))
		
		n = n-1
print(round(pi,8))		
	


-- ERROR:
File "XXXX", line 7
    if( 2% == 1):
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 17:38:17) 
-- CODE:
from math import*

n = int(input("numero natural de n:"))
pi = 0 

while (n >= 1):
	if( n2% == 1):
	pi = pi + (4/ (2*n-1)) 
	else:
		pi = pi - (4/(2*n-1))
		
		n = n-1
print(round(pi,8))		
	


-- EXECUTION TIME:
0.151143
-- ERROR:
  File "/home/codebench/codes/1716/2503/main.py", line 7
    if( n2% == 1):
             ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 17:38:18) 
-- CODE:
from math import*

n = int(input("numero natural de n:"))
pi = 0 

while (n >= 1):
	if( n2% == 1):
	pi = pi + (4/ (2*n-1)) 
	else:
		pi = pi - (4/(2*n-1))
		
		n = n-1
print(round(pi,8))		
	


-- ERROR:
File "XXXX", line 7
    if( n2% == 1):
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 17:38:18) 
-- CODE:
from math import*

n = int(input("numero natural de n:"))
pi = 0 

while (n >= 1):
	if( n2% == 1):
	pi = pi + (4/ (2*n-1)) 
	else:
		pi = pi - (4/(2*n-1))
		
		n = n-1
print(round(pi,8))		
	


-- EXECUTION TIME:
0.217761
-- ERROR:
  File "/home/codebench/codes/1716/2503/main.py", line 7
    if( n2% == 1):
             ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 17:38:20) 
-- CODE:
from math import*

n = int(input("numero natural de n:"))
pi = 0 

while (n >= 1):
	if( n2% == 1):
	pi = pi + (4/ (2*n-1)) 
	else:
		pi = pi - (4/(2*n-1))
		
		n = n-1
print(round(pi,8))		
	


-- ERROR:
File "XXXX", line 7
    if( n2% == 1):
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 17:40:12) 
-- CODE:
n = int(input("numero natural de n:"))
pi = 0 

while (n >= 1):
	if ( n2% == 1):
	pi = pi + (4/(2*n-1)) 
	else:
		pi = pi - (4/(2*n-1))
		
		n = n-1
print(round(pi,8))		
	


-- ERROR:
File "XXXX", line 5
    if ( n2% == 1):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 17:40:13) 
-- CODE:
n = int(input("numero natural de n:"))
pi = 0 

while (n >= 1):
	if ( n2% == 1):
	pi = pi + (4/(2*n-1)) 
	else:
		pi = pi - (4/(2*n-1))
		
		n = n-1
print(round(pi,8))		
	


-- ERROR:
File "XXXX", line 5
    if ( n2% == 1):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 17:40:15) 
-- CODE:
n = int(input("numero natural de n:"))
pi = 0 

while (n >= 1):
	if ( n2% == 1):
	pi = pi + (4/(2*n-1)) 
	else:
		pi = pi - (4/(2*n-1))
		
		n = n-1
print(round(pi,8))		
	


-- EXECUTION TIME:
0.16341
-- ERROR:
  File "/home/codebench/codes/1716/2503/main.py", line 5
    if ( n2% == 1):
              ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 17:40:15) 
-- CODE:
n = int(input("numero natural de n:"))
pi = 0 

while (n >= 1):
	if ( n2% == 1):
	pi = pi + (4/(2*n-1)) 
	else:
		pi = pi - (4/(2*n-1))
		
		n = n-1
print(round(pi,8))		
	


-- ERROR:
File "XXXX", line 5
    if ( n2% == 1):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 17:41:32) 
-- CODE:
n = int(input("numero natural de n:"))
pi = 0 

while (n >= 1):
	if ( n2% == 1):
	pi = pi + (4/(2*n-1)) 
	else:
		pi = pi - (4/(2*n-1))
		
		n = n-1
print(round(pi,8))		
	


-- ERROR:
File "XXXX", line 5
    if ( n2% == 1):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 17:42:21) 
-- CODE:
n = int(input("numero natural de n:"))
pi = 0 

while (n >= 1):
	if ( n%2 == 1):
	pi = pi + (4/(2*n-1)) 
	else:
		pi = pi - (4/(2*n-1))
		
		n = n-1
print(round(pi,8))		
	


-- ERROR:
File "XXXX", line 6
    pi = pi + (4/(2*n-1)) 
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 17:42:36) 
-- CODE:
n = int(input("numero natural de n:"))
pi = 0 

while (n >= 1):
	if ( n%2 == 1):
	pi = pi + (4/(2*n-1)) 
	else:
		pi = pi - (4/(2*n-1))
		
	n = n-1
print(round(pi,8))		
	


-- ERROR:
File "XXXX", line 6
    pi = pi + (4/(2*n-1)) 
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 17:42:39) 
-- CODE:
n = int(input("numero natural de n:"))
pi = 0 

while (n >= 1):
	if ( n%2 == 1):
	pi = pi + (4/(2*n-1)) 
	else:
		pi = pi - (4/(2*n-1))
		
n = n-1
print(round(pi,8))		
	


-- ERROR:
File "XXXX", line 6
    pi = pi + (4/(2*n-1)) 
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 17:42:51) 
-- CODE:
n = int(input("numero natural de n:"))
pi = 0 

while (n >= 1):
	if ( n%2 == 1):
	pi = pi + (4/(2*n-1)) 
	else:
		pi = pi - (4/(2*n-1))
		
n = n-1
print(round(pi,8))		
	


-- EXECUTION TIME:
0.170118
-- ERROR:
  File "/home/codebench/codes/1716/2503/main.py", line 6
    pi = pi + (4/(2*n-1)) 
     ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 17:42:51) 
-- CODE:
n = int(input("numero natural de n:"))
pi = 0 

while (n >= 1):
	if ( n%2 == 1):
	pi = pi + (4/(2*n-1)) 
	else:
		pi = pi - (4/(2*n-1))
		
n = n-1
print(round(pi,8))		
	


-- ERROR:
File "XXXX", line 6
    pi = pi + (4/(2*n-1)) 
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 17:43:06) 
-- CODE:
n = int(input("numero natural de n:"))
pi = 0 

while (n >= 1):
	if ( n%2 == 1):
		pi = pi + (4/(2*n-1)) 
	else:
		pi = pi - (4/(2*n-1))
		
n = n-1
print(round(pi,8))		
	


-- ERROR:
File "XXXX", line 6
    pi = pi + (4/(2*n-1)) 
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 17:43:06) 
-- CODE:
n = int(input("numero natural de n:"))
pi = 0 

while (n >= 1):
	if ( n%2 == 1):
		pi = pi + (4/(2*n-1)) 
	else:
		pi = pi - (4/(2*n-1))
		
n = n-1
print(round(pi,8))		
	


-- ERROR:
File "XXXX", line 6
    pi = pi + (4/(2*n-1)) 
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 17:43:20) 
-- CODE:
n = int(input("numero natural de n:"))
pi = 0 

while (n >= 1):
	if ( n%2 == 1):
		pi = pi + (4/(2*n-1)) 
	else:
		pi = pi - (4/(2*n-1))
		
	n = n-1
print(round(pi,8))		
	


-- OUTPUT:
3.13423981
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 17:43:26) 
-- CODE:
n = int(input("numero natural de n:"))
pi = 0 

while (n >= 1):
	if ( n%2 == 1):
		pi = pi + (4/(2*n-1)) 
	else:
		pi = pi - (4/(2*n-1))
		
	n = n-1
print(round(pi,8))		
	


-- EXECUTION TIME:
0.39265
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
3.13423981
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
3.09616153
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:
3.20818565
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 17:50:01) 
-- CODE:
n = int(input("numero natural de n:"))
pi = 0 

while (n >= 1):
	if ( n%2 == 1):
		pi = pi + (4/(2*n-1)) 
	else:
		pi = pi - (4/(2*n-1))
		
n = n-1
print(round(pi,8))		
	


-- EXECUTION TIME:
416.094
-- ERROR:
Killed

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 17:52:11) 
-- CODE:
n = int(input("numero natural de n:"))
pi = 0 

while (n >= 1):
	if ( n%2 == 1):
		pi = pi + (4/(2*n-1)) 
	else:
		pi = pi - (4/(2*n-1))
		
	n = n-1
print(round(pi,8))		
	


-- EXECUTION TIME:
0.11875
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
3.13423981
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
3.09616153
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:
3.20818565
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 17:52:16) 
-- CODE:
n = int(input("numero natural de n:"))
pi = 0 

while (n >= 1):
	if ( n%2 == 1):
		pi = pi + (4/(2*n-1)) 
	else:
		pi = pi - (4/(2*n-1))
		
	n = n-1
print(round(pi,8))		
	


-- OUTPUT:
3.13423981
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 17:52:25) 
-- CODE:
n = int(input("numero natural de n:"))
pi = 0 

while (n >= 1):
	if ( n%2 == 1):
		pi = pi + (4/(2*n-1)) 
	else:
		pi = pi - (4/(2*n-1))
		
	n = n-1
print(round(pi,8))		
	


-- OUTPUT:
3.13423981
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 17:52:32) 
-- CODE:
n = int(input("numero natural de n:"))
pi = 0 

while (n >= 1):
	if ( n%2 == 1):
		pi = pi + (4/(2*n-1)) 
	else:
		pi = pi - (4/(2*n-1))
		
	n = n-1
print(round(pi,8))		
	


-- EXECUTION TIME:
0.212697
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
3.13423981
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
3.09616153
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:
3.20818565
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 10:22:32) 
-- CODE:
n = int(input("numero natural de n:"))
pi = 0 

while (n >= 1):
	if ( n%2 == 1):
		pi = pi + (4/(2*n-1)) 
	else:
		pi = pi - (4/(2*n-1))
		
	n = n-1
print(round(pi,8))		
	


-- OUTPUT:
3.13423981
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 10:27:01) 
-- CODE:
n = int(input("numero natural de n:"))
pi = 0 

while (n >= 1):
	if ( n%2 == 1):
		pi = pi + (4/(2*n-1)) 
	else:
		pi = pi - (4/(2*n-1))
		
	n = n-1
print(round(pi,8))		
	


-- OUTPUT:
3.13423981
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 10:47:44) 
-- CODE:
n = int(input("numero natural de n:"))
pi = 0 

while (n >= 1):
	if ( n%2 == 1):
		pi = pi + (4/(2*n-1)) 
	else:
		pi = pi - (4/(2*n-1))
		
	n = n-1
print(round(pi,8))		
	


-- OUTPUT:
3.13423981
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
