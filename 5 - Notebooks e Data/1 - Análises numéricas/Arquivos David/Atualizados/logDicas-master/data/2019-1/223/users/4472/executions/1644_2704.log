== TEST (2019-04-13 18:54:10) 
-- CODE:
nota = float(input("Nota do Aluno: "))
bonus = input("Aluno recebera bonificação (S / N)? ")

if bonus == 'n':
	resultado = nota
else bonus == 's'
	resultado = nota + (nota * 0.1)
	
print (resultado)
-- ERROR:
File "XXXX", line 6
    else bonus == 's'
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 18:54:35) 
-- CODE:
nota = float(input("Nota do Aluno: "))
bonus = input("Aluno recebera bonificação (S / N)? ")

if bonus == "n":
	resultado = nota
else bonus == "s":
	resultado = nota + (nota * 0.1)
	
print (resultado)
-- ERROR:
File "XXXX", line 6
    else bonus == "s":
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 19:00:24) 
-- CODE:
nota = float(input("Nota do Aluno: "))
bonus = input("Aluno recebera bonificação (S / N)? ")

if (bonus == "n"):
	resultado = nota
else (bonus == "s"):
	resultado = nota + (nota * 0.1)
	
print (resultado)
-- ERROR:
File "XXXX", line 6
    else (bonus == "s"):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 19:01:01) 
-- CODE:
nota = float(input("Nota do Aluno: "))
bonus = input("Aluno recebera bonificação (S / N)? ")

if (bonus == "n"):
	resultado = nota
else:
	resultado = nota + (nota * 0.1)
	
print (resultado)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 19:01:35) 
-- CODE:
nota = float(input("Nota do Aluno: "))
bonus = input("Aluno recebera bonus (S / N)? ")

if (bonus == "n"):
	resultado = nota
else:
	resultado = nota + (nota * 0.1)
	
print (resultado)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 19:01:53) 
-- CODE:
nota = float(input("Nota do Aluno: "))
bonus = input("Aluno recebera bonus (S / N)? ")

if (bonus == "n"):
	resultado = nota
else:
	resultado = nota + (nota * 0.1)
	
print (resultado)
-- EXECUTION TIME:
0.266304
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.840000000000001
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 19:02:29) 
-- CODE:
nota = float(input("Nota do Aluno: "))
bonus = input("Aluno recebera bonus (S / N)? ")

if (bonus == "n"):
	resultado = nota
else:
	resultado = nota + (nota * 0.1)
	
print (resultado)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 19:02:47) 
-- CODE:
nota = float(input("Nota do Aluno: "))
bonus = input("Aluno recebera bonus (S / N)? ")

if (bonus == "n"):
	resultado = nota
else:
	resultado = nota + (nota * 0.1)
	
print (resultado)
-- EXECUTION TIME:
0.185224
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.840000000000001
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 19:07:41) 
-- CODE:
nota = float(input("Nota do Aluno: "))
bonus = input("Aluno recebera bonus? (S/N) ")

if (bonus.upper() == "N"):
	nota = nota
else:
	nota = nota + (nota * 0.1)
	
print (nota)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 19:07:56) 
-- CODE:
nota = float(input("Nota do Aluno: "))
bonus = input("Aluno recebera bonus? (S/N) ")

if (bonus.upper() == "N"):
	nota = nota
else:
	nota = nota + (nota * 0.1)
	
print (nota)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 19:08:20) 
-- CODE:
nota = float(input("Nota do Aluno: "))
bonus = input("Aluno recebera bonus? (S/N) ")

if (bonus.upper() == "N"):
	nota = nota
else:
	nota = nota + (nota * 0.1)
	
print (nota)
-- EXECUTION TIME:
0.124505
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 21:49:21) 
-- CODE:
nota = float(input("Nota do Aluno: "))
bonus = input("Aluno recebera bonus? (S/N) ")

if (bonus.upper() == "N"):
	nota = nota
elif (bonus.upper() == "S"):
	nota = nota + (nota * 0.1)
else:
	nota = "entrada invalida"
	
print (nota)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 21:50:12) 
-- CODE:
nota = float(input("Nota do Aluno: "))
bonus = input("Aluno recebera bonus? (S/N) ")

if (bonus.upper() == "N"):
	nota = nota
elif (bonus.upper() == "S"):
	nota = nota + (nota * 0.1)
else:
	nota = "entrada invalida"
	
print (nota)
-- EXECUTION TIME:
0.175201
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 21:50:57) 
-- CODE:
nota = float(input("Nota do Aluno: "))
bonus = input("Aluno recebera bonus? (S/N) ")

if (bonus.upper() == "N"):
	nota = nota
elif (bonus.upper() == "S"):
	nota = nota + (nota * 0.1)
else:
	print ("entrada invalida")
	
print (nota)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 21:52:17) 
-- CODE:
nota = float(input("Nota do Aluno: "))
bonus = input("Aluno recebera bonus? (S/N) ")

if (bonus.upper() == "N"):
	nota = nota
elif (bonus.upper() == "S"):
	nota = nota + (nota * 0.1)
else (bonus.lower() == "n":
	print ("entrada invalida")
	
print (nota)
-- ERROR:
File "XXXX", line 8
    else (bonus.lower() == "n":
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 21:52:42) 
-- CODE:
nota = float(input("Nota do Aluno: "))
bonus = input("Aluno recebera bonus? (S/N) ")

if (bonus.upper() == "N"):
	nota = nota
elif (bonus.upper() == "S"):
	nota = nota + (nota * 0.1)
else (bonus.lower() == "n"):
	print ("entrada invalida")
	
print (nota)
-- ERROR:
File "XXXX", line 8
    else (bonus.lower() == "n"):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 21:55:02) 
-- CODE:
nota = float(input("Nota do Aluno: "))
bonus = input("Aluno recebera bonus? (S/N) ")

if (bonus.upper() == "N"):
	nota = nota
elif (bonus.upper() == "S"):
	nota = nota + (nota * 0.1)
else (bonus.lower() == "n"):
	print ("entrada invalida")
	
print (nota)
-- ERROR:
File "XXXX", line 8
    else (bonus.lower() == "n"):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 21:55:42) 
-- CODE:
nota = float(input("Nota do Aluno: "))
bonus = input("Aluno recebera bonus? (S/N) ")

if (bonus.upper() == "N"):
	nota = nota
elif (bonus.upper() == "S"):
	nota = nota + (nota * 0.1)
else:
	print ("entrada invalida")
	
print (nota)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 21:56:03) 
-- CODE:
nota = float(input("Nota do Aluno: "))
bonus = input("Aluno recebera bonus? (S/N) ")

if (bonus.upper() == "N"):
	nota = nota
elif (bonus.upper() == "S"):
	nota = nota + (nota * 0.1)
else:
	print ("entrada invalida")
	
print (nota)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 21:56:16) 
-- CODE:
nota = float(input("Nota do Aluno: "))
bonus = input("Aluno recebera bonus? (S/N) ")

if (bonus.upper() == "N"):
	nota = nota
elif (bonus.upper() == "S"):
	nota = nota + (nota * 0.1)
else:
	print ("entrada invalida")
	
print (nota)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 21:56:40) 
-- CODE:
nota = float(input("Nota do Aluno: "))
bonus = input("Aluno recebera bonus? (S/N) ")

if (bonus.upper() == "N"):
	nota = nota
elif (bonus.upper() == "S"):
	nota = nota + (nota * 0.1)
else:
	print ("entrada invalida")
	
print (nota)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 21:57:18) 
-- CODE:
nota = float(input("Nota do Aluno: "))
bonus = input("Aluno recebera bonus? (S/N) ")

if (bonus.upper() == "N"):
	nota = nota
elif (bonus.upper() == "S"):
	nota = nota + (nota * 0.1)
else:
	print ("entrada invalida")
	
print (nota)
print (bonus)
-- OUTPUT:
5.5
S
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 21:57:42) 
-- CODE:
nota = float(input("Nota do Aluno: "))
bonus = input("Aluno recebera bonus? (S/N) ")

if (bonus.upper() == "N"):
	nota = nota
elif (bonus.upper() == "S"):
	nota = nota + (nota * 0.1)
else:
	print ("entrada invalida")
	
print (nota)
-- EXECUTION TIME:
0.159516
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
