== TEST (2019-06-11 17:06:16) 
-- CODE:
from numpy import *

vet = array(eval(input('Faltas: ')))
nv = zeros(6, dtype=int)

for i in range(size(vet)):
	if vet[i]==2:
		nv[0] = nv[0]+1
	if vet[i]==3:
		nv[1] = nv[1]+1
	if vet[i]==4:
		nv[2] = nv[2]+1
	if vet[i]==5:
		nv[3]+=1
	if vet[i]==6:
		nv[4] = nv[4]+1
	if vet[i]==7:
		nv[5] = nv[5]+1
v = zeros(6, dtype=int)
for i in range(size(nv)):
	v[i] = round(((nv[i]*100)/i), 0)
print(v)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 17:07:35) 
-- CODE:
from numpy import *

vet = array(eval(input('Faltas: ')))
nv = zeros(6, dtype=int)

for i in range(size(vet)):
	if vet[i]==2:
		nv[0] = nv[0]+1
	if vet[i]==3:
		nv[1] = nv[1]+1
	if vet[i]==4:
		nv[2] = nv[2]+1
	if vet[i]==5:
		nv[3]+=1
	if vet[i]==6:
		nv[4] = nv[4]+1
	if vet[i]==7:
		nv[5] = nv[5]+1
v = zeros(6, dtype=int)
for i in range(size(nv)):
	v[i] = round(((nv[i]*100)/i), 0)
print(v)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 17:09:03) 
-- CODE:
from numpy import *

vet = array(eval(input('Faltas: ')))
nv = zeros(6, dtype=int)

for i in range(size(vet)):
	if vet[i]==2:
		nv[0] = nv[0]+1
	if vet[i]==3:
		nv[1] = nv[1]+1
	if vet[i]==4:
		nv[2] = nv[2]+1
	if vet[i]==5:
		nv[3]+=1
	if vet[i]==6:
		nv[4] = nv[4]+1
	if vet[i]==7:
		nv[5] = nv[5]+1
v = zeros(6, dtype=int)
for i in range(size(nv)):
	v[i] = round(((nv[i]*100)/size(vet)), 1)
print(v)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 17:09:17) 
-- CODE:
from numpy import *

vet = array(eval(input('Faltas: ')))
nv = zeros(6, dtype=int)

for i in range(size(vet)):
	if vet[i]==2:
		nv[0] = nv[0]+1
	if vet[i]==3:
		nv[1] = nv[1]+1
	if vet[i]==4:
		nv[2] = nv[2]+1
	if vet[i]==5:
		nv[3]+=1
	if vet[i]==6:
		nv[4] = nv[4]+1
	if vet[i]==7:
		nv[5] = nv[5]+1
v = zeros(6, dtype=int)
for i in range(size(nv)):
	v[i] = round(((nv[i]*100)/size(vet)), 1)
print(v)
	
-- EXECUTION TIME:
1.15241
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[18  0  0 18 25 37]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[ 4  8 16 20 20 32]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[15  7 23  7 15 30]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 17:09:47) 
-- CODE:
from numpy import *

vet = array(eval(input('Faltas: ')))
nv = zeros(6, dtype=int)

for i in range(size(vet)):
	if vet[i]==2:
		nv[0] = nv[0]+1
	if vet[i]==3:
		nv[1] = nv[1]+1
	if vet[i]==4:
		nv[2] = nv[2]+1
	if vet[i]==5:
		nv[3]+=1
	if vet[i]==6:
		nv[4] = nv[4]+1
	if vet[i]==7:
		nv[5] = nv[5]+1
v = zeros(6, dtype=int)
for i in range(size(nv)):
	v[i] = round(((nv[i]*100)/size(vet)), 1)
print(v)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 17:11:14) 
-- CODE:
from numpy import *

vet = array(eval(input('Faltas: ')))
nv = zeros(6, dtype=int)

for i in range(size(vet)):
	if vet[i]==2:
		nv[0] = nv[0]+1
	if vet[i]==3:
		nv[1] = nv[1]+1
	if vet[i]==4:
		nv[2] = nv[2]+1
	if vet[i]==5:
		nv[3]+=1
	if vet[i]==6:
		nv[4] = nv[4]+1
	if vet[i]==7:
		nv[5] = nv[5]+1
v = zeros(6, dtype=int)
for i in range(size(nv)):
	v[i] = round(((nv[i]*100)/size(vet)), 1)
print(v)
	
-- EXECUTION TIME:
1.67797
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[18  0  0 18 25 37]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[ 4  8 16 20 20 32]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[15  7 23  7 15 30]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 17:11:15) 
-- CODE:
from numpy import *

vet = array(eval(input('Faltas: ')))
nv = zeros(6, dtype=int)

for i in range(size(vet)):
	if vet[i]==2:
		nv[0] = nv[0]+1
	if vet[i]==3:
		nv[1] = nv[1]+1
	if vet[i]==4:
		nv[2] = nv[2]+1
	if vet[i]==5:
		nv[3]+=1
	if vet[i]==6:
		nv[4] = nv[4]+1
	if vet[i]==7:
		nv[5] = nv[5]+1
v = zeros(6, dtype=int)
for i in range(size(nv)):
	v[i] = round(((nv[i]*100)/size(vet)), 1)
print(v)
	
-- EXECUTION TIME:
3.49545
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[18  0  0 18 25 37]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[ 4  8 16 20 20 32]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[15  7 23  7 15 30]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 17:11:16) 
-- CODE:
from numpy import *

vet = array(eval(input('Faltas: ')))
nv = zeros(6, dtype=int)

for i in range(size(vet)):
	if vet[i]==2:
		nv[0] = nv[0]+1
	if vet[i]==3:
		nv[1] = nv[1]+1
	if vet[i]==4:
		nv[2] = nv[2]+1
	if vet[i]==5:
		nv[3]+=1
	if vet[i]==6:
		nv[4] = nv[4]+1
	if vet[i]==7:
		nv[5] = nv[5]+1
v = zeros(6, dtype=int)
for i in range(size(nv)):
	v[i] = round(((nv[i]*100)/size(vet)), 1)
print(v)
	
-- EXECUTION TIME:
5.94772
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[ 4  8 16 20 20 32]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[ 4  8 16 20 20 32]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[15  7 23  7 15 30]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 17:11:17) 
-- CODE:
from numpy import *

vet = array(eval(input('Faltas: ')))
nv = zeros(6, dtype=int)

for i in range(size(vet)):
	if vet[i]==2:
		nv[0] = nv[0]+1
	if vet[i]==3:
		nv[1] = nv[1]+1
	if vet[i]==4:
		nv[2] = nv[2]+1
	if vet[i]==5:
		nv[3]+=1
	if vet[i]==6:
		nv[4] = nv[4]+1
	if vet[i]==7:
		nv[5] = nv[5]+1
v = zeros(6, dtype=int)
for i in range(size(nv)):
	v[i] = round(((nv[i]*100)/size(vet)), 1)
print(v)
	
-- EXECUTION TIME:
7.94385
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[ 4  8 16 20 20 32]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[ 4  8 16 20 20 32]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[15  7 23  7 15 30]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 17:11:18) 
-- CODE:
from numpy import *

vet = array(eval(input('Faltas: ')))
nv = zeros(6, dtype=int)

for i in range(size(vet)):
	if vet[i]==2:
		nv[0] = nv[0]+1
	if vet[i]==3:
		nv[1] = nv[1]+1
	if vet[i]==4:
		nv[2] = nv[2]+1
	if vet[i]==5:
		nv[3]+=1
	if vet[i]==6:
		nv[4] = nv[4]+1
	if vet[i]==7:
		nv[5] = nv[5]+1
v = zeros(6, dtype=int)
for i in range(size(nv)):
	v[i] = round(((nv[i]*100)/size(vet)), 1)
print(v)
	
-- EXECUTION TIME:
8.93104
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[ 4  8 16 20 20 32]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[ 4  8 16 20 20 32]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[15  7 23  7 15 30]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 17:11:19) 
-- CODE:
from numpy import *

vet = array(eval(input('Faltas: ')))
nv = zeros(6, dtype=int)

for i in range(size(vet)):
	if vet[i]==2:
		nv[0] = nv[0]+1
	if vet[i]==3:
		nv[1] = nv[1]+1
	if vet[i]==4:
		nv[2] = nv[2]+1
	if vet[i]==5:
		nv[3]+=1
	if vet[i]==6:
		nv[4] = nv[4]+1
	if vet[i]==7:
		nv[5] = nv[5]+1
v = zeros(6, dtype=int)
for i in range(size(nv)):
	v[i] = round(((nv[i]*100)/size(vet)), 1)
print(v)
	
-- EXECUTION TIME:
9.96955
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[ 4  8 16 20 20 32]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[15  7 23  7 15 30]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[18  0  0 18 25 37]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 17:11:32) 
-- CODE:
from numpy import *

vet = array(eval(input('Faltas: ')))
nv = zeros(6, dtype=int)

for i in range(size(vet)):
	if vet[i]==2:
		nv[0] = nv[0]+1
	if vet[i]==3:
		nv[1] = nv[1]+1
	if vet[i]==4:
		nv[2] = nv[2]+1
	if vet[i]==5:
		nv[3]+=1
	if vet[i]==6:
		nv[4] = nv[4]+1
	if vet[i]==7:
		nv[5] = nv[5]+1
v = zeros(6, dtype=int)
for i in range(size(nv)):
	v[i] = round(((nv[i]*100)/size(vet)), 1)
print(v)
	
-- EXECUTION TIME:
5.77119
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[18  0  0 18 25 37]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[ 4  8 16 20 20 32]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[15  7 23  7 15 30]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 17:11:33) 
-- CODE:
from numpy import *

vet = array(eval(input('Faltas: ')))
nv = zeros(6, dtype=int)

for i in range(size(vet)):
	if vet[i]==2:
		nv[0] = nv[0]+1
	if vet[i]==3:
		nv[1] = nv[1]+1
	if vet[i]==4:
		nv[2] = nv[2]+1
	if vet[i]==5:
		nv[3]+=1
	if vet[i]==6:
		nv[4] = nv[4]+1
	if vet[i]==7:
		nv[5] = nv[5]+1
v = zeros(6, dtype=int)
for i in range(size(nv)):
	v[i] = round(((nv[i]*100)/size(vet)), 1)
print(v)
	
-- EXECUTION TIME:
6.21694
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[18  0  0 18 25 37]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[ 4  8 16 20 20 32]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[15  7 23  7 15 30]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 17:11:34) 
-- CODE:
from numpy import *

vet = array(eval(input('Faltas: ')))
nv = zeros(6, dtype=int)

for i in range(size(vet)):
	if vet[i]==2:
		nv[0] = nv[0]+1
	if vet[i]==3:
		nv[1] = nv[1]+1
	if vet[i]==4:
		nv[2] = nv[2]+1
	if vet[i]==5:
		nv[3]+=1
	if vet[i]==6:
		nv[4] = nv[4]+1
	if vet[i]==7:
		nv[5] = nv[5]+1
v = zeros(6, dtype=int)
for i in range(size(nv)):
	v[i] = round(((nv[i]*100)/size(vet)), 1)
print(v)
	
-- EXECUTION TIME:
6.01509
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[18  0  0 18 25 37]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[ 4  8 16 20 20 32]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[15  7 23  7 15 30]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 17:11:35) 
-- CODE:
from numpy import *

vet = array(eval(input('Faltas: ')))
nv = zeros(6, dtype=int)

for i in range(size(vet)):
	if vet[i]==2:
		nv[0] = nv[0]+1
	if vet[i]==3:
		nv[1] = nv[1]+1
	if vet[i]==4:
		nv[2] = nv[2]+1
	if vet[i]==5:
		nv[3]+=1
	if vet[i]==6:
		nv[4] = nv[4]+1
	if vet[i]==7:
		nv[5] = nv[5]+1
v = zeros(6, dtype=int)
for i in range(size(nv)):
	v[i] = round(((nv[i]*100)/size(vet)), 1)
print(v)
	
-- EXECUTION TIME:
5.88714
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[18  0  0 18 25 37]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[ 4  8 16 20 20 32]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[15  7 23  7 15 30]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 17:11:36) 
-- CODE:
from numpy import *

vet = array(eval(input('Faltas: ')))
nv = zeros(6, dtype=int)

for i in range(size(vet)):
	if vet[i]==2:
		nv[0] = nv[0]+1
	if vet[i]==3:
		nv[1] = nv[1]+1
	if vet[i]==4:
		nv[2] = nv[2]+1
	if vet[i]==5:
		nv[3]+=1
	if vet[i]==6:
		nv[4] = nv[4]+1
	if vet[i]==7:
		nv[5] = nv[5]+1
v = zeros(6, dtype=int)
for i in range(size(nv)):
	v[i] = round(((nv[i]*100)/size(vet)), 1)
print(v)
	
-- EXECUTION TIME:
5.82549
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[18  0  0 18 25 37]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[ 4  8 16 20 20 32]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[15  7 23  7 15 30]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 17:11:37) 
-- CODE:
from numpy import *

vet = array(eval(input('Faltas: ')))
nv = zeros(6, dtype=int)

for i in range(size(vet)):
	if vet[i]==2:
		nv[0] = nv[0]+1
	if vet[i]==3:
		nv[1] = nv[1]+1
	if vet[i]==4:
		nv[2] = nv[2]+1
	if vet[i]==5:
		nv[3]+=1
	if vet[i]==6:
		nv[4] = nv[4]+1
	if vet[i]==7:
		nv[5] = nv[5]+1
v = zeros(6, dtype=int)
for i in range(size(nv)):
	v[i] = round(((nv[i]*100)/size(vet)), 1)
print(v)
	
-- EXECUTION TIME:
5.90632
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[ 4  8 16 20 20 32]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[15  7 23  7 15 30]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[18  0  0 18 25 37]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 17:11:51) 
-- CODE:
from numpy import *

vet = array(eval(input('Faltas: ')))
nv = zeros(6, dtype=int)

for i in range(size(vet)):
	if vet[i]==2:
		nv[0] = nv[0]+1
	if vet[i]==3:
		nv[1] = nv[1]+1
	if vet[i]==4:
		nv[2] = nv[2]+1
	if vet[i]==5:
		nv[3]+=1
	if vet[i]==6:
		nv[4] = nv[4]+1
	if vet[i]==7:
		nv[5] = nv[5]+1
v = zeros(6, dtype=int)
for i in range(size(nv)):
	v[i] = round(((nv[i]*100)/size(vet)), 1)
print(v)
	
-- EXECUTION TIME:
6.04014
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[18  0  0 18 25 37]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[ 4  8 16 20 20 32]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[15  7 23  7 15 30]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 17:11:52) 
-- CODE:
from numpy import *

vet = array(eval(input('Faltas: ')))
nv = zeros(6, dtype=int)

for i in range(size(vet)):
	if vet[i]==2:
		nv[0] = nv[0]+1
	if vet[i]==3:
		nv[1] = nv[1]+1
	if vet[i]==4:
		nv[2] = nv[2]+1
	if vet[i]==5:
		nv[3]+=1
	if vet[i]==6:
		nv[4] = nv[4]+1
	if vet[i]==7:
		nv[5] = nv[5]+1
v = zeros(6, dtype=int)
for i in range(size(nv)):
	v[i] = round(((nv[i]*100)/size(vet)), 1)
print(v)
	
-- EXECUTION TIME:
5.63885
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[18  0  0 18 25 37]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[ 4  8 16 20 20 32]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[15  7 23  7 15 30]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 17:11:53) 
-- CODE:
from numpy import *

vet = array(eval(input('Faltas: ')))
nv = zeros(6, dtype=int)

for i in range(size(vet)):
	if vet[i]==2:
		nv[0] = nv[0]+1
	if vet[i]==3:
		nv[1] = nv[1]+1
	if vet[i]==4:
		nv[2] = nv[2]+1
	if vet[i]==5:
		nv[3]+=1
	if vet[i]==6:
		nv[4] = nv[4]+1
	if vet[i]==7:
		nv[5] = nv[5]+1
v = zeros(6, dtype=int)
for i in range(size(nv)):
	v[i] = round(((nv[i]*100)/size(vet)), 1)
print(v)
	
-- EXECUTION TIME:
5.7614
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[18  0  0 18 25 37]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[ 4  8 16 20 20 32]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[15  7 23  7 15 30]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 17:11:54) 
-- CODE:
from numpy import *

vet = array(eval(input('Faltas: ')))
nv = zeros(6, dtype=int)

for i in range(size(vet)):
	if vet[i]==2:
		nv[0] = nv[0]+1
	if vet[i]==3:
		nv[1] = nv[1]+1
	if vet[i]==4:
		nv[2] = nv[2]+1
	if vet[i]==5:
		nv[3]+=1
	if vet[i]==6:
		nv[4] = nv[4]+1
	if vet[i]==7:
		nv[5] = nv[5]+1
v = zeros(6, dtype=int)
for i in range(size(nv)):
	v[i] = round(((nv[i]*100)/size(vet)), 1)
print(v)
	
-- EXECUTION TIME:
6.08962
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[18  0  0 18 25 37]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[ 4  8 16 20 20 32]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[15  7 23  7 15 30]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 17:11:55) 
-- CODE:
from numpy import *

vet = array(eval(input('Faltas: ')))
nv = zeros(6, dtype=int)

for i in range(size(vet)):
	if vet[i]==2:
		nv[0] = nv[0]+1
	if vet[i]==3:
		nv[1] = nv[1]+1
	if vet[i]==4:
		nv[2] = nv[2]+1
	if vet[i]==5:
		nv[3]+=1
	if vet[i]==6:
		nv[4] = nv[4]+1
	if vet[i]==7:
		nv[5] = nv[5]+1
v = zeros(6, dtype=int)
for i in range(size(nv)):
	v[i] = round(((nv[i]*100)/size(vet)), 1)
print(v)
	
-- EXECUTION TIME:
6.05998
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[18  0  0 18 25 37]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[ 4  8 16 20 20 32]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[15  7 23  7 15 30]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 17:11:56) 
-- CODE:
from numpy import *

vet = array(eval(input('Faltas: ')))
nv = zeros(6, dtype=int)

for i in range(size(vet)):
	if vet[i]==2:
		nv[0] = nv[0]+1
	if vet[i]==3:
		nv[1] = nv[1]+1
	if vet[i]==4:
		nv[2] = nv[2]+1
	if vet[i]==5:
		nv[3]+=1
	if vet[i]==6:
		nv[4] = nv[4]+1
	if vet[i]==7:
		nv[5] = nv[5]+1
v = zeros(6, dtype=int)
for i in range(size(nv)):
	v[i] = round(((nv[i]*100)/size(vet)), 1)
print(v)
	
-- EXECUTION TIME:
6.2152
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[ 4  8 16 20 20 32]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[15  7 23  7 15 30]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[18  0  0 18 25 37]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 17:12:10) 
-- CODE:
from numpy import *

vet = array(eval(input('Faltas: ')))
nv = zeros(6, dtype=int)

for i in range(size(vet)):
	if vet[i]==2:
		nv[0] = nv[0]+1
	if vet[i]==3:
		nv[1] = nv[1]+1
	if vet[i]==4:
		nv[2] = nv[2]+1
	if vet[i]==5:
		nv[3]+=1
	if vet[i]==6:
		nv[4] = nv[4]+1
	if vet[i]==7:
		nv[5] = nv[5]+1
v = zeros(6, dtype=int)
for i in range(size(nv)):
	v[i] = round(((nv[i]*100)/size(vet)), 1)
print(v)
	
-- EXECUTION TIME:
6.07074
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[18  0  0 18 25 37]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[ 4  8 16 20 20 32]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[15  7 23  7 15 30]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 17:12:11) 
-- CODE:
from numpy import *

vet = array(eval(input('Faltas: ')))
nv = zeros(6, dtype=int)

for i in range(size(vet)):
	if vet[i]==2:
		nv[0] = nv[0]+1
	if vet[i]==3:
		nv[1] = nv[1]+1
	if vet[i]==4:
		nv[2] = nv[2]+1
	if vet[i]==5:
		nv[3]+=1
	if vet[i]==6:
		nv[4] = nv[4]+1
	if vet[i]==7:
		nv[5] = nv[5]+1
v = zeros(6, dtype=int)
for i in range(size(nv)):
	v[i] = round(((nv[i]*100)/size(vet)), 1)
print(v)
	
-- EXECUTION TIME:
6.12542
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[18  0  0 18 25 37]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[ 4  8 16 20 20 32]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[15  7 23  7 15 30]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 17:12:11) 
-- CODE:
from numpy import *

vet = array(eval(input('Faltas: ')))
nv = zeros(6, dtype=int)

for i in range(size(vet)):
	if vet[i]==2:
		nv[0] = nv[0]+1
	if vet[i]==3:
		nv[1] = nv[1]+1
	if vet[i]==4:
		nv[2] = nv[2]+1
	if vet[i]==5:
		nv[3]+=1
	if vet[i]==6:
		nv[4] = nv[4]+1
	if vet[i]==7:
		nv[5] = nv[5]+1
v = zeros(6, dtype=int)
for i in range(size(nv)):
	v[i] = round(((nv[i]*100)/size(vet)), 1)
print(v)
	
-- EXECUTION TIME:
6.25298
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[18  0  0 18 25 37]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[ 4  8 16 20 20 32]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[15  7 23  7 15 30]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 17:12:11) 
-- CODE:
from numpy import *

vet = array(eval(input('Faltas: ')))
nv = zeros(6, dtype=int)

for i in range(size(vet)):
	if vet[i]==2:
		nv[0] = nv[0]+1
	if vet[i]==3:
		nv[1] = nv[1]+1
	if vet[i]==4:
		nv[2] = nv[2]+1
	if vet[i]==5:
		nv[3]+=1
	if vet[i]==6:
		nv[4] = nv[4]+1
	if vet[i]==7:
		nv[5] = nv[5]+1
v = zeros(6, dtype=int)
for i in range(size(nv)):
	v[i] = round(((nv[i]*100)/size(vet)), 1)
print(v)
	
-- EXECUTION TIME:
6.51822
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[18  0  0 18 25 37]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[ 4  8 16 20 20 32]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[15  7 23  7 15 30]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 17:12:11) 
-- CODE:
from numpy import *

vet = array(eval(input('Faltas: ')))
nv = zeros(6, dtype=int)

for i in range(size(vet)):
	if vet[i]==2:
		nv[0] = nv[0]+1
	if vet[i]==3:
		nv[1] = nv[1]+1
	if vet[i]==4:
		nv[2] = nv[2]+1
	if vet[i]==5:
		nv[3]+=1
	if vet[i]==6:
		nv[4] = nv[4]+1
	if vet[i]==7:
		nv[5] = nv[5]+1
v = zeros(6, dtype=int)
for i in range(size(nv)):
	v[i] = round(((nv[i]*100)/size(vet)), 1)
print(v)
	
-- EXECUTION TIME:
6.66298
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[18  0  0 18 25 37]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[ 4  8 16 20 20 32]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[15  7 23  7 15 30]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 17:12:11) 
-- CODE:
from numpy import *

vet = array(eval(input('Faltas: ')))
nv = zeros(6, dtype=int)

for i in range(size(vet)):
	if vet[i]==2:
		nv[0] = nv[0]+1
	if vet[i]==3:
		nv[1] = nv[1]+1
	if vet[i]==4:
		nv[2] = nv[2]+1
	if vet[i]==5:
		nv[3]+=1
	if vet[i]==6:
		nv[4] = nv[4]+1
	if vet[i]==7:
		nv[5] = nv[5]+1
v = zeros(6, dtype=int)
for i in range(size(nv)):
	v[i] = round(((nv[i]*100)/size(vet)), 1)
print(v)
	
-- EXECUTION TIME:
6.70715
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[ 4  8 16 20 20 32]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[15  7 23  7 15 30]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 17:12:33) 
-- CODE:
from numpy import *

vet = array(eval(input('Faltas: ')))
nv = zeros(6, dtype=int)

for i in range(size(vet)):
	if vet[i]==2:
		nv[0] = nv[0]+1
	if vet[i]==3:
		nv[1] = nv[1]+1
	if vet[i]==4:
		nv[2] = nv[2]+1
	if vet[i]==5:
		nv[3]+=1
	if vet[i]==6:
		nv[4] = nv[4]+1
	if vet[i]==7:
		nv[5] = nv[5]+1
v = zeros(6)
for i in range(size(nv)):
	v[i] = round(((nv[i]*100)/size(vet)), 1)
print(v)
	
-- EXECUTION TIME:
1.09382
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[18.8  0.   0.  18.8 25.  37.5]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[ 4.  8. 16. 20. 20. 32.]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[15.4  7.7 23.1  7.7 15.4 30.8]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 17:28:16) 
-- CODE:
from numpy import *

vet = array(eval(input('Faltas: ')))
nv = zeros(6, dtype=int)

for i in range(size(vet)):
	if vet[i]==2:
		nv[0] = nv[0]+1
	if vet[i]==3:
		nv[1] = nv[1]+1
	if vet[i]==4:
		nv[2] = nv[2]+1
	if vet[i]==5:
		nv[3]+=1
	if vet[i]==6:
		nv[4] = nv[4]+1
	if vet[i]==7:
		nv[5] = nv[5]+1
v = zeros(6)
for i in range(size(nv)):
	v[i] = round(((nv[i]*100)/size(vet)), 1)
	print(v)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 17:28:38) 
-- CODE:
from numpy import *

vet = array(eval(input('Faltas: ')))
nv = zeros(6, dtype=int)

for i in range(size(vet)):
	if vet[i]==2:
		nv[0] = nv[0]+1
	if vet[i]==3:
		nv[1] = nv[1]+1
	if vet[i]==4:
		nv[2] = nv[2]+1
	if vet[i]==5:
		nv[3]+=1
	if vet[i]==6:
		nv[4] = nv[4]+1
	if vet[i]==7:
		nv[5] = nv[5]+1
v = zeros(6)
for i in range(size(nv)):
	v[i] = round(((nv[i]*100)/size(vet)), 1)
print(v)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 17:28:46) 
-- CODE:
from numpy import *

vet = array(eval(input('Faltas: ')))
nv = zeros(6, dtype=int)

for i in range(size(vet)):
	if vet[i]==2:
		nv[0] = nv[0]+1
	if vet[i]==3:
		nv[1] = nv[1]+1
	if vet[i]==4:
		nv[2] = nv[2]+1
	if vet[i]==5:
		nv[3]+=1
	if vet[i]==6:
		nv[4] = nv[4]+1
	if vet[i]==7:
		nv[5] = nv[5]+1
v = zeros(6)
for i in range(size(nv)):
	v[i] = round(((nv[i]*100)/size(vet)), 1)
print(v)
	
-- EXECUTION TIME:
0.893239
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[18.8  0.   0.  18.8 25.  37.5]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[ 4.  8. 16. 20. 20. 32.]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[15.4  7.7 23.1  7.7 15.4 30.8]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
