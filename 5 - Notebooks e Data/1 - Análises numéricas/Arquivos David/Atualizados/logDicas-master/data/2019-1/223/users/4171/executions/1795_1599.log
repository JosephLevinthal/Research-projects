== TEST (2019-05-30 16:06:37) 
-- CODE:
from numpy import * 

p = array(eval((input(""))))

i = 0
j = 0

while i != size(p):
	if p[j] > 80.00:
		p[i] = p[j] + p[j]/7.25
	else:
		p[i] = p[j]
		
	i += 1
	j += 1

print(sum(p))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 16:07:09) 
-- CODE:
from numpy import * 

p = array(eval((input(""))))

i = 0
j = 0

while i != size(p):
	if p[j] > 80.00:
		p[i] = p[j] + p[j]/(15/100)
	else:
		p[i] = p[j]
		
	i += 1
	j += 1

print(sum(p))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 16:07:39) 
-- CODE:
from numpy import * 

p = array(eval((input(""))))

i = 0
j = 0

while i != size(p):
	if p[j] > 80.00:
		p[i] = p[j] + p[j]/(100/15)
	else:
		p[i] = p[j]
		
	i += 1
	j += 1

print(sum(p))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 16:09:02) 
-- CODE:
from numpy import * 

p = array(eval((input(""))))

i = 0
j = 0

while i != size(p):
	if p[j] > 80.00:
		p[i] = p[j] + p[j]/(100/15)
	else:
		p[i] = p[j]
		
	i += 1
	j += 1

print(sum(p))
print(7.25*15)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 16:09:11) 
-- CODE:
from numpy import * 

p = array(eval((input(""))))

i = 0
j = 0

while i != size(p):
	if p[j] > 80.00:
		p[i] = p[j] + p[j]/(100/15)
	else:
		p[i] = p[j]
		
	i += 1
	j += 1

print(sum(p))
print(7*15)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 16:09:19) 
-- CODE:
from numpy import * 

p = array(eval((input(""))))

i = 0
j = 0

while i != size(p):
	if p[j] > 80.00:
		p[i] = p[j] + p[j]/(100/15)
	else:
		p[i] = p[j]
		
	i += 1
	j += 1

print(sum(p))
print(6.75*15)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 16:09:25) 
-- CODE:
from numpy import * 

p = array(eval((input(""))))

i = 0
j = 0

while i != size(p):
	if p[j] > 80.00:
		p[i] = p[j] + p[j]/(100/15)
	else:
		p[i] = p[j]
		
	i += 1
	j += 1

print(sum(p))
print(6.5*15)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 16:09:32) 
-- CODE:
from numpy import * 

p = array(eval((input(""))))

i = 0
j = 0

while i != size(p):
	if p[j] > 80.00:
		p[i] = p[j] + p[j]/(100/15)
	else:
		p[i] = p[j]
		
	i += 1
	j += 1

print(sum(p))
print(6.66*15)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-30 16:09:51) 
-- CODE:
from numpy import * 

p = array(eval((input(""))))

i = 0
j = 0

while i != size(p):
	if p[j] > 80.00:
		p[i] = p[j] + p[j]/(6.67)
	else:
		p[i] = p[j]
		
	i += 1
	j += 1

print(sum(p))

-- EXECUTION TIME:
0.539425
-- TEST CASE 1:
---- input:
[11.32,40.2,32,0]
---- correct output:
83.52
---- user output:
83.52000000000001
-- TEST CASE 2:
---- input:
[32,44,32.1,43.2]
---- correct output:
151.3
---- user output:
151.3
-- TEST CASE 3:
---- input:
[23,2,1]
---- correct output:
26
---- user output:
26
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 16:09:52) 
-- CODE:
from numpy import * 

p = array(eval((input(""))))

i = 0
j = 0

while i != size(p):
	if p[j] > 80.00:
		p[i] = p[j] + p[j]/(6.67)
	else:
		p[i] = p[j]
		
	i += 1
	j += 1

print(sum(p))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 16:09:53) 
-- CODE:
from numpy import * 

p = array(eval((input(""))))

i = 0
j = 0

while i != size(p):
	if p[j] > 80.00:
		p[i] = p[j] + p[j]/(6.67)
	else:
		p[i] = p[j]
		
	i += 1
	j += 1

print(sum(p))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 16:10:00) 
-- CODE:
from numpy import * 

p = array(eval((input(""))))

i = 0
j = 0

while i != size(p):
	if p[j] > 80.00:
		p[i] = p[j] + p[j]/(6.7)
	else:
		p[i] = p[j]
		
	i += 1
	j += 1

print(sum(p))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 16:10:28) 
-- CODE:
from numpy import * 

p = array(eval((input(""))))

i = 0
j = 0

while i != size(p):
	if p[j] > 80.00:
		p[i] = p[j] + p[j]/(6.67)
	else:
		p[i] = p[j]
		
	i += 1
	j += 1

x = round(sum(p),2)

print(x)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-30 16:10:31) 
-- CODE:
from numpy import * 

p = array(eval((input(""))))

i = 0
j = 0

while i != size(p):
	if p[j] > 80.00:
		p[i] = p[j] + p[j]/(6.67)
	else:
		p[i] = p[j]
		
	i += 1
	j += 1

x = round(sum(p),2)

print(x)

-- EXECUTION TIME:
0.3928
-- TEST CASE 1:
---- input:
[11.32,40.2,32,0]
---- correct output:
83.52
---- user output:
83.52
-- TEST CASE 2:
---- input:
[32,44,32.1,43.2]
---- correct output:
151.3
---- user output:
151.3
-- TEST CASE 3:
---- input:
[23,2,1]
---- correct output:
26
---- user output:
26
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
