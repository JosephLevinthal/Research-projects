== TEST (2019-04-15 23:43:11) 
-- CODE:
nota_inicial = float(input("Digite nota do aluno: "))
bonificacao = ("Aluno recebera bonificacao: ")

acrescimo = ((nota_inicial/100)*10)

if(bonificacao = S):
	nota_final = nota_inicial + acrescimo
else (bonificacao = N):
	nota_final = nota_inicial

print(nota_final)
-- ERROR:
File "XXXX", line 6
    if(bonificacao = S):
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 23:43:41) 
-- CODE:
nota_inicial = float(input("Digite nota do aluno: "))
bonificacao = ("Aluno recebera bonificacao: ")

acrescimo = ((nota_inicial/100)*10)

if(bonificacao = "S"):
	nota_final = nota_inicial + acrescimo
else (bonificacao = "N"):
	nota_final = nota_inicial

print(nota_final)
-- ERROR:
File "XXXX", line 6
    if(bonificacao = "S"):
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 23:44:39) 
-- CODE:
nota_inicial = float(input("Digite nota do aluno: "))
bonificacao = ("Aluno recebera bonificacao: ")

acrescimo = ((nota_inicial/100)*10)

if(bonificacao == "S"):
	nota_final = nota_inicial + acrescimo
else (bonificacao == "N"):
	nota_final = nota_inicial

print(nota_final)
-- ERROR:
File "XXXX", line 8
    else (bonificacao == "N"):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 23:45:07) 
-- CODE:
nota_inicial = float(input("Digite nota do aluno: "))
bonificacao = ("Aluno recebera bonificacao: ")

acrescimo = ((nota_inicial/100)*10)

if(bonificacao == "S"):
	nota_final = nota_inicial + acrescimo
else:
	nota_final = nota_inicial

print(nota_final)
-- OUTPUT:
5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 23:45:56) 
-- CODE:
nota_inicial = float(input("Digite nota do aluno: "))
bonificacao = input("Aluno recebera bonificacao: ")

acrescimo = ((nota_inicial/100)*10)

if(bonificacao == "S"):
	nota_final = nota_inicial + acrescimo
else:
	nota_final = nota_inicial

print(nota_final)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 23:46:16) 
-- CODE:
nota_inicial = float(input("Digite nota do aluno: "))
bonificacao = input("Aluno recebera bonificacao: ")

acrescimo = ((nota_inicial/100)*10)

if(bonificacao == "S"):
	nota_final = nota_inicial + acrescimo
else:
	nota_final = nota_inicial

print(nota_final)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 23:46:31) 
-- CODE:
nota_inicial = float(input("Digite nota do aluno: "))
bonificacao = input("Aluno recebera bonificacao: ")

acrescimo = ((nota_inicial/100)*10)

if(bonificacao == "S"):
	nota_final = nota_inicial + acrescimo
else:
	nota_final = nota_inicial

print(nota_final)
-- EXECUTION TIME:
0.145765
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
