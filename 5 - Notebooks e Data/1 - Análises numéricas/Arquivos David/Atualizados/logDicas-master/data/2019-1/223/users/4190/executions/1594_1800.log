== TEST (2019-03-19 16:29:33) 
-- CODE:
a= 1**2
b= 2**2
c= 3**2
d= (a+b+c)
print= d
-- OUTPUT:
8.2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:29:55) 
-- CODE:
a= 1**2
b= 2**2
c= 3**2
d= (a+b+c)
print= ("d")
-- OUTPUT:
8.2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:31:07) 
-- CODE:
a= 1**2
b= 2**2
c= 3**2
print= ("a+b+c")
-- OUTPUT:
8.2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:31:27) 
-- CODE:
a= 1**2
b= 2**2
c= 3**2
print= ("a")
-- OUTPUT:
8.2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:32:12) 
-- CODE:
a= (1**2)
b= (2**2)
c= (3**2)
print = ("a+b+c")

-- OUTPUT:
8.2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 15:56:17) 
-- CODE:
a= input("Insira o número a: ")
b= input("Insira o número b: ")
c= input("Insira o número c: ")

d= (a**2+b**2+c**2)
e= (a+b+c)
f= d/e

print(f)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    d= (a**2+b**2+c**2)
TypeError: unsupported operand type(s) for ** or pow(): 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 15:57:13) 
-- CODE:
a= int(input("Insira o número a: "))
b= int(input("Insira o número b: ")
c= int(input("Insira o número c: "))

d= (a**2+b**2+c**2)
e= (a+b+c)
f= d/e

print(f)
-- ERROR:
File "XXXX", line 3
    c= int(input())
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 15:57:29) 
-- CODE:
a= int(input("Insira o número a: "))
b= int(input("Insira o número b: ")
c = int(input("Insira o número c: "))

d= (a**2+b**2+c**2)
e= (a+b+c)
f= d/e

print(f)
-- ERROR:
File "XXXX", line 3
    c = int(input())
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 15:57:34) 
-- CODE:
a= int(input("Insira o número a: "))
b= int(input("Insira o número b: ")
c= int(input("Insira o número c: "))

d= (a**2+b**2+c**2)
e= (a+b+c)
f= d/e

print(f)
-- ERROR:
File "XXXX", line 3
    c= int(input())
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 15:57:43) 
-- CODE:
a= int(input("Insira o número a: "))
b= int(input("Insira o número b: "))
c= int(input("Insira o número c: "))

d= (a**2+b**2+c**2)
e= (a+b+c)
f= d/e

print(f)
-- OUTPUT:
25.666666666666668
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 16:00:58) 
-- CODE:
a= float(input("Insira um número a: "))
b= float(input("Insira um número b: "))
c= float(input("Insira um número c: "))
d= (a**2+b**2+c**2)
e= (a+b+c)
f= d/e

print(f)
-- OUTPUT:
25.666666666666668
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 16:01:21) 
-- CODE:
a=float(input("Insira um número a: "))
b=float(input("Insira um número b: "))
c=float(input("Insira um número c: "))
d=(a**2+b**2+c**2)
e=(a+b+c)
f=d/e

print(f)
-- OUTPUT:
25.666666666666668
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 16:01:51) 
-- CODE:
a=float(input("Insira um número a: "))
b=float(input("Insira um número b: "))
c=float(input("Insira um número c: "))
d=(a**2+b**2+c**2)
e=(a+b+c)
f=d/e

print(round(f, 2))
-- OUTPUT:
25.67
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 16:01:55) 
-- CODE:
a=float(input("Insira um número a: "))
b=float(input("Insira um número b: "))
c=float(input("Insira um número c: "))
d=(a**2+b**2+c**2)
e=(a+b+c)
f=d/e

print(round(f, 2))
-- OUTPUT:
25.67
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 16:02:29) 
-- CODE:
a=float(input("Insira um número a: "))
b=float(input("Insira um número b: "))
c=float(input("Insira um número c: "))
d=(a**2+b**2+c**2)
e=(a+b+c)
f=d/e

print(round(f, 2))
-- OUTPUT:
25.67
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 16:02:48) 
-- CODE:
a=float(input("Insira um numero a: "))
b=float(input("Insira um número b: "))
c=float(input("Insira um número c: "))
d=(a**2+b**2+c**2)
e=(a+b+c)
f=d/e

print(round(f, 2))
-- OUTPUT:
25.67
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 16:03:00) 
-- CODE:
a=float(input("Insira um numero a: "))
b=float(input("Insira um numero b: "))
c=float(input("Insira um numero c: "))
d=(a**2+b**2+c**2)
e=(a+b+c)
f=d/e

print(round(f, 2))
-- OUTPUT:
25.67
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 16:03:25) 
-- CODE:
a=float(input("Insira um numero a: "))
b=float(input("Insira um numero b: "))
c=float(input("Insira um numero c: "))
d=(a**2+b**2+c**2)
e=(a+b+c)
f=d/e

print(round(f, 7))
-- OUTPUT:
25.6666667
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-04 16:03:36) 
-- CODE:
a=float(input("Insira um numero a: "))
b=float(input("Insira um numero b: "))
c=float(input("Insira um numero c: "))
d=(a**2+b**2+c**2)
e=(a+b+c)
f=d/e

print(round(f, 7))
-- EXECUTION TIME:
0.16845
-- TEST CASE 1:
---- input:
20
25
30
---- correct output:
25.6666667
---- user output:
25.6666667
-- TEST CASE 2:
---- input:
235
400
350
---- correct output:
342.8680203
---- user output:
342.8680203
-- TEST CASE 3:
---- input:
90
120
2
---- correct output:
106.1509434
---- user output:
106.1509434
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-04 16:12:25) 
-- CODE:
a=float(input("Insira um numero a: "))
b=float(input("Insira um numero b: "))
c=float(input("Insira um numero c: "))
d=(a**2+b**2+c**2)
e=(a+b+c)
f=d/e

print(round(f, 7))
-- EXECUTION TIME:
0.208256
-- TEST CASE 1:
---- input:
20
25
30
---- correct output:
25.6666667
---- user output:
25.6666667
-- TEST CASE 2:
---- input:
235
400
350
---- correct output:
342.8680203
---- user output:
342.8680203
-- TEST CASE 3:
---- input:
90
120
2
---- correct output:
106.1509434
---- user output:
106.1509434
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-04 16:57:25) 
-- CODE:
a=float(input("Insira um numero a: "))
b=float(input("Insira um numero b: "))
c=float(input("Insira um numero c: "))
d=(a**2+b**2+c**2)
e=(a+b+c)
f=d/e

print(round(f, 7))
-- EXECUTION TIME:
0.20983
-- TEST CASE 1:
---- input:
20
25
30
---- correct output:
25.6666667
---- user output:
25.6666667
-- TEST CASE 2:
---- input:
235
400
350
---- correct output:
342.8680203
---- user output:
342.8680203
-- TEST CASE 3:
---- input:
90
120
2
---- correct output:
106.1509434
---- user output:
106.1509434
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
