== TEST (2019-04-25 15:57:43) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Testa se pelo menos uma das entradas eh negativa 
if (maior > 0 or menor >0 or meio > 0):
	# Testa se medidas correspondem aas de um triangulo
	if ((a < b + c) and (b < a +c) and (c < a + b)):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")

((x < y + z) and (y < x + z) and (z < y + x)):
if ((x != y) and (y != z) and (z != x)):
print("escaleno")
else:
if ((x != y) or (y != z)):
print("isosceles")
else:
print("equilatero")
-- ERROR:
File "XXXX", line 16
    ((x < y + z) and (y < x + z) and (z < y + x)):
                                                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:03:57) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if ((x < y + z) and (y < x + z) and (z < y + x)):
	if ((x != y) and (y != z) and (z != x)):
print("escaleno")
else:
	if ((x != y) or (y != z)):
print("isosceles")
else:
	print("equilatero")
else:
	print("Nao eh triangulo")
-- ERROR:
File "XXXX", line 11
    print("escaleno")
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:04:11) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if ((x < y + z) and (y < x + z) and (z < y + x)):
	if ((x != y) and (y != z) and (z != x)):
	print("escaleno")
else:
	if ((x != y) or (y != z)):
print("isosceles")
else:
	print("equilatero")
else:
	print("Nao eh triangulo")
-- ERROR:
File "XXXX", line 11
    print("escaleno")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:04:22) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if ((x < y + z) and (y < x + z) and (z < y + x)):
	if ((x != y) and (y != z) and (z != x)):
		print("escaleno")
else:
	if ((x != y) or (y != z)):
print("isosceles")
else:
	print("equilatero")
else:
	print("Nao eh triangulo")
-- ERROR:
File "XXXX", line 14
    print("isosceles")
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:04:29) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if ((x < y + z) and (y < x + z) and (z < y + x)):
	if ((x != y) and (y != z) and (z != x)):
		print("escaleno")
else:
	if ((x != y) or (y != z)):
	print("isosceles")
else:
	print("equilatero")
else:
	print("Nao eh triangulo")
-- ERROR:
File "XXXX", line 14
    print("isosceles")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:04:36) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if ((x < y + z) and (y < x + z) and (z < y + x)):
	if ((x != y) and (y != z) and (z != x)):
		print("escaleno")
else:
	if ((x != y) or (y != z)):
		print("isosceles")
else:
	print("equilatero")
else:
	print("Nao eh triangulo")
-- ERROR:
File "XXXX", line 15
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:04:44) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if ((x < y + z) and (y < x + z) and (z < y + x)):
	if ((x != y) and (y != z) and (z != x)):
		print("escaleno")
else:
	if ((x != y) or (y != z)):
		print("isosceles")
	else:
		print("equilatero")
else:
	print("Nao eh triangulo")
-- ERROR:
File "XXXX", line 17
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:04:59) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if ((x < y + z) and (y < x + z) and (z < y + x)):
	if ((x != y) and (y != z) and (z != x)):
		print("escaleno")
else:
	if ((x != y) or (y != z)):
		print("isosceles")
	else:
		print("equilatero")
else:
	print("Nao eh triangulo")
-- ERROR:
File "XXXX", line 17
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:06:48) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *

# Leitura dos lados do triangulo a, b, and c
x = float(input ("Lado 1: "))
y = float(input ("Lado 2: "))
z = float(input ("Lado 3: "))

if ((x < y + z) and (y < x + z) and (z < y + x)):
	if ((x != y) and (y != z) and (z != x)):
		print("escaleno")
else:
	if ((x != y) or (y != z)):
		print("isosceles")
	else:
		print("equilatero")
else:
	print("Nao eh triangulo")
-- ERROR:
File "XXXX", line 17
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:08:30) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *

# Leitura dos lados do triangulo a, b, and c
xx = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

if ((x < y + z) and (y < x + z) and (z < y + x)):
	if ((x != y) and (y != z) and (z != x)):
		print("escaleno")
	else:
		if ((x != y) or (y != z)):
		print("isosceles")
		else:
		print("equilatero")
else:
	print("Nao eh triangulo")
-- ERROR:
File "XXXX", line 14
    print("isosceles")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:08:55) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *

# Leitura dos lados do triangulo a, b, and c
xx = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

if ((x < y + z) and (y < x + z) and (z < y + x)):
	if ((x != y) and (y != z) and (z != x)):
		print("escaleno")
	else:
		if ((x != y) or (y != z)):
			print("isosceles")
		else:
			print("equilatero")
else:
	print("Nao eh triangulo")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    if ((x < y + z) and (y < x + z) and (z < y + x)):
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:09:11) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *

# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

if ((x < y + z) and (y < x + z) and (z < y + x)):
	if ((x != y) and (y != z) and (z != x)):
		print("escaleno")
	else:
		if ((x != y) or (y != z)):
			print("isosceles")
		else:
			print("equilatero")
else:
	print("Nao eh triangulo")
-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:09:20) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *

# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

if ((x < y + z) and (y < x + z) and (z < y + x)):
	if ((x != y) and (y != z) and (z != x)):
		print("escaleno")
	else:
		if ((x != y) or (y != z)):
			print("isosceles")
		else:
			print("equilatero")
else:
	print("Nao eh triangulo")
-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:09:27) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *

# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

if ((x < y + z) and (y < x + z) and (z < y + x)):
	if ((x != y) and (y != z) and (z != x)):
		print("escaleno")
	else:
		if ((x != y) or (y != z)):
			print("isosceles")
		else:
			print("equilatero")
else:
	print("Nao eh triangulo")
-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:09:33) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *

# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

if ((x < y + z) and (y < x + z) and (z < y + x)):
	if ((x != y) and (y != z) and (z != x)):
		print("escaleno")
	else:
		if ((x != y) or (y != z)):
			print("isosceles")
		else:
			print("equilatero")
else:
	print("Nao eh triangulo")
-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:11:16) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *

# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

if ((x < y + z) and (y < x + z) and (z < y + x)):
	if ((x != y) and (y != z) and (z != x)):
		print("escaleno")
	else:
		if ((x != y) or (y != z)):
			print("isosceles")
		else:
			print("equilatero")
else:
	print("Nao eh triangulo")
-- EXECUTION TIME:
0.132689
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Nao eh triangulo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:11:22) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *

# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

if ((x < y + z) and (y < x + z) and (z < y + x)):
	if ((x != y) and (y != z) and (z != x)):
		print("escaleno")
	else:
		if ((x != y) or (y != z)):
			print("isosceles")
		else:
			print("equilatero")
else:
	print("Nao eh triangulo")
-- EXECUTION TIME:
0.183813
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Nao eh triangulo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:17:20) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if ((x < y + z) and (y < x + z) and (z < y + x)):
	if(x<0 or z< 0 or z< 0):
		print("invalido")
	else:
		if ((x != y) and (y != z) and (z != x)):
			print("escaleno")
		else:
			if ((x != y) or (y != z)):
				print("isosceles")
		else:
			print("equilatero")
else:
	print("Nao eh triangulo")
-- ERROR:
File "XXXX", line 25
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:17:43) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if ((x < y + z) and (y < x + z) and (z < y + x)):
	if(x<0 or z< 0 or z< 0):
		print("invalido")
	else:
		if ((x != y) and (y != z) and (z != x)):
			print("escaleno")
		else:
			if ((x != y) or (y != z)):
				print("isosceles")
			else:
				print("equilatero")
else:
	print("Nao eh triangulo")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:17:52) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if ((x < y + z) and (y < x + z) and (z < y + x)):
	if(x<0 or z< 0 or z< 0):
		print("invalido")
	else:
		if ((x != y) and (y != z) and (z != x)):
			print("escaleno")
		else:
			if ((x != y) or (y != z)):
				print("isosceles")
			else:
				print("equilatero")
else:
	print("Nao eh triangulo")
-- EXECUTION TIME:
0.161125
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Nao eh triangulo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:18:18) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if ((x < y + z) and (y < x + z) and (z < y + x)):
	if(x<0 or z< 0 or z< 0):
		print("invalido")
	else:
		if ((x != y) and (y != z) and (z != x)):
			print("escaleno")
		else:
			if ((x != y) or (y != z)):
				print("isosceles")
			else:
				print("equilatero")
else:
	print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:18:26) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if ((x < y + z) and (y < x + z) and (z < y + x)):
	if(x<0 or z< 0 or z< 0):
		print("invalido")
	else:
		if ((x != y) and (y != z) and (z != x)):
			print("escaleno")
		else:
			if ((x != y) or (y != z)):
				print("isosceles")
			else:
				print("equilatero")
else:
	print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:18:35) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if ((x < y + z) and (y < x + z) and (z < y + x)):
	if(x<0 or z< 0 or z< 0):
		print("invalido")
	else:
		if ((x != y) and (y != z) and (z != x)):
			print("escaleno")
		else:
			if ((x != y) or (y != z)):
				print("isosceles")
			else:
				print("equilatero")
else:
	print("invalido")
-- EXECUTION TIME:
0.227473
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:20:07) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor

if ((x < y + z) and (y < x + z) and (z < y + x)):
			print("invalido")
	else:
		if ((x != y) and (y != z) and (z != x)):
			print("escaleno")
		else:
			if ((x != y) or (y != z)):
				print("isosceles")
			else:
				print("equilatero")
else:
	print("invalido")
-- ERROR:
File "XXXX", line 17
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:20:31) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor

if ((x < y + z) and (y < x + z) and (z < y + x)):
		print("invalido")
	else:
		if ((x != y) and (y != z) and (z != x)):
			print("escaleno")
			else:
				if ((x != y) or (y != z)):
				print("isosceles")
			else:
				print("equilatero")
else:
	print("invalido")
-- EXECUTION TIME:
0.174434
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 17
    else:
        ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:20:35) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor

if ((x < y + z) and (y < x + z) and (z < y + x)):
		print("invalido")
	else:
		if ((x != y) and (y != z) and (z != x)):
			print("escaleno")
			else:
				if ((x != y) or (y != z)):
				print("isosceles")
			else:
				print("equilatero")
else:
	print("invalido")
-- ERROR:
File "XXXX", line 17
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:21:40) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor

if ((x < y + z) and (y < x + z) and (z < y + x)):
		print("invalido")
else:
	if ((x != y) and (y != z) and (z != x)):
		print("escaleno")
	else:
		if ((x != y) or (y != z)):
			print("isosceles")
		else:
			print("equilatero")
else:
	print("invalido")
-- EXECUTION TIME:
0.167657
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 25
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:21:43) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor

if ((x < y + z) and (y < x + z) and (z < y + x)):
		print("invalido")
else:
	if ((x != y) and (y != z) and (z != x)):
		print("escaleno")
	else:
		if ((x != y) or (y != z)):
			print("isosceles")
		else:
			print("equilatero")
else:
	print("invalido")
-- ERROR:
File "XXXX", line 25
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:22:15) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor

if ((x < y + z) and (y < x + z) and (z < y + x)):
		print("invalido")
	else:
		if ((x != y) and (y != z) and (z != x)):
			print("escaleno")
		else:
			if ((x != y) or (y != z)):
				print("isosceles")
			else:
				print("equilatero")
else:
	print("invalido")
-- EXECUTION TIME:
0.155685
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 17
    else:
        ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:22:19) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor

if ((x < y + z) and (y < x + z) and (z < y + x)):
		print("invalido")
	else:
		if ((x != y) and (y != z) and (z != x)):
			print("escaleno")
		else:
			if ((x != y) or (y != z)):
				print("isosceles")
			else:
				print("equilatero")
else:
	print("invalido")
-- ERROR:
File "XXXX", line 17
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:22:54) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if ((x < y + z) and (y < x + z) and (z < y + x)):
	if(x<0 or z< 0 or z< 0)
	if ((x != y) and (y != z) and (z != x)):
		print("escaleno")
	else:
		if ((x != y) or (y != z)):
			print("isosceles")
		else:
			print("equilatero")
else:
	print("Nao eh triangulo")
-- ERROR:
File "XXXX", line 17
    if(x<0 or z< 0 or z< 0)
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:23:07) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if ((x < y + z) and (y < x + z) and (z < y + x)):
	
	if ((x != y) and (y != z) and (z != x)):
		print("escaleno")
	else:
		if ((x != y) or (y != z)):
			print("isosceles")
		else:
			print("equilatero")
else:
	print("Nao eh triangulo")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:23:14) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if ((x < y + z) and (y < x + z) and (z < y + x)):
	
	if ((x != y) and (y != z) and (z != x)):
		print("escaleno")
	else:
		if ((x != y) or (y != z)):
			print("isosceles")
		else:
			print("equilatero")
else:
	print("Nao eh triangulo")
-- EXECUTION TIME:
0.181043
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Nao eh triangulo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:23:29) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if ((x < y + z) and (y < x + z) and (z < y + x)):
	
	if ((x != y) and (y != z) and (z != x)):
		print("escaleno")
	else:
		if ((x != y) or (y != z)):
			print("isosceles")
		else:
			print("equilatero")
else:
	print("invalido")
-- EXECUTION TIME:
0.161105
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:23:32) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if ((x < y + z) and (y < x + z) and (z < y + x)):
	
	if ((x != y) and (y != z) and (z != x)):
		print("escaleno")
	else:
		if ((x != y) or (y != z)):
			print("isosceles")
		else:
			print("equilatero")
else:
	print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:24:39) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if ((x < y + z) and (y < x + z) and (z < y + x)) or x<0 and y<0 and z< 0:
	
	if ((x != y) and (y != z) and (z != x)):
		print("escaleno")
	else:
		if ((x != y) or (y != z)):
			print("isosceles")
		else:
			print("equilatero")
else:
	print("invalido")
-- EXECUTION TIME:
0.146859
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:24:41) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if ((x < y + z) and (y < x + z) and (z < y + x)) or x<0 and y<0 and z< 0:
	
	if ((x != y) and (y != z) and (z != x)):
		print("escaleno")
	else:
		if ((x != y) or (y != z)):
			print("isosceles")
		else:
			print("equilatero")
else:
	print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:25:06) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if ((x < y + z) and (y < x + z) and (z < y + x)) or (x<0 and y<0 and z< 0):
	
	if ((x != y) and (y != z) and (z != x)):
		print("escaleno")
	else:
		if ((x != y) or (y != z)):
			print("isosceles")
		else:
			print("equilatero")
else:
	print("invalido")
-- EXECUTION TIME:
0.206687
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:28:59) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if (x < y + z) or (y < x + z) or (z < y + x) or (x<0) or (y<0) or (z< 0):
	
	if ((x != y) and (y != z) and (z != x)):
		print("escaleno")
	else:
		if ((x != y) or (y != z)):
			print("isosceles")
		else:
			print("equilatero")
else:
	print("invalido")
-- EXECUTION TIME:
0.192775
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:29:04) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if (x < y + z) or (y < x + z) or (z < y + x) or (x<0) or (y<0) or (z< 0):
	
	if ((x != y) and (y != z) and (z != x)):
		print("escaleno")
	else:
		if ((x != y) or (y != z)):
			print("isosceles")
		else:
			print("equilatero")
else:
	print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:29:14) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if (x < y + z) or (y < x + z) or (z < y + x) or (x<0) or (y<0) or (z< 0):
	
	if ((x != y) and (y != z) and (z != x)):
		print("escaleno")
	else:
		if ((x != y) or (y != z)):
			print("isosceles")
		else:
			print("equilatero")
else:
	print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:34:45) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if (x < y + z) or (y < x + z) or (z < y + x) or (x< 0) or (y< 0) or (z< 0):
	print("Tipo de triangulo:invalido")
	
else 
	((x != y) and (y != z) and (z != x)):
		print("Tipo de triangulo:isosceles")
	else:
		if ((x != y) or (y != z)):
			print("Tipo de triangulo:isosceles")
		else:
			print("Tipo de triangulo:equilatero")

-- ERROR:
File "XXXX", line 19
    else 
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:34:53) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if (x < y + z) or (y < x + z) or (z < y + x) or (x< 0) or (y< 0) or (z< 0):
	print("Tipo de triangulo:invalido")
	
else: 
	((x != y) and (y != z) and (z != x)):
		print("Tipo de triangulo:isosceles")
	else:
		if ((x != y) or (y != z)):
			print("Tipo de triangulo:isosceles")
		else:
			print("Tipo de triangulo:equilatero")

-- ERROR:
File "XXXX", line 20
    ((x != y) and (y != z) and (z != x)):
                                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:35:15) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if (x < y + z) or (y < x + z) or (z < y + x) or (x< 0) or (y< 0) or (z< 0):
	print("Tipo de triangulo:invalido")
	
else: 
	(x != y) and (y != z) and (z != x):
		print("Tipo de triangulo:isosceles")
	else:
		if ((x != y) or (y != z)):
			print("Tipo de triangulo:isosceles")
		else:
			print("Tipo de triangulo:equilatero")

-- EXECUTION TIME:
0.172273
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 20
    (x != y) and (y != z) and (z != x):
                                      ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:38:33) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if (x < y + z) or (y < x + z) or (z < y + x) or (x< 0) or (y< 0) or (z< 0):
	print("Tipo de triangulo:invalido")
	
else: 
	(x == y) and (y == z):
		print("Tipo de triangulo:equilatero")
	else:
		if ((x == y) or (y == z)or (x==z):
			print("Tipo de triangulo:equilatero")
		else:
			print("Tipo de triangulo:isosceles")

-- ERROR:
File "XXXX", line 20
    (x == y) and (y == z):
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:38:56) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if (x < y + z) or (y < x + z) or (z < y + x) or (x< 0) or (y< 0) or (z< 0):
	print("Tipo de triangulo:invalido")
	
else: 
	(x==y) and (y==z):
		print("Tipo de triangulo:equilatero")
	else:
		if ((x == y) or (y == z)or (x==z):
			print("Tipo de triangulo:equilatero")
		else:
			print("Tipo de triangulo:isosceles")

-- ERROR:
File "XXXX", line 20
    (x==y) and (y==z):
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:39:29) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if (x < y + z) or (y < x + z) or (z < y + x) or (x< 0) or (y< 0) or (z< 0):
	print("Tipo de triangulo:invalido")
else: 
	(x==y) and (y==z)
		print("Tipo de triangulo:equilatero")
	else:
		if ((x == y) or (y == z)or (x==z):
			print("Tipo de triangulo:equilatero")
		else:
			print("Tipo de triangulo:isosceles")

-- EXECUTION TIME:
0.14269
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 20
    print("Tipo de triangulo:equilatero")
    ^
IndentationError: unexpected indent

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:39:35) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if (x < y + z) or (y < x + z) or (z < y + x) or (x< 0) or (y< 0) or (z< 0):
	print("Tipo de triangulo:invalido")
else: 
	(x==y) and (y==z)
		print("Tipo de triangulo:equilatero")
	else:
		if ((x == y) or (y == z)or (x==z):
			print("Tipo de triangulo:equilatero")
		else:
			print("Tipo de triangulo:isosceles")

-- ERROR:
File "XXXX", line 20
    print("Tipo de triangulo:equilatero")
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:40:31) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if (x < y + z) or (y < x + z) or (z < y + x) or (x< 0) or (y< 0) or (z< 0):
	print("Tipo de triangulo:invalido")
else: 
	(x==y) and (y==z)
		print("Tipo de triangulo:equilatero")
	else:
		if ((x == y) or (y == z)or (x==z):
			print('Tipo de triangulo: equilatero')
		else:
			print("Tipo de triangulo:isosceles")

-- EXECUTION TIME:
0.198974
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 20
    print("Tipo de triangulo:equilatero")
    ^
IndentationError: unexpected indent

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:40:35) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if (x < y + z) or (y < x + z) or (z < y + x) or (x< 0) or (y< 0) or (z< 0):
	print("Tipo de triangulo:invalido")
else: 
	(x==y) and (y==z)
		print("Tipo de triangulo:equilatero")
	else:
		if ((x == y) or (y == z)or (x==z):
			print('Tipo de triangulo: equilatero')
		else:
			print("Tipo de triangulo:isosceles")

-- ERROR:
File "XXXX", line 20
    print("Tipo de triangulo:equilatero")
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:41:04) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if (x < y + z) or (y < x + z) or (z < y + x) or (x< 0) or (y< 0) or (z< 0):
	print("Tipo de triangulo:invalido")
else: 
	if(x==y) and (y==z):
		print("Tipo de triangulo:equilatero")
	else:
		if ((x == y) or (y == z)or (x==z):
			print('Tipo de triangulo: equilatero')
		else:
			print("Tipo de triangulo:isosceles")

-- EXECUTION TIME:
0.219714
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 22
    if ((x == y) or (y == z)or (x==z):
                                     ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:41:23) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if (x < y + z) or (y < x + z) or (z < y + x) or (x< 0) or (y< 0) or (z< 0):
	print("Tipo de triangulo:invalido")
else: 
	if(x==y) and (y==z)and (z==x):
		print("Tipo de triangulo:equilatero")
	else:
		if ((x == y) or (y == z)or (x==z):
			print('Tipo de triangulo: equilatero')
		else:
			print("Tipo de triangulo:isosceles")

-- ERROR:
File "XXXX", line 22
    if ((x == y) or (y == z)or (x==z):
                                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:42:44) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if (x < y + z) or (y < x + z) or (z < y + x) or (x< 0) or (y< 0) or (z< 0):
	print("Tipo de triangulo:invalido")
else: 
	if(x==y) and (y==z)and (z==x):
		print("Tipo de triangulo:equilatero")
	else:
		if ((x == y) or (y == z):
			print('Tipo de triangulo: isosceles')
		else:
			print("Tipo de triangulo:escaleno")

-- EXECUTION TIME:
0.260355
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 22
    if ((x == y) or (y == z):
                            ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:42:54) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if (x < y + z) or (y < x + z) or (z < y + x) or (x< 0) or (y< 0) or (z< 0):
	print("Tipo de triangulo:invalido")
else: 
	if(x==y) and (y==z)and (z==x):
		print("Tipo de triangulo:equilatero")
	else:
		if ((x == y) or (y == z):
			print('Tipo de triangulo: isosceles')
		else:
			print("Tipo de triangulo:escaleno")

-- ERROR:
File "XXXX", line 22
    if ((x == y) or (y == z):
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:43:27) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if (x < y + z) or (y < x + z) or (z < y + x) or (x< 0) or (y< 0) or (z< 0):
	print("Tipo de triangulo:invalido")
else: 
	if x==y and y==z and z==x:
		print("Tipo de triangulo:equilatero")
	else:
		if ((x == y) or (y == z):
			print('Tipo de triangulo: isosceles')
		else:
			print("Tipo de triangulo:escaleno")

-- EXECUTION TIME:
0.139232
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 22
    if ((x == y) or (y == z):
                            ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:43:30) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if (x < y + z) or (y < x + z) or (z < y + x) or (x< 0) or (y< 0) or (z< 0):
	print("Tipo de triangulo:invalido")
else: 
	if x==y and y==z and z==x:
		print("Tipo de triangulo:equilatero")
	else:
		if ((x == y) or (y == z):
			print('Tipo de triangulo: isosceles')
		else:
			print("Tipo de triangulo:escaleno")

-- ERROR:
File "XXXX", line 22
    if ((x == y) or (y == z):
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:43:40) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if (x < y + z) or (y < x + z) or (z < y + x) or (x< 0) or (y< 0) or (z< 0):
	print("Tipo de triangulo:invalido")
else: 
	if x==y and y==z and z==x:
		print("Tipo de triangulo:equilatero")
	else:
		if (x == y) or (y == z):
			print('Tipo de triangulo: isosceles')
		else:
			print("Tipo de triangulo:escaleno")

-- EXECUTION TIME:
0.0894029
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo:invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:43:43) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if (x < y + z) or (y < x + z) or (z < y + x) or (x< 0) or (y< 0) or (z< 0):
	print("Tipo de triangulo:invalido")
else: 
	if x==y and y==z and z==x:
		print("Tipo de triangulo:equilatero")
	else:
		if (x == y) or (y == z):
			print('Tipo de triangulo: isosceles')
		else:
			print("Tipo de triangulo:escaleno")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:44:30) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if (x < y + z) or (y < x + z) or (z < y + x) or (x< 0) or (y< 0) or (z< 0):
	print("Tipo de triangulo:invalido")
else: 
	if x==y and y==z and z==x:
		print("Tipo de triangulo:equilatero")
	else:
		if (x == y) or (y == z):
			print('Tipo de triangulo: isosceles')
else:
			print("Tipo de triangulo:escaleno")

-- EXECUTION TIME:
0.219799
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 24
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:44:32) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if (x < y + z) or (y < x + z) or (z < y + x) or (x< 0) or (y< 0) or (z< 0):
	print("Tipo de triangulo:invalido")
else: 
	if x==y and y==z and z==x:
		print("Tipo de triangulo:equilatero")
	else:
		if (x == y) or (y == z):
			print('Tipo de triangulo: isosceles')
else:
			print("Tipo de triangulo:escaleno")

-- ERROR:
File "XXXX", line 24
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:44:39) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if (x < y + z) or (y < x + z) or (z < y + x) or (x< 0) or (y< 0) or (z< 0):
	print("Tipo de triangulo:invalido")
else: 
	if x==y and y==z and z==x:
		print("Tipo de triangulo:equilatero")
	else:
		if (x == y) or (y == z):
			print('Tipo de triangulo: isosceles')
	else:
			print("Tipo de triangulo:escaleno")

-- EXECUTION TIME:
0.128771
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 24
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:44:41) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if (x < y + z) or (y < x + z) or (z < y + x) or (x< 0) or (y< 0) or (z< 0):
	print("Tipo de triangulo:invalido")
else: 
	if x==y and y==z and z==x:
		print("Tipo de triangulo:equilatero")
	else:
		if (x == y) or (y == z):
			print('Tipo de triangulo: isosceles')
	else:
			print("Tipo de triangulo:escaleno")

-- EXECUTION TIME:
0.15911
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 24
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:44:44) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if (x < y + z) or (y < x + z) or (z < y + x) or (x< 0) or (y< 0) or (z< 0):
	print("Tipo de triangulo:invalido")
else: 
	if x==y and y==z and z==x:
		print("Tipo de triangulo:equilatero")
	else:
		if (x == y) or (y == z):
			print('Tipo de triangulo: isosceles')
	else:
			print("Tipo de triangulo:escaleno")

-- ERROR:
File "XXXX", line 24
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:44:51) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if (x < y + z) or (y < x + z) or (z < y + x) or (x< 0) or (y< 0) or (z< 0):
	print("Tipo de triangulo:invalido")
else: 
	if x==y and y==z and z==x:
		print("Tipo de triangulo:equilatero")
	else:
		if (x == y) or (y == z):
			print('Tipo de triangulo: isosceles')
		else:
			print("Tipo de triangulo:escaleno")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:45:14) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if (x < y + z) or (y < x + z) or (z < y + x) or (x< 0) or (y< 0) or (z< 0):
	print("Tipo de triangulo:invalido")
	else: 
		if x==y and y==z and z==x:
			print("Tipo de triangulo:equilatero")
		else:
			if (x == y) or (y == z):
				print('Tipo de triangulo: isosceles')
			else:
				print("Tipo de triangulo:escaleno")

-- EXECUTION TIME:
0.122813
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 18
    else: 
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:45:16) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if (x < y + z) or (y < x + z) or (z < y + x) or (x< 0) or (y< 0) or (z< 0):
	print("Tipo de triangulo:invalido")
	else: 
		if x==y and y==z and z==x:
			print("Tipo de triangulo:equilatero")
		else:
			if (x == y) or (y == z):
				print('Tipo de triangulo: isosceles')
			else:
				print("Tipo de triangulo:escaleno")

-- ERROR:
File "XXXX", line 18
    else: 
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:45:46) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if (x < y + z) or (y < x + z) or (z < y + x) or (x< 0) or (y< 0) or (z< 0):
	print("Tipo de triangulo:invalido")
else: 
	if x==y and y==z and z==x:
			print("Tipo de triangulo:equilatero")
		else:
			if (x == y) or (y == z):
				print('Tipo de triangulo: isosceles')
			else:
				print("Tipo de triangulo:escaleno")

-- ERROR:
File "XXXX", line 21
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:47:05) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if (x < y + z) or (y < x + z) or (z < y + x) or (x< 0) or (y< 0) or (z< 0):
	print("Tipo de triangulo:invalido")
else: 
	if x==y and y==z and z==x:
			print("Tipo de triangulo:equilatero")
		else:
			if (x == y) or (y == z):
				print('Tipo de triangulo:isosceles')
			else:
				print("Tipo de triangulo:escaleno")

-- EXECUTION TIME:
0.166857
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 21
    else:
        ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:47:08) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if (x < y + z) or (y < x + z) or (z < y + x) or (x< 0) or (y< 0) or (z< 0):
	print("Tipo de triangulo:invalido")
else: 
	if x==y and y==z and z==x:
			print("Tipo de triangulo:equilatero")
		else:
			if (x == y) or (y == z):
				print('Tipo de triangulo:isosceles')
			else:
				print("Tipo de triangulo:escaleno")

-- ERROR:
File "XXXX", line 21
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:47:29) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if (x < y + z) or (y < x + z) or (z < y + x) or (x< 0) or (y< 0) or (z< 0):
	print("Tipo de triangulo:invalido")
	else: 
		if x==y and y==z and z==x:
			print("Tipo de triangulo:equilatero")
		else:
			if (x == y) or (y == z):
				print('Tipo de triangulo:isosceles')
			else:
				print("Tipo de triangulo:escaleno")

-- EXECUTION TIME:
0.152414
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 18
    else: 
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:47:31) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if (x < y + z) or (y < x + z) or (z < y + x) or (x< 0) or (y< 0) or (z< 0):
	print("Tipo de triangulo:invalido")
	else: 
		if x==y and y==z and z==x:
			print("Tipo de triangulo:equilatero")
		else:
			if (x == y) or (y == z):
				print('Tipo de triangulo:isosceles')
			else:
				print("Tipo de triangulo:escaleno")

-- ERROR:
File "XXXX", line 18
    else: 
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:47:43) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if (x < y + z) or (y < x + z) or (z < y + x) or (x< 0) or (y< 0) or (z< 0):
	print("Tipo de triangulo:invalido")
else: 
		if x==y and y==z and z==x:
			print("Tipo de triangulo:equilatero")
		else:
			if (x == y) or (y == z):
				print('Tipo de triangulo:isosceles')
			else:
				print("Tipo de triangulo:escaleno")

-- EXECUTION TIME:
0.206378
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo:invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:47:44) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if (x < y + z) or (y < x + z) or (z < y + x) or (x< 0) or (y< 0) or (z< 0):
	print("Tipo de triangulo:invalido")
else: 
		if x==y and y==z and z==x:
			print("Tipo de triangulo:equilatero")
		else:
			if (x == y) or (y == z):
				print('Tipo de triangulo:isosceles')
			else:
				print("Tipo de triangulo:escaleno")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:47:53) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if (x < y + z) or (y < x + z) or (z < y + x) or (x< 0) or (y< 0) or (z< 0):
	print("Tipo de triangulo:invalido")
else: 
		if x==y and y==z and z==x:
			print("Tipo de triangulo:equilatero")
		else:
			if (x == y) or (y == z):
				print('Tipo de triangulo:isosceles')
			else:
				print("Tipo de triangulo:escaleno")

-- EXECUTION TIME:
0.177206
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo:invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:47:56) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if (x < y + z) or (y < x + z) or (z < y + x) or (x< 0) or (y< 0) or (z< 0):
	print("Tipo de triangulo:invalido")
else: 
		if x==y and y==z and z==x:
			print("Tipo de triangulo:equilatero")
		else:
			if (x == y) or (y == z):
				print('Tipo de triangulo:isosceles')
			else:
				print("Tipo de triangulo:escaleno")

-- EXECUTION TIME:
0.199253
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo:invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:47:59) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if (x < y + z) or (y < x + z) or (z < y + x) or (x< 0) or (y< 0) or (z< 0):
	print("Tipo de triangulo:invalido")
else: 
		if x==y and y==z and z==x:
			print("Tipo de triangulo:equilatero")
		else:
			if (x == y) or (y == z):
				print('Tipo de triangulo:isosceles')
			else:
				print("Tipo de triangulo:escaleno")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:48:50) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if (x < y + z) or (y < x + z) or (z < y + x) or (x< 0) or (y< 0) or (z< 0):
	print("Tipo de triangulo:invalido")
else: 
		if (x==y) and (y==z) and (z==x):
			print("Tipo de triangulo:equilatero")
		else:
			if (x == y) or (y == z):
				print('Tipo de triangulo:isosceles')
			else:
				print("Tipo de triangulo:escaleno")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:49:09) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if (x < y + z) or (y < x + z) or (z < y + x) or (x< 0) or (y< 0) or (z< 0):
	print("Tipo de triangulo:indddddddddddddddddddddddvalido")
else: 
		if (x==y) and (y==z) and (z==x):
			print("Tipo de triangulo:equilatero")
		else:
			if (x == y) or (y == z):
				print('Tipo de triangulo:isosceles')
			else:
				print("Tipo de triangulo:escaleno")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:indddddddddddddddddddddddvalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:50:41) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if (x < y + z) or (y < x + z) or (z < y + x) or (x< 0) or (y< 0) or (z< 0):
	print("Tipo de triangulo:invalido")
else: 
		if (x==y) and (y==z):
			print("Tipo de triangulo:equilatero")
		else:
			if (x == y) or (y == z):
				print('Tipo de triangulo:isosceles')
			else:
				print("Tipo de triangulo:escaleno")

-- EXECUTION TIME:
0.125093
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo:invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:50:44) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if (x < y + z) or (y < x + z) or (z < y + x) or (x< 0) or (y< 0) or (z< 0):
	print("Tipo de triangulo:invalido")
else: 
		if (x==y) and (y==z):
			print("Tipo de triangulo:equilatero")
		else:
			if (x == y) or (y == z):
				print('Tipo de triangulo:isosceles')
			else:
				print("Tipo de triangulo:escaleno")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 16:51:34) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if (x < y + z) or (y < x + z) or (z < y + x) or (x< 0) or (y< 0) or (z< 0):
	print("Tipo de triangulo:invalido")
else: 
		if (x==y) and (y==z):
			print("Tipo de triangulo:equilatero")
		else:
			if (x == y) or (y == z):
				print('Tipo de triangulo:isosceles')
			else:
				print("Tipo de triangulo:escaleno")

-- EXECUTION TIME:
0.134727
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo:invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:51:36) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if (x < y + z) or (y < x + z) or (z < y + x) or (x< 0) or (y< 0) or (z< 0):
	print("Tipo de triangulo:invalido")
else: 
		if (x==y) and (y==z):
			print("Tipo de triangulo:equilatero")
		else:
			if (x == y) or (y == z):
				print('Tipo de triangulo:isosceles')
			else:
				print("Tipo de triangulo:escaleno")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:00:30) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if (x < y + z) or (y < x + z) or (z < y + x) or (x< 0) or (y< 0) or (z< 0):
	print("Tipo de triangulo:invalido")
else: 
		if (x==y) and (y==z):
			print("Tipo de triangulo:equilatero")
		else:
			if (x == y) or (y == z):
				print('Tipo de triangulo:isosceles')
			else:
				print("Tipo de triangulo:escaleno")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:00:43) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", x, ",", y, ",", z)
maior=max(x,y,z)
menor=min(x,y,z)
meio= (x+y+z) - maior - menor


if (x < y + z) or (y < x + z) or (z < y + x) or (x< 0) or (y< 0) or (z< 0):
	print("Tipo de triangulo:invalido")
else: 
		if (x==y) and (y==z):
			print("Tipo de triangulo:equilatero")
		else:
			if (x == y) or (y == z):
				print('Tipo de triangulo:isosceles')
			else:
				print("Tipo de triangulo:escaleno")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:03:17) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas: ", x, ",", y, ",", z)


if ((x >= y + z) or (y >= x + z) or (z >= y + x) or (x< 0) or (y< 0) or (z< 0)):
	print("Tipo de triangulo:invalido")
else: 
		if (x==y) and (y==z):
			print("Tipo de triangulo:equilatero")
		else:
			if (x == y) or (y == z):
				print('Tipo de triangulo:isosceles')
			else:
				print("Tipo de triangulo:escaleno")

-- EXECUTION TIME:
0.139563
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 , 4.4 , 5.5
Tipo de triangulo:escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:03:22) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas: ", x, ",", y, ",", z)


if ((x >= y + z) or (y >= x + z) or (z >= y + x) or (x< 0) or (y< 0) or (z< 0)):
	print("Tipo de triangulo:invalido")
else: 
		if (x==y) and (y==z):
			print("Tipo de triangulo:equilatero")
		else:
			if (x == y) or (y == z):
				print('Tipo de triangulo:isosceles')
			else:
				print("Tipo de triangulo:escaleno")

-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:04:02) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas: ", x, ",", y, ",", z)


if ((x >= y + z) or (y >= x + z) or (z >= y + x) or (x< 0) or (y< 0) or (z< 0)):
	print("Tipo de triangulo: invalido")
else: 
		if (x==y) and (y==z):
			print("Tipo de triangulo: equilatero")
		else:
			if (x == y) or (y == z):
				print("Tipo de triangulo: isosceles")
			else:
				print("Tipo de triangulo:escaleno")

-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:04:11) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas: ", x, ",", y, ",", z)


if ((x >= y + z) or (y >= x + z) or (z >= y + x) or (x< 0) or (y< 0) or (z< 0)):
	print("Tipo de triangulo: invalido")
else: 
		if (x==y) and (y==z):
			print("Tipo de triangulo: equilatero")
		else:
			if (x == y) or (y == z):
				print("Tipo de triangulo: isosceles")
			else:
				print("Tipo de triangulo:escaleno")

-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:04:22) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas: ", x, ",", y, ",", z)


if ((x >= y + z) or (y >= x + z) or (z >= y + x) or (x< 0) or (y< 0) or (z< 0)):
	print("Tipo de triangulo: invalido")
else: 
		if (x==y) and (y==z):
			print("Tipo de triangulo: equilatero")
		else:
			if (x == y) or (y == z):
				print("Tipo de triangulo: isosceles")
			else:
				print("Tipo de triangulo:escaleno")

-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:04:35) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas: ", x, ",", y, ",", z)


if ((x >= y + z) or (y >= x + z) or (z >= y + x) or (x< 0) or (y< 0) or (z< 0)):
	print("Tipo de triangulo: invalido")
else: 
		if (x==y) and (y==z):
			print("Tipo de triangulo: equilatero")
		else:
			if (x == y) or (y == z):
				print("Tipo de triangulo: isosceles")
			else:
				print("Tipo de triangulo:escaleno")

-- EXECUTION TIME:
0.231987
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 , 4.4 , 5.5
Tipo de triangulo:escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:05:40) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas: ", x, ",", y, ",", z)


if ((x >= y + z) or (y >= x + z) or (z >= y + x) or (x< 0) or (y< 0) or (z< 0)):
	print("Tipo de triangulo: invalido")
else: 
		if (x==y) and (y==z):
			print("Tipo de triangulo: equilatero")
			
			
		else:
			if (x == y) or (y == z) or (z==x):
				print("Tipo de triangulo: isosceles")
			else:
				print("Tipo de triangulo:escaleno")

-- EXECUTION TIME:
0.154597
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 , 4.4 , 5.5
Tipo de triangulo:escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:07:10) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
#from math import *


# Leitura dos lados do triangulo a, b, and c
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas: ", x, ",", y, ",", z)


if ((x >= y + z) or (y >= x + z) or (z >= y + x) or (x< 0) or (y< 0) or (z< 0)):
	print("Tipo de triangulo: invalido")
else: 
		if (x==y) and (y==z):
			print("Tipo de triangulo: equilatero")
			
			
		else:
			if (x == y) or (y == z) or (z == x):
				print("Tipo de triangulo: isosceles")
			else:
				print("Tipo de triangulo: escaleno")

-- EXECUTION TIME:
0.164341
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 00:41:42) 
-- CODE:
area = int(input("Digite a área a ser pintada: "))
 
litros = area//3
if area % 3 > 0:
    litros = litros + 1
 
latas = litros//18
if litros % 18 > 0:
    latas = latas + 1
 
print("Você precisara de", latas, "latas.")
print("Você vai pagar R$", latas*80)
-- OUTPUT:
Você precisara de 1 latas.
Você vai pagar R$ 80
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 00:42:14) 
-- CODE:
area = int(input("Digite a área a ser pintada: "))
 litros = area//3
if area % 3 > 0:
	litros = litros + 1
latas = litros//18
if litros % 18 > 0:
	latas = latas + 1
print("Você precisara de", latas, "latas.")
print("Você vai pagar R$", latas*80)
-- ERROR:
File "XXXX", line 2
    litros = area//3
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 00:42:20) 
-- CODE:
area = int(input("Digite a área a ser pintada: "))
litros = area//3
if area % 3 > 0:
	litros = litros + 1
latas = litros//18
if litros % 18 > 0:
	latas = latas + 1
print("Você precisara de", latas, "latas.")
print("Você vai pagar R$", latas*80)
-- OUTPUT:
Você precisara de 1 latas.
Você vai pagar R$ 80
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 00:42:32) 
-- CODE:
area = int(input("Digite a área a ser pintada: "))
litros = area//3
if area % 3 > 0:
	litros = litros + 1
latas = litros//18
if litros % 18 > 0:
	latas = latas + 1
print("Você precisara de", latas, "latas.")
print("Você vai pagar R$", latas*80)
-- OUTPUT:
Você precisara de 1 latas.
Você vai pagar R$ 80
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 00:42:34) 
-- CODE:
area = int(input("Digite a área a ser pintada: "))
litros = area//3
if area % 3 > 0:
	litros = litros + 1
latas = litros//18
if litros % 18 > 0:
	latas = latas + 1
print("Você precisara de", latas, "latas.")
print("Você vai pagar R$", latas*80)
-- OUTPUT:
Você precisara de 1 latas.
Você vai pagar R$ 80
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 00:42:35) 
-- CODE:
area = int(input("Digite a área a ser pintada: "))
litros = area//3
if area % 3 > 0:
	litros = litros + 1
latas = litros//18
if litros % 18 > 0:
	latas = latas + 1
print("Você precisara de", latas, "latas.")
print("Você vai pagar R$", latas*80)
-- OUTPUT:
Você precisara de 1 latas.
Você vai pagar R$ 80
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 00:42:35) 
-- CODE:
area = int(input("Digite a área a ser pintada: "))
litros = area//3
if area % 3 > 0:
	litros = litros + 1
latas = litros//18
if litros % 18 > 0:
	latas = latas + 1
print("Você precisara de", latas, "latas.")
print("Você vai pagar R$", latas*80)
-- OUTPUT:
Você precisara de 1 latas.
Você vai pagar R$ 80
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 00:42:35) 
-- CODE:
area = int(input("Digite a área a ser pintada: "))
litros = area//3
if area % 3 > 0:
	litros = litros + 1
latas = litros//18
if litros % 18 > 0:
	latas = latas + 1
print("Você precisara de", latas, "latas.")
print("Você vai pagar R$", latas*80)
-- OUTPUT:
Você precisara de 1 latas.
Você vai pagar R$ 80
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
