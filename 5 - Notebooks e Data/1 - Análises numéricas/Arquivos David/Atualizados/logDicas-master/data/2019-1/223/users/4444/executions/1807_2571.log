== TEST (2019-06-10 00:49:59) 
-- CODE:
test = 'This is just a simple string.' 
len(test)
print(test)
-- OUTPUT:
This is just a simple string.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 00:50:19) 
-- CODE:
test = 'This is just a simple string.' 
len(test)
print(len(test))
-- OUTPUT:
29
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 00:50:27) 
-- CODE:
test = 'This is just a simple string.' 
len(test)
print(test)
print(len(test))
-- OUTPUT:
This is just a simple string.
29
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 00:51:05) 
-- CODE:
test = 'This is just a simple string.' 
len(test)
print(test)
print(len(test))

test = test.replace('simple', 'short')
print(test)
-- OUTPUT:
This is just a simple string.
29
This is just a short string.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 00:51:47) 
-- CODE:
test = 'This is just a simple string.' 
len(test)
print(test)
print(len(test))

test = test.replace('simple', 'short')
print(test)


test.count('r')
print(test)
-- OUTPUT:
This is just a simple string.
29
This is just a short string.
This is just a short string.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 00:51:59) 
-- CODE:
test = 'This is just a simple string.' 
len(test)
print(test)
print(len(test))

test = test.replace('simple', 'short')
print(test)


test.count('r')

-- OUTPUT:
This is just a simple string.
29
This is just a short string.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 00:52:11) 
-- CODE:
test = 'This is just a simple string.' 
len(test)
print(test)
print(len(test))

test = test.replace('simple', 'short')
print(test)


test.count('r')
print(test.count('r'))

-- OUTPUT:
This is just a simple string.
29
This is just a short string.
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 00:52:22) 
-- CODE:
test = 'This is just a simple string.' 
len(test)
print(test)
print(len(test))

test = test.replace('simple', 'short')
print(test)


test.count('r')
print(test.count(''))

-- OUTPUT:
This is just a simple string.
29
This is just a short string.
29
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 00:52:29) 
-- CODE:
test = 'This is just a simple string.' 
len(test)
print(test)
print(len(test))

test = test.replace('simple', 'short')
print(test)


test.count('r')
print(test.count('a'))

-- OUTPUT:
This is just a simple string.
29
This is just a short string.
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 00:52:40) 
-- CODE:
test = 'This is just a simple string.' 
len(test)
print(test)
print(len(test))

test = test.replace('simple', 'short')
print(test)


test.count('r')
print(test.count('i'))

-- OUTPUT:
This is just a simple string.
29
This is just a short string.
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 00:52:53) 
-- CODE:
test = 'This is just a simple string.' 
len(test)
print(test)
print(len(test))

test = test.replace('simple', 'short')
print(test)


test.count('r')
print(test.count('T'))

-- OUTPUT:
This is just a simple string.
29
This is just a short string.
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 00:53:21) 
-- CODE:
test = 'This is just a simple string.' 
len(test)
print(test)
print(len(test))

test = test.replace('simple', 'short')
print(test)


test.count('r')
print(test.find('r'))

-- OUTPUT:
This is just a simple string.
29
This is just a short string.
18
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 00:53:29) 
-- CODE:
test = 'This is just a simple string.' 
len(test)
print(test)
print(len(test))

test = test.replace('simple', 'short')
print(test)


test.count('r')
print(test.find('T'))

-- OUTPUT:
This is just a simple string.
29
This is just a short string.
0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 00:53:34) 
-- CODE:
test = 'This is just a simple string.' 
len(test)
print(test)
print(len(test))

test = test.replace('simple', 'short')
print(test)


test.count('r')
print(test.find('This'))

-- OUTPUT:
This is just a simple string.
29
This is just a short string.
0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 00:53:42) 
-- CODE:
test = 'This is just a simple string.' 
len(test)
print(test)
print(len(test))

test = test.replace('simple', 'short')
print(test)


test.count('r')
print(test.find('string'))

-- OUTPUT:
This is just a simple string.
29
This is just a short string.
21
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 00:54:14) 
-- CODE:
test = 'This is just a simple string.' 
len(test)
print(test)
print(len(test))

test = test.replace('simple', 'short')
print(test)


test.count('r')
print(test.split)
-- OUTPUT:
This is just a simple string.
29
This is just a short string.
<built-in method split of str object at 0x7f77e3c41f80>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 00:54:32) 
-- CODE:
test = 'This is just a simple string.' 
len(test)
print(test)
print(len(test))

test = test.replace('simple', 'short')
print(test)


test.count('r')
print(test.split())
-- OUTPUT:
This is just a simple string.
29
This is just a short string.
['This', 'is', 'just', 'a', 'short', 'string.']
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 00:54:48) 
-- CODE:
test = 'This is just a simple string.' 
len(test)
print(test)
print(len(test))

test = test.replace('simple', 'short')
print(test)


test.count('r')
print(test.split('a'))
-- OUTPUT:
This is just a simple string.
29
This is just a short string.
['This is just ', ' short string.']
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 00:55:18) 
-- CODE:
test = 'This is just a simple string.' 
len(test)
print(test)
print(len(test))

test = test.replace('simple', 'short')
print(test)


test.count('r')
print(test.split('a'))
' some '.join(test.split('a'))
-- OUTPUT:
This is just a simple string.
29
This is just a short string.
['This is just ', ' short string.']
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 00:55:38) 
-- CODE:
test = 'This is just a simple string.' 
len(test)
print(test)
print(len(test))

test = test.replace('simple', 'short')
print(test)


' some '.join(test.split('a'))
print(test.split('a'))
-- OUTPUT:
This is just a simple string.
29
This is just a short string.
['This is just ', ' short string.']
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 00:56:18) 
-- CODE:
test = 'This is just a simple string.' 
len(test)
print(test)
print(len(test))

test = test.replace('simple', 'short')
print(test)


print(' some '.join(test.split('a')))
print(test.split('a'))
-- OUTPUT:
This is just a simple string.
29
This is just a short string.
This is just  some  short string.
['This is just ', ' short string.']
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 00:56:28) 
-- CODE:
test = 'This is just a simple string.' 
len(test)
print(test)
print(len(test))

test = test.replace('simple', 'short')
print(test)


print(' some '.join(test.split('a')))

-- OUTPUT:
This is just a simple string.
29
This is just a short string.
This is just  some  short string.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 00:57:07) 
-- CODE:
test = 'This is just a simple string.' 
len(test)
print(test)
print(len(test))

test = test.replace('simple', 'short')
print(test)


print(' some '.join(test.split('a')))
print(test.upper())
-- OUTPUT:
This is just a simple string.
29
This is just a short string.
This is just  some  short string.
THIS IS JUST A SHORT STRING.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 00:57:24) 
-- CODE:
test = 'This is just a simple string.' 
len(test)
print(test)
print(len(test))

test = test.replace('simple', 'short')
print(test)


print(' some '.join(test.split('a')))
print(test.lower())
-- OUTPUT:
This is just a simple string.
29
This is just a short string.
This is just  some  short string.
this is just a short string.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 00:57:54) 
-- CODE:
test = 'This is just a simple string.' 
len(test)
print(test)
print(len(test))

test = test.replace('simple', 'short')
print(test)


print(' some '.join(test.split('a')))
print(test.lower().capitalize())
-- OUTPUT:
This is just a simple string.
29
This is just a short string.
This is just  some  short string.
This is just a short string.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 00:58:47) 
-- CODE:
test = 'This is just a simple string.' 
len(test)
print(test)
print(len(test))

test = test.replace('simple', 'short')
print(test)


print(' some '.join(test.split('a')))
print(test.lower().capitalize())
print(swap.case)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    print(swap.case)
NameError: name 'swap' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 00:58:56) 
-- CODE:
test = 'This is just a simple string.' 
len(test)
print(test)
print(len(test))

test = test.replace('simple', 'short')
print(test)


print(' some '.join(test.split('a')))
print(test.lower().capitalize())
print(swap.case())
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    print(swap.case())
NameError: name 'swap' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 00:59:11) 
-- CODE:
test = 'This is just a simple string.' 
len(test)
print(test)
print(len(test))

test = test.replace('simple', 'short')
print(test)


print(' some '.join(test.split('a')))
print(test.lower().capitalize())
print(test.swap.case())
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    print(test.swap.case())
AttributeError: 'str' object has no attribute 'swap'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 00:59:44) 
-- CODE:
test = 'This is just a simple string.' 
len(test)
print(test)
print(len(test))

test = test.replace('simple', 'short')
print(test)


print(' some '.join(test.split('a')))
print(test.lower().capitalize())
print(test.swapcase())
-- OUTPUT:
This is just a simple string.
29
This is just a short string.
This is just  some  short string.
This is just a short string.
tHIS IS JUST A SHORT STRING.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 16:33:07) 
-- CODE:
test = 'This is just a simple string.' 
len(test)
print(test)
print(len(test))

test = test.replace('simple', 'short')
print(test)


print(' some '.join(test.split('a')))
print(test.lower().capitalize())
print(test.swapcase())
-- EXECUTION TIME:
0.64565
-- TEST CASE 1:
---- input:
Instituto_de_Computacao-ICOMP-UFAM
---- correct output:
Instituto_de_Computco-ICOMP-UFM
---- user output:
This is just a simple string.
29
This is just a short string.
This is just  some  short string.
This is just a short string.
tHIS IS JUST A SHORT STRING.
-- TEST CASE 2:
---- input:
a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-aa-a-a-a-a-a-a-a-a-a-a
---- correct output:
-----------------------------
---- user output:
This is just a simple string.
29
This is just a short string.
This is just  some  short string.
This is just a short string.
tHIS IS JUST A SHORT STRING.
-- TEST CASE 3:
---- input:
.aaaaaaaaaaaaaaaaaaaaa.bbbbbbbbbbbbbbbbbbb.ccccccccccccccccccccccc.bbbbbbbbbbbbbbbbbb.aaaaaaaaaaaaaaaaa.
---- correct output:
..bbbbbbbbbbbbbbbbbbb.ccccccccccccccccccccccc.bbbbbbbbbbbbbbbbbb..
---- user output:
This is just a simple string.
29
This is just a short string.
This is just  some  short string.
This is just a short string.
tHIS IS JUST A SHORT STRING.
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 17:13:21) 
-- CODE:
from numpy import *
c=input('')
cs=''
for ch in c:
	if(ch== 'a'  or ch=='A'):
		cs=cs
	else:
		cs=cs+ch
print(cs)
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 17:13:29) 
-- CODE:
from numpy import *
c=input('')
cs=''
for ch in c:
	if(ch== 'a'  or ch=='A'):
		cs=cs
	else:
		cs=cs+ch
print(cs)
		
-- EXECUTION TIME:
1.24918
-- TEST CASE 1:
---- input:
Instituto_de_Computacao-ICOMP-UFAM
---- correct output:
Instituto_de_Computco-ICOMP-UFM
---- user output:
Instituto_de_Computco-ICOMP-UFM
-- TEST CASE 2:
---- input:
a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-aa-a-a-a-a-a-a-a-a-a-a
---- correct output:
-----------------------------
---- user output:
-----------------------------
-- TEST CASE 3:
---- input:
.aaaaaaaaaaaaaaaaaaaaa.bbbbbbbbbbbbbbbbbbb.ccccccccccccccccccccccc.bbbbbbbbbbbbbbbbbb.aaaaaaaaaaaaaaaaa.
---- correct output:
..bbbbbbbbbbbbbbbbbbb.ccccccccccccccccccccccc.bbbbbbbbbbbbbbbbbb..
---- user output:
..bbbbbbbbbbbbbbbbbbb.ccccccccccccccccccccccc.bbbbbbbbbbbbbbbbbb..
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 17:13:25) 
-- CODE:
from numpy import *
vetor_string=input('')


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 17:19:18) 
-- CODE:
from numpy import *
vetor_string=input('')
novo_vetor_sem_a=''
for elemento in vetor_string:
	if(elemento != "a" or elemento != 'A'):
		novo_vetor_sem_a=novo_vetor_sem_a + elemento
print(novo_vetor_sem_a)

		
		
		


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 17:20:38) 
-- CODE:
from numpy import *
vetor_string=input('')
novo_vetor_sem_a=''
for elemento in vetor_string:
	if(elemento != 'a' and elemento != 'A'):
		novo_vetor_sem_a=novo_vetor_sem_a + elemento
print(novo_vetor_sem_a)

		
		
		


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
