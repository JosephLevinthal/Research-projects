== TEST (2019-04-16 12:29:00) 
-- CODE:
x=float(input("escala:"))
y=float(input("valor:"))

if(x=C):
	print((y*9/5)+(32))

-- ERROR:
File "XXXX", line 4
    if(x=C):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 12:29:08) 
-- CODE:
x=float(input("escala:"))
y=float(input("valor:"))

if(x=C):
	print((y*9/5)+(32))

-- ERROR:
File "XXXX", line 4
    if(x=C):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:41:26) 
-- CODE:
x=float(input("escala:"))
y=float(input("valor:"))

if(x=C):
	print((y*9/5)+(32))
if(x=F):
	print((y-32)*(5/9))
-- ERROR:
File "XXXX", line 4
    if(x=C):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:41:58) 
-- CODE:
x=float(input("escala:"))
y=float(input("valor:"))

if(x=C):
	print((y*9/5)+(32))
if(x=F):
	print((y-32)*(5/9))
-- ERROR:
File "XXXX", line 4
    if(x=C):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:42:15) 
-- CODE:
x=float(input("escala:"))
y=float(input("valor:"))

if (x=C):
	print((y*9/5)+(32))
if (x=F):
	print((y-32)*(5/9))
-- ERROR:
File "XXXX", line 4
    if (x=C):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:42:35) 
-- CODE:
x=float(input("escala:"))
y=float(input("valor:"))

if (x==C):
	print((y*9/5)+(32))
if (x==F):
	print((y-32)*(5/9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    x=float(input())
ValueError: could not convert string to float: 'C'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:43:01) 
-- CODE:
x=(input("escala:")
y=float(input("valor:"))

if (x==C):
	print((y*9/5)+(32))
if (x==F):
	print((y-32)*(5/9))
-- ERROR:
File "XXXX", line 2
    y=float(input())
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:43:29) 
-- CODE:
x=(input("escala:")
y=(input("valor:")

if (x==C):
	print((y*9/5)+(32))
if (x==F):
	print((y-32)*(5/9))
-- ERROR:
File "XXXX", line 2
    y=(input()
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:43:58) 
-- CODE:
x=input("escala:")
y=float(input("valor:"))

if (x==C):
	print((y*9/5)+(32))
if (x==F):
	print((y-32)*(5/9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if (x==C):
NameError: name 'C' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:44:37) 
-- CODE:
x=input("escala:")
y=float(input("valor:"))

if (x=="C"):
	print((y*9/5)+(32))
if (x==F):
	print((y-32)*(5/9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if (x==F):
NameError: name 'F' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:44:41) 
-- CODE:
x=input("escala:")
y=float(input("valor:"))

if (x=="C"):
	print((y*9/5)+(32))
if (x==F):
	print((y-32)*(5/9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if (x==F):
NameError: name 'F' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:45:00) 
-- CODE:
x=input("escala:")
y=float(input("valor:"))

if (x=="C"):
	print((y*9/5)+(32))
if (x=="F"):
	print((y-32)*(5/9))
-- OUTPUT:
608.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:45:17) 
-- CODE:
x=input("escala:")
y=float(input("valor:"))

if (x=="C"):
	print((y*9/5)+(32))
if (x=="F"):
	print((y-32)*(5/9))
-- OUTPUT:
608.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:45:52) 
-- CODE:
x=input("escala:")
y=float(input("valor:"))

if (x=="C"):
	print((y*9/5)+(32))
if (x=="F"):
	print(round(y-32)*(5/9), 2)
-- OUTPUT:
608.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:46:17) 
-- CODE:
x=input("escala:")
y=float(input("valor:"))

if (x=="C"):
	print((y*9/5)+(32))
if (x=="F"):
	print(round((y-32)*(5/9)), 2)
-- OUTPUT:
608.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:47:04) 
-- CODE:
x=input("escala:")
y=float(input("valor:"))

if (x=="C"):
	print((y*9/5)+(32))
if (x=="F"):
	print((y-32)*(5/9))
-- OUTPUT:
608.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 14:47:13) 
-- CODE:
x=input("escala:")
y=float(input("valor:"))

if (x=="C"):
	print((y*9/5)+(32))
if (x=="F"):
	print((y-32)*(5/9))
-- EXECUTION TIME:
0.191177
-- TEST CASE 1:
---- input:
C
320
---- correct output:
608.0
---- user output:
608.0
-- TEST CASE 2:
---- input:
F
320
---- correct output:
160.0
---- user output:
160.0
-- TEST CASE 3:
---- input:
C
0
---- correct output:
32.0
---- user output:
32.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
