== TEST (2019-04-16 02:37:05) 
-- CODE:
preco=float(input("valor: "))
pagamento=float(input("pagamento: "))

if (preco  > pagamento ):
	preco = preco - pagamento
	
else:
	
-- ERROR:
File "XXXX", line 9
    
     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 02:40:24) 
-- CODE:
preco=float(input("valor: "))
pagamento=float(input("pagamento: "))

if ( preco  > pagamento ):
	troco = preco - pagamento
	
else:
	( preco < pagamento )
	troco = pagamento - preco
	
print(troco)
-- EXECUTION TIME:
0.207123
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 02:40:28) 
-- CODE:
preco=float(input("valor: "))
pagamento=float(input("pagamento: "))

if ( preco  > pagamento ):
	troco = preco - pagamento
	
else:
	( preco < pagamento )
	troco = pagamento - preco
	
print(troco)
-- OUTPUT:
26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 02:41:42) 
-- CODE:
preco=float(input("valor: "))
pagamento=float(input("pagamento: "))

if ( preco  > pagamento ):
	troco de + ()= preco - pagamento
	
else:
	( preco < pagamento )
	troco de + () = pagamento - preco
	
print(troco)
-- EXECUTION TIME:
0.191771
-- ERROR:
  File "/home/codebench/codes/1644/2447/main.py", line 5
    troco de + ()= preco - pagamento
           ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 02:41:44) 
-- CODE:
preco=float(input("valor: "))
pagamento=float(input("pagamento: "))

if ( preco  > pagamento ):
	troco de + ()= preco - pagamento
	
else:
	( preco < pagamento )
	troco de + () = pagamento - preco
	
print(troco)
-- EXECUTION TIME:
0.128441
-- ERROR:
  File "/home/codebench/codes/1644/2447/main.py", line 5
    troco de + ()= preco - pagamento
           ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 02:41:44) 
-- CODE:
preco=float(input("valor: "))
pagamento=float(input("pagamento: "))

if ( preco  > pagamento ):
	troco de + ()= preco - pagamento
	
else:
	( preco < pagamento )
	troco de + () = pagamento - preco
	
print(troco)
-- ERROR:
File "XXXX", line 5
    troco de + ()= preco - pagamento
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 02:42:07) 
-- CODE:
preco=float(input("valor: "))
pagamento=float(input("pagamento: "))

if ( preco  > pagamento ):
	troco de = preco - pagamento
	
else:
	( preco < pagamento )
	troco de = pagamento - preco
	
print(troco de)
-- ERROR:
File "XXXX", line 5
    troco de = preco - pagamento
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 02:42:28) 
-- CODE:
preco=float(input("valor: "))
pagamento=float(input("pagamento: "))

if ( preco  > pagamento ):
	troco_de = preco - pagamento
	
else:
	( preco < pagamento )
	troco_de = pagamento - preco
	
print(troco_de)
-- OUTPUT:
26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 02:43:49) 
-- CODE:
preco=float(input("valor: "))
pagamento=float(input("pagamento: "))

if ( preco  > pagamento ):
	troco_de+() = preco - pagamento
	
else:
	( preco < pagamento )
	troco_de+() = pagamento - preco
	
print(round(troco_de+(),2)
-- ERROR:
File "XXXX", line 12
    
                              ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 02:43:58) 
-- CODE:
preco=float(input("valor: "))
pagamento=float(input("pagamento: "))

if ( preco  > pagamento ):
	troco_de+() = preco - pagamento
	
else:
	( preco < pagamento )
	troco_de+() = pagamento - preco
	
print(round(troco_de+,2)
-- ERROR:
File "XXXX", line 11
    print(round(troco_de+,2)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 02:44:32) 
-- CODE:
preco=float(input("valor: "))
pagamento=float(input("pagamento: "))

if ( preco  > pagamento ):
	troco_de+() = preco - pagamento
	
else:
	( preco < pagamento )
	troco_de+() = pagamento - preco
	
print(troco_de)
-- ERROR:
File "XXXX", line 5
    troco_de+() = preco - pagamento
    ^
SyntaxError: can't assign to operator
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 02:44:35) 
-- CODE:
preco=float(input("valor: "))
pagamento=float(input("pagamento: "))

if ( preco  > pagamento ):
	troco_de+() = preco - pagamento
	
else:
	( preco < pagamento )
	troco_de+() = pagamento - preco
	
print(troco_de)
-- ERROR:
File "XXXX", line 5
    troco_de+() = preco - pagamento
    ^
SyntaxError: can't assign to operator
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 02:45:01) 
-- CODE:
preco=float(input("valor: "))
pagamento=float(input("pagamento: "))

if ( preco  > pagamento ):
	troco = preco - pagamento
	
else:
	( preco < pagamento )
	troco = pagamento - preco
	
print(troco)
-- OUTPUT:
26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 02:52:19) 
-- CODE:
preco=float(input("valor: "))
pagamento=float(input("pagamento: "))

if ( preco  > pagamento ):
	a = preco - pagamento
	b = "troco de"+" "+a
else:
	( preco < pagamento )
	a = pagamento - preco
	b = "troco de" +" "+a
	
print("troco de"+" "+a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    b = "troco de"+" "+a
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 02:52:46) 
-- CODE:
preco=float(input("valor: "))
pagamento=float(input("pagamento: "))

if ( preco  > pagamento ):
	a = preco - pagamento
	b = "troco de"+" "+a
else:
	( preco < pagamento )
	a = pagamento - preco
	b = "troco de" +" "+a
	
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    b = "troco de"+" "+a
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 02:54:17) 
-- CODE:
preco=float(input("valor: "))
pagamento=float(input("pagamento: "))

if ( preco  > pagamento ):
	a = preco - pagamento
	b = "troco de"+" "+a
else:
	( preco < pagamento )
	a = pagamento - preco
	b = "troco de" +" "+a
	
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    b = "troco de"+" "+a
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 02:55:03) 
-- CODE:
preco=float(input("valor: "))
pagamento=float(input("pagamento: "))

if ( preco  > pagamento ):
	a = preco - pagamento
	b = ("troco de"+" "+a)
else:
	( preco < pagamento )
	a = pagamento - preco
	b = ("troco de" +" "+a)
	
print(b)
-- EXECUTION TIME:
0.164498
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/2447/main.py", line 6, in <module>
    b = ("troco de"+" "+a)
TypeError: Can't convert 'float' object to str implicitly

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 02:55:04) 
-- CODE:
preco=float(input("valor: "))
pagamento=float(input("pagamento: "))

if ( preco  > pagamento ):
	a = preco - pagamento
	b = ("troco de"+" "+a)
else:
	( preco < pagamento )
	a = pagamento - preco
	b = ("troco de" +" "+a)
	
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    b = ("troco de"+" "+a)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 02:55:52) 
-- CODE:
preco=float(input("valor: "))
pagamento=float(input("pagamento: "))

if ( preco  > pagamento ):
	a = preco - pagamento
	b = ("troco de"+" "+a)
else:
	( preco < pagamento )
	a = pagamento - preco
	b = ("troco de" +" "+a)
	
print(round(b,2)
-- ERROR:
File "XXXX", line 13
    
                    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 02:56:00) 
-- CODE:
preco=float(input("valor: "))
pagamento=float(input("pagamento: "))

if ( preco  > pagamento ):
	a = preco - pagamento
	b = ("troco de"+" "+a)
else:
	( preco < pagamento )
	a = pagamento - preco
	b = ("troco de" +" "+a)
	
print(round(b,2)
-- ERROR:
File "XXXX", line 13
    
                    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 02:56:01) 
-- CODE:
preco=float(input("valor: "))
pagamento=float(input("pagamento: "))

if ( preco  > pagamento ):
	a = preco - pagamento
	b = ("troco de"+" "+a)
else:
	( preco < pagamento )
	a = pagamento - preco
	b = ("troco de" +" "+a)
	
print(round(b,2)
-- ERROR:
File "XXXX", line 13
    
                    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:18:49) 
-- CODE:
preco=float(input("valor: "))
pagamento=float(input("pagamento: "))

if ( preco  > pagamento ):
	a = preco - pagamento
	b = 
else:
	( preco < pagamento )
	a = pagamento - preco
	b = 
	
print(round(b,2)
-- ERROR:
File "XXXX", line 6
    b = 
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:19:22) 
-- CODE:
preco=float(input("valor: "))
pagamento=float(input("pagamento: "))

if ( preco  > pagamento ):
	a = preco - pagamento
	b = 
else:
	( preco < pagamento )
	a = pagamento - preco
	b = 
	
print(round(b,2)
-- ERROR:
File "XXXX", line 6
    b = 
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:19:23) 
-- CODE:
preco=float(input("valor: "))
pagamento=float(input("pagamento: "))

if ( preco  > pagamento ):
	a = preco - pagamento
	b = 
else:
	( preco < pagamento )
	a = pagamento - preco
	b = 
	
print(round(b,2)
-- ERROR:
File "XXXX", line 6
    b = 
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 15:29:53) 
-- CODE:
preco=float(input("valor: "))
pagamento=float(input("pagamento: "))

if ( preco  > pagamento ):
	a = preco - pagamento
	mensagem = 'falta '+ a
else:
	( preco < pagamento )
	a = pagamento - preco
	mensagem =  'troco '+ a
print(a)
-- EXECUTION TIME:
0.222659
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/2447/main.py", line 6, in <module>
    mensagem = 'falta '+ a
TypeError: Can't convert 'float' object to str implicitly

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 15:29:54) 
-- CODE:
preco=float(input("valor: "))
pagamento=float(input("pagamento: "))

if ( preco  > pagamento ):
	a = preco - pagamento
	mensagem = 'falta '+ a
else:
	( preco < pagamento )
	a = pagamento - preco
	mensagem =  'troco '+ a
print(a)
-- EXECUTION TIME:
0.211375
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/2447/main.py", line 6, in <module>
    mensagem = 'falta '+ a
TypeError: Can't convert 'float' object to str implicitly

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 15:29:54) 
-- CODE:
preco=float(input("valor: "))
pagamento=float(input("pagamento: "))

if ( preco  > pagamento ):
	a = preco - pagamento
	mensagem = 'falta '+ a
else:
	( preco < pagamento )
	a = pagamento - preco
	mensagem =  'troco '+ a
print(a)
-- EXECUTION TIME:
0.112849
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/2447/main.py", line 6, in <module>
    mensagem = 'falta '+ a
TypeError: Can't convert 'float' object to str implicitly

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 15:29:54) 
-- CODE:
preco=float(input("valor: "))
pagamento=float(input("pagamento: "))

if ( preco  > pagamento ):
	a = preco - pagamento
	mensagem = 'falta '+ a
else:
	( preco < pagamento )
	a = pagamento - preco
	mensagem =  'troco '+ a
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    mensagem = 'falta '+ a
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 15:29:55) 
-- CODE:
preco=float(input("valor: "))
pagamento=float(input("pagamento: "))

if ( preco  > pagamento ):
	a = preco - pagamento
	mensagem = 'falta '+ a
else:
	( preco < pagamento )
	a = pagamento - preco
	mensagem =  'troco '+ a
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    mensagem = 'falta '+ a
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 15:30:29) 
-- CODE:
preco=float(input("valor: "))
pagamento=float(input("pagamento: "))

if ( preco  > pagamento ):
	a = preco - pagamento
	mensagem = 'falta '+ a
else:
	( preco < pagamento )
	a = pagamento - preco
	mensagem = 'troco de '+ a
print(a)
-- EXECUTION TIME:
0.150707
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/2447/main.py", line 6, in <module>
    mensagem = 'falta '+ a
TypeError: Can't convert 'float' object to str implicitly

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 15:30:30) 
-- CODE:
preco=float(input("valor: "))
pagamento=float(input("pagamento: "))

if ( preco  > pagamento ):
	a = preco - pagamento
	mensagem = 'falta '+ a
else:
	( preco < pagamento )
	a = pagamento - preco
	mensagem = 'troco de '+ a
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    mensagem = 'falta '+ a
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 15:32:03) 
-- CODE:
preco=float(input("valor: "))
pagamento=float(input("pagamento: "))

if ( preco  > pagamento ):
	a = preco - pagamento
	mensagem = 'falta '+ a
else:
	( preco < pagamento )
	a = pagamento - preco
	mensagem = 'troco '+ a
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    mensagem = 'falta '+ a
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 15:32:28) 
-- CODE:
preco=float(input("valor: "))
pagamento=float(input("pagamento: "))

if ( preco  > pagamento ):
	a = preco - pagamento
	mensagem = 'falta '+ a
else:
	( preco < pagamento )
	a = pagamento - preco
	mensagem = 'troco '+ a
print(mensagem)
-- EXECUTION TIME:
0.140518
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/2447/main.py", line 6, in <module>
    mensagem = 'falta '+ a
TypeError: Can't convert 'float' object to str implicitly

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 15:32:29) 
-- CODE:
preco=float(input("valor: "))
pagamento=float(input("pagamento: "))

if ( preco  > pagamento ):
	a = preco - pagamento
	mensagem = 'falta '+ a
else:
	( preco < pagamento )
	a = pagamento - preco
	mensagem = 'troco '+ a
print(mensagem)
-- EXECUTION TIME:
0.140741
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/2447/main.py", line 6, in <module>
    mensagem = 'falta '+ a
TypeError: Can't convert 'float' object to str implicitly

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 15:32:40) 
-- CODE:
preco=float(input("valor: "))
pagamento=float(input("pagamento: "))

if ( preco  > pagamento ):
	a = preco - pagamento
	mensagem = 'falta '+ a
else:
	( preco < pagamento )
	a = pagamento - preco
	mensagem = 'troco '+ a

print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    mensagem = 'falta '+ a
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 15:50:30) 
-- CODE:
preco=float(input("valor: "))
pagamento=float(input("pagamento: "))

if preco  > pagamento :
	a = preco - pagamento
	print("Falta ", round(a,2))
else:
	b = pagamento - preco
	print("Troco de ", round(b,2))


-- EXECUTION TIME:
0.0299592
-- ERROR:
Error: No such container: sh

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 15:50:30) 
-- CODE:
preco=float(input("valor: "))
pagamento=float(input("pagamento: "))

if preco  > pagamento :
	a = preco - pagamento
	print("Falta ", round(a,2))
else:
	b = pagamento - preco
	print("Troco de ", round(b,2))


-- EXECUTION TIME:
0.0298061
-- ERROR:
Error: No such container: sh

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 15:50:31) 
-- CODE:
preco=float(input("valor: "))
pagamento=float(input("pagamento: "))

if preco  > pagamento :
	a = preco - pagamento
	print("Falta ", round(a,2))
else:
	b = pagamento - preco
	print("Troco de ", round(b,2))


-- OUTPUT:
Falta  26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 15:50:31) 
-- CODE:
preco=float(input("valor: "))
pagamento=float(input("pagamento: "))

if preco  > pagamento :
	a = preco - pagamento
	print("Falta ", round(a,2))
else:
	b = pagamento - preco
	print("Troco de ", round(b,2))


-- OUTPUT:
Falta  26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 15:50:31) 
-- CODE:
preco=float(input("valor: "))
pagamento=float(input("pagamento: "))

if preco  > pagamento :
	a = preco - pagamento
	print("Falta ", round(a,2))
else:
	b = pagamento - preco
	print("Troco de ", round(b,2))


-- OUTPUT:
Falta  26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 15:50:32) 
-- CODE:
preco=float(input("valor: "))
pagamento=float(input("pagamento: "))

if preco  > pagamento :
	a = preco - pagamento
	print("Falta ", round(a,2))
else:
	b = pagamento - preco
	print("Troco de ", round(b,2))


-- OUTPUT:
Falta  26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 15:50:33) 
-- CODE:
preco=float(input("valor: "))
pagamento=float(input("pagamento: "))

if preco  > pagamento :
	a = preco - pagamento
	print("Falta ", round(a,2))
else:
	b = pagamento - preco
	print("Troco de ", round(b,2))


-- OUTPUT:
Falta  26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 15:53:05) 
-- CODE:
preco = float(input("Valor do Produto: "))
pagamento = float(input("Valor do Pagamento: "))

if preco > pagamento:
	x = preco - pagamento
	print ("Falta ",round(x,2))
else:
	y = pagamento - preco
	print("Troco de ",round(y,2))
	
-- EXECUTION TIME:
0.122496
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta  26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de  28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de  0.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
