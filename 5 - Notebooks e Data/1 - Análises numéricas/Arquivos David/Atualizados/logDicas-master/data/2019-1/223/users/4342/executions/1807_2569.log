== TEST (2019-06-13 14:29:22) 
-- CODE:
from numpy import*
vetor= array(eval(input('desvio:')))
m= (sum(vetor)/size(vetor))
d=0

for i in range(size(vetor)):
	if( i>=0):
		d = round((((vet[i]-m)**2)/(size(vetor)-1)), 3)
print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 14:29:39) 
-- CODE:
from numpy import*
vetor= array(eval(input('vetor:')))
m= (sum(vetor)/size(vetor))
d=0

for i in range(size(vetor)):
	if( i>=0):
		d = round((((vet[i]-m)**2)/(size(vetor)-1)), 3)
print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 14:30:06) 
-- CODE:
from numpy import*
vetor= array(eval(input('vetor:')))
m= (sum(vetor)/size(vetor))
d=0

for i in range(size(vetor)):
	if( i>=0):
		d = round((((vetor[i]-m)**2)/(size(vetor)-1)), 3)
print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 14:31:53) 
-- CODE:
from numpy import*
vetor= array(eval(input('vetor:')))
m= (sum(vetor)/size(vetor))
d=0

for i in range(size(vetor)):
	if( i>=0):
		d = round((((vetor[i]-m)**2)
print(d)
-- ERROR:
File "XXXX", line 9
    print(d)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 14:32:06) 
-- CODE:
from numpy import*
vetor= array(eval(input('vetor:')))
m= (sum(vetor)/size(vetor))
d=0

for i in range(size(vetor)):
	if( i>=0):
		d = round(((vetor[i]-m)**2)
print(d)
-- ERROR:
File "XXXX", line 9
    print(d)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 14:32:17) 
-- CODE:
from numpy import*
vetor= array(eval(input('vetor:')))
m= (sum(vetor)/size(vetor))
d=0

for i in range(size(vetor)):
	if( i>=0):
		d =(((vetor[i]-m)**2)
print(d)
-- ERROR:
File "XXXX", line 9
    print(d)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 14:32:24) 
-- CODE:
from numpy import*
vetor= array(eval(input('vetor:')))
m= (sum(vetor)/size(vetor))
d=0

for i in range(size(vetor)):
	if( i>=0):
		d =((vetor[i]-m)**2)
print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 14:34:20) 
-- CODE:
from numpy import*
vetor= array(eval(input('vetor:')))
m= (sum(vetor)/size(vetor))
d=0

while(i>=0):
	for i in range(size(vetor)):
			d =((vetor[i]-m)**2)
print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 14:34:36) 
-- CODE:
from numpy import*
vetor= array(eval(input('vetor:')))
m= (sum(vetor)/size(vetor))
i=0
d=0

while(i>=0):
	for i in range(size(vetor)):
			d =((vetor[i]-m)**2)
print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 15:58:53) 
-- CODE:
from numpy import*
from math import*
vetor= array(eval(input('vetor:')))
m=sum(vetor)/size(vetor)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
