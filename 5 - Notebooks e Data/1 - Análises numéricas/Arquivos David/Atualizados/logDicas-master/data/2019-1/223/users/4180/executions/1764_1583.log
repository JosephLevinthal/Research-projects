== TEST (2019-05-23 16:50:28) 
-- CODE:
charcters = str(eval(input("")))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 16:50:31) 
-- CODE:
charcters = str(eval(input("")))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 16:50:35) 
-- CODE:
charcters = str(eval(input(":")))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 16:50:48) 
-- CODE:
charcters = str(eval(input("Caracteres:")))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 16:50:56) 
-- CODE:
charcters = str(eval(input("Caracteres:")))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 16:51:43) 
-- CODE:
charcters = str(eval(input("Caracteres:")))
print(:3)
-- ERROR:
File "XXXX", line 2
    print(:3)
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 16:52:32) 
-- CODE:
charcters = str(eval(input("Caracteres:")))
print(s[:3])
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    print(s[:3])
NameError: name 's' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 16:52:49) 
-- CODE:
charcters = str(eval(input("Caracteres:")))
print(charcters[:3])
-- OUTPUT:
123
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 16:53:07) 
-- CODE:
charcters = str(eval(input("Caracteres:")))
print(charcters[:3","])
-- ERROR:
File "XXXX", line 2
    print(charcters[:3","])
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 16:53:14) 
-- CODE:
charcters = str(eval(input("Caracteres:")))
print(charcters[:3]),""
-- OUTPUT:
123
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 16:53:31) 
-- CODE:
charcters = str(eval(input("Caracteres:")))
print(charcters[:3]) + ","
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    print(charcters[:3]) + ","
TypeError: unsupported operand type(s) for +: 'NoneType' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 16:53:42) 
-- CODE:
charcters = str(eval(input("Caracteres:")))
print(charcters[:3]) + ","
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    print(charcters[:3]) + ","
TypeError: unsupported operand type(s) for +: 'NoneType' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 16:53:47) 
-- CODE:
charcters = str(eval(input("Caracteres:")))
print(charcters[:3]) + ,
-- ERROR:
File "XXXX", line 2
    print(charcters[:3]) + ,
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 16:53:53) 
-- CODE:
charcters = str(eval(input("Caracteres:")))
print(charcters[:3])","
-- ERROR:
File "XXXX", line 2
    print(charcters[:3])","
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 16:54:44) 
-- CODE:
charcters = str(eval(input("Caracteres:")))
print(charcters[:3] + charcters([]))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    print(charcters[:3] + charcters([]))
TypeError: 'str' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 16:55:00) 
-- CODE:
charcters = str(eval(input("Caracteres:")))
print(charcters[:2] + charcters([]))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    print(charcters[:2] + charcters([]))
TypeError: 'str' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 16:55:35) 
-- CODE:
charcters = str(eval(input("Caracteres:")))
print(charcters[:2] + charcters([3:5]))

-- ERROR:
File "XXXX", line 2
    print(charcters[:2] + charcters([3:5]))
                                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 16:56:14) 
-- CODE:
charcters = str(eval(input("Caracteres:")))
print(charcters[:2] + charcters([3:5]))

-- ERROR:
File "XXXX", line 2
    print(charcters[:2] + charcters([3:5]))
                                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 16:56:21) 
-- CODE:
charcters = str(eval(input("Caracteres:")))
v = (charcters[:2] + charcters([3:5]))

-- ERROR:
File "XXXX", line 2
    v = (charcters[:2] + charcters([3:5]))
                                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 16:56:34) 
-- CODE:
charcters = str(eval(input("Caracteres:")))
v = ((charcters[:2] + charcters([3:5]))

-- ERROR:
File "XXXX", line 2
    v = ((charcters[:2] + charcters([3:5]))
                                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 16:56:37) 
-- CODE:
charcters = str(eval(input("Caracteres:")))
v = (charcters[:2] + charcters([3:5]))

-- ERROR:
File "XXXX", line 2
    v = (charcters[:2] + charcters([3:5]))
                                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 16:56:48) 
-- CODE:
charcters = str(eval(input("Caracteres:")))
v = (charcters[:2] "." charcters([3:5]))

-- ERROR:
File "XXXX", line 2
    v = (charcters[:2] "." charcters([3:5]))
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 16:57:13) 
-- CODE:
charcters = str(eval(input("Caracteres:")))
v = (charcters[:2]"."charcters([3:5]))

-- ERROR:
File "XXXX", line 2
    v = (charcters[:2]"."charcters([3:5]))
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 16:57:23) 
-- CODE:
cr = str(eval(input("Caracteres:")))
v = (charcters[:2]"."charcters([3:5]))

-- ERROR:
File "XXXX", line 2
    v = (charcters[:2]"."charcters([3:5]))
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 16:57:32) 
-- CODE:
cr = str(eval(input("Caracteres:")))
v = (cr[:2]"."cr([3:5]))

-- ERROR:
File "XXXX", line 2
    v = (cr[:2]"."cr([3:5]))
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 16:57:55) 
-- CODE:
cr = str(eval(input("Caracteres:")))
v = (cr[:2] + cr([3:5]))

-- ERROR:
File "XXXX", line 2
    v = (cr[:2] + cr([3:5]))
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 16:58:12) 
-- CODE:
cr = str(eval(input("Caracteres:")))
v = (cr[:2]"," cr([3:5]))

-- ERROR:
File "XXXX", line 2
    v = (cr[:2]"," cr([3:5]))
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 16:58:15) 
-- CODE:
cr = str(eval(input("Caracteres:")))
v = (cr[:2] "," cr([3:5]))

-- ERROR:
File "XXXX", line 2
    v = (cr[:2] "," cr([3:5]))
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 16:58:49) 
-- CODE:
cr = str(eval(input("Caracteres:")))
v = (cr[:2] "," cr([3:5] "," cr([6:8])))

-- ERROR:
File "XXXX", line 2
    v = (cr[:2] "," cr([3:5] "," cr([6:8])))
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 17:05:23) 
-- CODE:
cr = str(eval(input("Caracteres:")))


-- ERROR:
File "XXXX", line 2
    v = (cr[:2] "," cr([3:5] "," cr([6:8])))
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 17:09:09) 
-- CODE:
cr = str(eval(input("Caracteres:")))


-- ERROR:
File "XXXX", line 2
    v = (cr[:2] "," cr([3:5] "," cr([6:8])))
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 17:29:17) 
-- CODE:
cr = str(eval(input("Caracteres:")))
caracteres = 3
 while(caracteres >= 3):
		



-- ERROR:
File "XXXX", line 3
    while(caracteres >= 3):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 17:29:33) 
-- CODE:
cr = str(eval(input("Caracteres:")))
caracteres = 3
	while(caracteres >= 3):
		
		



-- ERROR:
File "XXXX", line 3
    while(caracteres >= 3):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 17:29:37) 
-- CODE:
cr = str(eval(input("Caracteres:")))
caracteres = 3
while(caracteres >= 3):
		
		



-- ERROR:
File "XXXX", line 8
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 17:30:26) 
-- CODE:
cr = str(eval(input("Caracteres:")))
caracteres = 3
while(caracteres >= 3):
	caracteres + 1
	
		
		



-- ERROR:
File "XXXX", line 8
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 17:30:33) 
-- CODE:
cr = str(eval(input("Caracteres:")))
caracteres = 3
while(caracteres >= 3):
	caracteres + 1
	
		
		



-- ERROR:
File "XXXX", line 8
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 17:33:10) 
-- CODE:
cr = str(eval(input("Caracteres:")))
caracteres = 3
while(caracteres >= 3):
	caracteres + 1
	
print(cr([:3]))
	
		
		



-- ERROR:
File "XXXX", line 6
    print(cr([:3]))
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 17:33:15) 
-- CODE:
cr = str(eval(input("Caracteres:")))
caracteres = 3
while(caracteres >= 3):
	caracteres + 1
	
print(cr([:3]))
	
		
		



-- ERROR:
File "XXXX", line 6
    print(cr([:3]))
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 17:33:24) 
-- CODE:
cr = str(eval(input("Caracteres:")))
caracteres = 3
while(caracteres >= 3):
	caracteres + 1
	
    print(cr([:3]))
	
		
		



-- ERROR:
File "XXXX", line 6
    print(cr([:3]))
                  ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 17:33:30) 
-- CODE:
cr = str(eval(input("Caracteres:")))
caracteres = 3
while(caracteres >= 3):
	caracteres + 1
	
print(cr([:3]))
	
		
		



-- ERROR:
File "XXXX", line 6
    print(cr([:3]))
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 17:33:43) 
-- CODE:
cr = str(eval(input("Caracteres:")))
caracteres = 3
while(caracteres >= 3):
	caracteres + 1
	
print(cr([:3]'.'))
	
		
		



-- ERROR:
File "XXXX", line 6
    print(cr([:3]'.'))
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 17:34:54) 
-- CODE:
cr = str(eval(input("Caracteres:")))
caracteres = 3
while(caracteres >= 3):
	caracteres + 1
	
print(cr[2])
	
		
		



-- ERROR:
File "XXXX", line 6
    print(cr([:3]'.'))
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 17:35:00) 
-- CODE:
cr = str(eval(input("Caracteres:")))
caracteres = 3
while(caracteres >= 3):
	caracteres + 1
	
print(cr[2])
	
		
		



-- ERROR:
File "XXXX", line 6
    print(cr([:3]'.'))
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 17:35:07) 
-- CODE:
cr = str(eval(input("Caracteres:")))
caracteres = 3
while(caracteres >= 3):
	caracteres + 1
	
print(cr[2])
	
		
		



-- ERROR:
File "XXXX", line 6
    print(cr([:3]'.'))
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 17:35:12) 
-- CODE:
cr = str(eval(input("Caracteres:")))
caracteres = 3
while(caracteres >= 3):
	caracteres + 1
	
	print(cr[2])
	
		
		



-- OUTPUT:
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 17:35:34) 
-- CODE:
cr = str(eval(input("Caracteres:")))
caracteres = 3
while(caracteres >= 3):
	caracteres + 1
	
	print(cr[2])
	
		
		



-- OUTPUT:
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 17:35:48) 
-- CODE:
cr = str(eval(input("Caracteres:")))
caracteres = 3
while(caracteres >= 3):
	caracteres + 1
	
	print(cr[2])+1
	
		
		



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(cr[2])+1
TypeError: unsupported operand type(s) for +: 'NoneType' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 17:35:59) 
-- CODE:
cr = str(eval(input("Caracteres:")))
caracteres = 3
while(caracteres >= 3):
	caracteres + 1
	
	print(cr[2])+1
	
		
		



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(cr[2])+1
TypeError: unsupported operand type(s) for +: 'NoneType' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 16:03:27) 
-- CODE:
from numpy import*
num = input("num")
i = 0 
j = 3
p = "."
tri = ""
while(i < len(num)):
	if(i < (len(num)-4)):
		tri = tri + num[i:j] + p
	else:
		tri = tri + num[i:j]
	i = i + 3
	j = j + 3
print(tri)

	
		
		



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 16:03:35) 
-- CODE:
from numpy import*
num = input("num")
i = 0 
j = 3
p = "."
tri = ""
while(i < len(num)):
	if(i < (len(num)-4)):
		tri = tri + num[i:j] + p
	else:
		tri = tri + num[i:j]
	i = i + 3
	j = j + 3
print(tri)

	
		
		



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-28 16:03:35) 
-- CODE:
from numpy import*
num = input("num")
i = 0 
j = 3
p = "."
tri = ""
while(i < len(num)):
	if(i < (len(num)-4)):
		tri = tri + num[i:j] + p
	else:
		tri = tri + num[i:j]
	i = i + 3
	j = j + 3
print(tri)

	
		
		



-- EXECUTION TIME:
0.529691
-- TEST CASE 1:
---- input:
123
---- correct output:
123
---- user output:
123
-- TEST CASE 2:
---- input:
123456789000987654321
---- correct output:
123.456.789.000.987.654.321
---- user output:
123.456.789.000.987.654.321
-- TEST CASE 3:
---- input:
987654321
---- correct output:
987.654.321
---- user output:
987.654.321
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 16:03:46) 
-- CODE:
from numpy import*
num = input("num")
i = 0 
j = 3
p = "."
tri = ""
while(i < len(num)):
	if(i < (len(num)-4)):
		tri = tri + num[i:j] + p
	else:
		tri = tri + num[i:j]
	i = i + 3
	j = j + 3
print(tri)

	
		
		



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 16:03:46) 
-- CODE:
from numpy import*
num = input("num")
i = 0 
j = 3
p = "."
tri = ""
while(i < len(num)):
	if(i < (len(num)-4)):
		tri = tri + num[i:j] + p
	else:
		tri = tri + num[i:j]
	i = i + 3
	j = j + 3
print(tri)

	
		
		



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 16:03:46) 
-- CODE:
from numpy import*
num = input("num")
i = 0 
j = 3
p = "."
tri = ""
while(i < len(num)):
	if(i < (len(num)-4)):
		tri = tri + num[i:j] + p
	else:
		tri = tri + num[i:j]
	i = i + 3
	j = j + 3
print(tri)

	
		
		



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 16:03:46) 
-- CODE:
from numpy import*
num = input("num")
i = 0 
j = 3
p = "."
tri = ""
while(i < len(num)):
	if(i < (len(num)-4)):
		tri = tri + num[i:j] + p
	else:
		tri = tri + num[i:j]
	i = i + 3
	j = j + 3
print(tri)

	
		
		



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 16:03:47) 
-- CODE:
from numpy import*
num = input("num")
i = 0 
j = 3
p = "."
tri = ""
while(i < len(num)):
	if(i < (len(num)-4)):
		tri = tri + num[i:j] + p
	else:
		tri = tri + num[i:j]
	i = i + 3
	j = j + 3
print(tri)

	
		
		



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 16:03:47) 
-- CODE:
from numpy import*
num = input("num")
i = 0 
j = 3
p = "."
tri = ""
while(i < len(num)):
	if(i < (len(num)-4)):
		tri = tri + num[i:j] + p
	else:
		tri = tri + num[i:j]
	i = i + 3
	j = j + 3
print(tri)

	
		
		



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 16:03:47) 
-- CODE:
from numpy import*
num = input("num")
i = 0 
j = 3
p = "."
tri = ""
while(i < len(num)):
	if(i < (len(num)-4)):
		tri = tri + num[i:j] + p
	else:
		tri = tri + num[i:j]
	i = i + 3
	j = j + 3
print(tri)

	
		
		



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 16:03:50) 
-- CODE:
from numpy import*
num = input("num")
i = 0 
j = 3
p = "."
tri = ""
while(i < len(num)):
	if(i < (len(num)-4)):
		tri = tri + num[i:j] + p
	else:
		tri = tri + num[i:j]
	i = i + 3
	j = j + 3
print(tri)

	
		
		



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 16:03:59) 
-- CODE:
from numpy import*
num = input("num: ")
i = 0 
j = 3
p = "."
tri = ""
while(i < len(num)):
	if(i < (len(num)-4)):
		tri = tri + num[i:j] + p
	else:
		tri = tri + num[i:j]
	i = i + 3
	j = j + 3
print(tri)

	
		
		



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
