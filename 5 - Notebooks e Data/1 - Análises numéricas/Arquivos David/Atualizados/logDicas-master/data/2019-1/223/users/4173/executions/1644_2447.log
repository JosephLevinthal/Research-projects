== TEST (2019-04-11 16:13:21) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" (a - c)
else (c >= a):
	mensagem = "Troco de" (c - a)
print(round(mensagem,2)


-- ERROR:
File "XXXX", line 5
    else (c >= a):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:13:22) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" (a - c)
else (c >= a):
	mensagem = "Troco de" (c - a)
print(round(mensagem,2)


-- ERROR:
File "XXXX", line 5
    else (c >= a):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:13:26) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" (a - c)
else (c >= a):
	mensagem = "Troco de" (c - a)
print(round(mensagem,2)


-- ERROR:
File "XXXX", line 5
    else (c >= a):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:13:39) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" (a - c)
else (c > a):
	mensagem = "Troco de" (c - a)
print(round(mensagem,2)


-- ERROR:
File "XXXX", line 5
    else (c > a):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:13:40) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" (a - c)
else (c > a):
	mensagem = "Troco de" (c - a)
print(round(mensagem,2)


-- ERROR:
File "XXXX", line 5
    else (c > a):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:14:04) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" (a - c)
else (c >= a):
	mensagem = "Troco de" (c - a)
print(round(mensagem,2)


-- ERROR:
File "XXXX", line 5
    else (c >= a):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:14:05) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" (a - c)
else (c >= a):
	mensagem = "Troco de" (c - a)
print(round(mensagem,2)


-- ERROR:
File "XXXX", line 5
    else (c >= a):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:14:06) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" (a - c)
else (c >= a):
	mensagem = "Troco de" (c - a)
print(round(mensagem,2)


-- ERROR:
File "XXXX", line 5
    else (c >= a):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:14:07) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" (a - c)
else (c >= a):
	mensagem = "Troco de" (c - a)
print(round(mensagem,2)


-- ERROR:
File "XXXX", line 5
    else (c >= a):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:14:07) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" (a - c)
else (c >= a):
	mensagem = "Troco de" (c - a)
print(round(mensagem,2)


-- ERROR:
File "XXXX", line 5
    else (c >= a):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:14:07) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" (a - c)
else (c >= a):
	mensagem = "Troco de" (c - a)
print(round(mensagem,2)


-- ERROR:
File "XXXX", line 5
    else (c >= a):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:14:08) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" (a - c)
else (c >= a):
	mensagem = "Troco de" (c - a)
print(round(mensagem,2)


-- ERROR:
File "XXXX", line 5
    else (c >= a):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:14:08) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" (a - c)
else (c >= a):
	mensagem = "Troco de" (c - a)
print(round(mensagem,2)


-- ERROR:
File "XXXX", line 5
    else (c >= a):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:14:08) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" (a - c)
else (c >= a):
	mensagem = "Troco de" (c - a)
print(round(mensagem,2)


-- ERROR:
File "XXXX", line 5
    else (c >= a):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:14:08) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" (a - c)
else (c >= a):
	mensagem = "Troco de" (c - a)
print(round(mensagem,2)


-- ERROR:
File "XXXX", line 5
    else (c >= a):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:14:08) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" (a - c)
else (c >= a):
	mensagem = "Troco de" (c - a)
print(round(mensagem,2)


-- ERROR:
File "XXXX", line 5
    else (c >= a):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:14:08) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" (a - c)
else (c >= a):
	mensagem = "Troco de" (c - a)
print(round(mensagem,2)


-- ERROR:
File "XXXX", line 5
    else (c >= a):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:14:09) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" (a - c)
else (c >= a):
	mensagem = "Troco de" (c - a)
print(round(mensagem,2)


-- ERROR:
File "XXXX", line 5
    else (c >= a):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:14:09) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" (a - c)
else (c >= a):
	mensagem = "Troco de" (c - a)
print(round(mensagem,2)


-- ERROR:
File "XXXX", line 5
    else (c >= a):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:14:09) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" (a - c)
else (c >= a):
	mensagem = "Troco de" (c - a)
print(round(mensagem,2)


-- ERROR:
File "XXXX", line 5
    else (c >= a):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:14:23) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" (a - c)
else (c >= a):
	mensagem = "Troco de" (c - a)
print(round(mensagem,2)


-- ERROR:
File "XXXX", line 5
    else (c >= a):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:14:30) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" (a - c)
else:
	(c >= a)
	mensagem = "Troco de" (c - a)
print(round(mensagem,2)


-- ERROR:
File "XXXX", line 10
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:14:32) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" (a - c)
else:
	(c >= a)
	mensagem = "Troco de" (c - a)
print(round(mensagem,2)


-- ERROR:
File "XXXX", line 10
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 16:14:33) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" (a - c)
else:
	(c >= a)
	mensagem = "Troco de" (c - a)
print(round(mensagem,2)


-- EXECUTION TIME:
0.146579
-- ERROR:
  File "/home/codebench/codes/1644/2447/main.py", line 10
    
    ^
SyntaxError: unexpected EOF while parsing

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:14:33) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" (a - c)
else:
	(c >= a)
	mensagem = "Troco de" (c - a)
print(round(mensagem,2)


-- ERROR:
File "XXXX", line 10
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:14:39) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" (a - c)
else:
	(c >= a)
	mensagem = "Troco de" (c - a)
print(round(mensagem,2)


-- ERROR:
File "XXXX", line 10
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:14:40) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" (a - c)
else:
	(c >= a)
	mensagem = "Troco de" (c - a)
print(round(mensagem,2)


-- ERROR:
File "XXXX", line 10
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:14:41) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" (a - c)
else:
	(c >= a)
	mensagem = "Troco de" (c - a)
print(round(mensagem,2)


-- ERROR:
File "XXXX", line 10
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:14:42) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" (a - c)
else:
	(c >= a)
	mensagem = "Troco de" (c - a)
print(round(mensagem,2)


-- ERROR:
File "XXXX", line 10
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:14:43) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" (a - c)
else:
	(c >= a)
	mensagem = "Troco de" (c - a)
print(round(mensagem,2)


-- ERROR:
File "XXXX", line 10
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:14:44) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" (a - c)
else:
	(c >= a)
	mensagem = "Troco de" (c - a)
print(round(mensagem,2)


-- ERROR:
File "XXXX", line 10
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:14:45) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" (a - c)
else:
	(c >= a)
	mensagem = "Troco de" (c - a)
print(round(mensagem,2)


-- ERROR:
File "XXXX", line 10
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:14:49) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" (a - c)
else:
		mensagem = "Troco de" (c - a)
print(round(mensagem,2)


-- ERROR:
File "XXXX", line 9
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 16:14:51) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" (a - c)
else:
		mensagem = "Troco de" (c - a)
print(round(mensagem,2)


-- EXECUTION TIME:
0.17957
-- ERROR:
  File "/home/codebench/codes/1644/2447/main.py", line 9
    
    ^
SyntaxError: unexpected EOF while parsing

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:14:52) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" (a - c)
else:
	mensagem = "Troco de" (c - a)
print(round(mensagem,2)


-- ERROR:
File "XXXX", line 9
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 16:14:54) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" (a - c)
else:
	mensagem = "Troco de" (c - a)
print(round(mensagem,2)


-- EXECUTION TIME:
0.165478
-- ERROR:
  File "/home/codebench/codes/1644/2447/main.py", line 9
    
    ^
SyntaxError: unexpected EOF while parsing

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:14:56) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" (a - c)
else:
	mensagem = "Troco de" (c - a)
print(round(mensagem,2)


-- ERROR:
File "XXXX", line 9
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:14:58) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" (a - c)
else:
	mensagem = "Troco de" (c - a)
print(round(mensagem,2)


-- ERROR:
File "XXXX", line 9
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:15:02) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" (a - c)
else:
	mensagem = "Troco de" (c - a)
print(round(mensagem,2))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    mensagem = "Falta" (a - c)
TypeError: 'str' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 16:15:13) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" (a - c)
else:
	mensagem = "Troco de" (c - a)
print(round(mensagem,2))


-- EXECUTION TIME:
0.202878
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/2447/main.py", line 4, in <module>
    mensagem = "Falta" (a - c)
TypeError: 'str' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 16:15:19) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" (a - c)
else:
	mensagem = "Troco de" (c - a)
print(round(mensagem,2))


-- EXECUTION TIME:
0.163911
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/2447/main.py", line 4, in <module>
    mensagem = "Falta" (a - c)
TypeError: 'str' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:15:19) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" (a - c)
else:
	mensagem = "Troco de" (c - a)
print(round(mensagem,2))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    mensagem = "Falta" (a - c)
TypeError: 'str' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 16:15:33) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" + (a - c)
else:
	mensagem = "Troco de" + (c - a)
print(round(mensagem,2))


-- EXECUTION TIME:
0.155557
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/2447/main.py", line 4, in <module>
    mensagem = "Falta" + (a - c)
TypeError: Can't convert 'float' object to str implicitly

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:15:33) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" + (a - c)
else:
	mensagem = "Troco de" + (c - a)
print(round(mensagem,2))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    mensagem = "Falta" + (a - c)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:15:59) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" + str(a - c)
else:
	mensagem = "Troco de" + str(c - a)
print(round(mensagem,2))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(round(mensagem,2))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 16:16:16) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" + str(a - c)
else:
	mensagem = "Troco de" + str(c - a)
print(round(mensagem,2))


-- EXECUTION TIME:
0.166247
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/2447/main.py", line 7, in <module>
    print(round(mensagem,2))
TypeError: type str doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:16:53) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" + str(a - c)
else:
	mensagem = "Troco de" +" " str(a-c)
print(round(mensagem,2))


-- ERROR:
File "XXXX", line 6
    mensagem = "Troco de" +" " str(a-c)
                                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 16:16:54) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" + str(a - c)
else:
	mensagem = "Troco de" +" " str(a-c)
print(round(mensagem,2))


-- EXECUTION TIME:
0.147355
-- ERROR:
  File "/home/codebench/codes/1644/2447/main.py", line 6
    mensagem = "Troco de" +" " str(a-c)
                                 ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:16:59) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" + str(a - c)
else:
	mensagem = "Troco de" + tr(a-c)
print(round(mensagem,2))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(round(mensagem,2))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 16:17:08) 
-- CODE:
a = float(input())
c = float(input())
if (a > c):
	mensagem = "Falta" + str(a - c)
else:
	mensagem = "Troco de" + tr(a-c)
print(round(mensagem,2))


-- EXECUTION TIME:
0.140337
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/2447/main.py", line 7, in <module>
    print(round(mensagem,2))
TypeError: type str doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:19:57) 
-- CODE:
a = float(input())
b = float(input())
if (a > b):
   mensagem = "falta" + str(a - b)
else:
	mensagem = "troco de " + str(b - a)
print(round(mensagem,2))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(round(mensagem,2))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 16:20:04) 
-- CODE:
a = float(input())
b = float(input())
if (a > b):
   mensagem = "falta" + str(a - b)
else:
	mensagem = "troco de " + str(b - a)
print(round(mensagem,2))
	
-- EXECUTION TIME:
0.215133
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/2447/main.py", line 7, in <module>
    print(round(mensagem,2))
TypeError: type str doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:20:28) 
-- CODE:
a = float(input())
b = float(input())
if (a > b):
   mensagem = "falta" + str(a - b)
else:
	mensagem = "troco de " + str(b - a)
print(round(mensagem,2))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(round(mensagem,2))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:22:23) 
-- CODE:
preco = float(input())
pagamento = float(input())
if (a > b):
   mensagem = "falta" + str(preco - pagamento)
else:
	mensagem = "troco de " + str(pagamento - preco)
print(round(mensagem,2))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    if (a > b):
NameError: name 'a' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 16:22:46) 
-- CODE:
preco = float(input())
pagamento = float(input())
if (preco > pagamento):
   mensagem = "falta" + str(preco - pagamento)
else:
	mensagem = "troco de " + str(pagamento - preco)
print(round(mensagem,2))
	
-- EXECUTION TIME:
0.193078
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/2447/main.py", line 7, in <module>
    print(round(mensagem,2))
TypeError: type str doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:22:50) 
-- CODE:
preco = float(input())
pagamento = float(input())
if (preco > pagamento):
   mensagem = "falta" + str(preco - pagamento)
else:
	mensagem = "troco de " + str(pagamento - preco)
print(round(mensagem,2))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(round(mensagem,2))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 16:23:07) 
-- CODE:
preco = float(input())
pagamento = float(input())
if (preco > pagamento):
   mensagem = "falta" + str(preco - pagamento)
else:
	mensagem = "troco de" + str(pagamento - preco)
print(round(mensagem,2))
	
-- EXECUTION TIME:
0.177768
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/2447/main.py", line 7, in <module>
    print(round(mensagem,2))
TypeError: type str doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:23:17) 
-- CODE:
preco = float(input())
pagamento = float(input())
if (preco > pagamento):
   mensagem = "falta" + str(preco - pagamento)
else:
	mensagem = "troco de" + str(pagamento - preco)
print(mensagem)
	
-- OUTPUT:
falta26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:23:22) 
-- CODE:
preco = float(input())
pagamento = float(input())
if (preco > pagamento):
   mensagem = "falta" + str(preco - pagamento)
else:
	mensagem = "troco de" + str(pagamento - preco)
print(mensagem)
	
-- OUTPUT:
falta26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:23:31) 
-- CODE:
preco = float(input())
pagamento = float(input())
if (preco > pagamento):
   mensagem = "falta" + str(preco - pagamento)
else:
	mensagem = "troco de" " " + str(pagamento - preco)
print(mensagem)
	
-- OUTPUT:
falta26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 16:23:36) 
-- CODE:
preco = float(input())
pagamento = float(input())
if (preco > pagamento):
   mensagem = "falta" + str(preco - pagamento)
else:
	mensagem = "troco de" " " + str(pagamento - preco)
print(mensagem)
	
-- EXECUTION TIME:
0.124878
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:23:39) 
-- CODE:
preco = float(input())
pagamento = float(input())
if (preco > pagamento):
   mensagem = "falta" + str(preco - pagamento)
else:
	mensagem = "troco de" " " + str(pagamento - preco)
print(mensagem)
	
-- OUTPUT:
falta26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 16:23:48) 
-- CODE:
preco = float(input())
pagamento = float(input())
if (preco > pagamento):
   mensagem = "falta" + str(preco - pagamento)
else:
	mensagem = "Troco de" " " + str(pagamento - preco)
print(mensagem)
	
-- EXECUTION TIME:
0.244512
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:23:52) 
-- CODE:
preco = float(input())
pagamento = float(input())
if (preco > pagamento):
   mensagem = "falta" + str(preco - pagamento)
else:
	mensagem = "Troco de" " " + str(pagamento - preco)
print(mensagem)
	
-- OUTPUT:
falta26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 16:24:01) 
-- CODE:
preco = float(input())
pagamento = float(input())
if (preco > pagamento):
   mensagem = "Falta" + str(preco - pagamento)
else:
	mensagem = "Troco de" " " + str(pagamento - preco)
print(mensagem)
	
-- EXECUTION TIME:
0.146271
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:24:06) 
-- CODE:
preco = float(input())
pagamento = float(input())
if (preco > pagamento):
   mensagem = "Falta" + str(preco - pagamento)
else:
	mensagem = "Troco de" " " + str(pagamento - preco)
print(mensagem)
	
-- OUTPUT:
Falta26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:24:10) 
-- CODE:
preco = float(input())
pagamento = float(input())
if (preco > pagamento):
   mensagem = "Falta" + str(preco - pagamento)
else:
	mensagem = "Troco de" " " + str(pagamento - preco)
print(mensagem)
	
-- OUTPUT:
Falta26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 16:24:14) 
-- CODE:
preco = float(input())
pagamento = float(input())
if (preco > pagamento):
   mensagem = "Falta" + str(preco - pagamento)
else:
	mensagem = "Troco de" " " + str(pagamento - preco)
print(mensagem)
	
-- EXECUTION TIME:
0.213959
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:24:16) 
-- CODE:
preco = float(input())
pagamento = float(input())
if (preco > pagamento):
   mensagem = "Falta" + str(preco - pagamento)
else:
	mensagem = "Troco de" " " + str(pagamento - preco)
print(mensagem)
	
-- OUTPUT:
Falta26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:24:30) 
-- CODE:
preco = float(input())
pagamento = float(input())
if (preco > pagamento):
   mensagem = "Falta" + str(preco - pagamento)
else:
	mensagem = "Troco de" " " + str(pagamento - preco)
print(mensagem)
	
-- OUTPUT:
Falta26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 16:24:41) 
-- CODE:
preco = float(input())
pagamento = float(input())
if (preco > pagamento):
   mensagem = "Falta" " " + str(preco - pagamento)
else:
	mensagem = "Troco de" " " + str(pagamento - preco)
print(mensagem)
	
-- EXECUTION TIME:
0.179043
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
