== TEST (2019-03-25 08:24:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
print(3141)
-- OUTPUT:
3141
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 08:25:13) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
print(int(3141)
-- ERROR:
File "XXXX", line 5
    
                   ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 08:25:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
print(int(3141))
-- OUTPUT:
3141
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 09:36:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
print(int(3141/9))
-- OUTPUT:
349
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 09:36:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
print(int(3141/9))
-- EXECUTION TIME:
0.132824
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
349
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
349
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 09:37:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
print(int(3141))
-- OUTPUT:
3141
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 09:37:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var= print(int(3141))
print(var&9)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(var&9)
TypeError: unsupported operand type(s) for &: 'NoneType' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 09:37:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var= print(int(3141))
print(var)
-- OUTPUT:
3141
None
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 09:38:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var= print(int(3141//9))
print(var)
-- OUTPUT:
349
None
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:56:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var= print(int(3+1+4+1//9))
print(var)
-- OUTPUT:
8
None
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 16:56:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var= print(int(3+1+4+1))
print(var)
-- EXECUTION TIME:
0.18931
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
9
None
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
9
None
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:56:40) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var= print(int(3+1+4+1))
print(var)
-- OUTPUT:
9
None
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 16:57:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var= print(int(3+1+4+1))
print(var)
-- EXECUTION TIME:
0.17228
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
9
None
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
9
None
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 16:58:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var= print(input(int(3+1+4+1))
print(var)
-- EXECUTION TIME:
0.177562
-- ERROR:
  File "/home/codebench/codes/1595/842/main.py", line 5
    print(var)
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:58:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var= print(input(int(3+1+4+1))
print(var)
-- ERROR:
File "XXXX", line 5
    print(var)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:25:20) 
-- CODE:
x = int(input("Numero: "))

soma = 0

while (x != 0):
	 resto = x % 10
	 x = (x - resto)//10
	soma = soma + resto
print(soma)
-- ERROR:
File "XXXX", line 8
    soma = soma + resto
                      ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:25:24) 
-- CODE:
x = int(input("Numero: "))

soma = 0

while (x != 0):
	 resto = x % 10
	 x = (x - resto)//10
	soma = soma + resto
print(soma)
-- ERROR:
File "XXXX", line 8
    soma = soma + resto
                      ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 10:25:26) 
-- CODE:
x = int(input("Numero: "))

soma = 0

while (x != 0):
	 resto = x % 10
	 x = (x - resto)//10
	soma = soma + resto
print(soma)
-- EXECUTION TIME:
0.141286
-- ERROR:
  File "/home/codebench/codes/1595/842/main.py", line 8
    soma = soma + resto
                      ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:25:54) 
-- CODE:
x = int(input("Numero: "))

soma = 0

while (x != 0):
	 resto = x % 10
	 x = (x - resto)//10
soma = soma + resto
print(soma)
-- OUTPUT:
9
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 10:26:01) 
-- CODE:
x = int(input("Numero: "))

soma = 0

while (x != 0):
	 resto = x % 10
	 x = (x - resto)//10
soma = soma + resto
print(soma)
-- EXECUTION TIME:
0.147729
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
9
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
1
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 10:26:20) 
-- CODE:
x = int(input("Numero: "))

soma = 0

while (x != 0):
	 resto = x % 10
   x = (x - resto)//10
   soma = soma + resto
print(soma)
-- EXECUTION TIME:
0.18541
-- ERROR:
  File "/home/codebench/codes/1595/842/main.py", line 7
    x = (x - resto)//10
                      ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:26:22) 
-- CODE:
x = int(input("Numero: "))

soma = 0

while (x != 0):
	 resto = x % 10
   x = (x - resto)//10
   soma = soma + resto
print(soma)
-- ERROR:
File "XXXX", line 7
    x = (x - resto)//10
                      ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 10:26:49) 
-- CODE:
x = int(input("Numero: "))

soma = 0

while (x != 0):
	 resto = x % 10
    x = (x - resto)//10
    soma = soma + resto
print(soma)
-- EXECUTION TIME:
0.139374
-- ERROR:
  File "/home/codebench/codes/1595/842/main.py", line 7
    x = (x - resto)//10
                      ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:27:36) 
-- CODE:
x = int(input("Numero: "))

soma = 0

while (x != 0):
	 resto = x % 10
    x = (x - resto)//10
    soma = soma + resto
print(soma)
-- ERROR:
File "XXXX", line 7
    x = (x - resto)//10
                      ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 10:28:16) 
-- CODE:
x = int(input("Numero: "))

soma = 0

while (x != 0):
	 resto = x % 10
  		 x = (x - resto)//10
    	soma = soma + resto
print(soma)
-- EXECUTION TIME:
0.150546
-- ERROR:
  File "/home/codebench/codes/1595/842/main.py", line 7
    x = (x - resto)//10
    ^
IndentationError: unexpected indent

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:28:18) 
-- CODE:
x = int(input("Numero: "))

soma = 0

while (x != 0):
	 resto = x % 10
  		 x = (x - resto)//10
    	soma = soma + resto
print(soma)
-- ERROR:
File "XXXX", line 7
    x = (x - resto)//10
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 10:29:31) 
-- CODE:
x = int(input("Numero: "))

soma = 0

while (x != 0):
	 resto = x % 10
    x = (x - resto)//10
    soma = soma + resto print(soma)
-- EXECUTION TIME:
0.211651
-- ERROR:
  File "/home/codebench/codes/1595/842/main.py", line 7
    x = (x - resto)//10
                      ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:29:37) 
-- CODE:
x = int(input("Numero: "))

soma = 0

while (x != 0):
	 resto = x % 10
    x = (x - resto)//10
    soma = soma + resto
print(soma)
-- ERROR:
File "XXXX", line 7
    x = (x - resto)//10
                      ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 10:29:54) 
-- CODE:
x = int(input("Numero: "))

soma = 0

while (x != 0):
	 resto = x % 10
   x = (x - resto)//10
    soma = soma + resto
print(soma)
-- EXECUTION TIME:
0.19146
-- ERROR:
  File "/home/codebench/codes/1595/842/main.py", line 7
    x = (x - resto)//10
                      ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 10:30:00) 
-- CODE:
x = int(input("Numero: "))

soma = 0

while (x != 0):
	 resto = x % 10
x = (x - resto)//10
    soma = soma + resto
print(soma)
-- EXECUTION TIME:
0.151015
-- ERROR:
  File "/home/codebench/codes/1595/842/main.py", line 8
    soma = soma + resto
    ^
IndentationError: unexpected indent

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 10:30:16) 
-- CODE:
x = int(input("Numero: "))

soma = 0

while (x != 0):
resto = x % 10
x = (x - resto)//10
soma = soma + resto
print(soma)
-- EXECUTION TIME:
0.139082
-- ERROR:
  File "/home/codebench/codes/1595/842/main.py", line 6
    resto = x % 10
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:30:19) 
-- CODE:
x = int(input("Numero: "))

soma = 0

while (x != 0):
resto = x % 10
x = (x - resto)//10
soma = soma + resto
print(soma)
-- ERROR:
File "XXXX", line 6
    resto = x % 10
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 10:32:36) 
-- CODE:
x = int(input("Numero: "))

soma = 0

while (x != 0):
	 resto = (x % 10)
    x = (x - resto)//10
    soma = soma + resto
print(soma)
-- EXECUTION TIME:
0.16188
-- ERROR:
  File "/home/codebench/codes/1595/842/main.py", line 7
    x = (x - resto)//10
                      ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:32:39) 
-- CODE:
x = int(input("Numero: "))

soma = 0

while (x != 0):
	 resto = (x % 10)
    x = (x - resto)//10
    soma = soma + resto
print(soma)
-- ERROR:
File "XXXX", line 7
    x = (x - resto)//10
                      ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 10:34:23) 
-- CODE:
x = int(input("Numero: "))

soma = 0

while (x != 0):
	 resto = (x % 10)
    x = (x - resto)//10
    soma = soma + resto
print(soma)
-- EXECUTION TIME:
0.197702
-- ERROR:
  File "/home/codebench/codes/1595/842/main.py", line 7
    x = (x - resto)//10
                      ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 16:10:27) 
-- CODE:
x = int(input("Numero: "))

soma = 0

while (x != 0):
	 resto = (x % 10)
    x = (x - resto)//10
    soma = soma + resto
print(soma)
-- EXECUTION TIME:
0.125489
-- ERROR:
  File "/home/codebench/codes/1595/842/main.py", line 7
    x = (x - resto)//10
                      ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 10:53:34) 
-- CODE:
x = int(input("Numero: "))

soma = 0

while (x != 0):
	 resto = (x % 10)
    x = (x - resto)//10
    soma = soma + resto
print(soma)
-- ERROR:
File "XXXX", line 7
    x = (x - resto)//10
                      ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 10:53:45) 
-- CODE:
x = int(input("Numero: "))

soma = 0

while (x != 0):
	 resto = (x % 10)
   x = (x - resto)//10
    soma = soma + resto
print(soma)
-- EXECUTION TIME:
0.213156
-- ERROR:
  File "/home/codebench/codes/1595/842/main.py", line 7
    x = (x - resto)//10
                      ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 10:53:48) 
-- CODE:
x = int(input("Numero: "))

soma = 0

while (x != 0):
	 resto = (x % 10)
   x = (x - resto)//10
    soma = soma + resto
print(soma)
-- ERROR:
File "XXXX", line 7
    x = (x - resto)//10
                      ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 16:41:23) 
-- CODE:
x = int(input("Numero: "))

soma = 0

while (x != 0):
	 resto = x % 10
   x = (x - resto)//10
    soma = soma + resto
print(soma)
-- EXECUTION TIME:
0.112753
-- ERROR:
  File "/home/codebench/codes/1595/842/main.py", line 7
    x = (x - resto)//10
                      ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 16:41:25) 
-- CODE:
x = int(input("Numero: "))

soma = 0

while (x != 0):
	 resto = x % 10
   x = (x - resto)//10
    soma = soma + resto
print(soma)
-- ERROR:
File "XXXX", line 7
    x = (x - resto)//10
                      ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 16:41:33) 
-- CODE:
x = int(input("Numero: "))

soma = 0

while (x != 0):
	 resto = x % 10
    x = (x - resto)//10
    soma = soma + resto
print(soma)
-- EXECUTION TIME:
0.232721
-- ERROR:
  File "/home/codebench/codes/1595/842/main.py", line 7
    x = (x - resto)//10
                      ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 16:54:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x= int(input('Numero:' ))

soma = 0

while (X != 0):
	 resto = X % 10
	 x = (x - resto)//10
	 soma= soma + resto
print(soma)	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    while (X != 0):
NameError: name 'X' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 16:55:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x= int(input('Numero:' ))

soma = 0

while (X != 0):
	 resto = X % 10
	 x = (x - resto)//10
	 soma= soma + resto
print(soma)	
-- EXECUTION TIME:
0.187388
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1595/842/main.py", line 8, in <module>
    while (X != 0):
NameError: name 'X' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 16:55:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x= int(input('Numero:' ))

soma = 0

while (X != 0):
	 resto = X % 10
	 x = (x - resto)//10
	 soma= soma + resto
print(soma)	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    while (X != 0):
NameError: name 'X' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 16:55:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x= int(input('Numero:' ))

soma = 0

while (X != 0):
	 resto = X % 10
	x = (x - resto)//10
	 soma= soma + resto
print(soma)	
-- ERROR:
File "XXXX", line 10
    x = (x - resto)//10
                      ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 16:55:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x= int(input('Numero:' ))

soma = 0

while (X != 0):
	 resto = X % 10
	 x = (x - resto)//10
	 soma= soma + resto
print(soma)	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    while (X != 0):
NameError: name 'X' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 16:55:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x= int(input('Numero:' ))

soma = 0

while (X != 0):
	 resto = X % 10
	 x = (x - resto)//10
	 soma= soma + resto
print(soma)	
-- EXECUTION TIME:
0.171807
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1595/842/main.py", line 8, in <module>
    while (X != 0):
NameError: name 'X' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 16:55:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x= int(input('Numero:' ))

soma = 0

 while (X != 0):
	 resto = X % 10
	 x = (x - resto)//10
	 soma= soma + resto
print(soma)	
-- EXECUTION TIME:
0.194536
-- ERROR:
  File "/home/codebench/codes/1595/842/main.py", line 8
    while (X != 0):
    ^
IndentationError: unexpected indent

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 16:55:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x= int(input('Numero:' ))

soma = 0

 while (X != 0):
	 resto = X % 10
	 x = (x - resto)//10
	 soma= soma + resto
print(soma)	
-- ERROR:
File "XXXX", line 8
    while (X != 0):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 16:55:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x= int(input('Numero:' ))

soma = 0

 while (X != 0):
	 resto = X % 10
	 x = (x - resto)//10
	 soma= soma + resto
print(soma)	
-- EXECUTION TIME:
0.119052
-- ERROR:
  File "/home/codebench/codes/1595/842/main.py", line 8
    while (X != 0):
    ^
IndentationError: unexpected indent

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 17:04:38) 
-- CODE:
x = int(input("Numero: "))

soma = 0

while (x !=0):
	resto = x % 10
	x = (x - resto)//10
	soma = soma + resto
print(soma)
-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 17:04:40) 
-- CODE:
x = int(input("Numero: "))

soma = 0

while (x !=0):
	resto = x % 10
	x = (x - resto)//10
	soma = soma + resto
print(soma)
-- EXECUTION TIME:
0.13146
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 09:09:58) 
-- CODE:
x = int(input("Numero: "))

soma = 0

while (x !=0):
	resto = x % 10
	x = (x - resto)//10
	soma = soma + resto
print(soma)
-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 09:10:04) 
-- CODE:
x = int(input("Numero: "))

soma = 0

while (x !=0):
	resto = x % 10
	x = (x - resto)//10
	soma = soma + resto
print(soma)
-- EXECUTION TIME:
0.151938
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
