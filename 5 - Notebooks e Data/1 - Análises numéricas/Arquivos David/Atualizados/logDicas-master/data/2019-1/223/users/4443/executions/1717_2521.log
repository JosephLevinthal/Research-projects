== TEST (2019-05-15 18:16:56) 
-- CODE:
n = int(input("digite um numero inteiro positivo: "))
N = n + 1

i = 0
soma = 1
while(i < N):
	n = 1/3 + (1/3 * 2i * 2i+1)
	d = (2i+1)
	pi = n/d
	i = i +1
	print(n)
	print (d)
	print(pi)
	
-- ERROR:
File "XXXX", line 7
    n = 1/3 + (1/3 * 2i * 2i+1)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 18:17:24) 
-- CODE:
n = int(input("digite um numero inteiro positivo: "))
N = n + 1

i = 0
soma = 1
while(i < N):
	n = 1/3 + (1/3 * 2*i * 2*i+1)
	d = (2*i+1)
	pi = n/d
	i = i +1
	print(n)
	print (d)
	print(pi)
	
-- OUTPUT:
1.3333333333333333
1
1.3333333333333333
2.6666666666666665
3
0.8888888888888888
6.666666666666666
5
1.3333333333333333
13.333333333333334
7
1.9047619047619049
22.666666666666664
9
2.518518518518518
34.666666666666664
11
3.1515151515151514
49.333333333333336
13
3.794871794871795
66.66666666666666
15
4.444444444444444
86.66666666666666
17
5.098039215686274
109.33333333333333
19
5.754385964912281
134.66666666666666
21
6.412698412698412
162.66666666666666
23
7.0724637681159415
193.33333333333334
25
7.733333333333333
226.66666666666666
27
8.395061728395062
262.66666666666663
29
9.057471264367814
301.3333333333333
31
9.720430107526882
342.66666666666663
33
10.383838383838382
386.66666666666663
35
11.047619047619046
433.3333333333333
37
11.711711711711711
482.66666666666663
39
12.376068376068375
534.6666666666666
41
13.040650406504064
589.3333333333334
43
13.705426356589149
646.6666666666666
45
14.37037037037037
706.6666666666666
47
15.035460992907801
769.3333333333334
49
15.700680272108844
8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 18:19:23) 
-- CODE:
n = int(input("digite um numero inteiro positivo: "))
N = n + 1

i = 0
soma = 1
while(i < N):
	n = 1/3 + (1/3 * 2*i * 2*i+1)
	d = (2*i+1)
	pi = n/d
	soma = soma + pi
	i = i +1
	print(n)
	print (d)
	print(pi)
	print(soma)
-- OUTPUT:
1.3333333333333333
1
1.3333333333333333
2.333333333333333
2.6666666666666665
3
0.8888888888888888
3.222222222222222
6.666666666666666
5
1.3333333333333333
4.555555555555555
13.333333333333334
7
1.9047619047619049
6.4603174603174605
22.666666666666664
9
2.518518518518518
8.978835978835978
34.666666666666664
11
3.1515151515151514
12.13035113035113
49.333333333333336
13
3.794871794871795
15.925222925222926
66.66666666666666
15
4.444444444444444
20.36966736966737
86.66666666666666
17
5.098039215686274
25.467706585353643
109.33333333333333
19
5.754385964912281
31.222092550265923
134.66666666666666
21
6.412698412698412
37.63479096296434
162.66666666666666
23
7.0724637681159415
44.70725473108028
193.33333333333334
25
7.733333333333333
52.44058806441362
226.66666666666666
27
8.395061728395062
60.83564979280868
262.66666666666663
29
9.057471264367814
69.8931210571765
301.3333333333333
31
9.720430107526882
79.61355116470338
342.66666666666663
33
10.383838383838382
89.99738954854176
386.666666666
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 18:20:00) 
-- CODE:
n = int(input("digite um numero inteiro positivo: "))
N = n + 1

i = 0
soma = 1
while(i < N):
	n = 1/3 + (1/3 * 2*i * 2*i+1)
	d = (2*i+1)
	pi = n/d
	soma = soma + pi
	i = i +1
	print(n)
	print (d)
	print(pi)
print(2*soma)
-- OUTPUT:
1.3333333333333333
1
1.3333333333333333
2.6666666666666665
3
0.8888888888888888
6.666666666666666
5
1.3333333333333333
13.333333333333334
7
1.9047619047619049
22.666666666666664
9
2.518518518518518
34.666666666666664
11
3.1515151515151514
49.333333333333336
13
3.794871794871795
66.66666666666666
15
4.444444444444444
86.66666666666666
17
5.098039215686274
109.33333333333333
19
5.754385964912281
134.66666666666666
21
6.412698412698412
162.66666666666666
23
7.0724637681159415
193.33333333333334
25
7.733333333333333
226.66666666666666
27
8.395061728395062
262.66666666666663
29
9.057471264367814
301.3333333333333
31
9.720430107526882
342.66666666666663
33
10.383838383838382
386.66666666666663
35
11.047619047619046
433.3333333333333
37
11.711711711711711
482.66666666666663
39
12.376068376068375
534.6666666666666
41
13.040650406504064
589.3333333333334
43
13.705426356589149
646.6666666666666
45
14.37037037037037
706.6666666666666
47
15.035460992907801
769.3333333333334
49
15.700680272108844
8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 18:21:37) 
-- CODE:
n = int(input("digite um numero inteiro positivo: "))
N = n + 1

i = 0
soma = 0
while(i < N):
	n = 1/3 + (1/3 * 2*i * 2*i+1)
	d = (2*i+1)
	pi = n/d
	soma = soma + pi
	i = i +1
	print(n)
	print (d)
	print(pi)
print(2*soma)
-- OUTPUT:
1.3333333333333333
1
1.3333333333333333
2.6666666666666665
3
0.8888888888888888
6.666666666666666
5
1.3333333333333333
13.333333333333334
7
1.9047619047619049
22.666666666666664
9
2.518518518518518
34.666666666666664
11
3.1515151515151514
49.333333333333336
13
3.794871794871795
66.66666666666666
15
4.444444444444444
86.66666666666666
17
5.098039215686274
109.33333333333333
19
5.754385964912281
134.66666666666666
21
6.412698412698412
162.66666666666666
23
7.0724637681159415
193.33333333333334
25
7.733333333333333
226.66666666666666
27
8.395061728395062
262.66666666666663
29
9.057471264367814
301.3333333333333
31
9.720430107526882
342.66666666666663
33
10.383838383838382
386.66666666666663
35
11.047619047619046
433.3333333333333
37
11.711711711711711
482.66666666666663
39
12.376068376068375
534.6666666666666
41
13.040650406504064
589.3333333333334
43
13.705426356589149
646.6666666666666
45
14.37037037037037
706.6666666666666
47
15.035460992907801
769.3333333333334
49
15.700680272108844
8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 06:20:46) 
-- CODE:
n = int(input("digite um numero inteiro positivo: "))
N = n + 1

i = 0
soma = 1+1/3
t = 1
while(t < N):
	n = 1/3 + (1/3 * 2*i * 2*i+1)
	d = (2*i+1)
	pi = n/d
	soma = soma + pi
	i = i +1
	print(n)
	print (d)
	print(pi)
print(2*soma)
-- OUTPUT:
1.3333333333333333
1
1.3333333333333333
2.6666666666666665
3
0.8888888888888888
6.666666666666666
5
1.3333333333333333
13.333333333333334
7
1.9047619047619049
22.666666666666664
9
2.518518518518518
34.666666666666664
11
3.1515151515151514
49.333333333333336
13
3.794871794871795
66.66666666666666
15
4.444444444444444
86.66666666666666
17
5.098039215686274
109.33333333333333
19
5.754385964912281
134.66666666666666
21
6.412698412698412
162.66666666666666
23
7.0724637681159415
193.33333333333334
25
7.733333333333333
226.66666666666666
27
8.395061728395062
262.66666666666663
29
9.057471264367814
301.3333333333333
31
9.720430107526882
342.66666666666663
33
10.383838383838382
386.66666666666663
35
11.047619047619046
433.3333333333333
37
11.711711711711711
482.66666666666663
39
12.376068376068375
534.6666666666666
41
13.040650406504064
589.3333333333334
43
13.705426356589149
646.6666666666666
45
14.37037037037037
706.6666666666666
47
15.035460992907801
769.3333333333334
49
15.700680272108844
8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 07:43:34) 
-- CODE:
n = int(input("digite um numero inteiro positivo: "))
N = n + 1

i = 0
soma = 1+1/3
t = 1
while(t < N):
	n = 1/3 + (1/3 * 2*i * 2*i+1)
	d = (2*i+1)
	pi = n/d
	soma = soma + pi
	i = i +1
	t = t+1
	print(n)
	print (d)
	print(pi)
print(2*soma)
-- OUTPUT:
1.3333333333333333
1
1.3333333333333333
2.6666666666666665
3
0.8888888888888888
6.666666666666666
5
1.3333333333333333
13.333333333333334
7
1.9047619047619049
22.666666666666664
9
2.518518518518518
34.666666666666664
11
3.1515151515151514
49.333333333333336
13
3.794871794871795
66.66666666666666
15
4.444444444444444
86.66666666666666
17
5.098039215686274
109.33333333333333
19
5.754385964912281
134.66666666666666
21
6.412698412698412
162.66666666666666
23
7.0724637681159415
193.33333333333334
25
7.733333333333333
226.66666666666666
27
8.395061728395062
262.66666666666663
29
9.057471264367814
301.3333333333333
31
9.720430107526882
342.66666666666663
33
10.383838383838382
386.66666666666663
35
11.047619047619046
433.3333333333333
37
11.711711711711711
482.66666666666663
39
12.376068376068375
534.6666666666666
41
13.040650406504064
589.3333333333334
43
13.705426356589149
646.6666666666666
45
14.37037037037037
706.6666666666666
47
15.035460992907801
769.3333333333334
49
15.700680272108844
8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 07:45:29) 
-- CODE:
n = int(input("digite um numero inteiro positivo: "))

i = 0
soma = 1+1/3
t = 1
while(t < n):
	n = 1/3 + (1/3 * 2*i * 2*i+1)
	d = (2*i+1)
	pi = n/d
	soma = soma + pi
	i = i +1
	t = t+1
	print(n)
	print (d)
	print(pi)
print(2*soma)
-- OUTPUT:
1.3333333333333333
1
1.3333333333333333
5.333333333333333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 07:46:49) 
-- CODE:
n = int(input("digite um numero inteiro positivo: "))

i = 0
soma = 1+1/3
t = 1
while(t < n):
	n = (1/3 * 2*i * 2*i+1)
	d = (2*i+1)
	pi = n/d
	soma = soma + pi
	i = i +1
	t = t+1
	print(n)
	print (d)
	print(pi)
soma = 2*soma
print(round(soma, 2))
-- OUTPUT:
1.0
1
1.0
4.67
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 07:47:01) 
-- CODE:
n = int(input("digite um numero inteiro positivo: "))

i = 0
soma = 1+1/3
t = 1
while(t < n):
	n = (1/3 * 2*i * 2*i+1)
	d = (2*i+1)
	pi = n/d
	soma = soma + pi
	i = i +1
	t = t+1
	print(n)
	print (d)
	print(pi)
soma = 2*soma
print(round(soma, 10))
-- OUTPUT:
1.0
1
1.0
4.6666666667
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 07:47:25) 
-- CODE:
n = int(input("digite um numero inteiro positivo: "))

i = 0
soma = 1+1/3
t = 1
while(t < n):
	n = (1/3 * 2*i * 2*i+1)
	d = (2*i+1)
	pi = n/d
	soma = soma + pi
	i = i +1
	t = t+1
	print(n)
	print (d)
	print(pi)
soma = 2*soma
print(round(soma, 10))
-- OUTPUT:
1.0
1
1.0
4.6666666667
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 16:54:58) 
-- CODE:
n = int(input("digite um numero inteiro positivo: "))

i = 0
#soma = 1+1/3
t = 2
while(t < n):
	n = (2*i * 2*i+1)
	d = (2*i+1)
	#pi = n/d
	#soma = soma + pi
	#i = i +1
	#t = t+1
	print(n)
	print (d)
	#print(pi)
#soma = 2*soma
#print(round(soma, 10))
-- OUTPUT:
1
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 16:55:57) 
-- CODE:
n = int(input("digite um numero inteiro positivo: "))

i = 0
soma = 1+1/3
t = 2
while(t < n):
	n = (2*i * 2*i+1)
	d = (2*i+1)
	#pi = n/d
	#soma = soma + pi
	#i = i +1
	t = t+1
	print(n)
	print (d)
	#print(pi)
soma = 2*soma
print(round(soma, 10))
-- OUTPUT:
1
1
2.6666666667
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 16:56:25) 
-- CODE:
n = int(input("digite um numero inteiro positivo: "))

i = 0
soma = 1+1/3
t = 2
while(t < n):
	n = (2*i * 2*i+1)
	d = (2*i+1)
	#pi = n/d
	#soma = soma + pi
	#i = i +1
	t = t+1
	print(n)
	print (d)
	#print(pi)
soma = 2*soma
print(round(soma, 10))
-- OUTPUT:
1
1
2.6666666667
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 17:15:22) 
-- CODE:
from math import *
n = int(input("digite um numero inteiro positivo: "))

i = 0
soma = 1
t = 0
while(t < n):
	n = factorial(n-1)
	d = (2*i+1)
	#pi = n/d
	#soma = soma + pi
	#i = i +1
	t = t+1
	print(n)
	print (d)
	#print(pi)
soma = 2*soma
print(round(soma, 10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    n = factorial(n-1)
OverflowError: factorial() argument should not exceed 9223372036854775807
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 17:16:21) 
-- CODE:
from math import *
n = int(input("digite um numero inteiro positivo: "))

i = 1
soma = 1
t = 0
while(t < n):
	n = factorial(n-1)
	d = (2*i+1)
	#pi = n/d
	#soma = soma + pi
	#i = i +1
	t = t+1
	print(n)
	print (d)
	#print(pi)
soma = 2*soma
print(round(soma, 10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    n = factorial(n-1)
OverflowError: factorial() argument should not exceed 9223372036854775807
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 17:17:32) 
-- CODE:
from math import *
n = int(input("digite um numero inteiro positivo: "))

i = 1
soma = 1
t = 0
while(t < n):
	n = factorial(n-1)
	d = (2*i+1)
	pi = n/d
	soma = soma + pi
	i = i +1
	t = t+1
	print(n)
	print (d)
	#print(pi)
soma = 2*soma
print(round(soma, 10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    pi = n/d
OverflowError: integer division result too large for a float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 17:46:23) 
-- CODE:
from math import *
n = int(input("digite um numero inteiro positivo: "))

i = 1
soma = 1
t = 0
d = (2*i+1)
while(t < n):
	n = factorial(n-1)
	d = d*(2*i+1)
	pi = n/d
	soma = soma + pi
	i = i +1
	t = t+1
	print(n)
	print (d)
	#print(pi)
soma = 2*soma
print(round(soma, 10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    pi = n/d
OverflowError: integer division result too large for a float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 17:47:39) 
-- CODE:
from math import *
n = int(input("digite um numero inteiro positivo: "))

i = 0
soma = 1
t = 0
d = (2*i+1)
while(t < n):
	n = factorial(n-1)
	d = d*(2*i+1)
	pi = n/d
	soma = soma + pi
	i = i +1
	t = t+1
	print(n)
	print (d)
	#print(pi)
soma = 2*soma
print(round(soma, 10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    pi = n/d
OverflowError: integer division result too large for a float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 17:51:12) 
-- CODE:
from math import *
n = int(input("digite um numero inteiro positivo: "))

i = 1
soma = 1+1/3
d = 3
while(i < n):
	n = factorial(n-1)
	d = d*(2*i+1)
	pi = n/d
	soma = soma + pi
	i = i +1
	print(n)
	print (d)
	#print(pi)
soma = 2*soma
print(round(soma, 10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    pi = n/d
OverflowError: integer division result too large for a float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 17:51:26) 
-- CODE:
from math import *
n = int(input("digite um numero inteiro positivo: "))

i = 1
soma = 1+1/3
d = 3
while(i < n):
	n = factorial(n-1)
	d = d*(2*i+1)
	pi = n/d
	soma = soma + pi
	i = i +1
	print(n)
	print (d)
	#print(pi)
soma = 2*soma
print(round(soma, 10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    pi = n/d
OverflowError: integer division result too large for a float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 17:52:36) 
-- CODE:
from math import *
n = int(input("digite um numero inteiro positivo: "))

i = 2
soma = 1+1/3
d = 3
while(i <= n):
	n = factorial(n-1)
	d = d*(2*i+1)
	pi = n/d
	soma = soma + pi
	i = i +1
	print(n)
	print (d)
	#print(pi)
soma = 2*soma
print(round(soma, 10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    pi = n/d
OverflowError: integer division result too large for a float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 17:52:51) 
-- CODE:
from math import *
n = int(input("digite um numero inteiro positivo: "))

i = 2
soma = 1+1/3
d = 3
while(i <= n):
	n = factorial(n-1)
	d = d*(2*i+1)
	pi = n/d
	soma = soma + pi
	i = i +1
	print(n)
	print (d)
	#print(pi)
soma = 2*soma
print(round(soma, 10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    pi = n/d
OverflowError: integer division result too large for a float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 17:56:52) 
-- CODE:
from math import *
n = int(input("digite um numero inteiro positivo: "))

i = 0
soma = 1
d = 1
while(i < n):
	n = factorial(n)
	d = d*(2*i+1)
	pi = n/d
	soma = soma + pi
	i = i +1
	print(n)
	print (d)
	#print(pi)
soma = 2*soma
print(round(soma, 10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    pi = n/d
OverflowError: integer division result too large for a float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 17:57:58) 
-- CODE:
from math import *
n = int(input("digite um numero inteiro positivo: "))

i = 0
soma = 1
d = 1
while(i <= n):
	n = factorial(n)
	d = d*(2*i+1)
	pi = n/d
	soma = soma + pi
	i = i +1
	print(n)
	print (d)
	#print(pi)
soma = 2*soma
print(round(soma, 10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    pi = n/d
OverflowError: integer division result too large for a float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 17:58:18) 
-- CODE:
from math import *
n = int(input("digite um numero inteiro positivo: "))

i = 0
soma = 0
d = 1
while(i <= n):
	n = factorial(n)
	d = d*(2*i+1)
	pi = n/d
	soma = soma + pi
	i = i +1
	print(n)
	print (d)
	#print(pi)
soma = 2*soma
print(round(soma, 10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    pi = n/d
OverflowError: integer division result too large for a float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 17:58:47) 
-- CODE:
from math import *
n = int(input("digite um numero inteiro positivo: "))

i = 0
soma = 0
d = 1
while(i <= n):
	n = factorial(n)
	d = d*(2*i+1)
	pi = n/d
	soma = soma + pi
	i = i +1
	print(n)
	print (d)
	#print(pi)
soma = 2*soma
print(round(soma, 10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    pi = n/d
OverflowError: integer division result too large for a float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 18:02:35) 
-- CODE:
from math import *
n = int(input("digite um numero inteiro positivo: "))

i = 0
soma = 1+1/3
d = 3
t = 1
while(t < n):
	n = factorial(n)
	d = d*(2*i+1)
	pi = n/d
	soma = soma + pi
	i = i +1
	t = t+1
	print(n)
	print (d)
	#print(pi)
soma = 2*soma
print(round(soma, 10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    pi = n/d
OverflowError: integer division result too large for a float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 18:02:43) 
-- CODE:
from math import *
n = int(input("digite um numero inteiro positivo: "))

i = 0
soma = 1+1/3
d = 3
t = 1
while(t < n):
	n = factorial(n)
	d = d*(2*i+1)
	pi = n/d
	soma = soma + pi
	i = i +1
	t = t+1
	print(n)
	print (d)
	#print(pi)
soma = 2*soma
print(round(soma, 10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    pi = n/d
OverflowError: integer division result too large for a float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 18:03:57) 
-- CODE:
from math import *
n = int(input("digite um numero inteiro positivo: "))

i = 2
soma = 1+1/3
d = 3
t = 1
while(t < n):
	n = factorial(n)
	d = d*(2*i+1)
	pi = n/d
	soma = soma + pi
	i = i +1
	t = t+1
	print(n)
	print (d)
	#print(pi)
soma = 2*soma
print(round(soma, 10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    pi = n/d
OverflowError: integer division result too large for a float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 18:04:05) 
-- CODE:
from math import *
n = int(input("digite um numero inteiro positivo: "))

i = 2
soma = 1+1/3
d = 3
t = 1
while(t < n):
	n = factorial(n)
	d = d*(2*i+1)
	pi = n/d
	soma = soma + pi
	i = i +1
	t = t+1
	print(n)
	print (d)
	#print(pi)
soma = 2*soma
print(round(soma, 10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    pi = n/d
OverflowError: integer division result too large for a float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 18:04:25) 
-- CODE:
from math import *
n = int(input("digite um numero inteiro positivo: "))

i = 2
soma = 1+1/3
d = 3
t = 1
while(t < n):
	n = factorial(n)
	d = d*(2*i+1)
	pi = n/d
	soma = soma + pi
	i = i +1
	t = t+1
	print(n)
	print (d)
	#print(pi)
soma = 2*soma
print(round(soma, 10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    pi = n/d
OverflowError: integer division result too large for a float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 18:08:01) 
-- CODE:
from math import *
n = int(input("digite um numero inteiro positivo: "))

i = 2
soma = 1+1/3
d = 3
t = 2
while(t <= n):
	n = factorial(n)
	d = d*(2*i+1)
	pi = n/d
	soma = soma + pi
	i = i +1
	t = t+1
	print(n)
	print (d)
	
soma = 2*soma
print(round(soma, 10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    pi = n/d
OverflowError: integer division result too large for a float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 18:08:09) 
-- CODE:
from math import *
n = int(input("digite um numero inteiro positivo: "))

i = 2
soma = 1+1/3
d = 3
t = 2
while(t <= n):
	n = factorial(n)
	d = d*(2*i+1)
	pi = n/d
	soma = soma + pi
	i = i +1
	t = t+1
	print(n)
	print (d)
	
soma = 2*soma
print(round(soma, 10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    pi = n/d
OverflowError: integer division result too large for a float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 18:08:20) 
-- CODE:
from math import *
n = int(input("digite um numero inteiro positivo: "))

i = 2
soma = 1+1/3
d = 3
t = 2
while(t <= n):
	n = factorial(n)
	d = d*(2*i+1)
	pi = n/d
	soma = soma + pi
	i = i +1
	t = t+1
	print(n)
	print (d)
	
soma = 2*soma
print(round(soma, 10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    pi = n/d
OverflowError: integer division result too large for a float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 18:11:19) 
-- CODE:
from math import *
n = int(input("digite um numero inteiro positivo: "))

i = 2
soma = 1+1/3
d = 3
t = 2
while(t <= n):
	n = factorial(n)
	d = d*(2*i+1)
	#pi = n/d
	soma = soma + pi
	i = i +1
	t = t+1
	print(n)
	print (d)
	
#soma = 2*soma
#print(round(soma, 10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    n = factorial(n)
OverflowError: factorial() argument should not exceed 9223372036854775807
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 18:11:34) 
-- CODE:
from math import *
n = int(input("digite um numero inteiro positivo: "))

i = 2
soma = 1+1/3
d = 3
t = 2
while(t <= n):
	n = factorial(n)
	d = d*(2*i+1)
	#pi = n/d
	soma = soma + pi
	i = i +1
	t = t+1
	print(n)
	print (d)
	
#soma = 2*soma
#print(round(soma, 10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    n = factorial(n)
OverflowError: factorial() argument should not exceed 9223372036854775807
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 18:11:52) 
-- CODE:
from math import *
n = int(input("digite um numero inteiro positivo: "))

i = 2
soma = 1+1/3
d = 3
t = 2
while(t <= n):
	n = factorial(n)
	d = d*(2*i+1)
	#pi = n/d
	soma = soma + pi
	i = i +1
	t = t+1
	print(n)
	print (d)
	
#soma = 2*soma
#print(round(soma, 10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    n = factorial(n)
OverflowError: factorial() argument should not exceed 9223372036854775807
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 18:12:29) 
-- CODE:
from math import *
n = int(input("digite um numero inteiro positivo: "))

i = 2
soma = 1+1/3
d = 3
t = 2
while(t <= n):
	num = factorial(n)
	d = d*(2*i+1)
	#pi = n/d
	soma = soma + pi
	i = i +1
	t = t+1
	print(n)
	print (d)
	
#soma = 2*soma
#print(round(soma, 10))
-- OUTPUT:
1560
15
1560
105
1560
945
1560
10395
1560
135135
1560
2027025
1560
34459425
1560
654729075
1560
13749310575
1560
316234143225
1560
7905853580625
1560
213458046676875
1560
6190283353629375
1560
191898783962510625
1560
6332659870762850625
1560
221643095476699771875
1560
8200794532637891559375
1560
319830986772877770815625
1560
13113070457687988603440625
1560
563862029680583509947946875
1560
25373791335626257947657609375
1560
1192568192774434123539907640625
1560
58435841445947272053455474390625
1560
2980227913743310874726229193921875
1560
157952079428395476360490147277859375
1560
8687364368561751199826958100282265625
1560
495179769008019818390136611716089140625
1560
29215606371473169285018060091249259296875
1560
1782151988659863326386101665566204817109375
1560
112275575285571389562324404930670903477890625
1560
7297912393562140321551086320493608726062890625
1560
488960130368663401543922783473071784646213671875
1560
33738248995437774706530672059641953140588743359375
1560
2395415678676082004
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 18:12:37) 
-- CODE:
from math import *
n = int(input("digite um numero inteiro positivo: "))

i = 2
soma = 1+1/3
d = 3
t = 2
while(t <= n):
	num = factorial(n)
	d = d*(2*i+1)
	#pi = n/d
	soma = soma + pi
	i = i +1
	t = t+1
	print(n)
	print (d)
	
#soma = 2*soma
#print(round(soma, 10))
-- OUTPUT:
1560
15
1560
105
1560
945
1560
10395
1560
135135
1560
2027025
1560
34459425
1560
654729075
1560
13749310575
1560
316234143225
1560
7905853580625
1560
213458046676875
1560
6190283353629375
1560
191898783962510625
1560
6332659870762850625
1560
221643095476699771875
1560
8200794532637891559375
1560
319830986772877770815625
1560
13113070457687988603440625
1560
563862029680583509947946875
1560
25373791335626257947657609375
1560
1192568192774434123539907640625
1560
58435841445947272053455474390625
1560
2980227913743310874726229193921875
1560
157952079428395476360490147277859375
1560
8687364368561751199826958100282265625
1560
495179769008019818390136611716089140625
1560
29215606371473169285018060091249259296875
1560
1782151988659863326386101665566204817109375
1560
112275575285571389562324404930670903477890625
1560
7297912393562140321551086320493608726062890625
1560
488960130368663401543922783473071784646213671875
1560
33738248995437774706530672059641953140588743359375
1560
2395415678676082004
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 18:13:39) 
-- CODE:
from math import *
n = int(input("digite um numero inteiro positivo: "))

i = 2
soma = 1+1/3
d = 3
t = 2
while(t <= n):
	num = factorial(n)
	d = d*(2*i+1)
	#pi = n/d
	soma = soma + pi
	i = i +1
	t = t+1
	print(n)
	print (d)
	
#soma = 2*soma
#print(round(soma, 10))
-- OUTPUT:
1560
15
1560
105
1560
945
1560
10395
1560
135135
1560
2027025
1560
34459425
1560
654729075
1560
13749310575
1560
316234143225
1560
7905853580625
1560
213458046676875
1560
6190283353629375
1560
191898783962510625
1560
6332659870762850625
1560
221643095476699771875
1560
8200794532637891559375
1560
319830986772877770815625
1560
13113070457687988603440625
1560
563862029680583509947946875
1560
25373791335626257947657609375
1560
1192568192774434123539907640625
1560
58435841445947272053455474390625
1560
2980227913743310874726229193921875
1560
157952079428395476360490147277859375
1560
8687364368561751199826958100282265625
1560
495179769008019818390136611716089140625
1560
29215606371473169285018060091249259296875
1560
1782151988659863326386101665566204817109375
1560
112275575285571389562324404930670903477890625
1560
7297912393562140321551086320493608726062890625
1560
488960130368663401543922783473071784646213671875
1560
33738248995437774706530672059641953140588743359375
1560
2395415678676082004
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 18:14:40) 
-- CODE:
from math import *
n = int(input("digite um numero inteiro positivo: "))

i = 2
soma = 1+1/3
d = 3
t = 2
while(t <= n):
	num = factorial(n)
	d = d*(2*i+1)
	#pi = n/d
	soma = soma + pi
	i = i +1
	t = t+1
	print(num)
	print (d)
	
#soma = 2*soma
#print(round(soma, 10))
-- OUTPUT:

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 18:15:44) 
-- CODE:
from math import *
n = int(input("digite um numero inteiro positivo: "))

i = 2
soma = 1+1/3
d = 3
t = 2
while(t <= n):
	num = factorial(t)
	d = d*(2*i+1)
	#pi = n/d
	soma = soma + pi
	i = i +1
	t = t+1
	print(num)
	print (d)
	
#soma = 2*soma
#print(round(soma, 10))
-- OUTPUT:
2
15
6
105
24
945
120
10395
720
135135
5040
2027025
40320
34459425
362880
654729075
3628800
13749310575
39916800
316234143225
479001600
7905853580625
6227020800
213458046676875
87178291200
6190283353629375
1307674368000
191898783962510625
20922789888000
6332659870762850625
355687428096000
221643095476699771875
6402373705728000
8200794532637891559375
121645100408832000
319830986772877770815625
2432902008176640000
13113070457687988603440625
51090942171709440000
563862029680583509947946875
1124000727777607680000
25373791335626257947657609375
25852016738884976640000
1192568192774434123539907640625
620448401733239439360000
58435841445947272053455474390625
15511210043330985984000000
2980227913743310874726229193921875
403291461126605635584000000
157952079428395476360490147277859375
10888869450418352160768000000
8687364368561751199826958100282265625
304888344611713860501504000000
495179769008019818390136611716089140625
8841761993739701954543616000000
29215606371473169285018060091249259296875
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 18:16:06) 
-- CODE:
from math import *
n = int(input("digite um numero inteiro positivo: "))

i = 2
soma = 1+1/3
d = 3
t = 2
while(t < n):
	num = factorial(t)
	d = d*(2*i+1)
	#pi = n/d
	soma = soma + pi
	i = i +1
	t = t+1
	print(num)
	print (d)
	
#soma = 2*soma
#print(round(soma, 10))
-- OUTPUT:
2
15
6
105
24
945
120
10395
720
135135
5040
2027025
40320
34459425
362880
654729075
3628800
13749310575
39916800
316234143225
479001600
7905853580625
6227020800
213458046676875
87178291200
6190283353629375
1307674368000
191898783962510625
20922789888000
6332659870762850625
355687428096000
221643095476699771875
6402373705728000
8200794532637891559375
121645100408832000
319830986772877770815625
2432902008176640000
13113070457687988603440625
51090942171709440000
563862029680583509947946875
1124000727777607680000
25373791335626257947657609375
25852016738884976640000
1192568192774434123539907640625
620448401733239439360000
58435841445947272053455474390625
15511210043330985984000000
2980227913743310874726229193921875
403291461126605635584000000
157952079428395476360490147277859375
10888869450418352160768000000
8687364368561751199826958100282265625
304888344611713860501504000000
495179769008019818390136611716089140625
8841761993739701954543616000000
29215606371473169285018060091249259296875
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 18:16:15) 
-- CODE:
from math import *
n = int(input("digite um numero inteiro positivo: "))

i = 2
soma = 1+1/3
d = 3
t = 2
while(t < n):
	num = factorial(t)
	d = d*(2*i+1)
	#pi = n/d
	soma = soma + pi
	i = i +1
	t = t+1
	print(num)
	print (d)
	
#soma = 2*soma
#print(round(soma, 10))
-- OUTPUT:
2
15
6
105
24
945
120
10395
720
135135
5040
2027025
40320
34459425
362880
654729075
3628800
13749310575
39916800
316234143225
479001600
7905853580625
6227020800
213458046676875
87178291200
6190283353629375
1307674368000
191898783962510625
20922789888000
6332659870762850625
355687428096000
221643095476699771875
6402373705728000
8200794532637891559375
121645100408832000
319830986772877770815625
2432902008176640000
13113070457687988603440625
51090942171709440000
563862029680583509947946875
1124000727777607680000
25373791335626257947657609375
25852016738884976640000
1192568192774434123539907640625
620448401733239439360000
58435841445947272053455474390625
15511210043330985984000000
2980227913743310874726229193921875
403291461126605635584000000
157952079428395476360490147277859375
10888869450418352160768000000
8687364368561751199826958100282265625
304888344611713860501504000000
495179769008019818390136611716089140625
8841761993739701954543616000000
29215606371473169285018060091249259296875
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 18:16:40) 
-- CODE:
from math import *
n = int(input("digite um numero inteiro positivo: "))

i = 2
soma = 1+1/3
d = 3
t = 2
while(t <= n):
	num = factorial(t)
	d = d*(2*i+1)
	#pi = n/d
	soma = soma + pi
	i = i +1
	t = t+1
	print(num)
	print (d)
	
#soma = 2*soma
#print(round(soma, 10))
-- OUTPUT:
2
15
6
105
24
945
120
10395
720
135135
5040
2027025
40320
34459425
362880
654729075
3628800
13749310575
39916800
316234143225
479001600
7905853580625
6227020800
213458046676875
87178291200
6190283353629375
1307674368000
191898783962510625
20922789888000
6332659870762850625
355687428096000
221643095476699771875
6402373705728000
8200794532637891559375
121645100408832000
319830986772877770815625
2432902008176640000
13113070457687988603440625
51090942171709440000
563862029680583509947946875
1124000727777607680000
25373791335626257947657609375
25852016738884976640000
1192568192774434123539907640625
620448401733239439360000
58435841445947272053455474390625
15511210043330985984000000
2980227913743310874726229193921875
403291461126605635584000000
157952079428395476360490147277859375
10888869450418352160768000000
8687364368561751199826958100282265625
304888344611713860501504000000
495179769008019818390136611716089140625
8841761993739701954543616000000
29215606371473169285018060091249259296875
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 18:16:52) 
-- CODE:
from math import *
n = int(input("digite um numero inteiro positivo: "))

i = 2
soma = 1+1/3
d = 3
t = 2
while(t <= n):
	num = factorial(t)
	d = d*(2*i+1)
	#pi = n/d
	soma = soma + pi
	i = i +1
	t = t+1
	print(num)
	print (d)
	
#soma = 2*soma
#print(round(soma, 10))
-- OUTPUT:
2
15
6
105
24
945
120
10395
720
135135
5040
2027025
40320
34459425
362880
654729075
3628800
13749310575
39916800
316234143225
479001600
7905853580625
6227020800
213458046676875
87178291200
6190283353629375
1307674368000
191898783962510625
20922789888000
6332659870762850625
355687428096000
221643095476699771875
6402373705728000
8200794532637891559375
121645100408832000
319830986772877770815625
2432902008176640000
13113070457687988603440625
51090942171709440000
563862029680583509947946875
1124000727777607680000
25373791335626257947657609375
25852016738884976640000
1192568192774434123539907640625
620448401733239439360000
58435841445947272053455474390625
15511210043330985984000000
2980227913743310874726229193921875
403291461126605635584000000
157952079428395476360490147277859375
10888869450418352160768000000
8687364368561751199826958100282265625
304888344611713860501504000000
495179769008019818390136611716089140625
8841761993739701954543616000000
29215606371473169285018060091249259296875
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 18:17:25) 
-- CODE:
from math import *
n = int(input("digite um numero inteiro positivo: "))

i = 2
soma = 1+1/3
d = 3
t = 2
while(t <= n):
	num = factorial(t)
	d = d*(2*i+1)
	#pi = n/d
	soma = soma + pi
	i = i +1
	t = t+1
	print(num)
	print (d)
	
soma = 2*soma
print(round(soma, 10))
-- OUTPUT:
2
15
6
105
24
945
120
10395
720
135135
5040
2027025
40320
34459425
362880
654729075
3628800
13749310575
39916800
316234143225
479001600
7905853580625
6227020800
213458046676875
87178291200
6190283353629375
1307674368000
191898783962510625
20922789888000
6332659870762850625
355687428096000
221643095476699771875
6402373705728000
8200794532637891559375
121645100408832000
319830986772877770815625
2432902008176640000
13113070457687988603440625
51090942171709440000
563862029680583509947946875
1124000727777607680000
25373791335626257947657609375
25852016738884976640000
1192568192774434123539907640625
620448401733239439360000
58435841445947272053455474390625
15511210043330985984000000
2980227913743310874726229193921875
403291461126605635584000000
157952079428395476360490147277859375
10888869450418352160768000000
8687364368561751199826958100282265625
304888344611713860501504000000
495179769008019818390136611716089140625
8841761993739701954543616000000
29215606371473169285018060091249259296875
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 18:17:30) 
-- CODE:
from math import *
n = int(input("digite um numero inteiro positivo: "))

i = 2
soma = 1+1/3
d = 3
t = 2
while(t <= n):
	num = factorial(t)
	d = d*(2*i+1)
	#pi = n/d
	soma = soma + pi
	i = i +1
	t = t+1
	print(num)
	print (d)
	
soma = 2*soma
print(round(soma, 10))
-- OUTPUT:
2
15
6
105
24
945
120
10395
720
135135
5040
2027025
40320
34459425
362880
654729075
3628800
13749310575
39916800
316234143225
479001600
7905853580625
6227020800
213458046676875
87178291200
6190283353629375
1307674368000
191898783962510625
20922789888000
6332659870762850625
355687428096000
221643095476699771875
6402373705728000
8200794532637891559375
121645100408832000
319830986772877770815625
2432902008176640000
13113070457687988603440625
51090942171709440000
563862029680583509947946875
1124000727777607680000
25373791335626257947657609375
25852016738884976640000
1192568192774434123539907640625
620448401733239439360000
58435841445947272053455474390625
15511210043330985984000000
2980227913743310874726229193921875
403291461126605635584000000
157952079428395476360490147277859375
10888869450418352160768000000
8687364368561751199826958100282265625
304888344611713860501504000000
495179769008019818390136611716089140625
8841761993739701954543616000000
29215606371473169285018060091249259296875
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 18:18:17) 
-- CODE:
from math import *
n = int(input("digite um numero inteiro positivo: "))

i = 2
soma = 1+1/3
d = 3
t = 2
while(t <= n):
	num = factorial(t)
	d = d*(2*i+1)
	pi = num/d
	soma = soma + pi
	i = i +1
	t = t+1
	print(num)
	print (d)
	
soma = 2*soma
print(round(soma, 10))
-- OUTPUT:
2
15
6
105
24
945
120
10395
720
135135
5040
2027025
40320
34459425
362880
654729075
3628800
13749310575
39916800
316234143225
479001600
7905853580625
6227020800
213458046676875
87178291200
6190283353629375
1307674368000
191898783962510625
20922789888000
6332659870762850625
355687428096000
221643095476699771875
6402373705728000
8200794532637891559375
121645100408832000
319830986772877770815625
2432902008176640000
13113070457687988603440625
51090942171709440000
563862029680583509947946875
1124000727777607680000
25373791335626257947657609375
25852016738884976640000
1192568192774434123539907640625
620448401733239439360000
58435841445947272053455474390625
15511210043330985984000000
2980227913743310874726229193921875
403291461126605635584000000
157952079428395476360490147277859375
10888869450418352160768000000
8687364368561751199826958100282265625
304888344611713860501504000000
495179769008019818390136611716089140625
8841761993739701954543616000000
29215606371473169285018060091249259296875
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 18:18:23) 
-- CODE:
from math import *
n = int(input("digite um numero inteiro positivo: "))

i = 2
soma = 1+1/3
d = 3
t = 2
while(t <= n):
	num = factorial(t)
	d = d*(2*i+1)
	pi = num/d
	soma = soma + pi
	i = i +1
	t = t+1
	print(num)
	print (d)
	
soma = 2*soma
print(round(soma, 10))
-- OUTPUT:
2
15
6
105
24
945
120
10395
720
135135
5040
2027025
40320
34459425
362880
654729075
3628800
13749310575
39916800
316234143225
479001600
7905853580625
6227020800
213458046676875
87178291200
6190283353629375
1307674368000
191898783962510625
20922789888000
6332659870762850625
355687428096000
221643095476699771875
6402373705728000
8200794532637891559375
121645100408832000
319830986772877770815625
2432902008176640000
13113070457687988603440625
51090942171709440000
563862029680583509947946875
1124000727777607680000
25373791335626257947657609375
25852016738884976640000
1192568192774434123539907640625
620448401733239439360000
58435841445947272053455474390625
15511210043330985984000000
2980227913743310874726229193921875
403291461126605635584000000
157952079428395476360490147277859375
10888869450418352160768000000
8687364368561751199826958100282265625
304888344611713860501504000000
495179769008019818390136611716089140625
8841761993739701954543616000000
29215606371473169285018060091249259296875
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 18:18:33) 
-- CODE:
from math import *
n = int(input("digite um numero inteiro positivo: "))

i = 2
soma = 1+1/3
d = 3
t = 2
while(t <= n):
	num = factorial(t)
	d = d*(2*i+1)
	pi = num/d
	soma = soma + pi
	i = i +1
	t = t+1
	print(num)
	print (d)
	
soma = 2*soma
print(round(soma, 10))
-- OUTPUT:
2
15
6
105
24
945
120
10395
720
135135
5040
2027025
40320
34459425
362880
654729075
3628800
13749310575
39916800
316234143225
479001600
7905853580625
6227020800
213458046676875
87178291200
6190283353629375
1307674368000
191898783962510625
20922789888000
6332659870762850625
355687428096000
221643095476699771875
6402373705728000
8200794532637891559375
121645100408832000
319830986772877770815625
2432902008176640000
13113070457687988603440625
51090942171709440000
563862029680583509947946875
1124000727777607680000
25373791335626257947657609375
25852016738884976640000
1192568192774434123539907640625
620448401733239439360000
58435841445947272053455474390625
15511210043330985984000000
2980227913743310874726229193921875
403291461126605635584000000
157952079428395476360490147277859375
10888869450418352160768000000
8687364368561751199826958100282265625
304888344611713860501504000000
495179769008019818390136611716089140625
8841761993739701954543616000000
29215606371473169285018060091249259296875
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 18:18:52) 
-- CODE:
from math import *
n = int(input("digite um numero inteiro positivo: "))

i = 2
soma = 1+1/3
d = 3
t = 2
while(t <= n):
	num = factorial(t)
	d = d*(2*i+1)
	pi = num/d
	soma = soma + pi
	i = i +1
	t = t+1
	print(num)
	print (d)
	
soma = 2*soma
print(round(soma, 10))
-- OUTPUT:
2
15
6
105
24
945
120
10395
720
135135
5040
2027025
40320
34459425
362880
654729075
3628800
13749310575
39916800
316234143225
479001600
7905853580625
6227020800
213458046676875
87178291200
6190283353629375
1307674368000
191898783962510625
20922789888000
6332659870762850625
355687428096000
221643095476699771875
6402373705728000
8200794532637891559375
121645100408832000
319830986772877770815625
2432902008176640000
13113070457687988603440625
51090942171709440000
563862029680583509947946875
1124000727777607680000
25373791335626257947657609375
25852016738884976640000
1192568192774434123539907640625
620448401733239439360000
58435841445947272053455474390625
15511210043330985984000000
2980227913743310874726229193921875
403291461126605635584000000
157952079428395476360490147277859375
10888869450418352160768000000
8687364368561751199826958100282265625
304888344611713860501504000000
495179769008019818390136611716089140625
8841761993739701954543616000000
29215606371473169285018060091249259296875
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 18:19:03) 
-- CODE:
from math import *
n = int(input("digite um numero inteiro positivo: "))

i = 2
soma = 1+1/3
d = 3
t = 2
while(t <= n):
	num = factorial(t)
	d = d*(2*i+1)
	pi = num/d
	soma = soma + pi
	i = i +1
	t = t+1
	print(num)
	print (d)
	
soma = 2*soma
print(round(soma, 10))
-- OUTPUT:
2
15
6
105
24
945
120
10395
720
135135
5040
2027025
40320
34459425
362880
654729075
3628800
13749310575
39916800
316234143225
479001600
7905853580625
6227020800
213458046676875
87178291200
6190283353629375
1307674368000
191898783962510625
20922789888000
6332659870762850625
355687428096000
221643095476699771875
6402373705728000
8200794532637891559375
121645100408832000
319830986772877770815625
2432902008176640000
13113070457687988603440625
51090942171709440000
563862029680583509947946875
1124000727777607680000
25373791335626257947657609375
25852016738884976640000
1192568192774434123539907640625
620448401733239439360000
58435841445947272053455474390625
15511210043330985984000000
2980227913743310874726229193921875
403291461126605635584000000
157952079428395476360490147277859375
10888869450418352160768000000
8687364368561751199826958100282265625
304888344611713860501504000000
495179769008019818390136611716089140625
8841761993739701954543616000000
29215606371473169285018060091249259296875
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-19 18:19:16) 
-- CODE:
from math import *
n = int(input("digite um numero inteiro positivo: "))

i = 2
soma = 1+1/3
d = 3
t = 2
while(t <= n):
	num = factorial(t)
	d = d*(2*i+1)
	pi = num/d
	soma = soma + pi
	i = i +1
	t = t+1
	print(num)
	print (d)
	
soma = 2*soma
print(round(soma, 10))
-- EXECUTION TIME:
1.63973
-- TEST CASE 1:
---- input:
1560
---- correct output:
3.1415926536
---- user output:
2
15
6
105
24
945
120
10395
720
135135
5040
2027025
40320
34459425
362880
654729075
3628800
13749310575
39916800
316234143225
479001600
7905853580625
6227020800
213458046676875
87178291200
6190283353629375
1307674368000
191898783962510625
20922789888000
6332659870762850625
355687428096000
221643095476699771875
6402373705728000
8200794532637891559375
121645100408832000
319830986772877770815625
2432902008176640000
13113070457687988603440625
51090942171709440000
563862029680583509947946875
1124000727777607680000
25373791335626257947657609375
25852016738884976640000
1192568192774434123539907640625
620448401733239439360000
58435841445947272053455474390625
15511210043330985984000000
2980227913743310874726229193921875
403291461126605635584000000
157952079428395476360490147277859375
10888869450418352160768000000
8687364368561751199826958100282265625
304888344611713860501504000000
495179769008019818390136611716089140625
8841761993739701954543616000000
29215606371473169285018060091249259296875
2
-- TEST CASE 2:
---- input:
1000
---- correct output:
3.1415926536
---- user output:
2
15
6
105
24
945
120
10395
720
135135
5040
2027025
40320
34459425
362880
654729075
3628800
13749310575
39916800
316234143225
479001600
7905853580625
6227020800
213458046676875
87178291200
6190283353629375
1307674368000
191898783962510625
20922789888000
6332659870762850625
355687428096000
221643095476699771875
6402373705728000
8200794532637891559375
121645100408832000
319830986772877770815625
2432902008176640000
13113070457687988603440625
51090942171709440000
563862029680583509947946875
1124000727777607680000
25373791335626257947657609375
25852016738884976640000
1192568192774434123539907640625
620448401733239439360000
58435841445947272053455474390625
15511210043330985984000000
2980227913743310874726229193921875
403291461126605635584000000
157952079428395476360490147277859375
10888869450418352160768000000
8687364368561751199826958100282265625
304888344611713860501504000000
495179769008019818390136611716089140625
8841761993739701954543616000000
29215606371473169285018060091249259296875
2
-- TEST CASE 3:
---- input:
100
---- correct output:
3.1415926536
---- user output:
2
15
6
105
24
945
120
10395
720
135135
5040
2027025
40320
34459425
362880
654729075
3628800
13749310575
39916800
316234143225
479001600
7905853580625
6227020800
213458046676875
87178291200
6190283353629375
1307674368000
191898783962510625
20922789888000
6332659870762850625
355687428096000
221643095476699771875
6402373705728000
8200794532637891559375
121645100408832000
319830986772877770815625
2432902008176640000
13113070457687988603440625
51090942171709440000
563862029680583509947946875
1124000727777607680000
25373791335626257947657609375
25852016738884976640000
1192568192774434123539907640625
620448401733239439360000
58435841445947272053455474390625
15511210043330985984000000
2980227913743310874726229193921875
403291461126605635584000000
157952079428395476360490147277859375
10888869450418352160768000000
8687364368561751199826958100282265625
304888344611713860501504000000
495179769008019818390136611716089140625
8841761993739701954543616000000
29215606371473169285018060091249259296875
2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 18:19:28) 
-- CODE:
from math import *
n = int(input("digite um numero inteiro positivo: "))

i = 2
soma = 1+1/3
d = 3
t = 2
while(t <= n):
	num = factorial(t)
	d = d*(2*i+1)
	pi = num/d
	soma = soma + pi
	i = i +1
	t = t+1
	print(num)
	print (d)
	
soma = 2*soma
print(round(soma, 10))
-- OUTPUT:
2
15
6
105
24
945
120
10395
720
135135
5040
2027025
40320
34459425
362880
654729075
3628800
13749310575
39916800
316234143225
479001600
7905853580625
6227020800
213458046676875
87178291200
6190283353629375
1307674368000
191898783962510625
20922789888000
6332659870762850625
355687428096000
221643095476699771875
6402373705728000
8200794532637891559375
121645100408832000
319830986772877770815625
2432902008176640000
13113070457687988603440625
51090942171709440000
563862029680583509947946875
1124000727777607680000
25373791335626257947657609375
25852016738884976640000
1192568192774434123539907640625
620448401733239439360000
58435841445947272053455474390625
15511210043330985984000000
2980227913743310874726229193921875
403291461126605635584000000
157952079428395476360490147277859375
10888869450418352160768000000
8687364368561751199826958100282265625
304888344611713860501504000000
495179769008019818390136611716089140625
8841761993739701954543616000000
29215606371473169285018060091249259296875
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-19 18:19:56) 
-- CODE:
from math import *
n = int(input("digite um numero inteiro positivo: "))

i = 2
soma = 1+1/3
d = 3
t = 2
while(t <= n):
	num = factorial(t)
	d = d*(2*i+1)
	pi = num/d
	soma = soma + pi
	i = i +1
	t = t+1
	
soma = 2*soma
print(round(soma, 10))
-- EXECUTION TIME:
0.388085
-- TEST CASE 1:
---- input:
1560
---- correct output:
3.1415926536
---- user output:
3.1415926536
-- TEST CASE 2:
---- input:
1000
---- correct output:
3.1415926536
---- user output:
3.1415926536
-- TEST CASE 3:
---- input:
100
---- correct output:
3.1415926536
---- user output:
3.1415926536
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 19:53:11) 
-- CODE:
from math import *
n = int(input("digite um numero inteiro positivo: "))

soma = 1+1/3
d = 3
t = 2
while(t <= n):
	num = factorial(t)
	d = d*(2*t+1)
	pi = num/d
	soma = soma + pi
	t = t+1
	
soma = 2*soma
print(round(soma, 10))
-- OUTPUT:
3.1415926536
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 19:53:17) 
-- CODE:
from math import *
n = int(input("digite um numero inteiro positivo: "))

soma = 1+1/3
d = 3
t = 2
while(t <= n):
	num = factorial(t)
	d = d*(2*t+1)
	pi = num/d
	soma = soma + pi
	t = t+1
	
soma = 2*soma
print(round(soma, 10))
-- OUTPUT:
3.1415926536
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 19:53:21) 
-- CODE:
from math import *
n = int(input("digite um numero inteiro positivo: "))

soma = 1+1/3
d = 3
t = 2
while(t <= n):
	num = factorial(t)
	d = d*(2*t+1)
	pi = num/d
	soma = soma + pi
	t = t+1
	
soma = 2*soma
print(round(soma, 10))
-- OUTPUT:
3.1415926536
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
