== TEST (2019-03-26 17:12:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=int(input("Dividendo: "))
var2=int(input("Divisor: "))

-- OUTPUT:
PRIMEIRO_CASO_DE_TESTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:17:05) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=int(input("Dividendo: "))
var2=int(input("Divisor: "))
total1=(var1//var2)
total2=(var1%var2)
print(var1)
print(var2)

-- OUTPUT:
8
5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:19:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=int(input("Dividendo: "))
var2=int(input("Divisor: "))
total1=(var1//var2)
total2=(var1%var2)
print(var1)
print(var2)
print(total1)
print(total2)
-- OUTPUT:
8
5
1
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:21:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=int(input("Dividendo: "))
var2=int(input("Divisor: "))
print(var1)
print(var2)
print(var1//var2)
print(var1%var2)
-- OUTPUT:
8
5
1
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:24:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=int(input("Dividendo: "))
var2=int(input("Divisor: "))
input(var1)
input(var2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    input(var1)
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:25:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=int(input("Dividendo: "))
var2=int(input("Divisor: "))
input(var1)
input(var2)
print(var1//var2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    input(var1)
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:26:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=int(input("Dividendo: "))
var2=int(input("Divisor: "))
input(var1)
input(var2)
print(var1//var2)
print(var1%var2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    input(var1)
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:26:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=int(input("Dividendo: "))
var2=int(input("Divisor: "))
input(var1)
input(var2)
print(var1//var2)
print(var1%var2)
-- EXECUTION TIME:
0.136679
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1595/2049/main.py", line 6, in <module>
    input(var1)
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:27:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=int(input("Dividendo: "))
var2=int(input("Divisor: "))
input(var1)
input(var2)
print(input(var1//var2))
print(input(var1%var2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    input(var1)
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:27:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=int(input("Dividendo: "))
var2=int(input("Divisor: "))
input(var1)
input(var2)
print(input(var1//var2))
print(input(var1%var2))
-- EXECUTION TIME:
0.206424
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1595/2049/main.py", line 6, in <module>
    input(var1)
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:29:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=int(input("Dividendo: "))
var2=int(input("Divisor: "))
print(var1)
print(var2)
print(var1//var2)
print(var1%var2)
-- OUTPUT:
8
5
1
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:31:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=int(input("Dividendo: "))
var2=int(input("Divisor: "))
var3=int(var1//var2)
var4=int(var1%var2)
print(var1)
print(var2)
print(var3)
print(var4)
-- OUTPUT:
8
5
1
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:32:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=int(input("Dividendo: "))
var2=int(input("Divisor: "))
var3=int(var1//var2)
var4=int(var1%var2)
print(var1)
print(var2)
print(var3)
print(var4)
-- OUTPUT:
8
5
1
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:33:13) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=int(input("Dividendo: "))
var2=int(input("Divisor: "))
var3=int(var1//var2)
var4=int(var1%var2)
print(var1)
print(var2)
print(var3)
print(var4)
-- EXECUTION TIME:
0.188676
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
8
5
1
3
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
14
2
7
0
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
347
2
173
1
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
