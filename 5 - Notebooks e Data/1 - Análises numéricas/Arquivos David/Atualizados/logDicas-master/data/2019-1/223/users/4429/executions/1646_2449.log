== TEST (2019-04-25 16:24:09) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
d=float(input("digite d: "))
e=float(input("digite e: "))
f=float(input("digite f: "))

x=((c*e)-(b*f))
if (x<=0):
	mensagem="nao tem solucao"
else:
	(x/(a*e)-(b*d))
y=((a*f)-(c*d))
if (x<=0):
	mensagem="nao tem solucao"
else:
	(y/(a*e)-(b*d))
	
	print(x)
	print(y)
	
	
-- OUTPUT:
Inferiores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:26:17) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
d=float(input("digite d: "))
e=float(input("digite e: "))
f=float(input("digite f: "))

x=((c*e)-(b*f))
if (x<=0):
	mensagem="nao tem solucao"
else:
	(x/(a*e)-(b*d))
y=((a*f)-(c*d))
if (x<=0):
	mensagem="nao tem solucao"
else:
	(y/(a*e)-(b*d))
	
	print(x)
	print(y)
	
	
-- OUTPUT:
Inferiores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:26:27) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
d=float(input("digite d: "))
e=float(input("digite e: "))
f=float(input("digite f: "))

x=((c*e)-(b*f))
if (x<=0):
	mensagem="nao tem solucao"
else:
	(x/(a*e)-(b*d))
y=((a*f)-(c*d))
if (x<=0):
	mensagem="nao tem solucao"
else:
	(y/(a*e)-(b*d))
	
	print(x)
	print(y)
	
	
-- OUTPUT:
Inferiores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:29:20) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
d=float(input("digite d: "))
e=float(input("digite e: "))
f=float(input("digite f: "))

x=((c*e)-(b*f))
if (x<=0):
	mensagem="nao tem solucao"
else:
	(x/(a*e)-(b*d))
y=((a*f)-(c*d))
if (x<=0):
	mensagem="nao tem solucao"
else:
	(y/(a*e)-(b*d))
	
print(x)
print(y)
	
	
-- OUTPUT:
0.0
0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:30:49) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
d=float(input("digite d: "))
e=float(input("digite e: "))
f=float(input("digite f: "))

x=((c*e)-(b*f))
if (x<=0):
	mensagem="nao tem solucao"
else:
	(x/((a*e)-(b*d)))
y=((a*f)-(c*d))
if (x<=0):
	mensagem="nao tem solucao"
else:
	(y/((a*e)-(b*d)))
	
print(x)
print(y)
	
	
-- OUTPUT:
0.0
0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:58:18) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
d=float(input("digite d: "))
e=float(input("digite e: "))
f=float(input("digite f: "))

x=((c*e)-(b*f))
y=((a*f)-(c*d))
if (x==0):
   print("nao tem solucao")
if (y==0):
   print("nao tem solucao")
else:
(x/((a*e)-(b*d)))
(y/((a*e)-(b*d)))

	
print(x)
print(y)
	
	
-- ERROR:
File "XXXX", line 15
    (x/((a*e)-(b*d)))
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:59:11) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
d=float(input("digite d: "))
e=float(input("digite e: "))
f=float(input("digite f: "))

x=((c*e)-(b*f))
y=((a*f)-(c*d))
if (x==0):
   print("nao tem solucao")
if (y==0):
   print("nao tem solucao")
else:
r1=(x/((a*e)-(b*d)))
r2=(y/((a*e)-(b*d)))

	
print(x)
print(y)
	
	
-- ERROR:
File "XXXX", line 15
    r1=(x/((a*e)-(b*d)))
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:59:39) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
d=float(input("digite d: "))
e=float(input("digite e: "))
f=float(input("digite f: "))

x=((c*e)-(b*f))
y=((a*f)-(c*d))
if (x==0):
   print("nao tem solucao")
if (y==0):
   print("nao tem solucao")
else:
(x/((a*e)-(b*d)))
(y/((a*e)-(b*d)))
	
print(x)
print(y)
	
	
-- ERROR:
File "XXXX", line 15
    (x/((a*e)-(b*d)))
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:00:15) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
d=float(input("digite d: "))
e=float(input("digite e: "))
f=float(input("digite f: "))

x=((c*e)-(b*f))
y=((a*f)-(c*d))
if (x==0):
   print("nao tem solucao")
if (y==0):
   print("nao tem solucao")
else:
(x/((a*e)-(b*d)))
(y/((a*e)-(b*d)))
	
print(x)
print(y)
	
	
-- ERROR:
File "XXXX", line 15
    (x/((a*e)-(b*d)))
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:01:36) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
d=float(input("digite d: "))
e=float(input("digite e: "))
f=float(input("digite f: "))

x=((c*e)-(b*f))
y=((a*f)-(c*d))
z=(a*e)-(b*d)
if (x==0):
   print("nao tem solucao")
if (y==0):
   print("nao tem solucao")
else:
(x/z)
(y/z)
	
print(x)
print(y)
	
	
-- ERROR:
File "XXXX", line 16
    (x/z)
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:04:50) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
d=float(input("digite d: "))
e=float(input("digite e: "))
f=float(input("digite f: "))

x=((c*e)-(b*f)/(a*e)-(b*d))
y=((a*f)-(c*d)/(a*e)-(b*d))
z=(a*e)-(b*d)
if (x==0):
   print("nao tem solucao")
if (y==0):
   print("nao tem solucao")
else:	
print(x)
print(y)
	
	
-- ERROR:
File "XXXX", line 16
    print(x)
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:04:59) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
d=float(input("digite d: "))
e=float(input("digite e: "))
f=float(input("digite f: "))

x=((c*e)-(b*f)/(a*e)-(b*d))
y=((a*f)-(c*d)/(a*e)-(b*d))

if (x==0):
   print("nao tem solucao")
if (y==0):
   print("nao tem solucao")
else:	
print(x)
print(y)
	
	
-- ERROR:
File "XXXX", line 16
    print(x)
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:05:25) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
d=float(input("digite d: "))
e=float(input("digite e: "))
f=float(input("digite f: "))

x=((c*e)-(b*f)/(a*e)-(b*d))
y=((a*f)-(c*d)/(a*e)-(b*d))
if (x==0):
   print("nao tem solucao")
if (y==0):
   print("nao tem solucao")
else:	
print(x)
print(y)
	
	
-- ERROR:
File "XXXX", line 15
    print(x)
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:07:37) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
d=float(input("digite d: "))
e=float(input("digite e: "))
f=float(input("digite f: "))

x=((c*e)-(b*f)/(a*e)-(b*d))
y=((a*f)-(c*d)/(a*e)-(b*d))
if (x==0):
   print("nao tem solucao")
if (y==0):
   print("nao tem solucao")
else:	
   print(x)
   print(y)
	
	
-- OUTPUT:
18.799999999999997
18.799999999999997
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:09:23) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
d=float(input("digite d: "))
e=float(input("digite e: "))
f=float(input("digite f: "))

x=(((c*e)-(b*f))/((a*e)-(b*d)))
y=(((a*f)-(c*d))/((a*e)-(b*d)))
if (x==0):
   print("nao tem solucao")
if (y==0):
   print("nao tem solucao")
else:	
   print(x)
   print(y)
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    x=(((c*e)-(b*f))/((a*e)-(b*d)))
ZeroDivisionError: float division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:09:24) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
d=float(input("digite d: "))
e=float(input("digite e: "))
f=float(input("digite f: "))

x=(((c*e)-(b*f))/((a*e)-(b*d)))
y=(((a*f)-(c*d))/((a*e)-(b*d)))
if (x==0):
   print("nao tem solucao")
if (y==0):
   print("nao tem solucao")
else:	
   print(x)
   print(y)
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    x=(((c*e)-(b*f))/((a*e)-(b*d)))
ZeroDivisionError: float division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:09:25) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
d=float(input("digite d: "))
e=float(input("digite e: "))
f=float(input("digite f: "))

x=(((c*e)-(b*f))/((a*e)-(b*d)))
y=(((a*f)-(c*d))/((a*e)-(b*d)))
if (x==0):
   print("nao tem solucao")
if (y==0):
   print("nao tem solucao")
else:	
   print(x)
   print(y)
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    x=(((c*e)-(b*f))/((a*e)-(b*d)))
ZeroDivisionError: float division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:10:04) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
d=float(input("digite d: "))
e=float(input("digite e: "))
f=float(input("digite f: "))

x=(((c*e)-(b*f))/((a*e)-(b*d)))
y=(((a*f)-(c*d))/((a*e)-(b*d)))
if (x==0):
   print("nao tem solucao")
if (y==0):
   print("nao tem solucao")
else:	
   print(x)
   print(y)
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    x=(((c*e)-(b*f))/((a*e)-(b*d)))
ZeroDivisionError: float division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:10:23) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
d=float(input("digite d: "))
e=float(input("digite e: "))
f=float(input("digite f: "))

x=(((c*e)-(b*f))/((a*e)-(b*d)))
y=(((a*f)-(c*d))/((a*e)-(b*d)))
if (x==0):
   print("nao tem solucao")
if (y==0):
   print("nao tem solucao")
else:	
   print(x)
   print(y)
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    x=(((c*e)-(b*f))/((a*e)-(b*d)))
ZeroDivisionError: float division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:10:38) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
d=float(input("digite d: "))
e=float(input("digite e: "))
f=float(input("digite f: "))

x=(((c*e)-(b*f))/((a*e)-(b*d)))
y=(((a*f)-(c*d))/((a*e)-(b*d)))
if (x==0):
   print("nao tem solucao")
if (y==0):
   print("nao tem solucao")
else:	
   print(x)
   print(y)
	
	
-- EXECUTION TIME:
0.150227
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1646/2449/main.py", line 8, in <module>
    x=(((c*e)-(b*f))/((a*e)-(b*d)))
ZeroDivisionError: float division by zero

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:10:46) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
d=float(input("digite d: "))
e=float(input("digite e: "))
f=float(input("digite f: "))

x=(((c*e)-(b*f))/((a*e)-(b*d)))
y=(((a*f)-(c*d))/((a*e)-(b*d)))
if (x==0):
   print("nao tem solucao")
if (y==0):
   print("nao tem solucao")
else:	
   print(x)
   print(y)
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    x=(((c*e)-(b*f))/((a*e)-(b*d)))
ZeroDivisionError: float division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:16:56) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
d=float(input("digite d: "))
e=float(input("digite e: "))
f=float(input("digite f: "))
nb=(c*e)-(b*f)
nc=(a*f)-(c*d)
db=(a*e)-(b*d)
x=nb/db
y=nc/db
if (db==0):
   print("nao tem solucao")
else:
   print(x)
	print(y)



	
	
-- ERROR:
File "XXXX", line 16
    print(y)
           ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:17:27) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
d=float(input("digite d: "))
e=float(input("digite e: "))
f=float(input("digite f: "))
nb=(c*e)-(b*f)
nc=(a*f)-(c*d)
db=(a*e)-(b*d)
x=nb/db
y=nc/db
if (db==0):
   print("nao tem solucao")
else:
   print(x)
	print(y)



	
	
-- ERROR:
File "XXXX", line 16
    print(y)
           ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:17:36) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
d=float(input("digite d: "))
e=float(input("digite e: "))
f=float(input("digite f: "))
nb=(c*e)-(b*f)
nc=(a*f)-(c*d)
db=(a*e)-(b*d)
x=nb/db
y=nc/db
if (db==0):
   print("nao tem solucao")
else:
print(x)
print(y)



	
	
-- ERROR:
File "XXXX", line 15
    print(x)
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:17:53) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
d=float(input("digite d: "))
e=float(input("digite e: "))
f=float(input("digite f: "))
nb=(c*e)-(b*f)
nc=(a*f)-(c*d)
db=(a*e)-(b*d)
x=nb/db
y=nc/db
if (db==0):
   print("nao tem solucao")
else:
	print(x)
	print(y)



	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    x=nb/db
ZeroDivisionError: float division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:18:04) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
d=float(input("digite d: "))
e=float(input("digite e: "))
f=float(input("digite f: "))
nb=(c*e)-(b*f)
nc=(a*f)-(c*d)
db=(a*e)-(b*d)
x=nb/db
y=nc/db
if (db==0):
   print("nao tem solucao")
else:
	print(x)
	print(y)



	
	
-- EXECUTION TIME:
0.138783
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1646/2449/main.py", line 10, in <module>
    x=nb/db
ZeroDivisionError: float division by zero

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:18:20) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
d=float(input("digite d: "))
e=float(input("digite e: "))
f=float(input("digite f: "))
nb=(c*e)-(b*f)
nc=(a*f)-(c*d)
db=(a*e)-(b*d)
x=nb/db
y=nc/db
if (db==0):
   print("Nao tem solucao")
else:
	print(x)
	print(y)



	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    x=nb/db
ZeroDivisionError: float division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:18:30) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
d=float(input("digite d: "))
e=float(input("digite e: "))
f=float(input("digite f: "))
nb=(c*e)-(b*f)
nc=(a*f)-(c*d)
db=(a*e)-(b*d)
x=nb/db
y=nc/db
if (db==0):
   print("Nao tem solucao")
else:
	print(x)
	print(y)



	
	
-- EXECUTION TIME:
0.175472
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1646/2449/main.py", line 10, in <module>
    x=nb/db
ZeroDivisionError: float division by zero

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:18:32) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
d=float(input("digite d: "))
e=float(input("digite e: "))
f=float(input("digite f: "))
nb=(c*e)-(b*f)
nc=(a*f)-(c*d)
db=(a*e)-(b*d)
x=nb/db
y=nc/db
if (db==0):
   print("Nao tem solucao")
else:
	print(x)
	print(y)



	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    x=nb/db
ZeroDivisionError: float division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:21:05) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
d=float(input("digite d: "))
e=float(input("digite e: "))
f=float(input("digite f: "))
nb=(c*e)-(b*f)
nc=(a*f)-(c*d)
db=(a*e)-(b*d)

if (db==0):
   print("Nao tem solucao")
else:
	print(nb/db)
	print(nc/db)
	



	
	
-- OUTPUT:
Nao tem solucao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:21:44) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
d=float(input("digite d: "))
e=float(input("digite e: "))
f=float(input("digite f: "))
nb=(c*e)-(b*f)
nc=(a*f)-(c*d)
db=(a*e)-(b*d)

if (db==0):
   print("Nao tem solucao")
else:
	print(nb/db)
	print(nc/db)
	



	
	
-- OUTPUT:
Nao tem solucao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:21:59) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
d=float(input("digite d: "))
e=float(input("digite e: "))
f=float(input("digite f: "))
nb=(c*e)-(b*f)
nc=(a*f)-(c*d)
db=(a*e)-(b*d)

if (db==0):
   print("Nao tem solucao")
else:
	print(nb/db)
	print(nc/db)
	



	
	
-- OUTPUT:
Nao tem solucao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:22:39) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
d=float(input("digite d: "))
e=float(input("digite e: "))
f=float(input("digite f: "))
nb=(c*e)-(b*f)
nc=(a*f)-(c*d)
db=(a*e)-(b*d)

if (db==0):
   print("Nao tem solucao")
else:
	print(nb/db)
	print(nc/db)
	



	
	
-- EXECUTION TIME:
0.256943
-- TEST CASE 1:
---- input:
10.0
10.0
12.0
10.0
10.0
12.0
---- correct output:
Nao tem solucao
---- user output:
Nao tem solucao
-- TEST CASE 2:
---- input:
1.0
8.0
12.0
16.0
22.0
30.0
---- correct output:
-0.22641509433962265
1.528301886792453
---- user output:
-0.22641509433962265
1.528301886792453
-- TEST CASE 3:
---- input:
24.0
48.0
52.0
112.0
16.0
1.0
---- correct output:
-0.15705128205128205
1.1618589743589745
---- user output:
-0.15705128205128205
1.1618589743589745
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:24:22) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
d=float(input("digite d: "))
e=float(input("digite e: "))
f=float(input("digite f: "))
x=(c*e)-(b*f)
y=(a*f)-(c*d)
db=(a*e)-(b*d)

if (db==0):
   print("Nao tem solucao")
else:
	print(x/db)
	print(y/db)
	



	
	
-- OUTPUT:
Nao tem solucao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:24:25) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
d=float(input("digite d: "))
e=float(input("digite e: "))
f=float(input("digite f: "))
x=(c*e)-(b*f)
y=(a*f)-(c*d)
db=(a*e)-(b*d)

if (db==0):
   print("Nao tem solucao")
else:
	print(x/db)
	print(y/db)
	



	
	
-- EXECUTION TIME:
0.173923
-- TEST CASE 1:
---- input:
10.0
10.0
12.0
10.0
10.0
12.0
---- correct output:
Nao tem solucao
---- user output:
Nao tem solucao
-- TEST CASE 2:
---- input:
1.0
8.0
12.0
16.0
22.0
30.0
---- correct output:
-0.22641509433962265
1.528301886792453
---- user output:
-0.22641509433962265
1.528301886792453
-- TEST CASE 3:
---- input:
24.0
48.0
52.0
112.0
16.0
1.0
---- correct output:
-0.15705128205128205
1.1618589743589745
---- user output:
-0.15705128205128205
1.1618589743589745
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
