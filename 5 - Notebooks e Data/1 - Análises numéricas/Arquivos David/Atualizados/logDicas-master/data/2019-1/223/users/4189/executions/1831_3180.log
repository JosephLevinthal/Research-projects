== TEST (2019-06-13 16:07:09) 
-- CODE:
from numpy import *
vetor = array(eval(input("vator:"))
a = zeros(4,dtype=int)
for i in vetor:
   if(vetor[i]==1):
		a[0]=a[0]+1
	if(vetor[i]==2):
		a[1]=a[1]+1
	if(vetor[i]==3)
		a[2]=a[2]+1
	if(vetor[i]==4):
		a[3]=a[3]+1
print(a)
-- ERROR:
File "XXXX", line 3
    a = zeros(4,dtype=int)
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 16:07:37) 
-- CODE:
from numpy import *
vetor = array(eval(input("vator:"))
a = zeros(4,dtype=int)
for i in vetor:
   if(vetor[i]==1):
		a[0]=a[0]+1
	if(vetor[i]==2):
		a[1]=a[1]+1
	if(vetor[i]==3)
		a[2]=a[2]+1
	if(vetor[i]==4):
		a[3]=a[3]+1
print(a)
-- ERROR:
File "XXXX", line 3
    a = zeros(4,dtype=int)
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 16:07:57) 
-- CODE:
from numpy import *
vetor = array(eval(input("vator:")))
a = zeros(4,dtype=int)
for i in vetor:
   if(vetor[i]==1):
		a[0]=a[0]+1
	if(vetor[i]==2):
		a[1]=a[1]+1
	if(vetor[i]==3)
		a[2]=a[2]+1
	if(vetor[i]==4):
		a[3]=a[3]+1
print(a)
-- ERROR:
File "XXXX", line 6
    a[0]=a[0]+1
              ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 16:08:52) 
-- CODE:
from numpy import *
vetor = array(eval(input("vator:")))
a = zeros(4,dtype=int)
for i in vetor:
   if(vetor[i]==1):
		a[0]=a[0]+1
	if(vetor[i]==2):
		a[1]=a[1]+1
	if(vetor[i]==3)
		a[2]=a[2]+1
	if(vetor[i]==4):
		a[3]=a[3]+1
print(a)
-- EXECUTION TIME:
0.655087
-- ERROR:
  File "/home/codebench/codes/1831/3180/main.py", line 6
    a[0]=a[0]+1
              ^
TabError: inconsistent use of tabs and spaces in indentation

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 16:08:58) 
-- CODE:
from numpy import *
vetor = array(eval(input("vator:")))
a = zeros(4,dtype=int)
for i in vetor:
   if(vetor[i]==1):
		a[0]=a[0]+1
	if(vetor[i]==2):
		a[1]=a[1]+1
	if(vetor[i]==3)
		a[2]=a[2]+1
	if(vetor[i]==4):
		a[3]=a[3]+1
print(a)
-- ERROR:
File "XXXX", line 6
    a[0]=a[0]+1
              ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 16:09:01) 
-- CODE:
from numpy import *
vetor = array(eval(input("vator:")))
a = zeros(4,dtype=int)
for i in vetor:
   if(vetor[i]==1):
		a[0]=a[0]+1
	if(vetor[i]==2):
		a[1]=a[1]+1
	if(vetor[i]==3)
		a[2]=a[2]+1
	if(vetor[i]==4):
		a[3]=a[3]+1
print(a)
-- EXECUTION TIME:
1.50012
-- ERROR:
  File "/home/codebench/codes/1831/3180/main.py", line 6
    a[0]=a[0]+1
              ^
TabError: inconsistent use of tabs and spaces in indentation

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 16:09:02) 
-- CODE:
from numpy import *
vetor = array(eval(input("vator:")))
a = zeros(4,dtype=int)
for i in vetor:
   if(vetor[i]==1):
		a[0]=a[0]+1
	if(vetor[i]==2):
		a[1]=a[1]+1
	if(vetor[i]==3)
		a[2]=a[2]+1
	if(vetor[i]==4):
		a[3]=a[3]+1
print(a)
-- EXECUTION TIME:
2.65318
-- ERROR:
  File "/home/codebench/codes/1831/3180/main.py", line 6
    a[0]=a[0]+1
              ^
TabError: inconsistent use of tabs and spaces in indentation

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 16:09:02) 
-- CODE:
from numpy import *
vetor = array(eval(input("vator:")))
a = zeros(4,dtype=int)
for i in vetor:
   if(vetor[i]==1):
		a[0]=a[0]+1
	if(vetor[i]==2):
		a[1]=a[1]+1
	if(vetor[i]==3)
		a[2]=a[2]+1
	if(vetor[i]==4):
		a[3]=a[3]+1
print(a)
-- EXECUTION TIME:
2.46032
-- ERROR:
  File "/home/codebench/codes/1831/3180/main.py", line 6
    a[0]=a[0]+1
              ^
TabError: inconsistent use of tabs and spaces in indentation

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 16:09:18) 
-- CODE:
from numpy import *
vetor = array(eval(input("vator:")))
a = zeros(4,dtype=int)
for i in vetor:
   if(vetor[i]==1):
		a[0]=a[0]+1
	if(vetor[i]==2):
		a[1]=a[1]+1
	if(vetor[i]==3)
		a[2]=a[2]+1
	if(vetor[i]==4):
		a[3]=a[3]+1
print(a)
-- ERROR:
File "XXXX", line 6
    a[0]=a[0]+1
              ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 16:09:47) 
-- CODE:
from numpy import *
vetor = array(eval(input("vator:")))
a = zeros(4,dtype=int)
for i in vetor:
   if(vetor[i]==1):
		a[0]=a[0]+1
	if(vetor[i]==2):
		a[1]=a[1]+1
	if(vetor[i]==3)
		a[2]=a[2]+1
	if(vetor[i]==4):
		a[3]=a[3]+1
print(a)
-- ERROR:
File "XXXX", line 6
    a[0]=a[0]+1
              ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 16:11:10) 
-- CODE:
from numpy import *
vetor = array(eval(input("vator:")))
a = zeros(4,dtype=int)
for i in vetor:
   if(vetor[i]==1):
		a[0]=a[0]+1
	if(vetor[i]==2):
		a[1]=a[1]+1
	if(vetor[i]==3)
		a[2]=a[2]+1
	if(vetor[i]==4):
		a[3]=a[3]+1
print(a)
-- ERROR:
File "XXXX", line 6
    a[0]=a[0]+1
              ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 16:11:32) 
-- CODE:
from numpy import *
vetor = array(eval(input("vator:")))
a = zeros(4,dtype=int)
for i in vetor:
   if(vetor[i]==1):
		a[0]=a[0]+1
	if(vetor[i]==2):
		a[1]=a[1]+1
	if(vetor[i]==3)
		a[2]=a[2]+1
	if(vetor[i]==4):
		a[3]=a[3]+1
print(a)
-- ERROR:
File "XXXX", line 6
    a[0]=a[0]+1
              ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 16:12:20) 
-- CODE:
from numpy import *
vetor = array(eval(input("vator:")))
a = zeros(4,dtype=int)
for i in vetor:
   if(vetor[i]==1):
		a[0]=a[0]+1
	if(vetor[i]==2):
		a[1]=a[1]+1
	if(vetor[i]==3)
		a[2]=a[2]+1
	if(vetor[i]==4):
		a[3]=a[3]+1
print(a)
-- ERROR:
File "XXXX", line 6
    a[0]=a[0]+1
              ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 16:13:25) 
-- CODE:
from numpy import *
vetor = array(eval(input("vator:")))
a = zeros(4,dtype=int)
for i in vetor:
	if(vetor[i]==1):
		a[0]=a[0]+1
	if(vetor[i]==2):
		a[1]=a[1]+1
	if(vetor[i]==3):
		a[2]=a[2]+1
	if(vetor[i]==4):
		a[3]=a[3]+1
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 16:13:48) 
-- CODE:
from numpy import *
vetor = array(eval(input("vator:")))
a = zeros(4,dtype=int)
for i in vetor:
	if(vetor[i]==1):
		a[0]=a[0]+1
	if(vetor[i]==2):
		a[1]=a[1]+1
	if(vetor[i]==3):
		a[2]=a[2]+1
	if(vetor[i]==4):
		a[3]=a[3]+1
print(a)
-- EXECUTION TIME:
1.05497
-- TEST CASE 1:
---- input:
[1,2,3,4,3,2,1,2,3,2,4,1]
---- correct output:
[3 4 3 2]
---- user output:
[0 3 6 3]
-- TEST CASE 2:
---- input:
[1,3,3,4,1,3,1]
---- correct output:
[3 0 3 1]
---- user output:
[1 0 3 3]
-- TEST CASE 3:
---- input:
[1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4]
---- correct output:
[4 4 4 4]
---- user output:
[4 4 4 4]
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 16:13:59) 
-- CODE:
from numpy import *
vetor = array(eval(input("vator:")))
a = zeros(4,dtype=int)
for i in vetor:
	if(vetor[i]==1):
		a[0]=a[0]+1
	if(vetor[i]==2):
		a[1]=a[1]+1
	if(vetor[i]==3):
		a[2]=a[2]+1
	if(vetor[i]==4):
		a[3]=a[3]+1
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 16:14:46) 
-- CODE:
from numpy import *
vetor = array(eval(input("vator:")))
a = zeros(4,dtype=int)
for i in vetor:
	if(vetor[i]==1):
		a[0]=a[0]+1
	if(vetor[i]==2):
		a[1]=a[1]+1
	if(vetor[i]==3):
		a[2]=a[2]+1
	if(vetor[i]==4):
		a[3]=a[3]+1
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 16:22:33) 
-- CODE:
from numpy import *
vetor = array(eval(input("vator:")))
a = zeros(4,dtype=int)
for i in vetor:
	if(vetor[i]==1):
		a[0]=a[0]+1
	if(vetor[i]==2):
		a[1]=a[1]+1
	if(vetor[i]==3):
		a[2]=a[2]+1
	if(vetor[i]==4):
		a[3]=a[3]+1
print(a)
-- EXECUTION TIME:
0.835369
-- TEST CASE 1:
---- input:
[1,2,3,4,3,2,1,2,3,2,4,1]
---- correct output:
[3 4 3 2]
---- user output:
[0 3 6 3]
-- TEST CASE 2:
---- input:
[1,3,3,4,1,3,1]
---- correct output:
[3 0 3 1]
---- user output:
[1 0 3 3]
-- TEST CASE 3:
---- input:
[1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4]
---- correct output:
[4 4 4 4]
---- user output:
[4 4 4 4]
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 16:24:39) 
-- CODE:
from numpy import *
vetor = array(eval(input("vator:")))
a = zeros(4,dtype=int)
for i in vetor:
	if(vetor[i]==1):
		a[0]=a[0]+1
	if(vetor[i]==2):
		a[1]=a[1]+1
	if(vetor[i]==3):
		a[2]=a[2]+1
	if(vetor[i]==4):
		a[3]=a[3]+1
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 16:25:21) 
-- CODE:
from numpy import *
vetor = array(eval(input("vator:")))
a = zeros(4,dtype=int)
for i in vetor:
	if(vetor[i]==1):
		a[0]=a[0]+1
	if(vetor[i]==2):
		a[1]=a[1]+1
	if(vetor[i]==3):
		a[2]=a[2]+1
	if(vetor[i]==4):
		a[3]=a[3]+1
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 16:26:43) 
-- CODE:
from numpy import *
vetor = array(eval(input("vator:")))
a = zeros(4,dtype=int)
for i in vetor:
	if(vetor[i]==1):
		a[0]=+1
	if(vetor[i]==2):
		a[1]=+1
	if(vetor[i]==3):
		a[2]=+1
	if(vetor[i]==4):
		a[3]=+1
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 16:28:51) 
-- CODE:
from numpy import *
vetor = array(eval(input("vator:")))
a = zeros(4,dtype=int)
for i in vetor:
	if(vetor[i]==1):
		a[0]=a[0]+1
	elif(vetor[i]==2):
		a[1]=a[1]+1
	elif(vetor[i]==3):
		a[2]=a[2]+1
	else:
		a[3]=a[3]+1
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 16:29:58) 
-- CODE:
from numpy import *
vetor = array(eval(input("vator:")))
a = zeros(4,dtype=int)
for i in vetor:
	if(vetor[i]==1):
		a[0]=a[0]+1
	elif(vetor[i]==2):
		a[1]=a[1]+1
	elif(vetor[i]==3):
		a[2]=a[2]+1
	elif(vetor[i]==4)
		a[3]=a[3]+1
print(a)
-- ERROR:
File "XXXX", line 11
    elif(vetor[i]==4)
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 16:30:11) 
-- CODE:
from numpy import *
vetor = array(eval(input("vator:")))
a = zeros(4,dtype=int)
for i in vetor:
	if(vetor[i]==1):
		a[0]=a[0]+1
	elif(vetor[i]==2):
		a[1]=a[1]+1
	elif(vetor[i]==3):
		a[2]=a[2]+1
	elif(vetor[i]==4):
		a[3]=a[3]+1
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 16:31:16) 
-- CODE:
from numpy import *
vetor = array(eval(input("vator:")))
a = zeros(4,dtype=int)
for i in vetor:
	if(vetor[i]==1):
		a[0]=a[0] + 1
	elif(vetor[i]==2):
		a[1]=a[1] + 1
	elif(vetor[i]==3):
		a[2]=a[2] + 1
	elif(vetor[i]==4):
		a[3]=a[3] + 1
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 16:34:16) 
-- CODE:
from numpy import *
vetor = array(eval(input("vator:")))
a = zeros(4,dtype=int)
for i in vetor:
	if(vetor[i]==1):
		a[0]=a[0] + 1
      if(vetor[i]==2):
		   a[1]=a[1] + 1
	      if(vetor[i]==3):
		      a[2]=a[2] + 1
	         if(vetor[i]==4):
		         a[3]=a[3] + 1
print(a)
-- ERROR:
File "XXXX", line 7
    if(vetor[i]==2):
                   ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 16:34:17) 
-- CODE:
from numpy import *
vetor = array(eval(input("vator:")))
a = zeros(4,dtype=int)
for i in vetor:
	if(vetor[i]==1):
		a[0]=a[0] + 1
      if(vetor[i]==2):
		   a[1]=a[1] + 1
	      if(vetor[i]==3):
		      a[2]=a[2] + 1
	         if(vetor[i]==4):
		         a[3]=a[3] + 1
print(a)
-- EXECUTION TIME:
0.548648
-- ERROR:
  File "/home/codebench/codes/1831/3180/main.py", line 7
    if(vetor[i]==2):
                   ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 16:35:12) 
-- CODE:
from numpy import *
vetor = array(eval(input("vator:")))
a = zeros(4,dtype=int)
for i in vetor:
	if(vetor[i]==1):
		a[0]=a[0] + 1
	if(vetor[i]==2):
		a[1]=a[1] + 1
	if(vetor[i]==3):
		a[2]=a[2] + 1
	if(vetor[i]==4):
		a[3]=a[3] + 1
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 16:35:16) 
-- CODE:
from numpy import *
vetor = array(eval(input("vator:")))
a = zeros(4,dtype=int)
for i in vetor:
	if(vetor[i]==1):
		a[0]=a[0] + 1
	if(vetor[i]==2):
		a[1]=a[1] + 1
	if(vetor[i]==3):
		a[2]=a[2] + 1
	if(vetor[i]==4):
		a[3]=a[3] + 1
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 16:35:54) 
-- CODE:
from numpy import *
vetor = array(eval(input("vator:")))
a = zeros(4,dtype=int)
for i in vetor:
	if(vetor[i]==1):
		a[0]= a[0] + 1
	if(vetor[i]==2):
		a[1]= a[1] + 1
	if(vetor[i]==3):
		a[2]= a[2] + 1
	if(vetor[i]==4):
		a[3]= a[3] + 1
print(a)
-- EXECUTION TIME:
1.00951
-- TEST CASE 1:
---- input:
[1,2,3,4,3,2,1,2,3,2,4,1]
---- correct output:
[3 4 3 2]
---- user output:
[0 3 6 3]
-- TEST CASE 2:
---- input:
[1,3,3,4,1,3,1]
---- correct output:
[3 0 3 1]
---- user output:
[1 0 3 3]
-- TEST CASE 3:
---- input:
[1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4]
---- correct output:
[4 4 4 4]
---- user output:
[4 4 4 4]
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 16:37:08) 
-- CODE:
from numpy import *
vetor = array(eval(input("vator:")))
a = zeros(4,dtype=int)
for i in range(size(vetor)):
	if(vetor[i]==1):
		a[0]= a[0] + 1
	if(vetor[i]==2):
		a[1]= a[1] + 1
	if(vetor[i]==3):
		a[2]= a[2] + 1
	if(vetor[i]==4):
		a[3]= a[3] + 1
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 16:37:14) 
-- CODE:
from numpy import *
vetor = array(eval(input("vator:")))
a = zeros(4,dtype=int)
for i in range(size(vetor)):
	if(vetor[i]==1):
		a[0]= a[0] + 1
	if(vetor[i]==2):
		a[1]= a[1] + 1
	if(vetor[i]==3):
		a[2]= a[2] + 1
	if(vetor[i]==4):
		a[3]= a[3] + 1
print(a)
-- EXECUTION TIME:
0.844201
-- TEST CASE 1:
---- input:
[1,2,3,4,3,2,1,2,3,2,4,1]
---- correct output:
[3 4 3 2]
---- user output:
[3 4 3 2]
-- TEST CASE 2:
---- input:
[1,3,3,4,1,3,1]
---- correct output:
[3 0 3 1]
---- user output:
[3 0 3 1]
-- TEST CASE 3:
---- input:
[1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4]
---- correct output:
[4 4 4 4]
---- user output:
[4 4 4 4]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
