== TEST (2019-06-27 11:57:36) 
-- CODE:
from numpy import*
N=int(input("n: "))
mat=zeros((N,N),dtype=int)
for i in range(N):
	for j in range(N):
		if(i>=j):
			mat[i,j]=1
		elif(i>=):
			mat[i,j]=-1
		else:
			mat[i,j]=0
print(mat)			
-- ERROR:
File "XXXX", line 8
    elif(i>=):
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 11:57:46) 
-- CODE:
from numpy import*
N=int(input("n: "))
mat=zeros((N,N),dtype=int)
for i in range(N):
	for j in range(N):
		if(i>=j):
			mat[i,j]=1
		elif(i>=j):
			mat[i,j]=-1
		else:
			mat[i,j]=0
print(mat)			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 11:58:11) 
-- CODE:
from numpy import*
N=int(input("n: "))
mat=zeros((N,N),dtype=int)
for i in range(N):
	for j in range(N):
		if(i>=j):
			mat[i,j]=1
		elif(i>=j):
			mat[i,j]=1
		else:
			mat[i,j]=0
print(mat)			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 12:54:06) 
-- CODE:
from numpy import*
N=int(input("n: "))
mat=zeros((N,N),dtype=int)
for i in range(N):
	for j in range(N):
		if(i>=j):
			mat[i,j]= min[i,j]+1
print(mat)			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 12:54:40) 
-- CODE:
from numpy import*
N=int(input("n: "))
mat=zeros((N,N),dtype=int)
for i in range(N):
	for j in range(N):
			mat[i,j]= min[i,j]+1
print(mat)			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 12:55:05) 
-- CODE:
from numpy import*
N=int(input("n: "))
mat=zeros((N,N),dtype=int)
for i in range(N):
	for j in range(N):
		mat[i,j]= min[i,j]+1
print(mat)			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 13:27:42) 
-- CODE:
from numpy import*
N=int(input("n: "))
quandro=array([
[1,1,1,1,1],
[1,2,2,2,2],
[1,2,3,3,3],
[1,2,3,4,5],
{1,2,3,4,5}	
])
for i in range(N):
	for j in range(N):
		if(i>=j):
			mat[i,j]= quadro[i,j]+1
		elif(i>=j):
			mat[i,j]=quadro[i,j]-1
		else:
			mat[i,j]=0
print(mat)			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 13:28:22) 
-- CODE:
from numpy import*
N=int(input("n: "))
quandro=array([
[1,1,1,1,1],
[1,2,2,2,2],
[1,2,3,3,3],
[1,2,3,4,5],
{1,2,3,4,5}	
])
for i in range(N):
	for j in range(N):
		if(i>=j):
			mat[i,j]= 1
		elif(i>=j):
			mat[i,j]=-1
		else:
			mat[i,j]=0
print(quadro)			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 13:28:55) 
-- CODE:
from numpy import*
N=int(input("n: "))
quandro=array([
[1,1,1,1,1],
[1,2,2,2,2],
[1,2,3,3,3],
[1,2,3,4,5],
{1,2,3,4,5}	
])
for i in range(N):
	for j in range(N):
		if(i>=j):
			mat[i,j]= 1
		elif(i>=j):
			mat[i,j]= -1
		else:
			mat[i,j]= 0
print(quadro)			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 13:29:59) 
-- CODE:
from numpy import*
N=int(input("n: "))
quandro=array([
[1,1,1,1,1],
[1,2,2,2,2],
[1,2,3,3,3],
[1,2,3,4,5],
{1,2,3,4,5}	
])
TAM=size(quadro)
for i in range(N):
	for j in range(N):
		if(i>=j):
			mat[i,j]= 1
		elif(i>=j):
			mat[i,j]= -1
		else:
			mat[i,j]= 0
print(quadro)			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 13:30:19) 
-- CODE:
from numpy import*
N=int(input("n: "))
quadro=array([
[1,1,1,1,1],
[1,2,2,2,2],
[1,2,3,3,3],
[1,2,3,4,5],
{1,2,3,4,5}	
])
TAM=size(quadro)
for i in range(N):
	for j in range(N):
		if(i>=j):
			mat[i,j]= 1
		elif(i>=j):
			mat[i,j]= -1
		else:
			mat[i,j]= 0
print(quadro)			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 13:43:10) 
-- CODE:
from numpy import*
from numpy.linalg import*
N=int(input("n: "))
a=zeros((N,N), dtype=int)
for i in range(N):
	for j in range(N):
		if(i>=j):
			a[i,j]=min(i,j)+ 1
print(a)			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 13:44:48) 
-- CODE:
from numpy import*
from numpy.linalg import*
N=int(input("n: "))
a=zeros((N,N), dtype=int)
for i in range(N):
	for j in range(N):
		a[i,j]=min(i,j)+ 1
print(a)			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-27 13:45:06) 
-- CODE:
from numpy import*
from numpy.linalg import*
N=int(input("n: "))
a=zeros((N,N), dtype=int)
for i in range(N):
	for j in range(N):
		a[i,j]=min(i,j)+ 1
print(a)			
-- EXECUTION TIME:
1.1166
-- TEST CASE 1:
---- input:
3
---- correct output:
[[1 1 1]
 [1 2 2]
 [1 2 3]]
---- user output:
[[1 1 1]
 [1 2 2]
 [1 2 3]]
-- TEST CASE 2:
---- input:
8
---- correct output:
[[1 1 1 1 1 1 1 1]
 [1 2 2 2 2 2 2 2]
 [1 2 3 3 3 3 3 3]
 [1 2 3 4 4 4 4 4]
 [1 2 3 4 5 5 5 5]
 [1 2 3 4 5 6 6 6]
 [1 2 3 4 5 6 7 7]
 [1 2 3 4 5 6 7 8]]
---- user output:
[[1 1 1 1 1 1 1 1]
 [1 2 2 2 2 2 2 2]
 [1 2 3 3 3 3 3 3]
 [1 2 3 4 4 4 4 4]
 [1 2 3 4 5 5 5 5]
 [1 2 3 4 5 6 6 6]
 [1 2 3 4 5 6 7 7]
 [1 2 3 4 5 6 7 8]]
-- TEST CASE 3:
---- input:
1
---- correct output:
[[1]]
---- user output:
[[1]]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 14:22:42) 
-- CODE:
from numpy import*
from numpy.linalg import*
N=int(input("n: "))
a=zeros((N,N), dtype=int)
for i in range(N):
	for j in range(N):
		a[i,j]=min(i,j)+ 1
		print(i)
		print(j)
print(a)			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-27 14:26:12) 
-- CODE:
from numpy import*
from numpy.linalg import*
N=int(input("n: "))
a=zeros((N,N), dtype=int)
for i in range(N):
	for j in range(N):
		a[i,j]=min(i,j)+ 1
print(a)			
-- EXECUTION TIME:
1.19914
-- TEST CASE 1:
---- input:
3
---- correct output:
[[1 1 1]
 [1 2 2]
 [1 2 3]]
---- user output:
[[1 1 1]
 [1 2 2]
 [1 2 3]]
-- TEST CASE 2:
---- input:
8
---- correct output:
[[1 1 1 1 1 1 1 1]
 [1 2 2 2 2 2 2 2]
 [1 2 3 3 3 3 3 3]
 [1 2 3 4 4 4 4 4]
 [1 2 3 4 5 5 5 5]
 [1 2 3 4 5 6 6 6]
 [1 2 3 4 5 6 7 7]
 [1 2 3 4 5 6 7 8]]
---- user output:
[[1 1 1 1 1 1 1 1]
 [1 2 2 2 2 2 2 2]
 [1 2 3 3 3 3 3 3]
 [1 2 3 4 4 4 4 4]
 [1 2 3 4 5 5 5 5]
 [1 2 3 4 5 6 6 6]
 [1 2 3 4 5 6 7 7]
 [1 2 3 4 5 6 7 8]]
-- TEST CASE 3:
---- input:
1
---- correct output:
[[1]]
---- user output:
[[1]]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
