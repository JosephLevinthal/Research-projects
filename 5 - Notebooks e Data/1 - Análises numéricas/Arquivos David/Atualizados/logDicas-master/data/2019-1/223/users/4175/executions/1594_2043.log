== TEST (2019-03-20 00:44:27) 
-- CODE:
Nota1=input() 
Nota2=input()
Nota3=input()
Nota4=input()
nota1*1 + nota2*2 + nota3*3 + nota4*4


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    nota1*1 + nota2*2 + nota3*3 + nota4*4
NameError: name 'nota1' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 00:44:45) 
-- CODE:
nota1=input() 
nota2=input()
nota3=input()
nota4=input()
nota1*1 + nota2*2 + nota3*3 + nota4*4


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    nota1*1 + nota2*2 + nota3*3 + nota4*4
NameError: name 'nota1' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 00:45:05) 
-- CODE:
nota1=input() 
nota2=input()
nota3=input()
nota4=input()
print(nota1*1 + nota2*2 + nota3*3 + nota4*4)


-- OUTPUT:
88.58.57779999
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 00:46:32) 
-- CODE:
nota1=input() 
nota2=input()
nota3=input()
nota4=input()
print(round((nota1*1 + nota2*2 + nota3*3 + nota4*4)/(nota1+nota2+nota3+nota4),2)


-- ERROR:
File "XXXX", line 7
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 00:46:37) 
-- CODE:
nota1=input() 
nota2=input()
nota3=input()
nota4=input()
print(round((nota1*1 + nota2*2 + nota3*3 + nota4*4)/(nota1+nota2+nota3+nota4),2)
-- ERROR:
File "XXXX", line 6
    
                                                                                    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 00:47:01) 
-- CODE:
nota1=input() 
nota2=input()
nota3=input()
nota4=input()
print(round((nota1*1 + nota2*2 + nota3*3 + nota4*4)/(nota1 + nota2 + nota3 + nota4),2)
-- ERROR:
File "XXXX", line 6
    
                                                                                          ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 00:47:26) 
-- CODE:
nota1=input() 
nota2=input()
nota3=input()
nota4=input()
print(nota1*1 + nota2*2 + nota3*3 + nota4*4)/(nota1 + nota2 + nota3 + nota4)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(nota1*1 + nota2*2 + nota3*3 + nota4*4)/(nota1 + nota2 + nota3 + nota4)
TypeError: unsupported operand type(s) for /: 'NoneType' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 00:47:33) 
-- CODE:
nota1=input() 
nota2=input()
nota3=input()
nota4=input()
print(nota1*1 + nota2*2 + nota3*3 + nota4*4)/(nota1 + nota2 + nota3 + nota4)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(nota1*1 + nota2*2 + nota3*3 + nota4*4)/(nota1 + nota2 + nota3 + nota4)
TypeError: unsupported operand type(s) for /: 'NoneType' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 00:48:07) 
-- CODE:
nota1=input() 
nota2=input()
nota3=input()
nota4=input()
print(str(round((nota1*1 + nota2*2 + nota3*3 + nota4*4)/(nota1 + nota2 + nota3 + nota4),2))
-- ERROR:
File "XXXX", line 6
    
                                                                                               ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 00:48:13) 
-- CODE:
nota1=input() 
nota2=input()
nota3=input()
nota4=input()
print(int(round((nota1*1 + nota2*2 + nota3*3 + nota4*4)/(nota1 + nota2 + nota3 + nota4),2))
-- ERROR:
File "XXXX", line 6
    
                                                                                               ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 00:48:24) 
-- CODE:
nota1=input() 
nota2=input()
nota3=input()
nota4=input()
print(int(nota1*1 + nota2*2 + nota3*3 + nota4*4)/(nota1 + nota2 + nota3 + nota4),2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(int(nota1*1 + nota2*2 + nota3*3 + nota4*4)/(nota1 + nota2 + nota3 + nota4),2)
ValueError: invalid literal for int() with base 10: '88.58.57779999'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 00:49:14) 
-- CODE:
Nota
print(int(nota1*1 + nota2*2 + nota3*3 + nota4*4)/(nota1 + nota2 + nota3 + nota4),2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    Nota
NameError: name 'Nota' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 20:10:45) 
-- CODE:
Nota1 = 0.0
Nota2 = 0.0
Nota3 = 9.0
Nota4 = 10.0
Mp= (Nota1*1 + Nota2*2 + Nota3*3 + Nota4*4)/(1+2+3+4)
print(Mp)
-- OUTPUT:
6.7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 20:11:00) 
-- CODE:
Nota1 = 0.0
Nota2 = 0.0
Nota3 = 9.0
Nota4 = 10.0
Mp= (Nota1*1 + Nota2*2 + Nota3*3 + Nota4*4)/(1+2+3+4)
print(Mp)
-- EXECUTION TIME:
0.177876
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
6.7
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
6.7
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
6.7
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 20:12:03) 
-- CODE:
Nota1 = 0.0
Nota2 = 0.0
Nota3 = 9.0
Nota4 = 10.0
print(round((Nota1*1 + Nota2*2 + Nota3*3 + Nota4*4)/(1+2+3+4),2))
-- OUTPUT:
6.7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 20:12:04) 
-- CODE:
Nota1 = 0.0
Nota2 = 0.0
Nota3 = 9.0
Nota4 = 10.0
print(round((Nota1*1 + Nota2*2 + Nota3*3 + Nota4*4)/(1+2+3+4),2))
-- EXECUTION TIME:
0.13117
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
6.7
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
6.7
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
6.7
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 20:12:05) 
-- CODE:
Nota1 = 0.0
Nota2 = 0.0
Nota3 = 9.0
Nota4 = 10.0
print(round((Nota1*1 + Nota2*2 + Nota3*3 + Nota4*4)/(1+2+3+4),2))
-- OUTPUT:
6.7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 20:13:37) 
-- CODE:
Nota1 = input()
Nota2 = input()
Nota3 = input()
Nota4 = input()

Peso1 = 1
Peso2 = 2
Peso3 = 3
Peso4 = 4

print(round((Nota1*Peso1 + Nota2*Peso2 + Nota3*Peso3 + Nota4*Peso4)/(Peso1 + Peso2 + Peso3 + Peso4),2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(round((Nota1*Peso1 + Nota2*Peso2 + Nota3*Peso3 + Nota4*Peso4)/(Peso1 + Peso2 + Peso3 + Peso4),2))
TypeError: unsupported operand type(s) for /: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 20:13:44) 
-- CODE:
Nota1 = input()
Nota2 = input()
Nota3 = input()
Nota4 = input()

Peso1 = 1
Peso2 = 2
Peso3 = 3
Peso4 = 4

print(round((Nota1*Peso1 + Nota2*Peso2 + Nota3*Peso3 + Nota4*Peso4)/(Peso1 + Peso2 + Peso3 + Peso4),2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(round((Nota1*Peso1 + Nota2*Peso2 + Nota3*Peso3 + Nota4*Peso4)/(Peso1 + Peso2 + Peso3 + Peso4),2))
TypeError: unsupported operand type(s) for /: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 20:16:25) 
-- CODE:
Nota1 = int(input())
Nota2 = int(input())
Nota3 = int(input())
Nota4 = int(input())

Peso1 = 1
Peso2 = 2
Peso3 = 3
Peso4 = 4

print(round((Nota1*Peso1 + Nota2*Peso2 + Nota3*Peso3 + Nota4*Peso4)/(Peso1 + Peso2 + Peso3 + Peso4),2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    Nota2 = int(input())
ValueError: invalid literal for int() with base 10: '8.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 20:16:31) 
-- CODE:
Nota1 = int(input())
Nota2 = int(input())
Nota3 = int(input())
Nota4 = int(input())

Peso1 = 1
Peso2 = 2
Peso3 = 3
Peso4 = 4

print(round((Nota1*Peso1 + Nota2*Peso2 + Nota3*Peso3 + Nota4*Peso4)/(Peso1 + Peso2 + Peso3 + Peso4),2))
-- EXECUTION TIME:
0.182296
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1594/2043/main.py", line 2, in <module>
    Nota2 = int(input())
ValueError: invalid literal for int() with base 10: '8.5'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 20:17:09) 
-- CODE:
Nota1 = int(input())
Nota2 = int(input())
Nota3 = int(input())
Nota4 = int(input())

Peso1 = 1
Peso2 = 2
Peso3 = 3
Peso4 = 4

print(round((Nota1*1 + Nota2*2 + Nota3*3 + Nota4*4)/(1 + 2 + 3 + 4),2))
-- EXECUTION TIME:
0.194302
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1594/2043/main.py", line 2, in <module>
    Nota2 = int(input())
ValueError: invalid literal for int() with base 10: '8.5'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 20:17:11) 
-- CODE:
Nota1 = int(input())
Nota2 = int(input())
Nota3 = int(input())
Nota4 = int(input())

Peso1 = 1
Peso2 = 2
Peso3 = 3
Peso4 = 4

print(round((Nota1*1 + Nota2*2 + Nota3*3 + Nota4*4)/(1 + 2 + 3 + 4),2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    Nota2 = int(input())
ValueError: invalid literal for int() with base 10: '8.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 20:17:46) 
-- CODE:
Nota1 = 0.0
Nota2 = 0.0
Nota3 = 9.0
Nota4 = 10.0

Peso1 = 1
Peso2 = 2
Peso3 = 3
Peso4 = 4

print(round((Nota1*1 + Nota2*2 + Nota3*3 + Nota4*4)/(1 + 2 + 3 + 4),2))
-- OUTPUT:
6.7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 20:17:49) 
-- CODE:
Nota1 = 0.0
Nota2 = 0.0
Nota3 = 9.0
Nota4 = 10.0

Peso1 = 1
Peso2 = 2
Peso3 = 3
Peso4 = 4

print(round((Nota1*1 + Nota2*2 + Nota3*3 + Nota4*4)/(1 + 2 + 3 + 4),2))
-- EXECUTION TIME:
0.167407
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
6.7
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
6.7
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
6.7
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 20:17:52) 
-- CODE:
Nota1 = 0.0
Nota2 = 0.0
Nota3 = 9.0
Nota4 = 10.0

Peso1 = 1
Peso2 = 2
Peso3 = 3
Peso4 = 4

print(round((Nota1*1 + Nota2*2 + Nota3*3 + Nota4*4)/(1 + 2 + 3 + 4),2))
-- OUTPUT:
6.7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 20:18:08) 
-- CODE:
Nota1 = 0.0
Nota2 = 0.0
Nota3 = 9.0
Nota4 = 10.0

Peso1 = 1
Peso2 = 2
Peso3 = 3
Peso4 = 4

print(round((Nota1*Peso1 + Nota2*Peso2 + Nota3*Peso3 + Nota4*Peso4)/(1 + 2 + 3 + 4),2))
-- OUTPUT:
6.7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 20:18:09) 
-- CODE:
Nota1 = 0.0
Nota2 = 0.0
Nota3 = 9.0
Nota4 = 10.0

Peso1 = 1
Peso2 = 2
Peso3 = 3
Peso4 = 4

print(round((Nota1*Peso1 + Nota2*Peso2 + Nota3*Peso3 + Nota4*Peso4)/(1 + 2 + 3 + 4),2))
-- EXECUTION TIME:
0.114376
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
6.7
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
6.7
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
6.7
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 20:18:15) 
-- CODE:
Nota1 = 0.0
Nota2 = 0.0
Nota3 = 9.0
Nota4 = 10.0

Peso1 = 1
Peso2 = 2
Peso3 = 3
Peso4 = 4

print(round((Nota1*Peso1 + Nota2*Peso2 + Nota3*Peso3 + Nota4*Peso4)/(Peso1 + Peso2 + Peso3 + Peso4),2))
-- OUTPUT:
6.7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 20:18:16) 
-- CODE:
Nota1 = 0.0
Nota2 = 0.0
Nota3 = 9.0
Nota4 = 10.0

Peso1 = 1
Peso2 = 2
Peso3 = 3
Peso4 = 4

print(round((Nota1*Peso1 + Nota2*Peso2 + Nota3*Peso3 + Nota4*Peso4)/(Peso1 + Peso2 + Peso3 + Peso4),2))
-- EXECUTION TIME:
0.169432
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
6.7
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
6.7
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
6.7
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 20:18:18) 
-- CODE:
Nota1 = 0.0
Nota2 = 0.0
Nota3 = 9.0
Nota4 = 10.0

Peso1 = 1
Peso2 = 2
Peso3 = 3
Peso4 = 4

print(round((Nota1*Peso1 + Nota2*Peso2 + Nota3*Peso3 + Nota4*Peso4)/(Peso1 + Peso2 + Peso3 + Peso4),2))
-- EXECUTION TIME:
0.130186
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
6.7
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
6.7
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
6.7
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 20:18:46) 
-- CODE:
Nota1 = 5.7
Nota2 = 4.99
Nota3 = 7.0
Nota4 = 3.89

Peso1 = 1
Peso2 = 2
Peso3 = 3
Peso4 = 4

print(round((Nota1*Peso1 + Nota2*Peso2 + Nota3*Peso3 + Nota4*Peso4)/(Peso1 + Peso2 + Peso3 + Peso4),2))
-- OUTPUT:
5.22
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 20:18:47) 
-- CODE:
Nota1 = 5.7
Nota2 = 4.99
Nota3 = 7.0
Nota4 = 3.89

Peso1 = 1
Peso2 = 2
Peso3 = 3
Peso4 = 4

print(round((Nota1*Peso1 + Nota2*Peso2 + Nota3*Peso3 + Nota4*Peso4)/(Peso1 + Peso2 + Peso3 + Peso4),2))
-- EXECUTION TIME:
0.121618
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
5.22
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
5.22
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
5.22
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 20:18:48) 
-- CODE:
Nota1 = 5.7
Nota2 = 4.99
Nota3 = 7.0
Nota4 = 3.89

Peso1 = 1
Peso2 = 2
Peso3 = 3
Peso4 = 4

print(round((Nota1*Peso1 + Nota2*Peso2 + Nota3*Peso3 + Nota4*Peso4)/(Peso1 + Peso2 + Peso3 + Peso4),2))
-- OUTPUT:
5.22
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 20:19:13) 
-- CODE:
Nota1 = 5.7
Nota2 = 4.99
Nota3 = 7.0
Nota4 = 3.89

Peso1 = 1
Peso2 = 2
Peso3 = 3
Peso4 = 4

print(round((Nota1*1 + Nota2*2 + Nota3*3 + Nota4*4)/(1 + 2 + 3 + 4),2))
-- OUTPUT:
5.22
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 20:19:15) 
-- CODE:
Nota1 = 5.7
Nota2 = 4.99
Nota3 = 7.0
Nota4 = 3.89

Peso1 = 1
Peso2 = 2
Peso3 = 3
Peso4 = 4

print(round((Nota1*1 + Nota2*2 + Nota3*3 + Nota4*4)/(1 + 2 + 3 + 4),2))
-- EXECUTION TIME:
0.160392
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
5.22
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
5.22
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
5.22
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 20:23:07) 
-- CODE:
Nota1 = 5.7
Nota2 = 4.99
Nota3 = 7.0
Nota4 = 3.89

Peso1 = 1
Peso2 = 2
Peso3 = 3
Peso4 = 4

print(round((Nota1*1 + Nota2*2 + Nota3*3 + Nota4*4)/(1 + 2 + 3 + 4),2))
-- EXECUTION TIME:
0.118637
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
5.22
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
5.22
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
5.22
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 20:23:08) 
-- CODE:
Nota1 = 5.7
Nota2 = 4.99
Nota3 = 7.0
Nota4 = 3.89

Peso1 = 1
Peso2 = 2
Peso3 = 3
Peso4 = 4

print(round((Nota1*1 + Nota2*2 + Nota3*3 + Nota4*4)/(1 + 2 + 3 + 4),2))
-- OUTPUT:
5.22
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 20:24:27) 
-- CODE:
Nota1 = 0.0
Nota2 = 0.0
Nota3 = 9.0
Nota4 = 10.0

Peso1 = 1
Peso2 = 2
Peso3 = 3
Peso4 = 4

print(round((Nota1*Peso1 + Nota2*Peso2 + Nota3*Peso3 + Nota4*Peso4)/(Peso1 + Peso2 + Peso3 + Peso4),2))
-- OUTPUT:
6.7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 20:25:10) 
-- CODE:
Nota1 = 0.0
Nota2 = 0.0
Nota3 = 9.0
Nota4 = 10.0

Peso1 = 1
Peso2 = 2
Peso3 = 3
Peso4 = 4

print(round((Nota1*Peso1 + Nota2*Peso2 + Nota3*Peso3 + Nota4*Peso4)/(Peso1 + Peso2 + Peso3 + Peso4),2))
-- EXECUTION TIME:
0.13847
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
6.7
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
6.7
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
6.7
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 20:28:56) 
-- CODE:
Nota1 = 0.0
Nota2 = 0.0
Nota3 = 9.0
Nota4 = 10.0

Peso1 = 1
Peso2 = 2
Peso3 = 3
Peso4 = 4

print(round((Nota1*Peso1 + Nota2*Peso2 + Nota3*Peso3 + Nota4*Peso4)/(Peso1 + Peso2 + Peso3 + Peso4),2))
-- OUTPUT:
6.7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 20:29:01) 
-- CODE:
Nota1 = 0.0
Nota2 = 0.0
Nota3 = 9.0
Nota4 = 10.0

Peso1 = 1
Peso2 = 2
Peso3 = 3
Peso4 = 4

print(round((Nota1*Peso1 + Nota2*Peso2 + Nota3*Peso3 + Nota4*Peso4)/(Peso1 + Peso2 + Peso3 + Peso4),2))
-- EXECUTION TIME:
0.20013
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
6.7
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
6.7
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
6.7
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 20:31:47) 
-- CODE:
print(round((0.0*1 + 0.0*2 + 9.0*3 + 10*4)/(1 + 2 + 3 + 4),2))
-- OUTPUT:
6.7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 20:31:48) 
-- CODE:
print(round((0.0*1 + 0.0*2 + 9.0*3 + 10*4)/(1 + 2 + 3 + 4),2))
-- EXECUTION TIME:
0.125764
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
6.7
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
6.7
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
6.7
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 20:31:51) 
-- CODE:
print(round((0.0*1 + 0.0*2 + 9.0*3 + 10*4)/(1 + 2 + 3 + 4),2))
-- OUTPUT:
6.7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 12:23:01) 
-- CODE:
Nota1 = float(input())
-- OUTPUT:
6.7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 12:24:17) 
-- CODE:
Nota1 = float(input('Digite a primeira nota: '))
Nota2 = float(input('Digite a segunda nota: '))
Nota3 = float(input('Digite a terceira nota: '))
Nota4 = float(input('Digite a quarta nota: '))
-- OUTPUT:
6.7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 12:24:22) 
-- CODE:
Nota1 = float(input('Digite a primeira nota: '))
Nota2 = float(input('Digite a segunda nota: '))
Nota3 = float(input('Digite a terceira nota: '))
Nota4 = float(input('Digite a quarta nota: '))
-- OUTPUT:
6.7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 12:24:25) 
-- CODE:
Nota1 = float(input('Digite a primeira nota: '))
Nota2 = float(input('Digite a segunda nota: '))
Nota3 = float(input('Digite a terceira nota: '))
Nota4 = float(input('Digite a quarta nota: '))
-- EXECUTION TIME:
0.1599
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:

-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:

-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 12:28:29) 
-- CODE:
Nota1 = float(input('Digite a primeira nota: '))
Nota2 = float(input('Digite a segunda nota: '))
Nota3 = float(input('Digite a terceira nota: '))
Nota4 = float(input('Digite a quarta nota: '))

Nota1 = Nota1 * 1
Nota2 = Nota2 * 2
Nota3 = Nota3 * 3
Nota4 = Nota4 * 4

MP = float((Nota1 + Nota2 + Nota3 + Nota4) / 10)
Print('A media do aluno é: ' + str(media))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    Print('A media do aluno é: ' + str(media))
NameError: name 'Print' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 12:28:54) 
-- CODE:
Nota1 = float(input('Digite a primeira nota: '))
Nota2 = float(input('Digite a segunda nota: '))
Nota3 = float(input('Digite a terceira nota: '))
Nota4 = float(input('Digite a quarta nota: '))

Nota1 = Nota1 * 1
Nota2 = Nota2 * 2
Nota3 = Nota3 * 3
Nota4 = Nota4 * 4

MP = float((Nota1 + Nota2 + Nota3 + Nota4) / 10)
print('A media do aluno é: ' + str(media))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    print('A media do aluno é: ' + str(media))
NameError: name 'media' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 12:29:34) 
-- CODE:
Nota1 = float(input('Digite a primeira nota: '))
Nota2 = float(input('Digite a segunda nota: '))
Nota3 = float(input('Digite a terceira nota: '))
Nota4 = float(input('Digite a quarta nota: '))

Nota1 = Nota1 * 1
Nota2 = Nota2 * 2
Nota3 = Nota3 * 3
Nota4 = Nota4 * 4

MP = float((Nota1 + Nota2 + Nota3 + Nota4) / 10)
print('A MP do aluno é: ' + str(MP))
-- OUTPUT:
A MP do aluno é: 8.2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 12:31:15) 
-- CODE:
Nota1 = float(input('Digite a primeira nota: '))
Nota2 = float(input('Digite a segunda nota: '))
Nota3 = float(input('Digite a terceira nota: '))
Nota4 = float(input('Digite a quarta nota: '))

nota1 = Nota1 * 1
nota2 = Nota2 * 2
nota3 = Nota3 * 3
nota4 = Nota4 * 4

MP = float((nota1 + nota2 + nota3 + nota4) / 10)
print('A MP do aluno é: ' + str(MP))
-- OUTPUT:
A MP do aluno é: 8.2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 12:33:32) 
-- CODE:
Nota1 = float(input('Digite a primeira nota: '))
Nota2 = float(input('Digite a segunda nota: '))
Nota3 = float(input('Digite a terceira nota: '))
Nota4 = float(input('Digite a quarta nota: '))

nota1 = Nota1 * 1
nota2 = Nota2 * 2
nota3 = Nota3 * 3
nota4 = Nota4 * 4

MP = float((nota1 + nota2 + nota3 + nota4) / 10)
print(str(MP))
-- OUTPUT:
8.2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 12:33:45) 
-- CODE:
Nota1 = float(input('Digite a primeira nota: '))
Nota2 = float(input('Digite a segunda nota: '))
Nota3 = float(input('Digite a terceira nota: '))
Nota4 = float(input('Digite a quarta nota: '))

nota1 = Nota1 * 1
nota2 = Nota2 * 2
nota3 = Nota3 * 3
nota4 = Nota4 * 4

MP = float((nota1 + nota2 + nota3 + nota4) / 10)
print(str(MP))
-- EXECUTION TIME:
0.204765
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
8.2
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
7.0
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
7.936000000000002
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 12:35:06) 
-- CODE:
Nota1 = float(input('Digite a primeira nota: '))
Nota2 = float(input('Digite a segunda nota: '))
Nota3 = float(input('Digite a terceira nota: '))
Nota4 = float(input('Digite a quarta nota: '))

print(str(Nota1 * 1 + Nota2 * 2 + Nota3 * 3 + Nota4 * 4)(1+2+3+4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(str(Nota1 * 1 + Nota2 * 2 + Nota3 * 3 + Nota4 * 4)(1+2+3+4))
TypeError: 'str' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 12:35:28) 
-- CODE:
Nota1 = float(input('Digite a primeira nota: '))
Nota2 = float(input('Digite a segunda nota: '))
Nota3 = float(input('Digite a terceira nota: '))
Nota4 = float(input('Digite a quarta nota: '))

print(float(Nota1 * 1 + Nota2 * 2 + Nota3 * 3 + Nota4 * 4)(1+2+3+4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(float(Nota1 * 1 + Nota2 * 2 + Nota3 * 3 + Nota4 * 4)(1+2+3+4))
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 12:36:42) 
-- CODE:
Nota1 = float(input('Digite a primeira nota: '))
Nota2 = float(input('Digite a segunda nota: '))
Nota3 = float(input('Digite a terceira nota: '))
Nota4 = float(input('Digite a quarta nota: '))

nota1 = Nota1 * 1
nota2 = Nota2 * 2
nota3 = Nota3 * 3
nota4 = Nota4 * 4

MP = float((nota1 + nota2 + nota3 + nota4) / 10)
print(round(str(MP)),6)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    print(round(str(MP)),6)
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 12:38:01) 
-- CODE:
Nota1 = float(input('Digite a primeira nota: '))
Nota2 = float(input('Digite a segunda nota: '))
Nota3 = float(input('Digite a terceira nota: '))
Nota4 = float(input('Digite a quarta nota: '))

nota1 = Nota1 * 1
nota2 = Nota2 * 2
nota3 = Nota3 * 3
nota4 = Nota4 * 4

MP = (round(float((nota1 + nota2 + nota3 + nota4) / 10)),2)
print(str(MP))
-- OUTPUT:
(8, 2)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 12:38:14) 
-- CODE:
Nota1 = float(input('Digite a primeira nota: '))
Nota2 = float(input('Digite a segunda nota: '))
Nota3 = float(input('Digite a terceira nota: '))
Nota4 = float(input('Digite a quarta nota: '))

nota1 = Nota1 * 1
nota2 = Nota2 * 2
nota3 = Nota3 * 3
nota4 = Nota4 * 4

MP = (round(float((nota1 + nota2 + nota3 + nota4) / 10)),2)
print(str(MP))
-- EXECUTION TIME:
0.144639
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
(8, 2)
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
(7, 2)
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
(8, 2)
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 12:38:18) 
-- CODE:
Nota1 = float(input('Digite a primeira nota: '))
Nota2 = float(input('Digite a segunda nota: '))
Nota3 = float(input('Digite a terceira nota: '))
Nota4 = float(input('Digite a quarta nota: '))

nota1 = Nota1 * 1
nota2 = Nota2 * 2
nota3 = Nota3 * 3
nota4 = Nota4 * 4

MP = (round(float((nota1 + nota2 + nota3 + nota4) / 10)),2)
print(str(MP))
-- OUTPUT:
(8, 2)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 12:39:22) 
-- CODE:
Nota1 = float(input('Digite a primeira nota: '))
Nota2 = float(input('Digite a segunda nota: '))
Nota3 = float(input('Digite a terceira nota: '))
Nota4 = float(input('Digite a quarta nota: '))

nota1 = Nota1 * 1
nota2 = Nota2 * 2
nota3 = Nota3 * 3
nota4 = Nota4 * 4

MP = float((nota1 + nota2 + nota3 + nota4) / 10)
print(str(MP))
-- EXECUTION TIME:
0.210346
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
8.2
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
7.0
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
7.936000000000002
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 12:39:23) 
-- CODE:
Nota1 = float(input('Digite a primeira nota: '))
Nota2 = float(input('Digite a segunda nota: '))
Nota3 = float(input('Digite a terceira nota: '))
Nota4 = float(input('Digite a quarta nota: '))

nota1 = Nota1 * 1
nota2 = Nota2 * 2
nota3 = Nota3 * 3
nota4 = Nota4 * 4

MP = float((nota1 + nota2 + nota3 + nota4) / 10)
print(str(MP))
-- OUTPUT:
8.2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:02:11) 
-- CODE:
Nota1 = float(input('Digite a primeira nota: '))
Nota2 = float(input('Digite a segunda nota: '))
Nota3 = float(input('Digite a terceira nota: '))
Nota4 = float(input('Digite a quarta nota: '))

nota1 = Nota1 * 1
nota2 = Nota2 * 2
nota3 = Nota3 * 3
nota4 = Nota4 * 4

MP = float((nota1 + nota2 + nota3 + nota4) / 10)
print(str(MP))
-- OUTPUT:
8.2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:02:38) 
-- CODE:
Nota1 = float(input('Digite a primeira nota: '))
Nota2 = float(input('Digite a segunda nota: '))
Nota3 = float(input('Digite a terceira nota: '))
Nota4 = float(input('Digite a quarta nota: '))

nota1 = Nota1 * 1
nota2 = Nota2 * 2
nota3 = Nota3 * 3
nota4 = Nota4 * 4

MP = float((nota1 + nota2 + nota3 + nota4) / 10)
print(str(MP))
-- OUTPUT:
8.2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:02:52) 
-- CODE:
Nota1 = float(input('Digite a primeira nota: '))
Nota2 = float(input('Digite a segunda nota: '))
Nota3 = float(input('Digite a terceira nota: '))
Nota4 = float(input('Digite a quarta nota: '))

nota1 = Nota1 * 1
nota2 = Nota2 * 2
nota3 = Nota3 * 3
nota4 = Nota4 * 4

MP = float((nota1 + nota2 + nota3 + nota4) / 10)
print(str(MP))
-- OUTPUT:
8.2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 16:03:21) 
-- CODE:
Nota1 = float(input('Digite a primeira nota: '))
Nota2 = float(input('Digite a segunda nota: '))
Nota3 = float(input('Digite a terceira nota: '))
Nota4 = float(input('Digite a quarta nota: '))

nota1 = Nota1 * 1
nota2 = Nota2 * 2
nota3 = Nota3 * 3
nota4 = Nota4 * 4

MP = float((nota1 + nota2 + nota3 + nota4) / 10)
print(str(MP))
-- EXECUTION TIME:
0.144046
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
8.2
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
7.0
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
7.936000000000002
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 16:32:32) 
-- CODE:
Nota1 = float(input('Digite a primeira nota: '))
Nota2 = float(input('Digite a segunda nota: '))
Nota3 = float(input('Digite a terceira nota: '))
Nota4 = float(input('Digite a quarta nota: '))

nota1 = Nota1 * 1
nota2 = Nota2 * 2
nota3 = Nota3 * 3
nota4 = Nota4 * 4

MP = (nota1 + nota2 + nota3 + nota4) / 10
print(str(MP))
-- EXECUTION TIME:
0.16524
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
8.2
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
7.0
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
7.936000000000002
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:32:34) 
-- CODE:
Nota1 = float(input('Digite a primeira nota: '))
Nota2 = float(input('Digite a segunda nota: '))
Nota3 = float(input('Digite a terceira nota: '))
Nota4 = float(input('Digite a quarta nota: '))

nota1 = Nota1 * 1
nota2 = Nota2 * 2
nota3 = Nota3 * 3
nota4 = Nota4 * 4

MP = (nota1 + nota2 + nota3 + nota4) / 10
print(str(MP))
-- OUTPUT:
8.2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:33:18) 
-- CODE:
Nota1 = float(input('Digite a primeira nota: '))
Nota2 = float(input('Digite a segunda nota: '))
Nota3 = float(input('Digite a terceira nota: '))
Nota4 = float(input('Digite a quarta nota: '))

nota1 = Nota1 * 1
nota2 = Nota2 * 2
nota3 = Nota3 * 3
nota4 = Nota4 * 4

MP = round((nota1 + nota2 + nota3 + nota4) / 10,6)
print(str(MP))
-- OUTPUT:
8.2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:35:20) 
-- CODE:
Nota1 = float(input('Digite a primeira nota: '))
Nota2 = float(input('Digite a segunda nota: '))
Nota3 = float(input('Digite a terceira nota: '))
Nota4 = float(input('Digite a quarta nota: '))

nota1 = Nota1 * 1
nota2 = Nota2 * 2
nota3 = Nota3 * 3
nota4 = Nota4 * 4

MP = round((nota1 + nota2 + nota3 + nota4) / 10,2)
print(str(MP))
-- OUTPUT:
8.2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 16:35:31) 
-- CODE:
Nota1 = float(input('Digite a primeira nota: '))
Nota2 = float(input('Digite a segunda nota: '))
Nota3 = float(input('Digite a terceira nota: '))
Nota4 = float(input('Digite a quarta nota: '))

nota1 = Nota1 * 1
nota2 = Nota2 * 2
nota3 = Nota3 * 3
nota4 = Nota4 * 4

MP = round((nota1 + nota2 + nota3 + nota4) / 10,2)
print(str(MP))
-- EXECUTION TIME:
0.190161
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
8.2
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
7.0
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
7.94
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 21:13:30) 
-- CODE:
a = float(input())
b = float(input())
c = float(input())
d = float(input())

print(round((a*1 + b*2 + c*3 + d*4)/10,2))
-- EXECUTION TIME:
0.149439
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
8.2
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
7.0
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
7.94
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 21:14:56) 
-- CODE:
Nota1 = float(input('Digite a primeira nota: '))
Nota2 = float(input('Digite a segunda nota: '))
Nota3 = float(input('Digite a terceira nota: '))
Nota4 = float(input('Digite a quarta nota: '))

nota1 = Nota1 * 1
nota2 = Nota2 * 2
nota3 = Nota3 * 3
nota4 = Nota4 * 4

MP = round((nota1 + nota2 + nota3 + nota4) / 10,2)
print(str(MP))
-- EXECUTION TIME:
0.246292
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
8.2
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
7.0
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
7.94
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 21:15:03) 
-- CODE:
a = float(input())
b = float(input())
c = float(input())
d = float(input())

print(round((a*1 + b*2 + c*3 + d*4)/10,2))
-- EXECUTION TIME:
0.225323
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
8.2
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
7.0
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
7.94
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 21:15:08) 
-- CODE:
Nota1 = float(input('Digite a primeira nota: '))
Nota2 = float(input('Digite a segunda nota: '))
Nota3 = float(input('Digite a terceira nota: '))
Nota4 = float(input('Digite a quarta nota: '))

nota1 = Nota1 * 1
nota2 = Nota2 * 2
nota3 = Nota3 * 3
nota4 = Nota4 * 4

MP = round((nota1 + nota2 + nota3 + nota4) / 10,2)
print(str(MP))
-- EXECUTION TIME:
0.134295
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
8.2
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
7.0
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
7.94
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 21:15:10) 
-- CODE:
Nota1 = float(input('Digite a primeira nota: '))
Nota2 = float(input('Digite a segunda nota: '))
Nota3 = float(input('Digite a terceira nota: '))
Nota4 = float(input('Digite a quarta nota: '))

nota1 = Nota1 * 1
nota2 = Nota2 * 2
nota3 = Nota3 * 3
nota4 = Nota4 * 4

MP = round((nota1 + nota2 + nota3 + nota4) / 10,2)
print(str(MP))
-- EXECUTION TIME:
0.182011
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
8.2
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
7.0
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
7.94
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 21:15:12) 
-- CODE:
Nota1 = float(input('Digite a primeira nota: '))
Nota2 = float(input('Digite a segunda nota: '))
Nota3 = float(input('Digite a terceira nota: '))
Nota4 = float(input('Digite a quarta nota: '))

nota1 = Nota1 * 1
nota2 = Nota2 * 2
nota3 = Nota3 * 3
nota4 = Nota4 * 4

MP = round((nota1 + nota2 + nota3 + nota4) / 10,2)
print(str(MP))
-- EXECUTION TIME:
0.147438
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
8.2
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
7.0
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
7.94
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:15:12) 
-- CODE:
Nota1 = float(input('Digite a primeira nota: '))
Nota2 = float(input('Digite a segunda nota: '))
Nota3 = float(input('Digite a terceira nota: '))
Nota4 = float(input('Digite a quarta nota: '))

nota1 = Nota1 * 1
nota2 = Nota2 * 2
nota3 = Nota3 * 3
nota4 = Nota4 * 4

MP = round((nota1 + nota2 + nota3 + nota4) / 10,2)
print(str(MP))
-- OUTPUT:
8.2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 21:15:13) 
-- CODE:
Nota1 = float(input('Digite a primeira nota: '))
Nota2 = float(input('Digite a segunda nota: '))
Nota3 = float(input('Digite a terceira nota: '))
Nota4 = float(input('Digite a quarta nota: '))

nota1 = Nota1 * 1
nota2 = Nota2 * 2
nota3 = Nota3 * 3
nota4 = Nota4 * 4

MP = round((nota1 + nota2 + nota3 + nota4) / 10,2)
print(str(MP))
-- EXECUTION TIME:
0.188942
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
8.2
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
7.0
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
7.94
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 21:15:18) 
-- CODE:
a = float(input())
b = float(input())
c = float(input())
d = float(input())

print(round((a*1 + b*2 + c*3 + d*4)/10,2))
-- EXECUTION TIME:
0.161423
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
8.2
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
7.0
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
7.94
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 21:15:28) 
-- CODE:
a = float(input())
b = float(input())
c = float(input(
d = float(input())

print(round((a*1 + b*2 + c*3 + d*4)/10,2))
-- EXECUTION TIME:
0.147074
-- ERROR:
  File "/home/codebench/codes/1594/2043/main.py", line 6
    print(round((a*1 + b*2 + c*3 + d*4)/10,2))
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 21:15:31) 
-- CODE:
a = float(input())
b = float(input())
c = float(input())
d = float(input())

print(round((a*1 + b*2 + c*3 + d*4)/10,2))
-- EXECUTION TIME:
0.148091
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
8.2
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
7.0
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
7.94
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
