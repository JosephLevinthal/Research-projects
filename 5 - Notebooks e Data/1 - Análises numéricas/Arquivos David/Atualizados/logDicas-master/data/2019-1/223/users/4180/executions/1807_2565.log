== TEST (2019-06-07 09:06:22) 
-- CODE:
from numpy import*
#Leitura dos Valores
MF = array(eval(input("Medias finais de cada aluno: ")))
freq = array(eval(input("Frequencia dos alunos: ")))
CH = int(input("Carga Horaria da disciplina: "))
#Resultado final
resultado = zeros(3, dtype = int)
#Numero de aprovados
for i in range(0, size(notas)):
	if (MF[i] >= 5)and(freq[i] > 0.75 * CH)
	
-- ERROR:
File "XXXX", line 10
    if (MF[i] >= 5)and(freq[i] > 0.75 * CH)
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-07 09:06:31) 
-- CODE:
from numpy import*
#Leitura dos Valores
MF = array(eval(input("Medias finais de cada aluno: ")))
freq = array(eval(input("Frequencia dos alunos: ")))
CH = int(input("Carga Horaria da disciplina: "))
#Resultado final
resultado = zeros(3, dtype = int)
#Numero de aprovados
for i in range(0, size(notas)):
	if (MF[i] >= 5)and(freq[i] > 0.75 * CH):
		
	
-- ERROR:
File "XXXX", line 13
    
     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-07 09:07:12) 
-- CODE:
from numpy import*
#Leitura dos Valores
MF = array(eval(input("Medias finais de cada aluno: ")))
freq = array(eval(input("Frequencia dos alunos: ")))
CH = int(input("Carga Horaria da disciplina: "))
#Resultado final
resultado = zeros(3, dtype = int)
#Numero de aprovados
for i in range(0, size(notas)):
	if (MF[i] >= 5)and(freq[i] > 0.75 * CH):
		resultado[0] = resultado[0] + 1

		
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-07 09:07:23) 
-- CODE:
from numpy import*
#Leitura dos Valores
MF = array(eval(input("Medias finais de cada aluno: ")))
freq = array(eval(input("Frequencia dos alunos: ")))
CH = int(input("Carga Horaria da disciplina: "))
#Resultado final
resultado = zeros(3, dtype = int)
#Numero de aprovados
for i in range(0, size(notas)):
	if (MF[i] >= 5)and(freq[i] > 0.75 * CH):
		resultado[0] = resultado[0] + 1

		
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-07 09:08:03) 
-- CODE:
from numpy import*
#Leitura dos Valores
MF = array(eval(input("Medias finais de cada aluno: ")))
freq = array(eval(input("Frequencia dos alunos: ")))
CH = int(input("Carga Horaria da disciplina: "))
#Resultado final
resultado = zeros(3, dtype = int)
#Numero de aprovados
for i in range(0, size( MF )):
	if (MF[i] >= 5)and(freq[i] > 0.75 * CH):
		resultado[0] = resultado[0] + 1

		
	
-- EXECUTION TIME:
1.06852
-- TEST CASE 1:
---- input:
[6.2,7.3,7.0,7.5,8.9]
[75,76,74,73,72]
100
---- correct output:
[2 0 3]
---- user output:

-- TEST CASE 2:
---- input:
[7.4,7.6,7.5,7.2,7.2,7.3,7.8]
[60,80,55,58,61,70,79]
80
---- correct output:
[5 0 2]
---- user output:

-- TEST CASE 3:
---- input:
[8.2,6.9,7.0,6.5,7.4,8.5,7.6,6.9,4.5,5.5]
[90,40,70,35,100,110,85,99,100,110]
120
---- correct output:
[5 1 4]
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-07 09:08:04) 
-- CODE:
from numpy import*
#Leitura dos Valores
MF = array(eval(input("Medias finais de cada aluno: ")))
freq = array(eval(input("Frequencia dos alunos: ")))
CH = int(input("Carga Horaria da disciplina: "))
#Resultado final
resultado = zeros(3, dtype = int)
#Numero de aprovados
for i in range(0, size( MF )):
	if (MF[i] >= 5)and(freq[i] > 0.75 * CH):
		resultado[0] = resultado[0] + 1

		
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-07 09:08:36) 
-- CODE:
from numpy import*
#Leitura dos Valores
MF = array(eval(input("Medias finais de cada aluno: ")))
freq = array(eval(input("Frequencia dos alunos: ")))
CH = int(input("Carga Horaria da disciplina: "))
#Resultado final
resultado = zeros(3, dtype = int)
#Numero de aprovados
for i in range(0, size( MF )):
	if (MF[i] >= 5) and (freq[i] >= 0.75 * CH):
		resultado[0] = resultado[0] + 1

		
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-07 09:13:09) 
-- CODE:
from numpy import*
#Leitura dos Valores
MF = array(eval(input("Medias finais de cada aluno: ")))
freq = array(eval(input("Frequencia dos alunos: ")))
CH = int(input("Carga Horaria da disciplina: "))
#Resultado final
resultado = zeros(3, dtype = int)
#Numero de aprovados
for i in range(0, size( MF )):
	if (MF[i] >= 5) and (freq[i] >= 0.75 * CH):
		resultado[0] = resultado[0] + 1
#Numero de reprovados por nota
	elif(MF[i] < 5) and (freq[i] >= 0.75 * CH):
		resultado[1] = resultado[1] + 1
#Numero de reprovados por frequencia
	else(resultado[2] = resultado[2] + 1)

		
		
		
		
		

		
	
-- ERROR:
File "XXXX", line 16
    else(resultado[2] = resultado[2] + 1)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-07 09:13:26) 
-- CODE:
from numpy import*
#Leitura dos Valores
MF = array(eval(input("Medias finais de cada aluno: ")))
freq = array(eval(input("Frequencia dos alunos: ")))
CH = int(input("Carga Horaria da disciplina: "))
#Resultado final
resultado = zeros(3, dtype = int)
#Numero de aprovados
for i in range(0, size( MF )):
	if (MF[i] >= 5) and (freq[i] >= 0.75 * CH):
		resultado[0] = resultado[0] + 1
#Numero de reprovados por nota
	elif(MF[i] < 5) and (freq[i] >= 0.75 * CH):
		resultado[1] = resultado[1] + 1
#Numero de reprovados por frequencia
	else(resultado[2] = resultado[2] + 1):
		
print(resultado)

		
		
		
		
		

		
	
-- ERROR:
File "XXXX", line 16
    else(resultado[2] = resultado[2] + 1):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-07 09:13:39) 
-- CODE:
from numpy import*
#Leitura dos Valores
MF = array(eval(input("Medias finais de cada aluno: ")))
freq = array(eval(input("Frequencia dos alunos: ")))
CH = int(input("Carga Horaria da disciplina: "))
#Resultado final
resultado = zeros(3, dtype = int)
#Numero de aprovados
for i in range(0, size( MF )):
	if (MF[i] >= 5) and (freq[i] >= 0.75 * CH):
		resultado[0] = resultado[0] + 1
#Numero de reprovados por nota
	elif(MF[i] < 5) and (freq[i] >= 0.75 * CH):
		resultado[1] = resultado[1] + 1
#Numero de reprovados por frequencia
	else:(resultado[2] = resultado[2] + 1)
		
print(resultado)

		
		
		
		
		

		
	
-- ERROR:
File "XXXX", line 16
    else:(resultado[2] = resultado[2] + 1)
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-07 09:13:53) 
-- CODE:
from numpy import*
#Leitura dos Valores
MF = array(eval(input("Medias finais de cada aluno: ")))
freq = array(eval(input("Frequencia dos alunos: ")))
CH = int(input("Carga Horaria da disciplina: "))
#Resultado final
resultado = zeros(3, dtype = int)
#Numero de aprovados
for i in range(0, size( MF )):
	if (MF[i] >= 5) and (freq[i] >= 0.75 * CH):
		resultado[0] = resultado[0] + 1
#Numero de reprovados por nota
	elif(MF[i] < 5) and (freq[i] >= 0.75 * CH):
		resultado[1] = resultado[1] + 1
#Numero de reprovados por frequencia
	else:
		resultado[2] = resultado[2] + 1
		
print(resultado)

		
		
		
		
		

		
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-07 09:14:28) 
-- CODE:
from numpy import*
#Leitura dos Valores
MF = array(eval(input("Medias finais de cada aluno: ")))
freq = array(eval(input("Frequencia dos alunos: ")))
CH = int(input("Carga Horaria da disciplina: "))
#Resultado final
resultado = zeros(3, dtype = int)
#Numero de aprovados
for i in range(0, size( MF )):
	if (MF[i] >= 5) and (freq[i] >= 0.75 * CH):
		resultado[0] = resultado[0] + 1
#Numero de reprovados por nota
	elif(MF[i] < 5) and (freq[i] >= 0.75 * CH):
		resultado[1] = resultado[1] + 1
#Numero de reprovados por frequencia
	else:
		resultado[2] = resultado[2] + 1
		
print(resultado)

		
		
		
		
		

		
	
-- EXECUTION TIME:
1.06091
-- TEST CASE 1:
---- input:
[6.2,7.3,7.0,7.5,8.9]
[75,76,74,73,72]
100
---- correct output:
[2 0 3]
---- user output:
[2 0 3]
-- TEST CASE 2:
---- input:
[7.4,7.6,7.5,7.2,7.2,7.3,7.8]
[60,80,55,58,61,70,79]
80
---- correct output:
[5 0 2]
---- user output:
[5 0 2]
-- TEST CASE 3:
---- input:
[8.2,6.9,7.0,6.5,7.4,8.5,7.6,6.9,4.5,5.5]
[90,40,70,35,100,110,85,99,100,110]
120
---- correct output:
[5 1 4]
---- user output:
[5 1 4]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-07 09:14:31) 
-- CODE:
from numpy import*
#Leitura dos Valores
MF = array(eval(input("Medias finais de cada aluno: ")))
freq = array(eval(input("Frequencia dos alunos: ")))
CH = int(input("Carga Horaria da disciplina: "))
#Resultado final
resultado = zeros(3, dtype = int)
#Numero de aprovados
for i in range(0, size( MF )):
	if (MF[i] >= 5) and (freq[i] >= 0.75 * CH):
		resultado[0] = resultado[0] + 1
#Numero de reprovados por nota
	elif(MF[i] < 5) and (freq[i] >= 0.75 * CH):
		resultado[1] = resultado[1] + 1
#Numero de reprovados por frequencia
	else:
		resultado[2] = resultado[2] + 1
		
print(resultado)

		
		
		
		
		

		
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-07 09:15:38) 
-- CODE:
from numpy import*
#Leitura dos Valores
MF = array(eval(input("Medias finais de cada aluno: ")))
freq = array(eval(input("Frequencia dos alunos: ")))
CH = int(input("Carga Horaria da disciplina: "))
#Resultado final
resultado = zeros(3, dtype = int)
#Numero de aprovados
for i in range(0, size( MF )):
	if (MF[i] >= 5) and (freq[i] >= 0.75 * CH):
		resultado[0] = resultado[0] + 1
#Numero de reprovados por nota
	elif(MF[i] < 5) and (freq[i] >= 0.75 * CH):
		resultado[1] = resultado[1] + 1
#Numero de reprovados por frequencia
	else:
		resultado[2] = resultado[2] + 1
#Impressao dos resultados		
print(resultado)

		
		
		
		
		

		
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 06:17:45) 
-- CODE:
from numpy import*
#Leitura dos Valores
MF = array(eval(input("Medias finais de cada aluno: ")))
freq = array(eval(input("Frequencia dos alunos: ")))
CH = int(input("Carga Horaria da disciplina: "))
#Resultado final
resultado = zeros(3, dtype = int)
#Numero de aprovados
for i in range(0, size( MF )):
	if (MF[i] >= 5) and (freq[i] >= 0.75 * CH):
		resultado[0] = resultado[0] + 1
#Numero de reprovados por nota
	elif(MF[i] < 5) and (freq[i] >= 0.75 * CH):
		resultado[1] = resultado[1] + 1
#Numero de reprovados por frequencia
	else:
		resultado[2] = resultado[2] + 1
#Impressao dos resultados		
print(resultado)

		
		
		
		
		

		
	
-- EXECUTION TIME:
0.966775
-- TEST CASE 1:
---- input:
[6.2,7.3,7.0,7.5,8.9]
[75,76,74,73,72]
100
---- correct output:
[2 0 3]
---- user output:
[2 0 3]
-- TEST CASE 2:
---- input:
[7.4,7.6,7.5,7.2,7.2,7.3,7.8]
[60,80,55,58,61,70,79]
80
---- correct output:
[5 0 2]
---- user output:
[5 0 2]
-- TEST CASE 3:
---- input:
[8.2,6.9,7.0,6.5,7.4,8.5,7.6,6.9,4.5,5.5]
[90,40,70,35,100,110,85,99,100,110]
120
---- correct output:
[5 1 4]
---- user output:
[5 1 4]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 06:34:25) 
-- CODE:
from numpy import*
#Leitura dos Valores
MF = array(eval(input("Medias finais de cada aluno: ")))
freq = array(eval(input("Frequencia dos alunos: ")))
CH = int(input("Carga Horaria da disciplina: "))
#Resultado final
resultado = zeros(3, dtype = int)
#Numero de aprovados
for i in range(0, size( MF )):
	if (MF[i] >= 5) and (freq[i] >= 0.75 * CH):
		resultado[0] = resultado[0] + 1
#Numero de reprovados por nota
	elif(MF[i] < 5) and (freq[i] >= 0.75 * CH):
		resultado[1] = resultado[1] + 1
#Numero de reprovados por frequencia
	else:
		resultado[2] = resultado[2] + 1
#Impressao dos resultados		
print(resultado)

		
		
		
		
		

		
	
-- EXECUTION TIME:
1.3026
-- TEST CASE 1:
---- input:
[6.2,7.3,7.0,7.5,8.9]
[75,76,74,73,72]
100
---- correct output:
[2 0 3]
---- user output:
[2 0 3]
-- TEST CASE 2:
---- input:
[7.4,7.6,7.5,7.2,7.2,7.3,7.8]
[60,80,55,58,61,70,79]
80
---- correct output:
[5 0 2]
---- user output:
[5 0 2]
-- TEST CASE 3:
---- input:
[8.2,6.9,7.0,6.5,7.4,8.5,7.6,6.9,4.5,5.5]
[90,40,70,35,100,110,85,99,100,110]
120
---- correct output:
[5 1 4]
---- user output:
[5 1 4]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
