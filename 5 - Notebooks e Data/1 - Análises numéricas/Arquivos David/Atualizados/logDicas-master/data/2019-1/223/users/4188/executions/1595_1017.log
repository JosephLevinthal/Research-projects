== TEST (2019-03-26 17:21:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("Latitude de G2: ")))
R=6371.01
d=R*arccos(sent(t1)*sen(t2)+cost(t1)*cos(t2)*cos(g1-g2))
print(d)
 

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    d=R*arccos(sent(t1)*sen(t2)+cost(t1)*cos(t2)*cos(g1-g2))
NameError: name 'arccos' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:23:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("Latitude de G2: ")))
R=6371.01
d=R*arccos(sent(t1)*sen(t2)+cost(t1)*cos(t2)*cos(g1-g2))
print(round(d,2))

 

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    d=R*arccos(sent(t1)*sen(t2)+cost(t1)*cos(t2)*cos(g1-g2))
NameError: name 'arccos' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:24:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("Latitude de G2: ")))
R=6371.01
d=R*acos(sint(t1)*sin(t2)+cost(t1)*cos(t2)*cos(g1-g2))
print(round(d,2))

 

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    d=R*acos(sint(t1)*sin(t2)+cost(t1)*cos(t2)*cos(g1-g2))
NameError: name 'sint' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:24:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("Latitude de G2: ")))
R=6371.01
d=R*acos(sint(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1-g2))
print(round(d,2))

 

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    d=R*acos(sint(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1-g2))
NameError: name 'sint' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:25:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("Latitude de G2: ")))
R=6371.01
d=R*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1-g2))
print(round(d,2))

 

-- OUTPUT:
7925.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:25:27) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("Latitude de G2: ")))
R=6371.01
d=R*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1-g2))
print(round(d,2))

 

-- OUTPUT:
7925.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:25:27) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("Latitude de G2: ")))
R=6371.01
d=R*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1-g2))
print(round(d,2))

 

-- EXECUTION TIME:
0.18696
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
Latitude de P1: Latitude de P2: Latitude de G1: Latitude de G2: 7925.3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:25:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("Latitude de G2: ")))
R=6371.01
d=R*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1-g2))
print(round(d,2))

 

-- EXECUTION TIME:
0.147059
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:27:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("Latitude de G2: ")))
R=6371
d=R*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1-g2))
print(round(d,2))

 

-- EXECUTION TIME:
0.204328
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.29
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:27:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("Latitude de G2: ")))
R=6371
d=R*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1-g2))
print(round(d,2))

 

-- EXECUTION TIME:
0.141104
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.29
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:27:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("Latitude de G2: ")))
R=6371
d=R*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1-g2))
print(round(d,2))

 

-- EXECUTION TIME:
0.195431
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.29
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:27:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("Latitude de G2: ")))
R=6371
d=R*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1-g2))
print(round(d,2))

 

-- EXECUTION TIME:
0.236088
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.29
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:27:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("Latitude de G2: ")))
R=6371
d=R*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1-g2))
print(round(d,2))

 

-- EXECUTION TIME:
0.193084
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.29
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:27:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("Latitude de G2: ")))
R=6371
d=R*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1-g2))
print(round(d,2))

 

-- EXECUTION TIME:
0.255577
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.29
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:27:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("Latitude de G2: ")))
R=6371
d=R*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1-g2))
print(round(d,2))

 

-- EXECUTION TIME:
0.348871
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1595/1017/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:27:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("Latitude de G2: ")))
R=6371
d=R*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1-g2))
print(round(d,2))

 

-- EXECUTION TIME:
0.348835
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1595/1017/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:27:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("Latitude de G2: ")))
R=6371
d=R*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1-g2))
print(round(d,2))

 

-- EXECUTION TIME:
0.40043
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1595/1017/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:27:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("Latitude de G2: ")))
R=6371
d=R*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1-g2))
print(round(d,2))

 

-- EXECUTION TIME:
0.315964
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.29
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:28:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("Latitude de G2: ")))
R=6371
d=R*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1-g2))
print(round(d,2))

 

-- EXECUTION TIME:
0.451855
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.29
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:28:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("Latitude de G2: ")))
R=6371
d=R*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1-g2))
print(round(d,2))

 

-- EXECUTION TIME:
0.565283
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.29
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:28:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("Latitude de G2: ")))
R=6371
d=R*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1-g2))
print(round(d,2))

 

-- EXECUTION TIME:
0.581443
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.29
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:28:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("Latitude de G2: ")))
R=6371
d=R*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1-g2))
print(round(d,2))

 

-- EXECUTION TIME:
0.340137
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.29
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:28:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("Latitude de G2: ")))
R=6371
d=R*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1-g2))
print(round(d,2))

 

-- EXECUTION TIME:
0.252899
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1595/1017/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:32:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("Latitude de G2: ")))
R=6371.01
d=R*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1-g2))
print(round(d,2))

 

-- EXECUTION TIME:
0.216126
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:33:13) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("Latitude de G2: ")))
R=6371
d=R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1-g2))
print(round(d,2))

 

-- EXECUTION TIME:
0.141851
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.29
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:33:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("Latitude de G2: ")))
R=6371
d= R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1-g2))
print(round(d,2))

 

-- EXECUTION TIME:
0.202236
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.29
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:33:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("Latitude de G2: ")))
R=6371
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1-g2))
print(round(d,2))

 

-- EXECUTION TIME:
0.206802
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.29
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:33:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("Latitude de G2: ")))
R=6371
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1-g2))
print(round(d,2))

 

-- OUTPUT:
7925.29
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:33:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("Latitude de G2: ")))
R=6371
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1-g2))
print(round(d,2))

 

-- EXECUTION TIME:
0.174795
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.29
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:33:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("Latitude de G2: ")))
R=6371
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1-g2))
print(round(d,2))

 

-- EXECUTION TIME:
0.159034
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.29
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:33:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("Latitude de G2: ")))
R=6371
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1-g2))
print(round(d,2))

 

-- EXECUTION TIME:
0.121745
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.29
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:34:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("Latitude de G2: ")))
R=6371
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1-g2))
print(round(d,2))

 

-- EXECUTION TIME:
0.115623
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.29
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:34:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("Latitude de G2: ")))
R=6371
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1-g2))
print(round(d,2))

 

-- EXECUTION TIME:
0.0995071
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.29
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:34:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("Latitude de G2: ")))
R=6371
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1-g2))
print(round(d,2))

 

-- EXECUTION TIME:
0.218366
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.29
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 13:04:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("Latitude de G2: ")))
R=6371
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1-g2))
print(round(d,2))

 

-- EXECUTION TIME:
0.233825
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.29
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 13:06:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Longitute de P2: ")))
g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("logintude de G2: ")))
R=6371.01
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1-g2))
print(round(d , 2))

 

-- OUTPUT:
7925.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 13:06:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Longitute de P2: ")))
g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("logintude de G2: ")))
R=6371.01
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1-g2))
print(round(d , 2))

 

-- OUTPUT:
7925.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 13:07:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Longitute de P2: ")))
g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("logintude de G2: ")))
R=6371.01
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1-g2))
print(round(d , 2))

 

-- EXECUTION TIME:
0.280998
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 13:09:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Longitute de P2: ")))
g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("logintude de G2: ")))
R=6371.01
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1-g2))
print(round(d , 2))

 

-- EXECUTION TIME:
0.146526
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 13:09:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Longitute de P2: ")))
g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("logintude de G2: ")))
R=6371.01
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1-g2))
print(round(d , 2))

 

-- OUTPUT:
7925.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 13:11:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import radians
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Longitute de P2: ")))
g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("logintude de G2: ")))
R=6371.01
from math import acos
from math import sin
from math import cos
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1-g2))
print(round(d , 2))

 

-- OUTPUT:
7925.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 13:12:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import radians
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Longitute de P2: ")))
g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("logintude de G2: ")))
R=6371.01
from math import acos
from math import sin
from math import cos
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1-g2))
print(round(d , 2))

 

-- EXECUTION TIME:
0.16389
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 13:12:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import radians
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Longitute de P2: ")))
g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("logintude de G2: ")))
R=6371.01
from math import acos
from math import sin
from math import cos
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1-g2))
print(round(d , 2))

 

-- EXECUTION TIME:
0.176231
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 13:13:05) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import radians
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Longitute de P2: ")))
g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("logintude de G2: ")))
R=6371.01
from math import acos
from math import sin
from math import cos
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1-g2))
print(round(d , 2))

 

-- EXECUTION TIME:
0.129823
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 13:15:13) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import radians
t1 = radians(float(input("Latitude de P1: "))) 
t2 = radians(float(input("Longitute de P2: ")))

g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("logintude de G2: ")))

T=6371.01

from math import acos
from math import sin
from math import cos

d = T * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1-g2))
print(round(d , 2))

 

-- EXECUTION TIME:
0.216865
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 13:15:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: "))) 
t2 = radians(float(input("Longitute de P2: ")))

g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("logintude de G2: ")))

T=6371

d = T * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1-g2))
print(round(d , 2))

 

-- OUTPUT:
7925.29
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 13:15:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: "))) 
t2 = radians(float(input("Longitute de P2: ")))

g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("logintude de G2: ")))

T=6371

d = T * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1-g2))
print(round(d , 2))

 

-- EXECUTION TIME:
0.147285
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.29
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 13:16:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *

t1 = radians(float(input("Latitude de P1: "))) 
t2 = radians(float(input("Longitute de P2: ")))

g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("logintude de G2: ")))

T=6371

d = T * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1-g2))
print(round(d , 2))

 

-- EXECUTION TIME:
0.185277
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.29
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 13:17:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *

t1 = radians(float(input("Latitude de P1: "))) 
t2 = radians(float(input("Longitute de P2: ")))

g1 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("logintude de G2: ")))

T=6371

d = T * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1-g2))
print(round(d,2))

 

-- EXECUTION TIME:
0.145708
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.29
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 13:18:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *

t1 = radians(float(input("Latitude de P1: "))) 
g1 = radians(float(input("Longitute de P2: ")))

t2 = radians(float(input("Latitude de G1: ")))
g2 = radians(float(input("logintude de G2: ")))

T=6371

d = T * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1-g2))
print(round(d,2))

 

-- EXECUTION TIME:
0.161149
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
50.44
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
