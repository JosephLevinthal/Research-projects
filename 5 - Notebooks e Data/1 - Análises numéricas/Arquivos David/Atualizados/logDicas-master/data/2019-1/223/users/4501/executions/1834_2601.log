== TEST (2019-06-17 12:16:19) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[3 , 12 ,1 ], [ 12,0, 2 ], [0 , 2 , 3 ]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = dot(frutas ,compras )

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] == max(preco):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-17 12:17:23) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[3 , 12 ,1 ], [ 12,0, 2 ], [0 , 2 , 3 ]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = dot(frutas ,compras )

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[0] == min(preco):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 15:53:23) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[3 , 12 ,1 ], [ 12,0, 2 ], [0 , 2 , 3 ]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = dot("frutas" ,"compras ")

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[0] == m(preco):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 15:55:12) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[3 , 12 ,1 ], [ 12,0, 2 ], [0 , 2 , 3 ]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = dot(frutas,compras )

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[0] == min(preco):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 16:01:58) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[3 , 12 ,1 ], [ 12,0, 2 ], [0 , 2 , 3 ]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas),compras )

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[0] == min(preco):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 16:03:15) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[3 , 12 ,1 ], [ 12,0, 2 ], [0 , 2 , 3 ]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas),compras )

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] == max(preco):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 16:03:37) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[3 , 12 ,1 ], [ 12,0, 2 ], [0 , 2 , 3 ]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas),compras )

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] == max(preco):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 16:04:09) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[3 , 12 ,1 ], [ 12,0, 2 ], [0 , 2 , 3 ]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas),compras )

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] != max(preco):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 16:04:34) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[3 , 12 ,1 ], [ 12,0, 2 ], [0 , 2 , 3 ]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas),compras )

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] != min(preco):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 16:20:51) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12 ,1 ], [ 12, 0, 2 ], [ 0, 2, 3 ]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas),compras )

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[0] != max(preco):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 16:31:30) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12 ,1 ], [ 12, 0, 2 ], [ 0, 2, 3 ]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas),compras )

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] != max(preco):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 17:09:19) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12 ,1 ], [ 12, 0, 2 ], [ 0, 2, 3 ]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas),compras.T )

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] != max(preco):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-18 17:11:09) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12 ,1 ], [ 12, 0, 2 ], [ 0, 2, 3 ]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas),compras)

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] != max(preco):
    print("banana")
else:
    print("caqui")

-- EXECUTION TIME:
0.946318
-- TEST CASE 1:
---- input:
nada
---- correct output:
abacate:  2.9
banana:  0.5
caqui:  8.9
caqui

---- user output:
abacate:  2.9
banana:  0.5
caqui:  8.9
banana
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 17:16:17) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12 ,1 ], [ 12, 0, 2 ], [ 0, 2, 3 ]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas),compras)

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] == max(preco):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 17:17:13) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12 ,1 ], [ 12, 0, 2 ], [ 0, 2, 3 ]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas),compras)

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] == max(preco):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 17:20:57) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12 ,1 ], [ 12, 0, 2 ], [ 0, 2, 3 ]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas),compras)

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] == max(preco):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 17:26:17) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12 ,1 ], [ 12, 0, 2 ], [ 0, 2, 3 ]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = dot(compras,inv(frutas))

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] != max(preco):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 17:34:20) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12 ,1 ], [ 12, 0, 2 ], [ 1, 2, 3 ]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = dot(compras,inv(frutas))

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] == max(preco):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 17:34:44) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12 ,1 ], [ 12, 0, 2 ], [ 1, 2, 3 ]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = dot(compras,inv(frutas))

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] != max(preco):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 17:35:53) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12 ,0 ], [ 12, 0, 2 ], [ 1, 2, 3 ]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = dot(compras,inv(frutas))

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] != max(preco):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 22:49:27) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[3,12,1], [12,0,2], [0,2,3]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = dot(compras,inv(frutas))

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] != max(preco):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 22:50:31) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[3,12,1], [12,0,2], [0,2,3]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas),compras)

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] == max(preco):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 22:50:52) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[3,12,1], [12,0,2], [0,2,3]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas),compras)

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] != max(preco):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-21 21:16:19) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[3,12,1], [12,0,2], [0,2,3]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas),compras)

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] != max(preco):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-21 21:31:22) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS"""
from numpy import*
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[3,12,1], [12,0,2], [0,2,3]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = solve(inv(frutas),compras)

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] != max(preco):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-21 21:31:41) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS"""
from numpy import*
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[3,12,1], [12,0,2], [0,2,3]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas),compras)

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] != max(preco):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 22:42:29) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS"""
from numpy import*
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[3,12,1], [12,0,2], [0,2,3]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas),compras)

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] != max(preco):
    print("banana")
else:
    print("caqui")

-- EXECUTION TIME:
1.19869
-- TEST CASE 1:
---- input:
nada
---- correct output:
abacate:  2.9
banana:  0.5
caqui:  8.9
caqui

---- user output:
abacate:  2.9
banana:  0.5
caqui:  8.9
banana
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 22:43:24) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS"""
from numpy import*
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[3,12,1], [12,0,2], [0,2,3]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas),compras)

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] == max(preco):
    print("banana")
else:
    print("caqui")

-- EXECUTION TIME:
1.15485
-- TEST CASE 1:
---- input:
nada
---- correct output:
abacate:  2.9
banana:  0.5
caqui:  8.9
caqui

---- user output:
abacate:  2.9
banana:  0.5
caqui:  8.9
caqui
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 14:35:06) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS"""
from numpy import*
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[3,12,1], [12,0,2], [0,2,3]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas),compras)

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] == max(preco):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 14:35:17) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS"""
from numpy import*
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[3,12,1], [12,0,2], [0,2,3]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas),compras)

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] == max(preco):
    print("banana")
else:
    print("caqui")

-- EXECUTION TIME:
1.17442
-- TEST CASE 1:
---- input:
nada
---- correct output:
abacate:  2.9
banana:  0.5
caqui:  8.9
caqui

---- user output:
abacate:  2.9
banana:  0.5
caqui:  8.9
caqui
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
