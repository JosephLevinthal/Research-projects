== SUBMITION (2019-03-26 16:37:37) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=input("Insira o texto:")

print(a.lower())

-- EXECUTION TIME:
0.18848
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
9173
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
1010
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 16:37:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=input("Insira o texto:")

print(a.lower())

-- EXECUTION TIME:
0.214493
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
9173
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
1010
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 16:39:13) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=input("Insira o texto:")

print(a.lower())


-- EXECUTION TIME:
0.196825
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
9173
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
1010
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 16:41:08) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=input("Insira o texto:")

print(a.lower())

-- EXECUTION TIME:
0.146186
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
9173
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
1010
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:41:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=input("Insira o texto:")

print(a.lower())

-- OUTPUT:
9173
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:41:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=input("Insira o texto:")

print(a.lower())

-- OUTPUT:
9173
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 16:43:27) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=input("Insira o texto:")

print(a.lower())

-- EXECUTION TIME:
0.144561
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
9173
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
1010
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 16:51:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num =int(input("nujmero inteiro de quatro digitos:"))

n = num // 1 % 10 
u = num // 10 % 10
p = num // 100 % 10


qpun=q+p+u+n

print (qpun)


-- EXECUTION TIME:
0.192133
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1595/842/main.py", line 11, in <module>
    qpun=q+p+u+n
NameError: name 'q' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:51:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num =int(input("nummero inteiro de quatro digitos:"))

n = num // 1 % 10 
u = num // 10 % 10
p = num // 100 % 10


qpun=q+p+u+n

print (qpun)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    qpun=q+p+u+n
NameError: name 'q' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:52:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num =int(input("nummero inteiro de quatro digitos:"))

n = num // 1 % 10 
u = num // 10 % 10
p = num // 100 % 10


qpun=q+p+u+n

print (qpun)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    qpun=q+p+u+n
NameError: name 'q' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 16:52:05) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num =int(input("nummero inteiro de quatro digitos:"))

n = num // 1 % 10 
u = num // 10 % 10
p = num // 100 % 10


qpun=q+p+u+n

print (qpun)


-- EXECUTION TIME:
0.180903
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1595/842/main.py", line 11, in <module>
    qpun=q+p+u+n
NameError: name 'q' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 16:52:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num =int(input("nummero inteiro de quatro digitos:"))

n = num // 1 % 10 
u = num // 10 % 10
p = num // 100 % 10


qpun=q+p+u+n

print (qpun)


-- EXECUTION TIME:
0.133686
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1595/842/main.py", line 11, in <module>
    qpun=q+p+u+n
NameError: name 'q' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:04:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num =int(input("nummero inteiro de quatro digitos:"))

n = num // 1 % 10 
u = num // 10 % 10
p = num // 100 % 10
n = num // 1000 % 10

qpun=q+p+u+n

print (qpun)


-- EXECUTION TIME:
0.128287
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1595/842/main.py", line 11, in <module>
    qpun=q+p+u+n
NameError: name 'q' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 17:04:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num =int(input("nummero inteiro de quatro digitos:"))

n = num // 1 % 10 
u = num // 10 % 10
p = num // 100 % 10
n = num // 1000 % 10

qpun=q+p+u+n

print (qpun)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    qpun=q+p+u+n
NameError: name 'q' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:04:21) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num =int(input("nummero inteiro de quatro digitos:"))

n = num // 1 % 10 
u = num // 10 % 10
p = num // 100 % 10
n = num // 1000 % 10

qpun=q+p+u+n

print (qpun)


-- EXECUTION TIME:
0.14816
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1595/842/main.py", line 11, in <module>
    qpun=q+p+u+n
NameError: name 'q' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 17:04:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num =int(input("nummero inteiro de quatro digitos:"))

q = num // 1 % 10 
p = num // 10 % 10
u = num // 100 % 10
n = num // 1000 % 10

qpun=q+p+u+n

print (qpun)


-- EXECUTION TIME:
0.170404
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
