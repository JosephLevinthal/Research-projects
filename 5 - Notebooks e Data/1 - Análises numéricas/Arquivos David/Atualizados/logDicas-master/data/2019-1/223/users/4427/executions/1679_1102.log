== TEST (2019-05-01 16:39:02) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque?: "))
h=float(input("Qual o nível o combustivel?:"))
r=float(input("Qual o raio?: "))

print ("Entradas: ,H, ,h, ,r")

x=(float(input("Qual a altura da calota?:")))

Vc=pi*(r**2)*x
Ve=(4/3)*pi*(r**3)
Vc=(pi/3)*(x**2).((3*r)-x)




-- ERROR:
File "XXXX", line 18
    Vc=(pi/3)*(x**2).((3*r)-x)
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 16:44:38) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nível o combustivel (m^3)?:"))
r=float(input("Qual o raio (m)?: "))

print ("Entradas: ,H, ,h, ,r")

x=(float(input("Qual a altura da calota?:")))

Vc=pi*(r**2)*x
Ve=(4/3)*pi*(r**3)
Vc=(pi/3)*(x**2)*((3*r)-x)




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    x=(float(input()))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 16:45:32) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nível o combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))

print ("Entradas: ,H, ,h, ,r")

x=(float(input("Qual a altura da calota?:")))

Vc=pi*(r**2)*x
Ve=(4/3)*pi*(r**3)
Vc=(pi/3)*(x**2)*((3*r)-x)




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    x=(float(input()))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 16:46:07) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))

print ("Entradas: ,H, ,h, ,r")

x=(float(input("Qual a altura da calota?:")))

Vc=pi*(r**2)*x
Ve=(4/3)*pi*(r**3)
Vc=(pi/3)*(x**2)*((3*r)-x)




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    x=(float(input()))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 16:49:09) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combust
-- ERROR:
File "XXXX", line 9
    h=float(input("Qual o nivel do combust
                                         ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 16:49:09) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))

print ("Entradas: ,H, ,h, ,r")

x=(float(input("Qual a altura da calota?:")))

Vc=pi*(r**2)*x
Ve=(4/3)*pi*(r**3)
Vc=(pi/3)*(x**2)*((3*r)-x)




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    x=(float(input()))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 16:49:48) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))

print ("Entradas:", H"," ,h, "",r")


x=(float(input("Qual a altura da calota?:")))

Vc=pi*(r**2)*x
Ve=(4/3)*pi*(r**3)
Vc=(pi/3)*(x**2)*((3*r)-x)




-- ERROR:
File "XXXX", line 12
    print ("Entradas:", H"," ,h, "",r")
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 16:50:42) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))

print("Entradas:", H, ",", h, ",", r)


x=(float(input("Qual a altura da calota?:")))

Vc=pi*(r**2)*x
Ve=(4/3)*pi*(r**3)
Vc=(pi/3)*(x**2)*((3*r)-x)




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 15, in <module>
    x=(float(input()))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 16:56:54) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))
x=(float(input("Qual a altura da calota?:")))

print("Entradas:", H, ",", h, ",", r)

if (H<0 and h<0 and r<0):
	print("Entradas invalidas")

Vc=pi*(r**2)*x
Ve=(4/3)*pi*(r**3)
Vc=(pi/3)*(x**2)*((3*r)-x)




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    x=(float(input()))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 16:57:55) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))
x=(float(input("Qual a altura da calota?:")))

print("Entradas:", H, ",", h, ",", r)

if (H<0 or h<0 or r<0):
	print("Entradas invalidas")

Vc=pi*(r**2)*x
Ve=(4/3)*pi*(r**3)
Vc=(pi/3)*(x**2)*((3*r)-x)




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    x=(float(input()))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 21:03:47) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))
x=1

print("Entradas:", H, ",", h, ",", r)

if (H<0 or h<0 or r<0):
	print("Entradas invalidas")

if (H>h and H>(2*r)):
	Vc=pi*(r**2)*x
	Ve=(4/3)*pi*(r**3)
	Vcl=(pi/3)*(x**2)*((3*r)-x)
	
	elif (V1=Ve-Vcl):
		print ("Volume:",V1"litros")




-- ERROR:
File "XXXX", line 23
    elif (V1=Ve-Vcl):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 21:05:16) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))
x=1

print("Entradas:", H, ",", h, ",", r)

if (H<0 or h<0 or r<0):
	print("Entradas invalidas")

if (H>h and H>(2*r)):
	Vc=pi*(r**2)*x
	Ve=(4/3)*pi*(r**3)
	Vcl=(pi/3)*(x**2)*((3*r)-x)
	
	elif V1=Ve-Vcl:
		print ("Volume:",V1"litros")




-- ERROR:
File "XXXX", line 23
    elif V1=Ve-Vcl:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 21:15:46) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))
x=1

print("Entradas:", H, ",", h, ",", r)

if (H<0 or h<0 or r<0):
	print("Entradas invalidas")

if (H>h and H>(2*r)):
	Vc=pi*(r**2)*x
	Ve=(4/3)*pi*(r**3)
	Vcl=(pi/3)*(x**2)*((3*r)-x)
	
	elif V1=(Ve/2)*1000:
		print ("Volume:",V1"litros")




-- ERROR:
File "XXXX", line 23
    elif V1=(Ve/2)*1000:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 21:18:57) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))
x=1

print("Entradas:", H, ",", h, ",", r)

Vc=pi*(r**2)*x
Ve=(4/3)*pi*(r**3)
Vcl=(pi/3)*(x**2)*((3*r)-x)

if (H<0 or h<0 or r<0):
	print("Entradas invalidas")
	
if (H>h and H>(2*r)):

	elif V1=(Ve/2)*1000:
		print ("Volume:",V1"litros")




-- ERROR:
File "XXXX", line 24
    elif V1=(Ve/2)*1000:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 21:44:28) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))


print("Entradas:", H, ",", h, ",", r)

Vc=pi*(r**2)*h
Ve=


if (H<0 or h<0 or r<0):
	print("Entradas invalidas")
	elif (H<r):
		Vol=(1/3)*pi*(h**2)*((3*r)-h)
	elif (h<H-r):
		Vol=(2/3)*pi*(r**3)+pi*(r**2)*(h-r)
	elif (h<=H):
		Vol=(4/3)*pi*(r**3)+pi*(r**2)*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
	print(round(Vol,3))





-- ERROR:
File "XXXX", line 16
    Ve=
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 21:45:05) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))

print("Entradas:", H, ",", h, ",", r)

if (H<0 or h<0 or r<0):
	print("Entradas invalidas")
	elif (H<r):
		Vol=(1/3)*pi*(h**2)*((3*r)-h)
	elif (h<H-r):
		Vol=(2/3)*pi*(r**3)+pi*(r**2)*(h-r)
	elif (h<=H):
		Vol=(4/3)*pi*(r**3)+pi*(r**2)*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
	print(round(Vol,3))





-- ERROR:
File "XXXX", line 16
    elif (H<r):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 21:47:57) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))

print("Entradas:", H, ",", h, ",", r)

if (H<0 or h<0 or r<0):
	print("Entradas invalidas")
	elif (H<r):
		Vol=(1/3)*pi*(h**2)*((3*r)-h)
	elif (h<H-r):
		Vol=(2/3)*pi*(r**3)+pi*(r**2)*(h-r)
	elif (h<=H):
		Vol=(4/3)*pi*(r**3)+pi*(r**2)*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
	print(round(Vol,3))





-- EXECUTION TIME:
0.232635
-- ERROR:
  File "/home/codebench/codes/1679/1102/main.py", line 16
    elif (H<r):
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 21:48:02) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))

print("Entradas:", H, ",", h, ",", r)

if (H<0 or h<0 or r<0):
	print("Entradas invalidas")
	elif (H<r):
		Vol=(1/3)*pi*(h**2)*((3*r)-h)
	elif (h<H-r):
		Vol=(2/3)*pi*(r**3)+pi*(r**2)*(h-r)
	elif (h<=H):
		Vol=(4/3)*pi*(r**3)+pi*(r**2)*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
	print(round(Vol,3))





-- ERROR:
File "XXXX", line 16
    elif (H<r):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 21:48:36) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))

print("Entradas:", H, ",", h, ",", r)

if (H<0 or h<0 or r<0):
	print("Entradas invalidas")
	elif (H < r):
		Vol=(1/3)*pi*(h**2)*((3*r)-h)
	elif (h < H - r):
		Vol=(2/3)*pi*(r**3)+pi*(r**2)*(h-r)
	elif (h <= H):
		Vol=(4/3)*pi*(r**3)+pi*(r**2)*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
	print(round(Vol,3))





-- ERROR:
File "XXXX", line 16
    elif (H < r):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:07:24) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))

print("Entradas:", H, ",", h, ",", r)

if (H<0 or h<0 or r<0):
	print("Entradas invalidas")
	elif (H < r):
		Vol=(1/3)*pi*(h**2)*((3*r)-h)
	elif (h < H - r):
		Vol=(2/3)*pi*(r**3)+pi*(r**2)*(h-r)
	elif (h <= H):
		Vol=(4/3)*pi*(r**3)+pi*(r**2)*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
	print(round(Vol,3))





-- ERROR:
File "XXXX", line 16
    elif (H < r):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:07:38) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))

print("Entradas:", H, ",", h, ",", r)

if (H<0 or h<0 or r<0):
	print("Entradas invalidas")
	elif (h < r):
		Vol=(1/3)*pi*(h**2)*((3*r)-h)
	elif (h < H - r):
		Vol=(2/3)*pi*(r**3)+pi*(r**2)*(h-r)
	elif (h <= H):
		Vol=(4/3)*pi*(r**3)+pi*(r**2)*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
	print(round(Vol,3))





-- ERROR:
File "XXXX", line 16
    elif (h < r):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:09:29) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))

print("Entradas:", H, ",", h, ",", r)

if (H<0 or h<0 or r<0):
	print("Entradas invalidas")
	elif (H < r):
		Vol=(1/3)*pi*(h**2)*((3*r)-h)
	elif (h < H - r):
		Vol=(2/3)*pi*(r**3)+pi*(r**2)*(h-r)
	elif (h <= H):
		Vol=(4/3)*pi*(r**3)+pi*(r**2)*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
	print(round(Vol,3))





-- ERROR:
File "XXXX", line 16
    elif (H < r):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:41:42) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))

print("Entradas:", H, ",", h, ",", r)

if (H>0 and h>0 and r>0 and H>h and H>2*r):
	elif (h < r):
		V1=(1/3)*pi*h**2*(3*r-h)
		Vol=V1*1000
	elif (h<H-r):
		V1=(2/3)*pi*r**3+pi*r**2*(h-r)
		Vol=V1*1000
	elif (h<=H):
		V1=(4/3)*pi*r**3+pi*r**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
		Vol=V1*1000
		print("Volume:", round(v,3),"litros")
else:
	Vol="Entradas invalidas"
	print(Vol)





-- ERROR:
File "XXXX", line 15
    elif (h < r):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:42:29) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))

print("Entradas:", H, ",", h, ",", r)

if (H>0 and h>0 and r>0 and H>h and H>2*r):
	elif (h<r):
		V1=(1/3)*pi*h**2*(3*r-h)
		Vol=V1*1000
	elif (h<H-r):
		V1=(2/3)*pi*r**3+pi*r**2*(h-r)
		Vol=V1*1000
	elif (h<=H):
		V1=(4/3)*pi*r**3+pi*r**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
		Vol=V1*1000
		print("Volume:", round(v,3),"litros")
else:
	Vol="Entradas invalidas"
	print(Vol)





-- ERROR:
File "XXXX", line 15
    elif (h<r):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:43:03) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))

print("Entradas:", H, ",", h, ",", r)

if (H>0 and h>0 and r>0 and H>h and H>2*r):
	elif (h<r):
		V1=(1/3)*pi*h**2*(3*r-h)
		Vol=V1*1000
	elif (h<H-r):
		V1=(2/3)*pi*r**3+pi*r**2*(h-r)
		Vol=V1*1000
	elif (h<=H):
		V1=(4/3)*pi*r**3+pi*r**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
		Vol=V1*1000
		print("Volume:", round(v,3),"litros")
else:
	Vol="Entradas invalidas"
	print(Vol)





-- ERROR:
File "XXXX", line 15
    elif (h<r):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:43:56) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))

print("Entradas:", H, ",", h, ",", r)

if (H>0 and h>0 and r>0 and H>h and H>2*r):
	elif (h>r):
		V1=(1/3)*pi*h**2*(3*r-h)
		Vol=V1*1000
	elif (h<H-r):
		V1=(2/3)*pi*r**3+pi*r**2*(h-r)
		Vol=V1*1000
	elif (h<=H):
		V1=(4/3)*pi*r**3+pi*r**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
		Vol=V1*1000
		print("Volume:", round(v,3),"litros")
else:
	Vol="Entradas invalidas"
	print(Vol)





-- ERROR:
File "XXXX", line 15
    elif (h>r):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:44:08) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))

print("Entradas:", H, ",", h, ",", r)

if (H>0 and h>0 and r>0 and H>h and H>2*r):
	elif (h<r):
		V1=(1/3)*pi*h**2*(3*r-h)
		Vol=V1*1000
	elif (h<H-r):
		V1=(2/3)*pi*r**3+pi*r**2*(h-r)
		Vol=V1*1000
	elif (h<=H):
		V1=(4/3)*pi*r**3+pi*r**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
		Vol=V1*1000
		print("Volume:", round(v,3),"litros")
else:
	Vol="Entradas invalidas"
	print(Vol)





-- ERROR:
File "XXXX", line 15
    elif (h<r):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:45:11) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))

print("Entradas:", H, ",", h, ",", r)

if (H>0 and h>0 and r>0 and H>h and H>2*r):
	if(h<r):
		V1=(1/3)*pi*h**2*(3*r-h)
		Vol=V1*1000
	elif (h<H-r):
		V1=(2/3)*pi*r**3+pi*r**2*(h-r)
		Vol=V1*1000
	elif (h<=H):
		V1=(4/3)*pi*r**3+pi*r**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
		Vol=V1*1000
		print("Volume:", round(v,3),"litros")
else:
	Vol="Entradas invalidas"
	print(Vol)





-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:47:12) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))

print("Entradas:", H, ",", h, ",", r)

if (H>0 and h>0 and r>0 and H>h and H>2*r):
	if(h<r):
		V1=(1/3)*pi*h**2*(3*r-h)
		Vol=V1*1000
	elif (h<H-r):
		V1=(2/3)*pi*r**3+pi*r**2*(h-r)
		Vol=V1*1000
	elif (h<=H):
		V1=(4/3)*pi*r**3+pi*r**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
		Vol=V1*1000
		print("Volume:",round(Vol,3),"litros")
else:
	Vol="Entradas invalidas"
	print(Vol)





-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 23:47:31) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))

print("Entradas:", H, ",", h, ",", r)

if (H>0 and h>0 and r>0 and H>h and H>2*r):
	if(h<r):
		V1=(1/3)*pi*h**2*(3*r-h)
		Vol=V1*1000
	elif (h<H-r):
		V1=(2/3)*pi*r**3+pi*r**2*(h-r)
		Vol=V1*1000
	elif (h<=H):
		V1=(4/3)*pi*r**3+pi*r**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
		Vol=V1*1000
		print("Volume:",round(Vol,3),"litros")
else:
	Vol="Entradas invalidas"
	print(Vol)





-- EXECUTION TIME:
0.140556
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:48:30) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))

print("Entradas:", H, ",", h, ",", r)

if (H>0 and h>0 and r>0 and H>h and H>2*r):
	if(h<r):
		V1=(1/3)*pi*h**2*(3*r-h)
		Vol=V1*1000
	elif (h<H-r):
		V1=(2/3)*pi*r**3+pi*r**2*(h-r)
		Vol=V1*1000
	elif (h<=H):
		V1=(4/3)*pi*r**3+pi*r**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
		Vol=V1*1000
		print("Volume:",round(Vol,3),"litros")
else:
	Vol="Entradas invalidas"
	print(Vol)





-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:49:10) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))

print("Entradas:", H, ",", h, ",", r)

if (H>0 and h>0 and r>0 and H>h and H>2*r):
	if(h<r):
		V1=(1/3)*pi*h**2*(3*r-h)
		Vol=V1*1000
	elif (h<H-r):
		V1=(2/3)*pi*r**3+pi*r**2*(h-r)
		Vol=V1*1000
	elif (h<=H):
		V1=(4/3)*pi*r**3+pi*r**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
		Vol=V1*1000
		print("Volume:",round(Vol,3),"litros")
else:
	Vol="Entradas invalidas"
	print(Vol)





-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 23:49:31) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))

print("Entradas:", H, ",", h, ",", r)

if (H>0 and h>0 and r>0 and H>h and H>2*r):
	if(h<r):
		V1=(1/3)*pi*h**2*(3*r-h)
		Vol=V1*1000
	elif (h<H-r):
		V1=(2/3)*pi*r**3+pi*r**2*(h-r)
		Vol=V1*1000
	elif (h<=H):
		V1=(4/3)*pi*r**3+pi*r**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
		Vol=V1*1000
		print("Volume:",round(Vol,3),"litros")
else:
	Vol="Entradas invalidas"
	print(Vol)





-- EXECUTION TIME:
0.243246
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 23:50:54) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))

print("Entradas:", H, ",", h, ",", r)

if (H>0 and h>0 and r>0 and H>h and H>2*r):
if(h<r):
V1=(1/3)*pi*h**2*(3*r-h)
Vol=V1*1000
elif (h<H-r):
V1=(2/3)*pi*r**3+pi*r**2*(h-r)
Vol=V1*1000
elif (h<=H):
V1=(4/3)*pi*r**3+pi*r**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
Vol=V1*1000
print("Volume:",round(Vol,3),"litros")
else:
Vol="Entradas invalidas"
print(Vol)





-- EXECUTION TIME:
0.191293
-- ERROR:
  File "/home/codebench/codes/1679/1102/main.py", line 15
    if(h<r):
     ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 23:52:24) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))

print("Entradas:", H, ",", h, ",", r)

if (H>0 and h>0 and r>0 and H>h and H>2*r):
	if(h<r):
		V1=(1/3)*pi*h**2*(3*r-h)
		Vol=V1*1000
		elif (h<H-r):
			V1=(2/3)*pi*r**3+pi*r**2*(h-r)
			Vol=V1*1000
		elif (h<=H):
			V1=(4/3)*pi*r**3+pi*r**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
			Vol=V1*1000
			print("Volume:",round(Vol,3),"litros")
		else:
			Vol="Entradas invalidas"
			print(Vol)





-- EXECUTION TIME:
0.170908
-- ERROR:
  File "/home/codebench/codes/1679/1102/main.py", line 18
    elif (h<H-r):
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 23:53:08) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))

print("Entradas:", H, ",", h, ",", r)

if (H>0 and h>0 and r>0 and H>h and H>2*r):
	if(h<r):
		V1=(1/3)*pi*h**2*(3*r-h)
		Vol=V1*1000
		elif (h<H-r):
			V1=(2/3)*pi*r**3+pi*r**2*(h-r)
			Vol=V1*1000
		elif (h<=H):
			V1=(4/3)*pi*r**3+pi*r**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
			Vol=V1*1000
			print("Volume:",round(Vol,3),"litros")
		else:
			Vol="Entradas invalidas"
			print(Vol)





-- EXECUTION TIME:
0.163386
-- ERROR:
  File "/home/codebench/codes/1679/1102/main.py", line 18
    elif (h<H-r):
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 23:55:27) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))

print("Entradas:", H, ",", h, ",", r)

if (H>0 and h>0 and r>0 and H>h and H>2*r):
	if(h<r):
		V1=(1/3)*pi*h**2*(3*r-h)
		Vol=V1*1000
	elif (h<H-r):
		V1=(2/3)*pi*r**3+pi*r**2*(h-r)
		Vol=V1*1000
	elif (h<=H):
		V1=(4/3)*pi*r**3+pi*r**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
		Vol=V1*1000
		print("Volume:",round(Vol,3),"litros")
	else:
		Vol="Entradas invalidas"
		print(Vol)





-- EXECUTION TIME:
0.166728
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 23:55:37) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))

print("Entradas:", H, ",", h, ",", r)

if (H>0 and h>0 and r>0 and H>h and H>2*r):
	if(h<r):
		V1=(1/3)*pi*h**2*(3*r-h)
		Vol=V1*1000
	elif (h<H-r):
		V1=(2/3)*pi*r**3+pi*r**2*(h-r)
		Vol=V1*1000
	elif (h<=H):
		V1=(4/3)*pi*r**3+pi*r**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
		Vol=V1*1000
		print("Volume:",round(Vol,3),"litros")
	else:
		Vol="Entradas invalidas"
		print(Vol)





-- EXECUTION TIME:
0.20307
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 08:05:57) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))

print("Entradas:", H, ",", h, ",", r)

if (H>0 and h>0 and r>0 and H>h and H>2*r):
	if(h<r):
		V1=(1/3)*pi*h**2*(3*r-h)
		Vol=V1*1000
	elif (h<H-r):
		V1=(2/3)*pi*r**3+pi*r**2*(h-r)
		Vol=V1*1000
	elif (h<=H):
		V1=(4/3)*pi*r**3+pi*r**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
		Vol=V1*1000
		print("Volume:",round(Vol,3),"litros")
else:
	Vol="Entradas invalidas"
	print(Vol)





-- EXECUTION TIME:
0.107321
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 08:08:02) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))

print("Entradas:", H, ",", h, ",", r)

if (H>0 and h>0 and r>0 and H>h and H>2*r):
	if(h<r):
		V1=(1/3)*pi*h**2*(3*r-h)
		Vol=V1*1000
	elif (h<H-r):
		V1=(2/3)*pi*r**3+pi*r**2*(h-r)
		Vol=V1*1000
	elif (h<=H):
		V1=(4/3)*pi*r**3+pi*r**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
		Vol=V1*1000
		print("Volume:",round(Vol,3),"litros")
else:
	Vol="Entradas invalidas"
	print(Vol)





-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 08:08:37) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))

print("Entradas:", H, ",", h, ",", r)

if (H>0 and h>0 and r>0 and H>h and H>2*r):
	if(h<r):
		V1=(1/3)*pi*h**2*(3*r-h)
		Vol=V1*1000
	elif (h<H-r):
		V1=(2/3)*pi*r**3+pi*r**2*(h-r)
		Vol=V1*1000
	elif (h<=H):
		V1=(4/3)*pi*r**3+pi*r**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
		Vol=V1*1000
		print("Volume:",round(Vol,3),"litros")
else:
	Vol="Entradas invalidas"
	print(Vol)





-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 08:09:46) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))

print("Entradas:", H, ",", h, ",", r)

if (H>0 and h>0 and r>0 and H>h and H>2*r):
	if(h<r):
		V1=(1/3)*pi*h**2*(3*r-h)
		Vol=V1*1000
	elif (h<H-r):
		V1=(2/3)*pi*r**3+pi*r**2*(h-r)
		Vol=V1*1000
	elif (h<=H):
		V1=(4/3)*pi*r**3+pi*r**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
		Vol=V1*1000
		print("Volume:",round(Vol,3),"litros")
else:
	Vol="Entradas invalidas"
	print(Vol)





-- EXECUTION TIME:
0.151708
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 08:17:42) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))

print("Entradas:", H, ",", h, ",", r)

if (H>0 and h>0 and r>0 and H>h and H>2*r):
	if(h<r):
		V1=(1/3)*pi*h**2*(3*r-h)
		Vol=V1*1000
	elif (h<H-r):
		V1=(2/3)*pi*r**3+pi*r**2*(h-r)
		Vol=V1*1000
	elif (h<=H):
		V1=(4/3)*pi*r**3+pi*r**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
		Vol=V1*1000
		print("Volume:",round(Vol,3),"litros")
else:
	Vol="Entradas invalidas"
	print(Vol)





-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 08:19:02) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))

print("Entradas:", H, ",", h, ",", r)

if (H>0 and h>0 and r>0 and H>h and H>2*r):
	if(h<r):
		V1=(1/3)*pi*h**2*(3*r-h)
		Vol=V1*1000
	elif (h<H-r):
		V1=(2/3)*pi*r**3+pi*r**2*(h-r)
		Vol=V1*1000
	elif (h<=H):
		V1=(4/3)*pi*r**3+pi*r**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
		Vol=V1*1000
		print("Volume:",round(Vol,3),"litros")
else:
	Vol="Entradas invalidas"
	print(Vol)





-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 08:19:27) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))

print("Entradas:", H, ",", h, ",", r)

if (H>0 and h>0 and r>0 and H>h and H>2*r):
	if(h<r):
		V1=(1/3)*pi*h**2*(3*r-h)
		Vol=V1*1000
	elif (h<H-r):
		V1=(2/3)*pi*r**3+pi*r**2*(h-r)
		Vol=V1*1000
	elif (h<=H):
		V1=(4/3)*pi*r**3+pi*r**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
		Vol=V1*1000
		print("Volume:",round(Vol,3),"litros")
else:
	Vol="Entradas invalidas"
	





-- EXECUTION TIME:
0.185969
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 08:19:36) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))

print("Entradas:", H, ",", h, ",", r)

if (H>0 and h>0 and r>0 and H>h and H>2*r):
	if(h<r):
		V1=(1/3)*pi*h**2*(3*r-h)
		Vol=V1*1000
	elif (h<H-r):
		V1=(2/3)*pi*r**3+pi*r**2*(h-r)
		Vol=V1*1000
	elif (h<=H):
		V1=(4/3)*pi*r**3+pi*r**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
		Vol=V1*1000
		print("Volume:",round(Vol,3),"litros")
else:
	Vol="Entradas invalidas"
	print(Vol)





-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 08:20:04) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))

print("Entradas:", H, ",", h, ",", r)

if (H>0 and h>0 and r>0 and H>h and H>2*r):
	if(h<r):
		V1=(1/3)*pi*h**2*(3*r-h)
		Vol=V1*1000
	elif (h<H-r):
		V1=(2/3)*pi*r**3+pi*r**2*(h-r)
		Vol=V1*1000
	elif (h<=H):
		V1=(4/3)*pi*r**3+pi*r**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
		Vol=V1*1000
		print("Volume:",round(Vol,3),"litros")
else:
	Vol="Entradas invalidas"
	print(Vol)





-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 08:21:37) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))

print("Entradas:", H, ",", h, ",", r)

if (H>0 and h>0 and r>0 and H>h and H>2*r):
	if(h<r):
		V1=(1/3)*pi*h**2*(3*r-h)
		Vol=V1*1000
	elif (h<H-r):
		V1=(2/3)*pi*r**3+pi*r**2*(h-r)
		Vol=V1*1000
	elif (h<=H):
		V1=(4/3)*pi*r**3+pi*r**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
		Vol=V1*1000
		print("Volume:",round(Vol,3),"litros")
else:
	Vol="Entradas invalidas"
	print(Vol)





-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 08:25:45) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))

print("Entradas:", H, ",", h, ",", r)

if (H>0 and h>0 and r>0 and H>h and H>2*r):
	if(h<r):
		V1=(1/3)*pi*h**2*(3*r-h)
		Vol=V1*1000
	elif (h<H-r):
		V1=(2/3)*pi*r**3+pi*r**2*(h-r)
		Vol=V1*1000
	elif (h<=H):
		V1=(4/3)*pi*r**3+pi*r**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
		Vol=V1*1000
		print("Volume:",round(Vol,3),"litros")
else:
	Vol="Entradas invalidas"
	print(Vol)





-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 08:25:57) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))

print("Entradas:", H, ",", h, ",", r)

if (H>0 and h>0 and r>0 and H>h and H>2*r):
	if(h<r):
		V1=(1/3)*pi*h**2*(3*r-h)
		Vol=V1*1000
	elif (h<H-r):
		V1=(2/3)*pi*r**3+pi*r**2*(h-r)
		Vol=V1*1000
	elif (h<=H):
		V1=(4/3)*pi*r**3+pi*r**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
		Vol=V1*1000
		print("Volume:",round(Vol,3),"litros")
else:
	Vol="Entradas invalidas"
	print(Vol)





-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 08:26:19) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))

print("Entradas:", H, ",", h, ",", r)

if (H>0 and h>0 and r>0 and H>h and H>2*r):
	if(h<r):
		V1=(1/3)*pi*h**2*(3*r-h)
		Vol=V1*1000
	elif (h<H-r):
		V1=(2/3)*pi*r**3+pi*r**2*(h-r)
		Vol=V1*1000
	elif (h<=H):
		V1=(4/3)*pi*r**3+pi*r**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
		Vol=V1*1000
		print("Volume:",round(Vol,3),"litros")
else:
	Vol="Entradas invalidas"
	print(Vol)





-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 08:40:50) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))

print("Entradas:", H, ",", h, ",", r)

if (H>0 and h>0 and r>0 and H>h and H>2*r):
	if(h<r):
		V1=(1/3)*pi*h**2*(3*r-h)
		Vol=V1*1000
	elif (h<H-r):
		V1=(2/3)*pi*r**3+pi*r**2*(h-r)
		Vol=V1*1000
	elif (h<=H):
		V1=(4/3)*pi*r**3+pi*r**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
		Vol=V1*1000
		print("Volume:",round(Vol,3),"litros")
else:
	Vol="Entradas invalidas"
	print(Vol)





-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 08:42:22) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))

print("Entradas:", H, ",", h, ",", r)

if (H>0 and h>0 and r>0 and H>h and H>2*r):
	if(h<r):
		print("Elif 1")
		V1=(1/3)*pi*h**2*(3*r-h)
		Vol=V1*1000
	elif (h<H-r):
		print("Elif 2")
		V1=(2/3)*pi*r**3+pi*r**2*(h-r)
		Vol=V1*1000
	elif (h<=H):
		print("Elif 3")
		V1=(4/3)*pi*r**3+pi*r**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
		Vol=V1*1000
		print("Volume:",round(Vol,3),"litros")
else:
	Vol="Entradas invalidas"
	print(Vol)





-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Elif 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 08:43:05) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))

print("Entradas:", H, ",", h, ",", r)

if (H>0 and h>0 and r>0 and H>h and H>2*r):
	if(h<r):
		V1=(1/3)*pi*h**2*(3*r-h)
		Vol=V1*1000
		print("Volume:",round(Vol,3),"litros")
	elif (h<H-r):
		V1=(2/3)*pi*r**3+pi*r**2*(h-r)
		Vol=V1*1000
		print("Volume:",round(Vol,3),"litros")
	elif (h<=H):
		V1=(4/3)*pi*r**3+pi*r**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
		Vol=V1*1000
		print("Volume:",round(Vol,3),"litros")
else:
	Vol="Entradas invalidas"
	print(Vol)





-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 08:43:10) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
H=float(input("Qual a altura do tanque (m)?: "))
h=float(input("Qual o nivel do combustivel (m**3)?:"))
r=float(input("Qual o raio (m)?: "))

print("Entradas:", H, ",", h, ",", r)

if (H>0 and h>0 and r>0 and H>h and H>2*r):
	if(h<r):
		V1=(1/3)*pi*h**2*(3*r-h)
		Vol=V1*1000
		print("Volume:",round(Vol,3),"litros")
	elif (h<H-r):
		V1=(2/3)*pi*r**3+pi*r**2*(h-r)
		Vol=V1*1000
		print("Volume:",round(Vol,3),"litros")
	elif (h<=H):
		V1=(4/3)*pi*r**3+pi*r**2*(H-2*r)-(1/3)*pi*(H-h)**2*(3*r-H+h)
		Vol=V1*1000
		print("Volume:",round(Vol,3),"litros")
else:
	Vol="Entradas invalidas"
	print(Vol)





-- EXECUTION TIME:
0.142271
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
