== TEST (2019-04-02 16:06:49) 
-- CODE:
panqueca int(input("Quantas panquecas quer fazer? "))

ovo = panqueca / 8
-- ERROR:
File "XXXX", line 1
    panqueca int(input())
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 16:07:07) 
-- CODE:
panqueca = int(input("Quantas panquecas quer fazer? "))

ovo = panqueca / 8
-- ERROR:
File "XXXX", line 1
    panqueca int(input())
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 16:07:38) 
-- CODE:
panqueca = int(input("Quantas panquecas quer fazer? "))

ovo = panqueca / 8

print (ovo)
-- OUTPUT:
0.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 16:09:27) 
-- CODE:
panqueca = int(input("Quantas panquecas quer fazer? "))

ovo = panqueca / 8
leite = panqueca / 180
farinha = panqueca / 110

print (ovo)
print (leite)
print (farinha)
-- OUTPUT:
0.5
0.022222222222222223
0.03636363636363636
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 16:09:35) 
-- CODE:
panqueca = int(input("Quantas panquecas quer fazer? "))

ovo = panqueca / 8
leite = panqueca / 180
farinha = panqueca / 110

print (ovo)
print (leite)
print (farinha)
-- EXECUTION TIME:
0.14244
-- TEST CASE 1:
---- input:
4
---- correct output:
0.5
90.0
55.0
---- user output:
0.5
0.022222222222222223
0.03636363636363636
-- TEST CASE 2:
---- input:
20
---- correct output:
2.5
450.0
275.0
---- user output:
2.5
0.1111111111111111
0.18181818181818182
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 16:10:05) 
-- CODE:
panqueca = input("Quantas panquecas quer fazer? "))

ovo = panqueca / 8
leite = panqueca / 180
farinha = panqueca / 110

print (ovo)
print (leite)
print (farinha)
-- ERROR:
File "XXXX", line 1
    panqueca = input())
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 16:10:10) 
-- CODE:
panqueca = input("Quantas panquecas quer fazer? ")

ovo = panqueca / 8
leite = panqueca / 180
farinha = panqueca / 110

print (ovo)
print (leite)
print (farinha)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    ovo = panqueca / 8
TypeError: unsupported operand type(s) for /: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 16:10:17) 
-- CODE:
panqueca = input("Quantas panquecas quer fazer? ")

ovo = panqueca / 8
leite = panqueca / 180
farinha = panqueca / 110

print (ovo)
print (leite)
print (farinha)
-- EXECUTION TIME:
0.148547
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1630/2944/main.py", line 3, in <module>
    ovo = panqueca / 8
TypeError: unsupported operand type(s) for /: 'str' and 'int'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 16:10:39) 
-- CODE:
panqueca = input("Quantas panquecas quer fazer? ")

ovo = panqueca / 8
leite = panqueca / 180
farinha = panqueca / 110

print (ovo)
print (leite)
print (farinha)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    ovo = panqueca / 8
TypeError: unsupported operand type(s) for /: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 16:11:06) 
-- CODE:
panqueca = int(input("Quantas panquecas quer fazer? "))

ovo = panqueca / 8
leite = panqueca / 180
farinha = panqueca / 110

print (ovo)
print (leite)
print (farinha)
-- OUTPUT:
0.5
0.022222222222222223
0.03636363636363636
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 16:12:27) 
-- CODE:
panqueca = int(input("Quantas panquecas quer fazer? "))

ovo = panqueca / 8
leite = 180 / panqueca
farinha = panqueca / 110

print (ovo)
print (leite)
print (farinha)
-- OUTPUT:
0.5
45.0
0.03636363636363636
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 16:12:43) 
-- CODE:
panqueca = int(input("Quantas panquecas quer fazer? "))

ovo = panqueca / 8
leite = 180 / panqueca
farinha = panqueca / 110

print (ovo)
print (leite)
print (farinha)
-- OUTPUT:
0.5
45.0
0.03636363636363636
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 16:16:59) 
-- CODE:
panqueca = int(input("Quantas panquecas quer fazer? "))

ovo = panqueca / 8
leite = 180 / 8
farinha = panqueca / 110

print (ovo)
print (leite)
print (farinha)
-- OUTPUT:
0.5
22.5
0.03636363636363636
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 16:19:29) 
-- CODE:
panqueca = int(input("Quantas panquecas quer fazer? "))

ovo = (panqueca * 1) / 8
leite = (panqueca * 180) * 8
farinha = (panqueca * 110) / 8

print (ovo)
print (leite)
print (farinha)
-- OUTPUT:
0.5
5760
55.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 16:19:48) 
-- CODE:
panqueca = int(input("Quantas panquecas quer fazer? "))

ovo = (panqueca * 1) / 8
leite = (panqueca * 180) * 8
farinha = (panqueca * 110) / 8

print (ovo)
print (leite)
print (farinha)
-- EXECUTION TIME:
0.199215
-- TEST CASE 1:
---- input:
4
---- correct output:
0.5
90.0
55.0
---- user output:
0.5
5760
55.0
-- TEST CASE 2:
---- input:
20
---- correct output:
2.5
450.0
275.0
---- user output:
2.5
28800
275.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 16:19:53) 
-- CODE:
panqueca = int(input("Quantas panquecas quer fazer? "))

ovo = (panqueca * 1) / 8
leite = (panqueca * 180) * 8
farinha = (panqueca * 110) / 8

print (ovo)
print (leite)
print (farinha)
-- OUTPUT:
0.5
5760
55.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 16:20:08) 
-- CODE:
panqueca = int(input("Quantas panquecas quer fazer? "))

ovo = (panqueca * 1) / 8
leite = (panqueca * 180) / 8
farinha = (panqueca * 110) / 8

print (ovo)
print (leite)
print (farinha)
-- OUTPUT:
0.5
90.0
55.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 16:20:16) 
-- CODE:
panqueca = int(input("Quantas panquecas quer fazer? "))

ovo = (panqueca * 1) / 8
leite = (panqueca * 180) / 8
farinha = (panqueca * 110) / 8

print (ovo)
print (leite)
print (farinha)
-- EXECUTION TIME:
0.188054
-- TEST CASE 1:
---- input:
4
---- correct output:
0.5
90.0
55.0
---- user output:
0.5
90.0
55.0
-- TEST CASE 2:
---- input:
20
---- correct output:
2.5
450.0
275.0
---- user output:
2.5
450.0
275.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
