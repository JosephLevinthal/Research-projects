== TEST (2019-05-15 20:09:47) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 3

# Variavel do expoente
e = 0

while (cont < valor):
	# Denominador
	x = ((cont * 2) * 3 ** e) * ((caont * 2 + 1) * 3 ** e + 1) * ((cont * 2 + 2) * 3 ** e + 1)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    x = ((cont * 2) * 3 ** e) * ((caont * 2 + 1) * 3 ** e + 1) * ((cont * 2 + 2) * 3 ** e + 1)
NameError: name 'caont' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:10:36) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 3

# Variavel do expoente
e = 0

while (cont < valor):
	# Denominador
	x = ((cont * 2) * 3 ** e) * ((caont * 2 + 1) * 3 ** e + 1) * ((cont * 2 + 2) * 3 ** e + 1)
	
	# Aproximacoes de PI
	aprox = aprox * (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    x = ((cont * 2) * 3 ** e) * ((caont * 2 + 1) * 3 ** e + 1) * ((cont * 2 + 2) * 3 ** e + 1)
NameError: name 'caont' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:11:00) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 3

# Variavel do expoente
e = 0

while (cont < valor):
	# Denominador
	x = ((cont * 2) * 3 ** e) * ((caont * 2 + 1) * 3 ** e + 1) * ((cont * 2 + 2) * 3 ** e + 1)
	
	# Aproximacoes de PI
	aprox = aprox * (-1) ** (cont + 1) * 1 / x
	cont = cont + 1

print (round(aprox,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    x = ((cont * 2) * 3 ** e) * ((caont * 2 + 1) * 3 ** e + 1) * ((cont * 2 + 2) * 3 ** e + 1)
NameError: name 'caont' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:13:36) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 3

# Variavel do expoente
e = 0

while (cont < valor):
	# Denominador
	x = ((cont * 2) * 3 ** e) * ((caont * 2 + 1) * 3 ** e + 1) * ((cont * 2 + 2) * 3 ** e + 1)
	
	# Aproximacoes de PI
	aprox = aprox * (-1) ** (cont + 1) / x
	cont = cont + 1

print (round(aprox,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    x = ((cont * 2) * 3 ** e) * ((caont * 2 + 1) * 3 ** e + 1) * ((cont * 2 + 2) * 3 ** e + 1)
NameError: name 'caont' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:14:11) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 3

# Variavel do expoente
e = 0

while (cont < valor):
	# Denominador
	x = ((cont * 2) * 3 ** e) * ((caont * 2 + 1) * 3 ** e + 1) * ((cont * 2 + 2) * 3 ** e + 1)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** 1 / x
	cont = cont + 1

print (round(aprox,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    x = ((cont * 2) * 3 ** e) * ((caont * 2 + 1) * 3 ** e + 1) * ((cont * 2 + 2) * 3 ** e + 1)
NameError: name 'caont' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 20:29:18) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

# Variaveis dos Denominadores
denom1 = 3
denom2 = 3 ** e
e = 1 # Variavel do expoente

while (cont < valor):
	# Denominador
	denominadorGeral = denom1 * denom2
	
	# Aproximacoes de PI
	aprox = aprox + (-1) / denominadorGeral
	cont = cont + 1
	e = e + 1
	denom1 = denom1 + 2

print (round(aprox,8))
-- EXECUTION TIME:
0.132705
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1716/2502/main.py", line 7, in <module>
    aprox = sqrt(12)
NameError: name 'sqrt' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:29:20) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

# Variaveis dos Denominadores
denom1 = 3
denom2 = 3 ** e
e = 1 # Variavel do expoente

while (cont < valor):
	# Denominador
	denominadorGeral = denom1 * denom2
	
	# Aproximacoes de PI
	aprox = aprox + (-1) / denominadorGeral
	cont = cont + 1
	e = e + 1
	denom1 = denom1 + 2

print (round(aprox,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    aprox = sqrt(12)
NameError: name 'sqrt' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:29:42) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

# Variaveis dos Denominadores
denom1 = 3
denom2 = 3 ** e
e = 1 # Variavel do expoente

while (cont < valor):
	# Denominador
	denominadorGeral = denom1 * denom2
	
	# Aproximacoes de PI
	aprox = aprox + (-1) / denominadorGeral
	cont = cont + 1
	e = e + 1
	denom1 = denom1 + 2

print (round(aprox,8))
-- OUTPUT:
3.40450059
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 20:29:52) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

# Variaveis dos Denominadores
denom1 = 3
denom2 = 3 ** e
e = 1 # Variavel do expoente

while (cont < valor):
	# Denominador
	denominadorGeral = denom1 * denom2
	
	# Aproximacoes de PI
	aprox = aprox + (-1) / denominadorGeral
	cont = cont + 1
	e = e + 1
	denom1 = denom1 + 2

print (round(aprox,8))
-- EXECUTION TIME:
0.202291
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.40450059
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.39667754
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
3.41252937
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:30:13) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

# Variaveis dos Denominadores
denom1 = 3
denom2 = 3 ** e
e = 1 # Variavel do expoente

while (cont < valor):
	# Denominador
	denominadorGeral = denom1 * denom2
	
	# Aproximacoes de PI
	aprox = aprox + (-1) / denominadorGeral
	cont = cont + 1
	e = e + 1
	denom1 = denom1 + 2

print (round(aprox,8))
-- OUTPUT:
3.40450059
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:40:35) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel acumuladora
aprox = sqrt(12)

# Variavel contadora
cont = 1

# Alteracao do Valor do Sinal
alteraSinal = -1

# Variaveis dos Denominadores
denom1 = 3
e = 1 #Variavel do expoente
denom2 = 3 ** e

aprox = 0


while (cont < valor):
	aprox = aprox + (alteraSinal / ((denom1 * denom2)))
	e = e + 1
	denom1 = denom1 + 2
	alteraSinal = alteraSinal * (-1)

print (round(aprox,8))
-- OUTPUT:
3.40450059
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:44:43) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel acumuladora
aprox = sqrt(12)

# Variavel contadora
cont = 1

# Alteracao do Valor do Sinal
alteraSinal = -1

# Variaveis dos Denominadores
denom1 = 3
e = 1 #Variavel do expoente
denom2 = 3 ** e

valor = 0

while (cont < valor):
	valor = valor + (alteraSinal / ((denom1 * denom2)))
	e = e + 1
	denom1 = denom1 + 2
	alteraSinal = alteraSinal * (-1)
	valor = aprox * (1 + valor)

print (round(aprox,8))
-- OUTPUT:
3.46410162
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:44:54) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel acumuladora
aprox = sqrt(12)

# Variavel contadora
cont = 1

# Alteracao do Valor do Sinal
alteraSinal = -1

# Variaveis dos Denominadores
denom1 = 3
e = 1 #Variavel do expoente
denom2 = 3 ** e

valor = 0

while (cont < valor):
	valor = valor + (alteraSinal / ((denom1 * denom2)))
	e = e + 1
	denom1 = denom1 + 2
	alteraSinal = alteraSinal * (-1)
	valor = aprox * (1 + valor)

print (round(aprox,8))
-- OUTPUT:
3.46410162
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:46:01) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel acumuladora
aprox = sqrt(12)

# Variavel contadora
cont = 1

# Alteracao do Valor do Sinal
alteraSinal = -1

# Variaveis dos Denominadores
denom1 = 3
e = 1 #Variavel do expoente
denom2 = 3 ** e

valor = 0

while (cont < valor):
	valor = valor + (alteraSinal / ((denom1 * denom2)))
	e = e + 1
	denom1 = denom1 + 2
	alteraSinal = alteraSinal * (-1)
	valor = aprox * (1 + aprox)

print (round(aprox,8))
-- OUTPUT:
3.46410162
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:46:22) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel acumuladora
aprox = sqrt(12)

# Variavel contadora
cont = 1

# Alteracao do Valor do Sinal
alteraSinal = -1

# Variaveis dos Denominadores
denom1 = 3
e = 1 #Variavel do expoente
denom2 = 3 ** e

valor = 0

while (cont < valor):
	valor = valor + (alteraSinal / ((denom1 * denom2)))
	e = e + 1
	denom1 = denom1 + 2
	alteraSinal = alteraSinal * (-1)
	valor = aprox * (1 + valor)

print (round(valor,8))
-- OUTPUT:
3.46410162
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:46:27) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel acumuladora
aprox = sqrt(12)

# Variavel contadora
cont = 1

# Alteracao do Valor do Sinal
alteraSinal = -1

# Variaveis dos Denominadores
denom1 = 3
e = 1 #Variavel do expoente
denom2 = 3 ** e

valor = 0

while (cont < valor):
	valor = valor + (alteraSinal / ((denom1 * denom2)))
	e = e + 1
	denom1 = denom1 + 2
	alteraSinal = alteraSinal * (-1)
	valor = aprox * (1 + valor)

print (round(valor,8))
-- OUTPUT:
3.46410162
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 20:47:02) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel acumuladora
aprox = sqrt(12)

# Variavel contadora
cont = 1

# Alteracao do Valor do Sinal
alteraSinal = -1

# Variaveis dos Denominadores
denom1 = 3
e = 1 #Variavel do expoente
denom2 = 3 ** e

aprox = 0


while (cont < valor):
	aprox = aprox + (alteraSinal / ((denom1 * denom2)))
	e = e + 1
	denom1 = denom1 + 2
	alteraSinal = alteraSinal * (-1)

print (round(aprox,8))
-- EXECUTION TIME:
373.506
-- ERROR:
Killed

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:47:05) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel acumuladora
aprox = sqrt(12)

# Variavel contadora
cont = 1

# Alteracao do Valor do Sinal
alteraSinal = -1

# Variaveis dos Denominadores
denom1 = 3
e = 1 #Variavel do expoente
denom2 = 3 ** e

valor = 0

while (cont < valor):
	valor = aprox + (alteraSinal / ((denom1 * denom2)))
	e = e + 1
	denom1 = denom1 + 2
	alteraSinal = alteraSinal * (-1)

print (round(valor,8))
-- OUTPUT:
3.46410162
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:47:22) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel acumuladora
aprox = sqrt(12)

# Variavel contadora
cont = 1

# Alteracao do Valor do Sinal
alteraSinal = -1

# Variaveis dos Denominadores
denom1 = 3
e = 1 #Variavel do expoente
denom2 = 3 ** e

valor = 0

while (cont < valor):
	aprox = aprox + (alteraSinal / ((denom1 * denom2)))
	e = e + 1
	denom1 = denom1 + 2
	alteraSinal = alteraSinal * (-1)

print (round(aprox,8))
-- OUTPUT:
3.46410162
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 20:47:28) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel acumuladora
aprox = sqrt(12)

# Variavel contadora
cont = 1

# Alteracao do Valor do Sinal
alteraSinal = -1

# Variaveis dos Denominadores
denom1 = 3
e = 1 #Variavel do expoente
denom2 = 3 ** e

valor = 0

while (cont < valor):
	aprox = aprox + (alteraSinal / ((denom1 * denom2)))
	e = e + 1
	denom1 = denom1 + 2
	alteraSinal = alteraSinal * (-1)

print (round(aprox,8))
-- EXECUTION TIME:
0.17901
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.46410162
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.46410162
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
3.46410162
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:47:33) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel acumuladora
aprox = sqrt(12)

# Variavel contadora
cont = 1

# Alteracao do Valor do Sinal
alteraSinal = -1

# Variaveis dos Denominadores
denom1 = 3
e = 1 #Variavel do expoente
denom2 = 3 ** e

valor = 0

while (cont < valor):
	aprox = aprox + (alteraSinal / ((denom1 * denom2)))
	e = e + 1
	denom1 = denom1 + 2
	alteraSinal = alteraSinal * (-1)

print (round(aprox,8))
-- OUTPUT:
3.46410162
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:52:55) 
-- CODE:
import math
root = math.sqrt(12)
def myPi():
    constant = 1
    changeValue = -1
    denom1 = 3
    x = 1
    denom2 = 3**x
    value = 0
    for i in range(20):
        value = value + (changeValue/((denom1*denom2)))
        x = x + 1
        denom1 = denom1 + 2
        changeValue = changeValue * -1
    return value



approx = myPi()

print (root * (1 + approx))
-- OUTPUT:
3.2300394230302167
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:53:00) 
-- CODE:
import math
root = math.sqrt(12)
def myPi():
    constant = 1
    changeValue = -1
    denom1 = 3
    x = 1
    denom2 = 3**x
    value = 0
    for i in range(20):
        value = value + (changeValue/((denom1*denom2)))
        x = x + 1
        denom1 = denom1 + 2
        changeValue = changeValue * -1
    return value



approx = myPi()

print (root * (1 + approx))
-- OUTPUT:
3.2300394230302167
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 20:53:04) 
-- CODE:
import math
root = math.sqrt(12)
def myPi():
    constant = 1
    changeValue = -1
    denom1 = 3
    x = 1
    denom2 = 3**x
    value = 0
    for i in range(20):
        value = value + (changeValue/((denom1*denom2)))
        x = x + 1
        denom1 = denom1 + 2
        changeValue = changeValue * -1
    return value



approx = myPi()

print (root * (1 + approx))
-- EXECUTION TIME:
0.194837
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.2300394230302167
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.2300394230302167
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
3.2300394230302167
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 20:55:21) 
-- CODE:
import math

value = int(input("Informe o valor: "))

root = math.sqrt(12)
constant = 1
changeValue = -1
denom1 = 3
x = 1
denom2 = 3**x

while (cont < value):
	value = value + (changeValue/((denom1*denom2)))
	x = x + 1
   denom1 = denom1 + 2
   changeValue = changeValue * -1
	print (round(value,8))



approx = myPi()

print (root * (1 + approx))
-- EXECUTION TIME:
0.198537
-- ERROR:
  File "/home/codebench/codes/1716/2502/main.py", line 15
    denom1 = denom1 + 2
                      ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:55:23) 
-- CODE:
import math

value = int(input("Informe o valor: "))

root = math.sqrt(12)
constant = 1
changeValue = -1
denom1 = 3
x = 1
denom2 = 3**x

while (cont < value):
	value = value + (changeValue/((denom1*denom2)))
	x = x + 1
   denom1 = denom1 + 2
   changeValue = changeValue * -1
	print (round(value,8))



approx = myPi()

print (root * (1 + approx))
-- ERROR:
File "XXXX", line 15
    denom1 = denom1 + 2
                      ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:56:04) 
-- CODE:
import math

value = int(input("Informe o valor: "))

root = math.sqrt(12)
constant = 1
changeValue = -1
denom1 = 3
x = 1
denom2 = 3**x

while (cont < value):
	value = value + (changeValue/((denom1*denom2)))
	x = x + 1
	denom1 = denom1 + 2
	changeValue = changeValue * -1
	
print (round(value,8))



approx = myPi()

print (root * (1 + approx))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    while (cont < value):
NameError: name 'cont' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:56:23) 
-- CODE:
import math

value = int(input("Informe o valor: "))

root = math.sqrt(12)
constant = 1
changeValue = -1
denom1 = 3
x = 1
denom2 = 3**x

while (constant < value):
	value = value + (changeValue/((denom1*denom2)))
	x = x + 1
	denom1 = denom1 + 2
	changeValue = changeValue * -1
	
print (round(value,8))



approx = myPi()

print (root * (1 + approx))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    while (cont < value):
NameError: name 'cont' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:01:24) 
-- CODE:
import math

value = int(input("Informe o valor: "))

root = math.sqrt(12)
constant = 1
changeValue = -1
denom1 = 3
x = 1
denom2 = 3**x

while (constant < value):
	value = value + (changeValue/((denom1*denom2)))
	x = x + 1
	denom1 = denom1 + 2
	changeValue = changeValue * -1
	
print (round(value,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    while (cont < value):
NameError: name 'cont' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:05:02) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 3

e = 3

while (cont < valor):
	# Denominador
	x = ((cont * 1) * e) * ((caont * 1 + 1)* e+1) * ((cont * 1 + 2)*e+2)
	
	# Aproximacoes de PI
	aprox = aprox * (-1) ** (cont + 1) * 1 / x
	cont = cont + 1

print (round(aprox,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    x = ((cont * 1) * e) * ((caont * 1 + 1)* e+1) * ((cont * 1 + 2)*e+2)
NameError: name 'caont' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:05:20) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 3

e = 3

while (cont < valor):
	# Denominador
	x = ((cont * 1) * e) * ((caont * 1 + 1)* e+1) * ((cont * 1 + 2)*e+2)
	
	# Aproximacoes de PI
	aprox = aprox * (-1) ** (cont + 1) * 3 / x
	cont = cont + 1

print (round(aprox,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    x = ((cont * 1) * e) * ((caont * 1 + 1)* e+1) * ((cont * 1 + 2)*e+2)
NameError: name 'caont' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:05:50) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 3

e = 3

while (cont < valor):
	# Denominador
	x = ((cont * 1) * e) * ((caont * 1 + 1)* e+1) * ((cont * 1 + 2)*e+2)
	
	# Aproximacoes de PI
	aprox = aprox * (-1) / x
	cont = cont + 1

print (round(aprox,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    x = ((cont * 1) * e) * ((caont * 1 + 1)* e+1) * ((cont * 1 + 2)*e+2)
NameError: name 'caont' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:06:10) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 3

e = 3

while (cont < valor):
	# Denominador
	x = ((cont * 1) * e) * ((caont * 1 + 2)* e+1) * ((cont * 1 + 3)*e+2)
	
	# Aproximacoes de PI
	aprox = aprox * (-1) / x
	cont = cont + 1

print (round(aprox,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    x = ((cont * 1) * e) * ((caont * 1 + 2)* e+1) * ((cont * 1 + 3)*e+2)
NameError: name 'caont' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:06:19) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 3

e = 3

while (cont < valor):
	# Denominador
	x = ((cont * 1) * e) * ((caont * 1 + 2)* e+1) * ((cont * 1 + 3)*e+1)
	
	# Aproximacoes de PI
	aprox = aprox * (-1) / x
	cont = cont + 1

print (round(aprox,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    x = ((cont * 1) * e) * ((caont * 1 + 2)* e+1) * ((cont * 1 + 3)*e+1)
NameError: name 'caont' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 21:07:02) 
-- CODE:
import math

value = int(input("Informe o valor: "))

root = math.sqrt(12)
constant = 1
changeValue = -1
denom1 = 3
x = 1
denom2 = 3**x

while (constant < value):
	value = value + (changeValue/((denom1*denom2)))
	x = x + 1
	denom1 = denom1 + 2
	changeValue = changeValue * -1
	
print (round(value,8))



approx = myPi()

print (root * (1 + approx))
-- EXECUTION TIME:
623.643
-- ERROR:
Killed

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:08:52) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 3

den1 = 1
den2 = 3
e = 0

while (cont < valor):
	# Denominador
	x = (den1 * den2 ** e + 1) * (den1 + 2 * den2 ** e + 1)
		
	# Aproximacoes de PI
	aprox = aprox * (-1) / x
	cont = cont + 1

print (round(aprox,8))
-- OUTPUT:
0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:09:20) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 3

den1 = 1
den2 = 3
e = 0

while (cont < valor):
	# Denominador
	x = (den1 * den2 ** e + 1) * (den1 + 2 * den2 ** e + 1)
		
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))
-- OUTPUT:
3.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:09:48) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

den1 = 1
den2 = 3
e = 0

while (cont < valor):
	# Denominador
	x = (den1 * den2 ** e + 1) * (den1 + 2 * den2 ** e + 1)
		
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    aprox = sqrt(12)
NameError: name 'sqrt' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:10:15) 
-- CODE:
fromm math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

den1 = 1
den2 = 3
e = 0

while (cont < valor):
	# Denominador
	x = (den1 * den2 ** e + 1) * (den1 + 2 * den2 ** e + 1)
		
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))
-- ERROR:
File "XXXX", line 1
    fromm math import *
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:10:24) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

den1 = 1
den2 = 3
e = 0

while (cont < valor):
	# Denominador
	x = (den1 * den2 ** e + 1) * (den1 + 2 * den2 ** e + 1)
		
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))
-- OUTPUT:
3.46410162
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:10:31) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

den1 = 1
den2 = 3
e = 0

while (cont < valor):
	# Denominador
	x = (den1 * den2 ** e + 1) * (den1 + 2 * den2 ** e + 1)
		
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))
-- OUTPUT:
3.46410162
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 21:10:49) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

den1 = 1
den2 = 3
e = 0

while (cont < valor):
	# Denominador
	x = (den1 * den2 ** e + 1) * (den1 + 2 * den2 ** e + 1)
		
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))
-- EXECUTION TIME:
0.144378
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.46410162
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.46410162
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
3.96410162
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:11:00) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

den1 = 1
den2 = 3
e = 0

while (cont < valor):
	# Denominador
	x = (den1 * den2 ** e + 1) * (den1 + 2 * den2 ** e + 1)
		
	# Aproximacoes de PI
	aprox = aprox * (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))
-- OUTPUT:
-0.00338291
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:11:08) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

den1 = 1
den2 = 3
e = 0

while (cont < valor):
	# Denominador
	x = (den1 * den2 ** e + 1) * (den1 + 2 * den2 ** e + 1)
		
	# Aproximacoes de PI
	aprox = aprox * (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))
-- OUTPUT:
-0.00338291
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:11:24) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

den1 = 1
den2 = 3
e = 0

while (cont < valor):
	# Denominador
	x = (den1 * den2 ** e + 1) * (den1 + 2 * den2 ** e + 1)
		
	# Aproximacoes de PI
	aprox = aprox * (-1) ** (cont + 1) * 1 / x
	cont = cont + 1

print (round(aprox,8))
-- OUTPUT:
-0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:11:31) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

den1 = 1
den2 = 3
e = 0

while (cont < valor):
	# Denominador
	x = (den1 * den2 ** e + 1) * (den1 + 2 * den2 ** e + 1)
		
	# Aproximacoes de PI
	aprox = aprox * (-1) ** (cont + 1) * 1 / x
	cont = cont + 1

print (round(aprox,8))
-- OUTPUT:
-0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:11:43) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

den1 = 1
den2 = 3
e = 0

while (cont < valor):
	# Denominador
	x = (den1 * den2 ** e + 1) * (den1 + 2 * den2 ** e + 1)
		
	# Aproximacoes de PI
	aprox = aprox * (-1) ** (cont + 1) / x
	cont = cont + 1

print (round(aprox,8))
-- OUTPUT:
-0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:11:49) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

den1 = 1
den2 = 3
e = 0

while (cont < valor):
	# Denominador
	x = (den1 * den2 ** e + 1) * (den1 + 2 * den2 ** e + 1)
		
	# Aproximacoes de PI
	aprox = aprox * (-1) ** (cont + 1) / x
	cont = cont + 1

print (round(aprox,8))
-- OUTPUT:
-0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:12:16) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

den1 = 1
den2 = 3
e = 0

while (cont < valor):
	# Denominador
	x = (den1 * den2 ** e + 1) * (den1 + 2 * den2 ** e + 1)
		
	# Aproximacoes de PI
	aprox = aprox * (-1) / x
	cont = cont + 1

print (round(aprox,8))
-- OUTPUT:
0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:12:22) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

den1 = 1
den2 = 3
e = 0

while (cont < valor):
	# Denominador
	x = (den1 * den2 ** e + 1) * (den1 + 2 * den2 ** e + 1)
		
	# Aproximacoes de PI
	aprox = aprox * (-1) / x
	cont = cont + 1

print (round(aprox,8))
-- OUTPUT:
0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:12:46) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

den1 = 1
den2 = 3
e = 0

while (cont < valor):
	# Denominador
	x = (den1 * den2 ** e + 1) * (den1 + 2 * den2 ** e + 1)
		
	# Aproximacoes de PI
	aprox = aprox * 1 / x
	cont = cont + 1

print (round(aprox,8))
-- OUTPUT:
0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:12:51) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

den1 = 1
den2 = 3
e = 0

while (cont < valor):
	# Denominador
	x = (den1 * den2 ** e + 1) * (den1 + 2 * den2 ** e + 1)
		
	# Aproximacoes de PI
	aprox = aprox * 1 / x
	cont = cont + 1

print (round(aprox,8))
-- OUTPUT:
0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:13:32) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

den1 = 1
den2 = 3
e = 0

while (cont < valor):
	# Denominador
	x = (den1 * den2 ** e) * (den1 + 2 * den2 ** e)
	e = e + 1
		
	# Aproximacoes de PI
	aprox = aprox * 1 / x
	cont = cont + 1

print (round(aprox,8))
-- OUTPUT:
0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:13:37) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

den1 = 1
den2 = 3
e = 0

while (cont < valor):
	# Denominador
	x = (den1 * den2 ** e) * (den1 + 2 * den2 ** e)
	e = e + 1
		
	# Aproximacoes de PI
	aprox = aprox * 1 / x
	cont = cont + 1

print (round(aprox,8))
-- OUTPUT:
0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:14:06) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

den1 = 1
den2 = 3
e = 0

while (cont < valor):
	# Denominador
	x = (den1 * den2) * (den1 + 2 * den2 ** e)
	e = e + 1
		
	# Aproximacoes de PI
	aprox = aprox * 1 / x
	cont = cont + 1

print (round(aprox,8))
-- OUTPUT:
0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:14:11) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

den1 = 1
den2 = 3
e = 0

while (cont < valor):
	# Denominador
	x = (den1 * den2) * (den1 + 2 * den2 ** e)
	e = e + 1
		
	# Aproximacoes de PI
	aprox = aprox * 1 / x
	cont = cont + 1

print (round(aprox,8))
-- OUTPUT:
0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:14:27) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

den1 = 1
den2 = 3
e = 0

while (cont < valor):
	# Denominador
	x = (den1 * den2) + (den1 + 2 * den2 ** e)
	e = e + 1
		
	# Aproximacoes de PI
	aprox = aprox * 1 / x
	cont = cont + 1

print (round(aprox,8))
-- OUTPUT:
0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:15:05) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

den1 = 1
den2 = 3
e = 0

while (cont < valor):
	# Denominador
	x = (den1 * den2 ** e + 1) * (den1 + 2 * den2 ** e + 1)
	e = e + 1
		
	# Aproximacoes de PI
	aprox = aprox * (-1) ** (cont + 1) / x
	cont = cont + 1

print (round(aprox,8))
-- OUTPUT:
-0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:15:09) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

den1 = 1
den2 = 3
e = 0

while (cont < valor):
	# Denominador
	x = (den1 * den2 ** e + 1) * (den1 + 2 * den2 ** e + 1)
	e = e + 1
		
	# Aproximacoes de PI
	aprox = aprox * (-1) ** (cont + 1) / x
	cont = cont + 1

print (round(aprox,8))
-- OUTPUT:
-0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:15:48) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

den1 = 1
den2 = 3
e = 0

while (cont < valor):
	# Denominador
	x = (den1 * den2 ** e + 1) + (den1 + 2 * den2 ** e + 1)
	den1 = den + 2
	e = e + 1
		
	# Aproximacoes de PI
	aprox = aprox * (-1) ** (cont + 1) / x
	cont = cont + 1

print (round(aprox,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 18, in <module>
    den1 = den + 2
NameError: name 'den' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:15:52) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

den1 = 1
den2 = 3
e = 0

while (cont < valor):
	# Denominador
	x = (den1 * den2 ** e + 1) + (den1 + 2 * den2 ** e + 1)
	den1 = den + 2
	e = e + 1
		
	# Aproximacoes de PI
	aprox = aprox * (-1) ** (cont + 1) / x
	cont = cont + 1

print (round(aprox,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 18, in <module>
    den1 = den + 2
NameError: name 'den' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:16:04) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

den1 = 1
den2 = 3
e = 0

while (cont < valor):
	# Denominador
	x = (den1 * den2 ** e + 1) + (den1 + 2 * den2 ** e + 1)
	den1 = den1 + 2
	e = e + 1
		
	# Aproximacoes de PI
	aprox = aprox * (-1) ** (cont + 1) / x
	cont = cont + 1

print (round(aprox,8))
-- OUTPUT:
-0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:16:22) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

den1 = 1
den2 = 3
e = 0

while (cont < valor):
	# Denominador
	x = (den1 * den2) + (den1 + 2 * den2 ** e + 1)
	den1 = den1 + 2
	e = e + 1
		
	# Aproximacoes de PI
	aprox = aprox * (-1) ** (cont + 1) / x
	cont = cont + 1

print (round(aprox,8))
-- OUTPUT:
-0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:30:36) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

variavel1 = 3
expoente = 0

while (cont < valor):
	# Denominador
	denominador = (cont * (variavel1 ** expoente))
	expoente = expoente + 1
	cont = cont + 2
		
	# Aproximacoes de PI
	aprox = aprox * (-1) ** (cont + 1) / denominador
	cont = cont + 1

print (round(aprox,8))
-- OUTPUT:
1.697e-05
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:30:50) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

variavel1 = 3
expoente = 0

while (cont < valor):
	# Denominador
	denominador = (cont * (variavel1 ** expoente))
	expoente = expoente + 1
	cont = cont + 2
		
	# Aproximacoes de PI
	aprox = aprox * (-1) ** (cont + 1) / denominador
	cont = cont + 1

print (round(aprox,8))
-- OUTPUT:
1.697e-05
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:31:48) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

variavel1 = 3
expoente = 0

while (cont < valor):
	# Denominador
	denominador = (cont * (variavel1 ** expoente))
	expoente = expoente + 1
	cont = cont + 2
		
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) / denominador
	cont = cont + 1

print (round(aprox,8))
-- OUTPUT:
4.39293759
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:32:10) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

variavel1 = 3
expoente = 0

while (cont < valor):
	# Denominador
	denominador = (cont * (variavel1 ** expoente))
	expoente = expoente + 1
	cont = cont + 2
		
	# Aproximacoes de PI
	aprox = aprox + (-1)  / denominador
	cont = cont + 1

print (round(aprox,8))
-- OUTPUT:
2.36119156
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:32:28) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

variavel1 = 3
expoente = 0

while (cont < valor):
	# Denominador
	denominador = (cont * (variavel1 ** expoente))
	expoente = expoente + 1
	cont = cont + 2
		
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont) / denominador
	cont = cont + 1

print (round(aprox,8))
-- OUTPUT:
2.53526564
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:32:33) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

variavel1 = 3
expoente = 0

while (cont < valor):
	# Denominador
	denominador = (cont * (variavel1 ** expoente))
	expoente = expoente + 1
	cont = cont + 2
		
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont) / denominador
	cont = cont + 1

print (round(aprox,8))
-- OUTPUT:
2.53526564
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:32:52) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

variavel1 = 3
expoente = 0

while (cont < valor):
	# Denominador
	denominador = (cont * (variavel1 ** expoente))
	expoente = expoente + 1
	cont = cont + 2
		
	# Aproximacoes de PI
	aprox = aprox * (-1) ** (cont) / denominador
	cont = cont + 1

print (round(aprox,8))
-- OUTPUT:
1.697e-05
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:36:15) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

variavel1 = 3
variavel2 = 1
expoente = 0

while (cont < valor):
	# Denominador
	denominador = (variavel2 * (variavel1 ** expoente))
	expoente = expoente + 1
	variavel2 = variavel2 + 2
		
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 22, in <module>
    aprox = aprox + (-1) ** (cont + 1) * 4 / x
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:36:23) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

variavel1 = 3
variavel2 = 1
expoente = 0

while (cont < valor):
	# Denominador
	denominador = (variavel2 * (variavel1 ** expoente))
	expoente = expoente + 1
	variavel2 = variavel2 + 2
		
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 22, in <module>
    aprox = aprox + (-1) ** (cont + 1) * 4 / x
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:36:51) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

variavel1 = 3
variavel2 = 1
expoente = 0

while (cont < valor):
	# Denominador
	denominador = (variavel2 * (variavel1 ** expoente))
	expoente = expoente + 1
	variavel2 = variavel2 + 2
		
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / denominador
	cont = cont + 1

print (round(aprox,8))
-- OUTPUT:
7.09169787
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:37:09) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

variavel1 = 3
variavel2 = 1
expoente = 0

while (cont < valor):
	# Denominador
	denominador = (variavel2 * (variavel1 ** expoente))
	expoente = expoente + 1
	variavel2 = variavel2 + 2
		
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 1 / denominador
	cont = cont + 1

print (round(aprox,8))
-- OUTPUT:
4.37100068
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:37:22) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

variavel1 = 3
variavel2 = 1
expoente = 0

while (cont < valor):
	# Denominador
	denominador = (variavel2 * (variavel1 ** expoente))
	expoente = expoente + 1
	variavel2 = variavel2 + 1
		
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 1 / denominador
	cont = cont + 1

print (round(aprox,8))
-- OUTPUT:
4.32714665
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:37:51) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

variavel1 = 3
variavel2 = 0
expoente = 0

while (cont < valor):
	# Denominador
	denominador = (variavel2 * (variavel1 ** expoente))
	expoente = expoente + 1
	variavel2 = variavel2 + 2
		
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 1 / denominador
	cont = cont + 1

print (round(aprox,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 22, in <module>
    aprox = aprox + (-1) ** (cont + 1) * 1 / denominador
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 21:38:07) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

variavel1 = 3
variavel2 = 1
expoente = 0

while (cont < valor):
	# Denominador
	denominador = (variavel2 * (variavel1 ** expoente))
	expoente = expoente + 1
	variavel2 = variavel2 + 2
		
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 1 / denominador
	cont = cont + 1

print (round(aprox,8))
-- EXECUTION TIME:
0.168976
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
4.37100068
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
4.37100129
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
4.37102487
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:38:20) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 0

# Variavel acumuladora
aprox = sqrt(12)

variavel1 = 3
variavel2 = 1
expoente = 0

while (cont < valor):
	# Denominador
	denominador = (variavel2 * (variavel1 ** expoente))
	expoente = expoente + 1
	variavel2 = variavel2 + 2
		
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 1 / denominador
	cont = cont + 1

print (round(aprox,8))
-- OUTPUT:
2.55720175
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:39:13) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 0

# Variavel acumuladora
aprox = sqrt(12)

variavel1 = 3
variavel2 = 1
expoente = 0

while (cont < valor):
	# Denominador
	denominador = (variavel2 * (variavel1 ** expoente))
	expoente = expoente + 1
	variavel2 = variavel2 + 2
		
	# Aproximacoes de PI
	aprox = aprox * ((-1) ** (cont + 1) * 1 / denominador)
	cont = cont + 1

print (round(aprox,8))
-- OUTPUT:
0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:39:55) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 0

# Variavel acumuladora
aprox = sqrt(12)

variavel1 = 3
variavel2 = 1
expoente = 0

while (cont < valor):
	# Denominador
	denominador = (variavel2 * (variavel1 ** expoente))
	expoente = expoente + 1
	variavel2 = variavel2 + 2
		
	# Aproximacoes de PI
	aprox = aprox * (-1) ** ((cont + 1) * 1 / denominador)
	cont = cont + 1

print (round(aprox,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 25, in <module>
    print (round(aprox,8))
TypeError: type complex doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 21:40:22) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 0

# Variavel acumuladora
aprox = sqrt(12)

variavel1 = 3
variavel2 = 1
expoente = 0

while (cont < valor):
	# Denominador
	denominador = (variavel2 * (variavel1 ** expoente))
	expoente = expoente + 1
	variavel2 = variavel2 + 2
		
	# Aproximacoes de PI
	aprox = aprox *  (-1) ** (cont + 1) * 1 / denominador
	cont = cont + 1

print (round(aprox,8))
-- EXECUTION TIME:
0.150592
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
Informe o valor de aproximacoes: 0.0
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
Informe o valor de aproximacoes: 0.0
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
Informe o valor de aproximacoes: 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 21:40:26) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 0

# Variavel acumuladora
aprox = sqrt(12)

variavel1 = 3
variavel2 = 1
expoente = 0

while (cont < valor):
	# Denominador
	denominador = (variavel2 * (variavel1 ** expoente))
	expoente = expoente + 1
	variavel2 = variavel2 + 2
		
	# Aproximacoes de PI
	aprox = aprox * (-1) ** (cont + 1) * 1 / denominador
	cont = cont + 1

print (round(aprox,8))
-- EXECUTION TIME:
0.132437
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
0.0
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
0.0
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 21:40:40) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 0

# Variavel acumuladora
aprox = sqrt(12)

variavel1 = 3
variavel2 = 1
expoente = 0

while (cont < valor):
	# Denominador
	denominador = (variavel2 * (variavel1 ** expoente))
	expoente = expoente + 1
	variavel2 = variavel2 + 2
		
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 1 / denominador
	cont = cont + 1

print (round(aprox,8))
-- EXECUTION TIME:
0.141487
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
2.55720175
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
2.55720193
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
2.55720884
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:46:04) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

while (cont < valor):
	# Denominador
	x = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))
-- OUTPUT:
3.60550833
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:46:11) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

while (cont < valor):
	# Denominador
	x = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))
-- OUTPUT:
3.60550833
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 21:46:21) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = sqrt(12)

while (cont < valor):
	# Denominador
	x = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))
-- EXECUTION TIME:
0.221139
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.60550833
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.6056206
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
3.60617343
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:48:39) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 0

# Variavel acumuladora
aprox = sqrt(12)

while (cont < valor):
	# Denominador
	x = (cont) * (cont * 1 + 1)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 16, in <module>
    aprox = aprox + (-1) ** (cont + 1) * 4 / x
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:54:06) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
pi = sqrt(12)

expoente = 0

while (cont < valor):
	# Denominador
	pi = pi * ( 1 / cont * (3 ** expoente))
	expoente = expoente + 1
	cont = cont + 2
	
	# Aproximacoes de PI
#	aprox = aprox + (-1) ** (cont + 1) * 4 / x
#	cont = cont + 1

print (round(aprox,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 23, in <module>
    print (round(aprox,8))
NameError: name 'aprox' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:54:25) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
pi = sqrt(12)

expoente = 0

while (cont < valor):
	# Denominador
	pi = pi * ( 1 / cont * (3 ** expoente))
	expoente = expoente + 1
	cont = cont + 2
	
	# Aproximacoes de PI
#	aprox = aprox + (-1) ** (cont + 1) * 4 / x
#	cont = cont + 1

print (round(pi,8))
-- OUTPUT:
216.45686378
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:54:38) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
pi = sqrt(12)

expoente = 0

while (cont < valor):
	# Denominador
	pi = pi * ( 1 / cont * (3 ** expoente))
	expoente = expoente + 1
	cont = cont + 2
	
	# Aproximacoes de PI
#	aprox = aprox + (-1) ** (cont + 1) * 4 / x
#	cont = cont + 1

print (round(pi,8))
-- OUTPUT:
216.45686378
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 21:54:44) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
pi = sqrt(12)

expoente = 0

while (cont < valor):
	# Denominador
	pi = pi * ( 1 / cont * (3 ** expoente))
	expoente = expoente + 1
	cont = cont + 2
	
	# Aproximacoes de PI
#	aprox = aprox + (-1) ** (cont + 1) * 4 / x
#	cont = cont + 1

print (round(pi,8))
-- EXECUTION TIME:
0.190173
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
216.45686378
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
268144.64369278
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
24.05076264
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:55:46) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
pi = sqrt(12)

expoente = 0

while (cont < valor):
	# Denominador
	pi = pi + (-1)  * ( 1 / cont * (3 ** expoente)) 
	expoente = expoente + 1
	cont = cont + 2
	
	# Aproximacoes de PI
#	aprox = aprox + (-1) ** (cont + 1) * 4 / x
#	cont = cont + 1

print (round(pi,8))
-- OUTPUT:
-13.19304124
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:56:35) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
pi = sqrt(12)

expoente = 0

while (cont < valor):
	# Denominador
	pi = pi * ((-1)  * (1 / cont * (3 ** expoente)) 
	expoente = expoente + 1
	cont = cont + 2
	
	# Aproximacoes de PI
#	aprox = aprox + (-1) ** (cont + 1) * 4 / x
#	cont = cont + 1

print (round(pi,8))
-- ERROR:
File "XXXX", line 16
    expoente = expoente + 1
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:56:45) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
pi = sqrt(12)

expoente = 0

while (cont < valor):
	# Denominador
	pi = pi * ((-1)  * (1 / cont * (3 ** expoente)) )
	expoente = expoente + 1
	cont = cont + 2
	
	# Aproximacoes de PI
#	aprox = aprox + (-1) ** (cont + 1) * 4 / x
#	cont = cont + 1

print (round(pi,8))
-- OUTPUT:
-216.45686378
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:58:49) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
pi = sqrt(12)

expoente = 0

while (cont < valor):
	# Denominador
	denominador = cont * (3 ** expoente)
	expoente = expoente + 1
	cont = cont + 2
	
	# Aproximacoes de PI
	pi = pi + (-1) ** (cont + 1) * 4 / denominador
	cont = cont + 1

print (round(pi,8))
-- OUTPUT:
7.17944553
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:59:07) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
pi = sqrt(12)

expoente = 0

while (cont < valor):
	# Denominador
	denominador = cont * (3 ** expoente)
	expoente = expoente + 1
	cont = cont + 2
	
	# Aproximacoes de PI
	pi = pi + (-1) ** (cont + 1) * 2 / denominador
	cont = cont + 1

print (round(pi,8))
-- OUTPUT:
5.32177357
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:59:17) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
pi = sqrt(12)

expoente = 0

while (cont < valor):
	# Denominador
	denominador = cont * (3 ** expoente)
	expoente = expoente + 1
	cont = cont + 2
	
	# Aproximacoes de PI
	pi = pi + (-1) ** (cont + 1) * 1 / denominador
	cont = cont + 1

print (round(pi,8))
-- OUTPUT:
4.39293759
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:59:41) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
pi = sqrt(12)

expoente = 0

while (cont < valor):
	# Denominador
	denominador = cont * (3 ** expoente)
	expoente = expoente + 1
	cont = cont + 2
	
	# Aproximacoes de PI
	pi = pi + (-1) ** (cont + 1) / denominador
	cont = cont + 1

print (round(pi,8))
-- OUTPUT:
4.39293759
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:59:48) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
pi = sqrt(12)

expoente = 0

while (cont < valor):
	# Denominador
	denominador = cont * (3 ** expoente)
	expoente = expoente + 1
	cont = cont + 2
	
	# Aproximacoes de PI
	pi = pi + (-1) ** (cont + 1) / denominador
	cont = cont + 1

print (round(pi,8))
-- OUTPUT:
4.39293759
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 22:00:21) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
pi = sqrt(12)

expoente = 0

while (cont < valor):
	# Denominador
	denominador = cont * (3 ** expoente)
	expoente = expoente + 1
	cont = cont + 2
	
	# Aproximacoes de PI
	pi = pi + (-1) ** 1 / denominador
	cont = cont + 1

print (round(pi,8))
-- OUTPUT:
2.36119156
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 22:00:36) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
pi = sqrt(12)

expoente = 0

while (cont < valor):
	# Denominador
	denominador = cont * (3 ** expoente)
	expoente = expoente + 1
	cont = cont + 2
	
	# Aproximacoes de PI
	pi = pi + (-1) * 1 / denominador
	cont = cont + 1

print (round(pi,8))
-- OUTPUT:
2.36119156
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 22:01:16) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
pi = sqrt(12)

expoente = 0

while (cont < valor):
	# Denominador
	denominador = cont * (3 ** expoente)
	expoente = expoente + 1
	cont = cont + 2
	
	# Aproximacoes de PI
	pi = pi + (-1) * (1 / denominador)
	cont = cont + 1

print (round(pi,8))
-- OUTPUT:
2.36119156
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 22:01:40) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
pi = sqrt(12)

expoente = 0

while (cont < valor):
	# Denominador
	denominador = cont * (3 ** expoente)
	expoente = expoente + 1
	cont = cont + 2
	
	# Aproximacoes de PI
	pi = pi + (-1) * (1 / denominador)

print (round(pi,8))
-- OUTPUT:
2.32410553
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 22:07:21) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
pi = sqrt(12)

expoente = 0

while (cont < valor):
	# Denominador
	denominador = cont * (3 ** expoente)
	expoente = expoente + 1
	cont = cont + 2
	
	# Aproximacoes de PI
	pi = pi + (-1) * (1 / denominador)

print (round(pi,8))
-- OUTPUT:
2.32410553
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 22:28:21) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

cont = 1 # Variavel contadora
pi = sqrt(12) # Variavel acumuladora

#Denominador
expoente = 0
variavel = 1

while (cont < valor):
	# Denominador
	calculoExp = 3 ** (expoente + 1)
	expoente = expoente + 1
	
	variavel = variavel + 2
	
	denominador = varial * calculoExp
		
	# Aproximacoes de PI
	pi = pi + (-1) * (1 / denominador)

print (round(pi,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 19, in <module>
    denominador = varial * calculoExp
NameError: name 'varial' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 22:28:38) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

cont = 1 # Variavel contadora
pi = sqrt(12) # Variavel acumuladora

#Denominador
expoente = 0
variavel = 1

while (cont < valor):
	# Denominador
	calculoExp = 3 ** (expoente + 1)
	expoente = expoente + 1
	
	variavel = variavel + 2
	
	denominador = variavel * calculoExp
		
	# Aproximacoes de PI
	pi = pi + (-1) * (1 / denominador)

print (round(pi,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 19, in <module>
    denominador = varial * calculoExp
NameError: name 'varial' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 22:28:48) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

cont = 1 # Variavel contadora
pi = sqrt(12) # Variavel acumuladora

#Denominador
expoente = 0
variavel = 1

while (cont < valor):
	# Denominador
	calculoExp = 3 ** (expoente + 1)
	expoente = expoente + 1
	
	variavel = variavel + 2
	
	denominador = variavel * calculoExp
		
	# Aproximacoes de PI
	pi = pi + (-1) * (1 / denominador)

print (round(pi,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 19, in <module>
    denominador = varial * calculoExp
NameError: name 'varial' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 22:30:16) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

cont = 1 # Variavel contadora
pi = sqrt(12) # Variavel acumuladora

#Denominador
expoente = 0
variavel = 1

while (cont >= 1):
	# Denominador
	calculoExp = 3 ** (expoente + 1)
	expoente = expoente + 1
	
	variavel = variavel + 2
	denominador = variavel * calculoExp
		
	# Aproximacoes de PI
	pi = pi + (-1) * (1 / denominador)

print (round(pi,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 19, in <module>
    denominador = varial * calculoExp
NameError: name 'varial' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 22:30:44) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

cont = 1 # Variavel contadora
pi = sqrt(12) # Variavel acumuladora

#Denominador
expoente = 0
variavel = 1

while (valor >= 1):
	# Denominador
	calculoExp = 3 ** (expoente + 1)
	expoente = expoente + 1
	
	variavel = variavel + 2
	denominador = variavel * calculoExp
		
	# Aproximacoes de PI
	pi = pi + (-1) * (1 / denominador)

print (round(pi,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 19, in <module>
    denominador = varial * calculoExp
NameError: name 'varial' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 22:32:44) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

cont = 1 # Variavel contadora
pi = sqrt(12) # Variavel acumuladora

#Denominador
expoente = 0
variavel = 1

while (valor >= 1):
	# Denominador
	denominador = variavel * 3 ** (expoente + 1)
	variavel = variavel + 2
	expoente = expoente + 1
		
	# Aproximacoes de PI
	pi = pi + (-1) * (1 / denominador)

print (round(pi,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 19, in <module>
    denominador = varial * calculoExp
NameError: name 'varial' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 22:33:20) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

cont = 1 # Variavel contadora
pi = sqrt(12) # Variavel acumuladora

#Denominador
expoente = 0
variavel = 0

while (valor >= 1):
	# Denominador
	denominador = variavel * 3 ** (expoente + 1)
	variavel = variavel + 2
	expoente = expoente + 1
		
	# Aproximacoes de PI
	pi = pi + (-1) * (1 / denominador)

print (round(pi,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 19, in <module>
    pi = pi + (-1) * (1 / denominador)
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 22:34:06) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

cont = 1 # Variavel contadora
pi = sqrt(12) # Variavel acumuladora

#Denominador
expoente = 0
variavel = 1

while (valor >= 1):
	# Denominador
	denominador = variavel * 3 ** (expoente)
	variavel = variavel + 2
	expoente = expoente + 1
		
	# Aproximacoes de PI
	pi = pi + (-1) * (1 / denominador)

print (round(pi,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 19, in <module>
    pi = pi + (-1) * (1 / denominador)
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 22:34:44) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

cont = 1 # Variavel contadora
pi = sqrt(12) # Variavel acumuladora

#Denominador
expoente = 0
variavel = 1

while (valor >= 1):
	# Denominador
	denominador = variavel * (3 ** (expoente))
	variavel = variavel + 2
	expoente = expoente + 1
		
	# Aproximacoes de PI
	pi = pi + (-1) * (1 / denominador)

print (round(pi,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 19, in <module>
    pi = pi + (-1) * (1 / denominador)
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 22:56:01) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

cont = 1 # Variavel contadora
pi = sqrt(12) # Variavel acumuladora

#Denominador
expoente = 0
variavel = 1

while (cont >= 1):
	# Denominador
	calculoExp = 3 ** (expoente + 1)
	expoente = expoente + 1
	
	variavel = variavel + 2
	denominador = variavel * calculoExp
		
	# Aproximacoes de PI
	pi = pi + (-1) * (1 / denominador)

print (round(pi,8))
-- EXECUTION TIME:
708.228
-- ERROR:
Killed

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 10:34:32) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

cont = 0 # Variavel contadora
pi = sqrt(12) # Variavel acumuladora

#Denominador
expoente = 0
variavel = 0

while (cont < valor):
	# Denominador
	denominador = variavel * (3 ** (expoente))
	variavel = variavel + 2
	expoente = expoente + 1
		
	# Aproximacoes de PI
	pi = pi + (-1) * (1 / denominador)

print (round(pi,8))
-- EXECUTION TIME:
0.150977
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1716/2502/main.py", line 19, in <module>
    pi = pi + (-1) * (1 / denominador)
ZeroDivisionError: division by zero

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 10:37:08) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

cont = 0 # Variavel contadora
pi = sqrt(12) # Variavel acumuladora

#Denominador
expoente = 0
variavel = 0

while (cont < valor):
	# Denominador
	denominador = (2 * cont + 1) * 3 ** expoente
	
	# Aproximacoes de PI
	pi = pi + (-1) * denominador
	
	resultado = resultado + pi
	cont = cont + 1
	expoente = expoente + 1

print (round(pi,8))
-- EXECUTION TIME:
0.155884
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1716/2502/main.py", line 19, in <module>
    resultado = resultado + pi
NameError: name 'resultado' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 10:37:10) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

cont = 0 # Variavel contadora
pi = sqrt(12) # Variavel acumuladora

#Denominador
expoente = 0
variavel = 0

while (cont < valor):
	# Denominador
	denominador = (2 * cont + 1) * 3 ** expoente
	
	# Aproximacoes de PI
	pi = pi + (-1) * denominador
	
	resultado = resultado + pi
	cont = cont + 1
	expoente = expoente + 1

print (round(pi,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 19, in <module>
    resultado = resultado + pi
NameError: name 'resultado' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 10:37:37) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

cont = 0 # Variavel contadora
pi = sqrt(12) # Variavel acumuladora

#Denominador
expoente = 0
resultado = 0

while (cont < valor):
	# Denominador
	denominador = (2 * cont + 1) * 3 ** expoente
	
	# Aproximacoes de PI
	pi = pi + (-1) * denominador
	
	resultado = resultado + pi
	cont = cont + 1
	expoente = expoente + 1

print (round(pi,8))
-- EXECUTION TIME:
0.271669
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
-1771467.53589838
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
-200884695.5358984
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
-45924.53589838
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 10:37:38) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

cont = 0 # Variavel contadora
pi = sqrt(12) # Variavel acumuladora

#Denominador
expoente = 0
resultado = 0

while (cont < valor):
	# Denominador
	denominador = (2 * cont + 1) * 3 ** expoente
	
	# Aproximacoes de PI
	pi = pi + (-1) * denominador
	
	resultado = resultado + pi
	cont = cont + 1
	expoente = expoente + 1

print (round(pi,8))
-- OUTPUT:
-1771467.53589838
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 10:37:59) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

cont = 0 # Variavel contadora
pi = sqrt(12) # Variavel acumuladora

#Denominador
expoente = 0
resultado = 0

while (cont < valor):
	# Denominador
	denominador = (2 * cont + 1) * 3 ** expoente
	
	# Aproximacoes de PI
	pi = pi * (-1) / denominador
	
	resultado = resultado + pi
	cont = cont + 1
	expoente = expoente + 1

print (round(pi,8))
-- OUTPUT:
-0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 10:38:05) 
-- CODE:
from math import *

valor = float(input("Informe o valor de aproximacoes: "))

cont = 0 # Variavel contadora
pi = sqrt(12) # Variavel acumuladora

#Denominador
expoente = 0
resultado = 0

while (cont < valor):
	# Denominador
	denominador = (2 * cont + 1) * 3 ** expoente
	
	# Aproximacoes de PI
	pi = pi * (-1) / denominador
	
	resultado = resultado + pi
	cont = cont + 1
	expoente = expoente + 1

print (round(pi,8))
-- EXECUTION TIME:
0.222813
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
-0.0
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
-0.0
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 10:38:15) 
-- CODE:
n = int(input("repeticao do termo: "))
soma = 0
i = 0
expoente = 0
sinal = 1
while(i<n):
	d = ((2*i)+1)*(3**expoente)
	x = 12**(1/2)*(sinal*1)/d
	soma = soma + x 
	i= i+1
	sinal = sinal *(-1)
	expoente = expoente + 1
print(round(soma, 8))
-- EXECUTION TIME:
0.192831
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.1415933
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.14159266
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
3.14156872
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 10:43:23) 
-- CODE:
from math import *

numeroN = int(input("Informe valor de N: "))

# Variaveis do Denominador
cont = 0
expoente = 0

# Variaveis do Restante do Cálculo
soma = 0
sinal = 1

while (cont<n):
	denominador = ((2 * cont) + 1) * (3 ** expoente)
	x = sqrt(12) * (sinal * 1) / denominador
	soma = soma + x 
	cont= cont+1
	sinal = sinal * (-1)
	expoente = expoente + 1
print(round(soma, 8))
-- EXECUTION TIME:
0.185617
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1716/2502/main.py", line 13, in <module>
    while (cont<n):
NameError: name 'n' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 10:43:28) 
-- CODE:
from math import *

numeroN = int(input("Informe valor de N: "))

# Variaveis do Denominador
cont = 0
expoente = 0

# Variaveis do Restante do Cálculo
soma = 0
sinal = 1

while (cont<n):
	denominador = ((2 * cont) + 1) * (3 ** expoente)
	x = sqrt(12) * (sinal * 1) / denominador
	soma = soma + x 
	cont= cont+1
	sinal = sinal * (-1)
	expoente = expoente + 1
print(round(soma, 8))
-- EXECUTION TIME:
0.165737
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1716/2502/main.py", line 13, in <module>
    while (cont<n):
NameError: name 'n' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 10:44:56) 
-- CODE:
from math import *

numeroN = int(input("Informe valor de N: "))

# Variaveis do Denominador
cont = 0
expoente = 0

# Variaveis do Restante do Cálculo
soma = 0
sinal = 1

while (cont<n):
	denominador = ((2 * cont) + 1) * (3 ** expoente)
	x = (sqrt(12) * (sinal * 1) / denominador
	soma = soma + x 
	cont= cont+1
	sinal = sinal * (-1)
	expoente = expoente + 1
print(round(soma, 8))
-- EXECUTION TIME:
0.12322
-- ERROR:
  File "/home/codebench/codes/1716/2502/main.py", line 16
    soma = soma + x 
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 10:45:09) 
-- CODE:
from math import *

numeroN = int(input("Informe valor de N: "))

# Variaveis do Denominador
cont = 0
expoente = 0

# Variaveis do Restante do Cálculo
soma = 0
sinal = 1

while (cont<n):
	denominador = ((2 * cont) + 1) * (3 ** expoente)
	x = 12 ** 1/2 * (sinal * 1) / denominador
	soma = soma + x 
	cont= cont+1
	sinal = sinal * (-1)
	expoente = expoente + 1
print(round(soma, 8))
-- EXECUTION TIME:
0.211559
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1716/2502/main.py", line 13, in <module>
    while (cont<n):
NameError: name 'n' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 10:45:33) 
-- CODE:
from math import *

numeroN = int(input("Informe valor de N: "))

# Variaveis do Denominador
cont = 0
expoente = 0

# Variaveis do Restante do Cálculo
soma = 0
sinal = 1

while (cont<n):
	denominador = ((2 * cont) + 1) * (3 ** expoente)
	x = (12 ** (1/2)) * (sinal * 1) / denominador
	soma = soma + x 
	cont= cont+1
	sinal = sinal * (-1)
	expoente = expoente + 1
print(round(soma, 8))
-- EXECUTION TIME:
0.17406
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1716/2502/main.py", line 13, in <module>
    while (cont<n):
NameError: name 'n' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 10:45:36) 
-- CODE:
from math import *

numeroN = int(input("Informe valor de N: "))

# Variaveis do Denominador
cont = 0
expoente = 0

# Variaveis do Restante do Cálculo
soma = 0
sinal = 1

while (cont<n):
	denominador = ((2 * cont) + 1) * (3 ** expoente)
	x = (12 ** (1/2)) * (sinal * 1) / denominador
	soma = soma + x 
	cont= cont+1
	sinal = sinal * (-1)
	expoente = expoente + 1
print(round(soma, 8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    while (cont<n):
NameError: name 'n' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 10:45:55) 
-- CODE:
from math import *

numeroN = int(input("Informe valor de N: "))

# Variaveis do Denominador
cont = 0
expoente = 0

# Variaveis do Restante do Cálculo
soma = 0
sinal = 1

while (cont < numeroN):
	denominador = ((2 * cont) + 1) * (3 ** expoente)
	x = (12 ** (1/2)) * (sinal * 1) / denominador
	soma = soma + x 
	cont= cont+1
	sinal = sinal * (-1)
	expoente = expoente + 1
print(round(soma, 8))
-- OUTPUT:
3.1415933
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 10:46:02) 
-- CODE:
from math import *

numeroN = int(input("Informe valor de N: "))

# Variaveis do Denominador
cont = 0
expoente = 0

# Variaveis do Restante do Cálculo
soma = 0
sinal = 1

while (cont < numeroN):
	denominador = ((2 * cont) + 1) * (3 ** expoente)
	x = (12 ** (1/2)) * (sinal * 1) / denominador
	soma = soma + x 
	cont= cont+1
	sinal = sinal * (-1)
	expoente = expoente + 1
print(round(soma, 8))
-- EXECUTION TIME:
0.21236
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.1415933
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.14159266
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
3.14156872
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 10:54:09) 
-- CODE:
from math import *

numeroN = int(input("Informe valor de N: "))

# Variaveis do Denominador
cont = 0
expoente = 0

# Variaveis do Restante do Cálculo
soma = 0
sinal = 1

while (cont < numeroN):
	denominador = ((2 * cont) + 1) * (3 ** expoente)
	x = (sqrt(12)) * (sinal * 1) / denominador
	soma = soma + x 
	cont= cont+1
	sinal = sinal * (-1)
	expoente = expoente + 1
print(round(soma, 8))
-- OUTPUT:
3.1415933
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 10:54:16) 
-- CODE:
from math import *

numeroN = int(input("Informe valor de N: "))

# Variaveis do Denominador
cont = 0
expoente = 0

# Variaveis do Restante do Cálculo
soma = 0
sinal = 1

while (cont < numeroN):
	denominador = ((2 * cont) + 1) * (3 ** expoente)
	x = (sqrt(12)) * (sinal * 1) / denominador
	soma = soma + x 
	cont= cont+1
	sinal = sinal * (-1)
	expoente = expoente + 1
print(round(soma, 8))
-- EXECUTION TIME:
0.201875
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.1415933
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.14159266
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
3.14156872
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 10:55:58) 
-- CODE:
from math import *

numeroN = int(input("Informe valor de N: "))

# Variaveis do Denominador
cont = 0
expoente = 0

# Variaveis do Restante do Cálculo
soma = 0
sinal = 1

while (cont < numeroN):
	# Denominador
	denominador = ((2 * cont) + 1) * (3 ** expoente)
	
	
	calculo = (sqrt(12)) * (sinal * 1) / denominador
	soma = soma + calculo 
	cont= cont+1
	sinal = sinal * (-1)
	expoente = expoente + 1
print(round(soma, 8))
-- EXECUTION TIME:
0.151266
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.1415933
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.14159266
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
3.14156872
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 10:56:40) 
-- CODE:
from math import *

numeroN = int(input("Informe valor de N: "))

# Variaveis do Denominador
cont = 0
expoente = 0

# Variaveis do Restante do Cálculo
soma = 0
sinal = 1

while (cont < numeroN):
	# Denominador
	denominador = ((2 * cont) + 1) * (3 ** expoente)
	
	# Calculo com as demais variaveis
	calculo = (sqrt(12)) * (sinal * 1) / denominador
	
	resultado = resultado + calculo 
	cont= cont+1
	sinal = sinal * (-1)
	expoente = expoente + 1
print(round(resultado, 8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 20, in <module>
    resultado = resultado + calculo 
NameError: name 'resultado' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 10:56:55) 
-- CODE:
from math import *

numeroN = int(input("Informe valor de N: "))

# Variaveis do Denominador
cont = 0
expoente = 0

# Variaveis do Restante do Cálculo
resultado = 0
sinal = 1

while (cont < numeroN):
	# Denominador
	denominador = ((2 * cont) + 1) * (3 ** expoente)
	
	# Calculo com as demais variaveis
	calculo = (sqrt(12)) * (sinal * 1) / denominador
	
	resultado = resultado + calculo 
	cont= cont+1
	sinal = sinal * (-1)
	expoente = expoente + 1
print(round(resultado, 8))
-- OUTPUT:
3.1415933
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 10:57:03) 
-- CODE:
from math import *

numeroN = int(input("Informe valor de N: "))

# Variaveis do Denominador
cont = 0
expoente = 0

# Variaveis do Restante do Cálculo
resultado = 0
sinal = 1

while (cont < numeroN):
	# Denominador
	denominador = ((2 * cont) + 1) * (3 ** expoente)
	
	# Calculo com as demais variaveis
	calculo = (sqrt(12)) * (sinal * 1) / denominador
	
	resultado = resultado + calculo 
	cont= cont+1
	sinal = sinal * (-1)
	expoente = expoente + 1
print(round(resultado, 8))
-- EXECUTION TIME:
0.142247
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.1415933
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.14159266
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
3.14156872
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
