== TEST (2019-03-22 11:11:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
X =int(input(""))
Y =int(input(""))

p=x
t=y
q=x//y
w=q%x
print(x,y)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    p=x
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 11:12:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
X =int(input(""))
Y =int(input(""))

p=x
t=y
q=x//y
w=q%x
print(p,t,q,w)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    p=x
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 11:12:37) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
X =int(input(""))
Y =int(input(""))

p=x
t=y
q=x//y
w=q%x
print(p)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    p=x
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 11:13:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
X =int(input(""))
Y =int(input(""))

p=x
t=y
q=x//y
w=q%x
print(p)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    p=x
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 11:13:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x =int(input(""))
y =int(input(""))

p=x
t=y
q=x//y
w=q%x
print(p)
-- OUTPUT:
8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 11:13:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x =int(input(""))
y =int(input(""))

p=x
t=y
q=x//y
w=q%x
print(p,t,q,w)
-- OUTPUT:
8 5 1 1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 11:13:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x =int(input(""))
y =int(input(""))

p=x
t=y
q=x//y
w=q%y
print(p,t,q,w)
-- OUTPUT:
8 5 1 1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 11:14:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x =int(input(""))
y =int(input(""))

p=x
t=y
q=x//y
w=q%y
print(p,t,q,w)
-- EXECUTION TIME:
0.153307
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
8 5 1 1
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
14 2 7 1
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
347 2 173 1
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 11:15:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x =int(input(""))
y =int(input(""))

p=x
t=y
q=x//y
w=q%
print(p,t,q,w)
-- EXECUTION TIME:
0.207381
-- ERROR:
  File "/home/codebench/codes/1595/2049/main.py", line 10
    w=q%
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 11:15:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x =int(input(""))
y =int(input(""))

p=x
t=y
q=x//y
w=q%
print(p,t,q,w)
-- ERROR:
File "XXXX", line 10
    w=q%
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 11:16:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x =int(input(""))
y =int(input(""))

p=x
t=y
q=x//y
w=x%y
print(p,t,q,w)
-- OUTPUT:
8 5 1 3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 11:16:21) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x =int(input(""))
y =int(input(""))

p=x
t=y
q=x//y
w=x%y
print(p,t,q,w)
-- EXECUTION TIME:
0.257002
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
8 5 1 3
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
14 2 7 0
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
347 2 173 1
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
