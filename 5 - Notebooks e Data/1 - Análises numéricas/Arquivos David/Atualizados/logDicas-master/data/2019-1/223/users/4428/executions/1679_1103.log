== TEST (2019-05-02 14:49:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Digite o valor de x: "))
a = float(input("Digite o valor de a: "))
b = float(input("Digite o valor de b: "))

if(a <= x and x <= b)
	print(x,"pertence ao intervalo", a, ",", b)


-- ERROR:
File "XXXX", line 9
    if(a <= x and x <= b)
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 14:50:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Digite o valor de x: "))
a = float(input("Digite o valor de a: "))
b = float(input("Digite o valor de b: "))

if(a <= x and x <= b):
	print(x,"pertence ao intervalo", a, ",", b)


-- ERROR:
File "XXXX", line 9
    if(a <= x and x <= b)
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 14:52:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Digite o valor de x: "))
a = float(input("Digite o valor de a: "))
b = float(input("Digite o valor de b: "))

if(a <= x and x <= b):
	print(x,"pertence ao intervalo", a, ",", b)
elif(b <= a)
	print(x, "nao pertence ao intervalo", a, ",", b)


-- ERROR:
File "XXXX", line 11
    elif(b <= a)
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 14:52:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Digite o valor de x: "))
a = float(input("Digite o valor de a: "))
b = float(input("Digite o valor de b: "))

if(a <= x and x <= b):
	print(x,"pertence ao intervalo", a, ",", b)
elif(b <= a):
	print(x, "nao pertence ao intervalo", a, ",", b)


-- ERROR:
File "XXXX", line 11
    elif(b <= a)
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 14:53:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Digite o valor de x: "))
a = float(input("Digite o valor de a: "))
b = float(input("Digite o valor de b: "))

if(a <= x and x <= b):
	print(x,"pertence ao intervalo", a, ",", b)
elif(b <= a):
	print(x, "nao pertence ao intervalo", a, ",", b)


-- ERROR:
File "XXXX", line 11
    elif(b <= a)
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 14:58:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Digite o valor de x: "))
a = float(input("Digite o valor de a: "))
b = float(input("Digite o valor de b: "))

if(a <= x and x <= b):
	print(x,"pertence ao intervalo", a, ",", b)
elif(b <= a):
	print("Entradas" a, "e", b, "invalidas")
else:
	print(x, "nao pertence ao intervalo", a, ",", b)

	


-- ERROR:
File "XXXX", line 12
    print("Entradas" a, "e", b, "invalidas")
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 14:58:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Digite o valor de x: "))
a = float(input("Digite o valor de a: "))
b = float(input("Digite o valor de b: "))

if(a <= x and x <= b):
	print(x,"pertence ao intervalo", a, ",", b)
elif(b <= a):
	print("Entradas" a, "e", b, "invalidas")
else:
	print(x, "nao pertence ao intervalo", a, ",", b)

	


-- ERROR:
File "XXXX", line 12
    print("Entradas" a, "e", b, "invalidas")
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 14:58:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Digite o valor de x: "))
a = float(input("Digite o valor de a: "))
b = float(input("Digite o valor de b: "))

if(a <= x and x <= b):
	print(x,"pertence ao intervalo", a, ",", b)
elif(b <= a):
	print("Entradas" a, "e", b, "invalidas")
else:
	print(x, "nao pertence ao intervalo", a, ",", b)

	


-- ERROR:
File "XXXX", line 12
    print("Entradas" a, "e", b, "invalidas")
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 15:49:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Digite o valor de x: "))
a = float(input("Digite o valor de a: "))
b = float(input("Digite o valor de b: "))

if(a <= x and x <= b):
	print(x,"pertence ao intervalo", a, ",", b)
elif(b <= a):
	print("Entradas", a, "e", b, "invalidas")
else:
	print(x, "nao pertence ao intervalo", a, ",", b)

	


-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 15:52:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Digite o valor de x: "))
a = float(input("Digite o valor de a: "))
b = float(input("Digite o valor de b: "))

if(a <= x and x <= b):
	print(x,"pertence ao intervalo", a, ",", b)
elif(b <= a):
	print("Entradas", a, "e", b, "invalidas")
else:
	print(x, "nao pertence ao intervalo", a, ",", b)

	


-- EXECUTION TIME:
0.160715
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
