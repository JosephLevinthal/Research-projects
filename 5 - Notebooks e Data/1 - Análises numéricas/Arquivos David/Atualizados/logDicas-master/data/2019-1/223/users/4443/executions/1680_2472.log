== TEST (2019-05-02 09:20:11) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
q1 = input("Digite a alternativa (a, b, c, d, ou e): ")
q2 = input("Digite a alternativa (a, b, c, d, ou e): ")
q3 = input("Digite a alternativa (a, b, c, d, ou e): ") 
g1 = input("Digite a alternativa correta (a, b, c, d, ou e): ")
g2 = input("Digite a alternativa correta (a, b, c, d, ou e): ")
g3 = input("Digite a alternativa correta (a, b, c, d, ou e): ")
pts = 0
if(q1 == g1):
	pts == pts + 1
if(q2 == g2):
	pts = pts + 1
if(q3 == g3):
	pts = pts + 1
print(pts)	
-- OUTPUT:
Entradas: 0 anos e IMC 0.0
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 09:22:24) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
q1 = input("Digite a alternativa da q1 (a, b, c, d, ou e): ")
q2 = input("Digite a alternativa da q2 (a, b, c, d, ou e): ")
q3 = input("Digite a alternativa da q3 (a, b, c, d, ou e): ") 
g1 = input("Digite o gabarito da q1 (a, b, c, d, ou e): ")
g2 = input("Digite o gabarito da q2 (a, b, c, d, ou e): ")
g3 = input("Digite o gabarito da q3 (a, b, c, d, ou e): ")
pts = 0
if(q1 == g1):
	pts == pts + 1
if(q2 == g2):
	pts = pts + 1
if(q3 == g3):
	pts = pts + 1
print(pts)	
-- OUTPUT:
Entradas: 0 anos e IMC 0.0
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 09:22:51) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
q1 = input("Digite a alternativa da q1 (a, b, c, d, ou e): ")
q2 = input("Digite a alternativa da q2 (a, b, c, d, ou e): ")
q3 = input("Digite a alternativa da q3 (a, b, c, d, ou e): ") 
g1 = input("Digite o gabarito da q1 (a, b, c, d, ou e): ")
g2 = input("Digite o gabarito da q2 (a, b, c, d, ou e): ")
g3 = input("Digite o gabarito da q3 (a, b, c, d, ou e): ")
pts = 0
if(q1 == g1):
	pts = pts + 1
if(q2 == g2):
	pts = pts + 1
if(q3 == g3):
	pts = pts + 1
print(pts)	
-- OUTPUT:
Entradas: 0 anos e IMC 0.0
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 09:23:07) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
q1 = input("Digite a alternativa da q1 (a, b, c, d, ou e): ")
q2 = input("Digite a alternativa da q2 (a, b, c, d, ou e): ")
q3 = input("Digite a alternativa da q3 (a, b, c, d, ou e): ") 
g1 = input("Digite o gabarito da q1 (a, b, c, d, ou e): ")
g2 = input("Digite o gabarito da q2 (a, b, c, d, ou e): ")
g3 = input("Digite o gabarito da q3 (a, b, c, d, ou e): ")
pts = 0
if(q1 == g1):
	pts = pts + 1
if(q2 == g2):
	pts = pts + 1
if(q3 == g3):
	pts = pts + 1
print(pts)	
-- OUTPUT:
Entradas: 0 anos e IMC 0.0
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 09:23:22) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
q1 = input("Digite a alternativa da q1 (a, b, c, d, ou e): ")
q2 = input("Digite a alternativa da q2 (a, b, c, d, ou e): ")
q3 = input("Digite a alternativa da q3 (a, b, c, d, ou e): ") 
g1 = input("Digite o gabarito da q1 (a, b, c, d, ou e): ")
g2 = input("Digite o gabarito da q2 (a, b, c, d, ou e): ")
g3 = input("Digite o gabarito da q3 (a, b, c, d, ou e): ")
pts = 0
if(q1 == g1):
	pts = pts + 1
if(q2 == g2):
	pts = pts + 1
if(q3 == g3):
	pts = pts + 1
print(pts)	
-- EXECUTION TIME:
0.126551
-- TEST CASE 1:
---- input:
a
b
c
d
e
a
---- correct output:
0
---- user output:
0
-- TEST CASE 2:
---- input:
a
b
c
a
b
c
---- correct output:
3
---- user output:
3
-- TEST CASE 3:
---- input:
c
d
e
c
d
c
---- correct output:
2
---- user output:
2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
