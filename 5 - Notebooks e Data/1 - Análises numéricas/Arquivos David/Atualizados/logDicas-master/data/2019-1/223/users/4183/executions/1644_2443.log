== TEST (2019-04-07 22:41:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("Digite raio: "))
x = float(input("Digite altura: "))
w = float(input("Opcao desejada (1/2): "))
va = pi*x**2*(3*r - x)/3
vc = (4*pi*r**3)/3
dva = vc - va
if (w=="1"):
	print(round(va,4))
else: 
	print(round(dva,4))


-- OUTPUT:
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 22:42:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("Digite raio: "))
x = float(input("Digite altura: "))
w = float(input("Opcao desejada (1/2): "))
va = pi*x**2*(3*r - x)/3
vc = (4*pi*r**3)/3
dva = vc - va
if (w=="1"):
	print(round(va,4))
else: 
	print(round(dva,4))


-- EXECUTION TIME:
0.282513
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
170.5687
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 22:42:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("Digite raio: "))
x = float(input("Digite altura: "))
w = float(input("Opcao desejada (1/2): "))
va = pi*x**2*(3*r - x)/3
vc = (4*pi*r**3)/3
dva = vc - va
if (w=="1"):
	print(round(va,4))
else: 
	print(round(dva,4))


-- OUTPUT:
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 22:43:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("Digite raio: "))
x = float(input("Digite altura: "))
w = float(input("Opcao desejada (1/2): "))
va = pi*x**2*(3*r - x)/3
vc = (4*pi*r**3)/3
dva = vc - va
if (w=="1"):
	print(round(va,4))
else: 
	print(round(dva,4))


-- EXECUTION TIME:
0.166651
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
170.5687
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 22:43:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("Digite raio: "))
x = float(input("Digite altura: "))
w = input("Opcao desejada (1/2): ")
va = pi*x**2*(3*r - x)/3
vc = (4*pi*r**3)/3
dva = vc - va
if (w=="1"):
	print(round(va,4))
else: 
	print(round(dva,4))


-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 22:43:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("Digite raio: "))
x = float(input("Digite altura: "))
w = input("Opcao desejada (1/2): ")
va = pi*x**2*(3*r - x)/3
vc = (4*pi*r**3)/3
dva = vc - va
if (w=="1"):
	print(round(va,4))
else: 
	print(round(dva,4))


-- EXECUTION TIME:
0.207261
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
