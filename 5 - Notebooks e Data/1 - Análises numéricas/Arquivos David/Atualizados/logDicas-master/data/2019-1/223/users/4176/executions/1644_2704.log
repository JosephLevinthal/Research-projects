== TEST (2019-04-11 16:22:29) 
-- CODE:
nota= int(input('Nota do aluno: '))
condicao= input("Bonificacao: ")
if (condicao = 'S'):
	print('S')

else:
	print('N')


-- ERROR:
File "XXXX", line 3
    if (condicao = 'S'):
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:22:44) 
-- CODE:
nota= int(input('Nota do aluno: '))
condicao= input("Bonificacao: ")
if (condicao = s):
	print('S')

else:
	print('N')


-- ERROR:
File "XXXX", line 3
    if (condicao = s):
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:22:54) 
-- CODE:
nota= int(input('Nota do aluno: '))
condicao= input("Bonificacao: ")
if (condicao = "S"):
	print('S')

else:
	print('N')


-- ERROR:
File "XXXX", line 3
    if (condicao = "S"):
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:23:12) 
-- CODE:
nota= int(input('Nota do aluno: '))
condicao= stg(input("Bonificacao: ")
if (condicao = "S"):
	print('S')

else:
	print('N')


-- ERROR:
File "XXXX", line 3
    if (condicao = "S"):
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:23:23) 
-- CODE:
nota= int(input('Nota do aluno: '))
condicao= input("Bonificacao: ")
if (condicao = "S"):
	print('S')

else:
	print('N')


-- ERROR:
File "XXXX", line 3
    if (condicao = "S"):
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:23:40) 
-- CODE:
nota= int(input('Nota do aluno: '))
condicao= input("Bonificacao: ")
if (condicao = "S"):
	print("S")

else:
	print('N')


-- ERROR:
File "XXXX", line 3
    if (condicao = "S"):
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:30:43) 
-- CODE:
nota= int(input('Nota do aluno: '))
condicao= input("Bonificacao: ")
if (condicao = "S"):
	print("S")

else:
	print('N')


-- ERROR:
File "XXXX", line 3
    if (condicao = "S"):
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:39:07) 
-- CODE:
nota= int(input('Nota do aluno: '))
condicao= input("Bonificacao: ")

formula = (nota + (nota - 10/100))


if (condicao = "S"):
	print("S")
	print(formula)

else:
	print('N')


-- ERROR:
File "XXXX", line 7
    if (condicao = "S"):
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:40:07) 
-- CODE:
nota= int(input('Nota do aluno: '))
condicao= input("Bonificacao: ")

formula = (nota + (nota - 10/100))


if (condicao = "S"):
	print("S")
	print(formula)

else:
	print('N')


-- ERROR:
File "XXXX", line 7
    if (condicao = "S"):
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:43:42) 
-- CODE:
nota= int(input('Nota do aluno: '))
condicao= input("Bonificacao: ")

formula = (nota + (nota - 10/100))


if (condicao == "S"):
	print("S")
	print(formula)

else:
	print('N')


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    nota= int(input())
ValueError: invalid literal for int() with base 10: '5.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 16:43:44) 
-- CODE:
nota= int(input('Nota do aluno: '))
condicao= input("Bonificacao: ")

formula = (nota + (nota - 10/100))


if (condicao == "S"):
	print("S")
	print(formula)

else:
	print('N')


-- EXECUTION TIME:
0.147319
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/2704/main.py", line 1, in <module>
    nota= int(input())
ValueError: invalid literal for int() with base 10: '5.0'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:44:53) 
-- CODE:
nota= int(input('Nota do aluno: '))
condicao= input("Bonificacao: ")

formula = (nota + (nota * 100))


if (condicao == "S"):
	print("S")
	print(formula)

else:
	print('N')


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    nota= int(input())
ValueError: invalid literal for int() with base 10: '5.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 16:44:55) 
-- CODE:
nota= int(input('Nota do aluno: '))
condicao= input("Bonificacao: ")

formula = (nota + (nota * 100))


if (condicao == "S"):
	print("S")
	print(formula)

else:
	print('N')


-- EXECUTION TIME:
0.206844
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/2704/main.py", line 1, in <module>
    nota= int(input())
ValueError: invalid literal for int() with base 10: '5.0'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:45:14) 
-- CODE:
nota= int(input('Nota do aluno: '))
condicao= input("Bonificacao: ")

formula = (nota + (nota * nota/100))


if (condicao == "S"):
	print("S")
	print(formula)

else:
	print('N')


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    nota= int(input())
ValueError: invalid literal for int() with base 10: '5.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 16:45:16) 
-- CODE:
nota= int(input('Nota do aluno: '))
condicao= input("Bonificacao: ")

formula = (nota + (nota * nota/100))


if (condicao == "S"):
	print("S")
	print(formula)

else:
	print('N')


-- EXECUTION TIME:
0.176022
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/2704/main.py", line 1, in <module>
    nota= int(input())
ValueError: invalid literal for int() with base 10: '5.0'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:46:39) 
-- CODE:
nota= int(input('Nota do aluno: '))
condicao= input("Bonificacao: ")

formula = (nota + (nota * 0.1))


if (condicao == "S"):
	print("S")
	print(formula)

else:
	print('N')


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    nota= int(input())
ValueError: invalid literal for int() with base 10: '5.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 16:46:40) 
-- CODE:
nota= int(input('Nota do aluno: '))
condicao= input("Bonificacao: ")

formula = (nota + (nota * 0.1))


if (condicao == "S"):
	print("S")
	print(formula)

else:
	print('N')


-- EXECUTION TIME:
0.199181
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/2704/main.py", line 1, in <module>
    nota= int(input())
ValueError: invalid literal for int() with base 10: '5.0'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:46:43) 
-- CODE:
nota= int(input('Nota do aluno: '))
condicao= input("Bonificacao: ")

formula = (nota + (nota * 0.1))


if (condicao == "S"):
	print("S")
	print(formula)

else:
	print('N')


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    nota= int(input())
ValueError: invalid literal for int() with base 10: '5.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:47:07) 
-- CODE:
nota= int(input('Nota do aluno: '))
condicao= input("Bonificacao: ")

formula = (nota + (nota * 0.1))


if (condicao == "S"):
	print("S")
	print(formula)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    nota= int(input())
ValueError: invalid literal for int() with base 10: '5.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 16:47:10) 
-- CODE:
nota= int(input('Nota do aluno: '))
condicao= input("Bonificacao: ")

formula = (nota + (nota * 0.1))


if (condicao == "S"):
	print("S")
	print(formula)



-- EXECUTION TIME:
0.150281
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/2704/main.py", line 1, in <module>
    nota= int(input())
ValueError: invalid literal for int() with base 10: '5.0'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:47:11) 
-- CODE:
nota= int(input('Nota do aluno: '))
condicao= input("Bonificacao: ")

formula = (nota + (nota * 0.1))


if (condicao == "S"):
	print("S")
	print(formula)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    nota= int(input())
ValueError: invalid literal for int() with base 10: '5.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:47:22) 
-- CODE:
nota= int(input('Nota do aluno: '))
condicao= input("Bonificacao: ")

formula = (nota + (nota * 0.1))


if (condicao == "S"):
	print("S")
	print(formula)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    nota= int(input())
ValueError: invalid literal for int() with base 10: '5.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:47:30) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")

formula = (nota + (nota * 0.1))


if (condicao == "S"):
	print("S")
	print(formula)



-- OUTPUT:
S
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 16:47:39) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")

formula = (nota + (nota * 0.1))


if (condicao == "S"):
	print("S")
	print(formula)



-- EXECUTION TIME:
0.207888
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
S
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
S
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:47:48) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")

formula = (nota + (nota * 0.1))


if (condicao == "S"):
	print("S")
	print(formula)



-- OUTPUT:
S
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:48:23) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")

formula = (nota + (nota * 0.1))


if (condicao == "S"):
	print("S")
	print(formula)
	
else:
	print(nota)



-- OUTPUT:
S
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 16:48:25) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")

formula = (nota + (nota * 0.1))


if (condicao == "S"):
	print("S")
	print(formula)
	
else:
	print(nota)



-- EXECUTION TIME:
0.241633
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
S
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
S
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:48:26) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")

formula = (nota + (nota * 0.1))


if (condicao == "S"):
	print("S")
	print(formula)
	
else:
	print(nota)



-- OUTPUT:
S
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:48:34) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")

formula = (nota + (nota * 0.1))


if (condicao == "S"):
	print("S")
	print(formula)
	
else:
	print(nota)



-- OUTPUT:
S
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:48:57) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")

formula = (nota + (nota * 0.1))


if (condicao == "S"):
	print("S")
	print(formula)
	
else:
	print(nota)



-- OUTPUT:
S
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:49:19) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")

formula = (nota + (nota * 0.1))


if (condicao == "S","s"):
	print("S")
	print(formula)
	
else:
	print(nota)



-- OUTPUT:
S
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 16:49:39) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")

formula = (nota + (nota * 0.1))


if (condicao == "S","s"):
	print("S")
	print(formula)
	
else:
	print(nota)



-- EXECUTION TIME:
0.20948
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
S
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
S
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
S
4.840000000000001
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:49:57) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")

formula = (nota + (nota * 0.1))


if (condicao == "S","s"):
	print("S")
	print(formula)
	
else:
	print(nota)



-- OUTPUT:
S
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:51:10) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")

formula = (nota + (nota * 0.1))


if (condicao == "S","s"):
	print("S")
	print(formula)
	
else:
	print(nota - (nota * 0.1))



-- OUTPUT:
S
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 16:51:11) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")

formula = (nota + (nota * 0.1))


if (condicao == "S","s"):
	print("S")
	print(formula)
	
else:
	print(nota - (nota * 0.1))



-- EXECUTION TIME:
0.13028
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
S
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
S
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
S
4.840000000000001
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:51:12) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")

formula = (nota + (nota * 0.1))


if (condicao == "S","s"):
	print("S")
	print(formula)
	
else:
	print(nota - (nota * 0.1))



-- OUTPUT:
S
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:52:35) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")

formula = (nota + (nota * 0.1))


if (condicao == "S","s"):
	print("S")
	formula = (nota + (nota * 0.1))
	print(formula)
	
else:
	print(nota)




-- OUTPUT:
S
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 16:52:36) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")

formula = (nota + (nota * 0.1))


if (condicao == "S","s"):
	print("S")
	formula = (nota + (nota * 0.1))
	print(formula)
	
else:
	print(nota)




-- EXECUTION TIME:
0.176648
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
S
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
S
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
S
4.840000000000001
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:52:37) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")

formula = (nota + (nota * 0.1))


if (condicao == "S","s"):
	print("S")
	formula = (nota + (nota * 0.1))
	print(formula)
	
else:
	print(nota)




-- OUTPUT:
S
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:53:01) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")

formula = (nota + (nota * 0.1))


if (condicao == "S","s"):

	formula = (nota + (nota * 0.1))
	print(formula)
	
else:
	print(nota)




-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 16:53:02) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")

formula = (nota + (nota * 0.1))


if (condicao == "S","s"):

	formula = (nota + (nota * 0.1))
	print(formula)
	
else:
	print(nota)




-- EXECUTION TIME:
0.210954
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.840000000000001
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:53:05) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")

formula = (nota + (nota * 0.1))


if (condicao == "S","s"):

	formula = (nota + (nota * 0.1))
	print(formula)
	
else:
	print(nota)




-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:53:38) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")

formula = (nota + (nota * 0.1))


if (condicao == "S","s"):

	formula = (nota + (nota * 0.1))
	print(formula)
	
else:
	print(nota)




-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:54:00) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")


if (condicao == "S","s"):

	formula = (nota + (nota * 0.1))
	print(formula)
	
else:
	print(nota)




-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 16:54:03) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")


if (condicao == "S","s"):

	formula = (nota + (nota * 0.1))
	print(formula)
	
else:
	print(nota)




-- EXECUTION TIME:
0.187192
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.840000000000001
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:54:06) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")


if (condicao == "S","s"):

	formula = (nota + (nota * 0.1))
	print(formula)
	
else:
	print(nota)




-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:54:21) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")


if (condicao == "S","s"):

	formula = (nota + (nota * 0.01))
	print(formula)
	
else:
	print(nota)




-- OUTPUT:
5.05
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 16:54:30) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")


if (condicao == "S","s"):

	formula = (nota + (nota * 0.01))
	print(formula)
	
else:
	print(nota)




-- EXECUTION TIME:
0.196515
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.05
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.09
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.444
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:54:43) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")


if (condicao == "S","s"):

	formula = (nota + (nota * 0.1))
	print(formula)
	
else:
	print(nota)




-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 16:54:44) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")


if (condicao == "S","s"):

	formula = (nota + (nota * 0.1))
	print(formula)
	
else:
	print(nota)




-- EXECUTION TIME:
0.157441
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.840000000000001
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:54:48) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")


if (condicao == "S","s"):

	formula = (nota + (nota * 0.1))
	print(formula)
	
else:
	print(nota)




-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:54:56) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")


if (condicao == "S","s"):

	formula = (nota + (nota * 0.1))
	print(formula)
	
else:
	print(nota)




-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:55:55) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")


if (condicao == "S","s"):

	formula = (nota + (nota * 0.1))
	print(formula)
	
else:
	print(nota)




-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:56:10) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")


if (condicao == "S","s"):

	formula = (nota + (nota * 0.1))
	print(formula)
	
else:
	print(nota)




-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:56:21) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")


if (condicao == "S","s"):

	formula = (nota + (nota * 0.1))
	print(formula)
	
else:
	print(nota)




-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:56:56) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")


if (condicao == "S","s"):

	formula = (nota + (nota * 0.1))
	print(formula)
	
else:
	print(nota)




-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:57:18) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")


if (condicao == "S","s"):

	formula = (nota + (nota * 0.1))
	print(formula)
	
else:
	print(nota - nota * 0.1)




-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:57:23) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")


if (condicao == "S","s"):

	formula = (nota + (nota * 0.1))
	print(formula)
	
else:
	print(nota - nota * 0.1)




-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:57:29) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")


if (condicao == "S","s"):

	formula = (nota + (nota * 0.1))
	print(formula)
	
else:
	print(nota - nota * 0.1)




-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:57:59) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")


if (condicao == "S","s"):

	formula = (nota + (nota * 0.1))
	print(formula)
	
else:
	print(nota - nota * 0.1)




-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:58:13) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")


if (condicao == "S","s"):

	formula = (nota + (nota * 0.1))
	print(formula)
	
else:
	print(nota - nota * 0.1)




-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:58:40) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")


if (condicao == "S","s"):

	formula = (nota + (nota * 0.1))
	print(formula)
	
else:
	print(nota) - (nota - nota * 0.1)




-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 16:58:42) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")


if (condicao == "S","s"):

	formula = (nota + (nota * 0.1))
	print(formula)
	
else:
	print(nota) - (nota - nota * 0.1)




-- EXECUTION TIME:
0.139281
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.840000000000001
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:58:43) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")


if (condicao == "S","s"):

	formula = (nota + (nota * 0.1))
	print(formula)
	
else:
	print(nota) - (nota - nota * 0.1)




-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:58:55) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")


if (condicao == "S","s"):

	formula = (nota + (nota * 0.1))
	print(formula)
	
else:
	print(nota) - (nota - nota * 0.1)




-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:59:44) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")


if (condicao == "S","s"):

	formula = (nota + (nota * 0.1))
	print(formula)
	
else
	(condicao == "N", "n")
	print(nota) - (nota - nota * 0.1)




-- ERROR:
File "XXXX", line 10
    else
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:59:50) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")


if (condicao == "S","s"):

	formula = (nota + (nota * 0.1))
	print(formula)
	
else:
	(condicao == "N", "n")
	print(nota) - (nota - nota * 0.1)




-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:00:10) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")


if (condicao == "S","s"):

	formula = (nota + (nota * 0.1))
	print(formula)
	
else:
	
	print(nota)




-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:03:49) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")


if (condicao == "S","s"):

	formula = (nota + (nota * 0.1))
	print(formula)
	
else:
	
	print(nota)




-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:06:09) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")


if (condicao == "S","s"):

	formula = (nota + (nota * 0.1))
	print(formula)
	
else:
	condicao == ("N","n"):
	print(nota)




-- ERROR:
File "XXXX", line 11
    condicao == ("N","n"):
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:06:13) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")


if (condicao == "S","s"):

	formula = (nota + (nota * 0.1))
	print(formula)
	
else
	condicao == ("N","n"):
	print(nota)




-- ERROR:
File "XXXX", line 10
    else
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:06:37) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")


if (condicao == "S","s"):

	formula = (nota + (nota * 0.1))
	print(formula)
	
else:
	print(nota)




-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:07:59) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")


if (condicao == "S","s"):

	formula = (nota + (nota * 0.1))
	print(formula)
	
else:
	print(formula - (formula * 0.1))




-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 17:08:00) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")


if (condicao == "S","s"):

	formula = (nota + (nota * 0.1))
	print(formula)
	
else:
	print(formula - (formula * 0.1))




-- EXECUTION TIME:
0.15122
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.840000000000001
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:08:01) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")


if (condicao == "S","s"):

	formula = (nota + (nota * 0.1))
	print(formula)
	
else:
	print(formula - (formula * 0.1))




-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 13:39:30) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")


if (condicao == "S"):

	formula = (nota + (nota * 0.1))
	print(formula)
	
else:
	print(nota)





-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 13:39:32) 
-- CODE:
nota= float(input('Nota do aluno: '))
condicao= input("Bonificacao: ")


if (condicao == "S"):

	formula = (nota + (nota * 0.1))
	print(formula)
	
else:
	print(nota)





-- EXECUTION TIME:
0.153895
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
