== TEST (2019-04-02 13:39:36) 
-- CODE:
life=float(input("Pontos de vida: "))
d1=int(input("Dado1: "))
d2=int(input("Dado2: "))

from math import*

f=int(sqrt(5*d1)+pi**d2/3)
dano=int(f)

print(dano)
-- OUTPUT:
322
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 13:40:13) 
-- CODE:
life=float(input("Pontos de vida: "))
d1=int(input("Dado1: "))
d2=int(input("Dado2: "))

from math import*

f=int(sqrt(5*d1)+pi**d2/3)
dano=int(f)

print(dano)
-- EXECUTION TIME:
0.17865
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
322
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
325
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 13:41:18) 
-- CODE:
life=float(input("Pontos de vida: "))
d1=int(input("Dado1: "))
d2=int(input("Dado2: "))

from math import*

f=int(sqrt(5*d1)+pi**d2/3)
dano=int(f)

print(dano*10)
-- OUTPUT:
3220
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 13:42:03) 
-- CODE:
life=float(input("Pontos de vida: "))
d1=int(input("Dado1: "))
d2=int(input("Dado2: "))

from math import*

f=int(sqrt(5*d1)+pi**d2/3)
dano=int(f)

print(dano)
-- OUTPUT:
322
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 13:42:27) 
-- CODE:
life=float(input("Pontos de vida: "))
d1=int(input("Dado1: "))
d2=int(input("Dado2: "))

from math import*

f=int(sqrt(5*d1)+pi**d2/3)
dano=int(f)

print(dano)
-- EXECUTION TIME:
0.189479
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
322
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
325
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 13:43:49) 
-- CODE:
life=float(input("Pontos de vida: "))
d1=int(input("Dado1: "))
d2=int(input("Dado2: "))

from math import*

int(f)=(sqrt(5*d1)+pi**d2/3)
dano=int(f)

print(dano)
-- ERROR:
File "XXXX", line 7
    int(f)=(sqrt(5*d1)+pi**d2/3)
    ^
SyntaxError: can't assign to function call
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 13:44:25) 
-- CODE:
life=float(input("Pontos de vida: "))
d1=int(input("Dado1: "))
d2=int(input("Dado2: "))

from math import*

f=int(sqrt(5*d1)+pi**d2/3)
dano=int(f)

print(dano)
-- OUTPUT:
322
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 13:45:39) 
-- CODE:
life=float(input("Pontos de vida: "))
d1=int(input("Dado1: "))
d2=int(input("Dado2: "))

from math import*

f=int(sqrt(5*d1)+pi**d2/3)
dano=int(f)

print(dano-life)
-- OUTPUT:
122.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 13:46:29) 
-- CODE:
life=float(input("Pontos de vida: "))
d1=int(input("Dado1: "))
d2=int(input("Dado2: "))

from math import*

f=int(sqrt(5*d1)+pi**d2/3)
dano=int(f)

print(life-dano)
-- OUTPUT:
-122.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 13:46:48) 
-- CODE:
life=float(input("Pontos de vida: "))
d1=int(input("Dado1: "))
d2=int(input("Dado2: "))

from math import*

f=int(sqrt(5*d1)+pi**d2/3)
dano=int(f)

print(life-dano)
-- EXECUTION TIME:
0.176877
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
-122.0
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
-25.0
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 13:47:19) 
-- CODE:
life=int(input("Pontos de vida: "))
d1=int(input("Dado1: "))
d2=int(input("Dado2: "))

from math import*

f=int(sqrt(5*d1)+pi**d2/3)
dano=int(f)

print(life-dano)
-- OUTPUT:
-122
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 13:47:36) 
-- CODE:
life=int(input("Pontos de vida: "))
d1=int(input("Dado1: "))
d2=int(input("Dado2: "))

from math import*

f=int(sqrt(5*d1)+pi**d2/3)
dano=int(f)

print(life-dano)
-- EXECUTION TIME:
0.233474
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
-122
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
-25
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 15:45:25) 
-- CODE:
life=int(input("Pontos de vida: "))
d1=int(input("Dado1: "))
d2=int(input("Dado2: "))

from math import*

f=int((5*d1)**0.5+(pi**d2/3)
dano=int(f)

print(life-dano)
-- ERROR:
File "XXXX", line 8
    dano=int(f)
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 15:47:16) 
-- CODE:
from math import* 

a=int(input("Pontos de vida: "))
b=int(input("Dado1: "))
c=int(input("Dado2: "))



dano=int((5*d1)**0.5+(pi**d2/3)
z=int(f)
		x=int(a-z)

print(x)
-- ERROR:
File "XXXX", line 10
    z=int(f)
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 15:47:26) 
-- CODE:
from math import* 

a=int(input("Pontos de vida: "))
b=int(input("Dado1: "))
c=int(input("Dado2: "))



dano=int((5*d1)**0.5+(pi**d2/3)
z=int(dano)
		x=int(a-z)

print(x)
-- ERROR:
File "XXXX", line 10
    z=int(dano)
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 15:47:50) 
-- CODE:
from math import* 

a=int(input("Pontos de vida: "))
b=int(input("Dado1: "))
c=int(input("Dado2: "))



dano=int((5*d1)**0.5+(pi**d2/3)

z= int(dano)
x=int(a-z)

print(x)
-- ERROR:
File "XXXX", line 11
    z= int(dano)
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 15:48:11) 
-- CODE:
from math import* 

a=int(input("Pontos de vida: "))
b=int(input("Dado1: "))
c=int(input("Dado2: "))



dano=int((5*b)**0.5+(pi**c/3)

z= int(dano)
x=int(a-z)

print(x)
-- ERROR:
File "XXXX", line 11
    z= int(dano)
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 15:48:33) 
-- CODE:
from math import* 

a=int(input("Pontos de vida: "))
b=int(input("Dado1: "))
c=int(input("Dado2: "))



dano=int((5*b)**0.5+(pi**c/3)

z= int(dano)
x=int(a-z)

print(x)
-- ERROR:
File "XXXX", line 11
    z= int(dano)
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 15:48:48) 
-- CODE:
from math import* 

a=int(input("Pontos de vida: "))
b=int(input("Dado1: "))
c=int(input("Dado2: "))



dano=int((5*b)**0.5+(pi**c/3))

z= int(dano)
x= int(a-z)

print(x)
-- OUTPUT:
-122
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 15:48:53) 
-- CODE:
from math import* 

a=int(input("Pontos de vida: "))
b=int(input("Dado1: "))
c=int(input("Dado2: "))



dano=int((5*b)**0.5+(pi**c/3))

z= int(dano)
x= int(a-z)

print(x)
-- EXECUTION TIME:
0.158852
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
-122
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
-25
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 15:49:20) 
-- CODE:
from math import* 

a=int(input("Pontos de vida: "))
b=int(input("Dado1: "))
c=int(input("Dado2: "))



dano=((5*b)**0.5+(pi**c/3))

z= int(dano)
x= int(a-z)

print(x)
-- OUTPUT:
-122
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 15:49:22) 
-- CODE:
from math import* 

a=int(input("Pontos de vida: "))
b=int(input("Dado1: "))
c=int(input("Dado2: "))



dano=((5*b)**0.5+(pi**c/3))

z= int(dano)
x= int(a-z)

print(x)
-- EXECUTION TIME:
0.14128
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
-122
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
-25
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 15:49:59) 
-- CODE:
from math import* 

a=int(input("Pontos de vida: "))
b=int(input("Dado1: "))
c=int(input("Dado2: "))



dano=((5*b)**0.5) + (pi**(c/3))

z= int(dano)
x= int(a-z)

print(x)
-- OUTPUT:
188
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 15:50:00) 
-- CODE:
from math import* 

a=int(input("Pontos de vida: "))
b=int(input("Dado1: "))
c=int(input("Dado2: "))



dano=((5*b)**0.5) + (pi**(c/3))

z= int(dano)
x= int(a-z)

print(x)
-- EXECUTION TIME:
0.143546
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
188
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
285
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
