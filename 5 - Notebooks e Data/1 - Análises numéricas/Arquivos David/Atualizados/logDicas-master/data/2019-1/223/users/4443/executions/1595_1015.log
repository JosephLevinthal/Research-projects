== TEST (2019-03-24 15:11:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
# Leitura dos numeros a partir do teclado e conversao para int:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
# Leitura dos numeros a partir do teclado e conversao para int:
n1 = int(input("digite um numero: "))
n2 = int(input("digite um segundo numero: "))
n3 = int(input("digite um terceiro numero: "))

# ordenacao nos numeros em ordem crescente:
print(max(n1, n2, n3))
-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 15:15:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
# Leitura dos numeros a partir do teclado e conversao para int:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
# Leitura dos numeros a partir do teclado e conversao para int:
n1 = int(input("digite um numero: "))
n2 = int(input("digite um segundo numero: "))
n3 = int(input("digite um terceiro numero: "))

# ordenacao nos numeros em ordem crescente:
print(max(n1, n2, n3))
print((n1+n2+n3)-(min(n1, n2, n3)+max(n1, n2, n3))
-- ERROR:
File "XXXX", line 16
    
                                                      ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 15:16:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
# Leitura dos numeros a partir do teclado e conversao para int:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
# Leitura dos numeros a partir do teclado e conversao para int:
n1 = int(input("digite um numero: "))
n2 = int(input("digite um segundo numero: "))
n3 = int(input("digite um terceiro numero: "))

# ordenacao nos numeros em ordem crescente:
print(max(n1, n2, n3))
print((n1+n2+n3)-(min(n1, n2, n3)+max(n1, n2, n3)))
-- OUTPUT:
10
0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 15:17:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
# Leitura dos numeros a partir do teclado e conversao para int:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
# Leitura dos numeros a partir do teclado e conversao para int:
n1 = int(input("digite um numero: "))
n2 = int(input("digite um segundo numero: "))
n3 = int(input("digite um terceiro numero: "))

# ordenacao nos numeros em ordem crescente:
prin(min(n1, n2, n3))
print((n1+n2+n3)-(min(n1, n2, n3)+max(n1, n2, n3)))
print(max(n1, n2, n3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    prin(min(n1, n2, n3))
NameError: name 'prin' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 15:17:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
# Leitura dos numeros a partir do teclado e conversao para int:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
# Leitura dos numeros a partir do teclado e conversao para int:
n1 = int(input("digite um numero: "))
n2 = int(input("digite um segundo numero: "))
n3 = int(input("digite um terceiro numero: "))

# ordenacao nos numeros em ordem crescente:
print(min(n1, n2, n3))
print((n1+n2+n3)-(min(n1, n2, n3)+max(n1, n2, n3)))
print(max(n1, n2, n3))
-- OUTPUT:
-2
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 15:17:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
# Leitura dos numeros a partir do teclado e conversao para int:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
# Leitura dos numeros a partir do teclado e conversao para int:
n1 = int(input("digite um numero: "))
n2 = int(input("digite um segundo numero: "))
n3 = int(input("digite um terceiro numero: "))

# ordenacao nos numeros em ordem crescente:
print(min(n1, n2, n3))
print((n1+n2+n3)-(min(n1, n2, n3)+max(n1, n2, n3)))
print(max(n1, n2, n3))
-- EXECUTION TIME:
0.167377
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
0
10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
