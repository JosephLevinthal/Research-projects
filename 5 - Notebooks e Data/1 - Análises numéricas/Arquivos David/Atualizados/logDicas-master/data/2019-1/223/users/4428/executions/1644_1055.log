== TEST (2019-04-16 10:33:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
v0 = float(input("Velocidade Inicial: "))
a = radians(float(input("Angulo do Vetor: "))
D = ("Distancia do passaro para o porco: ")
g = 9.8

R = ((v0**2)*sin(2*a))/g

if(abs(R-D) <=0.1):
	mensagem = "sim"
else: 
	mensagem = "nao"

print(mensagem)


-- ERROR:
File "XXXX", line 8
    D = ("Distancia do passaro para o porco: ")
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:38:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
v0 = float(input("Velocidade Inicial: "))
a = radians(float(input("Angulo do Vetor: "))
D = ("Distancia do passaro para o porco: ")
g = 9.8

R = (((v0**2)*sin(2*a))/g)

if(abs(R-D) <= 0.1):
	mensagem = "sim"
else: 
	mensagem = "nao"

print(mensagem)


-- ERROR:
File "XXXX", line 8
    D = ("Distancia do passaro para o porco: ")
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:39:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
v0 = float(input("Velocidade Inicial: "))
a = radians(float(input("Angulo do Vetor: "))
D = float(input("Distancia do passaro para o porco: "))
g = 9.8

R = (((v0**2)*sin(2*a))/g)

if(abs(R-D) <= 0.1):
	mensagem = "sim"
else: 
	mensagem = "nao"

print(mensagem)


-- ERROR:
File "XXXX", line 8
    D = float(input())
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:44:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
v0 = float(input("Velocidade Inicial: "))
a = radians(float(input("Angulo do Vetor: ")))
D = float(input("Distancia do passaro para o porco: "))
g = 9.8

R = (((v0**2)*sin(2*a))/g)

if(abs(R-D) <= 0.1):
	mensagem = "sim"
else: 
	mensagem = "nao"

print(mensagem)


-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 11:07:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
v0 = float(input("Velocidade Inicial: "))
a = radians(float(input("Angulo do Vetor: ")))
D = float(input("Distancia do passaro para o porco: "))
g = 9.8

R = (((v0**2)*sin(2*a))/g)

if(abs(R-D) <= 0.1):
	mensagem = "sim"
else: 
	mensagem = "nao"

print(mensagem)


-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 11:13:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
v0 = float(input("Velocidade Inicial: "))
a = radians(float(input("Angulo do Vetor: ")))
D = float(input("Distancia do passaro para o porco: "))
g = 9.8

R = (((v0**2)*sin(2*a))/g)

if(abs(R-D) <= 0.1):
	mensagem = "sim"
else: 
	mensagem = "nao"

print(mensagem)


-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 11:18:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
v0 = float(input("Velocidade Inicial: "))
a = radians(float(input("Angulo do Vetor: ")))
D = float(input("Distancia do passaro para o porco: "))
g = 9.8

R = (((v0**2)*sin(2*a))/g)

if(abs(R-D) <= 0.1):
	mensagem = "sim"
else: 
	mensagem = "nao"

print(mensagem)


-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 11:20:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*
v0 = float(input("Velocidade Inicial: "))
a = radians(float(input("Angulo do Vetor: ")))
D = float(input("Distancia do passaro para o porco: "))
g = 9.8

R = (((v0**2)*sin(2*a))/g)

if(abs(R-D) <= 0.1):
	mensagem = "sim"
else: 
	mensagem = "nao"

print(mensagem)


-- EXECUTION TIME:
0.132085
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
