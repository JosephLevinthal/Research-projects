== TEST (2019-05-16 16:25:59) 
-- CODE:
m = input().upper()

r = 0

while m != "X":
	if m == "V" or M == "E" Or M == "D":
	
	elif m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	
-- ERROR:
File "XXXX", line 6
    if m == "V" or M == "E" Or M == "D":
                             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:26:09) 
-- CODE:
m = input().upper()

r = 0

while m != "X":
	
	if m == "V" or M == "E" oir M == "D":
	
	elif m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	
-- ERROR:
File "XXXX", line 7
    if m == "V" or M == "E" oir M == "D":
                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:26:11) 
-- CODE:
m = input().upper()

r = 0

while m != "X":
	
	if m == "V" or M == "E" or M == "D":
	
	elif m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	
-- ERROR:
File "XXXX", line 9
    elif m == "V":
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:26:43) 
-- CODE:
m = input().upper()

r = 0

while m != "X":
	
	if m == "V" or M == "E" or M == "D":
		
	elif m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0

print(r)
-- ERROR:
File "XXXX", line 9
    elif m == "V":
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:26:50) 
-- CODE:
m = input().upper()

r = 0

while m != "X":
	
	if m == "V" or M == "E" or M == "D":
		
	elif m == "V":
		
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0

print(r)
-- ERROR:
File "XXXX", line 9
    elif m == "V":
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:26:59) 
-- CODE:
m = input().upper()

r = 0

while m != "X":
	
	if m == "V" or M == "E" or M == "D":
		
		elif m == "V":
		
		r += 3
		elif m == "E":
		r += 1
	elif m == "D":
		r += 0

print(r)
-- ERROR:
File "XXXX", line 9
    elif m == "V":
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:27:03) 
-- CODE:
m = input().upper()

r = 0

while m != "X":
	
	if m == "V" or M == "E" or M == "D":
		
		elif m == "V":
		
		r += 3
		elif m == "E":
		r += 1
		elif m == "D":
		r += 0

print(r)
-- ERROR:
File "XXXX", line 9
    elif m == "V":
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:27:20) 
-- CODE:
m = input().upper()

r = 0

while m != "X":
	
	
	if m == "V":
		
		r += 3
	if m == "E":
		r += 1
	if m == "D":
		r += 0

print(r)
-- ERROR:
File "XXXX", line 9
    elif m == "V":
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:27:39) 
-- CODE:
m = input().upper()
print(m)

r = 0

while m != "X":
	
	
	if m == "V":
		
		r += 3
	if m == "E":
		r += 1
	if m == "D":
		r += 0

print(r)
-- ERROR:
File "XXXX", line 9
    elif m == "V":
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:27:58) 
-- CODE:
m = input().upper()
print(m)

r = 0

while m != "X":
	
	
	if m == "V":
		
		r += 3
	if m == "E":
		r += 1
	if m == "D":
		r += 0

print(r)
-- ERROR:
File "XXXX", line 9
    elif m == "V":
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:28:11) 
-- CODE:
m = input().upper()

r = 0

while m != "X":
	
	
	if m == "V":
		
		r += 3
	if m == "E":
		r += 1
	if m == "D":
		r += 0

print(r)
-- ERROR:
File "XXXX", line 9
    elif m == "V":
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:29:19) 
-- CODE:
m = input().upper()

r = 0

while m != "X":
	
	
	if m == "V":
		
		r += 3
	if m == "E":
		r += 1
	if m == "D":
		r += 0
	
	c += 1
		
pmaxima = c*3
resultado = r/pmaxima
print(resultado)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 16, in <module>
    c += 1
NameError: name 'c' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 16:29:20) 
-- CODE:
m = input().upper()

r = 0

while m != "X":
	
	
	if m == "V":
		
		r += 3
	if m == "E":
		r += 1
	if m == "D":
		r += 0
	
	c += 1
		
pmaxima = c*3
resultado = r/pmaxima
print(resultado)
-- EXECUTION TIME:
0.155228
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1752/3091/main.py", line 16, in <module>
    c += 1
NameError: name 'c' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:29:22) 
-- CODE:
m = input().upper()

r = 0

while m != "X":
	
	
	if m == "V":
		
		r += 3
	if m == "E":
		r += 1
	if m == "D":
		r += 0
	
	c += 1
		
pmaxima = c*3
resultado = r/pmaxima
print(resultado)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 16, in <module>
    c += 1
NameError: name 'c' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:29:35) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	
	
	if m == "V":
		
		r += 3
	if m == "E":
		r += 1
	if m == "D":
		r += 0
	
	c += 1
		
pmaxima = c*3
resultado = r/pmaxima
print(resultado)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 16, in <module>
    c += 1
NameError: name 'c' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:29:47) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	
	
	if m == "V":
		
		r += 3
	if m == "E":
		r += 1
	if m == "D":
		r += 0
	
	c += 1
		
pmaxima = c*3
resultado = r/pmaxima
print(resultado)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 16, in <module>
    c += 1
NameError: name 'c' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:29:49) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	
	
	if m == "V":
		
		r += 3
	if m == "E":
		r += 1
	if m == "D":
		r += 0
	
	c += 1
		
pmaxima = c*3
resultado = r/pmaxima
print(resultado)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 16, in <module>
    c += 1
NameError: name 'c' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:29:56) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	
	
	if m == "V":
		
		r += 3
	if m == "E":
		r += 1
	if m == "D":
		r += 0
	
	c += 1
		
pmaxima = c*3
resultado = r/pmaxima
print(resultado)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 16, in <module>
    c += 1
NameError: name 'c' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:30:05) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	
	
	if m == "V":
		
		r += 3
	if m == "E":
		r += 1
	if m == "D":
		r += 0
	if m == "X":
		break
	
	c += 1
		
pmaxima = c*3
resultado = r/pmaxima
print(resultado)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 16, in <module>
    c += 1
NameError: name 'c' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:31:19) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	
	if m == "V" or m == "E" or m == "D":
		
		elif m == "V":
			r += 3
		elif m == "E":
			r += 1
		elif m == "D":
		r += 0
		
	c += 1
		
pmaxima = c*3
resultado = r/pmaxima
print(resultado)
-- ERROR:
File "XXXX", line 10
    elif m == "V":
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:31:27) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	
	if m == "V" or m == "E" or m == "D":
		a = 0
		elif m == "V":
			r += 3
		elif m == "E":
			r += 1
		elif m == "D":
		r += 0
		
	c += 1
		
pmaxima = c*3
resultado = r/pmaxima
print(resultado)
-- ERROR:
File "XXXX", line 10
    elif m == "V":
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:31:40) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	
	if m == "V" or m == "E" or m == "D":
		a = 0
	elif m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
		
	c += 1
		
pmaxima = c*3
resultado = r/pmaxima
print(resultado)
-- ERROR:
File "XXXX", line 10
    elif m == "V":
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:32:03) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	
	if m == "V" or m == "E" or m == "D":
		a = 0
	elif m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
		
	c += 1
		
pmaxima = c*3
resultado = r/pmaxima
print(round,(resultado,2))
-- ERROR:
File "XXXX", line 10
    elif m == "V":
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:32:17) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	
	if m == "V" or m == "E" or m == "D":
		a = 0
	elif m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
		
	c += 1
		
pmaxima = c*3
resultado = r/pmaxima
print(round,(resultado,2))
-- ERROR:
File "XXXX", line 10
    elif m == "V":
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:32:44) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	if m == "V" or m == "E" or m == "D":
		a = 0
	elif m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	elif m == "X":
		break
	c += 1
		
pmaxima = c*3
resultado = r/pmaxima
print(round,(resultado,2))
-- ERROR:
File "XXXX", line 10
    elif m == "V":
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:32:49) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	if m == "V" or m == "E" or m == "D":
		a = 0
	elif m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	elif m == "X":
		break
	c += 1
		
pmaxima = c*3
resultado = r/pmaxima
print(round,(resultado,2))
-- ERROR:
File "XXXX", line 10
    elif m == "V":
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:32:55) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	if m == "V" or m == "E" or m == "D":
		a = 0
	elif m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	elif m == "X":
		break
	c += 1
		
	pmaxima = c*3
	resultado = r/pmaxima
	print(round,(resultado,2))
-- OUTPUT:
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function r
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:33:12) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	if m == "V" or m == "E" or m == "D":
		a = 0
	elif m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	elif m == "X":
		break
	c += 1
		
	pmaxima = c*3
	resultado = r/pmaxima
	print(round,(resultado,2))
-- OUTPUT:
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function r
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:33:22) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	if m == "V" or m == "E" or m == "D":
		a = 0
	elif m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	elif m == "X":
		break
	c += 1
		
	pmaxima = c*3
	resultado = r/pmaxima
	print(round,(resultado,2))
-- OUTPUT:
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function round> (0.0, 2)
<built-in function r
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:33:40) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	if m == "V" or m == "E" or m == "D":
		a = 0
	elif m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	elif m == "X":
		break
c += 1
		
	pmaxima = c*3
	resultado = r/pmaxima
	print(round,(resultado,2))
-- ERROR:
File "XXXX", line 19
    pmaxima = c*3
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:33:49) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	if m == "V" or m == "E" or m == "D":
		a = 0
	elif m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	elif m == "X":
		break
	c += 1
		
pmaxima = c*3
resultado = r/pmaxima
print(round,(resultado,2))
-- ERROR:
File "XXXX", line 19
    pmaxima = c*3
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:34:09) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	if m == "V" or m == "E" or m == "D":
		a = 0
	elif m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	elif m == "X":
		break
	c += 1
		
pmaxima = c*3
resultado = r/pmaxima
print(round,(resultado,2))
-- ERROR:
File "XXXX", line 19
    pmaxima = c*3
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:34:14) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	if m == "V" or m == "E" or m == "D":
		a = 0
	elif m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	elif m == "X":
		break
	c += 1
		
pmaxima = c*3
resultado = r/pmaxima
print(round,(resultado,2))
-- ERROR:
File "XXXX", line 19
    pmaxima = c*3
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:34:19) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	if m == "V" or m == "E" or m == "D":
		a = 0
	elif m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	elif m == "X":
		break
	c += 1
	print(r)
pmaxima = c*3
resultado = r/pmaxima
print(round,(resultado,2))
-- OUTPUT:
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:34:39) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	if m == "V" or m == "E" or m == "D":
		a = 0
	elif m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	elif m == "X":
		break
	c += 1
print(r)
pmaxima = c*3
resultado = r/pmaxima
print(round,(resultado,2))
-- OUTPUT:
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:35:34) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	if m == "V" or m == "E" or m == "D":
		a = 0
	elif m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	c += 1

pmaxima = c*3
resultado = r/pmaxima
print(round,(resultado,2))
-- OUTPUT:
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:35:41) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	if m == "V" or m == "E" or m == "D":
		a = 0
	elif m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	c += 1

pmaxima = c*3
resultado = r/pmaxima
print(round,(resultado,2))
-- OUTPUT:
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:36:22) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	if m == "V" or m == "E" or m == "D":
		a = 0
	elif m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	c += 1

pmaxima = c*3
resultado = r/pmaxima
print(round,(resultado,2))
-- OUTPUT:
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:37:36) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m == "X":
	if m == "V" or m == "E" or m == "D":
		a = 0
	elif m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	c += 1

pmaxima = c*3
resultado = r/pmaxima
print(round,(resultado,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 18, in <module>
    resultado = r/pmaxima
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:37:46) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	if m == "V" or m == "E" or m == "D":
		a = 0
	elif m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	c += 1

pmaxima = c*3
resultado = r/pmaxima
print(round,(resultado,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 18, in <module>
    resultado = r/pmaxima
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:38:25) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	if m == "V" or m == "E" or m == "D":
		a = 0
	elif m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	
	c += 1

pmaxima = c*3
resultado = r/pmaxima
print(round,(resultado,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 18, in <module>
    resultado = r/pmaxima
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:38:40) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	if m == "V" or m == "E" or m == "D":
		a = 0
	elif m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	
	c += 1

pmaxima = c*3
resultado = r/pmaxima
print(round,(resultado,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 18, in <module>
    resultado = r/pmaxima
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:39:20) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	if m == "V" or m == "E" or m == "D":
		a = 0
	elif m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	
	c += 1

pmaxima = c*3
ptime = r/pmaxima
ptime = round(ptime,2)
print(ptime)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 18, in <module>
    resultado = r/pmaxima
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:39:41) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	if m == "V" or m == "E" or m == "D":
		a = 0
	elif m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	
	c += 1

pmaxima = c*3
ptime = r/pmaxima
ptime = round(ptime,2)
print(ptime)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 18, in <module>
    resultado = r/pmaxima
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:40:19) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	if m == "V" or m == "E" or m == "D":
		a = 0
	if m == "V":
		r += 3
	if m == "E":
		r += 1
	if m == "D":
		r += 0
	
	c += 1

pmaxima = c*3
ptime = r/pmaxima
ptime = round(ptime,2)
print(ptime)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 18, in <module>
    resultado = r/pmaxima
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:40:48) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	if m == "V" or m == "E" or m == "D":
		
	if m == "V":
		r += 3
	if m == "E":
		r += 1
	if m == "D":
		r += 0
	
	c += 1

pmaxima = c*3
ptime = r/pmaxima
ptime = round(ptime,2)
print(ptime)
-- ERROR:
File "XXXX", line 9
    if m == "V":
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:41:03) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	if m == "V" or m == "E" or m == "D":
		
		if m == "V":
			r += 3
		if m == "E":
			r += 1
		if m == "D":
			r += 0
	
	c += 1

pmaxima = c*3
ptime = r/pmaxima
ptime = round(ptime,2)
print(ptime)
-- ERROR:
File "XXXX", line 9
    if m == "V":
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:41:24) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	if m == "V" or m == "E" or m == "D":
		
		if m == "V":
			r += 3
		elif m == "E":
			r += 1
		elif m == "D":
			r += 0
	
	c += 1

pmaxima = c*3
ptime = r/pmaxima
ptime = round(ptime,2)
print(ptime)
-- ERROR:
File "XXXX", line 9
    if m == "V":
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:41:41) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	if m == "V" or m == "E" or m == "D":
		
		if m == "V":
			r += 3
		elif m == "E":
			r += 1
		elif m == "D":
			r += 0
	if m == "X":
		break
	c += 1

pmaxima = c*3
ptime = r/pmaxima
ptime = round(ptime,2)
print(ptime)
-- ERROR:
File "XXXX", line 9
    if m == "V":
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:42:12) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	if m == "V" or m == "E" or m == "D":
		
	elif m == "V":
		r += 3
	elif m == "E":
			r += 1
	elif m == "D":
			r += 0
	
	c += 1

pmaxima = c*3
ptime = r/pmaxima
ptime = round(ptime,2)
print(ptime)
-- ERROR:
File "XXXX", line 9
    elif m == "V":
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:42:30) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	if m == "V" or m == "E" or m == "D":
	
	elif m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	
	c += 1

pmaxima = c*3
ptime = r/pmaxima
ptime = round(ptime,2)
print(ptime)
-- ERROR:
File "XXXX", line 9
    elif m == "V":
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:42:45) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	if m == "V" or m == "E" or m == "D":
	
		elif m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	
	c += 1

pmaxima = c*3
ptime = r/pmaxima
ptime = round(ptime,2)
print(ptime)
-- ERROR:
File "XXXX", line 9
    elif m == "V":
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:42:54) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	if m == "V" or m == "E" or m == "D":
	
	if m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	
	c += 1

pmaxima = c*3
ptime = r/pmaxima
ptime = round(ptime,2)
print(ptime)
-- ERROR:
File "XXXX", line 9
    if m == "V":
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:43:01) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	if m == "V" or m == "E" or m == "D":
	
		if m == "V":
		r += 3
		elif m == "E":
		r += 1
		elif m == "D":
		r += 0
	
	c += 1

pmaxima = c*3
ptime = r/pmaxima
ptime = round(ptime,2)
print(ptime)
-- ERROR:
File "XXXX", line 10
    r += 3
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:43:05) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	if m == "V" or m == "E" or m == "D":
	
		if m == "V":
			r += 3
		elif m == "E":
			r += 1
		elif m == "D":
			r += 0
	
	c += 1

pmaxima = c*3
ptime = r/pmaxima
ptime = round(ptime,2)
print(ptime)
-- ERROR:
File "XXXX", line 10
    r += 3
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:43:33) 
-- CODE:
m = input().upper()

r = 0
c = 0

while c < 3:
	if m == "V" or m == "E" or m == "D":
	
		if m == "V":
			r += 3
		elif m == "E":
			r += 1
		elif m == "D":
			r += 0
	
	c += 1

pmaxima = c*3
ptime = r/pmaxima
ptime = round(ptime,2)
print(ptime)
-- OUTPUT:
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:43:43) 
-- CODE:
m = input().upper()

r = 0
c = 0

while c < 7:
	if m == "V" or m == "E" or m == "D":
	
		if m == "V":
			r += 3
		elif m == "E":
			r += 1
		elif m == "D":
			r += 0
	
	c += 1

pmaxima = c*3
ptime = r/pmaxima
ptime = round(ptime,2)
print(ptime)
-- OUTPUT:
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:44:00) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m == "X":
	if m == "V" or m == "E" or m == "D":
	
		if m == "V":
			r += 3
		elif m == "E":
			r += 1
		elif m == "D":
			r += 0
	
	c += 1

pmaxima = c*3
ptime = r/pmaxima
ptime = round(ptime,2)
print(ptime)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 19, in <module>
    ptime = r/pmaxima
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:44:10) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	if m == "V" or m == "E" or m == "D":
	
		if m == "V":
			r += 3
		elif m == "E":
			r += 1
		elif m == "D":
			r += 0
	
	c += 1

pmaxima = c*3
ptime = r/pmaxima
ptime = round(ptime,2)
print(ptime)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 19, in <module>
    ptime = r/pmaxima
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:44:20) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	if m == "V" or m == "E" or m == "D":
	
		if m == "V":
			r += 3
		elif m == "E":
			r += 1
		elif m == "D":
			r += 0
	
	c += 1

pmaxima = c*3
ptime = r/pmaxima
ptime = round(ptime,2)
print(ptime)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 19, in <module>
    ptime = r/pmaxima
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:45:03) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	if m == "V" or m == "E" or m == "D" or m == "X":
	
		if m == "V":
			r += 3
		elif m == "E":
			r += 1
		elif m == "D":
			r += 0
		elif m == "X":
			break
	c += 1

pmaxima = c*3
ptime = r/pmaxima
ptime = round(ptime,2)
print(ptime)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 19, in <module>
    ptime = r/pmaxima
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:45:07) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	if m == "V" or m == "E" or m == "D" or m == "X":
	
		if m == "V":
			r += 3
		elif m == "E":
			r += 1
		elif m == "D":
			r += 0
		elif m == "X":
			break
	c += 1

pmaxima = c*3
ptime = r/pmaxima
ptime = round(ptime,2)
print(ptime)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 19, in <module>
    ptime = r/pmaxima
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:45:15) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	if m == "V" or m == "E" or m == "D" or m == "X":
	
		if m == "V":
			r += 3
		elif m == "E":
			r += 1
		elif m == "D":
			r += 0
		elif m == "X":
			break
	c += 1

pmaxima = c*3
ptime = r/pmaxima
ptime = round(ptime,2)
print(ptime)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 19, in <module>
    ptime = r/pmaxima
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:45:28) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	if m == "V" or m == "E" or m == "D" or m == "X":
	
		if m == "V":
			r += 3
		elif m == "E":
			r += 1
		elif m == "D":
			r += 0
		elif m == "X":
			break
	c += 1

pmaxima = c*3
ptime = r/pmaxima
ptime = round(ptime,2)
print(ptime)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 19, in <module>
    ptime = r/pmaxima
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:45:33) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	if m == "V" or m == "E" or m == "D" or m == "X":
	
		if m == "V":
			r += 3
		elif m == "E":
			r += 1
		elif m == "D":
			r += 0
		elif m == "X":
			break
	c += 1

pmaxima = c*3
ptime = r/pmaxima
ptime = round(ptime,2)
print(ptime)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 19, in <module>
    ptime = r/pmaxima
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:45:55) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	input(m).upper()
	if m == "V" or m == "E" or m == "D" or m == "X":
	
		if m == "V":
			r += 3
		elif m == "E":
			r += 1
		elif m == "D":
			r += 0
		elif m == "X":
			break
	c += 1

pmaxima = c*3
ptime = r/pmaxima
ptime = round(ptime,2)
print(ptime)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    input(m).upper()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:46:18) 
-- CODE:
m = 0

r = 0
c = 0

while m != "X":
	input(m).upper()
	if m == "V" or m == "E" or m == "D" or m == "X":
	
		if m == "V":
			r += 3
		elif m == "E":
			r += 1
		elif m == "D":
			r += 0
		elif m == "X":
			break
	c += 1

pmaxima = c*3
ptime = r/pmaxima
ptime = round(ptime,2)
print(ptime)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    input(m).upper()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:46:54) 
-- CODE:
m = input()

r = 0
c = 0

while m != "X":
	
	if m == "V" or m == "E" or m == "D" or m == "X":
	
		if m == "V":
			r += 3
		elif m == "E":
			r += 1
		elif m == "D":
			r += 0
		elif m == "X":
			break
	c += 1

pmaxima = c*3
ptime = r/pmaxima
ptime = round(ptime,2)
print(ptime)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    input(m).upper()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:47:10) 
-- CODE:
m = input()

r = 0
c = 0

while m != "X":
	
	if m == "V" or m == "E" or m == "D" or m == "X":
	
		if m == "V":
			r += 3
		elif m == "E":
			r += 1
		elif m == "D":
			r += 0
		elif m == "X":
			break
	c += 1

pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    input(m).upper()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:47:25) 
-- CODE:
m = input()

r = 0
c = 0
m = 0

while m != "X":
	
	if m == "V" or m == "E" or m == "D" or m == "X":
	
		if m == "V":
			r += 3
		elif m == "E":
			r += 1
		elif m == "D":
			r += 0
		elif m == "X":
			break
	c += 1

pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    input(m).upper()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:47:33) 
-- CODE:
m = input()

r = 0
c = 0
m = 0

while m != "X":
	
	if m == "V" or m == "E" or m == "D" or m == "X":
	
		if m == "V":
			r += 3
		elif m == "E":
			r += 1
		elif m == "D":
			r += 0
		elif m == "X":
			break
	c += 1

pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    input(m).upper()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:47:58) 
-- CODE:
m = input()

r = 0
c = 0
m = 0

while m != "X":
	
	if m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	elif m == "X":
		break
	c += 1

pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    input(m).upper()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:49:13) 
-- CODE:
m = input()

r = 0
c = 0
m = 0

while m != "X":
	
	if m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	elif m == "X":
		break
	c += 1

pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    input(m).upper()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:49:13) 
-- CODE:
m = input()

r = 0
c = 0
m = 0

while m != "X":
	
	if m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	elif m == "X":
		break
	c += 1

pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    input(m).upper()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:49:22) 
-- CODE:
m = input()

r = 0
c = 0
m = 0

while m != "X":
	
	if m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	elif m == "X":
		break
	c += 1

pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    input(m).upper()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:49:25) 
-- CODE:
m = input()

r = 0
c = 0
m = 0

while m != "X":
	
	if m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	elif m == "X":
		break
	c += 1

pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    input(m).upper()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:49:30) 
-- CODE:
m = input()

r = 0
c = 0
m = 0

while m != "X":
	
	if m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	elif m == "X":
		break
	c += 1

pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    input(m).upper()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:49:43) 
-- CODE:
m = input().upper()

r = 0
c = 0


while m != "X":
	
	if m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	elif m == "X":
		break
	c += 1

pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    input(m).upper()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:50:02) 
-- CODE:
m = input().upper()

r = 0
c = 0


while m != "X":
	
	if m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	elif m == "X":
		break
	c += 1

pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    input(m).upper()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:50:13) 
-- CODE:
m = input().upper()

r = 0
c = 0


while m != "X":
	
	if m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	elif m == "X":
		break
	c += 1
	print(r)
pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- OUTPUT:
3
6
9
12
15
18
21
24
27
30
33
36
39
42
45
48
51
54
57
60
63
66
69
72
75
78
81
84
87
90
93
96
99
102
105
108
111
114
117
120
123
126
129
132
135
138
141
144
147
150
153
156
159
162
165
168
171
174
177
180
183
186
189
192
195
198
201
204
207
210
213
216
219
222
225
228
231
234
237
240
243
246
249
252
255
258
261
264
267
270
273
276
279
282
285
288
291
294
297
300
303
306
309
312
315
318
321
324
327
330
333
336
339
342
345
348
351
354
357
360
363
366
369
372
375
378
381
384
387
390
393
396
399
402
405
408
411
414
417
420
423
426
429
432
435
438
441
444
447
450
453
456
459
462
465
468
471
474
477
480
483
486
489
492
495
498
501
504
507
510
513
516
519
522
525
528
531
534
537
540
543
546
549
552
555
558
561
564
567
570
573
576
579
582
585
588
591
594
597
600
603
606
609
612
615
618
621
624
627
630
633
636
639
642
645
648
651
654
657
660
663
666
669
672
675
678
681
684
687
690
693
696
699
702
705
708
711
714
717
720
723
726
729
732
735
738
741
744
747
750
753
756
759
762
765
768
771
774
777
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:50:32) 
-- CODE:
m = input().upper()

r = 0
c = 0


while m != "X":
	
	if m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	elif m == "X":
		break
	c += 1
	print(r)
pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- OUTPUT:
3
6
9
12
15
18
21
24
27
30
33
36
39
42
45
48
51
54
57
60
63
66
69
72
75
78
81
84
87
90
93
96
99
102
105
108
111
114
117
120
123
126
129
132
135
138
141
144
147
150
153
156
159
162
165
168
171
174
177
180
183
186
189
192
195
198
201
204
207
210
213
216
219
222
225
228
231
234
237
240
243
246
249
252
255
258
261
264
267
270
273
276
279
282
285
288
291
294
297
300
303
306
309
312
315
318
321
324
327
330
333
336
339
342
345
348
351
354
357
360
363
366
369
372
375
378
381
384
387
390
393
396
399
402
405
408
411
414
417
420
423
426
429
432
435
438
441
444
447
450
453
456
459
462
465
468
471
474
477
480
483
486
489
492
495
498
501
504
507
510
513
516
519
522
525
528
531
534
537
540
543
546
549
552
555
558
561
564
567
570
573
576
579
582
585
588
591
594
597
600
603
606
609
612
615
618
621
624
627
630
633
636
639
642
645
648
651
654
657
660
663
666
669
672
675
678
681
684
687
690
693
696
699
702
705
708
711
714
717
720
723
726
729
732
735
738
741
744
747
750
753
756
759
762
765
768
771
774
777
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:50:45) 
-- CODE:
m = input().upper()

r = 0
c = 0


while m != "X":
	
	if m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	elif m == "X":
		break
	c += 1
	print(r)
pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- OUTPUT:
3
6
9
12
15
18
21
24
27
30
33
36
39
42
45
48
51
54
57
60
63
66
69
72
75
78
81
84
87
90
93
96
99
102
105
108
111
114
117
120
123
126
129
132
135
138
141
144
147
150
153
156
159
162
165
168
171
174
177
180
183
186
189
192
195
198
201
204
207
210
213
216
219
222
225
228
231
234
237
240
243
246
249
252
255
258
261
264
267
270
273
276
279
282
285
288
291
294
297
300
303
306
309
312
315
318
321
324
327
330
333
336
339
342
345
348
351
354
357
360
363
366
369
372
375
378
381
384
387
390
393
396
399
402
405
408
411
414
417
420
423
426
429
432
435
438
441
444
447
450
453
456
459
462
465
468
471
474
477
480
483
486
489
492
495
498
501
504
507
510
513
516
519
522
525
528
531
534
537
540
543
546
549
552
555
558
561
564
567
570
573
576
579
582
585
588
591
594
597
600
603
606
609
612
615
618
621
624
627
630
633
636
639
642
645
648
651
654
657
660
663
666
669
672
675
678
681
684
687
690
693
696
699
702
705
708
711
714
717
720
723
726
729
732
735
738
741
744
747
750
753
756
759
762
765
768
771
774
777
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:50:49) 
-- CODE:
m = input().upper()

r = 0
c = 0


while m != "X":
	
	if m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	elif m == "X":
		break
	c += 1
	
pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- OUTPUT:
3
6
9
12
15
18
21
24
27
30
33
36
39
42
45
48
51
54
57
60
63
66
69
72
75
78
81
84
87
90
93
96
99
102
105
108
111
114
117
120
123
126
129
132
135
138
141
144
147
150
153
156
159
162
165
168
171
174
177
180
183
186
189
192
195
198
201
204
207
210
213
216
219
222
225
228
231
234
237
240
243
246
249
252
255
258
261
264
267
270
273
276
279
282
285
288
291
294
297
300
303
306
309
312
315
318
321
324
327
330
333
336
339
342
345
348
351
354
357
360
363
366
369
372
375
378
381
384
387
390
393
396
399
402
405
408
411
414
417
420
423
426
429
432
435
438
441
444
447
450
453
456
459
462
465
468
471
474
477
480
483
486
489
492
495
498
501
504
507
510
513
516
519
522
525
528
531
534
537
540
543
546
549
552
555
558
561
564
567
570
573
576
579
582
585
588
591
594
597
600
603
606
609
612
615
618
621
624
627
630
633
636
639
642
645
648
651
654
657
660
663
666
669
672
675
678
681
684
687
690
693
696
699
702
705
708
711
714
717
720
723
726
729
732
735
738
741
744
747
750
753
756
759
762
765
768
771
774
777
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:50:57) 
-- CODE:
m = input().upper()

r = 0
c = 0


while m != "X":
	
	if m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	if m == "X":
		break
	c += 1
	
pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- OUTPUT:
3
6
9
12
15
18
21
24
27
30
33
36
39
42
45
48
51
54
57
60
63
66
69
72
75
78
81
84
87
90
93
96
99
102
105
108
111
114
117
120
123
126
129
132
135
138
141
144
147
150
153
156
159
162
165
168
171
174
177
180
183
186
189
192
195
198
201
204
207
210
213
216
219
222
225
228
231
234
237
240
243
246
249
252
255
258
261
264
267
270
273
276
279
282
285
288
291
294
297
300
303
306
309
312
315
318
321
324
327
330
333
336
339
342
345
348
351
354
357
360
363
366
369
372
375
378
381
384
387
390
393
396
399
402
405
408
411
414
417
420
423
426
429
432
435
438
441
444
447
450
453
456
459
462
465
468
471
474
477
480
483
486
489
492
495
498
501
504
507
510
513
516
519
522
525
528
531
534
537
540
543
546
549
552
555
558
561
564
567
570
573
576
579
582
585
588
591
594
597
600
603
606
609
612
615
618
621
624
627
630
633
636
639
642
645
648
651
654
657
660
663
666
669
672
675
678
681
684
687
690
693
696
699
702
705
708
711
714
717
720
723
726
729
732
735
738
741
744
747
750
753
756
759
762
765
768
771
774
777
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:52:25) 
-- CODE:
m = input().upper()

r = 0
c = 0

if m != "X":
	while m != "X":
		if m == "V":
			r+=3
		elif m == "E":
			r+=1
		elif m == "D":
			r+=0
		

		c += 1
	
pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- OUTPUT:
3
6
9
12
15
18
21
24
27
30
33
36
39
42
45
48
51
54
57
60
63
66
69
72
75
78
81
84
87
90
93
96
99
102
105
108
111
114
117
120
123
126
129
132
135
138
141
144
147
150
153
156
159
162
165
168
171
174
177
180
183
186
189
192
195
198
201
204
207
210
213
216
219
222
225
228
231
234
237
240
243
246
249
252
255
258
261
264
267
270
273
276
279
282
285
288
291
294
297
300
303
306
309
312
315
318
321
324
327
330
333
336
339
342
345
348
351
354
357
360
363
366
369
372
375
378
381
384
387
390
393
396
399
402
405
408
411
414
417
420
423
426
429
432
435
438
441
444
447
450
453
456
459
462
465
468
471
474
477
480
483
486
489
492
495
498
501
504
507
510
513
516
519
522
525
528
531
534
537
540
543
546
549
552
555
558
561
564
567
570
573
576
579
582
585
588
591
594
597
600
603
606
609
612
615
618
621
624
627
630
633
636
639
642
645
648
651
654
657
660
663
666
669
672
675
678
681
684
687
690
693
696
699
702
705
708
711
714
717
720
723
726
729
732
735
738
741
744
747
750
753
756
759
762
765
768
771
774
777
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:53:05) 
-- CODE:
m = input().upper()

r = 0
c = 0

if m != "X":
	while m != "X":
		if m == "V":
			r+=3
		elif m == "E":
			r+=1
		elif m == "D":
			r+=0
		
		c += 1

pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- OUTPUT:
3
6
9
12
15
18
21
24
27
30
33
36
39
42
45
48
51
54
57
60
63
66
69
72
75
78
81
84
87
90
93
96
99
102
105
108
111
114
117
120
123
126
129
132
135
138
141
144
147
150
153
156
159
162
165
168
171
174
177
180
183
186
189
192
195
198
201
204
207
210
213
216
219
222
225
228
231
234
237
240
243
246
249
252
255
258
261
264
267
270
273
276
279
282
285
288
291
294
297
300
303
306
309
312
315
318
321
324
327
330
333
336
339
342
345
348
351
354
357
360
363
366
369
372
375
378
381
384
387
390
393
396
399
402
405
408
411
414
417
420
423
426
429
432
435
438
441
444
447
450
453
456
459
462
465
468
471
474
477
480
483
486
489
492
495
498
501
504
507
510
513
516
519
522
525
528
531
534
537
540
543
546
549
552
555
558
561
564
567
570
573
576
579
582
585
588
591
594
597
600
603
606
609
612
615
618
621
624
627
630
633
636
639
642
645
648
651
654
657
660
663
666
669
672
675
678
681
684
687
690
693
696
699
702
705
708
711
714
717
720
723
726
729
732
735
738
741
744
747
750
753
756
759
762
765
768
771
774
777
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:53:12) 
-- CODE:
m = input().upper()

r = 0
c = 0

if m != "X":
	while m != "X":
		if m == "V":
			r+=3
		elif m == "E":
			r+=1
		elif m == "D":
			r+=0
		
		c += 1

pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- OUTPUT:
3
6
9
12
15
18
21
24
27
30
33
36
39
42
45
48
51
54
57
60
63
66
69
72
75
78
81
84
87
90
93
96
99
102
105
108
111
114
117
120
123
126
129
132
135
138
141
144
147
150
153
156
159
162
165
168
171
174
177
180
183
186
189
192
195
198
201
204
207
210
213
216
219
222
225
228
231
234
237
240
243
246
249
252
255
258
261
264
267
270
273
276
279
282
285
288
291
294
297
300
303
306
309
312
315
318
321
324
327
330
333
336
339
342
345
348
351
354
357
360
363
366
369
372
375
378
381
384
387
390
393
396
399
402
405
408
411
414
417
420
423
426
429
432
435
438
441
444
447
450
453
456
459
462
465
468
471
474
477
480
483
486
489
492
495
498
501
504
507
510
513
516
519
522
525
528
531
534
537
540
543
546
549
552
555
558
561
564
567
570
573
576
579
582
585
588
591
594
597
600
603
606
609
612
615
618
621
624
627
630
633
636
639
642
645
648
651
654
657
660
663
666
669
672
675
678
681
684
687
690
693
696
699
702
705
708
711
714
717
720
723
726
729
732
735
738
741
744
747
750
753
756
759
762
765
768
771
774
777
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:53:17) 
-- CODE:
m = input().upper()

r = 0
c = 0

if m != "X":
	while m != "X":
		if m == "V":
			r+=3
		elif m == "E":
			r+=1
		elif m == "D":
			r+=0
		
		c += 1

pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- OUTPUT:
3
6
9
12
15
18
21
24
27
30
33
36
39
42
45
48
51
54
57
60
63
66
69
72
75
78
81
84
87
90
93
96
99
102
105
108
111
114
117
120
123
126
129
132
135
138
141
144
147
150
153
156
159
162
165
168
171
174
177
180
183
186
189
192
195
198
201
204
207
210
213
216
219
222
225
228
231
234
237
240
243
246
249
252
255
258
261
264
267
270
273
276
279
282
285
288
291
294
297
300
303
306
309
312
315
318
321
324
327
330
333
336
339
342
345
348
351
354
357
360
363
366
369
372
375
378
381
384
387
390
393
396
399
402
405
408
411
414
417
420
423
426
429
432
435
438
441
444
447
450
453
456
459
462
465
468
471
474
477
480
483
486
489
492
495
498
501
504
507
510
513
516
519
522
525
528
531
534
537
540
543
546
549
552
555
558
561
564
567
570
573
576
579
582
585
588
591
594
597
600
603
606
609
612
615
618
621
624
627
630
633
636
639
642
645
648
651
654
657
660
663
666
669
672
675
678
681
684
687
690
693
696
699
702
705
708
711
714
717
720
723
726
729
732
735
738
741
744
747
750
753
756
759
762
765
768
771
774
777
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:53:46) 
-- CODE:
m = input().upper()

r = 0
c = 0


while m != "X":
	
	if m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	if m == "X":
		break
	c += 1
	
pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- OUTPUT:
3
6
9
12
15
18
21
24
27
30
33
36
39
42
45
48
51
54
57
60
63
66
69
72
75
78
81
84
87
90
93
96
99
102
105
108
111
114
117
120
123
126
129
132
135
138
141
144
147
150
153
156
159
162
165
168
171
174
177
180
183
186
189
192
195
198
201
204
207
210
213
216
219
222
225
228
231
234
237
240
243
246
249
252
255
258
261
264
267
270
273
276
279
282
285
288
291
294
297
300
303
306
309
312
315
318
321
324
327
330
333
336
339
342
345
348
351
354
357
360
363
366
369
372
375
378
381
384
387
390
393
396
399
402
405
408
411
414
417
420
423
426
429
432
435
438
441
444
447
450
453
456
459
462
465
468
471
474
477
480
483
486
489
492
495
498
501
504
507
510
513
516
519
522
525
528
531
534
537
540
543
546
549
552
555
558
561
564
567
570
573
576
579
582
585
588
591
594
597
600
603
606
609
612
615
618
621
624
627
630
633
636
639
642
645
648
651
654
657
660
663
666
669
672
675
678
681
684
687
690
693
696
699
702
705
708
711
714
717
720
723
726
729
732
735
738
741
744
747
750
753
756
759
762
765
768
771
774
777
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:54:04) 
-- CODE:
m = input().upper()

r = 0
c = 0


while m != "X":
	m += m
	if m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	if m == "X":
		break
	c += 1
	
pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- OUTPUT:
3
6
9
12
15
18
21
24
27
30
33
36
39
42
45
48
51
54
57
60
63
66
69
72
75
78
81
84
87
90
93
96
99
102
105
108
111
114
117
120
123
126
129
132
135
138
141
144
147
150
153
156
159
162
165
168
171
174
177
180
183
186
189
192
195
198
201
204
207
210
213
216
219
222
225
228
231
234
237
240
243
246
249
252
255
258
261
264
267
270
273
276
279
282
285
288
291
294
297
300
303
306
309
312
315
318
321
324
327
330
333
336
339
342
345
348
351
354
357
360
363
366
369
372
375
378
381
384
387
390
393
396
399
402
405
408
411
414
417
420
423
426
429
432
435
438
441
444
447
450
453
456
459
462
465
468
471
474
477
480
483
486
489
492
495
498
501
504
507
510
513
516
519
522
525
528
531
534
537
540
543
546
549
552
555
558
561
564
567
570
573
576
579
582
585
588
591
594
597
600
603
606
609
612
615
618
621
624
627
630
633
636
639
642
645
648
651
654
657
660
663
666
669
672
675
678
681
684
687
690
693
696
699
702
705
708
711
714
717
720
723
726
729
732
735
738
741
744
747
750
753
756
759
762
765
768
771
774
777
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:54:24) 
-- CODE:
m = input().upper()

r = 0
c = 0


while m != "X":
	
	if m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	if m == "X":
		break
	c += 1
	m += 0
	
pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 18, in <module>
    m += 0
TypeError: must be str, not int
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:54:30) 
-- CODE:
m = input().upper()

r = 0
c = 0


while m != "X":
	
	if m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	if m == "X":
		break
	c += 1
	m += 0
	
pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 18, in <module>
    m += 0
TypeError: must be str, not int
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:54:37) 
-- CODE:
m = input().upper()

r = 0
c = 0


while m != "X":
	
	if m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	if m == "X":
		break
	c += 1
	m += 0
	
pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 18, in <module>
    m += 0
TypeError: must be str, not int
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:54:57) 
-- CODE:
m = input().upper()

r = 0
c = 0


while m != "X":
	
	if m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	if m == "X":
		break
	c += 1
	m = m
	
pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 18, in <module>
    m += 0
TypeError: must be str, not int
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:55:07) 
-- CODE:
m = input().upper()

r = 0
c = 0


while m != "X":
	
	if m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	if m == "X":
		break
	c += 1
	m += m
	
pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 18, in <module>
    m += 0
TypeError: must be str, not int
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:55:22) 
-- CODE:
m = input().upper()

r = 0
c = 0


while m != "X":
	
	if m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	if m == "X":
		break
	c += 1
	m = input() 
	
pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- OUTPUT:
0.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:55:38) 
-- CODE:
m = input().upper()

r = 0
c = 0


while m != "X":
	
	if m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	if m == "X":
		break
	c += 1
	
	m = input() 
	
pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- OUTPUT:
0.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:55:53) 
-- CODE:
m = input().upper()

r = 0
c = 0


while m != "X":
	
	if m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	if m == "X":
		break
	c += 1
	
	m = 0 
	
pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- OUTPUT:
0.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:56:02) 
-- CODE:
m = input().upper()

r = 0
c = 0


while m != "X":
	
	if m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	if m == "X":
		break
	c += 1
	
	m += m
	
pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- OUTPUT:
0.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:56:11) 
-- CODE:
m = input().upper()

r = 0
c = 0


while m != "X":
	
	if m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	if m == "X":
		break
	c += 1
	
	m += 0
	
pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 19, in <module>
    m += 0
TypeError: must be str, not int
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:56:25) 
-- CODE:
m = str(input()).upper()

r = 0
c = 0


while m != "X":
	
	if m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	if m == "X":
		break
	c += 1
	
	m += 0
	
pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 19, in <module>
    m += 0
TypeError: must be str, not int
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:56:42) 
-- CODE:
m = input().upper()

r = 0
c = 0


while m != "X":
	
	if m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	if m == "X":
		break
	c += 1
	
	m = m.upper()
	
pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 19, in <module>
    m += 0
TypeError: must be str, not int
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:56:50) 
-- CODE:
m = input().upper()

r = 0
c = 0


while m != "X":
	
	if m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	if m == "X":
		break
	c += 1
	
	m = m.upper()
	
pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 19, in <module>
    m += 0
TypeError: must be str, not int
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:57:02) 
-- CODE:
m = input().upper()

r = 0
c = 0


while m != "X":
	
	if m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	if m == "X":
		break
	c += 1
	
	m = str(m)
	
pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 19, in <module>
    m += 0
TypeError: must be str, not int
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:57:37) 
-- CODE:
m = input().upper()

m = n
r = 0
c = 0


while m != "X":
	
	if n == "V":
		r += 3
	elif n == "E":
		r += 1
	elif n == "D":
		r += 0
	if n == "X":
		break
	c += 1
	
	m = n
	
pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    m = n
NameError: name 'n' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:57:41) 
-- CODE:
m = input().upper()

m = n
r = 0
c = 0


while m != "X":
	
	if n == "V":
		r += 3
	elif n == "E":
		r += 1
	elif n == "D":
		r += 0
	if n == "X":
		break
	c += 1
	
	m = n
	
pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    m = n
NameError: name 'n' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 16:57:51) 
-- CODE:
m = input().upper()

m = n
r = 0
c = 0


while m != "X":
	
	if n == "V":
		r += 3
	elif n == "E":
		r += 1
	elif n == "D":
		r += 0
	if n == "X":
		break
	c += 1
	
	m = n
	
pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- EXECUTION TIME:
3.17759
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1752/3091/main.py", line 3, in <module>
    m = n
NameError: name 'n' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:57:54) 
-- CODE:
m = input().upper()

n = m
r = 0
c = 0


while m != "X":
	
	if n == "V":
		r += 3
	elif n == "E":
		r += 1
	elif n == "D":
		r += 0
	if n == "X":
		break
	c += 1
	
	m = n
	
pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    m = n
NameError: name 'n' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 16:57:54) 
-- CODE:
m = input().upper()

m = n
r = 0
c = 0


while m != "X":
	
	if n == "V":
		r += 3
	elif n == "E":
		r += 1
	elif n == "D":
		r += 0
	if n == "X":
		break
	c += 1
	
	m = n
	
pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- EXECUTION TIME:
4.91075
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1752/3091/main.py", line 3, in <module>
    m = n
NameError: name 'n' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 16:57:54) 
-- CODE:
m = input().upper()

m = n
r = 0
c = 0


while m != "X":
	
	if n == "V":
		r += 3
	elif n == "E":
		r += 1
	elif n == "D":
		r += 0
	if n == "X":
		break
	c += 1
	
	m = n
	
pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- EXECUTION TIME:
5.79149
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1752/3091/main.py", line 3, in <module>
    m = n
NameError: name 'n' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 16:57:54) 
-- CODE:
m = input().upper()

m = n
r = 0
c = 0


while m != "X":
	
	if n == "V":
		r += 3
	elif n == "E":
		r += 1
	elif n == "D":
		r += 0
	if n == "X":
		break
	c += 1
	
	m = n
	
pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- EXECUTION TIME:
6.08543
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1752/3091/main.py", line 3, in <module>
    m = n
NameError: name 'n' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 16:58:11) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	if m == "V" or m == "E" or m == "D" or m == "X":
	
		if m == "V":
			r += 3
		elif m == "E":
			r += 1
		elif m == "D":
			r += 0
		elif m == "X":
			break
	c += 1

pmaxima = c*3
ptime = r/pmaxima
ptime = round(ptime,2)
print(ptime)
-- EXECUTION TIME:
778.363
-- TEST CASE 1:
---- input:
v
V
e
E
D
D
a
b
c
d
X
---- correct output:
38.1
---- user output:

-- TEST CASE 2:
---- input:
A
B
C
D
E
V
X
---- correct output:
44.44
---- user output:
OCI runtime exec failed: exec failed: cannot exec a container that has stopped: unknown
-- TEST CASE 3:
---- input:
V
V
V
a
a
a
a
v
v
X
---- correct output:
100.0
---- user output:
OCI runtime exec failed: exec failed: cannot exec a container that has stopped: unknown
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 16:58:11) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	if m == "V" or m == "E" or m == "D":
		a = 0
	elif m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	c += 1

pmaxima = c*3
resultado = r/pmaxima
print(round,(resultado,2))
-- EXECUTION TIME:
1382.41
-- TEST CASE 1:
---- input:
v
V
e
E
D
D
a
b
c
d
X
---- correct output:
38.1
---- user output:

-- TEST CASE 2:
---- input:
A
B
C
D
E
V
X
---- correct output:
44.44
---- user output:
OCI runtime exec failed: exec failed: cannot exec a container that has stopped: unknown
-- TEST CASE 3:
---- input:
V
V
V
a
a
a
a
v
v
X
---- correct output:
100.0
---- user output:
OCI runtime exec failed: exec failed: cannot exec a container that has stopped: unknown
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 16:58:11) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	if m == "V" or m == "E" or m == "D" or m == "X":
	
		if m == "V":
			r += 3
		elif m == "E":
			r += 1
		elif m == "D":
			r += 0
		elif m == "X":
			break
	c += 1

pmaxima = c*3
ptime = r/pmaxima
ptime = round(ptime,2)
print(ptime)
-- EXECUTION TIME:
776.612
-- TEST CASE 1:
---- input:
v
V
e
E
D
D
a
b
c
d
X
---- correct output:
38.1
---- user output:

-- TEST CASE 2:
---- input:
A
B
C
D
E
V
X
---- correct output:
44.44
---- user output:
OCI runtime exec failed: exec failed: cannot exec a container that has stopped: unknown
-- TEST CASE 3:
---- input:
V
V
V
a
a
a
a
v
v
X
---- correct output:
100.0
---- user output:
OCI runtime exec failed: exec failed: cannot exec a container that has stopped: unknown
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 16:58:11) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	if m == "V" or m == "E" or m == "D":
		a = 0
	elif m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	c += 1

pmaxima = c*3
resultado = r/pmaxima
print(round,(resultado,2))
-- EXECUTION TIME:
1381.87
-- TEST CASE 1:
---- input:
v
V
e
E
D
D
a
b
c
d
X
---- correct output:
38.1
---- user output:

-- TEST CASE 2:
---- input:
A
B
C
D
E
V
X
---- correct output:
44.44
---- user output:
OCI runtime exec failed: exec failed: cannot exec a container that has stopped: unknown
-- TEST CASE 3:
---- input:
V
V
V
a
a
a
a
v
v
X
---- correct output:
100.0
---- user output:
OCI runtime exec failed: exec failed: cannot exec a container that has stopped: unknown
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 16:58:11) 
-- CODE:
m = input()

r = 0
c = 0
m = 0

while m != "X":
	
	if m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	elif m == "X":
		break
	c += 1

pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- EXECUTION TIME:
606.032
-- TEST CASE 1:
---- input:
v
V
e
E
D
D
a
b
c
d
X
---- correct output:
38.1
---- user output:

-- TEST CASE 2:
---- input:
A
B
C
D
E
V
X
---- correct output:
44.44
---- user output:
OCI runtime exec failed: exec failed: cannot exec a container that has stopped: unknown
-- TEST CASE 3:
---- input:
V
V
V
a
a
a
a
v
v
X
---- correct output:
100.0
---- user output:
OCI runtime exec failed: exec failed: cannot exec a container that has stopped: unknown
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 16:58:11) 
-- CODE:
m = input().upper()

n = m
r = 0
c = 0


while m != "X":
	
	if n == "V":
		r += 3
	elif n == "E":
		r += 1
	elif n == "D":
		r += 0
	if n == "X":
		break
	c += 1
	
	m = n
	
pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- EXECUTION TIME:
10.4931
-- TEST CASE 1:
---- input:
v
V
e
E
D
D
a
b
c
d
X
---- correct output:
38.1
---- user output:

-- TEST CASE 2:
---- input:
A
B
C
D
E
V
X
---- correct output:
44.44
---- user output:
OCI runtime exec failed: exec failed: cannot exec a container that has stopped: unknown
-- TEST CASE 3:
---- input:
V
V
V
a
a
a
a
v
v
X
---- correct output:
100.0
---- user output:
OCI runtime exec failed: exec failed: cannot exec a container that has stopped: unknown
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 16:58:11) 
-- CODE:
m = input().upper()

n = m
r = 0
c = 0


while m != "X":
	
	if n == "V":
		r += 3
	elif n == "E":
		r += 1
	elif n == "D":
		r += 0
	if n == "X":
		break
	c += 1
	
	m = n
	
pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- EXECUTION TIME:
10.0569
-- TEST CASE 1:
---- input:
v
V
e
E
D
D
a
b
c
d
X
---- correct output:
38.1
---- user output:

-- TEST CASE 2:
---- input:
A
B
C
D
E
V
X
---- correct output:
44.44
---- user output:
OCI runtime exec failed: exec failed: cannot exec a container that has stopped: unknown
-- TEST CASE 3:
---- input:
V
V
V
a
a
a
a
v
v
X
---- correct output:
100.0
---- user output:
OCI runtime exec failed: exec failed: cannot exec a container that has stopped: unknown
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 16:58:11) 
-- CODE:
m = input().upper()

n = m
r = 0
c = 0


while m != "X":
	
	if n == "V":
		r += 3
	elif n == "E":
		r += 1
	elif n == "D":
		r += 0
	if n == "X":
		break
	c += 1
	
	m = n
	
pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- EXECUTION TIME:
10.3367
-- TEST CASE 1:
---- input:
v
V
e
E
D
D
a
b
c
d
X
---- correct output:
38.1
---- user output:

-- TEST CASE 2:
---- input:
A
B
C
D
E
V
X
---- correct output:
44.44
---- user output:
OCI runtime exec failed: exec failed: cannot exec a container that has stopped: unknown
-- TEST CASE 3:
---- input:
V
V
V
a
a
a
a
v
v
X
---- correct output:
100.0
---- user output:
OCI runtime exec failed: exec failed: cannot exec a container that has stopped: unknown
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 16:58:11) 
-- CODE:
m = input()

r = 0
c = 0
m = 0

while m != "X":
	
	if m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	elif m == "X":
		break
	c += 1

pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- EXECUTION TIME:
606.097
-- TEST CASE 1:
---- input:
v
V
e
E
D
D
a
b
c
d
X
---- correct output:
38.1
---- user output:

-- TEST CASE 2:
---- input:
A
B
C
D
E
V
X
---- correct output:
44.44
---- user output:
OCI runtime exec failed: exec failed: cannot exec a container that has stopped: unknown
-- TEST CASE 3:
---- input:
V
V
V
a
a
a
a
v
v
X
---- correct output:
100.0
---- user output:
OCI runtime exec failed: exec failed: cannot exec a container that has stopped: unknown
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 16:58:11) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	if m == "V" or m == "E" or m == "D":
		a = 0
	elif m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	c += 1

pmaxima = c*3
resultado = r/pmaxima
print(round,(resultado,2))
-- EXECUTION TIME:
1383.42
-- TEST CASE 1:
---- input:
v
V
e
E
D
D
a
b
c
d
X
---- correct output:
38.1
---- user output:

-- TEST CASE 2:
---- input:
A
B
C
D
E
V
X
---- correct output:
44.44
---- user output:
OCI runtime exec failed: exec failed: cannot exec a container that has stopped: unknown
-- TEST CASE 3:
---- input:
V
V
V
a
a
a
a
v
v
X
---- correct output:
100.0
---- user output:
OCI runtime exec failed: exec failed: cannot exec a container that has stopped: unknown
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 16:58:11) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	if m == "V" or m == "E" or m == "D" or m == "X":
	
		if m == "V":
			r += 3
		elif m == "E":
			r += 1
		elif m == "D":
			r += 0
		elif m == "X":
			break
	c += 1

pmaxima = c*3
ptime = r/pmaxima
ptime = round(ptime,2)
print(ptime)
-- EXECUTION TIME:
776.313
-- TEST CASE 1:
---- input:
v
V
e
E
D
D
a
b
c
d
X
---- correct output:
38.1
---- user output:

-- TEST CASE 2:
---- input:
A
B
C
D
E
V
X
---- correct output:
44.44
---- user output:
OCI runtime exec failed: exec failed: cannot exec a container that has stopped: unknown
-- TEST CASE 3:
---- input:
V
V
V
a
a
a
a
v
v
X
---- correct output:
100.0
---- user output:
OCI runtime exec failed: exec failed: cannot exec a container that has stopped: unknown
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 16:58:12) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	if m == "V" or m == "E" or m == "D":
		a = 0
	elif m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	c += 1

pmaxima = c*3
resultado = r/pmaxima
print(round,(resultado,2))
-- EXECUTION TIME:
1382.77
-- TEST CASE 1:
---- input:
v
V
e
E
D
D
a
b
c
d
X
---- correct output:
38.1
---- user output:

-- TEST CASE 2:
---- input:
A
B
C
D
E
V
X
---- correct output:
44.44
---- user output:
OCI runtime exec failed: exec failed: cannot exec a container that has stopped: unknown
-- TEST CASE 3:
---- input:
V
V
V
a
a
a
a
v
v
X
---- correct output:
100.0
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 16:58:12) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	if m == "V" or m == "E" or m == "D":
		a = 0
	elif m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	c += 1

pmaxima = c*3
resultado = r/pmaxima
print(round,(resultado,2))
-- EXECUTION TIME:
1382.61
-- TEST CASE 1:
---- input:
v
V
e
E
D
D
a
b
c
d
X
---- correct output:
38.1
---- user output:

-- TEST CASE 2:
---- input:
A
B
C
D
E
V
X
---- correct output:
44.44
---- user output:
OCI runtime exec failed: exec failed: cannot exec a container that has stopped: unknown
-- TEST CASE 3:
---- input:
V
V
V
a
a
a
a
v
v
X
---- correct output:
100.0
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 16:58:12) 
-- CODE:
m = input().upper()

n = m
r = 0
c = 0


while m != "X":
	
	if n == "V":
		r += 3
	elif n == "E":
		r += 1
	elif n == "D":
		r += 0
	if n == "X":
		break
	c += 1
	
	m = n
	
pmaxima = c*3
ptime = (r/pmaxima)
ptime = round(ptime,2)
print(ptime)
-- EXECUTION TIME:
12.0734
-- TEST CASE 1:
---- input:
v
V
e
E
D
D
a
b
c
d
X
---- correct output:
38.1
---- user output:

-- TEST CASE 2:
---- input:
A
B
C
D
E
V
X
---- correct output:
44.44
---- user output:
task 6ec86c0e139fb17387077ec0464d59024e443c6237c53b2c6e7275c1e35d2ed2 not found: not found
-- TEST CASE 3:
---- input:
V
V
V
a
a
a
a
v
v
X
---- correct output:
100.0
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 16:58:12) 
-- CODE:
m = input().upper()

r = 0
c = 0

while m != "X":
	if m == "V" or m == "E" or m == "D":
		a = 0
	elif m == "V":
		r += 3
	elif m == "E":
		r += 1
	elif m == "D":
		r += 0
	c += 1

pmaxima = c*3
resultado = r/pmaxima
print(round,(resultado,2))
-- EXECUTION TIME:
1382.24
-- TEST CASE 1:
---- input:
v
V
e
E
D
D
a
b
c
d
X
---- correct output:
38.1
---- user output:

-- TEST CASE 2:
---- input:
A
B
C
D
E
V
X
---- correct output:
44.44
---- user output:

-- TEST CASE 3:
---- input:
V
V
V
a
a
a
a
v
v
X
---- correct output:
100.0
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
