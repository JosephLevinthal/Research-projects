== TEST (2019-04-14 09:14:12) 
-- CODE:
#v = valor que ele tem disponivel / qt = quantidade de tickets / vt = valor dos tickets /
#qp = quantidade de passes / vp = valor dos passes
v = int(input("Qual seu valor disponivel?:  "))
qt = int(input("Quantos tickets voce possui?: "))
vt = float(input("Quanl o valor dos tickets?: "))
qp = int(input("Quantos passes de onibus voce possui?: "))
vp = float(input("Qual o valor dos passes?: "))
if (v - (qt * vt + qp * vp) >= 0):
	m= SUFICIENTE
else:
	m= INSUFICIENTE
print(m)	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    m= SUFICIENTE
NameError: name 'SUFICIENTE' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 09:14:59) 
-- CODE:
#v = valor que ele tem disponivel / qt = quantidade de tickets / vt = valor dos tickets /
#qp = quantidade de passes / vp = valor dos passes
v = int(input("Qual seu valor disponivel?:  "))
qt = int(input("Quantos tickets voce possui?: "))
vt = float(input("Quanl o valor dos tickets?: "))
qp = int(input("Quantos passes de onibus voce possui?: "))
vp = float(input("Qual o valor dos passes?: "))
if (v - (qt * vt + qp * vp) >= 0):
	m= "SUFICIENTE"
else:
	m= "INSUFICIENTE""
print(m)	
-- ERROR:
File "XXXX", line 11
    m= "INSUFICIENTE""
                     ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 09:15:10) 
-- CODE:
#v = valor que ele tem disponivel / qt = quantidade de tickets / vt = valor dos tickets /
#qp = quantidade de passes / vp = valor dos passes
v = int(input("Qual seu valor disponivel?:  "))
qt = int(input("Quantos tickets voce possui?: "))
vt = float(input("Quanl o valor dos tickets?: "))
qp = int(input("Quantos passes de onibus voce possui?: "))
vp = float(input("Qual o valor dos passes?: "))
if (v - (qt * vt + qp * vp) >= 0):
	m= "SUFICIENTE"
else:
	m= "INSUFICIENTE""
print(m)	
-- ERROR:
File "XXXX", line 11
    m= "INSUFICIENTE""
                     ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 09:15:18) 
-- CODE:
#v = valor que ele tem disponivel / qt = quantidade de tickets / vt = valor dos tickets /
#qp = quantidade de passes / vp = valor dos passes
v = int(input("Qual seu valor disponivel?:  "))
qt = int(input("Quantos tickets voce possui?: "))
vt = float(input("Quanl o valor dos tickets?: "))
qp = int(input("Quantos passes de onibus voce possui?: "))
vp = float(input("Qual o valor dos passes?: "))
if (v - (qt * vt + qp * vp) >= 0):
	m= "SUFICIENTE"
else:
	m= "INSUFICIENTE"
print(m)	
-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 09:15:51) 
-- CODE:
#v = valor que ele tem disponivel / qt = quantidade de tickets / vt = valor dos tickets /
#qp = quantidade de passes / vp = valor dos passes
v = int(input("Qual seu valor disponivel?:  "))
qt = int(input("Quantos tickets voce possui?: "))
vt = float(input("Quanl o valor dos tickets?: "))
qp = int(input("Quantos passes de onibus voce possui?: "))
vp = float(input("Qual o valor dos passes?: "))
if (v - (qt * vt + qp * vp) >= 0):
	m= "SUFICIENTE"
else:
	m= "INSUFICIENTE"
print(m)	
-- EXECUTION TIME:
0.13747
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
INSUFICIENTE
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
