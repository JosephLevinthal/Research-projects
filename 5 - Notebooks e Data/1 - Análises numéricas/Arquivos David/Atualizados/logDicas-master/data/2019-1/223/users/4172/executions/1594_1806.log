== TEST (2019-03-28 12:50:59) 
-- CODE:
P=int(input(" numero de pessoas: "))

from math import *
factorial=(1-(365!/(365-P)!*1/(365)**P))

print(round(factorial,2))
-- ERROR:
File "XXXX", line 4
    factorial=(1-(365!/(365-P)!*1/(365)**P))
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 12:51:16) 
-- CODE:
P=int(input(" numero de pessoas: "))

from math import *
factorial=(1-(365!/(365-P)!*1/(365)**P))

print(round(factorial,2))
-- ERROR:
File "XXXX", line 4
    factorial=(1-(365!/(365-P)!*1/(365)**P))
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 12:51:30) 
-- CODE:
P=int(input(" numero de pessoas: "))

from math import *
factorial=(1-(365/(365-P)*1/(365)**P))

print(round(factorial,2))
-- OUTPUT:
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 12:52:11) 
-- CODE:
P=int(input(" numero de pessoas: "))

from math import *
factorial=(1-(365/(365-P)*1/(365)**P))

print(round(factorial,2))
-- EXECUTION TIME:
0.187536
-- TEST CASE 1:
---- input:
12
---- correct output:
16.7
---- user output:
1.0
-- TEST CASE 2:
---- input:
24
---- correct output:
53.83
---- user output:
1.0
-- TEST CASE 3:
---- input:
99
---- correct output:
100.0
---- user output:
1.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 12:53:05) 
-- CODE:
P=int(input(" numero de pessoas: "))

from math import *
factorial=(1-((365/365-P*1/(365)**P)))

print(round(factorial,2))
-- OUTPUT:
0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 12:53:22) 
-- CODE:
P=float(input(" numero de pessoas: "))

from math import *
factorial=(1-((365/365-P*1/(365)**P)))

print(round(factorial,2))
-- OUTPUT:
0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 12:53:36) 
-- CODE:
P=float(input(" numero de pessoas: "))

from math import *
factorial=(1-((365/(365-P)*1/(365)**P)))

print(round(factorial,2))
-- OUTPUT:
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 12:53:52) 
-- CODE:
P=float(input(" numero de pessoas: "))

from math import *
factorial=(1-((365/(365-P)*1/(365)**P)))

print(round(factorial,2))
-- OUTPUT:
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 12:53:56) 
-- CODE:
P=float(input(" numero de pessoas: "))

from math import *
factorial=(1-((365/(365-P)*1/(365)**P)))

print(round(factorial,2))
-- OUTPUT:
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 12:54:02) 
-- CODE:
P=float(input(" numero de pessoas: "))

from math import *
factorial=(1-((365/(365-P)*1/(365)**P)))

print(round(factorial,2))
-- OUTPUT:
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 12:54:07) 
-- CODE:
P=float(input(" numero de pessoas: "))

from math import *
factorial=(1-((365/(365-P)*1/(365)**P)))

print(round(factorial,2))
-- OUTPUT:
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 12:54:09) 
-- CODE:
P=float(input(" numero de pessoas: "))

from math import *
factorial=(1-((365/(365-P)*1/(365)**P)))

print(round(factorial,2))
-- OUTPUT:
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 12:54:11) 
-- CODE:
P=float(input(" numero de pessoas: "))

from math import *
factorial=(1-((365/(365-P)*1/(365)**P)))

print(round(factorial,2))
-- OUTPUT:
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 12:54:12) 
-- CODE:
P=float(input(" numero de pessoas: "))

from math import *
factorial=(1-((365/(365-P)*1/(365)**P)))

print(round(factorial,2))
-- OUTPUT:
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 12:54:14) 
-- CODE:
P=float(input(" numero de pessoas: "))

from math import *
factorial=(1-((365/(365-P)*1/(365)**P)))

print(round(factorial,2))
-- OUTPUT:
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 12:54:16) 
-- CODE:
P=float(input(" numero de pessoas: "))

from math import *
factorial=(1-((365/(365-P)*1/(365)**P)))

print(round(factorial,2))
-- OUTPUT:
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 12:55:58) 
-- CODE:
P=float(input(" numero de pessoas: "))

from math import *
a=factorial(P)
b=1-365/(365-a)*1/(365)**a


print(round(factorial,2))
-- OUTPUT:
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 12:56:07) 
-- CODE:
P=float(input(" numero de pessoas: "))

from math import *
a=factorial(P)
b=1-365/(365-a)*1/(365)**a


print(round(b,2))
-- OUTPUT:
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 12:56:50) 
-- CODE:
P=float(input(" numero de pessoas: "))

from math import *
a=P
b=(1-365/(365-a)*1/(365)**a)


print(round(b,2))
-- OUTPUT:
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 16:19:40) 
-- CODE:
n=float(input(" numero de pessoas: "))

from math import *
a=(365-n)
b=(1/(365)**n)
c=(1-365/a*b)
print(round(c,2))
-- OUTPUT:
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 16:20:53) 
-- CODE:
n=float(input(" numero de pessoas: "))

from math import *
a=(365-n)
b=(1/(365)**n)
c=(factorial(1-365)/a*b)
print(round(c,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    c=(factorial(1-365)/a*b)
ValueError: factorial() not defined for negative values
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 16:22:09) 
-- CODE:
n=float(input(" numero de pessoas: "))

from math import *
a=(factorial(365)
b= 
print(round(c,2))
-- ERROR:
File "XXXX", line 5
    b= 
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 16:22:12) 
-- CODE:
n=float(input(" numero de pessoas: "))

from math import *
a=(factorial(365)
b= 0
print(round(c,2))
-- ERROR:
File "XXXX", line 5
    b= 0
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 16:22:21) 
-- CODE:
n=float(input(" numero de pessoas: "))

from math import *
a= (factorial(365) 
print(round(c,2))
-- ERROR:
File "XXXX", line 5
    print(round(c,2))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 16:22:26) 
-- CODE:
n=float(input(" numero de pessoas: "))

from math import *
a= (factorial(365) 
print(round(a,2))
-- ERROR:
File "XXXX", line 5
    print(round(a,2))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 16:22:34) 
-- CODE:
n=float(input(" numero de pessoas: "))

from math import *
a= (factorial(365) 

-- ERROR:
File "XXXX", line 5
    
                       ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 16:22:43) 
-- CODE:
n=float(input(" numero de pessoas: "))

from math import *
a= (factorial(365 )
-- ERROR:
File "XXXX", line 5
    
                       ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 16:22:53) 
-- CODE:
n=float(input(" numero de pessoas: "))

from math import *
a= (factorial(365 ))
-- ERROR:
File "XXXX", line 5
    
                       ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 16:24:11) 
-- CODE:
n=float(input(" numero de pessoas: "))

from math import *
a=(factorial(365))
b= (365-n)
c= factorial(b)
d= 1/365**n
print(round(c,2))
-- OUTPUT:

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 16:25:18) 
-- CODE:
n=float(input(" numero de pessoas: "))

from math import *
a=(factorial(365))
b= (365-n)
c= factorial(b)
d= 1/(365)**n
e= (1-a/c)*(d)

print(round(c,2))
-- OUTPUT:

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:08:52) 
-- CODE:
n=float(input(" numero de pessoas: "))

from math import *
a=(factorial(365))
b= (365-n)
c= factorial(b)
d= 1/(365)**n
e= (1-a/c)*(d)

print(round(c,2))
-- OUTPUT:

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:10:05) 
-- CODE:
n=float(input(" numero de pessoas: "))

from math import *
a=(factorial(365))
b= (365-n)
c= factorial(b)
d= 1/(365)**n
e= (1-a/c)*(d)

print(round(e,2))
-- OUTPUT:
-0.83
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:11:21) 
-- CODE:
n=float(input(" numero de pessoas: "))

from math import *
a=(factorial(365))
b= (365-n)
c= factorial(b)
d= factorial(1/(365)**n)
e= (1-a/c)*(d)

print(round(e,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    d= factorial(1/(365)**n)
ValueError: factorial() only accepts integral values
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:12:33) 
-- CODE:
n=float(input(" numero de pessoas: "))

from math import *
a=(factorial(365))
b= (365-n)
c= factorial(b)
d= 1/(365)**n
e= (1-a/c)*(d)

print(round(e,2))
-- OUTPUT:
-0.83
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:13:01) 
-- CODE:
n=float(input(" numero de pessoas: "))

from math import *
a=(factorial(365))
b= (365-n)
c= factorial(b)
d= 1/(365)**n
e= 1-(a/c)*(d)

print(round(e,2))
-- OUTPUT:
0.17
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 00:13:26) 
-- CODE:
n=float(input(" numero de pessoas: "))

from math import *
a=(factorial(365))
b= (365-n)
c= factorial(b)
d= 1/(365)**n
e= 1-(a/c)*(d)

print(round(e,2))
-- EXECUTION TIME:
0.131926
-- TEST CASE 1:
---- input:
12
---- correct output:
16.7
---- user output:
0.17
-- TEST CASE 2:
---- input:
24
---- correct output:
53.83
---- user output:
0.54
-- TEST CASE 3:
---- input:
99
---- correct output:
100.0
---- user output:
1.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:15:18) 
-- CODE:
n=float(input(" numero de pessoas: "))

from math import *
a=(factorial(365))
b= (factorial(365-n)
d= 1/(365)**n
e= 1-(a/b)*(d)

print(round(e,2))
-- ERROR:
File "XXXX", line 6
    d= 1/(365)**n
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:15:39) 
-- CODE:
n=float(input(" numero de pessoas: "))

from math import *
a=(factorial(365))
b= (factorial(365-n))
d= 1/(365)**n
e= 1-(a/b)*(d)

print(round(e,2))
-- OUTPUT:
0.17
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:17:28) 
-- CODE:
n=int(input(" numero de pessoas: "))

from math import *
a=(factorial(365))
b= (factorial(365-n))
d= 1/(365)**n
e= 1-(a/b)*(d)

print(round(e,2))
-- OUTPUT:
0.17
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:17:50) 
-- CODE:
n=int(input(" numero de pessoas: "))

from math import *
a=(factorial(365))
b= (factorial(365-n))
d= 1/(365)**n
e= 1-(a//b)*(d)

print(round(e,2))
-- OUTPUT:
0.17
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 00:18:25) 
-- CODE:
n=int(input(" numero de pessoas: "))

from math import *
a=(factorial(365))
b= (factorial(365-n))
d= 1/(365)**n
e= 1-(a/b)*(d)

print(round(e,2))
-- EXECUTION TIME:
0.125356
-- TEST CASE 1:
---- input:
12
---- correct output:
16.7
---- user output:
0.17
-- TEST CASE 2:
---- input:
24
---- correct output:
53.83
---- user output:
0.54
-- TEST CASE 3:
---- input:
99
---- correct output:
100.0
---- user output:
1.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:20:02) 
-- CODE:
n=int(input(" numero de pessoas: "))

from math import *

a=(1-(factorial(365)/(factorial(365-n)*1/(365)**n)))

print(round(e,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a=(1-(factorial(365)/(factorial(365-n)*1/(365)**n)))
OverflowError: integer division result too large for a float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:20:09) 
-- CODE:
n=int(input(" numero de pessoas: "))

from math import *

a=(1-(factorial(365)/(factorial(365-n)*1/(365)**n)))

print(round(a,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a=(1-(factorial(365)/(factorial(365-n)*1/(365)**n)))
OverflowError: integer division result too large for a float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:20:27) 
-- CODE:
n=float(input(" numero de pessoas: "))

from math import *

a=(1-(factorial(365)/(factorial(365-n)*1/(365)**n)))

print(round(a,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a=(1-(factorial(365)/(factorial(365-n)*1/(365)**n)))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:21:09) 
-- CODE:
n=float(input(" numero de pessoas: "))

from math import *

a=1-(factorial(365))/(factorial(365-n))*1/(365)**n

print(round(a,2))
-- OUTPUT:
0.17
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:22:16) 
-- CODE:
n=int(input(" numero de pessoas: "))
from math import *

a=1-(factorial(365))/(factorial(365-n))*1/(365)**n

print(float(round(a,2)))
-- OUTPUT:
0.17
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:23:11) 
-- CODE:
n=int(input(" numero de pessoas: "))
from math import *

a=(1-(factorial(365))/(factorial(365-n))*1/(365)**n)%100

print(float(round(a,2)))
-- OUTPUT:
0.17
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:23:34) 
-- CODE:
n=int(input(" numero de pessoas: "))
from math import *

a=(1-(factorial(365))//(factorial(365-n))*1/(365)**n)

print(float(round(a,2)))
-- OUTPUT:
0.17
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:24:21) 
-- CODE:
n=int(input(" numero de pessoas: "))
from math import *

a=(1-((factorial(365))//(factorial(365-n)))*1/((365)**n))

print(float(round(a,2)))
-- OUTPUT:
0.17
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:28:22) 
-- CODE:


def birthday(n):
    p = (1.0/365)**n
    for i in range((366-n),366):
        p *= i
    return 1-p
-- OUTPUT:
0.17
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:28:49) 
-- CODE:
n=int(input(" numero de pessoas: "))
from math import *



def birthday(n):
    p = (1.0/365)**n
    for i in range((366-n),366):
        p *= i
    return 1-p
-- OUTPUT:
0.17
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:29:19) 
-- CODE:
n=int(input(" numero de pessoas: "))
from math import *



def birthday(n):
    p = (1.0/365)**n
    for i in range((366-n),366):
        p *= i
    return 1-p

print(round(p*,2))
-- ERROR:
File "XXXX", line 12
    print(round(p*,2))
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:33:50) 
-- CODE:
n=int(input(" numero de pessoas: "))
from math import *

a=(1-((factorial(365))//(factorial(365-n))*1/(365)**n)

print(float(round(a,2)))
-- ERROR:
File "XXXX", line 6
    print(float(round(a,2)))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:34:18) 
-- CODE:
n=int(input(" numero de pessoas: "))
from math import *

a=1-(factorial(365)//(factorial(365-n))*1/(365)**n

print(float(round(a,2)))
-- ERROR:
File "XXXX", line 6
    print(float(round(a,2)))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:34:30) 
-- CODE:
n=int(input(" numero de pessoas: "))
from math import *

a=1-(factorial(365)//(factorial(365-n))*1/(365)**n

print(round(a,2))
-- ERROR:
File "XXXX", line 6
    print(round(a,2))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:34:43) 
-- CODE:
n=int(input(" numero de pessoas: "))
from math import *

a=1-(factorial(365))//(factorial(365-n))*1/(365)**n

print(round(a,2))
-- OUTPUT:
0.17
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:35:37) 
-- CODE:
n=float(input(" numero de pessoas: "))
from math import *

a=1-((factorial(365))/(factorial(365-n))*1/(365)**n)

print(round(a,2))
-- OUTPUT:
0.17
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:37:21) 
-- CODE:
n=float(input(" numero de pessoas: "))
from math import *
a=(factorial(365))
b=(factorial(365-n))
c=1/(365)**n

print(round(1-a/(b)*c,2))
-- OUTPUT:
0.17
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:37:38) 
-- CODE:
n=float(input(" numero de pessoas: "))
from math import *
a=(factorial(365))
b=(factorial(365-n))
c=1/(365)**n

print(round(1-a/(b)*c,50))
-- OUTPUT:
0.16702478883806438
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:38:23) 
-- CODE:
n=float(input(" numero de pessoas: "))
from math import *
a=(factorial(365))
b=(factorial(365-n))
c=1/(365)**n

print(round((1-a/(b)*c)100,2))
-- ERROR:
File "XXXX", line 7
    print(round((1-a/(b)*c)100,2))
                             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:38:45) 
-- CODE:
n=float(input(" numero de pessoas: "))
from math import *
a=(factorial(365))
b=(factorial(365-n))
c=1/(365)**n

print(round((1-a/(b)*c*100),2))
-- OUTPUT:
-82.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:39:21) 
-- CODE:
n=float(input(" numero de pessoas: "))
from math import *
a=(factorial(365))
b=(factorial(365-n))
c=100/(365)**n

print(round((1-a/(b)*c),2))
-- OUTPUT:
-82.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:39:49) 
-- CODE:
n=float(input(" numero de pessoas: "))
from math import *
a=(factorial(365))
b=(factorial(365-n))
c=1/(366)**n

print(round((1-a/(b)*c),2))
-- OUTPUT:
0.19
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:40:00) 
-- CODE:
n=float(input(" numero de pessoas: "))
from math import *
a=(factorial(365))
b=(factorial(366-n))
c=1/(366)**n

print(round((1-a/(b)*c),2))
-- OUTPUT:
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:40:15) 
-- CODE:
n=float(input(" numero de pessoas: "))
from math import *
a=(factorial(365))
b=(factorial(366-n))
c=1/(365)**n

print(round((1-a/(b)*c),2))
-- OUTPUT:
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:40:48) 
-- CODE:
n=float(input(" numero de pessoas: "))
from math import *
a=(factorial(365))
b=(factorial(365-n))
c=1/(365)**n

print(round((1+a/(b)*c),2))
-- OUTPUT:
1.83
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:41:20) 
-- CODE:
n=float(input(" numero de pessoas: "))
from math import *
a=(factorial(365))
b=(factorial(365-n))
c=1/(365)**n

print(round((1-(a/(b)*c),2))
-- ERROR:
File "XXXX", line 8
    
                                ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:42:30) 
-- CODE:
n=float(input(" numero de pessoas: "))
from math import *
a=(factorial(365))
b=(factorial(365-n))
c=1/(365)**n

print(round((1-a/(b)*c,2))%100
-- ERROR:
File "XXXX", line 8
    
                                  ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:42:47) 
-- CODE:
n=float(input(" numero de pessoas: "))
from math import *
a=(factorial(365))
b=(factorial(365-n))
c=1/(365)**n

print(round((1-a/(b)*c%100,2))
-- ERROR:
File "XXXX", line 8
    
                                  ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:43:04) 
-- CODE:
n=float(input(" numero de pessoas: "))
from math import *
a=(factorial(365))
b=(factorial(365-n))
c=1/(365)**n

print(round((100-a/(b)*c,2))
-- ERROR:
File "XXXX", line 8
    
                                ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:43:19) 
-- CODE:
n=float(input(" numero de pessoas: "))
from math import *
a=(factorial(365))
b=(factorial(365-n))
c=1/(365)**n

print(round(100-a/(b)*c,2))
-- OUTPUT:
99.17
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:43:34) 
-- CODE:
n=float(input(" numero de pessoas: "))
from math import *
a=(factorial(365))
b=(factorial(365-n))
c=1/(365)**n

print(round(1-a/(b)*c,2))
-- OUTPUT:
0.17
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 00:43:34) 
-- CODE:
n=float(input(" numero de pessoas: "))
from math import *
a=(factorial(365))
b=(factorial(365-n))
c=1/(365)**n

print(round(1-a/(b)*c,2))
-- EXECUTION TIME:
0.209851
-- TEST CASE 1:
---- input:
12
---- correct output:
16.7
---- user output:
0.17
-- TEST CASE 2:
---- input:
24
---- correct output:
53.83
---- user output:
0.54
-- TEST CASE 3:
---- input:
99
---- correct output:
100.0
---- user output:
1.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:43:58) 
-- CODE:
n=float(input(" numero de pessoas: "))
from math import *
a=(factorial(365))
b=(factorial(365-n))
c=1/(365)**n

print(round(1-a/(b)*c%100,2))
-- OUTPUT:
0.17
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:45:19) 
-- CODE:
n=float(input(" numero de pessoas: "))
from math import *
a=(factorial(365))
b=(factorial(365-n))
c=1/(365)**n

print(round(1-a*100/(b)*c,2))
-- OUTPUT:
-82.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 17:03:27) 
-- CODE:
n=float(input(" numero de pessoas: "))
from math import *
a=(factorial(365))
b=(factorial(365-n))
c=1/(365)**n

print(round(1-a*/(b)*c,2))
-- ERROR:
File "XXXX", line 7
    print(round(1-a*/(b)*c,2))
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 17:03:42) 
-- CODE:
n=float(input(" numero de pessoas: "))
from math import *
a=(factorial(365))
b=(factorial(365-n))
c=1/(365)**n

print(round(1-a/(b)*c,2))
-- OUTPUT:
0.17
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 17:03:51) 
-- CODE:
n=float(input(" numero de pessoas: "))
from math import *
a=(factorial(365))
b=(factorial(365-n))
c=1/(365)**n

print(round(1-a/(b)*c,2))
-- OUTPUT:
0.17
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 17:05:09) 
-- CODE:
n=float(input(" numero de pessoas: "))
from math import *
a=(factorial(365))
b=(factorial(365-n))
c=1/(365)**n
w=1-a/(b)*c
print(round(100*w,2))

-- OUTPUT:
16.7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 17:05:18) 
-- CODE:
n=float(input(" numero de pessoas: "))
from math import *
a=(factorial(365))
b=(factorial(365-n))
c=1/(365)**n
w=1-a/(b)*c
print(round(100*w,2))

-- EXECUTION TIME:
0.198807
-- TEST CASE 1:
---- input:
12
---- correct output:
16.7
---- user output:
16.7
-- TEST CASE 2:
---- input:
24
---- correct output:
53.83
---- user output:
53.83
-- TEST CASE 3:
---- input:
99
---- correct output:
100.0
---- user output:
100.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
