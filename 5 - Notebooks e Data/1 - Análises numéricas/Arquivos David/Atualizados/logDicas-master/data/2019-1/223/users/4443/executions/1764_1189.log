== TEST (2019-05-23 16:48:57) 
-- CODE:
n = "Tolkien"
m = n[:3]+M+n[4:]
print(m)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    m = n[:3]+M+n[4:]
NameError: name 'M' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 16:49:08) 
-- CODE:
n = "Tolkien"
m = n[:3]+"M"+n[4:]
print(m)
-- OUTPUT:
TolMien
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-25 15:40:34) 
-- CODE:
frase = input("Digite uma palavra ou frase: ")

frase = frase.lower()
print(frase)

#n = "Tolkien"
#m = n[:3]+"M"+n[4:]
#print(m)
-- OUTPUT:
acararajadadajararaca
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-25 15:45:38) 
-- CODE:
frase = input("Digite uma palavra ou frase: ")

frase = frase.lower()
new = frase.replace(" ","")
print(frase)
print(new)

#n = "Tolkien"
#m = n[:3]+"M"+n[4:]
#print(m)
-- OUTPUT:
acararajadadajararaca
acararajadadajararaca
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-25 15:50:16) 
-- CODE:
frase = input("Digite uma palavra ou frase: ")

frase = frase.lower()
new = frase.replace(" ","")
inv = ""
i = -1
while(i >= -len(new)):
	inv = inv+new[i]
	i = i-1
print(frase)
print(new)
print(inv)	
#n = "Tolkien"
#m = n[:3]+"M"+n[4:]
#print(m)
-- OUTPUT:
acararajadadajararaca
acararajadadajararaca
acararajadadajararaca
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-25 15:51:29) 
-- CODE:
frase = input("Digite uma palavra ou frase: ")

frase = frase.lower()
new = frase.replace(" ","")
inv = ""
i = -1
while(i >= -len(new)):
	inv = inv+new[i]
	i = i-1

if(new == inv):
	print(1)
else:
	print(0)	

	
	#n = "Tolkien"
#m = n[:3]+"M"+n[4:]
#print(m)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-25 15:51:38) 
-- CODE:
frase = input("Digite uma palavra ou frase: ")

frase = frase.lower()
new = frase.replace(" ","")
inv = ""
i = -1
while(i >= -len(new)):
	inv = inv+new[i]
	i = i-1

if(new == inv):
	print(1)
else:
	print(0)	

	
	#n = "Tolkien"
#m = n[:3]+"M"+n[4:]
#print(m)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-25 15:51:50) 
-- CODE:
frase = input("Digite uma palavra ou frase: ")

frase = frase.lower()
new = frase.replace(" ","")
inv = ""
i = -1
while(i >= -len(new)):
	inv = inv+new[i]
	i = i-1

if(new == inv):
	print(1)
else:
	print(0)	

	
	#n = "Tolkien"
#m = n[:3]+"M"+n[4:]
#print(m)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-25 15:52:00) 
-- CODE:
frase = input("Digite uma palavra ou frase: ")

frase = frase.lower()
new = frase.replace(" ","")
inv = ""
i = -1
while(i >= -len(new)):
	inv = inv+new[i]
	i = i-1

if(new == inv):
	print(1)
else:
	print(0)	

	
	#n = "Tolkien"
#m = n[:3]+"M"+n[4:]
#print(m)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-25 15:52:15) 
-- CODE:
frase = input("Digite uma palavra ou frase: ")

frase = frase.lower()
new = frase.replace(" ","")
inv = ""
i = -1
while(i >= -len(new)):
	inv = inv+new[i]
	i = i-1

if(new == inv):
	print(1)
else:
	print(0)	

	
	#n = "Tolkien"
#m = n[:3]+"M"+n[4:]
#print(m)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-25 15:52:44) 
-- CODE:
frase = input("Digite uma palavra ou frase: ")

frase = frase.lower()
new = frase.replace(" ","")
inv = ""
i = -1
while(i >= -len(new)):
	inv = inv+new[i]
	i = i-1
print(new)
print(inv)

if(new == inv):
	print(1)
else:
	print(0)	

	
	#n = "Tolkien"
#m = n[:3]+"M"+n[4:]
#print(m)
-- OUTPUT:
acararajadadajararaca
acararajadadajararaca
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-25 15:53:46) 
-- CODE:
frase = input("Digite uma palavra ou frase: ")

frase = frase.lower()
new = frase.replace(" ","")
inv = ""
i = -1
while(i >= -len(new)):
	inv = inv+new[i]
	i = i-1

if(new == inv):
	print(1)
else:
	print(0)	

	
#n = "Tolkien"
#m = n[:3]+"M"+n[4:]
#print(m)
-- EXECUTION TIME:
0.145428
-- TEST CASE 1:
---- input:
ACARARAJADADAJARARACA
---- correct output:
ACARARAJADADAJARARACA
1
---- user output:
1
-- TEST CASE 2:
---- input:
CACHORRO
---- correct output:
CACHORRO
0
---- user output:
0
-- TEST CASE 3:
---- input:
amalanadanalama
---- correct output:
AMALANADANALAMA
1
---- user output:
1
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-25 15:54:10) 
-- CODE:
frase = input("Digite uma palavra ou frase: ")

frase = frase.lower()
new = frase.replace(" ","")
inv = ""
i = -1
while(i >= -len(new)):
	inv = inv+new[i]
	i = i-1
if(new == inv):
	print(1)
else:
	print(0)	

-- EXECUTION TIME:
0.23025
-- TEST CASE 1:
---- input:
ACARARAJADADAJARARACA
---- correct output:
ACARARAJADADAJARARACA
1
---- user output:
1
-- TEST CASE 2:
---- input:
CACHORRO
---- correct output:
CACHORRO
0
---- user output:
0
-- TEST CASE 3:
---- input:
amalanadanalama
---- correct output:
AMALANADANALAMA
1
---- user output:
1
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-25 15:55:21) 
-- CODE:
frase = input("Digite uma palavra ou frase: ")

frase = frase.upper()
new = frase.replace(" ","")
inv = ""
i = -1
while(i >= -len(new)):
	inv = inv+new[i]
	i = i-1
print(new)
if(new == inv):
	print(1)
else:
	print(0)	

-- EXECUTION TIME:
0.192821
-- TEST CASE 1:
---- input:
ACARARAJADADAJARARACA
---- correct output:
ACARARAJADADAJARARACA
1
---- user output:
ACARARAJADADAJARARACA
1
-- TEST CASE 2:
---- input:
CACHORRO
---- correct output:
CACHORRO
0
---- user output:
CACHORRO
0
-- TEST CASE 3:
---- input:
amalanadanalama
---- correct output:
AMALANADANALAMA
1
---- user output:
AMALANADANALAMA
1
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 17:01:11) 
-- CODE:
frase = input("Digite uma palavra ou frase: ")

frase = frase.upper()
new = frase.replace(" ","")
inv = ""
i = -1
while(i >= -len(new)):
	inv = inv+new[i]
	i = i-1
print(new)
if(new == inv):
	print(1)
else:
	print(0)	

-- OUTPUT:
ACARARAJADADAJARARACA
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
