== TEST (2019-04-11 17:51:09) 
-- CODE:
s = int(input())

print(s%10)
print(s%100)
print(s%1000)
print(s%10000)
-- OUTPUT:
2
12
612
7612
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:53:12) 
-- CODE:
s = int(input())

print(s%10)#ultimo
print((s%100)%10)
print(s%1000)
print(s%10000)
-- OUTPUT:
2
2
612
7612
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:53:30) 
-- CODE:
s = int(input())

print(s%10)#ultimo
print((s%100)//10)
print(s%1000)
print(s%10000)
-- OUTPUT:
2
1
612
7612
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:57:23) 
-- CODE:
s = int(input())

print(s%10)#ultimo
print((s%100)//10)#penultimo
print((s%10)//100)
print(s%10000)
-- OUTPUT:
2
1
0
7612
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:57:40) 
-- CODE:
s = int(input())

print(s%10)#ultimo
print((s%100)//10)#penultimo
print((s%100)//100)
print(s%10000)
-- OUTPUT:
2
1
0
7612
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 17:59:14) 
-- CODE:
s = int(input())

print(s%10)#ultimo
print((s//10)#penultimo
print((s%100)//100)
print(s%10000)
print(s%10000000)
-- EXECUTION TIME:
0.148858
-- ERROR:
  File "/home/codebench/codes/1644/2446/main.py", line 5
    print((s%100)//100)
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:59:15) 
-- CODE:
s = int(input())

print(s%10)#ultimo
print((s//10)#penultimo
print((s%100)//100)
print(s%10000)
print(s%10000000)
-- ERROR:
File "XXXX", line 5
    print((s%100)//100)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:59:28) 
-- CODE:
s = int(input())

print(s%10)#ultimo
print((s//10)#penultimo
print(s%10000)
print(s%10000000)
-- ERROR:
File "XXXX", line 5
    print(s%10000)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:59:47) 
-- CODE:
s = int(input())

print(s%10000000)
-- OUTPUT:
87612
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:00:02) 
-- CODE:
s = int(input())

print(s%100000000)
-- OUTPUT:
87612
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:00:09) 
-- CODE:
s = int(input())

print(s%100000000)
-- OUTPUT:
87612
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:00:17) 
-- CODE:
s = int(input())

print(s%100000000)
-- OUTPUT:
87612
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:00:37) 
-- CODE:
s = int(input())

print(s%100)
-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:00:57) 
-- CODE:
s = int(input())

print(s%100 - s%10)
-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:01:13) 
-- CODE:
s = int(input())

print(s%100 - s%10)//10
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    print(s%100 - s%10)//10
TypeError: unsupported operand type(s) for //: 'NoneType' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:40:33) 
-- CODE:
s = int(input())

print(s%1000)
-- OUTPUT:
612
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:40:44) 
-- CODE:
s = int(input())

print(s%10)
-- OUTPUT:
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:40:51) 
-- CODE:
s = int(input())

print(s%10)
-- OUTPUT:
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:41:12) 
-- CODE:
s = int(input())

print(s%10)
print(s//10)
-- OUTPUT:
2
8761
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:41:32) 
-- CODE:
s = int(input())

print(s%10)
print(s//10000)
-- OUTPUT:
2
8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:41:38) 
-- CODE:
s = int(input())

print(s%10)
print(s//100000)
-- OUTPUT:
2
0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:41:46) 
-- CODE:
s = int(input())

print(s%10)
print(s//100000)
-- OUTPUT:
2
0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:42:17) 
-- CODE:
s = int(input())

print(s%10)#ultimo
print(s//100000)#primeiro
print(s//10000)
-- OUTPUT:
2
0
8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:42:34) 
-- CODE:
s = int(input())

print(s%10)#ultimo
print(s//100000)#primeiro
print((s//10000)%10)
-- OUTPUT:
2
0
8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:43:07) 
-- CODE:
s = int(input())

print(s%10)#ultimo
print(s//100000)#primeiro
print((s//10000)%10)#segundo
print((s//1000)%100)#terceiro
-- OUTPUT:
2
0
8
87
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:43:18) 
-- CODE:
s = int(input())

print(s%10)#ultimo
print(s//100000)#primeiro
print((s//10000)%10)#segundo
print((s//10000)%100)#terceiro
-- OUTPUT:
2
0
8
8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:43:30) 
-- CODE:
s = int(input())

print(s%10)#ultimo
print(s//100000)#primeiro
print((s//10000)%10)#segundo
print((s//1000)%100)#terceiro
-- OUTPUT:
2
0
8
87
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:43:38) 
-- CODE:
s = int(input())

print(s%10)#ultimo
print(s//100000)#primeiro
print((s//10000)%10)#segundo
print((s//1000)%1000)#terceiro
-- OUTPUT:
2
0
8
87
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:43:47) 
-- CODE:
s = int(input())

print(s%10)#ultimo
print(s//100000)#primeiro
print((s//10000)%10)#segundo
print((s//10000)%100)#terceiro
-- OUTPUT:
2
0
8
8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:43:59) 
-- CODE:
s = int(input())

print(s%10)#ultimo
print(s//100000)#primeiro
print((s//10000)%10)#segundo
print((s//1000)%1000)#terceiro
-- OUTPUT:
2
0
8
87
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:44:26) 
-- CODE:
s = int(input())

print(s%10)#ultimo
print(s//100000)#primeiro
print((s//10000)%10)#segundo
print((s//10000)%10%100)#terceiro
-- OUTPUT:
2
0
8
8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:44:54) 
-- CODE:
s = int(input())

print(s%10)#ultimo
print(s//100000)#primeiro
print((s//10000)%10)#segundo
print(((s//10000)%10)%100)#terceiro
-- OUTPUT:
2
0
8
8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:45:04) 
-- CODE:
s = int(input())

print(s%10)#ultimo
print(s//100000)#primeiro
print((s//10000)%10)#segundo
print(((s//10000)%10)%10)#terceiro
-- OUTPUT:
2
0
8
8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:45:19) 
-- CODE:
s = int(input())

print(s%10)#ultimo
print(s//100000)#primeiro
print((s//10000)%10)#segundo
print(((s//1000)%10)%10)#terceiro
-- OUTPUT:
2
0
8
7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:45:54) 
-- CODE:
s = int(input())

print(s%10)#ultimo
print(s//100000)#primeiro
print((s//10000)%10)#segundo
print(((s//1000)%10)%10)#terceiro
print((((s//100)%10)%10)%10)
-- OUTPUT:
2
0
8
7
6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:46:58) 
-- CODE:
s = int(input())

print(s%10)#ultimo
print(s//100000)#primeiro
print((s//10000)%10)#segundo
print(((s//1000)%10)%10)#terceiro
print((((s//100)%10)%10)%10)
print(((((s//10)%10)%10)%10)%10)


-- OUTPUT:
2
0
8
7
6
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:47:19) 
-- CODE:
s = int(input())

print(s//100000)#primeiro
print((s//10000)%10)#segundo
print(((s//1000)%10)%10)#terceiro
print((((s//100)%10)%10)%10)
print(((((s//10)%10)%10)%10)%10)
print(s%10)


-- OUTPUT:
0
8
7
6
1
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 18:49:49) 
-- CODE:
s = int(input())

p = (s//100000)#primeiro
s = ((s//10000)%10)#segundo
t = (((s//1000)%10)%10)#terceiro
q = ((((s//100)%10)%10)%10)
quin = (((((s//10)%10)%10)%10)%10)
s = (s%10)

c1 = p + t + qui
c2 = s + q + s

if(c1%c2 == 0):
	print("acesso liberado")
else:
	print("senha invalida")


-- EXECUTION TIME:
0.127133
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/2446/main.py", line 10, in <module>
    c1 = p + t + qui
NameError: name 'qui' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:49:53) 
-- CODE:
s = int(input())

p = (s//100000)#primeiro
s = ((s//10000)%10)#segundo
t = (((s//1000)%10)%10)#terceiro
q = ((((s//100)%10)%10)%10)
quin = (((((s//10)%10)%10)%10)%10)
s = (s%10)

c1 = p + t + qui
c2 = s + q + s

if(c1%c2 == 0):
	print("acesso liberado")
else:
	print("senha invalida")


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    c1 = p + t + qui
NameError: name 'qui' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 18:50:07) 
-- CODE:
s = int(input())

p = (s//100000)#primeiro
s = ((s//10000)%10)#segundo
t = (((s//1000)%10)%10)#terceiro
q = ((((s//100)%10)%10)%10)
quin = (((((s//10)%10)%10)%10)%10)
s = (s%10)

c1 = p + t + quin
c2 = s + q + s

if(c1%c2 == 0):
	print("acesso liberado")
else:
	print("senha invalida")


-- EXECUTION TIME:
0.128549
-- TEST CASE 1:
---- input:
087612
---- correct output:
acesso liberado
---- user output:
acesso liberado
-- TEST CASE 2:
---- input:
760834
---- correct output:
senha invalida
---- user output:
senha invalida
-- TEST CASE 3:
---- input:
122967
---- correct output:
acesso liberado
---- user output:
senha invalida
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:50:10) 
-- CODE:
s = int(input())

p = (s//100000)#primeiro
s = ((s//10000)%10)#segundo
t = (((s//1000)%10)%10)#terceiro
q = ((((s//100)%10)%10)%10)
quin = (((((s//10)%10)%10)%10)%10)
s = (s%10)

c1 = p + t + quin
c2 = s + q + s

if(c1%c2 == 0):
	print("acesso liberado")
else:
	print("senha invalida")


-- OUTPUT:
acesso liberado
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:50:29) 
-- CODE:
s = int(input())

p = (s//100000)#primeiro
s = ((s//10000)%10)#segundo
t = (((s//1000)%10)%10)#terceiro
q = ((((s//100)%10)%10)%10)
quin = (((((s//10)%10)%10)%10)%10)
s = (s%10)

c1 = p + t + quin
c2 = s + q + s

if((c1%c2) == 0):
	print("acesso liberado")
else:
	print("senha invalida")


-- OUTPUT:
acesso liberado
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:50:43) 
-- CODE:
s = int(input())

p = (s//100000)#primeiro
s = ((s//10000)%10)#segundo
t = (((s//1000)%10)%10)#terceiro
q = ((((s//100)%10)%10)%10)
quin = (((((s//10)%10)%10)%10)%10)
s = (s%10)

c1 = p + t + quin
c2 = s + q + s

if((c1%c2) == 0):
	print("acesso liberado")
else:
	print("senha invalida")


-- OUTPUT:
acesso liberado
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:50:56) 
-- CODE:
s = int(input())

p = (s//100000)#primeiro
s = ((s//10000)%10)#segundo
t = (((s//1000)%10)%10)#terceiro
q = ((((s//100)%10)%10)%10)
quin = (((((s//10)%10)%10)%10)%10)
s = (s%10)

c1 = p + t + quin
c2 = s + q + s

if((c1%c2) == 0):
	print("acesso liberado")
else:
	print("senha invalida")


-- OUTPUT:
acesso liberado
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 18:51:23) 
-- CODE:
s = int(input())

p = (s//100000)#primeiro
s = ((s//10000)%10)#segundo
t = (((s//1000)%10)%10)#terceiro
q = ((((s//100)%10)%10)%10)
quin = (((((s//10)%10)%10)%10)%10)
s = (s%10)

c1 = p + t + quin
c2 = s + q + s

if((c1%c2) == 0):
	print("acesso liberado")
else:
	print("senha invalida")


-- EXECUTION TIME:
0.153237
-- TEST CASE 1:
---- input:
087612
---- correct output:
acesso liberado
---- user output:
acesso liberado
-- TEST CASE 2:
---- input:
760834
---- correct output:
senha invalida
---- user output:
senha invalida
-- TEST CASE 3:
---- input:
122967
---- correct output:
acesso liberado
---- user output:
senha invalida
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 15:39:28) 
-- CODE:
s = int(input())

p = (s//100000)#primeiro
s = ((s//10000)%10)#segundo
t = (((s//1000)%10)%10)#terceiro
q = ((((s//100)%10)%10)%10)
quin = (((((s//10)%10)%10)%10)%10)
s = (s%10)

c1 = p + t + quin
c2 = s + q + s

if((c1%c2) == 0):
	print("acesso liberado")
else:
	print("senha invalida")


-- EXECUTION TIME:
0.038188
-- ERROR:
Error response from daemon: Container 27eeb55358c5059b1cf0cc764b6235bd40c11fed7e96f61cf4fe8618ca558ad6 is not running

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-30 12:05:38) 
-- CODE:
s = int(input())

p = (s//100000)#primeiro
s = ((s//10000)%10)#segundo
t = (((s//1000)%10)%10)#terceiro
q = ((((s//100)%10)%10)%10)
quin = (((((s//10)%10)%10)%10)%10)
s = (s%10)

c1 = p + t + quin
c2 = s + q + s

if((c1%c2) == 0):
	print("acesso liberado")
else:
	print("senha invalida")


-- EXECUTION TIME:
0.817665
-- TEST CASE 1:
---- input:
087612
---- correct output:
acesso liberado
---- user output:
acesso liberado
-- TEST CASE 2:
---- input:
760834
---- correct output:
senha invalida
---- user output:
senha invalida
-- TEST CASE 3:
---- input:
122967
---- correct output:
acesso liberado
---- user output:
senha invalida
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
