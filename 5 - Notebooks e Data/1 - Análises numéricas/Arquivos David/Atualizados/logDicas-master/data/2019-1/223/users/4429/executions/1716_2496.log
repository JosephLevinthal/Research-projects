== TEST (2019-05-07 17:01:48) 
-- CODE:
cont = 0 # Contador de alunos aprovados
nota = 1.23 # Valor arbitrário para iniciar laco
while (nota >= 0 and nota <= 10):
nota = float(input("Digite a nota do aluno"))
if (nota >= 5.0 and nota <= 10):
cont = cont + 1
print("Passaram: ", cont)
-- ERROR:
File "XXXX", line 4
    nota = float(input())
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 17:02:13) 
-- CODE:
cont = 0 # Contador de alunos aprovados
nota = 1.23 # Valor arbitrário para iniciar laco
while (nota >= 0 and nota <= 10):
nota= float(input("Digite a nota do aluno"))
if (nota >= 5.0 and nota <= 10):
cont = cont + 1
print("Passaram: ", cont)
-- ERROR:
File "XXXX", line 4
    nota= float(input())
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 17:02:21) 
-- CODE:
cont = 0 # Contador de alunos aprovados
nota = 1.23 # Valor arbitrário para iniciar laco
while (nota >= 0 and nota <= 10):
nota=float(input("Digite a nota do aluno"))
if (nota >= 5.0 and nota <= 10):
cont = cont + 1
print("Passaram: ", cont)
-- ERROR:
File "XXXX", line 4
    nota=float(input())
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 17:03:09) 
-- CODE:

while (nota >= 0 and nota <= 10):
nota=float(input("Digite a nota do aluno"))
if (nota >= 5.0 and nota <= 10):
cont = cont + 1
print("Passaram: ", cont)
-- ERROR:
File "XXXX", line 3
    nota=float(input())
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 17:03:37) 
-- CODE:

while (nota>= 0 and nota <=10):
nota=float(input("Digite a nota do aluno"))
if (nota >= 5.0 and nota <= 10):
cont = cont + 1
print("Passaram: ", cont)
-- ERROR:
File "XXXX", line 3
    nota=float(input())
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 17:04:21) 
-- CODE:
cont = 0 # Contador de alunos aprovados
nota = 1.23 # Valor arbitrário para iniciar laco
while (nota >= 0 and nota <= 10):
vnota=float(input("Digite a nota do aluno"))
if (nota >= 5.0 and nota <= 10):
cont = cont + 1
print("Passaram: ", cont)
-- ERROR:
File "XXXX", line 4
    vnota=float(input())
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 17:05:04) 
-- CODE:
cont = 0 # Contador de alunos aprovados
nota = 1.5 # Valor arbitrário para iniciar laco
while (nota >= 0 and nota <= 10):
nota=float(input("Digite a nota do aluno"))
if (nota >= 5.0 and nota <= 10):
cont = cont + 1
print("Passaram: ", cont)
-- ERROR:
File "XXXX", line 4
    nota=float(input())
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 17:05:21) 
-- CODE:
cont = 0 # Contador de alunos aprovados
nota = 1.5 # Valor arbitrário para iniciar laco
while (nota >= 0 and nota <= 10):
	nota=float(input("Digite a nota do aluno"))
if (nota >= 5.0 and nota <= 10):
cont = cont + 1
print("Passaram: ", cont)
-- ERROR:
File "XXXX", line 6
    cont = cont + 1
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 17:05:28) 
-- CODE:
cont = 0 # Contador de alunos aprovados
nota = 1.5 # Valor arbitrário para iniciar laco
while (nota >= 0 and nota <= 10):
	nota=float(input("Digite a nota do aluno"))
if (nota >= 5.0 and nota <= 10):
	cont = cont + 1
print("Passaram: ", cont)
-- OUTPUT:
Passaram:  0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 17:06:40) 
-- CODE:
cont = 0 # Contador de alunos aprovados
nota = 0 # Valor arbitrário para iniciar laco
while (nota >= 0 and nota <= 10):
	nota=float(input("Digite a nota do aluno"))
if (nota >= 5.0 and nota <= 10):
	cont = cont + 1
print("Passaram: ", cont)
-- OUTPUT:
Passaram:  0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 17:23:06) 
-- CODE:
# Valores iniciais
H = int(input("No. inicial de habitantes: "))
V = int(input("No. inicial de vampiros: "))
M = int(input("No. de vampiros mortos: "))
# Variavel contadora
dia = 0
# Laco de acumulacao
while (V > 0 and H > 0):
H = H - V
V = 2 * V - M
dia = dia + 1
if (H > 0):
msg = "LIVRE"
else:
msg = "VAMPIRIZADA"
print(msg)
print(dia)
-- ERROR:
File "XXXX", line 9
    H = H - V
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 17:23:34) 
-- CODE:
# Valores iniciais
H = int(input("No. inicial de habitantes: "))
V = int(input("No. inicial de vampiros: "))
M = int(input("No. de vampiros mortos: "))
# Variavel contadora
dia = 0
# Laco de acumulacao
while (V > 0 and H > 0):
H = H - V
V = 2 * V - M
dia = dia + 1
if (H > 0):
msg = "LIVRE"
else:
msg = "VAMPIRIZADA"
print(msg)
print(dia)
-- ERROR:
File "XXXX", line 9
    H = H - V
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 17:23:55) 
-- CODE:
# Valores iniciais
H = int(input("No. inicial de habitantes: "))
V = int(input("No. inicial de vampiros: "))
M = int(input("No. de vampiros mortos: "))
# Variavel contadora
dia = 0
# Laco de acumulacao
while (V > 0 and H > 0):
	H = H - V
V = 2 * V - M
dia = dia + 1
if (H > 0):
msg = "LIVRE"
else:
msg = "VAMPIRIZADA"
print(msg)
print(dia)
-- ERROR:
File "XXXX", line 13
    msg = "LIVRE"
      ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 17:24:04) 
-- CODE:
# Valores iniciais
H = int(input("No. inicial de habitantes: "))
V = int(input("No. inicial de vampiros: "))
M = int(input("No. de vampiros mortos: "))
# Variavel contadora
dia = 0
# Laco de acumulacao
while (V > 0 and H > 0):
	H = H - V
V = 2 * V - M
dia = dia + 1
if (H > 0):
	msg = "LIVRE"
else:
msg = "VAMPIRIZADA"
print(msg)
print(dia)
-- ERROR:
File "XXXX", line 15
    msg = "VAMPIRIZADA"
      ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 17:24:11) 
-- CODE:
# Valores iniciais
H = int(input("No. inicial de habitantes: "))
V = int(input("No. inicial de vampiros: "))
M = int(input("No. de vampiros mortos: "))
# Variavel contadora
dia = 0
# Laco de acumulacao
while (V > 0 and H > 0):
	H = H - V
V = 2 * V - M
dia = dia + 1
if (H > 0):
	msg = "LIVRE"
else:
	msg = "VAMPIRIZADA"
print(msg)
print(dia)
-- OUTPUT:
VAMPIRIZADA
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 17:24:50) 
-- CODE:
# Valores iniciais
H = int(input("No. inicial de habitantes: "))
V = int(input("No. inicial de vampiros: "))
M = int(input("No. de vampiros mortos: "))
# Variavel contadora
dia = 0
# Laco de acumulacao
while (V > 0 and H > 0):
	H = H - V
V = 2 * V - M
dia = dia + 1
if (H > 0):
	msg = "LIVRE"
else:
	msg = "VAMPIRIZADA"
print(msg)
print(dia)
-- OUTPUT:
VAMPIRIZADA
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 17:26:03) 
-- CODE:
# Valores iniciais
H = int(input("No. inicial de habitantes: "))
V = int(input("No. inicial de vampiros: "))
M = int(input("No. de vampiros mortos: "))
# Variavel contadora
dia = 0
# Laco de acumulacao
while (V > 0 and H > 0):
	H = H - V
V = 2 * V - M
dia = dia + 1
if (H > 0):
	msg = "LIVRE"
else:
	msg = "VAMPIRIZADA"
print(msg)
print(dia)
-- OUTPUT:
VAMPIRIZADA
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 17:27:34) 
-- CODE:
# Valores iniciais
H = int(input("No. inicial de habitantes: "))
V = int(input("No. inicial de vampiros: "))
M = int(input("No. de vampiros mortos: "))
# Variavel contadora
dia = 0
# Laco de acumulacao
while (V > 0 and H > 0):
	H = H - V
V =(2 * V) - M
dia = dia + 1
if (H > 0):
	msg = "LIVRE"
else:
	msg = "VAMPIRIZADA"
print(msg)
print(dia)
-- OUTPUT:
VAMPIRIZADA
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 17:29:08) 
-- CODE:
# Valores iniciais
H = int(input("No. inicial de habitantes: "))
V = int(input("No. inicial de vampiros: "))
M = int(input("No. de vampiros mortos: "))
# Variavel contadora
dia = 0
# Laco de acumulacao
while (V > 0 and H > 0):
	H = H - V
V =2 * V - M
dia = dia + 1
if (H > 0):
	msg = "LIVRE"
else:
	msg = "VAMPIRIZADA"
print(msg)
print(dia)
-- OUTPUT:
VAMPIRIZADA
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 17:30:20) 
-- CODE:
# Valores iniciais
H = int(input("No. inicial de habitantes: "))
V = int(input("No. inicial de vampiros: "))
M = int(input("No. de vampiros mortos: "))
# Variavel contadora
dia = 0
# Laco de acumulacao
while (V > 0 and H > 0):
	H = H - V
	V =2 * V - M
	dia = dia + 1
if (H > 0):
	msg = "LIVRE"
else:
	msg = "VAMPIRIZADA"
print(msg)
print(dia)
-- OUTPUT:
VAMPIRIZADA
0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 14:26:07) 
-- CODE:
num = int(input("Digite um numero: "))
soma = 0
# Laco de repeticao
while (num!=-1):
	soma= soma + num
	num = int(input("Digite um numero: "))
print(soma)	

	
	
	
-- EXECUTION TIME:
0.129676
-- TEST CASE 1:
---- input:
-525
1075
333
-9
-1

---- correct output:
874
---- user output:
874
-- TEST CASE 2:
---- input:
0
0
0
0
0
0
0
-1
---- correct output:
0
---- user output:
0
-- TEST CASE 3:
---- input:
10953
32653
-10953
-1
---- correct output:
32653
---- user output:
32653
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
