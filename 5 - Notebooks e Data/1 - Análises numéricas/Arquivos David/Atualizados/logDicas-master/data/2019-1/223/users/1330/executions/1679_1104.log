== SUBMITION (2019-05-01 15:42:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a = float(input())
b = float(input())
c = float(input())
d = float(input())

if(b>a and d>c):
	if(a==c or a==d or b==c or b==d):
		print("Intervalo 1: ", a,",", b)
		print("Intervalo 2: ", c,",", d)
		print("Ha intersecao")
	else:
		print("Intervalo 1: ", a,",", b)
		print("Intervalo 2: ", c,",", d)
		print("Nao ha intersecao")
else:
	print("Intervalo 1: ", a,",", b)
	print("Intervalo 2: ", c,",", d)
	print("Entradas invalidas")
	
-- EXECUTION TIME:
0.209924
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1:  1.5 , 5.0
Intervalo 2:  2.5 , 3.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1:  -1.0 , -3.0
Intervalo 2:  1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 15:42:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a = float(input())
b = float(input())
c = float(input())
d = float(input())

if(b>a and d>c):
	if(a==c or a==d or b==c or b==d):
		print("Intervalo 1: ", a,",", b)
		print("Intervalo 2: ", c,",", d)
		print("Ha intersecao")
	else:
		print("Intervalo 1: ", a,",", b)
		print("Intervalo 2: ", c,",", d)
		print("Nao ha intersecao")
else:
	print("Intervalo 1: ", a,",", b)
	print("Intervalo 2: ", c,",", d)
	print("Entradas invalidas")
	
-- EXECUTION TIME:
0.140431
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1:  1.5 , 5.0
Intervalo 2:  2.5 , 3.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1:  -1.0 , -3.0
Intervalo 2:  1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 15:42:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a = float(input())
b = float(input())
c = float(input())
d = float(input())

if(b>a and d>c):
	if(a==c or a==d or b==c or b==d):
		print("Intervalo 1: ", a,",", b)
		print("Intervalo 2: ", c,",", d)
		print("Ha intersecao")
	else:
		print("Intervalo 1: ", a,",", b)
		print("Intervalo 2: ", c,",", d)
		print("Nao ha intersecao")
else:
	print("Intervalo 1: ", a,",", b)
	print("Intervalo 2: ", c,",", d)
	print("Entradas invalidas")
	
-- EXECUTION TIME:
0.169717
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1:  1.5 , 5.0
Intervalo 2:  2.5 , 3.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 15:42:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a = float(input())
b = float(input())
c = float(input())
d = float(input())

if(b>a and d>c):
	if(a==c or a==d or b==c or b==d):
		print("Intervalo 1: ", a,",", b)
		print("Intervalo 2: ", c,",", d)
		print("Ha intersecao")
	else:
		print("Intervalo 1: ", a,",", b)
		print("Intervalo 2: ", c,",", d)
		print("Nao ha intersecao")
else:
	print("Intervalo 1: ", a,",", b)
	print("Intervalo 2: ", c,",", d)
	print("Entradas invalidas")
	
-- EXECUTION TIME:
0.193646
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1:  1.5 , 5.0
Intervalo 2:  2.5 , 3.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1:  -1.0 , -3.0
Intervalo 2:  1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:42:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a = float(input())
b = float(input())
c = float(input())
d = float(input())

if(b>a and d>c):
	if(a==c or a==d or b==c or b==d):
		print("Intervalo 1: ", a,",", b)
		print("Intervalo 2: ", c,",", d)
		print("Ha intersecao")
	else:
		print("Intervalo 1: ", a,",", b)
		print("Intervalo 2: ", c,",", d)
		print("Nao ha intersecao")
else:
	print("Intervalo 1: ", a,",", b)
	print("Intervalo 2: ", c,",", d)
	print("Entradas invalidas")
	
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:43:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a = float(input())
b = float(input())
c = float(input())
d = float(input())

if(b>a and d>c):
	if(a==c or a==d or b==c or b==d):
		print("Intervalo 1: ", a,",", b)
		print("Intervalo 2: ", c,",", d)
		print("Ha intersecao")
	else:
		print("Intervalo 1: ", a,",", b)
		print("Intervalo 2: ", c,",", d)
		print("Nao ha intersecao")
else:
	print("Intervalo 1: ", a,",", b)
	print("Intervalo 2: ", c,",", d)
	print("Entradas invalidas")
	
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:43:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a = float(input())
b = float(input())
c = float(input())
d = float(input())

if(b>a and d>c):
	if(a==c or a==d or b==c or b==d):
		print("Intervalo 1: ", a,",", b)
		print("Intervalo 2: ", c,",", d)
		print("Ha intersecao")
	else:
		print("Intervalo 1: ", a,",", b)
		print("Intervalo 2: ", c,",", d)
		print("Nao ha intersecao")
else:
	print("Intervalo 1: ", a,",", b)
	print("Intervalo 2: ", c,",", d)
	print("Entradas invalidas")
	
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 15:44:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a = float(input())
b = float(input())
c = float(input())
d = float(input())

if(b>a and d>c):
	if(a==c or a==d or b==c or b==d):
		print("Intervalo 1: ", a,",", b)
		print("Intervalo 2: ", c,",", d)
		print("Ha intersecao")
	else:
		print("Intervalo 1: ", a,",", b)
		print("Intervalo 2: ", c,",", d)
		print("Nao ha intersecao")
else:
	print("Intervalo 1: ", a,",", b)
	print("Intervalo 2: ", c,",", d)
	print("Entradas invalidas")
	
-- EXECUTION TIME:
0.125564
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1:  1.5 , 5.0
Intervalo 2:  2.5 , 3.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1:  -1.0 , -3.0
Intervalo 2:  1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 15:44:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a = float(input())
b = float(input())
c = float(input())
d = float(input())

if(b>a and d>c):
	if(a==c or a==d or b==c or b==d):
		print("Intervalo 1: ", a,",", b)
		print("Intervalo 2: ", c,",", d)
		print("Ha intersecao")
	else:
		print("Intervalo 1: ", a,",", b)
		print("Intervalo 2: ", c,",", d)
		print("Nao ha intersecao")
else:
	print("Intervalo 1: ", a,",", b)
	print("Intervalo 2: ", c,",", d)
	print("Entradas invalidas")
	
-- EXECUTION TIME:
0.219219
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1:  1.5 , 5.0
Intervalo 2:  2.5 , 3.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1:  -1.0 , -3.0
Intervalo 2:  1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 16:00:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a = float(input())
b = float(input())
c = float(input())
d = float(input())

if(b>a and d>c):
	if((a>=c and a<=d) or (b>=c and b<=d)):
		print("Intervalo 1: ", a,",", b)
		print("Intervalo 2: ", c,",", d)
		print("Ha intersecao")
	else:
		print("Intervalo 1: ", a,",", b)
		print("Intervalo 2: ", c,",", d)
		print("Nao ha intersecao")
else:
	print("Intervalo 1: ", a,",", b)
	print("Intervalo 2: ", c,",", d)
	print("Entradas invalidas")
	
-- EXECUTION TIME:
0.188798
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1:  1.5 , 5.0
Intervalo 2:  2.5 , 3.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1:  -1.0 , -3.0
Intervalo 2:  1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 16:01:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a = float(input())
b = float(input())
c = float(input())
d = float(input())

if(b>a and d>c):
	if((a>=c and a<d) or (b>=c and b<d) or (c>=a and c<b) or (d>=a and d<b)):
		print("Intervalo 1: ", a,",", b)
		print("Intervalo 2: ", c,",", d)
		print("Ha intersecao")
	else:
		print("Intervalo 1: ", a,",", b)
		print("Intervalo 2: ", c,",", d)
		print("Nao ha intersecao")
else:
	print("Intervalo 1: ", a,",", b)
	print("Intervalo 2: ", c,",", d)
	print("Entradas invalidas")
	
-- EXECUTION TIME:
0.16142
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1:  1.5 , 5.0
Intervalo 2:  2.5 , 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1:  -1.0 , -3.0
Intervalo 2:  1.0 , 3.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
