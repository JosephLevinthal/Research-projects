== TEST (2019-05-01 01:18:19) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque: "))
c=float(input("nivel do combustivel: "))
r=float(input("raio semiesferioco: "))
print("Entradas:",H",",c,",",r)
from math import *
if(H>0 and c>0 and r>0)and(H>c and H>(2*r))
	if(h==H/2):
		v1=pi*(r**2)*(h-r)
		vc=((4/3)*pi*(r**3))/2
		V=v1+vc
		print("Volume:",V,"litros")
-- ERROR:
File "XXXX", line 9
    print("Entradas:",H",",c,",",r)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 01:19:01) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque: "))
c=float(input("nivel do combustivel: "))
r=float(input("raio semiesferioco: "))
print("Entradas:",H,",",c,",",r)
from math import *
if(H>0 and c>0 and r>0)and(H>c and H>(2*r))
	if(h==H/2):
		v1=pi*(r**2)*(h-r)
		vc=((4/3)*pi*(r**3))/2
		V=v1+vc
		print("Volume:",V,"litros")
-- ERROR:
File "XXXX", line 11
    if(H>0 and c>0 and r>0)and(H>c and H>(2*r))
                                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 01:19:14) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque: "))
c=float(input("nivel do combustivel: "))
r=float(input("raio semiesferioco: "))
print("Entradas:",H,",",c,",",r)
from math import *
if(H>0 and c>0 and r>0)and(H>c and H>(2*r)):
	if(h==H/2):
		v1=pi*(r**2)*(h-r)
		vc=((4/3)*pi*(r**3))/2
		V=v1+vc
		print("Volume:",V,"litros")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    if(h==H/2):
NameError: name 'h' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 01:19:50) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque: "))
c=float(input("nivel do combustivel: "))
r=float(input("raio semiesferioco: "))
print("Entradas:",H,",",c,",",r)
from math import *
if(H>0 and c>0 and r>0)and(H>c and H>(2*r)):
	if(h<=H/2):
		v1=pi*(r**2)*(h-r)
		vc=((4/3)*pi*(r**3))/2
		V=v1+vc
		print("Volume:",V,"litros")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    if(h<=H/2):
NameError: name 'h' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 01:20:47) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque: "))
c=float(input("nivel do combustivel: "))
r=float(input("raio semiesferioco: "))
print("Entradas:",H,",",c,",",r)
from math import *
if(H>0 and c>0 and r>0)and(H>c and H>(2*r)):
	if(c<=H/2):
		v1=pi*(r**2)*(c-r)
		vc=((4/3)*pi*(r**3))/2
		V=v1+vc
		print("Volume:",V,"litros")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 02:30:19) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque: "))
c=float(input("nivel do combustivel: "))
r=float(input("raio semiesferioco: "))
print("Entradas:",H,",",c,",",r)
from math import *
if(H>0 and c>0 and r>0)and(H>c and H>(2*r)):
	if(c>r):
		if(c<=H/2):
			vc=pi*(r**2)*(c-r)
			ve=((4/3)*pi*(r**3))/2
			V=vc+ve
			print("Volume:",round(V,3),"litros")
		elif(c<=H-r):
			ve=(4/3)*pi*(r**3)
			vc=pi*(r**2)*(c-r)
			V=ve+vc
			print("Volume:",round(V,3),"litros")
	if(c<=r):
		if(c==r):
			Ve=((4/3)*pi*(r**3))/2
			print("Volume:",round(Ve,3),"litros")
		elif(c<r):
			Vc=(pi/3)*(c**2)*(3*r-c)
			print("Volume:",round(Vc,3),"litros")
	if(c>H-r):
		if(c<H):
			ve=((4/3)*pi*(r**3))/2
			vc=pi*(r**2)*(c-r)
			vce=(pi/3)*(c**2)*(3c-(H-c))
			V=ve+vc-vce
			print("Volume:",round(V,3),"litros")
		elif(c==H):
			ve=(4/3)*pi*(r**3)
			vc=pi*(r**2)*(c-r)
			V=ve+vc
			print("Volume:",round(V,3),"litros")
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 34
    vce=(pi/3)*(c**2)*(3c-(H-c))
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 02:31:00) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque: "))
c=float(input("nivel do combustivel: "))
r=float(input("raio semiesferioco: "))
print("Entradas:",H,",",c,",",r)
from math import *
if(H>0 and c>0 and r>0)and(H>c and H>(2*r)):
	if(c>r):
		if(c<=H/2):
			vc=pi*(r**2)*(c-r)
			ve=((4/3)*pi*(r**3))/2
			V=vc+ve
			print("Volume:",round(V,3),"litros")
		elif(c<=H-r):
			ve=(4/3)*pi*(r**3)
			vc=pi*(r**2)*(c-r)
			V=ve+vc
			print("Volume:",round(V,3),"litros")
	if(c<=r):
		if(c==r):
			Ve=((4/3)*pi*(r**3))/2
			print("Volume:",round(Ve,3),"litros")
		elif(c<r):
			Vc=(pi/3)*(c**2)*(3*r-c)
			print("Volume:",round(Vc,3),"litros")
	if(c>H-r):
		if(c<H):
			ve=((4/3)*pi*(r**3))/2
			vc=pi*(r**2)*(c-r)
			vce=(pi/3)*(c**2)*(3*c-(H-c))
			V=ve+vc-vce
			print("Volume:",round(V,3),"litros")
		elif(c==H):
			ve=(4/3)*pi*(r**3)
			vc=pi*(r**2)*(c-r)
			V=ve+vc
			print("Volume:",round(V,3),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 107.47 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 02:31:51) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque: "))
c=float(input("nivel do combustivel: "))
r=float(input("raio semiesferioco: "))
print("Entradas:",H,",",c,",",r)
from math import *
if(H>0 and c>0 and r>0)and(H>c and H>(2*r)):
	if(c>r):
		if(c<=H/2):
			vc=pi*(r**2)*(c-r)
			ve=((4/3)*pi*(r**3))/2
			V=vc+ve
			print("Volume:",round(V,3),"litros")
		elif(c<=H-r):
			ve=(4/3)*pi*(r**3)
			vc=pi*(r**2)*(c-r)
			V=ve+vc
			print("Volume:",round(V,3),"litros")
	if(c<=r):
		if(c==r):
			Ve=((4/3)*pi*(r**3))/2
			print("Volume:",round(Ve,3),"litros")
		elif(c<r):
			Vc=(pi/3)*(c**2)*(3*r-c)
			print("Volume:",round(Vc,3),"litros")
	if(c>H-r):
		if(c<H):
			ve=((4/3)*pi*(r**3))/2
			vc=pi*(r**2)*(c-r)
			vce=(pi/3)*(c**2)*(3*c-(H-c))
			V=ve+vc-vce
			print("Volume:",round(V,3),"litros")
		elif(c==H):
			ve=(4/3)*pi*(r**3)
			vc=pi*(r**2)*(c-r)
			V=ve+vc
			print("Volume:",round(V,3),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 107.47 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 02:32:28) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque: "))
c=float(input("nivel do combustivel: "))
r=float(input("raio semiesferioco: "))
print("Entradas:",H,",",c,",",r)
from math import *
if(H>0 and c>0 and r>0)and(H>c and H>(2*r)):
	if(c>r):
		if(c<=H/2):
			vc=pi*(r**2)*(c-r)
			ve=((4/3)*pi*(r**3))/2
			V=vc+ve
			print("Volume:",round(V,3),"litros")
		elif(c<=H-r):
			ve=(4/3)*pi*(r**3)
			vc=pi*(r**2)*(c-r)
			V=ve+vc
			print("Volume:",round(V,3),"litros")
	if(c<=r):
		if(c==r):
			Ve=((4/3)*pi*(r**3))/2
			print("Volume:",round(Ve,3),"litros")
		elif(c<r):
			Vc=(pi/3)*(c**2)*(3*r-c)
			print("Volume:",round(Vc,3),"litros")
	if(c>H-r):
		if(c<H):
			ve=((4/3)*pi*(r**3))/2
			vc=pi*(r**2)*(c-r)
			vce=(pi/3)*(c**2)*(3*c-(H-c))
			V=ve+vc-vce
			print("Volume:",round(V,3),"litros")
		elif(c==H):
			ve=(4/3)*pi*(r**3)
			vc=pi*(r**2)*(c-r)
			V=ve+vc
			print("Volume:",round(V,3),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 107.47 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 02:32:47) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque: "))
c=float(input("nivel do combustivel: "))
r=float(input("raio semiesferioco: "))
print("Entradas:",H,",",c,",",r)
from math import *
if(H>0 and c>0 and r>0)and(H>c and H>(2*r)):
	if(c>r):
		if(c<=H/2):
			vc=pi*(r**2)*(c-r)
			ve=((4/3)*pi*(r**3))/2
			V=vc+ve
			print("Volume:",round(V,3),"litros")
		elif(c<=H-r):
			ve=(4/3)*pi*(r**3)
			vc=pi*(r**2)*(c-r)
			V=ve+vc
			print("Volume:",round(V,3),"litros")
	if(c<=r):
		if(c==r):
			Ve=((4/3)*pi*(r**3))/2
			print("Volume:",round(Ve,3),"litros")
		elif(c<r):
			Vc=(pi/3)*(c**2)*(3*r-c)
			print("Volume:",round(Vc,3),"litros")
	if(c>H-r):
		if(c<H):
			ve=((4/3)*pi*(r**3))/2
			vc=pi*(r**2)*(c-r)
			vce=(pi/3)*(c**2)*(3*c-(H-c))
			V=ve+vc-vce
			print("Volume:",round(V,3),"litros")
		elif(c==H):
			ve=(4/3)*pi*(r**3)
			vc=pi*(r**2)*(c-r)
			V=ve+vc
			print("Volume:",round(V,3),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 107.47 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 02:33:06) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque: "))
c=float(input("nivel do combustivel: "))
r=float(input("raio semiesferioco: "))
print("Entradas:",H,",",c,",",r)
from math import *
if(H>0 and c>0 and r>0)and(H>c and H>(2*r)):
	if(c>r):
		if(c<=H/2):
			vc=pi*(r**2)*(c-r)
			ve=((4/3)*pi*(r**3))/2
			V=vc+ve
			print("Volume:",round(V,3),"litros")
		elif(c<=H-r):
			ve=(4/3)*pi*(r**3)
			vc=pi*(r**2)*(c-r)
			V=ve+vc
			print("Volume:",round(V,3),"litros")
	if(c<=r):
		if(c==r):
			Ve=((4/3)*pi*(r**3))/2
			print("Volume:",round(Ve,3),"litros")
		elif(c<r):
			Vc=(pi/3)*(c**2)*(3*r-c)
			print("Volume:",round(Vc,3),"litros")
	if(c>H-r):
		if(c<H):
			ve=((4/3)*pi*(r**3))/2
			vc=pi*(r**2)*(c-r)
			vce=(pi/3)*(c**2)*(3*c-(H-c))
			V=ve+vc-vce
			print("Volume:",round(V,3),"litros")
		elif(c==H):
			ve=(4/3)*pi*(r**3)
			vc=pi*(r**2)*(c-r)
			V=ve+vc
			print("Volume:",round(V,3),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 107.47 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 11:56:23) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque: "))
c=float(input("nivel do combustivel: "))
r=float(input("raio semiesferioco: "))
print("Entradas:",H,",",c,",",r)
from math import *
if(H>0 and c>0 and r>0)and(H>c and H>(2*r)):
	if(c>r):
		if(c<=H/2):
			vc=pi*(r**2)*(c-r)
			ve=((4/3)*pi*(r**3))/2
			V=vc+ve
			print("Volume:",round(V,3),"litros")
		elif(c<=H-r):
			ve=(4/3)*pi*(r**3)
			vc=pi*(r**2)*(c-r)
			V=ve+vc
			print("Volume:",round(V,3),"litros")
	if(c<=r):
		if(c==r):
			Ve=((4/3)*pi*(r**3))/2
			print("Volume:",round(Ve,3),"litros")
		elif(c<r):
			Vc=(pi/3)*(c**2)*(3*r-c)
			print("Volume:",round(Vc,3),"litros")
	if(c>H-r):
		if(c<H):
			ve=((4/3)*pi*(r**3))/2
			vc=pi*(r**2)*(c-r)
			vce=(pi/3)*(c**2)*(3*c-(H-c))
			V=ve+vc-vce
			print("Volume:",round(V,3),"litros")
		elif(c==H):
			ve=(4/3)*pi*(r**3)
			vc=pi*(r**2)*(c-r)
			V=ve+vc
			print("Volume:",round(V,3),"litros")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.142732
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 107.47 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 11:56:51) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque: "))
c=float(input("nivel do combustivel: "))
r=float(input("raio semiesferioco: "))
print("Entradas:",H,",",c,",",r)
from math import *
if(H>0 and c>0 and r>0)and(H>c and H>(2*r)):
	if(c>r):
		if(c<=H/2):
			vc=pi*(r**2)*(c-r)
			ve=((4/3)*pi*(r**3))/2
			V=vc+ve
			print("Volume:",round(V,3),"litros")
		elif(c<=H-r):
			ve=(4/3)*pi*(r**3)
			vc=pi*(r**2)*(c-r)
			V=ve+vc
			print("Volume:",round(V,3),"litros")
	if(c<=r):
		if(c==r):
			Ve=((4/3)*pi*(r**3))/2
			print("Volume:",round(Ve,3),"litros")
		elif(c<r):
			Vc=(pi/3)*(c**2)*(3*r-c)
			print("Volume:",round(Vc,3),"litros")
	if(c>H-r):
		if(c<H):
			ve=((4/3)*pi*(r**3))/2
			vc=pi*(r**2)*(c-r)
			vce=(pi/3)*(c**2)*(3*c-(H-c))
			V=ve+vc-vce
			print("Volume:",round(V,3),"litros")
		elif(c==H):
			ve=(4/3)*pi*(r**3)
			vc=pi*(r**2)*(c-r)
			V=ve+vc
			print("Volume:",round(V,3),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 107.47 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 12:16:34) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque: "))
c=float(input("nivel do combustivel: "))
r=float(input("raio semiesferioco: "))
print("Entradas:",H,",",c,",",r)
from math import *
if(H>0 and c>0 and r>0)and(H>c and H>(2*r)):
	V=(4/3)*pi*(r**3)
	if(c<=r):
		if(c==r):
			V=V/2
			print("Volume:",V,"litros")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 12:17:06) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque: "))
c=float(input("nivel do combustivel: "))
r=float(input("raio semiesferioco: "))
print("Entradas:",H,",",c,",",r)
from math import *
if(H>0 and c>0 and r>0)and(H>c and H>(2*r)):
	V=(4/3)*pi*(r**3)
	if(c<=r):
		if(c==r):
			V=V/2
			print("Volume:",round(V),"litros")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 12:17:32) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque: "))
c=float(input("nivel do combustivel: "))
r=float(input("raio semiesferioco: "))
print("Entradas:",H,",",c,",",r)
from math import *
if(H>0 and c>0 and r>0)and(H>c and H>(2*r)):
	V=(4/3)*pi*(r**3)
	if(c<=r):
		if(c==r):
			V=V/2
			print("Volume:",round(V,3),"litros")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 12:20:53) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque: "))
c=float(input("nivel do combustivel: "))
r=float(input("raio semiesferioco: "))
print("Entradas:",H,",",c,",",r)
from math import *
if(H>0 and c>0 and r>0)and(H>c and H>(2*r)):
	V=(4/3)*pi*(r**3)
	if(c<=r):
		if(c==r):
			V=V/2
			print("Volume:",round(V,3),"litros")
		elif(c<r):
			V=(pi/3)*(c**2)*(3*r-c)
			print("Volume:",V,"litros")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 12:21:28) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque: "))
c=float(input("nivel do combustivel: "))
r=float(input("raio semiesferico: "))
print("Entradas:",H,",",c,",",r)
from math import *
if(H>0 and c>0 and r>0)and(H>c and H>(2*r)):
	V=(4/3)*pi*(r**3)
	if(c<=r):
		if(c==r):
			V=V/2
			print("Volume:",round(V,3),"litros")
		elif(c<r):
			V=(pi/3)*(c**2)*(3*r-c)
			print("Volume:",V,"litros")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 12:22:00) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque: "))
c=float(input("nivel do combustivel: "))
r=float(input("raio semiesferico: "))
print("Entradas:",H,",",c,",",r)
from math import *
if(H>0 and c>0 and r>0)and(H>c and H>(2*r)):
	V=(4/3)*pi*(r**3)
	if(c<=r):
		if(c==r):
			V=V/2
			print("Volume:",round(V,3),"litros")
		elif(c<r):
			V=(pi/3)*(c**2)*(3*r-c)
			print("Volume:",round(V,3),"litros")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 12:22:12) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque: "))
c=float(input("nivel do combustivel: "))
r=float(input("raio semiesferico: "))
print("Entradas:",H,",",c,",",r)
from math import *
if(H>0 and c>0 and r>0)and(H>c and H>(2*r)):
	V=(4/3)*pi*(r**3)
	if(c<=r):
		if(c==r):
			V=V/2
			print("Volume:",round(V,3),"litros")
		elif(c<r):
			V=(pi/3)*(c**2)*(3*r-c)
			print("Volume:",round(V,3),"litros")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 12:23:18) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque: "))
c=float(input("nivel do combustivel: "))
r=float(input("raio semiesferico: "))
print("Entradas:",H,",",c,",",r)
from math import *
if(H>0 and c>0 and r>0)and(H>c and H>(2*r)):
	V=(4/3)*pi*(r**3)
	if(c<=r):
		if(c==r):
			V=V/2
			print("Volume:",round(V,3),"litros")
		elif(c<r):
			V=(pi/3)*(c**2)*(3*r-c)
			print("Volume:",round(V,3),"litros")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 12:54:32) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque: "))
c=float(input("nivel do combustivel: "))
r=float(input("raio semiesferico: "))
print("Entradas:",H,",",c,",",r)
from math import *
if(H>0 and c>0 and r>0)and(H>c and H>(2*r)):
	V=(4/3)*pi*(r**3)
	if(c<=r):
		if(c==r):
			V=V/2
			print("Volume:",round(V,3),"litros")
		elif(c<r):
			V=(pi/3)*(c**2)*(3*r-c)
			print("Volume:",round(V,3),"litros")
	elif(c>r):
		if(c<H-r):
			V=V/2
			C=pi*(r**2)*(c-r)
			V1=V+C
			print("Volume:",round(V,3),"litros")
			
			
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 25.483 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 12:55:10) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque: "))
c=float(input("nivel do combustivel: "))
r=float(input("raio semiesferico: "))
print("Entradas:",H,",",c,",",r)
from math import *
if(H>0 and c>0 and r>0)and(H>c and H>(2*r)):
	V=(4/3)*pi*(r**3)
	if(c<=r):
		if(c==r):
			V=V/2
			print("Volume:",round(V,3),"litros")
		elif(c<r):
			V=(pi/3)*(c**2)*(3*r-c)
			print("Volume:",round(V,3),"litros")
	elif(c>r):
		if(c<H-r):
			V=V/2
			C=pi*(r**2)*(c-r)
			V1=V+C
			print("Volume:",round(V,3),"litros")
			
			
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 25.483 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 12:55:42) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque: "))
c=float(input("nivel do combustivel: "))
r=float(input("raio semiesferico: "))
print("Entradas:",H,",",c,",",r)
from math import *
if(H>0 and c>0 and r>0)and(H>c and H>(2*r)):
	V=(4/3)*pi*(r**3)
	if(c<=r):
		if(c==r):
			V=V/2
			print("Volume:",round(V,3),"litros")
		elif(c<r):
			V=(pi/3)*(c**2)*(3*r-c)
			print("Volume:",round(V,3),"litros")
	elif(c>r):
		if(c<H-r):
			V=V/2
			C=pi*(r**2)*(c-r)
			V1=V+C
			print("Volume:",round(V,3),"litros")
			
			
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 25.483 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 12:55:56) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque: "))
c=float(input("nivel do combustivel: "))
r=float(input("raio semiesferico: "))
print("Entradas:",H,",",c,",",r)
from math import *
if(H>0 and c>0 and r>0)and(H>c and H>(2*r)):
	V=(4/3)*pi*(r**3)
	if(c<=r):
		if(c==r):
			V=V/2
			print("Volume:",round(V,3),"litros")
		elif(c<r):
			V=(pi/3)*(c**2)*(3*r-c)
			print("Volume:",round(V,3),"litros")
	elif(c>r):
		if(c<H-r):
			V=V/2
			C=pi*(r**2)*(c-r)
			V1=V+C
			print("Volume:",round(V,3),"litros")
			
			
-- EXECUTION TIME:
0.268301
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 25.483 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 12:55:58) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque: "))
c=float(input("nivel do combustivel: "))
r=float(input("raio semiesferico: "))
print("Entradas:",H,",",c,",",r)
from math import *
if(H>0 and c>0 and r>0)and(H>c and H>(2*r)):
	V=(4/3)*pi*(r**3)
	if(c<=r):
		if(c==r):
			V=V/2
			print("Volume:",round(V,3),"litros")
		elif(c<r):
			V=(pi/3)*(c**2)*(3*r-c)
			print("Volume:",round(V,3),"litros")
	elif(c>r):
		if(c<H-r):
			V=V/2
			C=pi*(r**2)*(c-r)
			V1=V+C
			print("Volume:",round(V,3),"litros")
			
			
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 25.483 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 12:56:23) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque: "))
c=float(input("nivel do combustivel: "))
r=float(input("raio semiesferico: "))
print("Entradas:",H,",",c,",",r)
from math import *
if(H>0 and c>0 and r>0)and(H>c and H>(2*r)):
	V=(4/3)*pi*(r**3)
	if(c<=r):
		if(c==r):
			V=V/2
			print("Volume:",round(V,3),"litros")
		elif(c<r):
			V=(pi/3)*(c**2)*(3*r-c)
			print("Volume:",round(V,3),"litros")
	elif(c>r):
		if(c<H-r):
			V=V/2
			C=pi*(r**2)*(c-r)
			V1=V+C
			print("Volume:",round(V,3),"litros")
			
			
-- EXECUTION TIME:
0.170392
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 25.483 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 12:56:25) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque: "))
c=float(input("nivel do combustivel: "))
r=float(input("raio semiesferico: "))
print("Entradas:",H,",",c,",",r)
from math import *
if(H>0 and c>0 and r>0)and(H>c and H>(2*r)):
	V=(4/3)*pi*(r**3)
	if(c<=r):
		if(c==r):
			V=V/2
			print("Volume:",round(V,3),"litros")
		elif(c<r):
			V=(pi/3)*(c**2)*(3*r-c)
			print("Volume:",round(V,3),"litros")
	elif(c>r):
		if(c<H-r):
			V=V/2
			C=pi*(r**2)*(c-r)
			V1=V+C
			print("Volume:",round(V,3),"litros")
			
			
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 25.483 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 12:57:26) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque: "))
c=float(input("nivel do combustivel: "))
r=float(input("raio semiesferico: "))
print("Entradas:",H,",",c,",",r)
from math import *
if(H>0 and c>0 and r>0)and(H>c and H>(2*r)):
	V=(4/3)*pi*(r**3)
	if(c<=r):
		if(c==r):
			V=V/2
			print("Volume:",round(V,3),"litros")
		elif(c<r):
			V=(pi/3)*(c**2)*(3*r-c)
			print("Volume:",round(V,3),"litros")
	elif(c>r):
		if(c<H-r):
			V=V/2
			C=pi*(r**2)*(c-r)
			V1=V+C
			print("Volume:",round(V,3),"litros")
			
			
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 25.483 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 12:59:19) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque: "))
c=float(input("nivel do combustivel: "))
r=float(input("raio semiesferico: "))
print("Entradas:",H,",",c,",",r)
from math import *
if(H>0 and c>0 and r>0)and(H>c and H>(2*r)):
	V=(4/3)*pi*(r**3)
	if(c<=r):
		if(c==r):
			V=V/2
			print("Volume:",round(V,3),"litros")
		elif(c<r):
			V=(pi/3)*(c**2)*(3*r-c)
			print("Volume:",round(V,3),"litros")
	elif(c>r):
		if(c<H-r):
			V=V/2
			C=pi*(r**2)*(c-r)
			V1=V+C
			print("Volume:",round(V,3),"litros")
			
			
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 25.483 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 13:02:40) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque: "))
c=float(input("nivel do combustivel: "))
r=float(input("raio semiesferico: "))
print("Entradas:",H,",",c,",",r)
from math import *
if(H>0 and c>0 and r>0)and(H>c and H>(2*r)):
	V=(4/3)*pi*(r**3)
	if(c<=r):
		if(c==r):
			v=V/2
			print("Volume:",round(v,3),"litros")
		elif(c<r):
			v=(pi/3)*(c**2)*(3*r-c)
			print("Volume:",round(v,3),"litros")
	elif(c>r):
		if(c<H-r):
			v=V/2
			C=pi*(r**2)*(c-r)
			V1=v+C
			print("Volume:",round(V1,3),"litros")
			
			
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 13:02:56) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque: "))
c=float(input("nivel do combustivel: "))
r=float(input("raio semiesferico: "))
print("Entradas:",H,",",c,",",r)
from math import *
if(H>0 and c>0 and r>0)and(H>c and H>(2*r)):
	V=(4/3)*pi*(r**3)
	if(c<=r):
		if(c==r):
			v=V/2
			print("Volume:",round(v,3),"litros")
		elif(c<r):
			v=(pi/3)*(c**2)*(3*r-c)
			print("Volume:",round(v,3),"litros")
	elif(c>r):
		if(c<H-r):
			v=V/2
			C=pi*(r**2)*(c-r)
			V1=v+C
			print("Volume:",round(V1,3),"litros")
			
			
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 13:03:18) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque: "))
c=float(input("nivel do combustivel: "))
r=float(input("raio semiesferico: "))
print("Entradas:",H,",",c,",",r)
from math import *
if(H>0 and c>0 and r>0)and(H>c and H>(2*r)):
	V=(4/3)*pi*(r**3)
	if(c<=r):
		if(c==r):
			v=V/2
			print("Volume:",round(v,3),"litros")
		elif(c<r):
			v=(pi/3)*(c**2)*(3*r-c)
			print("Volume:",round(v,3),"litros")
	elif(c>r):
		if(c<H-r):
			v=V/2
			C=pi*(r**2)*(c-r)
			V1=v+C
			print("Volume:",round(V1,3),"litros")
			
			
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 13:21:05) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque: "))
c=float(input("nivel do combustivel: "))
r=float(input("raio semiesferico: "))
print("Entradas:",H,",",c,",",r)
from math import *
if(H>0 and c>0 and r>0)and(H>c and H>(2*r)):
	V=(4/3)*pi*(r**3)
	if(c<=r):
		if(c==r):
			v=V/2
			print("Volume:",round(v,3),"litros")
		elif(c<r):
			v=(pi/3)*(c**2)*(3*r-c)
			print("Volume:",round(v,3),"litros")
	elif(c>r):
		if(c<=H-r):
			v=V/2
			C=pi*(r**2)*(c-r)
			V1=v+C
			print("Volume:",round(V1,3),"litros")
	elif(c>H-r):
		C=pi*(r**2)*(c-r)
		vc=(pi/3)*((H-c)**2)*(3*r-(H-c))
		V1=(V/2)+C-vc
		print("Volume:",round(V1,3),"litros")
			
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 13:23:20) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque: "))
c=float(input("nivel do combustivel: "))
r=float(input("raio semiesferico: "))
print("Entradas:",H,",",c,",",r)
from math import *
if(H>0 and c>0 and r>0)and(H>c and H>(2*r)):
	V=(4/3)*pi*(r**3)
	if(c<=r):
		if(c==r):
			v=V/2
			print("Volume:",round(v,3),"litros")
		elif(c<r):
			v=(pi/3)*(c**2)*(3*r-c)
			print("Volume:",round(v,3),"litros")
	elif(c>r):
		if(c<=H-r):
			v=V/2
			C=pi*(r**2)*(c-r)
			V1=v+C
			print("Volume:",round(V1,3),"litros")
	elif(c>H-r):
		C=pi*(r**2)*(c-r)
		vc=(pi/3)*((H-c)**2)*(3*r-(H-c))
		V1=(V/2)+C-vc
		print("Volume:",round(V1,3),"litros")
			
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 13:25:06) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque: "))
c=float(input("nivel do combustivel: "))
r=float(input("raio semiesferico: "))
print("Entradas:",H,",",c,",",r)
from math import *
if(H>0 and c>0 and r>0)and(H>c and H>(2*r)):
	V=(4/3)*pi*(r**3)
	if(c<=r):
		if(c==r):
			v=V/2
			print("Volume:",round(v,3),"litros")
		elif(c<r):
			v=(pi/3)*(c**2)*(3*r-c)
			print("Volume:",round(v,3),"litros")
	elif(c>r):
		if(c<=H-r):
			v=V/2
			C=pi*(r**2)*(c-r)
			V1=v+C
			print("Volume:",round(V1,3),"litros")
	elif(c>H-r):
		C=pi*(r**2)*(c-r)
		vc=(pi/3)*((H-c)**2)*(3*r-(H-c))
		V1=(V/2)+C-vc
		print("Volume:",round(V1,3),"litros")
			
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 13:25:55) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque: "))
c=float(input("nivel do combustivel: "))
r=float(input("raio semiesferico: "))
print("Entradas:",H,",",c,",",r)
from math import *
if(H>0 and c>0 and r>0)and(H>c and H>(2*r)):
	V=(4/3)*pi*(r**3)
	if(c<=r):
		if(c==r):
			v=V/2
			print("Volume:",round(v,3),"litros")
		elif(c<r):
			v=(pi/3)*(c**2)*(3*r-c)
			print("Volume:",round(v,3),"litros")
	elif(c>r):
		if(c<=H-r):
			v=V/2
			C=pi*(r**2)*(c-r)
			V1=v+C
			print("Volume:",round(V1,3),"litros")
	elif(c>H-r):
		C=pi*(r**2)*(c-r)
		vc=(pi/3)*((H-c)**2)*(3*r-(H-c))
		V1=(V/2)+C-vc
		print("Volume:",round(V1,3),"litros")
		print(2)
			
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 13:30:01) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque: "))
c=float(input("nivel do combustivel: "))
r=float(input("raio semiesferico: "))
print("Entradas:",H,",",c,",",r)
from math import *
if(H>0 and c>0 and r>0)and(H>c and H>(2*r)):
	V=(4/3)*pi*(r**3)
	if(c<=r):
		if(c==r):
			v=V/2
			print("Volume:",round(v,3),"litros")
		elif(c<r):
			v=(pi/3)*(c**2)*(3*r-c)
			print("Volume:",round(v,3),"litros")
	elif(c>r and c<=H-r):
		v=V/2
		C=pi*(r**2)*(c-r)
		V1=v+C
		print("Volume:",round(V1,3),"litros")
	elif(c>H-r):
		C=pi*(r**2)*(c-r)
		vc=(pi/3)*((H-c)**2)*(3*r-(H-c))
		V1=(V/2)+C-vc
		print("Volume:",round(V1,3),"litros")
		print(2)
			
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 13:30:19) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque: "))
c=float(input("nivel do combustivel: "))
r=float(input("raio semiesferico: "))
print("Entradas:",H,",",c,",",r)
from math import *
if(H>0 and c>0 and r>0)and(H>c and H>(2*r)):
	V=(4/3)*pi*(r**3)
	if(c<=r):
		if(c==r):
			v=V/2
			print("Volume:",round(v,3),"litros")
		elif(c<r):
			v=(pi/3)*(c**2)*(3*r-c)
			print("Volume:",round(v,3),"litros")
	elif(c>r and c<=H-r):
		v=V/2
		C=pi*(r**2)*(c-r)
		V1=v+C
		print("Volume:",round(V1,3),"litros")
	elif(c>H-r):
		C=pi*(r**2)*(c-r)
		vc=(pi/3)*((H-c)**2)*(3*r-(H-c))
		V1=(V/2)+C-vc
		print("Volume:",round(V1,3),"litros")
		print(2)
			
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 13:30:58) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque: "))
c=float(input("nivel do combustivel: "))
r=float(input("raio semiesferico: "))
print("Entradas:",H,",",c,",",r)
from math import *
if(H>0 and c>0 and r>0)and(H>c and H>(2*r)):
	V=(4/3)*pi*(r**3)
	if(c<=r):
		if(c==r):
			v=V/2
			print("Volume:",round(v,3),"litros")
		elif(c<r):
			v=(pi/3)*(c**2)*(3*r-c)
			print("Volume:",round(v,3),"litros")
	elif(c>r and c<=H-r):
		v=V/2
		C=pi*(r**2)*(c-r)
		V1=v+C
		print("Volume:",round(V1,3),"litros")
	elif(c>H-r):
		C=pi*(r**2)*(c-r)
		vc=(pi/3)*((H-c)**2)*(3*r-(H-c))
		V1=(V/2)+C-vc
		print("Volume:",round(V1,3),"litros")
			
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 13:36:40) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque: "))
c=float(input("nivel do combustivel: "))
r=float(input("raio semiesferico: "))
print("Entradas:",H,",",c,",",r)
from math import *
if(H>0 and c>0 and r>0)and(H>c and H>(2*r)):
	V=(4/3)*pi*(r**3)
	if(c<=r):
		if(c==r):
			v=(V/2)*1000
			print("Volume:",round(v,3),"litros")
		elif(c<r):
			v=((pi/3)*(c**2)*(3*r-c))*1000
			print("Volume:",round(v,3),"litros")
	elif(c>r and c<=H-r):
		v=V/2
		C=pi*(r**2)*(c-r)
		V1=(v+C)*1000
		print("Volume:",round(V1,3),"litros")
	elif(c>H-r):
		C=pi*(r**2)*(c-r)
		vc=(pi/3)*((H-c)**2)*(3*r-(H-c))
		V1=((V/2)+C-vc)*1000
		print("Volume:",round(V1,3),"litros")
			
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 13:39:50) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque: "))
c=float(input("nivel do combustivel: "))
r=float(input("raio semiesferico: "))
print("Entradas:",H,",",c,",",r)
from math import *
if(H>0 and c>0 and r>0)and(H>c and H>(2*r)):
	V=(4/3)*pi*(r**3)
	if(c<=r):
		if(c==r):
			v=(V/2)*1000
			print("Volume:",round(v,3),"litros")
		elif(c<r):
			v=((pi/3)*(c**2)*(3*r-c))*1000
			print("Volume:",round(v,3),"litros")
	elif(c>r and c<=H-r):
		v=V/2
		C=pi*(r**2)*(c-r)
		V1=(v+C)*1000
		print("Volume:",round(V1,3),"litros")
	elif(c>H-r):
		C=pi*(r**2)*(c-r)
		vc=(pi/3)*((H-c)**2)*(3*r-(H-c))
		V1=((V/2)+C-vc)*1000
		print("Volume:",round(V1,3),"litros")
elif(h<0 or c<0 or r<0) or (H<c or h<2*r):
	print("Entradas invalidas")
			
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 13:41:03) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque: "))
c=float(input("nivel do combustivel: "))
r=float(input("raio semiesferico: "))
print("Entradas:",H,",",c,",",r)
from math import *
if(H>0 and c>0 and r>0)and(H>c and H>(2*r)):
	V=(4/3)*pi*(r**3)
	if(c<=r):
		if(c==r):
			v=(V/2)*1000
			print("Volume:",round(v,3),"litros")
		elif(c<r):
			v=((pi/3)*(c**2)*(3*r-c))*1000
			print("Volume:",round(v,3),"litros")
	elif(c>r and c<=H-r):
		v=V/2
		C=pi*(r**2)*(c-r)
		V1=(v+C)*1000
		print("Volume:",round(V1,3),"litros")
	elif(c>H-r):
		C=pi*(r**2)*(c-r)
		vc=(pi/3)*((H-c)**2)*(3*r-(H-c))
		V1=((V/2)+C-vc)*1000
		print("Volume:",round(V1,3),"litros")
elif(H<0 or c<0 or r<0) or (H<c or c<2*r):
	print("Entradas invalidas")
			
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 13:41:19) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque: "))
c=float(input("nivel do combustivel: "))
r=float(input("raio semiesferico: "))
print("Entradas:",H,",",c,",",r)
from math import *
if(H>0 and c>0 and r>0)and(H>c and H>(2*r)):
	V=(4/3)*pi*(r**3)
	if(c<=r):
		if(c==r):
			v=(V/2)*1000
			print("Volume:",round(v,3),"litros")
		elif(c<r):
			v=((pi/3)*(c**2)*(3*r-c))*1000
			print("Volume:",round(v,3),"litros")
	elif(c>r and c<=H-r):
		v=V/2
		C=pi*(r**2)*(c-r)
		V1=(v+C)*1000
		print("Volume:",round(V1,3),"litros")
	elif(c>H-r):
		C=pi*(r**2)*(c-r)
		vc=(pi/3)*((H-c)**2)*(3*r-(H-c))
		V1=((V/2)+C-vc)*1000
		print("Volume:",round(V1,3),"litros")
elif(H<0 or c<0 or r<0) or (H<c or c<2*r):
	print("Entradas invalidas")
			
-- EXECUTION TIME:
0.12297
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
