== TEST (2019-04-15 23:58:33) 
-- CODE:
var1=float(input("preço:"))
var2=float(input("pagamento:"))
x = (var1-var2)
y= (var2-var1)
if(var1 > var2):
	mensagem:"falta " + x
else:
	mensagem= "Troco de " + y
print(round(mensagem, 2)
-- ERROR:
File "XXXX", line 10
    
                            ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 23:58:58) 
-- CODE:
var1=float(input("preço:"))
var2=float(input("pagamento:"))
x = (var1-var2)
y= (var2-var1)
if(var1 > var2):
	mensagem:"Falta " + x
else:
	mensagem= "Troco de " + y
print(round(mensagem, 2)
-- ERROR:
File "XXXX", line 10
    
                            ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 23:59:13) 
-- CODE:
var1=float(input("preço:"))
var2=float(input("pagamento:"))
x = (var1-var2)
y= (var2-var1)
if(var1 > var2):
	mensagem: "Falta "+x
else:
	mensagem= "Troco de "+y
print(round(mensagem, 2)
-- ERROR:
File "XXXX", line 10
    
                            ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 23:59:28) 
-- CODE:
var1=float(input("preço:"))
var2=float(input("pagamento:"))
x = (var1-var2)
y= (var2-var1)
if(var1 > var2):
	mensagem: "Falta "
else:
	mensagem= "Troco de "
print(round(mensagem, 2)
-- ERROR:
File "XXXX", line 10
    
                            ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 23:59:49) 
-- CODE:
var1=float(input("preço:"))
var2=float(input("pagamento:"))
x = (var1-var2)
y= (var2-var1)
if(var1 > var2):
	mensagem="Falta "+x
else:
	mensagem= "Troco de "+y
print(round(mensagem, 2)
-- ERROR:
File "XXXX", line 10
    
                            ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 00:00:02) 
-- CODE:
var1=float(input("preço:"))
var2=float(input("pagamento:"))
x = (var1-var2)
y= (var2-var1)
if(var1 > var2):
	mensagem="Falta "+x
else:
	mensagem= "Troco de "+y
print(round(mensagem, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    mensagem="Falta "+x
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 00:00:14) 
-- CODE:
var1=float(input("preco:"))
var2=float(input("pagamento:"))
x = (var1-var2)
y= (var2-var1)
if(var1 > var2):
	mensagem="Falta "+x
else:
	mensagem= "Troco de "+y
print(round(mensagem, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    mensagem="Falta "+x
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 00:00:59) 
-- CODE:
var1=float(input("preco:"))
var2=float(input("pagamento:"))
x = (var1-var2)
y= (var2-var1)
if(var1 > var2):
	mensagem="Falta " + x
else:
	mensagem= "Troco de " + y
print(round(mensagem, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    mensagem="Falta " + x
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 00:01:29) 
-- CODE:
var1=float(input("preco:"))
var2=float(input("pagamento:"))
x = (var1-var2)
y= (var2-var1)
if(var1 > var2):
	mensagem="Falta "
else:
	mensagem= "Troco de " 
print(round(mensagem, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(round(mensagem, 2))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 00:02:04) 
-- CODE:
var1=float(input("preco:"))
var2=float(input("pagamento:"))
x = (var1-var2)
y= (var2-var1)
if(var1 > var2):
	mensagem="Falta "
else:
	mensagem= "Troco de " 
print(mensagem)
-- OUTPUT:
Falta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 00:02:26) 
-- CODE:
var1=float(input("preco:"))
var2=float(input("pagamento:"))
x = (var1-var2)
y= (var2-var1)
if(var1 > var2):
	mensagem="Falta " + x
else:
	mensagem= "Troco de " + y 
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    mensagem="Falta " + x
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 00:03:37) 
-- CODE:
var1=float(input("preco:"))
var2=float(input("pagamento:"))
x = (var1-var2)
y= (var2-var1)
if(var1 > var2):
	mensagem="Falta x"
else:
	mensagem= "Troco de y" 
print(mensagem)
-- OUTPUT:
Falta x
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 00:04:36) 
-- CODE:
var1=float(input("preco:"))
var2=float(input("pagamento:"))
x = (var1-var2)
y= (var2-var1)
if(var1 > var2):
	mensagem="Falta x"
else:
	mensagem= "Troco de y" 
print(round(mensagem, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(round(mensagem, 2))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 00:04:56) 
-- CODE:
var1=float(input("preco:"))
var2=float(input("pagamento:"))
x = (var1-var2)
y= (var2-var1)
if(var1 > var2):
	mensagem="Falta x"
else:
	mensagem= "Troco de y" 
print(float(round(mensagem, 2)))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(float(round(mensagem, 2)))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 00:06:02) 
-- CODE:
var1=float(input("preco:"))
var2=float(input("pagamento:"))
x = (var1-var2)
y= (var2-var1)
if(var1 > var2):
	mensagem="Falta x"
else:
	mensagem= "Troco de y" 
print(mensagem)
-- OUTPUT:
Falta x
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 00:06:16) 
-- CODE:
var1=float(input("preco:"))
var2=float(input("pagamento:"))
x = (var1-var2)
y= (var2-var1)
if(var1 > var2):
	mensagem="Falta "
else:
	mensagem= "Troco de " 
print(mensagem)
-- OUTPUT:
Falta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 00:06:27) 
-- CODE:
var1=float(input("preco:"))
var2=float(input("pagamento:"))
x = (var1-var2)
y= (var2-var1)
if(var1 > var2):
	mensagem="Falta "
else:
	mensagem= "Troco de " + y
print(mensagem)
-- OUTPUT:
Falta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 00:07:02) 
-- CODE:
var1=float(input("preco:"))
var2=float(input("pagamento:"))
x = float(var1-var2)
y= float(var2-var1)
if(var1 > var2):
	mensagem="Falta "
else:
	mensagem= "Troco de " + y
print(mensagem)
-- OUTPUT:
Falta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 00:15:16) 
-- CODE:
var1=float(input("preco:"))
var2=float(input("pagamento:"))
x = float("var1-var2")
y= float("var2-var1")
if(var1 > var2):
	mensagem="Falta "
else:
	mensagem= "Troco de " + y
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    x = float("var1-var2")
ValueError: could not convert string to float: 'var1-var2'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 00:16:09) 
-- CODE:
var1=float(input("preco:"))
var2=float(input("pagamento:"))
x = int(var1-var2)
y= int(var2-var1)
if(var1 > var2):
	mensagem="Falta "
else:
	mensagem= "Troco de " + y
print(mensagem)
-- OUTPUT:
Falta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 00:16:21) 
-- CODE:
var1=float(input("preco:"))
var2=float(input("pagamento:"))
x = int(var1-var2)
y= int(var2-var1)
if(var1 > var2):
	mensagem="Falta "
else:
	mensagem= "Troco de " 
print(mensagem)
-- OUTPUT:
Falta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 00:16:43) 
-- CODE:
var1=float(input("preco:"))
var2=float(input("pagamento:"))
x = int(var1-var2)
y= int(var2-var1)
if(var1 > var2):
	mensagem="Falta "
else:
	mensagem= "Troco de " y
print(mensagem)
-- ERROR:
File "XXXX", line 8
    mensagem= "Troco de " y
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 00:17:06) 
-- CODE:
var1=float(input("preco:"))
var2=float(input("pagamento:"))
x = int(var1-var2)
y= int(var2-var1)
if(var1 > var2):
	mensagem="Falta "
else:
	mensagem= y + "Troco de " 
print(mensagem)
-- OUTPUT:
Falta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 00:18:10) 
-- CODE:
var1=input("preco:")
var2=input("pagamento:")
x = int(var1-var2)
y= int(var2-var1)
if(var1 > var2):
	mensagem="Falta "
else:
	mensagem=  "Troco de " 
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    x = int(var1-var2)
TypeError: unsupported operand type(s) for -: 'str' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 00:18:27) 
-- CODE:
var1=input("preco:")
var2=input("pagamento:")
x = (var1-var2)
y= (var2-var1)
if(var1 > var2):
	mensagem="Falta "
else:
	mensagem=  "Troco de " 
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    x = (var1-var2)
TypeError: unsupported operand type(s) for -: 'str' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 00:18:53) 
-- CODE:
var1=input("preco:")
var2=input("pagamento:")
x = (var1-var2)
y= (var2-var1)
if(var1 > var2):
	mensagem="Falta " + x
else:
	mensagem=  "Troco de " + y 
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    x = (var1-var2)
TypeError: unsupported operand type(s) for -: 'str' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 00:19:06) 
-- CODE:
var1=input("preco:")
var2=input("pagamento:")
x =(var1-var2)
y=(var2-var1)
if(var1 > var2):
	mensagem="Falta " + x
else:
	mensagem=  "Troco de " + y 
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    x =(var1-var2)
TypeError: unsupported operand type(s) for -: 'str' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 00:19:18) 
-- CODE:
var1=input("preco:")
var2=input("pagamento:")
x=(var1-var2)
y=(var2-var1)
if(var1 > var2):
	mensagem="Falta " + x
else:
	mensagem=  "Troco de " + y 
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    x=(var1-var2)
TypeError: unsupported operand type(s) for -: 'str' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 00:26:51) 
-- CODE:
var1=float(input("preco:"))
var2=float(input("pagamento:"))
x=(var1-var2)
y=(var2-var1)
if(var1 > var2):
	mensagem=("Falta ", var1) 
else:
	mensagem=  ("Troco de ", var2) 
print(mensagem)
-- OUTPUT:
('Falta ', 38.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 00:28:13) 
-- CODE:
var1=float(input("preco:"))
var2=float(input("pagamento:"))
x=(var1-var2)
y=(var2-var1)
if(var1 > var2):
	mensagem="Falta "
print(mensagem+x)
else:
	mensagem=  "Troco de "
print(mensagem+y)
-- ERROR:
File "XXXX", line 8
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 00:28:58) 
-- CODE:
var1=float(input("preco:"))
var2=float(input("pagamento:"))
x=(var1-var2)
y=(var2-var1)
if(var1 > var2):
	mensagem="Falta "
	print(mensagem+x)
else:
	mensagem=  "Troco de "
	print(mensagem+y)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(mensagem+x)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 00:29:30) 
-- CODE:
var1=float(input("preco:"))
var2=float(input("pagamento:"))
x=float(var1-var2)
y=float(var2-var1)
if(var1 > var2):
	mensagem="Falta "
	print(mensagem+x)
else:
	mensagem=  "Troco de "
	print(mensagem+y)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(mensagem+x)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
