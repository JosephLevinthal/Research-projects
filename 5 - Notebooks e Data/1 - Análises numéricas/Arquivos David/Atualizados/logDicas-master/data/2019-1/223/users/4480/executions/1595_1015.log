== TEST (2019-04-14 21:23:13) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

numero1 = int (input ())
numero2 = int (input ())
numero3 = int (input ())
-- OUTPUT:
63.617
381.704
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:31:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

numero1 = int (input (10))
numero2 = int (input (12))
numero3 = int (input (14))
  
	

-- OUTPUT:
101214
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:32:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

numero1 = int (input (10))
numero2 = int (input (12))
numero3 = int (input (14))

print (numero1)
 print (numero2) 
print (numero3)	

-- ERROR:
File "XXXX", line 10
    print (numero2) 
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:32:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

numero1 = int (input (10))
numero2 = int (input (12))
numero3 = int (input (14))

print (numero1)
print (numero2) 
print (numero3)	

-- OUTPUT:
10121410
-2
0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:34:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

numero1 = int (input (10))
numero2 = int (input (12))
numero3 = int (input (14))

print (min (numero1,numero2,numero3)	

-- ERROR:
File "XXXX", line 10
    
                                         ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:34:40) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

numero1 = int (input (10))
numero2 = int (input (12))
numero3 = int (input (14))

print (min (numero1,numero2,numero3)
-- ERROR:
File "XXXX", line 10
    
                                        ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:34:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

numero1 = int (input (10))
numero2 = int (input (12))
numero3 = int (input (14))

print (min (numero1,numero2,numero3))
-- OUTPUT:
101214-2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:36:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

numero1 = int (input (10))
numero2 = int (input (12))
numero3 = int (input (14))

print (min(numero1,numero2,numero3))
-- OUTPUT:
101214-2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:37:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

numero1 = int (input (2))
numero2 = int (input (4))
numero3 = int (input (8))

print (min(numero1,numero2,numero3))
-- OUTPUT:
248-2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:44:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

numero1 = int (input (2))
numero2 = int (input (4))
numero3 = int (input (8))

print (min(numero1 + numero2 + numero3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print (min(numero1 + numero2 + numero3))
TypeError: 'int' object is not iterable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 22:01:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

numero1 = int (input())
numero2 = int (input())
numero3 = int (input())

print (min(numero1,numero2,numero3))
-- OUTPUT:
-2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 22:45:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

numero1 = int (input())
numero2 = int (input())
numero3 = int (input())

print (min(numero1,numero2,numero3))
print ((numero1 + numero2 + numero3) - (min(numero1,numero2,numero3) + max(numero1,numero2,numero3))
		print(max(numero1,numero2,numero3))  

-- ERROR:
File "XXXX", line 11
    print(max(numero1,numero2,numero3))  
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 22:46:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

numero1 = int (input())
numero2 = int (input())
numero3 = int (input())

print (min(numero1,numero2,numero3))
print ((numero1 + numero2 + numero3) - (min(numero1,numero2,numero3) + max(numero1,numero2,numero3))
		print (max(numero1,numero2,numero3))  

-- ERROR:
File "XXXX", line 11
    print (max(numero1,numero2,numero3))  
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:23:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

numero1 = int (input())
numero2 = int (input())
numero3 = int (input())

print (min(numero1,numero2,numero3))
print ((numero1 + numero2 + numero3) - (min(numero1,numero2,numero3) + max(numero1,numero2,numero3))
		print (max(numero1,numero2,numero3))  

-- ERROR:
File "XXXX", line 11
    print (max(numero1,numero2,numero3))  
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:24:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

numero1 = int(input())
numero2 = int(input())
numero3 = int(input())

print (min(numero1,numero2,numero3))
print ((numero1 + numero2 + numero3) - (min(numero1,numero2,numero3) + max(numero1,numero2,numero3))
print (max(numero1,numero2,numero3))  

-- ERROR:
File "XXXX", line 11
    print (max(numero1,numero2,numero3))  
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:50:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu c
a = int(input("Digite aqui: "))
b = int(input(Digite aqui: ))
c = int(input())
print = a
-- ERROR:
File "XXXX", line 5
    b = int(input(Digite aqui: ))
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:50:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu c
a = int(input("Digite aqui: "))
b = int(input("Digite aqui: "))
c = int(input())
print = a
-- ERROR:
File "XXXX", line 5
    b = int(input(Digite aqui: ))
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:52:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu c
a = int(input("Digite aqui: "))
b = int(input("Digite aqui: "))
c = int(input("Digite aqui 3: "))
print = a
-- ERROR:
File "XXXX", line 5
    b = int(input(Digite aqui: ))
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:52:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu c
a = int(input("Digite aqui: "))
b = int(input("Digite aqui: "))
c = int(input("Digite aqui 3: "))
print = a
print = b 
print = c
-- ERROR:
File "XXXX", line 5
    b = int(input(Digite aqui: ))
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:53:27) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu c
a = int(input("Digite aqui: "));
b = int(input("Digite aqui: "));
c = int(input("Digite aqui 3: "))
print = a
print = b 
print = c
-- ERROR:
File "XXXX", line 5
    b = int(input(Digite aqui: ))
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 15:22:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu c
a = int(input("Digite aqui: "));
b = int(input("Digite aqui: "));
c = int(input("Digite aqui 3: "))
print = a
print = b 
print = c
-- ERROR:
File "XXXX", line 5
    b = int(input(Digite aqui: ))
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 15:23:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu c
a = int(input("Digite aqui: "));
b = int(input("Digite aqui: "));
c = int(input("Digite aqui 3: "))
print = a
print = b 
print = c
-- EXECUTION TIME:
0.21787
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 16:24:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu c
a = int(input("Digite aqui: "));
b = int(input("Digite aqui: "));
c = int(input("Digite aqui 3: "))
print = (min(a
print = b 
print = c
-- ERROR:
File "XXXX", line 8
    print = b 
        ^
SyntaxError: Missing parentheses in call to 'print'. Did you mean print(= b)?
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 19:34:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu c
a = int(input("Digite aqui: "));
b = int(input("Digite aqui: "));
c = int(input("Digite aqui 3: "))
print = (min(a
print = b 
print = c
-- ERROR:
File "XXXX", line 8
    print = b 
        ^
SyntaxError: Missing parentheses in call to 'print'. Did you mean print(= b)?
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 19:36:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu c
a = int(input("Digite aqui: "));
b = int(input("Digite aqui: "));
c = int(input("Digite aqui 3: "))
print = min(a,b,c)
print = (a+b+c) - min(a,b,c) - max(a,b,c)
print = max(a.b.c)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print = max(a.b.c)
AttributeError: 'int' object has no attribute 'b'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 19:37:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu c
a = int(input("Digite aqui: "));
b = int(input("Digite aqui: "));
c = int(input("Digite aqui 3: "))
print = min(a,b,c)
print = (a+b+c) - min(a,b,c) - max(a,b,c)
print = max(a,b,c)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print = max(a.b.c)
AttributeError: 'int' object has no attribute 'b'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 19:37:08) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu c
a = int(input("Digite aqui: "))
b = int(input("Digite aqui: "))
c = int(input("Digite aqui 3: "))
print = min(a,b,c)
print = (a+b+c) - min(a,b,c) - max(a,b,c)
print = max(a,b,c)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print = max(a.b.c)
AttributeError: 'int' object has no attribute 'b'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 19:37:44) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu c
a = int(input("Digite aqui: "))
b = int(input("Digite aqui: "))
c = int(input("Digite aqui 3: "))

print = min(a,b,c)
print = (a+b+c) - min(a,b,c) - max(a,b,c)
print = max(a,b,c)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print = max(a.b.c)
AttributeError: 'int' object has no attribute 'b'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 19:40:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu c
a = int(input("Digite aqui: "))
b = int(input("Digite aqui: "))
c = int(input("Digite aqui 3: "))
d = min(a,b,c)
e = (a+b+c) - min(a,b,c) - max(a,b,c)
f = max(a,b,c)

print(d)
print(e) 
print(f)
-- OUTPUT:
-2
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 19:40:13) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu c
a = int(input("Digite aqui: "))
b = int(input("Digite aqui: "))
c = int(input("Digite aqui 3: "))
d = min(a,b,c)
e = (a+b+c) - min(a,b,c) - max(a,b,c)
f = max(a,b,c)

print(d)
print(e) 
print(f)
-- EXECUTION TIME:
0.562201
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
0
10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
