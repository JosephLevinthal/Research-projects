== TEST (2019-04-13 18:23:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

valor = (2 * x) + y

x = float(input("Valor de x: "))
y = float(input("Valor de y: "))

if valor == 3:
	mensagem = "Ponto pertence a reta"
else
	mensagem = "Ponto nao pertence a reta"
	
print (mensagem.lower())
-- ERROR:
File "XXXX", line 12
    else
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 18:23:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

valor = (2 * x) + y

x = float(input("Valor de x: "))
y = float(input("Valor de y: "))

if valor == 3:
	mensagem = "Ponto pertence a reta"
else:
	mensagem = "Ponto nao pertence a reta"
	
print (mensagem.lower())
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    valor = (2 * x) + y
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 18:24:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Valor de x: "))
y = float(input("Valor de y: "))

valor = 2 * x + y

if valor == 3:
	mensagem = "Ponto pertence a reta"
else:
	mensagem = "Ponto nao pertence a reta"
	
print (mensagem.lower())
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 18:24:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Valor de x: "))
y = float(input("Valor de y: "))

valor = 2 * x + y

if valor == 3:
	mensagem = "Ponto pertence a reta"
else:
	mensagem = "Ponto nao pertence a reta"
	
print (mensagem.lower())
-- EXECUTION TIME:
0.151367
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
