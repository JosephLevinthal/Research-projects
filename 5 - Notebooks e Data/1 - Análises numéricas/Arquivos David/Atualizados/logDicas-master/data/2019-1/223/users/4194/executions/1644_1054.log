== TEST (2019-04-09 17:34:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var1 = input("Coordenada X: ")
var2 = input("Coordenada Y: ")

-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 17:40:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var1 = input("Coordenada X: ")
var2 = input("Coordenada Y: ")

reta = 2*X+Y=3
if(reta == 3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
-- ERROR:
File "XXXX", line 7
    reta = 2*X+Y=3
          ^
SyntaxError: can't assign to operator
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 17:40:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var1 = input("Coordenada X: ")
var2 = input("Coordenada Y: ")

reta = 2*X+Y=3
if(reta == 3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
-- ERROR:
File "XXXX", line 7
    reta = 2*X+Y=3
          ^
SyntaxError: can't assign to operator
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 17:41:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var1 = input("Coordenada X: ")
var2 = input("Coordenada Y: ")

reta = 2 * X + Y = 3

if(reta == 3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
-- ERROR:
File "XXXX", line 7
    reta = 2 * X + Y = 3
          ^
SyntaxError: can't assign to operator
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 17:42:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var1 = float(input("Coordenada X: "))
var2 = float(input("Coordenada Y: "))

reta = 2 * X + Y = 3

if(reta == 3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
-- ERROR:
File "XXXX", line 7
    reta = 2 * X + Y = 3
          ^
SyntaxError: can't assign to operator
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 17:42:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var1 = float(input("Coordenada X: "))
var2 = float(input("Coordenada Y: "))

reta = 2 * var1 + var2 = 3

if(reta == 3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
-- ERROR:
File "XXXX", line 7
    reta = 2 * var1 + var2 = 3
          ^
SyntaxError: can't assign to operator
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 17:42:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var1 = float(input("Coordenada X: "))
var2 = float(input("Coordenada Y: "))

reta = (2 * var1) + var2 = 3

if(reta == 3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
-- ERROR:
File "XXXX", line 7
    reta = (2 * var1) + var2 = 3
          ^
SyntaxError: can't assign to operator
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 17:43:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var1 = float(input("Coordenada X: "))
var2 = float(input("Coordenada Y: "))

reta = (2 * var1) + var2 = 3

if(reta == 3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
print(mensagem)
-- ERROR:
File "XXXX", line 7
    reta = (2 * var1) + var2 = 3
          ^
SyntaxError: can't assign to operator
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 17:44:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var1 = float(input("Coordenada X: "))
var2 = float(input("Coordenada Y: "))

reta = 2 * var1 + var2 = 3

if(reta == 3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
print(mensagem)
-- ERROR:
File "XXXX", line 7
    reta = 2 * var1 + var2 = 3
          ^
SyntaxError: can't assign to operator
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 17:45:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Coordenada X: "))
y = float(input("Coordenada Y: "))

reta = 2*x1+y = 3

if(reta == 3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
print(mensagem)
-- ERROR:
File "XXXX", line 7
    reta = 2*x1+y = 3
          ^
SyntaxError: can't assign to operator
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 17:45:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Coordenada X: "))
y = float(input("Coordenada Y: "))

reta = 2 * x 1 + y = 3

if(reta == 3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
print(mensagem)
-- ERROR:
File "XXXX", line 7
    reta = 2 * x 1 + y = 3
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 17:47:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Coordenada X: "))
y = float(input("Coordenada Y: "))

reta = 2 * "x" 1 + "y" = 3

if(reta == 3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
print(mensagem)
-- ERROR:
File "XXXX", line 7
    reta = 2 * "x" 1 + "y" = 3
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 17:47:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Coordenada X: "))
y = float(input("Coordenada Y: "))

reta = 2 * x 1 + y = 3

if(reta == 3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
print(mensagem)
-- ERROR:
File "XXXX", line 7
    reta = 2 * x 1 + y = 3
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 17:48:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Coordenada X: "))
y = float(input("Coordenada Y: "))

reta = 2 * x 1 + y = 3

if(reta == 3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
print(mensagem)
-- ERROR:
File "XXXX", line 7
    reta = 2 * x 1 + y = 3
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 17:49:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Coordenada X: "))
y = float(input("Coordenada Y: "))

reta = 2 * x + y = 3

if(reta == 3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
print(mensagem)
-- ERROR:
File "XXXX", line 7
    reta = 2 * x + y = 3
          ^
SyntaxError: can't assign to operator
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 17:50:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Coordenada X: "))
y = float(input("Coordenada Y: "))

reta = 2 * x + y = 3

if(reta == 3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
print(mensagem)
-- ERROR:
File "XXXX", line 7
    reta = 2 * x + y = 3
          ^
SyntaxError: can't assign to operator
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 17:50:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Coordenada X: "))
y = float(input("Coordenada Y: "))

reta = (2 * x + y = 3)

if(reta == 3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
print(mensagem)
-- ERROR:
File "XXXX", line 7
    reta = (2 * x + y = 3)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 17:51:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Coordenada X: "))
y = float(input("Coordenada Y: "))

reta = 2 * x + y

if(reta == 3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
print(mensagem)
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 17:51:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Coordenada X: "))
y = float(input("Coordenada Y: "))

reta = 2 * x + y

if(reta == 3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
print(mensagem)
-- EXECUTION TIME:
0.292276
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
