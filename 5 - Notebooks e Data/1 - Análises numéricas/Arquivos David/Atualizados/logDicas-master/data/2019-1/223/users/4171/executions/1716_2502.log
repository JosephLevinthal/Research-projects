== TEST (2019-05-10 16:32:19) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
m = 0

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
print(round(soma,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    soma = soma + (-1)**c * tg
NameError: name 'soma' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:32:29) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
print(round(soma,8))
-- OUTPUT:
2056.97982204
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:32:33) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
print(round(soma,8))
-- OUTPUT:
2056.97982204
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:32:35) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
print(round(soma,8))
-- OUTPUT:
2056.97982204
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:33:19) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
soma += sqrt(12)
print(round(soma,8))
-- OUTPUT:
2060.44392365
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:33:41) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c <= n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
soma += sqrt(12)

print(round(soma,8))
-- OUTPUT:
-5641.59955461
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-10 16:33:44) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c <= n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
soma += sqrt(12)

print(round(soma,8))
-- EXECUTION TIME:
0.134859
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
-5641.59955461
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
-341370.9617793
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
284.53414921
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-10 16:33:46) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c <= n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
soma += sqrt(12)

print(round(soma,8))
-- EXECUTION TIME:
0.138431
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
-5641.59955461
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
-341370.9617793
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
284.53414921
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-10 16:33:46) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c <= n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
soma += sqrt(12)

print(round(soma,8))
-- EXECUTION TIME:
0.164463
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
284.53414921
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
-5641.59955461
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
-5641.59955461
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-10 16:33:46) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c <= n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
soma += sqrt(12)

print(round(soma,8))
-- EXECUTION TIME:
0.13629
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
-5641.59955461
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
-5641.59955461
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
-5641.59955461
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:33:46) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c <= n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
soma += sqrt(12)

print(round(soma,8))
-- OUTPUT:
-5641.59955461
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-10 16:33:47) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c <= n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
soma += sqrt(12)

print(round(soma,8))
-- EXECUTION TIME:
0.203349
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1716/2502/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-10 16:33:47) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c <= n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
soma += sqrt(12)

print(round(soma,8))
-- EXECUTION TIME:
0.243629
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
-5641.59955461
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
284.53414921
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-10 16:33:47) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c <= n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
soma += sqrt(12)

print(round(soma,8))
-- EXECUTION TIME:
0.210571
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
-5641.59955461
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
numero natural: 284.53414921
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:34:12) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c <= n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
soma *= sqrt(12)

print(round(soma,8))
-- OUTPUT:
-19555.07412909
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-10 16:34:14) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c <= n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
soma *= sqrt(12)

print(round(soma,8))
-- EXECUTION TIME:
0.134835
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
-19555.07412909
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
-1182555.70006082
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
-19555.07412909
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-10 16:34:15) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c <= n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
soma *= sqrt(12)

print(round(soma,8))
-- EXECUTION TIME:
0.121947
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
-19555.07412909
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
-19555.07412909
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
973.65520586
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-10 16:34:15) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c <= n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
soma *= sqrt(12)

print(round(soma,8))
-- EXECUTION TIME:
0.206144
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
973.65520586
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:

-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
973.65520586
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-10 16:34:15) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c <= n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
soma *= sqrt(12)

print(round(soma,8))
-- EXECUTION TIME:
0.242762
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
973.65520586
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:

-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
973.65520586
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:34:21) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c <= n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
soma = soma * sqrt(12)

print(round(soma,8))
-- OUTPUT:
-19555.07412909
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:34:24) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c <= n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
soma = soma * sqrt(12)

print(round(soma,8))
-- OUTPUT:
-19555.07412909
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:34:26) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c <= n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
soma = soma * sqrt(12)

print(round(soma,8))
-- OUTPUT:
-19555.07412909
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:34:31) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c <= n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
soma = soma * sqrt(12)

print(round(soma,8))
-- OUTPUT:
-19555.07412909
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-10 16:34:33) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c <= n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
soma = soma * sqrt(12)

print(round(soma,8))
-- EXECUTION TIME:
0.144778
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
-19555.07412909
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
-1182555.70006082
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
973.65520586
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:34:34) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c <= n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
soma = soma * sqrt(12)

print(round(soma,8))
-- OUTPUT:
-19555.07412909
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:34:37) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c <= n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
soma = soma * sqrt(12)

print(round(soma,8))
-- OUTPUT:
-19555.07412909
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:34:45) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
soma = soma * sqrt(12)

print(round(soma,8))
-- OUTPUT:
7125.58712382
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-10 16:34:47) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
soma = soma * sqrt(12)

print(round(soma,8))
-- EXECUTION TIME:
0.194214
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
7125.58712382
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
420865.97458955
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
-363.2842469
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-10 16:34:48) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
soma = soma * sqrt(12)

print(round(soma,8))
-- EXECUTION TIME:
0.149332
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
7125.58712382
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
7125.58712382
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
420865.97458955
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-10 16:34:48) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
soma = soma * sqrt(12)

print(round(soma,8))
-- EXECUTION TIME:
0.168736
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
7125.58712382
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
420865.97458955
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
-363.2842469
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:34:48) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
soma = soma * sqrt(12)

print(round(soma,8))
-- OUTPUT:
7125.58712382
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-10 16:34:48) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
soma = soma * sqrt(12)

print(round(soma,8))
-- EXECUTION TIME:
0.100037
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
7125.58712382
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
numero natural: 420865.97458955
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
numero natural: -363.2842469
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:35:13) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 1
soma = 0

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
soma = soma * sqrt(12)

print(round(soma,8))
-- OUTPUT:
7122.1230222
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:35:51) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 1
soma = 0

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
if soma == 0:
	soma = sqrt(12)

print(round(soma,8))
-- OUTPUT:
2055.97982204
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-10 16:35:54) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 1
soma = 0

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
if soma == 0:
	soma = sqrt(12)

print(round(soma,8))
-- EXECUTION TIME:
0.152112
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
2055.97982204
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
121492.54186102
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
-105.87112887
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:35:54) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 1
soma = 0

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
if soma == 0:
	soma = sqrt(12)

print(round(soma,8))
-- OUTPUT:
2055.97982204
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-10 16:35:55) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 1
soma = 0

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
if soma == 0:
	soma = sqrt(12)

print(round(soma,8))
-- EXECUTION TIME:
0.140246
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
2055.97982204
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
numero natural: 121492.54186102
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
numero natural: -105.87112887
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:35:59) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 1
soma = 0

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
if soma == 0:
	soma = sqrt(12)

print(round(soma,8))
-- OUTPUT:
2055.97982204
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:36:01) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 1
soma = 0

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
if soma == 0:
	soma = sqrt(12)

print(round(soma,8))
-- OUTPUT:
2055.97982204
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:36:07) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 1
soma = 0

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
if soma == 0:
	soma = sqrt(12)

print(round(soma,8))
-- OUTPUT:
2055.97982204
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:36:17) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
if soma == 0:
	soma = sqrt(12)

print(round(soma,8))
-- OUTPUT:
2056.97982204
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:36:19) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
if soma == 0:
	soma = sqrt(12)

print(round(soma,8))
-- OUTPUT:
2056.97982204
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:36:21) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
if soma == 0:
	soma = sqrt(12)

print(round(soma,8))
-- OUTPUT:
2056.97982204
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:36:27) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c < n-1):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
if soma == 0:
	soma = sqrt(12)

print(round(soma,8))
-- OUTPUT:
-754.87732082
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:36:29) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c < n-1):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
if soma == 0:
	soma = sqrt(12)

print(round(soma,8))
-- OUTPUT:
-754.87732082
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:36:31) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c < n-1):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
if soma == 0:
	soma = sqrt(12)

print(round(soma,8))
-- OUTPUT:
-754.87732082
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:36:36) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c < n-1):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
if soma == 0:
	soma = sqrt(12)

print(round(soma,8))
-- OUTPUT:
-754.87732082
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:36:37) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c < n-1):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
if soma == 0:
	soma = sqrt(12)

print(round(soma,8))
-- OUTPUT:
-754.87732082
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:36:39) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c < n-1):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
if soma == 0:
	soma = sqrt(12)

print(round(soma,8))
-- OUTPUT:
-754.87732082
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:36:42) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c < n-1):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
if soma == 0:
	soma = sqrt(12)

print(round(soma,8))
-- OUTPUT:
-754.87732082
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:37:31) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**(c+1 ) * tg
	
	c += 1
	
if soma == 0:
	soma = sqrt(12)

print(round(soma,8))
-- OUTPUT:
-2056.97982204
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:37:33) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**(c+1 ) * tg
	
	c += 1
	
if soma == 0:
	soma = sqrt(12)

print(round(soma,8))
-- OUTPUT:
-2056.97982204
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:37:35) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**(c+1 ) * tg
	
	c += 1
	
if soma == 0:
	soma = sqrt(12)

print(round(soma,8))
-- OUTPUT:
-2056.97982204
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:38:01) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**(c) * tg
	
	c += 1
	
if soma == -1:
	soma = sqrt(12)

print(round(soma,8))
-- OUTPUT:
2056.97982204
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:38:13) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**(c) * tg
	
	c += 1
	print(tg,soma,c)
if soma == -1:
	soma = sqrt(12)

print(round(soma,8))
-- OUTPUT:
1.0 1.0 1
1.0 0.0 2
1.8 1.8 3
3.8571428571428568 -2.057142857142857 4
9.0 6.942857142857143 5
22.09090909090909 -15.148051948051947 6
56.07692307692308 40.92887112887114 7
145.8 -104.87112887112887 8
385.94117647058823 281.0700475994594 9
1035.9473684210525 -754.8773208215931 10
2811.8571428571427 2056.9798220355497 11
2056.97982204
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:38:49) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**(c) * tg
	
	c += 1
	print(tg,soma,c)
if soma == -1:
	soma = sqrt(12)

print(round(soma,8))
-- OUTPUT:
1.0 1.0 1
1.0 0.0 2
1.8 1.8 3
3.8571428571428568 -2.057142857142857 4
9.0 6.942857142857143 5
22.09090909090909 -15.148051948051947 6
56.07692307692308 40.92887112887114 7
145.8 -104.87112887112887 8
385.94117647058823 281.0700475994594 9
1035.9473684210525 -754.8773208215931 10
2811.8571428571427 2056.9798220355497 11
2056.97982204
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-10 16:38:51) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**(c) * tg
	
	c += 1
	print(tg,soma,c)
if soma == -1:
	soma = sqrt(12)

print(round(soma,8))
-- EXECUTION TIME:
0.103368
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
1.0 1.0 1
1.0 0.0 2
1.8 1.8 3
3.8571428571428568 -2.057142857142857 4
9.0 6.942857142857143 5
22.09090909090909 -15.148051948051947 6
56.07692307692308 40.92887112887114 7
145.8 -104.87112887112887 8
385.94117647058823 281.0700475994594 9
1035.9473684210525 -754.8773208215931 10
2811.8571428571427 2056.9798220355497 11
2056.97982204
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
1.0 1.0 1
1.0 0.0 2
1.8 1.8 3
3.8571428571428568 -2.057142857142857 4
9.0 6.942857142857143 5
22.09090909090909 -15.148051948051947 6
56.07692307692308 40.92887112887114 7
145.8 -104.87112887112887 8
385.94117647058823 281.0700475994594 9
1035.9473684210525 -754.8773208215931 10
2811.8571428571427 2056.9798220355497 11
7702.043478260869 -5645.063656225319 12
21257.64 15612.57634377468 13
59049.0 -43436.42365622532 14
164929.9655172414 121493.54186101607 15
121493.54186102
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
1.0 1.0 1
1.0 0.0 2
1.8 1.8 3
3.8571428571428568 -2.057142857142857 4
9.0 6.942857142857143 5
22.09090909090909 -15.148051948051947 6
56.07692307692308 40.92887112887114 7
145.8 -104.87112887112887 8
-104.87112887
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:38:52) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**(c) * tg
	
	c += 1
	print(tg,soma,c)
if soma == -1:
	soma = sqrt(12)

print(round(soma,8))
-- OUTPUT:
1.0 1.0 1
1.0 0.0 2
1.8 1.8 3
3.8571428571428568 -2.057142857142857 4
9.0 6.942857142857143 5
22.09090909090909 -15.148051948051947 6
56.07692307692308 40.92887112887114 7
145.8 -104.87112887112887 8
385.94117647058823 281.0700475994594 9
1035.9473684210525 -754.8773208215931 10
2811.8571428571427 2056.9798220355497 11
2056.97982204
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:38:53) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**(c) * tg
	
	c += 1
	print(tg,soma,c)
if soma == -1:
	soma = sqrt(12)

print(round(soma,8))
-- OUTPUT:
1.0 1.0 1
1.0 0.0 2
1.8 1.8 3
3.8571428571428568 -2.057142857142857 4
9.0 6.942857142857143 5
22.09090909090909 -15.148051948051947 6
56.07692307692308 40.92887112887114 7
145.8 -104.87112887112887 8
385.94117647058823 281.0700475994594 9
1035.9473684210525 -754.8773208215931 10
2811.8571428571427 2056.9798220355497 11
2056.97982204
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:39:04) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c < n-1):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**(c) * tg
	
	c += 1
	print(tg,soma,c)
if soma == -1:
	soma = sqrt(12)

print(round(soma,8))
-- OUTPUT:
1.0 1.0 1
1.0 0.0 2
1.8 1.8 3
3.8571428571428568 -2.057142857142857 4
9.0 6.942857142857143 5
22.09090909090909 -15.148051948051947 6
56.07692307692308 40.92887112887114 7
145.8 -104.87112887112887 8
385.94117647058823 281.0700475994594 9
1035.9473684210525 -754.8773208215931 10
-754.87732082
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:39:05) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c < n-1):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**(c) * tg
	
	c += 1
	print(tg,soma,c)
if soma == -1:
	soma = sqrt(12)

print(round(soma,8))
-- OUTPUT:
1.0 1.0 1
1.0 0.0 2
1.8 1.8 3
3.8571428571428568 -2.057142857142857 4
9.0 6.942857142857143 5
22.09090909090909 -15.148051948051947 6
56.07692307692308 40.92887112887114 7
145.8 -104.87112887112887 8
385.94117647058823 281.0700475994594 9
1035.9473684210525 -754.8773208215931 10
-754.87732082
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:39:07) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0
soma = 0

while (c < n-1):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**(c) * tg
	
	c += 1
	print(tg,soma,c)
if soma == -1:
	soma = sqrt(12)

print(round(soma,8))
-- OUTPUT:
1.0 1.0 1
1.0 0.0 2
1.8 1.8 3
3.8571428571428568 -2.057142857142857 4
9.0 6.942857142857143 5
22.09090909090909 -15.148051948051947 6
56.07692307692308 40.92887112887114 7
145.8 -104.87112887112887 8
385.94117647058823 281.0700475994594 9
1035.9473684210525 -754.8773208215931 10
-754.87732082
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:39:20) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n-1):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**(c) * tg
	
	c += 1
	print(tg,soma,c)
if soma == -1:
	soma = sqrt(12)

print(round(soma,8))
-- OUTPUT:
1.0 1.0 1
1.0 0.0 2
1.8 1.8 3
3.8571428571428568 -2.057142857142857 4
9.0 6.942857142857143 5
22.09090909090909 -15.148051948051947 6
56.07692307692308 40.92887112887114 7
145.8 -104.87112887112887 8
385.94117647058823 281.0700475994594 9
1035.9473684210525 -754.8773208215931 10
-754.87732082
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:39:27) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n-1):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**(c) * tg
	
	c += 1
	print(tg,soma,c)
if soma == -1:
	soma = sqrt(12)
print(soma)
print(round(soma,8))
-- OUTPUT:
1.0 1.0 1
1.0 0.0 2
1.8 1.8 3
3.8571428571428568 -2.057142857142857 4
9.0 6.942857142857143 5
22.09090909090909 -15.148051948051947 6
56.07692307692308 40.92887112887114 7
145.8 -104.87112887112887 8
385.94117647058823 281.0700475994594 9
1035.9473684210525 -754.8773208215931 10
-754.8773208215931
-754.87732082
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:39:29) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n-1):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**(c) * tg
	
	c += 1
	print(tg,soma,c)
if soma == -1:
	soma = sqrt(12)
print(soma)
print(round(soma,8))
-- OUTPUT:
1.0 1.0 1
1.0 0.0 2
1.8 1.8 3
3.8571428571428568 -2.057142857142857 4
9.0 6.942857142857143 5
22.09090909090909 -15.148051948051947 6
56.07692307692308 40.92887112887114 7
145.8 -104.87112887112887 8
385.94117647058823 281.0700475994594 9
1035.9473684210525 -754.8773208215931 10
-754.8773208215931
-754.87732082
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:39:31) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n-1):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**(c) * tg
	
	c += 1
	print(tg,soma,c)
if soma == -1:
	soma = sqrt(12)
print(soma)
print(round(soma,8))
-- OUTPUT:
1.0 1.0 1
1.0 0.0 2
1.8 1.8 3
3.8571428571428568 -2.057142857142857 4
9.0 6.942857142857143 5
22.09090909090909 -15.148051948051947 6
56.07692307692308 40.92887112887114 7
145.8 -104.87112887112887 8
385.94117647058823 281.0700475994594 9
1035.9473684210525 -754.8773208215931 10
-754.8773208215931
-754.87732082
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:39:32) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n-1):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**(c) * tg
	
	c += 1
	print(tg,soma,c)
if soma == -1:
	soma = sqrt(12)
print(soma)
print(round(soma,8))
-- OUTPUT:
1.0 1.0 1
1.0 0.0 2
1.8 1.8 3
3.8571428571428568 -2.057142857142857 4
9.0 6.942857142857143 5
22.09090909090909 -15.148051948051947 6
56.07692307692308 40.92887112887114 7
145.8 -104.87112887112887 8
385.94117647058823 281.0700475994594 9
1035.9473684210525 -754.8773208215931 10
-754.8773208215931
-754.87732082
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:39:33) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n-1):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**(c) * tg
	
	c += 1
	print(tg,soma,c)
if soma == -1:
	soma = sqrt(12)
print(soma)
print(round(soma,8))
-- OUTPUT:
1.0 1.0 1
1.0 0.0 2
1.8 1.8 3
3.8571428571428568 -2.057142857142857 4
9.0 6.942857142857143 5
22.09090909090909 -15.148051948051947 6
56.07692307692308 40.92887112887114 7
145.8 -104.87112887112887 8
385.94117647058823 281.0700475994594 9
1035.9473684210525 -754.8773208215931 10
-754.8773208215931
-754.87732082
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-10 16:39:35) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n-1):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**(c) * tg
	
	c += 1
	print(tg,soma,c)
if soma == -1:
	soma = sqrt(12)
print(soma)
print(round(soma,8))
-- EXECUTION TIME:
0.187679
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
1.0 1.0 1
1.0 0.0 2
1.8 1.8 3
3.8571428571428568 -2.057142857142857 4
9.0 6.942857142857143 5
22.09090909090909 -15.148051948051947 6
56.07692307692308 40.92887112887114 7
145.8 -104.87112887112887 8
385.94117647058823 281.0700475994594 9
1035.9473684210525 -754.8773208215931 10
-754.8773208215931
-754.87732082
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
1.0 1.0 1
1.0 0.0 2
1.8 1.8 3
3.8571428571428568 -2.057142857142857 4
9.0 6.942857142857143 5
22.09090909090909 -15.148051948051947 6
56.07692307692308 40.92887112887114 7
145.8 -104.87112887112887 8
385.94117647058823 281.0700475994594 9
1035.9473684210525 -754.8773208215931 10
2811.8571428571427 2056.9798220355497 11
7702.043478260869 -5645.063656225319 12
21257.64 15612.57634377468 13
59049.0 -43436.42365622532 14
-43436.42365622532
-43436.42365623
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
1.0 1.0 1
1.0 0.0 2
1.8 1.8 3
3.8571428571428568 -2.057142857142857 4
9.0 6.942857142857143 5
22.09090909090909 -15.148051948051947 6
56.07692307692308 40.92887112887114 7
40.92887112887114
40.92887113
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:39:37) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n-1):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**(c) * tg
	
	c += 1
	print(tg,soma,c)
if soma == -1:
	soma = sqrt(12)
print(soma)
print(round(soma,8))
-- OUTPUT:
1.0 1.0 1
1.0 0.0 2
1.8 1.8 3
3.8571428571428568 -2.057142857142857 4
9.0 6.942857142857143 5
22.09090909090909 -15.148051948051947 6
56.07692307692308 40.92887112887114 7
145.8 -104.87112887112887 8
385.94117647058823 281.0700475994594 9
1035.9473684210525 -754.8773208215931 10
-754.8773208215931
-754.87732082
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:42:01) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n-1):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
	print(tg,soma,c)
if soma == -1:
	soma = sqrt(12)
print(soma)
print(round(soma,8))
-- OUTPUT:
1.0 1.0 1
1.0 0.0 2
1.8 1.8 3
3.8571428571428568 -2.057142857142857 4
9.0 6.942857142857143 5
22.09090909090909 -15.148051948051947 6
56.07692307692308 40.92887112887114 7
145.8 -104.87112887112887 8
385.94117647058823 281.0700475994594 9
1035.9473684210525 -754.8773208215931 10
-754.8773208215931
-754.87732082
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:42:15) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n-1):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
	print(tg,soma,c)
if soma == 1:
	soma = sqrt(12)
print(soma)
print(round(soma,8))
-- OUTPUT:
1.0 1.0 1
1.0 0.0 2
1.8 1.8 3
3.8571428571428568 -2.057142857142857 4
9.0 6.942857142857143 5
22.09090909090909 -15.148051948051947 6
56.07692307692308 40.92887112887114 7
145.8 -104.87112887112887 8
385.94117647058823 281.0700475994594 9
1035.9473684210525 -754.8773208215931 10
-754.8773208215931
-754.87732082
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:42:43) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
	print(tg,soma,c)
if soma == 1:
	soma = sqrt(12)
print(soma)
print(round(soma,8))
-- OUTPUT:
1.0 1.0 1
1.0 0.0 2
1.8 1.8 3
3.8571428571428568 -2.057142857142857 4
9.0 6.942857142857143 5
22.09090909090909 -15.148051948051947 6
56.07692307692308 40.92887112887114 7
145.8 -104.87112887112887 8
385.94117647058823 281.0700475994594 9
1035.9473684210525 -754.8773208215931 10
2811.8571428571427 2056.9798220355497 11
2056.9798220355497
2056.97982204
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:42:46) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
	print(tg,soma,c)
if soma == 1:
	soma = sqrt(12)
print(soma)
print(round(soma,8))
-- OUTPUT:
1.0 1.0 1
1.0 0.0 2
1.8 1.8 3
3.8571428571428568 -2.057142857142857 4
9.0 6.942857142857143 5
22.09090909090909 -15.148051948051947 6
56.07692307692308 40.92887112887114 7
145.8 -104.87112887112887 8
385.94117647058823 281.0700475994594 9
1035.9473684210525 -754.8773208215931 10
2811.8571428571427 2056.9798220355497 11
2056.9798220355497
2056.97982204
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:42:48) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
	print(tg,soma,c)
if soma == 1:
	soma = sqrt(12)
print(soma)
print(round(soma,8))
-- OUTPUT:
1.0 1.0 1
1.0 0.0 2
1.8 1.8 3
3.8571428571428568 -2.057142857142857 4
9.0 6.942857142857143 5
22.09090909090909 -15.148051948051947 6
56.07692307692308 40.92887112887114 7
145.8 -104.87112887112887 8
385.94117647058823 281.0700475994594 9
1035.9473684210525 -754.8773208215931 10
2811.8571428571427 2056.9798220355497 11
2056.9798220355497
2056.97982204
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:43:00) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
	print(tg,soma,c)
if soma == 1:
	soma = sqrt(12)
print(soma)
print(round(soma,8))
-- OUTPUT:
1.0 1.0 1
1.0 0.0 2
1.8 1.8 3
3.8571428571428568 -2.057142857142857 4
9.0 6.942857142857143 5
22.09090909090909 -15.148051948051947 6
56.07692307692308 40.92887112887114 7
145.8 -104.87112887112887 8
385.94117647058823 281.0700475994594 9
1035.9473684210525 -754.8773208215931 10
2811.8571428571427 2056.9798220355497 11
2056.9798220355497
2056.97982204
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:43:01) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
	print(tg,soma,c)
if soma == 1:
	soma = sqrt(12)
print(soma)
print(round(soma,8))
-- OUTPUT:
1.0 1.0 1
1.0 0.0 2
1.8 1.8 3
3.8571428571428568 -2.057142857142857 4
9.0 6.942857142857143 5
22.09090909090909 -15.148051948051947 6
56.07692307692308 40.92887112887114 7
145.8 -104.87112887112887 8
385.94117647058823 281.0700475994594 9
1035.9473684210525 -754.8773208215931 10
2811.8571428571427 2056.9798220355497 11
2056.9798220355497
2056.97982204
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:43:03) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
	print(tg,soma,c)
if soma == 1:
	soma = sqrt(12)
print(soma)
print(round(soma,8))
-- OUTPUT:
1.0 1.0 1
1.0 0.0 2
1.8 1.8 3
3.8571428571428568 -2.057142857142857 4
9.0 6.942857142857143 5
22.09090909090909 -15.148051948051947 6
56.07692307692308 40.92887112887114 7
145.8 -104.87112887112887 8
385.94117647058823 281.0700475994594 9
1035.9473684210525 -754.8773208215931 10
2811.8571428571427 2056.9798220355497 11
2056.9798220355497
2056.97982204
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:43:08) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
	print(tg,soma,c)
if soma == 1:
	soma = sqrt(12)
print(soma)
print(round(soma,8))
-- OUTPUT:
1.0 1.0 1
1.0 0.0 2
1.8 1.8 3
3.8571428571428568 -2.057142857142857 4
9.0 6.942857142857143 5
22.09090909090909 -15.148051948051947 6
56.07692307692308 40.92887112887114 7
145.8 -104.87112887112887 8
385.94117647058823 281.0700475994594 9
1035.9473684210525 -754.8773208215931 10
2811.8571428571427 2056.9798220355497 11
2056.9798220355497
2056.97982204
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:43:58) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
	print(tg,soma,c)

print(soma)
print(round(soma,8))
-- OUTPUT:
1.0 1.0 1
1.0 0.0 2
1.8 1.8 3
3.8571428571428568 -2.057142857142857 4
9.0 6.942857142857143 5
22.09090909090909 -15.148051948051947 6
56.07692307692308 40.92887112887114 7
145.8 -104.87112887112887 8
385.94117647058823 281.0700475994594 9
1035.9473684210525 -754.8773208215931 10
2811.8571428571427 2056.9798220355497 11
2056.9798220355497
2056.97982204
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:43:59) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
	print(tg,soma,c)

print(soma)
print(round(soma,8))
-- OUTPUT:
1.0 1.0 1
1.0 0.0 2
1.8 1.8 3
3.8571428571428568 -2.057142857142857 4
9.0 6.942857142857143 5
22.09090909090909 -15.148051948051947 6
56.07692307692308 40.92887112887114 7
145.8 -104.87112887112887 8
385.94117647058823 281.0700475994594 9
1035.9473684210525 -754.8773208215931 10
2811.8571428571427 2056.9798220355497 11
2056.9798220355497
2056.97982204
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:44:02) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
	print(tg,soma,c)
if soma == 1:
	soma = sqrt(12)
print(soma)
print(round(soma,8))
-- OUTPUT:
1.0 1.0 1
1.0 0.0 2
1.8 1.8 3
3.8571428571428568 -2.057142857142857 4
9.0 6.942857142857143 5
22.09090909090909 -15.148051948051947 6
56.07692307692308 40.92887112887114 7
145.8 -104.87112887112887 8
385.94117647058823 281.0700475994594 9
1035.9473684210525 -754.8773208215931 10
2811.8571428571427 2056.9798220355497 11
2056.9798220355497
2056.97982204
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:44:05) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
	print(tg,soma,c)
if soma == 1:
	soma = sqrt(12)
print(soma)
print(round(soma,8))
-- OUTPUT:
1.0 1.0 1
1.0 0.0 2
1.8 1.8 3
3.8571428571428568 -2.057142857142857 4
9.0 6.942857142857143 5
22.09090909090909 -15.148051948051947 6
56.07692307692308 40.92887112887114 7
145.8 -104.87112887112887 8
385.94117647058823 281.0700475994594 9
1035.9473684210525 -754.8773208215931 10
2811.8571428571427 2056.9798220355497 11
2056.9798220355497
2056.97982204
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:44:33) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
	print(tg,soma,c)
soma = soma * sqrt(12)
print(soma)
print(round(soma,8))
-- OUTPUT:
1.0 1.0 1
1.0 0.0 2
1.8 1.8 3
3.8571428571428568 -2.057142857142857 4
9.0 6.942857142857143 5
22.09090909090909 -15.148051948051947 6
56.07692307692308 40.92887112887114 7
145.8 -104.87112887112887 8
385.94117647058823 281.0700475994594 9
1035.9473684210525 -754.8773208215931 10
2811.8571428571427 2056.9798220355497 11
7125.5871238191185
7125.58712382
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:44:35) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
	print(tg,soma,c)
soma = soma * sqrt(12)
print(soma)
print(round(soma,8))
-- OUTPUT:
1.0 1.0 1
1.0 0.0 2
1.8 1.8 3
3.8571428571428568 -2.057142857142857 4
9.0 6.942857142857143 5
22.09090909090909 -15.148051948051947 6
56.07692307692308 40.92887112887114 7
145.8 -104.87112887112887 8
385.94117647058823 281.0700475994594 9
1035.9473684210525 -754.8773208215931 10
2811.8571428571427 2056.9798220355497 11
7125.5871238191185
7125.58712382
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:44:36) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma = soma + (-1)**c * tg
	
	c += 1
	
	print(tg,soma,c)
soma = soma * sqrt(12)
print(soma)
print(round(soma,8))
-- OUTPUT:
1.0 1.0 1
1.0 0.0 2
1.8 1.8 3
3.8571428571428568 -2.057142857142857 4
9.0 6.942857142857143 5
22.09090909090909 -15.148051948051947 6
56.07692307692308 40.92887112887114 7
145.8 -104.87112887112887 8
385.94117647058823 281.0700475994594 9
1035.9473684210525 -754.8773208215931 10
2811.8571428571427 2056.9798220355497 11
7125.5871238191185
7125.58712382
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:47:51) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma += (-1)**c * tg
	
	c += 1
	
	print(tg,soma,c)
	
soma *= sqrt(12)

print(soma)
print(round(soma,8))
-- OUTPUT:
1.0 1.0 1
1.0 0.0 2
1.8 1.8 3
3.8571428571428568 -2.057142857142857 4
9.0 6.942857142857143 5
22.09090909090909 -15.148051948051947 6
56.07692307692308 40.92887112887114 7
145.8 -104.87112887112887 8
385.94117647058823 281.0700475994594 9
1035.9473684210525 -754.8773208215931 10
2811.8571428571427 2056.9798220355497 11
7125.5871238191185
7125.58712382
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:47:53) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma += (-1)**c * tg
	
	c += 1
	
	print(tg,soma,c)
	
soma *= sqrt(12)

print(soma)
print(round(soma,8))
-- OUTPUT:
1.0 1.0 1
1.0 0.0 2
1.8 1.8 3
3.8571428571428568 -2.057142857142857 4
9.0 6.942857142857143 5
22.09090909090909 -15.148051948051947 6
56.07692307692308 40.92887112887114 7
145.8 -104.87112887112887 8
385.94117647058823 281.0700475994594 9
1035.9473684210525 -754.8773208215931 10
2811.8571428571427 2056.9798220355497 11
7125.5871238191185
7125.58712382
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:48:09) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma += (-1)**c * tg
	
	c += 1
	
	print(tg,soma,c)
	
soma *= sqrt(12)

print(soma)
print(round(soma,8))
-- OUTPUT:
1.0 1.0 1
1.0 0.0 2
1.8 1.8 3
3.8571428571428568 -2.057142857142857 4
9.0 6.942857142857143 5
22.09090909090909 -15.148051948051947 6
56.07692307692308 40.92887112887114 7
145.8 -104.87112887112887 8
385.94117647058823 281.0700475994594 9
1035.9473684210525 -754.8773208215931 10
2811.8571428571427 2056.9798220355497 11
7125.5871238191185
7125.58712382
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-10 16:48:10) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma += (-1)**c * tg
	
	c += 1
	
	print(tg,soma,c)
	
soma *= sqrt(12)

print(soma)
print(round(soma,8))
-- EXECUTION TIME:
0.136904
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
numero natural: 1.0 1.0 1
1.0 0.0 2
1.8 1.8 3
3.8571428571428568 -2.057142857142857 4
9.0 6.942857142857143 5
22.09090909090909 -15.148051948051947 6
56.07692307692308 40.92887112887114 7
145.8 -104.87112887112887 8
385.94117647058823 281.0700475994594 9
1035.9473684210525 -754.8773208215931 10
2811.8571428571427 2056.9798220355497 11
7125.5871238191185
7125.58712382
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
numero natural: 1.0 1.0 1
1.0 0.0 2
1.8 1.8 3
3.8571428571428568 -2.057142857142857 4
9.0 6.942857142857143 5
22.09090909090909 -15.148051948051947 6
56.07692307692308 40.92887112887114 7
145.8 -104.87112887112887 8
385.94117647058823 281.0700475994594 9
1035.9473684210525 -754.8773208215931 10
2811.8571428571427 2056.9798220355497 11
7702.043478260869 -5645.063656225319 12
21257.64 15612.57634377468 13
59049.0 -43436.42365622532 14
164929.9655172414 121493.54186101607 15
420865.97458955215
420865.97458955
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
numero natural: 1.0 1.0 1
1.0 0.0 2
1.8 1.8 3
3.8571428571428568 -2.057142857142857 4
9.0 6.942857142857143 5
22.09090909090909 -15.148051948051947 6
56.07692307692308 40.92887112887114 7
145.8 -104.87112887112887 8
-363.2842469037971
-363.2842469
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:48:11) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma += (-1)**c * tg
	
	c += 1
	
	print(tg,soma,c)
	
soma *= sqrt(12)

print(soma)
print(round(soma,8))
-- OUTPUT:
1.0 1.0 1
1.0 0.0 2
1.8 1.8 3
3.8571428571428568 -2.057142857142857 4
9.0 6.942857142857143 5
22.09090909090909 -15.148051948051947 6
56.07692307692308 40.92887112887114 7
145.8 -104.87112887112887 8
385.94117647058823 281.0700475994594 9
1035.9473684210525 -754.8773208215931 10
2811.8571428571427 2056.9798220355497 11
7125.5871238191185
7125.58712382
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:48:12) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma += (-1)**c * tg
	
	c += 1
	
	print(tg,soma,c)
	
soma *= sqrt(12)

print(soma)
print(round(soma,8))
-- OUTPUT:
1.0 1.0 1
1.0 0.0 2
1.8 1.8 3
3.8571428571428568 -2.057142857142857 4
9.0 6.942857142857143 5
22.09090909090909 -15.148051948051947 6
56.07692307692308 40.92887112887114 7
145.8 -104.87112887112887 8
385.94117647058823 281.0700475994594 9
1035.9473684210525 -754.8773208215931 10
2811.8571428571427 2056.9798220355497 11
7125.5871238191185
7125.58712382
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:48:14) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma += (-1)**c * tg
	
	c += 1
	
	print(tg,soma,c)
	
soma *= sqrt(12)

print(soma)
print(round(soma,8))
-- OUTPUT:
1.0 1.0 1
1.0 0.0 2
1.8 1.8 3
3.8571428571428568 -2.057142857142857 4
9.0 6.942857142857143 5
22.09090909090909 -15.148051948051947 6
56.07692307692308 40.92887112887114 7
145.8 -104.87112887112887 8
385.94117647058823 281.0700475994594 9
1035.9473684210525 -754.8773208215931 10
2811.8571428571427 2056.9798220355497 11
7125.5871238191185
7125.58712382
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:48:15) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma += (-1)**c * tg
	
	c += 1
	
	print(tg,soma,c)
	
soma *= sqrt(12)

print(soma)
print(round(soma,8))
-- OUTPUT:
1.0 1.0 1
1.0 0.0 2
1.8 1.8 3
3.8571428571428568 -2.057142857142857 4
9.0 6.942857142857143 5
22.09090909090909 -15.148051948051947 6
56.07692307692308 40.92887112887114 7
145.8 -104.87112887112887 8
385.94117647058823 281.0700475994594 9
1035.9473684210525 -754.8773208215931 10
2811.8571428571427 2056.9798220355497 11
7125.5871238191185
7125.58712382
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:48:25) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma += (-1)**c  tg
	
	c += 1
	
	print(tg,soma,c)
	
soma *= sqrt(12)

print(soma)
print(round(soma,8))
-- ERROR:
File "XXXX", line 12
    soma += (-1)**c  tg
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:48:29) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma += (-1)**c / tg
	
	c += 1
	
	print(tg,soma,c)
	
soma *= sqrt(12)

print(soma)
print(round(soma,8))
-- OUTPUT:
1.0 1.0 1
1.0 0.0 2
1.8 0.5555555555555556 3
3.8571428571428568 0.2962962962962963 4
9.0 0.4074074074074074 5
22.09090909090909 0.3621399176954732 6
56.07692307692308 0.3799725651577503 7
145.8 0.373113854595336 8
385.94117647058823 0.37570492303002584 9
1035.9473684210525 0.3747396230249453 10
2811.8571428571427 0.37509525986892234 11
1.2993680955424496
1.2993681
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:48:31) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n):
	
	tg = (1 / (2*c+1)*(3**c))
	
	soma += (-1)**c / tg
	
	c += 1
	
	print(tg,soma,c)
	
soma *= sqrt(12)

print(soma)
print(round(soma,8))
-- OUTPUT:
1.0 1.0 1
1.0 0.0 2
1.8 0.5555555555555556 3
3.8571428571428568 0.2962962962962963 4
9.0 0.4074074074074074 5
22.09090909090909 0.3621399176954732 6
56.07692307692308 0.3799725651577503 7
145.8 0.373113854595336 8
385.94117647058823 0.37570492303002584 9
1035.9473684210525 0.3747396230249453 10
2811.8571428571427 0.37509525986892234 11
1.2993680955424496
1.2993681
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:48:36) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n):
	
	tg = (2*c+1)*(3**c)
	
	soma += (-1)**c / tg
	
	c += 1
	
	print(tg,soma,c)
	
soma *= sqrt(12)

print(soma)
print(round(soma,8))
-- OUTPUT:
1 1.0 1
9 0.8888888888888888 2
45 0.9111111111111111 3
189 0.9058201058201059 4
729 0.9071918479325887 5
2673 0.9068177364473661 6
9477 0.9069232550714033 7
32805 0.906892771913348 8
111537 0.9069017375480701 9
373977 0.9068990635868373 10
1240029 0.90689987001959 11
3.1415933045030813
3.1415933
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:48:37) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n):
	
	tg = (2*c+1)*(3**c)
	
	soma += (-1)**c / tg
	
	c += 1
	
	print(tg,soma,c)
	
soma *= sqrt(12)

print(soma)
print(round(soma,8))
-- OUTPUT:
1 1.0 1
9 0.8888888888888888 2
45 0.9111111111111111 3
189 0.9058201058201059 4
729 0.9071918479325887 5
2673 0.9068177364473661 6
9477 0.9069232550714033 7
32805 0.906892771913348 8
111537 0.9069017375480701 9
373977 0.9068990635868373 10
1240029 0.90689987001959 11
3.1415933045030813
3.1415933
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:48:39) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n):
	
	tg = (2*c+1)*(3**c)
	
	soma += (-1)**c / tg
	
	c += 1
	
	print(tg,soma,c)
	
soma *= sqrt(12)

print(soma)
print(round(soma,8))
-- OUTPUT:
1 1.0 1
9 0.8888888888888888 2
45 0.9111111111111111 3
189 0.9058201058201059 4
729 0.9071918479325887 5
2673 0.9068177364473661 6
9477 0.9069232550714033 7
32805 0.906892771913348 8
111537 0.9069017375480701 9
373977 0.9068990635868373 10
1240029 0.90689987001959 11
3.1415933045030813
3.1415933
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-10 16:48:41) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n):
	
	tg = (2*c+1)*(3**c)
	
	soma += (-1)**c / tg
	
	c += 1
	
	print(tg,soma,c)
	
soma *= sqrt(12)

print(soma)
print(round(soma,8))
-- EXECUTION TIME:
0.153242
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
1 1.0 1
9 0.8888888888888888 2
45 0.9111111111111111 3
189 0.9058201058201059 4
729 0.9071918479325887 5
2673 0.9068177364473661 6
9477 0.9069232550714033 7
32805 0.906892771913348 8
111537 0.9069017375480701 9
373977 0.9068990635868373 10
1240029 0.90689987001959 11
3.1415933045030813
3.1415933
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
1 1.0 1
9 0.8888888888888888 2
45 0.9111111111111111 3
189 0.9058201058201059 4
729 0.9071918479325887 5
2673 0.9068177364473661 6
9477 0.9069232550714033 7
32805 0.906892771913348 8
111537 0.9069017375480701 9
373977 0.9068990635868373 10
1240029 0.90689987001959 11
4074381 0.9068996245835349 12
13286025 0.9068996998505918 13
43046721 0.9068996766200187 14
138706101 0.9068996838295069 15
3.141592659521714
3.14159266
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
1 1.0 1
9 0.8888888888888888 2
45 0.9111111111111111 3
189 0.9058201058201059 4
729 0.9071918479325887 5
2673 0.9068177364473661 6
9477 0.9069232550714033 7
32805 0.906892771913348 8
3.141568715941784
3.14156872
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-10 16:48:42) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n):
	
	tg = (2*c+1)*(3**c)
	
	soma += (-1)**c / tg
	
	c += 1
	
	print(tg,soma,c)
	
soma *= sqrt(12)

print(soma)
print(round(soma,8))
-- EXECUTION TIME:
0.155653
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
1 1.0 1
9 0.8888888888888888 2
45 0.9111111111111111 3
189 0.9058201058201059 4
729 0.9071918479325887 5
2673 0.9068177364473661 6
9477 0.9069232550714033 7
32805 0.906892771913348 8
111537 0.9069017375480701 9
373977 0.9068990635868373 10
1240029 0.90689987001959 11
3.1415933045030813
3.1415933
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
1 1.0 1
9 0.8888888888888888 2
45 0.9111111111111111 3
189 0.9058201058201059 4
729 0.9071918479325887 5
2673 0.9068177364473661 6
9477 0.9069232550714033 7
32805 0.906892771913348 8
111537 0.9069017375480701 9
373977 0.9068990635868373 10
1240029 0.90689987001959 11
4074381 0.9068996245835349 12
13286025 0.9068996998505918 13
43046721 0.9068996766200187 14
138706101 0.9068996838295069 15
3.141592659521714
3.14159266
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
1 1.0 1
9 0.8888888888888888 2
45 0.9111111111111111 3
189 0.9058201058201059 4
729 0.9071918479325887 5
2673 0.9068177364473661 6
9477 0.9069232550714033 7
32805 0.906892771913348 8
3.141568715941784
3.14156872
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-10 16:48:43) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n):
	
	tg = (2*c+1)*(3**c)
	
	soma += (-1)**c / tg
	
	c += 1
	
	print(tg,soma,c)
	
soma *= sqrt(12)

print(soma)
print(round(soma,8))
-- EXECUTION TIME:
0.160376
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
1 1.0 1
9 0.8888888888888888 2
45 0.9111111111111111 3
189 0.9058201058201059 4
729 0.9071918479325887 5
2673 0.9068177364473661 6
9477 0.9069232550714033 7
32805 0.906892771913348 8
111537 0.9069017375480701 9
373977 0.9068990635868373 10
1240029 0.90689987001959 11
3.1415933045030813
3.1415933
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
1 1.0 1
9 0.8888888888888888 2
45 0.9111111111111111 3
189 0.9058201058201059 4
729 0.9071918479325887 5
2673 0.9068177364473661 6
9477 0.9069232550714033 7
32805 0.906892771913348 8
111537 0.9069017375480701 9
373977 0.9068990635868373 10
1240029 0.90689987001959 11
3.1415933045030813
3.1415933
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
1 1.0 1
9 0.8888888888888888 2
45 0.9111111111111111 3
189 0.9058201058201059 4
729 0.9071918479325887 5
2673 0.9068177364473661 6
9477 0.9069232550714033 7
32805 0.906892771913348 8
111537 0.9069017375480701 9
373977 0.9068990635868373 10
1240029 0.90689987001959 11
3.1415933045030813
3.1415933
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-10 16:48:43) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n):
	
	tg = (2*c+1)*(3**c)
	
	soma += (-1)**c / tg
	
	c += 1
	
	print(tg,soma,c)
	
soma *= sqrt(12)

print(soma)
print(round(soma,8))
-- EXECUTION TIME:
0.16585
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
1 1.0 1
9 0.8888888888888888 2
45 0.9111111111111111 3
189 0.9058201058201059 4
729 0.9071918479325887 5
2673 0.9068177364473661 6
9477 0.9069232550714033 7
32805 0.906892771913348 8
111537 0.9069017375480701 9
373977 0.9068990635868373 10
1240029 0.90689987001959 11
3.1415933045030813
3.1415933
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
1 1.0 1
9 0.8888888888888888 2
45 0.9111111111111111 3
189 0.9058201058201059 4
729 0.9071918479325887 5
2673 0.9068177364473661 6
9477 0.9069232550714033 7
32805 0.906892771913348 8
3.141568715941784
3.14156872
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-10 16:48:43) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n):
	
	tg = (2*c+1)*(3**c)
	
	soma += (-1)**c / tg
	
	c += 1
	
	print(tg,soma,c)
	
soma *= sqrt(12)

print(soma)
print(round(soma,8))
-- EXECUTION TIME:
0.257031
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
1 1.0 1
9 0.8888888888888888 2
45 0.9111111111111111 3
189 0.9058201058201059 4
729 0.9071918479325887 5
2673 0.9068177364473661 6
9477 0.9069232550714033 7
32805 0.906892771913348 8
111537 0.9069017375480701 9
373977 0.9068990635868373 10
1240029 0.90689987001959 11
3.1415933045030813
3.1415933
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
1 1.0 1
9 0.8888888888888888 2
45 0.9111111111111111 3
189 0.9058201058201059 4
729 0.9071918479325887 5
2673 0.9068177364473661 6
9477 0.9069232550714033 7
32805 0.906892771913348 8
111537 0.9069017375480701 9
373977 0.9068990635868373 10
1240029 0.90689987001959 11
3.1415933045030813
3.1415933
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
1 1.0 1
9 0.8888888888888888 2
45 0.9111111111111111 3
189 0.9058201058201059 4
729 0.9071918479325887 5
2673 0.9068177364473661 6
9477 0.9069232550714033 7
32805 0.906892771913348 8
111537 0.9069017375480701 9
373977 0.9068990635868373 10
1240029 0.90689987001959 11
3.1415933045030813
3.1415933
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:48:43) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n):
	
	tg = (2*c+1)*(3**c)
	
	soma += (-1)**c / tg
	
	c += 1
	
	print(tg,soma,c)
	
soma *= sqrt(12)

print(soma)
print(round(soma,8))
-- OUTPUT:
1 1.0 1
9 0.8888888888888888 2
45 0.9111111111111111 3
189 0.9058201058201059 4
729 0.9071918479325887 5
2673 0.9068177364473661 6
9477 0.9069232550714033 7
32805 0.906892771913348 8
111537 0.9069017375480701 9
373977 0.9068990635868373 10
1240029 0.90689987001959 11
3.1415933045030813
3.1415933
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-10 16:48:44) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n):
	
	tg = (2*c+1)*(3**c)
	
	soma += (-1)**c / tg
	
	c += 1
	
	print(tg,soma,c)
	
soma *= sqrt(12)

print(soma)
print(round(soma,8))
-- EXECUTION TIME:
0.315003
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
1 1.0 1
9 0.8888888888888888 2
45 0.9111111111111111 3
189 0.9058201058201059 4
729 0.9071918479325887 5
2673 0.9068177364473661 6
9477 0.9069232550714033 7
32805 0.906892771913348 8
111537 0.9069017375480701 9
373977 0.9068990635868373 10
1240029 0.90689987001959 11
4074381 0.9068996245835349 12
13286025 0.9068996998505918 13
43046721 0.9068996766200187 14
138706101 0.9068996838295069 15
3.141592659521714
3.14159266
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
1 1.0 1
9 0.8888888888888888 2
45 0.9111111111111111 3
189 0.9058201058201059 4
729 0.9071918479325887 5
2673 0.9068177364473661 6
9477 0.9069232550714033 7
32805 0.906892771913348 8
111537 0.9069017375480701 9
373977 0.9068990635868373 10
1240029 0.90689987001959 11
3.1415933045030813
3.1415933
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
1 1.0 1
9 0.8888888888888888 2
45 0.9111111111111111 3
189 0.9058201058201059 4
729 0.9071918479325887 5
2673 0.9068177364473661 6
9477 0.9069232550714033 7
32805 0.906892771913348 8
111537 0.9069017375480701 9
373977 0.9068990635868373 10
1240029 0.90689987001959 11
4074381 0.9068996245835349 12
13286025 0.9068996998505918 13
43046721 0.9068996766200187 14
138706101 0.9068996838295069 15
3.141592659521714
3.14159266
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-10 16:48:44) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n):
	
	tg = (2*c+1)*(3**c)
	
	soma += (-1)**c / tg
	
	c += 1
	
	print(tg,soma,c)
	
soma *= sqrt(12)

print(soma)
print(round(soma,8))
-- EXECUTION TIME:
0.318319
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
1 1.0 1
9 0.8888888888888888 2
45 0.9111111111111111 3
189 0.9058201058201059 4
729 0.9071918479325887 5
2673 0.9068177364473661 6
9477 0.9069232550714033 7
32805 0.906892771913348 8
111537 0.9069017375480701 9
373977 0.9068990635868373 10
1240029 0.90689987001959 11
4074381 0.9068996245835349 12
13286025 0.9068996998505918 13
43046721 0.9068996766200187 14
138706101 0.9068996838295069 15
3.141592659521714
3.14159266
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
1 1.0 1
9 0.8888888888888888 2
45 0.9111111111111111 3
189 0.9058201058201059 4
729 0.9071918479325887 5
2673 0.9068177364473661 6
9477 0.9069232550714033 7
32805 0.906892771913348 8
111537 0.9069017375480701 9
373977 0.9068990635868373 10
1240029 0.90689987001959 11
3.1415933045030813
3.1415933
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-10 16:48:44) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n):
	
	tg = (2*c+1)*(3**c)
	
	soma += (-1)**c / tg
	
	c += 1
	
	print(tg,soma,c)
	
soma *= sqrt(12)

print(soma)
print(round(soma,8))
-- EXECUTION TIME:
0.360053
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1716/2502/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-10 16:48:44) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n):
	
	tg = (2*c+1)*(3**c)
	
	soma += (-1)**c / tg
	
	c += 1
	
	print(tg,soma,c)
	
soma *= sqrt(12)

print(soma)
print(round(soma,8))
-- EXECUTION TIME:
0.326119
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
1 1.0 1
9 0.8888888888888888 2
45 0.9111111111111111 3
189 0.9058201058201059 4
729 0.9071918479325887 5
2673 0.9068177364473661 6
9477 0.9069232550714033 7
32805 0.906892771913348 8
3.141568715941784
3.14156872
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
numero natural: 1 1.0 1
9 0.8888888888888888 2
45 0.9111111111111111 3
189 0.9058201058201059 4
729 0.9071918479325887 5
2673 0.9068177364473661 6
9477 0.9069232550714033 7
32805 0.906892771913348 8
3.141568715941784
3.14156872
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:48:52) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n):
	
	tg = (2*c+1)*(3**c)
	
	soma += (-1)**c / tg
	
	c += 1
	
soma *= sqrt(12)

print(round(soma,8))
-- OUTPUT:
3.1415933
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-10 16:48:54) 
-- CODE:
from math import *

n = int(input("numero natural: "))

c = 0 #conta
soma = 0 #acumula

while (c < n):
	
	tg = (2*c+1)*(3**c)
	
	soma += (-1)**c / tg
	
	c += 1
	
soma *= sqrt(12)

print(round(soma,8))
-- EXECUTION TIME:
0.157048
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.1415933
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.14159266
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
3.14156872
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
