== TEST (2019-04-15 22:09:48) 
-- CODE:
r = float(input("raio:"))
x = float(input("altura:"))
n = int(input("1,2:"))
from math import *
if(n=1):
	V = (pi*x**2*(3*r-x))/3
	print(round(V,4))
else:
	V = (4*pi*r**3)/3
	print(round(V,4))
	
-- ERROR:
File "XXXX", line 5
    if(n=1):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 22:09:56) 
-- CODE:
r = float(input("raio:"))
x = float(input("altura:"))
n = int(input("1,2:"))
from math import *
if(n==1):
	V = (pi*x**2*(3*r-x))/3
	print(round(V,4))
else:
	V = (4*pi*r**3)/3
	print(round(V,4))
	
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 22:10:30) 
-- CODE:
r = float(input("raio:"))
x = float(input("altura:"))
n = int(input("1,2:"))
from math import *
if(n==1):
	V = (pi*x**2*(3*r-x))/3
	print(round(V,4))
else:
	V = (4*pi*r**3)/3
	print(round(V,4))
	
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 22:12:15) 
-- CODE:
r = float(input("raio:"))
x = float(input("altura:"))
n = int(input("1,2:"))
from math import *
if(n==1):
	V = (pi*(x**2)*(3*r-x))/3
	print(round(V,4))
else:
	V = (4*pi*r**3)/3
	print(round(V,4))
	
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 22:13:33) 
-- CODE:
r = float(input("raio:"))
x = float(input("altura:"))
n = int(input("1,2:"))
from math import *
if(n==1):
	V = (pi*x**2*(3*r-x))/3
	print(round(V,4))
else:
	V = (4*pi*r**3)/3
	print(round(V,4))
	
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 22:13:48) 
-- CODE:
r = float(input("raio:"))
x = float(input("altura:"))
n = int(input("1,2:"))
from math import *
if(n==1):
	V = (pi*x**2*(3*r-x))/3
	print(round(V,4))
else:
	V = (4*pi*r**3)/3
	print(round(V,4))
	
-- EXECUTION TIME:
0.137186
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
310.3391
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 22:14:39) 
-- CODE:
r = float(input("raio:"))
x = float(input("altura:"))
n = int(input("1,2:"))
from math import *
if(n==1):
	V = (pi*x**2(3*r-x))/3
	print(round(V,4))
else:
	V = (4*pi*r**3)/3
	print(round(V,4))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    V = (pi*x**2(3*r-x))/3
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 22:14:47) 
-- CODE:
r = float(input("raio:"))
x = float(input("altura:"))
n = int(input("1,2:"))
from math import *
if(n==1):
	V = (pi*x**2(3*r-x))/3
	print(round(V,4))
else:
	V = (4*pi*r**3)/3
	print(round(V,4))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    V = (pi*x**2(3*r-x))/3
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 22:18:07) 
-- CODE:
r = float(input("raio:"))
x = float(input("altura:"))
n = int(input("1,2:"))
from math import *
VE = (pi*x**2(3*r-x))/3
VC = (4*pi*r**3)/3
if(n==1):
	print(round(VE,4))
else:
	print(round((VE-VC),4))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    VE = (pi*x**2(3*r-x))/3
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 22:18:58) 
-- CODE:
r = float(input("raio:"))
x = float(input("altura:"))
n = int(input("1,2:"))
from math import *
VE = (pi*x**2*(3*r-x))/3
VC = (4*pi*r**3)/3
if(n==1):
	print(round(VE,4))
else:
	print(round((VE-VC),4))
	
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 22:21:00) 
-- CODE:
r = float(input("raio:"))
x = float(input("altura:"))
n = int(input("1,2:"))
from math import *
VE = (pi*(x**2)*(3*r-x))/3
VC = (4*pi*r**3)/3
if(n==1):
	print(round(VE,4))
else:
	print(round((VE-VC),4))
	
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 22:21:19) 
-- CODE:
r = float(input("raio:"))
x = float(input("altura:"))
n = int(input("1,2:"))
from math import *
VE = (pi*(x**2)*(3*r-x))/3
VC = (4*pi*r**3)/3
if(n==1):
	print(round(VE,4))
else:
	print(round((VE-VC),4))
	
-- EXECUTION TIME:
0.150037
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
-290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 22:21:41) 
-- CODE:
r = float(input("raio:"))
x = float(input("altura:"))
n = int(input("1,2:"))
from math import *
VE = (pi*(x**2)*((3*r)-x))/3
VC = (4*pi*r**3)/3
if(n==1):
	print(round(VE,4))
else:
	print(round((VE-VC),4))
	
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 22:22:13) 
-- CODE:
r = float(input("raio:"))
x = float(input("altura:"))
n = int(input("1,2:"))
from math import *
VE = (pi*(x**2)*((3*r)-x))/(3)
VC = (4*pi*r**3)/3
if(n==1):
	print(round(VE,4))
else:
	print(round((VE-VC),4))
	
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 22:23:56) 
-- CODE:
r = float(input("raio:"))
x = float(input("altura:"))
n = int(input("1,2:"))
from math import *
VC = (pi*(x**2)*((3*r)-x))/(3)
VE = (4*pi*r**3)/3
if(n==1):
	print(round(VE,4))
else:
	print(round((VE-VC),4))
	
-- OUTPUT:
179.5944
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 22:24:12) 
-- CODE:
r = float(input("raio:"))
x = float(input("altura:"))
n = int(input("1,2:"))
from math import *
VC = (pi*(x**2)*((3*r)-x))/(3)
VE = (4*pi*r**3)/3
if(n==1):
	print(round(VE,4))
else:
	print(round((VE-VC),4))
	
-- EXECUTION TIME:
0.158563
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
179.5944
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 22:24:30) 
-- CODE:
r = float(input("raio:"))
x = float(input("altura:"))
n = int(input("1,2:"))
from math import *
VC = (pi*(x**2)*((3*r)-x))/(3)
VE = (4*pi*r**3)/3
if(n==1):
	print(round(VE,4))
else:
	print(round((VE-VC),4))
	
-- OUTPUT:
179.5944
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 22:24:48) 
-- CODE:
r = float(input("raio:"))
x = float(input("altura:"))
n = int(input("1,2:"))
from math import *
VC = (pi*(x**2)*((3*r)-x))/(3)
VE = (4*pi*r**3)/3
if(n==1):
	print(round(VE,4))
else:
	print(round((VE-VC),4))
	
-- EXECUTION TIME:
0.152243
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
179.5944
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 22:25:21) 
-- CODE:
r = float(input("raio:"))
x = float(input("altura:"))
n = int(input("1,2:"))
from math import *
VC = (pi*(x**2)*((3*r)-x))/(3)
VE = (4*pi*r**3)/3
if(n==1):
	print(round(VE,4))
else:
	print(round(VE-VC,4))
	
-- EXECUTION TIME:
0.203281
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
179.5944
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 22:25:23) 
-- CODE:
r = float(input("raio:"))
x = float(input("altura:"))
n = int(input("1,2:"))
from math import *
VC = (pi*(x**2)*((3*r)-x))/(3)
VE = (4*pi*r**3)/3
if(n==1):
	print(round(VE,4))
else:
	print(round(VE-VC,4))
	
-- EXECUTION TIME:
0.143059
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
179.5944
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 22:25:40) 
-- CODE:
r = float(input("raio:"))
x = float(input("altura:"))
n = int(input("1,2:"))
from math import *
VC = (pi*(x**2)*((3*r)-x))/(3)
VE = (4*pi*r**3)/3
if(n=1):
	print(round(VE,4))
else:
	print(round(VE-VC,4))
	
-- EXECUTION TIME:
0.200085
-- ERROR:
  File "/home/codebench/codes/1644/2443/main.py", line 7
    if(n=1):
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 22:25:41) 
-- CODE:
r = float(input("raio:"))
x = float(input("altura:"))
n = int(input("1,2:"))
from math import *
VC = (pi*(x**2)*((3*r)-x))/(3)
VE = (4*pi*r**3)/3
if(n=1):
	print(round(VE,4))
else:
	print(round(VE-VC,4))
	
-- EXECUTION TIME:
0.200721
-- ERROR:
  File "/home/codebench/codes/1644/2443/main.py", line 7
    if(n=1):
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 22:27:10) 
-- CODE:
r = float(input("raio:"))
x = float(input("altura:"))
n = int(input("1,2:"))
from math import *
VC = (pi*(x**2)*((3*r)-x))/(3)
VE = (4*pi*r**3)/3
if(n=1):
	print(round(VE,4))
else:
	print(round(VC-VE,4))
	
-- EXECUTION TIME:
0.170683
-- ERROR:
  File "/home/codebench/codes/1644/2443/main.py", line 7
    if(n=1):
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 22:27:11) 
-- CODE:
r = float(input("raio:"))
x = float(input("altura:"))
n = int(input("1,2:"))
from math import *
VC = (pi*(x**2)*((3*r)-x))/(3)
VE = (4*pi*r**3)/3
if(n=1):
	print(round(VE,4))
else:
	print(round(VC-VE,4))
	
-- ERROR:
File "XXXX", line 7
    if(n=1):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 22:27:19) 
-- CODE:
r = float(input("raio:"))
x = float(input("altura:"))
n = int(input("1,2:"))
from math import *
VC = (pi*(x**2)*((3*r)-x))/(3)
VE = (4*pi*r**3)/3
if(n==1):
	print(round(VE,4))
else:
	print(round(VC-VE,4))
	
-- OUTPUT:
179.5944
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 22:28:21) 
-- CODE:
r = float(input("raio:"))
x = float(input("altura:"))
n = int(input("1,2:"))
from math import *
VC = (pi*(x**2)*((3*r)-x))/(3)
VE = (4*pi*r**3)/3
if(n==1):
	print(round(VC,4))
else:
	print(round(VE-VC,4))
	
-- EXECUTION TIME:
0.15159
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
