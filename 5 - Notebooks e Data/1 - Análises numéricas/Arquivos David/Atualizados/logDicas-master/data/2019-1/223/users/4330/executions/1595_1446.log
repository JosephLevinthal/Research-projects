== SUBMITION (2019-03-21 17:41:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
print(round(10.0/3%))
-- EXECUTION TIME:
0.220194
-- ERROR:
  File "/home/codebench/codes/1595/1446/main.py", line 4
    print(round(10.0/3%))
                       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 17:41:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
print(round(10.0%3))
-- EXECUTION TIME:
0.183897
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
1
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
1
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
1
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 17:41:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
print(round(10.0%3))
-- EXECUTION TIME:
0.137271
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
1
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
1
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
1
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 02:12:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a cor.
x= float(input("Insira oa quantidade de litros de suco comprado"))
-- OUTPUT:
54.84
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 02:13:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a cor.
x= float(input("Insira oa quantidade de litros de suco comprado"))

c= x*(round(c,3))
-- EXECUTION TIME:
0.202642
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1595/1446/main.py", line 6, in <module>
    c= x*(round(c,3))
NameError: name 'c' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 02:13:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a cor.
x= float(input("Insira oa quantidade de litros de suco comprado"))

c= x*(round(c,3))
-- EXECUTION TIME:
0.190219
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1595/1446/main.py", line 6, in <module>
    c= x*(round(c,3))
NameError: name 'c' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 02:13:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a cor.
x= float(input("Insira oa quantidade de litros de suco comprado"))

c= x*(round(c,3))
-- EXECUTION TIME:
0.12229
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1595/1446/main.py", line 6, in <module>
    c= x*(round(c,3))
NameError: name 'c' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 02:14:13) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a cor.
x= float(input("Insira oa quantidade de litros de suco comprado"))

c= x*(1/3)
print(round(c,3))
-- EXECUTION TIME:
0.13173
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
2.333
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
6.667
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
5.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 01:39:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a cor.
x= float(input("Insira oa quantidade de litros de suco comprado"))

c= x*(1/3)
print(round(c,3))
-- OUTPUT:
2.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 01:40:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a cor.
x= float(input("Insira oa quantidade de litros de suco comprado:"))

c= x*(1/3)
print(round(c,3))
-- OUTPUT:
2.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 01:45:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a cor.
x= float(input("Insira oa quantidade de litros de suco comprado:"))

c= x*(1/3)
print(round(c,3))
-- OUTPUT:
2.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 13:46:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a cor.
x= float(input("Insira oa quantidade de litros de suco comprado:"))

c= x*(1/3)
print(round(c,3))
-- OUTPUT:
2.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 13:46:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a cor.
x= float(input("Insira oa quantidade de litros de suco comprado:"))

y= x*(1/3)
print(round(c,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(round(c,3))
NameError: name 'c' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 13:47:05) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a cor.
x= float(input("Insira oa quantidade de litros de suco comprado:"))

y= x*(1/3)
print(round(y,3))
-- OUTPUT:
2.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
