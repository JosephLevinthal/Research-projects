== TEST (2019-07-02 15:25:58) 
-- CODE:
from numpy import *
from numpy.linalg *

x = array(eval(input()))
y = x.shape(0)
h = zeros(y,dtype=int)
for i in range(y):
	for j in range(y):
		h[i,j] = sum(x[i,j])
		print(h)
-- ERROR:
File "XXXX", line 2
    from numpy.linalg *
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 15:25:59) 
-- CODE:
from numpy import *
from numpy.linalg *

x = array(eval(input()))
y = x.shape(0)
h = zeros(y,dtype=int)
for i in range(y):
	for j in range(y):
		h[i,j] = sum(x[i,j])
		print(h)
-- EXECUTION TIME:
0.748472
-- ERROR:
  File "/home/codebench/codes/1835/2220/main.py", line 2
    from numpy.linalg *
                      ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 15:26:01) 
-- CODE:
from numpy import *
from numpy.linalg *

x = array(eval(input()))
y = x.shape(0)
h = zeros(y,dtype=int)
for i in range(y):
	for j in range(y):
		h[i,j] = sum(x[i,j])
		print(h)
-- ERROR:
File "XXXX", line 2
    from numpy.linalg *
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 15:26:19) 
-- CODE:
from numpy import *
from numpy.linalg *

x = array(eval(input()))
y = x.shape(0)
h = zeros(y,dtype=int)
for i in range(y):
	for j in range(y):
		h[i,j] = sum(x[i,j])
		print(h)
-- ERROR:
File "XXXX", line 2
    from numpy.linalg *
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 15:26:37) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))
y = x.shape(0)
h = zeros(y,dtype=int)
for i in range(y):
	for j in range(y):
		h[i,j] = sum(x[i,j])
		print(h)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 15:27:15) 
-- CODE:
from numpy import *
from numpy.linalg import *

x = array(eval(input()))

for i in range(shape(x)[0]):
	print(max(x[i,:]))

-- EXECUTION TIME:
1.08969
-- TEST CASE 1:
---- input:
[[34.5,67.8,89.7,56.4,65.7,78.9,81.2],[99.9,67.8,87.6,45.4,12.3,45.5,23.7],[27.5,93.1,45.9,47.3,19.2,76.5,49.3]]
---- correct output:
89.7
99.9
93.1
---- user output:
89.7
99.9
93.1
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
