== TEST (2019-07-09 16:12:54) 
-- CODE:
from numpy import*

ent= eval(array(input("")))
a=0
for i in range(size(ent)):
	if(ent[i]>=2000):
		a+=1
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 16:13:16) 
-- CODE:
from numpy import*

ent= array(eval(input("")))
a=0
for i in range(size(ent)):
	if(ent[i]>=2000):
		a+=1
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 16:13:46) 
-- CODE:
from numpy import*

ent= array(eval(input("")))
a=0
for i in range(size(ent)):
	if(ent[i]>=2000):
		a+=1
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 16:13:54) 
-- CODE:
from numpy import*

ent= array(eval(input("")))
a=0
for i in range(size(ent)):
	if(ent[i]>=2000):
		a+=1
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 16:14:03) 
-- CODE:
from numpy import*

ent= array(eval(input("")))
a=0
for i in range(size(ent)):
	if(ent[i]>=2000):
		a+=1
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 16:15:06) 
-- CODE:
from numpy import*

ent= array(eval(input("")))
a=0
for i in range(size(ent)):
	if(ent[i]>=2000):
		a+=1
m= zeros(a,dtype=int):

-- ERROR:
File "XXXX", line 8
    m= zeros(a,dtype=int):
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 16:15:14) 
-- CODE:
from numpy import*

ent= array(eval(input("")))
a=0
for i in range(size(ent)):
	if(ent[i]>=2000):
		a+=1
m= zeros(a,dtype=int)
print(m)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-09 16:15:48) 
-- CODE:
from numpy import*

ent= array(eval(input("")))
a=0
for i in range(size(ent)):
	if(ent[i]>=2000):
		a+=1
m= zeros(a,dtype=int)
for i in range(size(ent)):

-- EXECUTION TIME:
0.595632
-- ERROR:
  File "/home/codebench/codes/1888/1645/main.py", line 10
    
                              ^
SyntaxError: unexpected EOF while parsing

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 16:16:50) 
-- CODE:
from numpy import*

ent= array(eval(input("")))
a=0
for i in range(size(ent)):
	if(ent[i]>=2000):
		a+=1
m= zeros(a,dtype=int)
for i in range(size(ent)):
	if(ent[i]>=2000):
		m[i]=ent[i]
print(m)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 16:17:25) 
-- CODE:
from numpy import*

ent= array(eval(input("")))
a=0
for i in range(size(ent)):
	if(ent[i]>=2000):
		a+=1
m= zeros(a,dtype=int)
for i in range(size(ent)):
	if(ent[i]>=2000):
		m[i]=m[i]+1
print(m)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 16:19:12) 
-- CODE:
from numpy import*

ent= array(eval(input("")))
a=0
a2=0
for i in range(size(ent)):
	if(ent[i]>=2000):
		a+=1
m= zeros(a,dtype=int)
for i in range(size(ent)):
	if(ent[i]>=2000):
		m[i]=m[i]+
print(a)
print(m)
-- ERROR:
File "XXXX", line 12
    m[i]=m[i]+
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 16:19:19) 
-- CODE:
from numpy import*

ent= array(eval(input("")))
a=0
a2=0
for i in range(size(ent)):
	if(ent[i]>=2000):
		a+=1
m= zeros(a,dtype=int)
for i in range(size(ent)):
	if(ent[i]>=2000):
		m[i]=m[i]+1
print(a)
print(m)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 16:19:42) 
-- CODE:
from numpy import*

ent= array(eval(input("")))
a=0
a2=0
for i in range(size(ent)):
	if(ent[i]>=2000):
		a+=1
m= zeros(a,dtype=int)
for i in range(size(ent)):
	if(ent[i]>=2000):
		
print(a)
print(m)
-- ERROR:
File "XXXX", line 13
    print(a)
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 16:25:26) 
-- CODE:
from numpy import*

ent= array(eval(input("")))
a=0
a2=0
for i in range(size(ent)):
	if(ent[i]>=2000):
		a+=1
m= zeros(a,dtype=int)
for i in range(size(ent)):
	if(ent[i]>=2000):
		m[i]=ent[i]
print(a)
print(m)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 16:26:14) 
-- CODE:
from numpy import*

ent= array(eval(input("")))
a=0
a2=0
for i in range(size(ent)):
	if(ent[i]>=2000):
		a+=1
print(a)
m= zeros(a,dtype=int)

for i in range(size(ent)):
	if(ent[i]>=2000):
		m[i]=ent[i]

print(m)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 16:27:23) 
-- CODE:
from numpy import*

ent= array(eval(input("")))
a=0
for i in range(size(ent)):
	if(ent[i]>=2000):
		a+=1
print(a)
m= zeros(a,dtype=int)
for i in range(size(ent)):
	if(ent[i]>=2000):
		m[i]=ent[i]
print(m)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 16:29:52) 
-- CODE:
from numpy import*

ent= array(eval(input("")))
a=0
for i in range(size(ent)):
	if(ent[i]>=2000):
		a+=1
print(a)
m= zeros(a,dtype=int)
j=0
for i in range(size(ent)):
	if(ent[i]>=2000):
		m[i]=j
		j+=1
print(m)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 16:30:08) 
-- CODE:
from numpy import*

ent= array(eval(input("")))
a=0
for i in range(size(ent)):
	if(ent[i]>=2000):
		a+=1
print(a)
m= zeros(a,dtype=int)
j=0
for i in range(size(ent)):
	if(ent[i]>=2000):
		m[i]=j[i]
		j+=1
print(m)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 16:31:22) 
-- CODE:
from numpy import*

ent= array(eval(input("")))
a=0
for i in range(size(ent)):
	if(ent[i]>=2000):
		a+=1
print(a)
m= zeros(a,dtype=int)
j=0
for i in range(size(ent)):
	if(ent[i]>=2000):
		m[j]=i
		j+=1
print(m)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-09 16:31:34) 
-- CODE:
from numpy import*

ent= array(eval(input("")))
a=0
for i in range(size(ent)):
	if(ent[i]>=2000):
		a+=1
print(a)
m= zeros(a,dtype=int)
j=0
for i in range(size(ent)):
	if(ent[i]>=2000):
		m[j]=i
		j+=1
print(m)
-- EXECUTION TIME:
0.992734
-- TEST CASE 1:
---- input:
[2000,1500,2100,1500,3000,3200,1205,1800]
---- correct output:
4
[0 2 4 5]
---- user output:
4
[0 2 4 5]
-- TEST CASE 2:
---- input:
[2000,1500,2100,1500,3000]
---- correct output:
3
[0 2 4]
---- user output:
3
[0 2 4]
-- TEST CASE 3:
---- input:
[2000,1500,1950,1555,1999,2050,2560,2851,1500,3000]
---- correct output:
5
[0 5 6 7 9]
---- user output:
5
[0 5 6 7 9]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
