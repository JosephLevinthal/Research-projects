== TEST (2019-04-23 17:43:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a=input("Insira o animal da cedula:")
print("Entrada:", a)
-- OUTPUT:
Entrada: 100
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:47:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a=input("Insira a cedula:")
print("Entrada:", a)

if ((a!=2) or (a!=5) or (a!=10) or (a!=20) or (a!=50) or (a!=100)):
	
-- ERROR:
File "XXXX", line 10
    
     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:47:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a=input("Insira a cedula:")
print("Entrada:", a)

if ((a!=2) or (a!=5) or (a!=10) or (a!=20) or (a!=50) or (a!=100)):
	print("Animal: Invalido")
-- OUTPUT:
Entrada: 100
Animal: Invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:48:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a=input("Insira a cedula:")
print("Entrada:", a)

if ((a!=2) or (a!=5) or (a!=10) or (a!=20) or (a!=50) or (a!=100)):
	print("Animal: Invalido")

elif (a==2)
	print("Tartaruga")
-- ERROR:
File "XXXX", line 11
    elif (a==2)
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:48:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a=input("Insira a cedula:")
print("Entrada:", a)

if ((a!=2) or (a!=5) or (a!=10) or (a!=20) or (a!=50) or (a!=100)):
	print("Animal: Invalido")

elif (a==2):
	print("Tartaruga")
-- OUTPUT:
Entrada: 100
Animal: Invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:49:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a=input("Insira a cedula:")
print("Entrada:", a)

if ((a!=2) and (a!=5) and (a!=10) and (a!=20) and (a!=50) and (a!=100)):
	print("Animal: Invalido")

elif (a==2):
	print("Tartaruga")
-- OUTPUT:
Entrada: 100
Animal: Invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:50:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a=input("Insira a cedula:")
print("Entrada:", a)

if ((a!=2) or (a!=5) or (a!=10) or (a!=20) or (a!=50) or (a!=100)):
	print("Animal: Invalido")

else:
	if(a==2):
		print("Animal: Tartaruga")
-- OUTPUT:
Entrada: 100
Animal: Invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:15:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a=input("Insira a cedula:")
print("Entrada:", a)

if ((a==2) or (a==5) or (a==10) or (a==20) or (a==50) or (a==100)):
	print("Animal: Invalido")


	
	
	
else:
	
-- ERROR:
File "XXXX", line 17
    
     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:16:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a=input("Insira a cedula:")
print("Entrada:", a)

if ((a==2) or (a==5) or (a==10) or (a==20) or (a==50) or (a==100)):
	print("Animal: Invalido")


	
	
else:

-- EXECUTION TIME:
0.136619
-- ERROR:
  File "/home/codebench/codes/1679/1100/main.py", line 15
    
         ^
SyntaxError: unexpected EOF while parsing

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:16:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a=input("Insira a cedula:")
print("Entrada:", a)

if ((a==2) or (a==5) or (a==10) or (a==20) or (a==50) or (a==100)):
	print("Animal: Invalido")


	
	
else:

-- ERROR:
File "XXXX", line 15
    
         ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:16:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a=input("Insira a cedula:")
print("Entrada:", a)

if ((a==2) or (a==5) or (a==10) or (a==20) or (a==50) or (a==100)):
	print("Animal: Invalido")


	
	
else:

-- ERROR:
File "XXXX", line 15
    
         ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:16:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a=input("Insira a cedula:")
print("Entrada:", a)

if ((a==2) or (a==5) or (a==10) or (a==20) or (a==50) or (a==100)):
	print("Animal: Invalido")
-- OUTPUT:
Entrada: 100
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:17:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a=input("Insira a cedula:")
print("Entrada:", a)

if (a==2 or a==5 or a==10 or a==20 or a==50 or a==100):
	print("Animal: Invalido")
-- OUTPUT:
Entrada: 100
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:18:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a=input("Insira a cedula:")
print("Entrada:", a)

if (a!=2 or a!=5 or a!=10 or a!=20 or a!=50 or a!=100):
	print("Animal: Invalido")
-- OUTPUT:
Entrada: 100
Animal: Invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:18:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a=input("Insira a cedula:")
print("Entrada:", a)

if (a==2):
	print("Animal: Tartaruga")
-- OUTPUT:
Entrada: 100
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:19:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a=int(input("Insira a cedula:")
print("Entrada:", a)

if (a==2):
	print("Animal: Tartaruga")
-- ERROR:
File "XXXX", line 6
    print("Entrada:", a)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:19:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a=int(input("Insira a cedula:"))
print("Entrada:", a)

if (a==2):
	print("Animal: Tartaruga")
-- OUTPUT:
Entrada: 100
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:19:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a=int(input("Insira a cedula:"))
print("Entrada:", a)

if (a==2):
	print("Animal: Tartaruga")
elif (a==5):
	print("Animal: Garça")
-- OUTPUT:
Entrada: 100
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:22:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a=int(input("Insira a cedula:"))
print("Entrada:", a)

if (a==2):
	print("Animal: Tartaruga")
elif (a==5):
	print("Animal: Garca")
elif (a==10)
	print("Animal: Arara")
elif (a==20):
	print("Animal: Mico-leao-dourado")
elif (a==50):
	print("Animal: Onca-pintada")
elif (a==100):
	print("Animal: Garoupa")
else:
	print("Animal: Invalido")
-- ERROR:
File "XXXX", line 12
    elif (a==10)
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:22:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a=int(input("Insira a cedula:"))
print("Entrada:", a)

if (a==2):
	print("Animal: Tartaruga")
elif (a==5):
	print("Animal: Garca")
elif (a==10):
	print("Animal: Arara")
elif (a==20):
	print("Animal: Mico-leao-dourado")
elif (a==50):
	print("Animal: Onca-pintada")
elif (a==100):
	print("Animal: Garoupa")
else:
	print("Animal: Invalido")
-- OUTPUT:
Entrada: 100
Animal: Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:22:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a=int(input("Insira a cedula:"))
print("Entrada:", a)

if (a==2):
	print("Animal: Tartaruga")
elif (a==5):
	print("Animal: Garca")
elif (a==10):
	print("Animal: Arara")
elif (a==20):
	print("Animal: Mico-leao-dourado")
elif (a==50):
	print("Animal: Onca-pintada")
elif (a==100):
	print("Animal: Garoupa")
else:
	print("Animal: Invalido")
-- EXECUTION TIME:
0.157275
-- TEST CASE 1:
---- input:
100
---- correct output:
Entrada: 100
Animal: Garoupa
---- user output:
Entrada: 100
Animal: Garoupa
-- TEST CASE 2:
---- input:
7
---- correct output:
Entrada: 7
Animal: Invalido
---- user output:
Entrada: 7
Animal: Invalido
-- TEST CASE 3:
---- input:
50
---- correct output:
Entrada: 50
Animal: Onca-pintada
---- user output:
Entrada: 50
Animal: Onca-pintada
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
