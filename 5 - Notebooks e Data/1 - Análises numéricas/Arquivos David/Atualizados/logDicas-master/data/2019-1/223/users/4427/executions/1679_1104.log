== TEST (2019-05-01 10:55:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a = float(input())
b = float(input())
c = float(input())
d = float(input())


if b>a and d>c:
    if d>=a and d <=b or b>=c and b<=d:
        print("Intervalo 1:", a, ",", b , "\n", "Intervalo 2:", c, ",", d , "\n", "Ha intersecao")
    else:
        print("Intervalo 1:", a, ",", b, "\n", "Intervalo 2:", c, ",", d, "\n", "Nao ha intersecao")
else:
    print("Intervalo 1:", a, ",", b, "\n", "Intervalo 2:", c, ",", d, "\n", "Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0 
 Intervalo 2: 4.0 , 5.0 
 Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 10:55:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a = float(input())
b = float(input())
c = float(input())
d = float(input())


if b>a and d>c:
    if d>=a and d <=b or b>=c and b<=d:
        print("Intervalo 1:", a, ",", b , "\n", "Intervalo 2:", c, ",", d , "\n", "Ha intersecao")
    else:
        print("Intervalo 1:", a, ",", b, "\n", "Intervalo 2:", c, ",", d, "\n", "Nao ha intersecao")
else:
    print("Intervalo 1:", a, ",", b, "\n", "Intervalo 2:", c, ",", d, "\n", "Entradas invalidas")
-- EXECUTION TIME:
0.209967
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0 
 Intervalo 2: 4.0 , 5.0 
 Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0 
 Intervalo 2: 2.5 , 3.0 
 Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0 
 Intervalo 2: 1.0 , 3.0 
 Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
