== TEST (2019-05-14 16:36:49) 
-- CODE:
from math import
x = eval(input("valor de x;"))
k = int(input("valor de x ;"))
contador = 1
sinal = -1
resultado = x
expoente = 3
while (contador < k )
   resultado = resultado + (sinal * (x ** expoente /factorial (expoente)))
	sinal = sinal * (-1)
	expoente = expoente + 2 
	contador += 1
print(round(soma ,10))
-- ERROR:
File "XXXX", line 1
    from math import
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:36:58) 
-- CODE:
*from math import
x = eval(input("valor de x;"))
k = int(input("valor de x ;"))
contador = 1
sinal = -1
resultado = x
expoente = 3
while (contador < k )
   resultado = resultado + (sinal * (x ** expoente /factorial (expoente)))
	sinal = sinal * (-1)
	expoente = expoente + 2 
	contador += 1
print(round(soma ,10))
-- ERROR:
File "XXXX", line 1
    *from math import
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:37:12) 
-- CODE:
from math import
x = eval(input("valor de x;"))
k = int(input("valor de x ;"))
contador = 1
sinal = -1
resultado = x
expoente = 3
while (contador < k )
   resultado = resultado + (sinal * (x ** expoente /factorial (expoente)))
	sinal = sinal * (-1)
	expoente = expoente + 2 
	contador += 1
print(round(soma ,10))
-- ERROR:
File "XXXX", line 1
    from math import
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:38:20) 
-- CODE:
from math import
x = eval(input("valor de x;"))
k = int(input("valor de x ;"))
contador = 1
sinal = -1
resultado = x
expoente = 3
while (contador < k )
   resultado = resultado + (sinal * (x ** expoente /factorial (expoente)))
	sinal = sinal * (-1)
	expoente = expoente + 2 
	contador += 1
print(round(soma ,10))
-- ERROR:
File "XXXX", line 1
    from math import
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:38:21) 
-- CODE:
from math import
x = eval(input("valor de x;"))
k = int(input("valor de x ;"))
contador = 1
sinal = -1
resultado = x
expoente = 3
while (contador < k )
   resultado = resultado + (sinal * (x ** expoente /factorial (expoente)))
	sinal = sinal * (-1)
	expoente = expoente + 2 
	contador += 1
print(round(soma ,10))
-- ERROR:
File "XXXX", line 1
    from math import
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:38:28) 
-- CODE:
from math import*
x = eval(input("valor de x;"))
k = int(input("valor de x ;"))
contador = 1
sinal = -1
resultado = x
expoente = 3
while (contador < k )
   resultado = resultado + (sinal * (x ** expoente /factorial (expoente)))
	sinal = sinal * (-1)
	expoente = expoente + 2 
	contador += 1
print(round(soma ,10))
-- ERROR:
File "XXXX", line 8
    while (contador < k )
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:38:55) 
-- CODE:
from math import*
x = eval(input("valor de x;"))
k = int(input("valor de x ;"))
contador = 1
sinal = -1
resultado = x
expoente = 3
while (contador < k ):
   resultado = resultado + (sinal * (x ** expoente /factorial (expoente)))
	sinal = sinal * (-1)
	expoente = expoente + 2 
	contador += 1
print(round(soma ,10))
-- ERROR:
File "XXXX", line 10
    sinal = sinal * (-1)
                       ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:40:29) 
-- CODE:
from math import*
x = eval(input("valor de x;"))
k = int(input("valor de x ;"))
contador = 1
sinal = -1
resultado = x
expoente = 3
while (contador < k ):
   resultado = resultado + (sinal * (x ** expoente /factorial (expoente)))
	sinal = sinal *(-1)
	expoente = expoente + 2 
	contador += 1
print(round(soma ,10))
-- ERROR:
File "XXXX", line 10
    sinal = sinal *(-1)
                      ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:40:40) 
-- CODE:
from math import*
x = eval(input("valor de x;"))
k = int(input("valor de x ;"))
contador = 1
sinal = -1
resultado = x
expoente = 3
while (contador < k ):
   resultado = resultado + (sinal * (x ** expoente /factorial (expoente)))
	sinal = sinal *(-1)
	expoente = expoente + 2 
	contador += 1
print(round(soma ,10))
-- ERROR:
File "XXXX", line 10
    sinal = sinal *(-1)
                      ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 15:30:21) 
-- CODE:
from math import*
x = eval(input("valor de x;"))
k = int(input("valor de x ;"))
contador = 1
sinal = -1
resultado = x
expoente = 3
while (contador < k ):
   resultado = resultado + (sinal * (x ** expoente /factorial (expoente)))
	sinal = sinal *(-1)
	expoente = expoente + 2 
	contador += 1
print(round(soma ,10))
-- ERROR:
File "XXXX", line 10
    sinal = sinal *(-1)
                      ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 15:30:36) 
-- CODE:
from math import*
x = eval(input("valor de x;"))
k = int(input("valor de x ;"))
contador = 1
sinal = -1
resultado = x
expoente = 3
while (contador < k ):
   resultado = resultado + (sinal * (x ** expoente /factorial (expoente)))
	   sinal = sinal *(-1)
	   expoente = expoente + 2 
	   contador += 1
print(round(soma ,10))
-- ERROR:
File "XXXX", line 10
    sinal = sinal *(-1)
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 15:30:43) 
-- CODE:
from math import*
x = eval(input("valor de x;"))
k = int(input("valor de x ;"))
contador = 1
sinal = -1
resultado = x
expoente = 3
while (contador < k ):
   resultado = resultado + (sinal * (x ** expoente /factorial (expoente)))
	   sinal = sinal*(-1)
	   expoente = expoente + 2 
	   contador += 1
print(round(soma ,10))
-- ERROR:
File "XXXX", line 10
    sinal = sinal*(-1)
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 15:31:14) 
-- CODE:
from math import*
x = eval(input("valor de x;"))
k = int(input("valor de x ;"))
contador = 1
sinal = -1
resultado = x
expoente = 3
while (contador < k ):
resultado = resultado + (sinal * (x ** expoente /factorial (expoente)))
sinal = sinal*(-1)
expoente = expoente + 2 
contador += 1
print(round(soma ,10))
-- ERROR:
File "XXXX", line 9
    resultado = resultado + (sinal * (x ** expoente /factorial (expoente)))
            ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 15:32:01) 
-- CODE:
from math import*


x=eval(input(" "))

k=int(input(" "))

contador=1

sinal=-1

resultado=x

expoente=3

while(contador<k):
    resultado=resultado+(sinal*(x**expoente/factorial(expoente)))
    sinal=sinal*(-1)
    expoente=expoente+2
    contador=contador+1
-- ERROR:
File "XXXX", line 9
    resultado = resultado + (sinal * (x ** expoente /factorial (expoente)))
            ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 15:32:13) 
-- CODE:
from math import*

x=eval(input(" "))

k=int(input(" "))

contador=1

sinal=-1

resultado=x

expoente=3

while(contador<k):
    resultado=resultado+(sinal*(x**expoente/factorial(expoente)))
    sinal=sinal*(-1)
    expoente=expoente+2
    contador=contador+1
-- ERROR:
File "XXXX", line 9
    resultado = resultado + (sinal * (x ** expoente /factorial (expoente)))
            ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 15:32:32) 
-- CODE:
from math import*

x=eval(input(" "))

k=int(input(" "))

contador=1

sinal=-1

resultado=x

expoente=3

while(contador<k):
    resultado=resultado+(sinal*(x**expoente/factorial(expoente)))
    sinal=sinal*(-1)
    expoente=expoente+2
    contador=contador+1
	
print(round(resultado,10))
-- OUTPUT:
1.0000035426
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 15:32:37) 
-- CODE:
from math import*

x=eval(input(" "))

k=int(input(" "))

contador=1

sinal=-1

resultado=x

expoente=3

while(contador<k):
    resultado=resultado+(sinal*(x**expoente/factorial(expoente)))
    sinal=sinal*(-1)
    expoente=expoente+2
    contador=contador+1
	
print(round(resultado,10))
-- OUTPUT:
1.0000035426
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 15:32:44) 
-- CODE:
from math import*

x=eval(input(" "))

k=int(input(" "))

contador=1

sinal=-1

resultado=x

expoente=3

while(contador<k):
    resultado=resultado+(sinal*(x**expoente/factorial(expoente)))
    sinal=sinal*(-1)
    expoente=expoente+2
    contador=contador+1
	
print(round(resultado,10))
-- OUTPUT:
1.0000035426
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 15:32:45) 
-- CODE:
from math import*

x=eval(input(" "))

k=int(input(" "))

contador=1

sinal=-1

resultado=x

expoente=3

while(contador<k):
    resultado=resultado+(sinal*(x**expoente/factorial(expoente)))
    sinal=sinal*(-1)
    expoente=expoente+2
    contador=contador+1
	
print(round(resultado,10))
-- OUTPUT:
1.0000035426
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 15:32:46) 
-- CODE:
from math import*

x=eval(input(" "))

k=int(input(" "))

contador=1

sinal=-1

resultado=x

expoente=3

while(contador<k):
    resultado=resultado+(sinal*(x**expoente/factorial(expoente)))
    sinal=sinal*(-1)
    expoente=expoente+2
    contador=contador+1
	
print(round(resultado,10))
-- OUTPUT:
1.0000035426
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 15:32:47) 
-- CODE:
from math import*

x=eval(input(" "))

k=int(input(" "))

contador=1

sinal=-1

resultado=x

expoente=3

while(contador<k):
    resultado=resultado+(sinal*(x**expoente/factorial(expoente)))
    sinal=sinal*(-1)
    expoente=expoente+2
    contador=contador+1
	
print(round(resultado,10))
-- OUTPUT:
1.0000035426
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 15:32:51) 
-- CODE:
from math import*

x=eval(input(" "))

k=int(input(" "))

contador=1

sinal=-1

resultado=x

expoente=3

while(contador<k):
    resultado=resultado+(sinal*(x**expoente/factorial(expoente)))
    sinal=sinal*(-1)
    expoente=expoente+2
    contador=contador+1
	
print(round(resultado,10))
-- OUTPUT:
1.0000035426
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 15:32:59) 
-- CODE:
from math import*

x=eval(input(" "))

k=int(input(" "))

contador=1

sinal=-1

resultado=x

expoente=3

while(contador<k):
    resultado=resultado+(sinal*(x**expoente/factorial(expoente)))
      sinal=sinal*(-1)
      expoente=expoente+2
      contador=contador+1
	
print(round(resultado,10))
-- ERROR:
File "XXXX", line 17
    sinal=sinal*(-1)
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 15:33:08) 
-- CODE:
from math import*

x=eval(input(" "))

k=int(input(" "))

contador=1

sinal=-1

resultado=x

expoente=3

while(contador<k):
    resultado=resultado+(sinal*(x**expoente/factorial(expoente)))
   sinal=sinal*(-1)
   expoente=expoente+2
   contador=contador+1
	
print(round(resultado,10))
-- ERROR:
File "XXXX", line 17
    sinal=sinal*(-1)
                   ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 15:33:28) 
-- CODE:
from math import*

x=eval(input(" "))

k=int(input(" "))

contador=1

sinal=-1

resultado=x

expoente=3

while(contador<k):
    resultado=resultado+(sinal*(x**expoente/factorial(expoente)))
   sinal = sinal*(-1)
   expoente = expoente+2
   contador = contador+1
	
print(round(resultado,10))
-- ERROR:
File "XXXX", line 17
    sinal = sinal*(-1)
                     ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 15:33:47) 
-- CODE:
from math import*

x=eval(input(" "))

k=int(input(" "))

contador=1

sinal=-1

resultado=x

expoente=3

while(contador<k):
    resultado=resultado+(sinal*(x**expoente/factorial(expoente)))
   sinal = sinal*(-1);
   expoente = expoente+2
   contador = contador+1
	
print(round(resultado,10))
-- ERROR:
File "XXXX", line 17
    sinal = sinal*(-1);
                      ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
