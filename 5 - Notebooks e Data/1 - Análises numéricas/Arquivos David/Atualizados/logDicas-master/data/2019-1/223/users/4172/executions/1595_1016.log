== TEST (2019-03-24 21:43:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a=float(input("comprimento"))
b=float(input("comprimento"))
c=float(input("comprimento"))
s=a+b+c/2
from math import*

print(round(sqrt(s(s-a)*(s-b)*(s-c))))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(round(sqrt(s(s-a)*(s-b)*(s-c))))
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 21:43:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a=float(input("comprimento: "))
b=float(input("comprimento: "))
c=float(input("comprimento: "))
s=a+b+c/2
from math import*

print(round(sqrt(s(s-a)*(s-b)*(s-c))))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(round(sqrt(s(s-a)*(s-b)*(s-c))))
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 21:44:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a=float(input("comprimento: "))
b=float(input("comprimento: "))
c=float(input("comprimento: "))
s=a+b+c/2
from math import*

print(round(sqrt(s*(s-a)*(s-b)*(s-c),5)))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(round(sqrt(s*(s-a)*(s-b)*(s-c),5)))
TypeError: sqrt() takes exactly one argument (2 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 21:45:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a=float(input("comprimento: "))
b=float(input("comprimento: "))
c=float(input("comprimento: "))
s=a+b+c/2
from math import*

print(round(sqrt()(s*(s-a)*(s-b)*(s-c),5)))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(round(sqrt()(s*(s-a)*(s-b)*(s-c),5)))
TypeError: sqrt() takes exactly one argument (0 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 21:45:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a=float(input("comprimento: "))
b=float(input("comprimento: "))
c=float(input("comprimento: "))
s=a+b+c/2
from math import*

print(round(sqrt((s*(s-a)*(s-b)*(s-c)),5)))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(round(sqrt((s*(s-a)*(s-b)*(s-c)),5)))
TypeError: sqrt() takes exactly one argument (2 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 21:45:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a=float(input("comprimento: "))
b=float(input("comprimento: "))
c=float(input("comprimento: "))
s=a+b+c/2
from math import*

print(round(sqrt((s*(s-a)*(s-b)*(s-c)),5)))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(round(sqrt((s*(s-a)*(s-b)*(s-c)),5)))
TypeError: sqrt() takes exactly one argument (2 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 21:46:37) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a=float(input("comprimento: "))
b=float(input("comprimento: "))
c=float(input("comprimento: "))
s=a+b+c/2
from math import*

print(round((sqrt(s*(s-a)*(s-b)*(s-c)),5)))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(round((sqrt(s*(s-a)*(s-b)*(s-c)),5)))
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 21:46:37) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a=float(input("comprimento: "))
b=float(input("comprimento: "))
c=float(input("comprimento: "))
s=a+b+c/2
from math import*

print(round((sqrt(s*(s-a)*(s-b)*(s-c)),5)))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(round((sqrt(s*(s-a)*(s-b)*(s-c)),5)))
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 21:47:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a=float(input("comprimento: "))
b=float(input("comprimento: "))
c=float(input("comprimento: "))
s=a+b+c/2
from math import*

print(round((sqrt(s*(s-a)*(s-b)*(s-c),5)))
-- ERROR:
File "XXXX", line 12
    
                                              ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 21:47:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a=float(input("comprimento: "))
b=float(input("comprimento: "))
c=float(input("comprimento: "))
s=a+b+c/2
from math import*

print(round(sqrt(s*(s-a)*(s-b)*(s-c),5)))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(round(sqrt(s*(s-a)*(s-b)*(s-c),5)))
TypeError: sqrt() takes exactly one argument (2 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 21:48:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a=float(input("comprimento: "))
b=float(input("comprimento: "))
c=float(input("comprimento: "))
s=a+b+c/2
from math import*
a=sqrt(s(s-a)*(s-b)*(s-c))
print(round(a,5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    a=sqrt(s(s-a)*(s-b)*(s-c))
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 21:49:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a=float(input("comprimento: "))
b=float(input("comprimento: "))
c=float(input("comprimento: "))
from math import*
s=a+b+c/2
a=sqrt(s(s-a)*(s-b)*(s-c))
print(round(a,5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    a=sqrt(s(s-a)*(s-b)*(s-c))
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 21:52:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a=float(input("comprimento: "))
b=float(input("comprimento: "))
c=float(input("comprimento: "))
from math import*
s=a+b+c/2
a=s*(s-a)*(s-b)*(s-c)
print(round(sqrt(a),5))
-- OUTPUT:
638.20837
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 21:52:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a=float(input("comprimento: "))
b=float(input("comprimento: "))
c=float(input("comprimento: "))
from math import*
s=a+b+c/2
a=s*(s-a)*(s-b)*(s-c)
print(round(sqrt(a),5))
-- EXECUTION TIME:
0.129385
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
638.20837
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
3909.36376
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
4627.14693
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 21:53:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a=float(input("comprimento: "))
b=float(input("comprimento: "))
c=float(input("comprimento: "))
from math import*
s=a+b+c/2
a=s*(s-a)*(s-b)*(s-c)
print(round(sqrt(a),5))
-- OUTPUT:
638.20837
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 21:53:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a=float(input("comprimento: "))
b=float(input("comprimento: "))
c=float(input("comprimento: "))

from math import*
s=a+b+c/2
a=s*(s-a)*(s-b)*(s-c)
print(round(sqrt(a),5))
-- OUTPUT:
638.20837
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 21:55:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a=float(input("comprimento: "))
b=float(input("comprimento: "))
c=float(input("comprimento: "))

from math import*
s=a+b+c/2
a=sqrt(s*(s-a)*(s-b)*(s-c))
print(round(a,5))
-- OUTPUT:
638.20837
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 21:55:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a=float(input("comprimento: "))
b=float(input("comprimento: "))
c=float(input("comprimento: "))

from math import*
s=a+b+c/2
a=sqrt(s*(s-a)*(s-b)*(s-c))
print(round(a,5))
-- EXECUTION TIME:
0.131245
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
638.20837
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
3909.36376
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
4627.14693
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 21:57:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a=float(input("comprimento: "))
b=float(input("comprimento: "))
c=float(input("comprimento: "))

from math import*
i=(a+b+c)/2
a=sqrt(i * (i-a) * (i-b) * (i-c))
print(round(a,5))
-- OUTPUT:
69.41967
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 21:57:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a=float(input("comprimento: "))
b=float(input("comprimento: "))
c=float(input("comprimento: "))

from math import*
i=(a+b+c)/2
a=sqrt(i * (i-a) * (i-b) * (i-c))
print(round(a,5))
-- EXECUTION TIME:
0.180787
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.41967
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709.16654
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:06:20) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
from math import*
s=a+b+v/2
A=sqrt(s*(s-a)*(s-b)*(s-c))
print(round(A,5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    s=a+b+v/2
NameError: name 'v' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:06:42) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
from math import*
s=a+b+c2
A=sqrt(s*(s-a)*(s-b)*(s-c))
print(round(A,5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    s=a+b+c2
NameError: name 'c2' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:06:52) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
from math import*
s=a+b+c/2
A=sqrt(s*(s-a)*(s-b)*(s-c))
print(round(A,5))
-- OUTPUT:
638.20837
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:07:49) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
from math import*
s=a+b+c/2
A=sqrt(s(s-a)*(s-b)*(s-c))
print(round(A,5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    A=sqrt(s(s-a)*(s-b)*(s-c))
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 13:08:19) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
from math import*
s=a+b+c/2
A=sqrt(s*(s-a)*(s-b)*(s-c))
print(round(A,5))
-- EXECUTION TIME:
0.141516
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
638.20837
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
3909.36376
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
4627.14693
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:09:14) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
from math import*
s=a+b+c/2
A=sqrt(s* (s-a) * (s-b) * (s-c))
print(round(A,5))
-- OUTPUT:
638.20837
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:10:26) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
from math import*
s= a + b + c / 2
A=sqrt(s* (s - a) * (s - b) * ( s - c))
print(round(A,5))
-- OUTPUT:
638.20837
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 13:10:27) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
from math import*
s= a + b + c / 2
A=sqrt(s* (s - a) * (s - b) * ( s - c))
print(round(A,5))
-- EXECUTION TIME:
0.13495
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
638.20837
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
3909.36376
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
4627.14693
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 13:11:25) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
from math import*
s= a + b + c / 2
A=sqrt(s * ((s - a) * (s - b) * ( s - c)))


print(round(A,5))
-- EXECUTION TIME:
0.139258
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
lado1: lado2: lado3: 638.20837
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
lado1: lado2: lado3: 3909.36376
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
lado1: lado2: lado3: 4627.14693
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:11:26) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
from math import*
s= a + b + c / 2
A=sqrt(s * ((s - a) * (s - b) * ( s - c)))


print(round(A,5))
-- OUTPUT:
638.20837
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 13:11:59) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
from math import*
s= a + b + c / 2
A=sqrt(s * (s - a)(s - b)( s - c))


print(round(A,5))
-- EXECUTION TIME:
0.293524
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1595/1016/main.py", line 6, in <module>
    A=sqrt(s * (s - a)(s - b)( s - c))
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:11:59) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
from math import*
s= a + b + c / 2
A=sqrt(s * (s - a)(s - b)( s - c))


print(round(A,5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    A=sqrt(s * (s - a)(s - b)( s - c))
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 13:13:39) 
-- CODE:
from math import *

a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

s = a + b + c / 2
A=sqrt(s * (s - a)*(s - b)*( s - c))


print(round(A,5))
-- EXECUTION TIME:
0.143868
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
638.20837
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
3909.36376
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
4627.14693
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:13:39) 
-- CODE:
from math import *

a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

s = a + b + c / 2
A=sqrt(s * (s - a)*(s - b)*( s - c))


print(round(A,5))
-- OUTPUT:
638.20837
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:13:40) 
-- CODE:
from math import *

a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

s = a + b + c / 2
A=sqrt(s * (s - a)*(s - b)*( s - c))


print(round(A,5))
-- OUTPUT:
638.20837
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 13:13:41) 
-- CODE:
from math import *

a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

s = a + b + c / 2
A=sqrt(s * (s - a)*(s - b)*( s - c))


print(round(A,5))
-- EXECUTION TIME:
0.12493
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
638.20837
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
3909.36376
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
4627.14693
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:14:07) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
from math import*
s=a+b+c/2
A=sqrt(s* (s-a)*(s-b)*(s-c))
print(round(A,6))
-- OUTPUT:
638.208366
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 13:14:09) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
from math import*
s=a+b+c/2
A=sqrt(s* (s-a)*(s-b)*(s-c))
print(round(A,6))
-- EXECUTION TIME:
0.131042
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
638.208366
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
3909.363759
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
4627.146927
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 13:14:13) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
from math import*
s=a+b+c/2
A=sqrt(s* (s-a)*(s-b)*(s-c))
print(round(A,7))
-- EXECUTION TIME:
0.195305
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
638.208366
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
3909.363759
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
4627.1469274
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:15:08) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
from math import*
s=a+b+c/2
A=sqrt((s* (s-a))*(s-b)*(s-c))
print(round(A,5))
-- OUTPUT:
638.20837
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 13:19:38) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
from math import*
s=(a+b+c/2)
A=sqrt(s* (s-a)*(s-b)*(s-c))
print(round(A,5))
-- EXECUTION TIME:
0.130993
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
638.20837
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
3909.36376
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
4627.14693
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:19:39) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
from math import*
s=(a+b+c/2)
A=sqrt(s* (s-a)*(s-b)*(s-c))
print(round(A,5))
-- OUTPUT:
638.20837
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 13:19:48) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
from math import*
s=(a+b+c/2
A=sqrt(s* (s-a)*(s-b)*(s-c))
print(round(A,5))
-- EXECUTION TIME:
0.133637
-- ERROR:
  File "/home/codebench/codes/1595/1016/main.py", line 6
    A=sqrt(s* (s-a)*(s-b)*(s-c))
    ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:19:49) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
from math import*
s=(a+b+c/2
A=sqrt(s* (s-a)*(s-b)*(s-c))
print(round(A,5))
-- ERROR:
File "XXXX", line 6
    A=sqrt(s* (s-a)*(s-b)*(s-c))
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:19:54) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
from math import*
s=(a+b+c)/2
A=sqrt(s* (s-a)*(s-b)*(s-c))
print(round(A,5))
-- OUTPUT:
69.41967
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 13:19:56) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
from math import*
s=(a+b+c)/2
A=sqrt(s* (s-a)*(s-b)*(s-c))
print(round(A,5))
-- EXECUTION TIME:
0.14304
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.41967
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709.16654
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
