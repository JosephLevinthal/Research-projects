== TEST (2019-06-08 12:19:13) 
-- CODE:
senha = input("digite um sennha")
i = 0
for ch in range(len(senha)):
	if(senha[ch] == senha[i].islower()):
		print(i)
	i = i + 1
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-08 12:19:49) 
-- CODE:
senha = input("digite um sennha")
i = 0
for ch in range(len(senha)):
	if(senha[ch] == senha[i].islower()):
		print(i)
	i = i + 1
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-08 12:19:58) 
-- CODE:
senha = input("digite um sennha:")
i = 0
for ch in range(len(senha)):
	if(senha[ch] == senha[i].islower()):
		print(i)
	i = i + 1
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-08 12:20:52) 
-- CODE:
senha = input("digite um sennha:")
i = 0
for ch in range(len(senha)):
	if(senha[ch] == senha[i].islower()):
	print(i)
	i = i + 1
-- ERROR:
File "XXXX", line 5
    print(i)
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-08 12:21:40) 
-- CODE:
senha = input("digite um sennha:")
for ch in range(len(senha)):
	if(senha[ch] == senha[sh].islower()):
		print(i)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    if(senha[ch] == senha[sh].islower()):
NameError: name 'sh' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-08 12:22:06) 
-- CODE:
senha = input("digite um sennha:")
for ch in range(len(senha)):
	if(senha[ch] == senha[ch].islower()):
		print(i)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    if(senha[ch] == senha[sh].islower()):
NameError: name 'sh' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-08 12:22:24) 
-- CODE:
senha = input("digite um sennha:")
for ch in range(len(senha)):
	if(senha[ch] == senha[ch].islower()):
		print(ch)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    if(senha[ch] == senha[sh].islower()):
NameError: name 'sh' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-08 12:23:38) 
-- CODE:
senha = input("digite um sennha:")
for ch in range(len(senha)):
	if(senha[ch] == senha[ch].islower()):
		print(ch)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    if(senha[ch] == senha[sh].islower()):
NameError: name 'sh' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-08 12:23:48) 
-- CODE:
senha = input("digite um sennha:")
for ch in range(len(senha)):
	if(senha[ch] == senha[ch].islower()):
		print(ch)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    if(senha[ch] == senha[sh].islower()):
NameError: name 'sh' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-08 12:23:57) 
-- CODE:
senha = input("digite um sennha:")
for ch in range(len(senha)):
	if(senha[ch] == senha[ch].islower()):
		print(ch)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    if(senha[ch] == senha[sh].islower()):
NameError: name 'sh' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-08 12:24:11) 
-- CODE:
senha = input("digite um sennha:")
for i in range(len(senha)):
	if(senha[i] == senha[i].islower()):
		print(i)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    if(senha[ch] == senha[sh].islower()):
NameError: name 'sh' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-08 12:26:53) 
-- CODE:
senha = input("digite um sennha:")
M =0
m = 0


for i in range(len(senha)):
	if(senha[i] == senha[i].islower()):
		m = m + 1
print(m)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    if(senha[ch] == senha[sh].islower()):
NameError: name 'sh' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-08 12:27:04) 
-- CODE:
senha = input("digite um sennha:")
M =0
m = 0


for i in range(len(senha)):
	if(senha[i] == senha[i].islower()):
		m = m + 1
print(m)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    if(senha[ch] == senha[sh].islower()):
NameError: name 'sh' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-08 12:27:52) 
-- CODE:
senha = input("digite um sennha:")
M =0
#m = 0


for i in range(len(senha)):
	m = 0
	if(senha[i] == senha[i].islower()):
		m = m + 1
	print(m)

-- OUTPUT:
0
0
0
0
0
0
0
0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-08 12:28:50) 
-- CODE:
senha = input("digite um sennha:")
M =0
#m = 0


for i in range(len(senha)):
	m = 0
	if(senha[i] == senha[i].isupper()):
		m = m + 1
	print(m)

-- OUTPUT:
0
0
0
0
0
0
0
0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-08 22:07:06) 
-- CODE:
senha = input("digite um sennha:")
M =0
m = 0

for i in range(0,len(senha)):
	if(senha[i] == senha[i].isupper()):
		m = m + 1
	print(m)

-- OUTPUT:
0
0
0
0
0
0
0
0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-08 22:07:23) 
-- CODE:
senha = input("digite um sennha:")
M =0
m = 0

for i in range(0,len(senha)):
	if(senha[i] == senha[i].isupper()):
		m = m + 1
	print(m)

-- OUTPUT:
0
0
0
0
0
0
0
0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-08 22:08:46) 
-- CODE:
senha = input("digite um sennha:")
M =0
m = 0

for i in range(0,len(senha)):
	if(senha[i] senha[i].isupper()):
		m = m + 1
	print(m)

-- ERROR:
File "XXXX", line 6
    if(senha[i] senha[i].isupper()):
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-08 22:09:03) 
-- CODE:
senha = input("digite um sennha:")
M =0
m = 0

for i in range(0,len(senha)):
	if(senha[i].isupper()):
		m = m + 1
	print(m)

-- OUTPUT:
0
0
0
1
1
1
1
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-08 22:13:07) 
-- CODE:
senha = input("digite um sennha:")
M =0
m = 0

for i in range(0,len(senha)):
	if(senha[i].isupper()):
		M = M + 1
	elif(senha[i].islower()):
		m = m + 1
if(len(senha >= 8 and m >= 1 and M >= 1)):
	print("SENHA VALIDA")
else:
	print("SENHA INVALIDA")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    if(len(senha >= 8 and m >= 1 and M >= 1)):
TypeError: '>=' not supported between instances of 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-08 22:13:59) 
-- CODE:
senha = input("digite um sennha:")
M =0
m = 0

for i in range(0,len(senha)):
	if(senha[i].isupper()):
		M = M + 1
	elif(senha[i].islower()):
		m = m + 1
if(len(senha) >= 8 and m >= 1 and M >= 1):
	print("SENHA VALIDA")
else:
	print("SENHA INVALIDA")
-- OUTPUT:
SENHA VALIDA
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-08 22:14:24) 
-- CODE:
senha = input("digite um sennha:")
M =0
m = 0

for i in range(0,len(senha)):
	if(senha[i].isupper()):
		M = M + 1
	elif(senha[i].islower()):
		m = m + 1
if(len(senha) >= 8 and m >= 1 and M >= 1):
	print("SENHA VALIDA")
else:
	print("SENHA INVALIDA")
-- OUTPUT:
SENHA VALIDA
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-08 22:14:42) 
-- CODE:
senha = input("digite um sennha:")
M =0
m = 0

for i in range(0,len(senha)):
	if(senha[i].isupper()):
		M = M + 1
	elif(senha[i].islower()):
		m = m + 1
if(len(senha) >= 8 and m >= 1 and M >= 1):
	print("SENHA VALIDA")
else:
	print("SENHA INVALIDA")
-- OUTPUT:
SENHA VALIDA
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-08 22:14:50) 
-- CODE:
senha = input("digite um sennha:")
M =0
m = 0

for i in range(0,len(senha)):
	if(senha[i].isupper()):
		M = M + 1
	elif(senha[i].islower()):
		m = m + 1
if(len(senha) >= 8 and m >= 1 and M >= 1):
	print("SENHA VALIDA")
else:
	print("SENHA INVALIDA")
-- EXECUTION TIME:
0.581755
-- TEST CASE 1:
---- input:
123A456b
---- correct output:
SENHA VALIDA
---- user output:
SENHA VALIDA
-- TEST CASE 2:
---- input:
123
---- correct output:
SENHA INVALIDA
---- user output:
SENHA INVALIDA
-- TEST CASE 3:
---- input:
123456789
---- correct output:
SENHA INVALIDA
---- user output:
SENHA INVALIDA
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
