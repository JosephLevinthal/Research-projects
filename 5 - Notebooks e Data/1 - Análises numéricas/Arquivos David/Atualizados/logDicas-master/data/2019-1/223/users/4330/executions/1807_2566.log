== SUBMITION (2019-06-08 14:13:03) 
-- CODE:

from numpy import*
faltas = array(eval(input("Digite o vetor: "))
soma = size(faltas)

faltas2= 0
faltas3= 0
faltas4= 0
faltas5= 0
faltas6= 0
faltas7= 0

for i in range(size(faltas)):
	
	if(faltas[i] == 2):
		faltas2 = faltas2 + 1
	elif(faltas[i] == 3):
		faltas3 = faltas3 + 1
	elif(faltas[i] == 4):
		faltas4 = faltas4 + 1
	elif(faltas[i] == 5):
		faltas5 = faltas5 + 1
	elif(faltas[i] == 6):
		faltas6 = faltas6 + 1
	elif(faltas[i] == 7):
		faltas7 = faltas7 + 1
	p2 = (100 * faltas2)/soma
	p3 = (100 * faltas3)/soma
	p4 = (100 * faltas4)/soma
	p5 = (100 * faltas5)/soma
	p6 = (100 * faltas6)/soma
	p7 = (100 * faltas7)/soma
if( 2 <= faltas[i] <= 7):
	z = zeros(6, dtype=float)
	z[0] = round(p2,1)
	z[1] = round(p3,1)
	z[2] = round(p4,1)
	z[3] = round(p5,1)
	z[4] = round(p6,1)
	z[5] = round(p7,1)
	print(z) 

-- EXECUTION TIME:
0.742059
-- ERROR:
  File "/home/codebench/codes/1807/2566/main.py", line 4
    soma = size(faltas)
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-08 14:22:55) 
-- CODE:

from numpy import*
faltas = array(eval(input("Digite o vetor: ")))
soma = size(faltas)

faltas2= 0
faltas3= 0
faltas4= 0
faltas5= 0
faltas6= 0
faltas7= 0

for i in range(size(faltas)):
	
	if(faltas[i] == 2):
		faltas2 = faltas2 + 1
	elif(faltas[i] == 3):
		faltas3 = faltas3 + 1
	elif(faltas[i] == 4):
		faltas4 = faltas4 + 1
	elif(faltas[i] == 5):
		faltas5 = faltas5 + 1
	elif(faltas[i] == 6):
		faltas6 = faltas6 + 1
	elif(faltas[i] == 7):
		faltas7 = faltas7 + 1
	p2 = (100 * faltas2)/soma
	p3 = (100 * faltas3)/soma
	p4 = (100 * faltas4)/soma
	p5 = (100 * faltas5)/soma
	p6 = (100 * faltas6)/soma
	p7 = (100 * faltas7)/soma
if( 2 <= faltas[i] <= 7):
	z = zeros(6, dtype=float)
	z[0] = round(p2,1)
	z[1] = round(p3,1)
	z[2] = round(p4,1)
	z[3] = round(p5,1)
	z[4] = round(p6,1)
	z[5] = round(p7,1)
	print(z) 

-- EXECUTION TIME:
1.70673
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[18.8  0.   0.  18.8 25.  37.5]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[ 4.  8. 16. 20. 20. 32.]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[18.8  0.   0.  18.8 25.  37.5]
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-08 14:22:58) 
-- CODE:

from numpy import*
faltas = array(eval(input("Digite o vetor: ")))
soma = size(faltas)

faltas2= 0
faltas3= 0
faltas4= 0
faltas5= 0
faltas6= 0
faltas7= 0

for i in range(size(faltas)):
	
	if(faltas[i] == 2):
		faltas2 = faltas2 + 1
	elif(faltas[i] == 3):
		faltas3 = faltas3 + 1
	elif(faltas[i] == 4):
		faltas4 = faltas4 + 1
	elif(faltas[i] == 5):
		faltas5 = faltas5 + 1
	elif(faltas[i] == 6):
		faltas6 = faltas6 + 1
	elif(faltas[i] == 7):
		faltas7 = faltas7 + 1
	p2 = (100 * faltas2)/soma
	p3 = (100 * faltas3)/soma
	p4 = (100 * faltas4)/soma
	p5 = (100 * faltas5)/soma
	p6 = (100 * faltas6)/soma
	p7 = (100 * faltas7)/soma
if( 2 <= faltas[i] <= 7):
	z = zeros(6, dtype=float)
	z[0] = round(p2,1)
	z[1] = round(p3,1)
	z[2] = round(p4,1)
	z[3] = round(p5,1)
	z[4] = round(p6,1)
	z[5] = round(p7,1)
	print(z) 

-- EXECUTION TIME:
1.99152
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[18.8  0.   0.  18.8 25.  37.5]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[ 4.  8. 16. 20. 20. 32.]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:

-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-08 14:23:02) 
-- CODE:

from numpy import*
faltas = array(eval(input("Digite o vetor: ")))
soma = size(faltas)

faltas2= 0
faltas3= 0
faltas4= 0
faltas5= 0
faltas6= 0
faltas7= 0

for i in range(size(faltas)):
	
	if(faltas[i] == 2):
		faltas2 = faltas2 + 1
	elif(faltas[i] == 3):
		faltas3 = faltas3 + 1
	elif(faltas[i] == 4):
		faltas4 = faltas4 + 1
	elif(faltas[i] == 5):
		faltas5 = faltas5 + 1
	elif(faltas[i] == 6):
		faltas6 = faltas6 + 1
	elif(faltas[i] == 7):
		faltas7 = faltas7 + 1
	p2 = (100 * faltas2)/soma
	p3 = (100 * faltas3)/soma
	p4 = (100 * faltas4)/soma
	p5 = (100 * faltas5)/soma
	p6 = (100 * faltas6)/soma
	p7 = (100 * faltas7)/soma
if( 2 <= faltas[i] <= 7):
	z = zeros(6, dtype=float)
	z[0] = round(p2,1)
	z[1] = round(p3,1)
	z[2] = round(p4,1)
	z[3] = round(p5,1)
	z[4] = round(p6,1)
	z[5] = round(p7,1)
	print(z) 

-- EXECUTION TIME:
4.55106
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[15.4  7.7 23.1  7.7 15.4 30.8]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[ 4.  8. 16. 20. 20. 32.]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[15.4  7.7 23.1  7.7 15.4 30.8]
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-08 14:23:04) 
-- CODE:

from numpy import*
faltas = array(eval(input("Digite o vetor: ")))
soma = size(faltas)

faltas2= 0
faltas3= 0
faltas4= 0
faltas5= 0
faltas6= 0
faltas7= 0

for i in range(size(faltas)):
	
	if(faltas[i] == 2):
		faltas2 = faltas2 + 1
	elif(faltas[i] == 3):
		faltas3 = faltas3 + 1
	elif(faltas[i] == 4):
		faltas4 = faltas4 + 1
	elif(faltas[i] == 5):
		faltas5 = faltas5 + 1
	elif(faltas[i] == 6):
		faltas6 = faltas6 + 1
	elif(faltas[i] == 7):
		faltas7 = faltas7 + 1
	p2 = (100 * faltas2)/soma
	p3 = (100 * faltas3)/soma
	p4 = (100 * faltas4)/soma
	p5 = (100 * faltas5)/soma
	p6 = (100 * faltas6)/soma
	p7 = (100 * faltas7)/soma
if( 2 <= faltas[i] <= 7):
	z = zeros(6, dtype=float)
	z[0] = round(p2,1)
	z[1] = round(p3,1)
	z[2] = round(p4,1)
	z[3] = round(p5,1)
	z[4] = round(p6,1)
	z[5] = round(p7,1)
	print(z) 

-- EXECUTION TIME:
4.09533
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1807/2566/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-08 14:23:04) 
-- CODE:

from numpy import*
faltas = array(eval(input("Digite o vetor: ")))
soma = size(faltas)

faltas2= 0
faltas3= 0
faltas4= 0
faltas5= 0
faltas6= 0
faltas7= 0

for i in range(size(faltas)):
	
	if(faltas[i] == 2):
		faltas2 = faltas2 + 1
	elif(faltas[i] == 3):
		faltas3 = faltas3 + 1
	elif(faltas[i] == 4):
		faltas4 = faltas4 + 1
	elif(faltas[i] == 5):
		faltas5 = faltas5 + 1
	elif(faltas[i] == 6):
		faltas6 = faltas6 + 1
	elif(faltas[i] == 7):
		faltas7 = faltas7 + 1
	p2 = (100 * faltas2)/soma
	p3 = (100 * faltas3)/soma
	p4 = (100 * faltas4)/soma
	p5 = (100 * faltas5)/soma
	p6 = (100 * faltas6)/soma
	p7 = (100 * faltas7)/soma
if( 2 <= faltas[i] <= 7):
	z = zeros(6, dtype=float)
	z[0] = round(p2,1)
	z[1] = round(p3,1)
	z[2] = round(p4,1)
	z[3] = round(p5,1)
	z[4] = round(p6,1)
	z[5] = round(p7,1)
	print(z) 

-- EXECUTION TIME:
4.31492
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1807/2566/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-08 14:23:25) 
-- CODE:

from numpy import*
faltas = array(eval(input("Digite o vetor: ")))
soma = size(faltas)

faltas2= 0
faltas3= 0
faltas4= 0
faltas5= 0
faltas6= 0
faltas7= 0

for i in range(size(faltas)):
	
	if(faltas[i] == 2):
		faltas2 = faltas2 + 1
	elif(faltas[i] == 3):
		faltas3 = faltas3 + 1
	elif(faltas[i] == 4):
		faltas4 = faltas4 + 1
	elif(faltas[i] == 5):
		faltas5 = faltas5 + 1
	elif(faltas[i] == 6):
		faltas6 = faltas6 + 1
	elif(faltas[i] == 7):
		faltas7 = faltas7 + 1
	p2 = (100 * faltas2)/soma
	p3 = (100 * faltas3)/soma
	p4 = (100 * faltas4)/soma
	p5 = (100 * faltas5)/soma
	p6 = (100 * faltas6)/soma
	p7 = (100 * faltas7)/soma
if( 2 <= faltas[i] <= 7):
	z = zeros(6, dtype=float)
	z[0] = round(p2,1)
	z[1] = round(p3,1)
	z[2] = round(p4,1)
	z[3] = round(p5,1)
	z[4] = round(p6,1)
	z[5] = round(p7,1)
	print(z) 

-- EXECUTION TIME:
1.10703
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[18.8  0.   0.  18.8 25.  37.5]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[ 4.  8. 16. 20. 20. 32.]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[15.4  7.7 23.1  7.7 15.4 30.8]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
