== SUBMITION (2019-04-30 12:42:34) 
-- CODE:
a=float(input(""))
b=float(input(""))
c=float(input(""))
print(a,"",b,"",c,"")

if (a+b>c)or(a+c>b)or(b+c>a):
resultado="Tipo de triangulo: invalido"
else:
	if (a=b=c):
		resultado="Tipo de triangulo: equilatero"
	else (a=b!=c)or(a!=b=c)or(c!=a=b)
		if (a!=b!=c)or(c!=a!=b)or()
invalido=(a+b>c)or()
-- EXECUTION TIME:
0.112115
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 7
    resultado="Tipo de triangulo: invalido"
            ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 12:44:49) 
-- CODE:
a=float(input(""))
b=float(input(""))
c=float(input(""))
print(a,"",b,"",c,"")

if (a+b>c)or(a+c>b)or(b+c>a):
resultado="Tipo de triangulo: invalido"
else:
	if (a=b=c):
		resultado="Tipo de triangulo: equilatero"
	else (a=b!=c)or(a!=b=c)or(c!=a=b)
	resultado="Tipo de triangulo: isosceles"
		if (a!=b!=c)or(c!=a!=b)or(b!=c!=a)
		resultado="Tipo de triangulo: escaleno"

print(ressultado)
-- EXECUTION TIME:
0.185614
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 7
    resultado="Tipo de triangulo: invalido"
            ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 12:44:56) 
-- CODE:
a=float(input(""))
b=float(input(""))
c=float(input(""))
print(a,"",b,"",c,"")

if (a+b>c)or(a+c>b)or(b+c>a):
resultado="Tipo de triangulo: invalido"
else:
	if (a=b=c):
		resultado="Tipo de triangulo: equilatero"
	else (a=b!=c)or(a!=b=c)or(c!=a=b)
	resultado="Tipo de triangulo: isosceles"
		if (a!=b!=c)or(c!=a!=b)or(b!=c!=a)
		resultado="Tipo de triangulo: escaleno"

print(resultado)
-- EXECUTION TIME:
0.188072
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 7
    resultado="Tipo de triangulo: invalido"
            ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 12:46:05) 
-- CODE:
a=float(input(""))
b=float(input(""))
c=float(input(""))
print(a,"",b,"",c,"")

if (a+b>c)or(a+c>b)or(b+c>a):
resultado="Tipo de triangulo: invalido"
else:
	if (a=b=c):
		resultado="Tipo de triangulo: equilatero"
	else:
		if (a=b!=c)or(a!=b=c)or(c!=a=b)
		resultado="Tipo de triangulo: isosceles"
		else (a!=b!=c)or(c!=a!=b)or(b!=c!=a)
		resultado="Tipo de triangulo: escaleno"

print(resultado)
-- EXECUTION TIME:
0.169789
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 7
    resultado="Tipo de triangulo: invalido"
            ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 12:46:05) 
-- CODE:
a=float(input(""))
b=float(input(""))
c=float(input(""))
print(a,"",b,"",c,"")

if (a+b>c)or(a+c>b)or(b+c>a):
resultado="Tipo de triangulo: invalido"
else:
	if (a=b=c):
		resultado="Tipo de triangulo: equilatero"
	else:
		if (a=b!=c)or(a!=b=c)or(c!=a=b)
		resultado="Tipo de triangulo: isosceles"
		else (a!=b!=c)or(c!=a!=b)or(b!=c!=a)
		resultado="Tipo de triangulo: escaleno"

print(resultado)
-- EXECUTION TIME:
0.17787
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 7
    resultado="Tipo de triangulo: invalido"
            ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 12:46:16) 
-- CODE:
a=float(input(""))
b=float(input(""))
c=float(input(""))
print(a,"",b,"",c,"")

if (a+b>c)or(a+c>b)or(b+c>a):
resultado="Tipo de triangulo: invalido"
else:
	if (a=b=c):
		resultado="Tipo de triangulo: equilatero"
	else:
		if (a=b!=c)or(a!=b=c)or(c!=a=b):
		resultado="Tipo de triangulo: isosceles"
		else (a!=b!=c)or(c!=a!=b)or(b!=c!=a):
		resultado="Tipo de triangulo: escaleno"

print(resultado)
-- EXECUTION TIME:
0.220782
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 7
    resultado="Tipo de triangulo: invalido"
            ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 12:46:19) 
-- CODE:
a=float(input(""))
b=float(input(""))
c=float(input(""))
print(a,"",b,"",c,"")

if (a+b>c)or(a+c>b)or(b+c>a):
resultado="Tipo de triangulo: invalido"
else:
	if (a=b=c):
		resultado="Tipo de triangulo: equilatero"
	else:
		if (a=b!=c)or(a!=b=c)or(c!=a=b):
		resultado="Tipo de triangulo: isosceles"
		else (a!=b!=c)or(c!=a!=b)or(b!=c!=a):
		resultado="Tipo de triangulo: escaleno"

print(resultado)
-- EXECUTION TIME:
0.136904
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 7
    resultado="Tipo de triangulo: invalido"
            ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 12:48:32) 
-- CODE:
a=float(input(""))
b=float(input(""))
c=float(input(""))
print(a,"",b,"",c,"")

if (a+b>c)or(a+c>b)or(b+c>a):
print("Tipo de triangulo: invalido")
else:
	if (a=b=c):
	print("Tipo de triangulo: equilatero")
	else:
		if (a=b!=c)or(a!=b=c)or(c!=a=b):
		print("Tipo de triangulo: isosceles")
		else (a!=b!=c)or(c!=a!=b)or(b!=c!=a):
		print("Tipo de triangulo: escaleno")

print(resultado)
-- EXECUTION TIME:
0.190915
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 7
    print("Tipo de triangulo: invalido")
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 12:49:14) 
-- CODE:
a=float(input(""))
b=float(input(""))
c=float(input(""))
print(a,"",b,"",c,"")

if (a+b>=c)or(a+c>=b)or(b+c>=a):
print("Tipo de triangulo: invalido")
else:
	if (a=b=c):
	print("Tipo de triangulo: equilatero")
	else:
		if (a=b!=c)or(a!=b=c)or(c!=a=b):
		print("Tipo de triangulo: isosceles")
		else (a!=b!=c)or(c!=a!=b)or(b!=c!=a):
		print("Tipo de triangulo: escaleno")

print(resultado)
-- EXECUTION TIME:
0.146102
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 7
    print("Tipo de triangulo: invalido")
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 12:52:46) 
-- CODE:
a=float(input(""))
b=float(input(""))
c=float(input(""))
print(a,"",b,"",c,"")

if (a+b>=c)or(a+c>=b)or(b+c>=a):
print("Tipo de triangulo: invalido")
else:
	if (a==b)or(b==c):
	print("Tipo de triangulo: equilatero")
	else:
		if (a==b)or(a==c)or(c==b):
		print("Tipo de triangulo: isosceles")
		else
		print("Tipo de triangulo: escaleno")

print(resultado)
-- EXECUTION TIME:
0.218063
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 7
    print("Tipo de triangulo: invalido")
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 12:53:43) 
-- CODE:
a=float(input(""))
b=float(input(""))
c=float(input(""))
print(a,"",b,"",c,"")

if (a+b>=c)or(a+c>=b)or(b+c>=a):
print("Tipo de triangulo: invalido")
else:
	if ((a==b)or(b==c)):
	print("Tipo de triangulo: equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
		print("Tipo de triangulo: isosceles")
		else:
		print("Tipo de triangulo: escaleno")

print(resultado)
-- EXECUTION TIME:
0.136233
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 7
    print("Tipo de triangulo: invalido")
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 12:53:47) 
-- CODE:
a=float(input(""))
b=float(input(""))
c=float(input(""))
print(a,"",b,"",c,"")

if (a+b>=c)or(a+c>=b)or(b+c>=a):
print("Tipo de triangulo: invalido")
else:
	if ((a==b)or(b==c)):
	print("Tipo de triangulo: equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
		print("Tipo de triangulo: isosceles")
		else:
		print("Tipo de triangulo: escaleno")

print(resultado)
-- EXECUTION TIME:
0.195473
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 7
    print("Tipo de triangulo: invalido")
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 12:54:03) 
-- CODE:
a=float(input(""))
b=float(input(""))
c=float(input(""))
print(a,"",b,"",c,"")

if ((a+b>=c)or(a+c>=b)or(b+c>=a)):
print("Tipo de triangulo: invalido")
else:
	if ((a==b)or(b==c)):
	print("Tipo de triangulo: equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
		print("Tipo de triangulo: isosceles")
		else:
		print("Tipo de triangulo: escaleno")

print(resultado)
-- EXECUTION TIME:
0.150252
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 7
    print("Tipo de triangulo: invalido")
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 12:54:33) 
-- CODE:
a=float(input(""))
b=float(input(""))
c=float(input(""))
print(a,"",b,"",c,"")

if ((a+b>=c)or(a+c>=b)or(b+c>=a)):
print("invalido")
else:
	if ((a==b)or(b==c)):
	print("equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
		print("isosceles")
		else:
		print("escaleno")

print(resultado)
-- EXECUTION TIME:
0.19473
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 7
    print("invalido")
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 12:55:42) 
-- CODE:
a=float(input(""))
b=float(input(""))
c=float(input(""))
print(a,"",b,"",c,"")

if ((a+b<=c)or(a+c<=b)or(b+c<=a)):
print("invalido")
else:
	if ((a==b)or(b==c)):
	print("equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
		print("isosceles")
		else:
		print("escaleno")

print(resultado)
-- EXECUTION TIME:
0.147902
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 7
    print("invalido")
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 12:55:45) 
-- CODE:
a=float(input(""))
b=float(input(""))
c=float(input(""))
print(a,"",b,"",c,"")

if ((a+b<=c)or(a+c<=b)or(b+c<=a)):
print("invalido")
else:
	if ((a==b)or(b==c)):
	print("equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
		print("isosceles")
		else:
		print("escaleno")

print(resultado)
-- EXECUTION TIME:
0.145688
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 7
    print("invalido")
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 12:55:58) 
-- CODE:
a=float(input(""))
b=float(input(""))
c=float(input(""))
print(a,"",b,"",c,"")

if ((a+b<=c)or(a+c<=b)or(b+c<=a)):
print("invalido")
else:
	if ((a==b)and(b==c)):
	print("equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
		print("isosceles")
		else:
		print("escaleno")

print(resultado)
-- EXECUTION TIME:
0.153832
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 7
    print("invalido")
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 12:56:59) 
-- CODE:
a=float(input("."))
b=float(input("."))
c=float(input("."))
print(a,".",b,".",c,".")

if ((a+b<=c)or(a+c<=b)or(b+c<=a)):
print("invalido")
else:
	if ((a==b)and(b==c)):
	print("equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
		print("isosceles")
		else:
		print("escaleno")

print(resultado)
-- EXECUTION TIME:
0.156919
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 7
    print("invalido")
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 12:58:07) 
-- CODE:
a=float(input("."))
b=float(input("."))
c=float(input("."))
print("Entradas: ",a,".",b,".",c,".")

if ((a>=b+c)or(b>=a+c)or(b+c<=a)):
print("invalido")
else:
	if ((a==b)and(b==c)):
	print("equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
		print("isosceles")
		else:
		print("escaleno")

print(resultado)
-- EXECUTION TIME:
0.175708
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 7
    print("invalido")
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 12:58:11) 
-- CODE:
a=float(input("."))
b=float(input("."))
c=float(input("."))
print("Entradas: ",a,".",b,".",c,".")

if ((a>=b+c)or(b>=a+c)or(b+c<=a)):
print("invalido")
else:
	if ((a==b)and(b==c)):
	print("equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
		print("isosceles")
		else:
		print("escaleno")

print(resultado)
-- EXECUTION TIME:
0.198932
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 7
    print("invalido")
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 12:58:36) 
-- CODE:
a=float(input("."))
b=float(input("."))
c=float(input("."))
print("Entradas: ",a,".",b,".",c,".")

if ((a>=b+c)or(b>=a+c)or(c>=b+a)):
print("invalido")
else:
	if ((a==b)and(b==c)):
	print("equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
		print("isosceles")
		else:
		print("escaleno")

print(resultado)
-- EXECUTION TIME:
0.109564
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 7
    print("invalido")
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 12:58:44) 
-- CODE:
a=float(input("."))
b=float(input("."))
c=float(input("."))
print("Entradas: ",a,".",b,".",c,".")

if ((a>=b+c)or(b>=a+c)or(c>=b+a)):
print("invalido")
else:
	if ((a==b)and(b==c)):
	print("equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
		print("isosceles")
		else:
		print("escaleno")


-- EXECUTION TIME:
0.216741
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 7
    print("invalido")
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 12:58:49) 
-- CODE:
a=float(input("."))
b=float(input("."))
c=float(input("."))
print("Entradas: ",a,".",b,".",c,".")

if ((a>=b+c)or(b>=a+c)or(c>=b+a)):
print("invalido")
else:
	if ((a==b)and(b==c)):
	print("equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
		print("isosceles")
		else:
		print("escaleno")
-- EXECUTION TIME:
0.219581
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 7
    print("invalido")
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:58:57) 
-- CODE:
a=float(input("."))
b=float(input("."))
c=float(input("."))
print("Entradas: ",a,".",b,".",c,".")

if ((a>=b+c)or(b>=a+c)or(c>=b+a)):
print("invalido")
else:
	if ((a==b)and(b==c)):
	print("equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
		print("isosceles")
		else:
		print("escaleno")
-- ERROR:
File "XXXX", line 7
    print("invalido")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 12:59:37) 
-- CODE:
a=float(input("."))
b=float(input("."))
c=float(input("."))
print("Entrada: ",a,".",b,".",c,".")

if ((a>=b+c)or(b>=a+c)or(c>=b+a)):
print("invalido")
else:
	if ((a==b)and(b==c)):
	print("equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
		print("isosceles")
		else:
		print("escaleno")
-- EXECUTION TIME:
0.134121
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 7
    print("invalido")
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 12:59:58) 
-- CODE:
a=float(input("."))
b=float(input("."))
c=float(input("."))
print("Entrada: ",a,".",b,".",c,".")

if ((a>=b+c)or(b>=a+c)or(c>=b+a)):
print("Tipo de triangulo: invalido")
else:
	if ((a==b)and(b==c)):
	print("Tipo de triangulo: equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
		print("Tipo de triangulo: isosceles")
		else:
		print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.163681
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 7
    print("Tipo de triangulo: invalido")
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 13:00:03) 
-- CODE:
a=float(input("."))
b=float(input("."))
c=float(input("."))
print("Entradas: ",a,".",b,".",c,".")

if ((a>=b+c)or(b>=a+c)or(c>=b+a)):
print("Tipo de triangulo: invalido")
else:
	if ((a==b)and(b==c)):
	print("Tipo de triangulo: equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
		print("Tipo de triangulo: isosceles")
		else:
		print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.175629
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 7
    print("Tipo de triangulo: invalido")
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 13:00:31) 
-- CODE:
a=float(input("."))
b=float(input("."))
c=float(input("."))
print("Entradas: ",a,".",b,".",c,".")

if ((a>=b+c)or(b>=a+c)or(c>=b+a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a==b)and(b==c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.159458
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 . 4.0 . 4.0 .
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 . 4.4 . 5.5 .
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 . 2.0 . 7.0 .
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 13:09:42) 
-- CODE:
a=float(input("."))
b=float(input("."))
c=float(input("."))
print("Entradas: ",a,".",b,".",c,".")

if ((a>=b+c)or(b>=a+c)or(c>=b+a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a==b)and(b==c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas:  2.0 . 4.0 . 4.0 .
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 13:10:06) 
-- CODE:
a=float(input("."))
b=float(input("."))
c=float(input("."))
print("Entradas: ",a,".",b,".",c,".")

if ((a>=b+c)or(b>=a+c)or(c>=b+a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a==b)and(b==c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.185587
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 . 4.0 . 4.0 .
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 . 4.4 . 5.5 .
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 . 2.0 . 7.0 .
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 13:15:03) 
-- CODE:
a=float(input(","))
b=float(input(",")
c=float(input(","))
print("Entradas: ",a,",",b,",",c,",")

if ((a>=b+c)or(b>=a+c)or(c>=b+a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a==b)and(b==c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.187108
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 3
    c=float(input())
    ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 13:16:07) 
-- CODE:
a=float(input(","))
b=float(input(",")
c=float(input(","))
print("Entradas: ",a,",",b,",",c,",")

if ((a>=b+c)or(b>=a+c)or(c>=b+a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a==b)and(b==c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.182266
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 3
    c=float(input())
    ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 13:16:51) 
-- CODE:
a=float(input(","))
b=float(input(",")
c=float(input(","))
print("Entradas: ",a,",",b,",",c,",")

if ((a>=b+c)or(b>=a+c)or(c>=b+a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a==b)and(b==c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- ERROR:
File "XXXX", line 3
    c=float(input())
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 13:17:06) 
-- CODE:
a=float(input(","))
b=float(input(","))
c=float(input(","))
print("Entradas: ",a,",",b,",",c,",")

if ((a>=b+c)or(b>=a+c)or(c>=b+a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a==b)and(b==c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.144727
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 , 4.0 , 4.0 ,
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 , 4.4 , 5.5 ,
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 , 2.0 , 7.0 ,
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 13:17:07) 
-- CODE:
a=float(input(","))
b=float(input(","))
c=float(input(","))
print("Entradas: ",a,",",b,",",c,",")

if ((a>=b+c)or(b>=a+c)or(c>=b+a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a==b)and(b==c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0 ,
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 13:17:31) 
-- CODE:
a=float(input(","))
b=float(input(","))
c=float(input(","))
print("Entradas: ",a,",",b,",",c,",")

if ((a>=b+c)or(b>=a+c)or(c>=b+a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a==b)and(b==c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.209376
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 , 4.0 , 4.0 ,
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 , 4.4 , 5.5 ,
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 , 2.0 , 7.0 ,
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 13:17:36) 
-- CODE:
a=float(input(","))
b=float(input(","))
c=float(input(","))
print("Entradas: ",a,",",b,",",c,",")

if ((a>=b+c)or(b>=a+c)or(c>=b+a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a==b)and(b==c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0 ,
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 13:17:45) 
-- CODE:
a=float(input(","))
b=float(input(","))
c=float(input(","))
print("Entradas: ",a,",",b,",",c,",")

if ((a>=b+c)or(b>=a+c)or(c>=b+a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a==b)and(b==c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0 ,
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 13:17:54) 
-- CODE:
a=float(input(","))
b=float(input(","))
c=float(input(","))
print("Entradas: ",a,",",b,",",c,",")

if ((a>=b+c)or(b>=a+c)or(c>=b+a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a==b)and(b==c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0 ,
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 13:18:23) 
-- CODE:
a=float(input(","))
b=float(input(","))
c=float(input(","))
print("Entradas: ",a,",",b,",",c,",")

if ((a>=b+c)or(b>=a+c)or(c>=b+a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a==b)and(b==c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0 ,
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 13:18:39) 
-- CODE:
a=float(input(","))
b=float(input(","))
c=float(input(","))
print("Entradas: ",a,",",b,",",c,",")

if ((a>=b+c)or(b>=a+c)or(c>=b+a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a==b)and(b==c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0 ,
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 13:18:48) 
-- CODE:
a=float(input(","))
b=float(input(","))
c=float(input(","))
print("Entradas: ",a,",",b,",",c,",")

if ((a>=b+c)or(b>=a+c)or(c>=b+a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a==b)and(b==c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0 ,
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 13:18:54) 
-- CODE:
a=float(input(","))
b=float(input(","))
c=float(input(","))
print("Entradas: ",a,",",b,",",c,",")

if ((a>=b+c)or(b>=a+c)or(c>=b+a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a==b)and(b==c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0 ,
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 13:20:23) 
-- CODE:
a=float(input(","))
b=float(input(","))
c=float(input(","))
print("Entradas: ",a,",",b,",",c,",")

if ((a>=b+c)or(b>=a+c)or(c>=b+a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a==b)and(b==c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
			print("Tipo de triangulo: isosceles")
		else:
			if (a!=b!=c):
			print("Tipo de triangulo: escaleno")
-- ERROR:
File "XXXX", line 16
    print("Tipo de triangulo: escaleno")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 13:20:24) 
-- CODE:
a=float(input(","))
b=float(input(","))
c=float(input(","))
print("Entradas: ",a,",",b,",",c,",")

if ((a>=b+c)or(b>=a+c)or(c>=b+a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a==b)and(b==c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
			print("Tipo de triangulo: isosceles")
		else:
			if (a!=b!=c):
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.135445
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 16
    print("Tipo de triangulo: escaleno")
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 13:21:06) 
-- CODE:
a=float(input(","))
b=float(input(","))
c=float(input(","))
print("Entradas: ",a,",",b,",",c,",")

if ((a>=b+c)or(b>=a+c)or(c>=b+a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a==b)and(b==c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
			print("Tipo de triangulo: isosceles")
		else:
			if (a!=b)or(b!=c)or(c!=a)
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.16154
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 15
    if (a!=b)or(b!=c)or(c!=a)
                            ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 13:21:10) 
-- CODE:
a=float(input(","))
b=float(input(","))
c=float(input(","))
print("Entradas: ",a,",",b,",",c,",")

if ((a>=b+c)or(b>=a+c)or(c>=b+a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a==b)and(b==c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
			print("Tipo de triangulo: isosceles")
		else:
			if (a!=b)or(b!=c)or(c!=a):
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.169932
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 16
    print("Tipo de triangulo: escaleno")
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 13:21:28) 
-- CODE:
a=float(input(","))
b=float(input(","))
c=float(input(","))
print("Entradas: ",a,",",b,",",c,",")

if ((a>=b+c)or(b>=a+c)or(c>=b+a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a==b)and(b==c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
			print("Tipo de triangulo: isosceles")
		else:
			if (a!=b)or(b!=c)or(c!=a):
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.114982
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 16
    print("Tipo de triangulo: escaleno")
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 13:21:34) 
-- CODE:
a=float(input(","))
b=float(input(","))
c=float(input(","))
print("Entradas: ",a,",",b,",",c,",")

if ((a>=b+c)or(b>=a+c)or(c>=b+a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a==b)and(b==c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
			print("Tipo de triangulo: isosceles")
		else:
			if (a!=b)or(b!=c)or(c!=a):
			print("Tipo de triangulo: escaleno")
-- ERROR:
File "XXXX", line 16
    print("Tipo de triangulo: escaleno")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 13:22:17) 
-- CODE:
a=float(input(","))
b=float(input(","))
c=float(input(","))
print("Entradas: ",a,",",b,",",c,",")

if ((a>=b+c)or(b>=a+c)or(c>=b+a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a==b)and(b==c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
			print("Tipo de triangulo: isosceles")
		else:
			if (a!=b)or(b!=c)or(c!=a):
			print("Tipo de triangulo: escaleno")
-- ERROR:
File "XXXX", line 16
    print("Tipo de triangulo: escaleno")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 15:48:12) 
-- CODE:
a=float(input(","))
b=float(input(","))
c=float(input(","))
print("Entradas: ",a,",",b,",",c,",")

if ((a>=b+c)or(b>=a+c)or(c>=b+a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a==b)and(b==c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
			print("Tipo de triangulo: isosceles")
		else:
			if (a!=b)or(b!=c)or(c!=a):
			print("Tipo de triangulo: escaleno")
-- ERROR:
File "XXXX", line 16
    print("Tipo de triangulo: escaleno")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 15:48:41) 
-- CODE:
a=float(input(","))
b=float(input(","))
c=float(input(","))
print("Entradas: ",a,",",b,",",c,",")

if ((a>=b+c)or(b>=a+c)or(c>=b+a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a==b)and(b==c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
			print("Tipo de triangulo: isosceles")
		else:
			if (a!=b)or(b!=c):
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.198669
-- ERROR:
  File "/home/codebench/codes/1679/1099/main.py", line 16
    print("Tipo de triangulo: escaleno")
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 15:54:32) 
-- CODE:
a=float(input(","))
b=float(input(","))
c=float(input(","))
print("Entradas: ",a,",",b,",",c,",")

if ((a>=b+c)or(b>=a+c)or(c>=b+a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a==b)and(b==c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.147844
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 , 4.0 , 4.0 ,
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 , 4.4 , 5.5 ,
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 , 2.0 , 7.0 ,
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 15:57:52) 
-- CODE:
a=float(input(","))
b=float(input(","))
c=float(input(","))
print("Entradas: ",a,",",b,",",c,",")

if ((a>=b+c)or(b>=a+c)or(c>=b+a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a==b)and(b==c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
			print("Tipo de triangulo: isosceles")
		else:
			if (a!=b)or(b!=c):
			print("Tipo de triangulo: escaleno")
-- ERROR:
File "XXXX", line 16
    print("Tipo de triangulo: escaleno")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 15:57:59) 
-- CODE:
a=float(input(","))
b=float(input(","))
c=float(input(","))
print("Entradas: ",a,",",b,",",c,",")

if ((a>=b+c)or(b>=a+c)or(c>=b+a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a==b)and(b==c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
			print("Tipo de triangulo: isosceles")
		else:
			if (a!=b)or(b!=c):
			print("Tipo de triangulo: escaleno")
-- ERROR:
File "XXXX", line 16
    print("Tipo de triangulo: escaleno")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 15:59:03) 
-- CODE:
a=float(input(","))
b=float(input(","))
c=float(input(","))
print("Entradas: ",a,",",b,",",c,",")

if ((a>=b+c)or(b>=a+c)or(c>=b+a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a==b)and(b==c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
			print("Tipo de triangulo: isosceles")
		else:
			if (a!=b)or(b!=c):
				print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.143437
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 , 4.0 , 4.0 ,
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 , 4.4 , 5.5 ,
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 , 2.0 , 7.0 ,
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 15:59:07) 
-- CODE:
a=float(input(","))
b=float(input(","))
c=float(input(","))
print("Entradas: ",a,",",b,",",c,",")

if ((a>=b+c)or(b>=a+c)or(c>=b+a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a==b)and(b==c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
			print("Tipo de triangulo: isosceles")
		else:
			if (a!=b)or(b!=c):
				print("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0 ,
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 15:59:34) 
-- CODE:
a=float(input(","))
b=float(input(","))
c=float(input(","))
print("Entradas: ",a,",",b,",",c,",")

if ((a>=b+c)or(b>=a+c)or(c>=b+a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a==b)and(b==c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
			print("Tipo de triangulo: isosceles")
		else:
			if (a!=b)or(b!=c):
				print("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0 ,
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 15:59:41) 
-- CODE:
a=float(input(","))
b=float(input(","))
c=float(input(","))
print("Entradas: ",a,",",b,",",c,",")

if ((a>=b+c)or(b>=a+c)or(c>=b+a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a==b)and(b==c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
			print("Tipo de triangulo: isosceles")
		else:
			if (a!=b)or(b!=c):
				print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.134243
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 , 4.0 , 4.0 ,
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 , 4.4 , 5.5 ,
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 , 2.0 , 7.0 ,
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:01:16) 
-- CODE:
a=float(input(","))
b=float(input(","))
c=float(input(","))
print("Entradas: ",a,",",b,",",c,",")

if ((a>=b+c)or(b>=a+c)or(c>=b+a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a==b)and(b==c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.181035
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 , 4.0 , 4.0 ,
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 , 4.4 , 5.5 ,
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 , 2.0 , 7.0 ,
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:01:19) 
-- CODE:
a=float(input(","))
b=float(input(","))
c=float(input(","))
print("Entradas: ",a,",",b,",",c,",")

if ((a>=b+c)or(b>=a+c)or(c>=b+a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a==b)and(b==c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.133163
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 , 4.0 , 4.0 ,
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 , 4.4 , 5.5 ,
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 , 2.0 , 7.0 ,
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 21:03:00) 
-- CODE:
a=float(input(","))
b=float(input(","))
c=float(input(","))
print("Entradas: ",a,",",b,",",c,",")

if ((a>=b+c)or(b>=a+c)or(c>=b+a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a==b)and(b==c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a==b)or(a==c)or(c==b)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0 ,
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
