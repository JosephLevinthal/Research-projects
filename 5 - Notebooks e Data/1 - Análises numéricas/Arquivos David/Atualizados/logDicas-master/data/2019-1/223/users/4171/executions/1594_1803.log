== TEST (2019-03-20 20:37:41) 
-- CODE:
d1 = int(input("primeiro digito"))
d2 = int(input("segundo digito"))
d3 = int(input("terceiro digito"))
d4 = int(input("quarto digito"))

dv = ((d1*2 + d2*3 + d3*4 + d4*5)%11)

print(dv)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    d2 = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 20:37:50) 
-- CODE:
d1 = int(input("primeiro digito"))
d2 = int(input("segundo digito"))
d3 = int(input("terceiro digito"))
d4 = int(input("quarto digito"))

dv = ((d1*2 + d2*3 + d3*4 + d4*5)%11)

print(dv)
-- EXECUTION TIME:
0.122224
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1594/1803/main.py", line 2, in <module>
    d2 = int(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 20:38:49) 
-- CODE:
d1 = int(input("primeiro digito:"))
d2 = int(input("segundo digito:"))
d3 = int(input("terceiro digito:"))
d4 = int(input("quarto digito:"))

somatorio = (d1*2 + d2*3 + d3*4 + d4*5)
dv = (somatorio // 11)


print(dv)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    d2 = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 20:38:54) 
-- CODE:
d1 = int(input("primeiro digito:"))
d2 = int(input("segundo digito:"))
d3 = int(input("terceiro digito:"))
d4 = int(input("quarto digito:"))

somatorio = (d1*2 + d2*3 + d3*4 + d4*5)
dv = (somatorio // 11)


print(dv)
-- EXECUTION TIME:
0.178036
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1594/1803/main.py", line 2, in <module>
    d2 = int(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 20:39:01) 
-- CODE:
d1 = int(input("primeiro digito:"))
d2 = int(input("segundo digito:"))
d3 = int(input("terceiro digito:"))
d4 = int(input("quarto digito:"))

somatorio = (d1*2 + d2*3 + d3*4 + d4*5)
dv = (somatorio // 11)


print(dv)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    d2 = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 20:39:40) 
-- CODE:
d1 = int(input("primeiro digito:"),(input("segundo digito:"),(input("segundo digito:"),(input("segundo digito:"))

somatorio = (d1*2 + d2*3 + d3*4 + d4*5)
dv = (somatorio // 11)


print(dv)
-- ERROR:
File "XXXX", line 3
    somatorio = (d1*2 + d2*3 + d3*4 + d4*5)
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 20:40:39) 
-- CODE:
d1 = int(input("primeiro digito:"))
d2 = int(input("segundo digito:"))
d3 = int(input("terceiro digito:"))
d4 = int(input("quarto digito:"))

somatorio = (d1*2 + d2*3 + d3*4 + d4*5)
dv = (somatorio % 11)


print(dv)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    d2 = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 20:40:46) 
-- CODE:
d1 = int(input("primeiro digito:"))
d2 = int(input("segundo digito:"))
d3 = int(input("terceiro digito:"))
d4 = int(input("quarto digito:"))

somatorio = (d1*2 + d2*3 + d3*4 + d4*5)
dv = (somatorio % 11)


print(dv)
-- EXECUTION TIME:
0.119391
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1594/1803/main.py", line 2, in <module>
    d2 = int(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 20:40:50) 
-- CODE:
d1 = int(input("primeiro digito:"))
d2 = int(input("segundo digito:"))
d3 = int(input("terceiro digito:"))
d4 = int(input("quarto digito:"))

somatorio = (d1*2 + d2*3 + d3*4 + d4*5)
dv = (somatorio % 11)


print(dv)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    d2 = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 20:40:58) 
-- CODE:
d1 = int(input("primeiro digito:"))
d2 = int(input("segundo digito:"))
d3 = int(input("terceiro digito:"))
d4 = int(input("quarto digito:"))

somatorio = (d1*2 + d2*3 + d3*4 + d4*5)
dv = (somatorio // 11)


print(dv)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    d2 = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 20:41:02) 
-- CODE:
d1 = int(input("primeiro digito:"))
d2 = int(input("segundo digito:"))
d3 = int(input("terceiro digito:"))
d4 = int(input("quarto digito:"))

somatorio = (d1*2 + d2*3 + d3*4 + d4*5)
dv = (somatorio // 11)


print(dv)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    d2 = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 20:43:03) 
-- CODE:
d1 = int(input("quatro digitos:"))
d1.split(,) 
-- ERROR:
File "XXXX", line 2
    d1.split(,) 
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 20:43:22) 
-- CODE:
d1 = int(input("quatro digitos:"))
d1.split(",") 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    d1.split(",") 
AttributeError: 'int' object has no attribute 'split'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 20:43:32) 
-- CODE:
d1 = (input("quatro digitos:"))
d1.split(",") 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    d1.split(",") 
AttributeError: 'int' object has no attribute 'split'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 20:43:42) 
-- CODE:
d1 = (input("quatro digitos:"))
d1.split(",") 
print(d1.split)
-- OUTPUT:
<built-in method split of str object at 0x7f2a7f86f5e0>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 20:43:58) 
-- CODE:
d1 = (input("quatro digitos:"))
d1.split(",") 
print(d1)
-- OUTPUT:
2000
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 20:44:18) 
-- CODE:
d1 = (input("quatro digitos:"))
d1.split(",") 
a,b,c = d1.split(",")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    a,b,c = d1.split(",")
ValueError: not enough values to unpack (expected 3, got 1)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 20:44:29) 
-- CODE:
d1 = (input("quatro digitos:"))
d1.split("") 
a,b,c = d1.split(",")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    d1.split("") 
ValueError: empty separator
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 20:44:36) 
-- CODE:
d1 = (input("quatro digitos:"))
d1.split(" ") 
a,b,c = d1.split(",")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    a,b,c = d1.split(",")
ValueError: not enough values to unpack (expected 3, got 1)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 20:44:38) 
-- CODE:
d1 = (input("quatro digitos:"))
d1.split(" ") 
a,b,c = d1.split(",")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    a,b,c = d1.split(",")
ValueError: not enough values to unpack (expected 3, got 1)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 00:33:33) 
-- CODE:
d1 = (input("quatro digitos:"))


somatorio = (d1*2 + d2*3 + d3*4 + d4*5)
dv = (somatorio // 11)


print(dv)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    somatorio = (d1*2 + d2*3 + d3*4 + d4*5)
NameError: name 'd2' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 00:39:01) 
-- CODE:
d1 = (input("quatro digitos:"))



somatorio = (d1*2 + d2*3 + d3*4 + d4*5)
dv = (somatorio // 11)


print(dv)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    somatorio = (d1*2 + d2*3 + d3*4 + d4*5)
NameError: name 'd2' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 00:39:20) 
-- CODE:
d1 = (input("quatro digitos:"))

print(d1[1])

somatorio = (d1*2 + d2*3 + d3*4 + d4*5)
dv = (somatorio // 11)


print(dv)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    somatorio = (d1*2 + d2*3 + d3*4 + d4*5)
NameError: name 'd2' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 00:39:33) 
-- CODE:
d1 = (input("quatro digitos:"))

print(d1[1])

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    somatorio = (d1*2 + d2*3 + d3*4 + d4*5)
NameError: name 'd2' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 00:42:06) 
-- CODE:
d1 = (input("quatro digitos:"))

print(d1[1])

x = d1[1]*5 + d1 [2]*4 + d1[3]*3 + d1[4]*2
print(x)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    x = d1[1]*5 + d1 [2]*4 + d1[3]*3 + d1[4]*2
IndexError: string index out of range
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 00:42:33) 
-- CODE:
d1 = (input("quatro digitos:"))

print(d1[1])

x = d1[0]*5 + d1 [1]*4 + d1[2]*3 + d1[3]*2
print(x)
-- OUTPUT:
0
22222000000000
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 00:43:38) 
-- CODE:
d1 = (input("quatro digitos:"))

a = d1[0]
b = d1[1]
c = d1[2]
d = d1[3]

x = a*5 + b*4 + c*3 + d*2

print(x)
-- EXECUTION TIME:
0.135022
-- TEST CASE 1:
---- input:
2000
---- correct output:
10
---- user output:
22222000000000
-- TEST CASE 2:
---- input:
3550
---- correct output:
6
---- user output:
33333555555500
-- TEST CASE 3:
---- input:
0007
---- correct output:
3
---- user output:
00000000000077
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 00:43:39) 
-- CODE:
d1 = (input("quatro digitos:"))

a = d1[0]
b = d1[1]
c = d1[2]
d = d1[3]

x = a*5 + b*4 + c*3 + d*2

print(x)
-- OUTPUT:
22222000000000
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 00:45:33) 
-- CODE:
d1 = (input("quatro digitos:"))

a = d1[0]
b = d1[1]
c = d1[2]
d = d1[3]

x = a*5 + b*4 + c*3 + (d*2)

print(x)
-- OUTPUT:
22222000000000
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 00:45:49) 
-- CODE:
d1 = (input("quatro digitos:"))

a = d1[0]
b = int(d1[1])
c = d1[2]
d = d1[3]

x = a*5 + b*4 + c*3 + d*2

print(x)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    x = a*5 + b*4 + c*3 + d*2
TypeError: must be str, not int
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 00:46:04) 
-- CODE:
d1 = (input("quatro digitos:"))

a = d1[0]
b = d1[1]
c = d1[2]
d = d1[3]

x = int(a*5) + b*4 + c*3 + d*2

print(x)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    x = int(a*5) + b*4 + c*3 + d*2
TypeError: unsupported operand type(s) for +: 'int' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 00:46:14) 
-- CODE:
d1 = (input("quatro digitos:"))

a = d1[0]
b = d1[1]
c = d1[2]
d = d1[3]

x = int(a)(*5) + b*4 + c*3 + d*2

print(x)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    x = int(a)(*5) + b*4 + c*3 + d*2
TypeError: int object argument after * must be an iterable, not int
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 00:47:24) 
-- CODE:
d1 = (input("quatro digitos:"))

a = d1[0]
b = d1[1]
c = d1[2]
d = d1[3]

dv = a*5 + b*4 + c*3 + d*2

print(x)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(x)
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 00:47:29) 
-- CODE:
d1 = (input("quatro digitos:"))

a = d1[0]
b = d1[1]
c = d1[2]
d = d1[3]

dv = a*5 + b*4 + c*3 + d*2

print(dv)
-- OUTPUT:
22222000000000
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 00:47:58) 
-- CODE:
d1 = (input("quatro digitos:"))

a = d1[0]
b = d1[1]
c = d1[2]
d = d1[3]

dv = a+a+a+a+a + b+b+b+b + c+c+c + d+d

print(dv)
-- EXECUTION TIME:
0.203777
-- TEST CASE 1:
---- input:
2000
---- correct output:
10
---- user output:
22222000000000
-- TEST CASE 2:
---- input:
3550
---- correct output:
6
---- user output:
33333555555500
-- TEST CASE 3:
---- input:
0007
---- correct output:
3
---- user output:
00000000000077
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 00:47:59) 
-- CODE:
d1 = (input("quatro digitos:"))

a = d1[0]
b = d1[1]
c = d1[2]
d = d1[3]

dv = a+a+a+a+a + b+b+b+b + c+c+c + d+d

print(dv)
-- OUTPUT:
22222000000000
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 00:48:15) 
-- CODE:
d1 = int(input("quatro digitos:"))

a = d1[0]
b = d1[1]
c = d1[2]
d = d1[3]

dv = a+a+a+a+a + b+b+b+b + c+c+c + d+d

print(dv)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    a = d1[0]
TypeError: 'int' object is not subscriptable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 00:48:57) 
-- CODE:
d1 = int(input("quatro digitos:"))


x = d1[1]*5 + d1 [2]*4 + d1[3]*3 + d1[4]*2

print(x)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    x = d1[1]*5 + d1 [2]*4 + d1[3]*3 + d1[4]*2
TypeError: 'int' object is not subscriptable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 00:49:07) 
-- CODE:
d1 = int(input("quatro digitos:"))


x = int(d1[1]*5) + d1 [2]*4 + d1[3]*3 + d1[4]*2

print(x)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    x = int(d1[1]*5) + d1 [2]*4 + d1[3]*3 + d1[4]*2
TypeError: 'int' object is not subscriptable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 00:58:28) 
-- CODE:
d1 = int(input("quatro digitos:"))


x = d1[1]*5 + d1 [2]*4 + d1[3]*3 + d1[4]*2

print(x)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    x = d1[1]*5 + d1 [2]*4 + d1[3]*3 + d1[4]*2
TypeError: 'int' object is not subscriptable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:27:49) 
-- CODE:
d1 = int(input("quatro digitos:"))
print(type(d1))

x = d1[1]*5 + d1 [2]*4 + d1[3]*3 + d1[4]*2

print(x)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    x = d1[1]*5 + d1 [2]*4 + d1[3]*3 + d1[4]*2
TypeError: 'int' object is not subscriptable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:28:00) 
-- CODE:
d1 = int(input("quatro digitos:"))
print(type(d1))


-- OUTPUT:
<class 'int'>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:28:42) 
-- CODE:
d1 = int(input("quatro digitos:"))
print(type(d1))

print(d1(0))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(d1(0))
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:28:53) 
-- CODE:
d1 = int(input("quatro digitos:"))
print(type(d1))

print(d1[0])		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(d1[0])		
TypeError: 'int' object is not subscriptable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:29:04) 
-- CODE:
d1 = int(input("quatro digitos:"))

d1[0]
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    d1[0]
TypeError: 'int' object is not subscriptable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:29:17) 
-- CODE:
d1 = float(input("quatro digitos:"))
	
d1[0]
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    d1[0]
TypeError: 'float' object is not subscriptable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:29:31) 
-- CODE:
d1 = (input("quatro digitos:"))
	
print(d1[0])
-- OUTPUT:
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:29:43) 
-- CODE:
d1 = (input("quatro digitos:"))
	
print(int(d1[0])
-- ERROR:
File "XXXX", line 4
    
                    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:30:17) 
-- CODE:
d1 = (input("quatro digitos:"))
	
print(d1[0])

int(d1[0])

print(d1[0]*2)
-- OUTPUT:
2
22
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:30:32) 
-- CODE:
d1 = (input("quatro digitos:"))
	
print(d1[0])

print(d1[0]*2)
-- OUTPUT:
2
22
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:15:05) 
-- CODE:
n = int(input("quatro digitos: "))

soma = 0

while (n > 0):
	resto = n % 10
	n = n // 10
	soma = soma + resto

digito = soma % 11
		
print(digito)
-- OUTPUT:
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 14:15:09) 
-- CODE:
n = int(input("quatro digitos: "))

soma = 0

while (n > 0):
	resto = n % 10
	n = n // 10
	soma = soma + resto

digito = soma % 11
		
print(digito)
-- EXECUTION TIME:
0.154092
-- TEST CASE 1:
---- input:
2000
---- correct output:
10
---- user output:
2
-- TEST CASE 2:
---- input:
3550
---- correct output:
6
---- user output:
2
-- TEST CASE 3:
---- input:
0007
---- correct output:
3
---- user output:
7
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:17:48) 
-- CODE:
n = int(input("quatro digitos: "))

soma = 0

while (n > 0):
	resto = n % 10
	n = n // 10
	soma = soma + resto

digito = soma % 11
		
print(resto)
-- OUTPUT:
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 18:33:05) 
-- CODE:
n = int(input("quatro digitos: "))

a = n // 1000 (% 10)
print(a)
-- ERROR:
File "XXXX", line 3
    a = n // 1000 (% 10)
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 18:33:10) 
-- CODE:
n = int(input("quatro digitos: "))

a = n // 1000 % 10
print(a)
-- OUTPUT:
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 18:33:13) 
-- CODE:
n = int(input("quatro digitos: "))

a = n // 1000 % 10
print(a)
-- OUTPUT:
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 18:33:16) 
-- CODE:
n = int(input("quatro digitos: "))

a = n // 1000 % 10
print(a)
-- OUTPUT:
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 18:33:50) 
-- CODE:
n = int(input("quatro digitos: "))


a = n // 1000 % 10 # primeiro digito
b = n // 100 % 10
print(b)
-- OUTPUT:
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 18:34:07) 
-- CODE:
n = int(input("quatro digitos: "))


a = n // 1000 % 10 # primeiro digito
b = n // 100 % 10 # segundo digito
c = n // 10 % 10
print(c)
-- OUTPUT:
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 18:34:19) 
-- CODE:
n = int(input("quatro digitos: "))


a = n // 1000 % 10 # primeiro digito
b = n // 100 % 10 # segundo digito
c = n // 10 % 10 # terceiro digito
d = n % 10
print(c)
-- OUTPUT:
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 18:34:22) 
-- CODE:
n = int(input("quatro digitos: "))


a = n // 1000 % 10 # primeiro digito
b = n // 100 % 10 # segundo digito
c = n // 10 % 10 # terceiro digito
d = n % 10
print(d)
-- OUTPUT:
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 18:37:35) 
-- CODE:
n = int(input("Conta bancaria: "))

n1 = n // 1000 % 10  # primeiro digito
n2 = n // 100 % 10  # segundo digito
n3 = n // 10 % 10  # terceiro digito
n4 = n // 1 % 10  # quarto digito

somadig = (n1 * 5 + n2 * 4 + n3 * 3 + n4 * 2)
digver = somadig % 11

print(digver)

-- EXECUTION TIME:
0.167893
-- TEST CASE 1:
---- input:
2000
---- correct output:
10
---- user output:
10
-- TEST CASE 2:
---- input:
3550
---- correct output:
6
---- user output:
6
-- TEST CASE 3:
---- input:
0007
---- correct output:
3
---- user output:
3
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
