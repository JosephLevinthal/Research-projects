== TEST (2019-03-21 16:09:54) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input("Qual o valor unitario do jogo? "))

# Calculo do valor a ser pago, incluindo o frete:
total = ?????

# Impressao do valor total:
print(total)
-- ERROR:
File "XXXX", line 8
    total = ?????
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:10:02) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input("Qual o valor unitario do jogo? "))

# Calculo do valor a ser pago, incluindo o frete:
total = var

# Impressao do valor total:
print(total)
-- OUTPUT:
1.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:10:39) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(100.0))

# Calculo do valor a ser pago, incluindo o frete:
total = var

# Impressao do valor total:
print(total)
-- OUTPUT:
100.01.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:11:12) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(100.0*8+45))

# Calculo do valor a ser pago, incluindo o frete:
total = var

# Impressao do valor total:
print(total)
-- OUTPUT:
845.01.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 16:11:15) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(100.0*8+45))

# Calculo do valor a ser pago, incluindo o frete:
total = var

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.186615
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
845.01.23
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
845.0356.0
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
845.0123987.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:11:54) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(100.0*8+45))

# Calculo do valor a ser pago, incluindo o frete:
total = var

# Impressao do valor total:
print(total)
-- OUTPUT:
845.01.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 16:13:32) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(100.0*8+45))

# Calculo do valor a ser pago, incluindo o frete:
total = var

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.121895
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
845.01.23
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
845.0356.0
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
845.0123987.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:13:33) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(100.0*8+45))

# Calculo do valor a ser pago, incluindo o frete:
total = var

# Impressao do valor total:
print(total)
-- OUTPUT:
845.01.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:15:06) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(100.0*8))
var1 = float(input(45))
# Calculo do valor a ser pago, incluindo o frete:
total = var + var1

# Impressao do valor total:
print(total)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    var1 = float(input(45))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:15:19) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(100.0*8))
var = float(input(45))
# Calculo do valor a ser pago, incluindo o frete:
total = var

# Impressao do valor total:
print(total)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    var = float(input(45))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:16:49) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(100.0)(100.0*8+45))

# Calculo do valor a ser pago, incluindo o frete:
total = var

# Impressao do valor total:
print(total)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var = float(input(100.0)(100.0*8+45))
TypeError: 'str' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:17:03) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(100.0*8+45))

# Calculo do valor a ser pago, incluindo o frete:
total = var

# Impressao do valor total:
print(total)
-- OUTPUT:
845.01.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 16:17:05) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(100.0*8+45))

# Calculo do valor a ser pago, incluindo o frete:
total = var

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.144833
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
845.01.23
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
845.0356.0
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
845.0123987.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:17:05) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(100.0*8+45))

# Calculo do valor a ser pago, incluindo o frete:
total = var

# Impressao do valor total:
print(total)
-- OUTPUT:
845.01.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:18:24) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(Estanislau deseja comprar 08 jogos para seu console favorito. O preço varia de um site para o outro, mas é sempre igual para todos os títulos. O valor do frete é fixo e custa R$45,00.))

# Calculo do valor a ser pago, incluindo o frete:
total = var

# Impressao do valor total:
print(total)
-- ERROR:
File "XXXX", line 5
    var = float(input(Estanislau deseja comprar 08 jogos para seu console favorito. O preço varia de um site para o outro, mas é sempre igual para todos os títulos. O valor do frete é fixo e custa R$45,00.))
                                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:18:47) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(100.0*8+45))

# Calculo do valor a ser pago, incluindo o frete:
total = var

# Impressao do valor total:
print(total)
-- OUTPUT:
845.01.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:26:40) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(100.0))

# Calculo do valor a ser pago, incluindo o frete:
total = var

# Impressao do valor total:
print(total)
-- OUTPUT:
100.01.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:26:58) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(100.0))

# Calculo do valor a ser pago, incluindo o frete:
total = var*8+45

# Impressao do valor total:
print(total)
-- OUTPUT:
100.054.84
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:27:13) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(100.0))

# Calculo do valor a ser pago, incluindo o frete:
total = (var*8)+45

# Impressao do valor total:
print(total)
-- OUTPUT:
100.054.84
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:27:21) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(100.0))

# Calculo do valor a ser pago, incluindo o frete:
total = (100.0*8)+45

# Impressao do valor total:
print(total)
-- OUTPUT:
100.0845.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:27:38) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(100.0))

# Calculo do valor a ser pago, incluindo o frete:
total = 100.0*8+45

# Impressao do valor total:
print(total)
-- OUTPUT:
100.0845.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:27:44) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(100.0))

# Calculo do valor a ser pago, incluindo o frete:
total = 100.0*8
# Impressao do valor total:
print(total)
-- OUTPUT:
100.0800.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:27:56) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(100.0*8))

# Calculo do valor a ser pago, incluindo o frete:
total = 
# Impressao do valor total:
print(total)
-- ERROR:
File "XXXX", line 8
    total = 
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:28:01) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(100.0*8))

# Calculo do valor a ser pago, incluindo o frete:
total = var
# Impressao do valor total:
print(total)
-- OUTPUT:
800.01.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:28:06) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(100.0*8))

# Calculo do valor a ser pago, incluindo o frete:
total = var+45
# Impressao do valor total:
print(total)
-- OUTPUT:
800.046.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:28:22) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(100.0*8))

# Calculo do valor a ser pago, incluindo o frete:
total = 800+45
# Impressao do valor total:
print(total)
-- OUTPUT:
800.0845
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:29:15) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input("Cem"))

# Calculo do valor a ser pago, incluindo o frete:
total = var
# Impressao do valor total:
print(total)
-- OUTPUT:
1.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:29:41) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(in((input("Cem")))

# Calculo do valor a ser pago, incluindo o frete:
total = var
# Impressao do valor total:
print(total)
-- ERROR:
File "XXXX", line 5
    var = float(in((input()))
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:29:47) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(in((input("Cem"))

# Calculo do valor a ser pago, incluindo o frete:
total = var
# Impressao do valor total:
print(total)
-- ERROR:
File "XXXX", line 5
    var = float(in((input())
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:29:54) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input("Cem"))

# Calculo do valor a ser pago, incluindo o frete:
total = var
# Impressao do valor total:
print(total)
-- OUTPUT:
1.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:30:49) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(100.0)input(8*45))

# Calculo do valor a ser pago, incluindo o frete:
total = var
# Impressao do valor total:
print(total)
-- ERROR:
File "XXXX", line 5
    var = float(input(100.0)input(8*45))
                                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:31:07) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(100.0)input((8*45))

# Calculo do valor a ser pago, incluindo o frete:
total = var
# Impressao do valor total:
print(total)
-- ERROR:
File "XXXX", line 5
    var = float(input(100.0)input((8*45))
                                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:31:14) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(100.0))input((8*45))

# Calculo do valor a ser pago, incluindo o frete:
total = var
# Impressao do valor total:
print(total)
-- ERROR:
File "XXXX", line 5
    var = float(input(100.0))input((8*45))
                                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:31:27) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float((input(100.0))input((8*45))

# Calculo do valor a ser pago, incluindo o frete:
total = var
# Impressao do valor total:
print(total)
-- ERROR:
File "XXXX", line 5
    var = float((input(100.0))input((8*45))
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:31:38) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(100.0))

# Calculo do valor a ser pago, incluindo o frete:
total = var
# Impressao do valor total:
print(total)
-- OUTPUT:
100.01.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:32:57) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(100.0*8))

# Calculo do valor a ser pago, incluindo o frete:
total = 800+45
# Impressao do valor total:
print(total)
-- OUTPUT:
800.0845
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:33:12) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(100.0))

# Calculo do valor a ser pago, incluindo o frete:
total = 845
# Impressao do valor total:
print(total)
-- OUTPUT:
100.0845
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:33:26) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(100.0*8+45))

# Calculo do valor a ser pago, incluindo o frete:
total = 845
# Impressao do valor total:
print(total)
-- OUTPUT:
845.0845
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 16:33:29) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(100.0*8+45))

# Calculo do valor a ser pago, incluindo o frete:
total = 845
# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.165635
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
845.0845
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
845.0845
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
845.0845
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:33:33) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(100.0*8+45))

# Calculo do valor a ser pago, incluindo o frete:
total = var
# Impressao do valor total:
print(total)
-- OUTPUT:
845.01.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 16:33:35) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(100.0*8+45))

# Calculo do valor a ser pago, incluindo o frete:
total = var
# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.168774
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
845.01.23
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
845.0356.0
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
845.0123987.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:34:37) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float("Cem")

# Calculo do valor a ser pago, incluindo o frete:
total = var
# Impressao do valor total:
print(total)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var = float("Cem")
ValueError: could not convert string to float: 'Cem'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:34:42) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float("Cem")

# Calculo do valor a ser pago, incluindo o frete:
total = var
# Impressao do valor total:
print(total)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var = float("Cem")
ValueError: could not convert string to float: 'Cem'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:34:54) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
float("Cem")

# Calculo do valor a ser pago, incluindo o frete:
total = var
# Impressao do valor total:
print(total)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    float("Cem")
ValueError: could not convert string to float: 'Cem'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:34:59) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
float(Cem)

# Calculo do valor a ser pago, incluindo o frete:
total = var
# Impressao do valor total:
print(total)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    float(Cem)
NameError: name 'Cem' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:35:32) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(100.0*8+45))

# Calculo do valor a ser pago, incluindo o frete:
total = var
# Impressao do valor total:
print(total)
-- OUTPUT:
845.01.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:40:12) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(100.0*8+45))

# Calculo do valor a ser pago, incluindo o frete:
total = var
# Impressao do valor total:
print(total)
-- OUTPUT:
845.01.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 17:05:18) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input("Qual o valor unitario do jogo? "))

# Calculo do valor a ser pago, incluindo o frete:
total = var
# Impressao do valor total:
print(total)
-- OUTPUT:
1.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 17:07:55) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input("Qual o valor unitario do jogo? "))

# Calculo do valor a ser pago, incluindo o frete:
total = (var*8)+45
# Impressao do valor total:
print(total)
-- OUTPUT:
54.84
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 17:08:01) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input("Qual o valor unitario do jogo? "))

# Calculo do valor a ser pago, incluindo o frete:
total = (var*8)+45
# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.155884
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
54.84
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
2893.0
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
991941.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
