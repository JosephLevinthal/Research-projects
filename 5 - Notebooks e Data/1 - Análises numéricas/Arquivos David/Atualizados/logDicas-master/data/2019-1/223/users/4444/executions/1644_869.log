== TEST (2019-04-11 16:30:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
valor_de_compra=float(input("valor da compra:  ")
if (valor_de_compra >=200;valor_compra *.95):

else:
	

print(mensagem)
					 
-- ERROR:
File "XXXX", line 5
    if (valor_de_compra >=200;valor_compra *.95):
                             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:32:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
valor_de_compra=float(input("valor da compra:  ")
if (valor_de_compra >=200)
	novovalor= valor_de_compra*(.95)
else:
	valor_de_compra
print(valor_de_compra)
					 
-- ERROR:
File "XXXX", line 6
    novovalor= valor_de_compra*(.95)
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:33:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
valor_de_compra=float(input("valor da compra:  ")
if (valor_de_compra >=200):
	novovalor= valor_de_compra*(.95)
else:
	valor_de_compra
print(valor_de_compra)
					 
-- ERROR:
File "XXXX", line 5
    if (valor_de_compra >=200):
                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:33:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
valor_de_compra=float(input("valor da compra:  ")
if (valor_de_compra >=200):
	novovalor = valor_de_compra*(.95)
else:
	valor_de_compra
print(valor_de_compra)
					 
-- ERROR:
File "XXXX", line 5
    if (valor_de_compra >=200):
                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:33:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
valor_de_compra=float(input("valor da compra:  ")
if (valor_de_compra >=200):
	novovalor = .95 * valor_de_compra
else:
	valor_de_compra
print(valor_de_compra)
					 
-- ERROR:
File "XXXX", line 5
    if (valor_de_compra >=200):
                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:33:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
valor_de_compra = float(input("valor da compra:  ")
if (valor_de_compra >=200):
	novovalor = .95 * valor_de_compra
else:
	valor_de_compra
print(valor_de_compra)
					 
-- ERROR:
File "XXXX", line 5
    if (valor_de_compra >=200):
                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 16:34:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
valor_de_compra = float(input("valor da compra:  "))
if (valor_de_compra >=200):
	novovalor = .95 * valor_de_compra
else:
	valor_de_compra
print(valor_de_compra)
					 
-- EXECUTION TIME:
0.136275
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
200.09
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
200.53
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:34:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
valor_de_compra = float(input("valor da compra:  "))
if (valor_de_compra >=200):
	novovalor = .95 * valor_de_compra
else:
	valor_de_compra
print(valor_de_compra)
					 
-- OUTPUT:
200.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:34:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
valor_de_compra = float(input("valor da compra:  "))
if (valor_de_compra >= 200):
	novovalor = .95 * valor_de_compra
else:
	valor_de_compra
print(valor_de_compra)
					 
-- OUTPUT:
200.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:34:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
valor_de_compra = float(input("valor da compra:  "))
  if (valor_de_compra >= 200):
	novovalor = .95 * valor_de_compra
   else:
	valor_de_compra
   print(valor_de_compra)
					 
-- ERROR:
File "XXXX", line 5
    if (valor_de_compra >= 200):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:35:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
valor_de_compra = float(input("valor da compra:  "))
if (valor_de_compra >= 200):
	novovalor = .95 * valor_de_compra
else:
	valor_de_compra
print(valor_de_compra)
					 
-- OUTPUT:
200.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:36:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
valor_de_compra = float(input("valor da compra:  "))
if (valor_de_compra >= 200):
	novovalor = .95 * valor_de_compra
else:
	novovalor= valor_de_compra
print(valor_de_compra)
					 
-- OUTPUT:
200.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:36:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
valor_de_compra = float(input("valor da compra:  "))
if (valor_de_compra >= 200):
	
-- ERROR:
File "XXXX", line 7
    
     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:40:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
valor_de_compra = float(input("valor da compra:  "))
if (valor_de_compra >= 200):
	valor_de_compra*.95
	
-- ERROR:
File "XXXX", line 7
    
     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:41:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
valor_de_compra = float(input("valor da compra:  "))
if (valor_de_compra >= 200):
	valor_de_compra*.95
else:
	valor_de_compra
	
-- ERROR:
File "XXXX", line 7
    
     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:41:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
valor_de_compra = float(input("valor da compra:  "))
if (valor_de_compra >= 200):
	valor_de_compra*.95
else:
	print(valor_de_compra)
	
-- ERROR:
File "XXXX", line 7
    
     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:41:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
valor_de_compra = float(input("valor da compra:  "))
if (valor_de_compra >= 200):
	valor_de_compra * .95
else:
	print(valor_de_compra)
	
-- ERROR:
File "XXXX", line 7
    
     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 16:42:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
valor_de_compra = float(input("valor da compra:  "))
if (valor_de_compra >= 200):
	valor_de_compra * .95
else:
	valor_de_compra
print(valor_de_compra)
	
-- EXECUTION TIME:
0.178724
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
200.09
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
200.53
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:42:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
valor_de_compra = float(input("valor da compra:  "))
if (valor_de_compra >= 200):
	valor_de_compra * .95
else:
	valor_de_compra
print(valor_de_compra)
	
-- OUTPUT:
200.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:42:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
valor_de_compra = float(input("valor da compra:  "))
if (valor_de_compra >= 200):
	valor_de_compra * 0,95
else:
	valor_de_compra
print(valor_de_compra)
	
-- OUTPUT:
200.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:43:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
valor_de_compra = float(input("valor da compra:  "))
if (valor_de_compra >= 200):
	 valor_de_compra * 0,95
else:
	valor_de_compra
print(valor_de_compra)
	
-- OUTPUT:
200.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:43:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
valor_de_compra = float(input("valor da compra:  "))
if (valor_de_compra >=200):
	 valor_de_compra * 0,95
else:
	valor_de_compra
print(valor_de_compra)
	
-- OUTPUT:
200.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:44:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
valor_de_compra = float(input("valor da compra:  "))
if (valor_de_compra >=200):
	 desconto= valor_de_compra - valor_de_compra*95/100
else:
	valor_de_compra
print(valor_de_compra)
	
-- OUTPUT:
200.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:44:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
valor_de_compra = float(input("valor da compra:  "))
if (valor_de_compra >=200):
	 desconto= valor_de_compra - valor_de_compra*95/100
else:
	valor_de_compra
print(valor_de_compra)
	
-- OUTPUT:
200.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:44:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
valor_de_compra = float(input("valor da compra:  "))
if (valor_de_compra >=200):
	 desconto= valor_de_compra - valor_de_compra*95/100
else:
	valor_de_compra
print(valor_de_compra)
	
-- OUTPUT:
200.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:45:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
valor_de_compra = float(input("valor da compra:  "))
if (valor_de_compra >=200):
	 desconto= valor_de_compra - valor_de_compra * 95/100
else:
	valor_de_compra
print(valor_de_compra)
	
-- OUTPUT:
200.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:46:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
valor_de_compra = float(input("valor_de_compra:  "))
if (valor_de_compra >==200):
	 desconto= valor_de_compra - valor_de_compra * 95/100
else:
	valor_de_compra
print(valor_de_compra)
	
-- ERROR:
File "XXXX", line 5
    if (valor_de_compra >==200):
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:47:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
valor_de_compra = float(input("valor_de_compra:  "))
if (valor_de_compra >=200):
	 valor_de_compra* 95/100
else:
	valor_de_compra
print(valor_de_compra)
	
-- OUTPUT:
200.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:47:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
valor_de_compra = float(input("valor_de_compra:  "))
if (valor_de_compra >=200):
	 valor_de_compra*(95/100)
else:
	valor_de_compra
print(valor_de_compra)
	
-- OUTPUT:
200.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 11:00:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

if (temp > 25):
	print("Quente") 
	print("Ligue o ventilador") 
	print("Aproveite")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if (temp > 25):
NameError: name 'temp' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 13:00:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as meonsagens de erro para corrigir seu código.
compra=input("compra    " )
if(compra>=200):
   .95*compra
print(compra)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if(compra>=200):
TypeError: '>=' not supported between instances of 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-25 15:09:38) 
-- CODE:
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 
ph=(72.7*a) -58
pm=(62.1*a) - 44.7
if(=='m'):
	print(round((ph,2))
else:
	print(round(pm,2))
			
		
-- EXECUTION TIME:
0.811011
-- ERROR:
  File "/home/codebench/codes/1644/869/main.py", line 5
    if(=='m'):
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-25 15:09:56) 
-- CODE:
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 
ph=(72.7*a) -58
pm=(62.1*a) - 44.7
if(b=='m'):
	print(round((ph,2))
else:
	print(round(pm,2))
			
		
-- EXECUTION TIME:
0.587004
-- ERROR:
  File "/home/codebench/codes/1644/869/main.py", line 7
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-25 15:10:01) 
-- CODE:
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 
ph=(72.7*a) -58
pm=(62.1*a) - 44.7
if(b=='m'):
	print(round((ph,2))
else:
	print(round(pm,2))
			
		
-- EXECUTION TIME:
0.798191
-- ERROR:
  File "/home/codebench/codes/1644/869/main.py", line 7
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-25 15:10:28) 
-- CODE:
a = float(input("Digite a: ")) 
s = input()"Digite b: ")) 
ph=(72.7*a) -58
pm=(62.1*a) - 44.7
if(b=='m'):
	print(round((ph,2))
else:
	print(round(pm,2))
			
		
-- EXECUTION TIME:
0.763695
-- ERROR:
  File "/home/codebench/codes/1644/869/main.py", line 2
    s = input()"Digite b: ")) 
                          ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-25 15:10:33) 
-- CODE:
a = float(input("Digite a: ")) 
s = input("Digite b: ") 
ph=(72.7*a) -58
pm=(62.1*a) - 44.7
if(b=='m'):
	print(round((ph,2))
else:
	print(round(pm,2))
			
		
-- EXECUTION TIME:
0.873099
-- ERROR:
  File "/home/codebench/codes/1644/869/main.py", line 7
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-25 15:10:39) 
-- CODE:
a = float(input("Digite a: ")) 
s = input("Digite b: ") 
ph=(72.7*a) -58
pm=(62.1*a) - 44.7
if(s=='m'):
	print(round((ph,2))
else:
	print(round(pm,2))
			
		
-- EXECUTION TIME:
0.569421
-- ERROR:
  File "/home/codebench/codes/1644/869/main.py", line 7
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-25 15:11:57) 
-- CODE:
a = float(input("Digite a: ")) 
s = input("Digite b: ") 
ph=(72.7 * a) - 58
pm=(62.1 * a) - 44.7
if(s=='M'):
	print(round(ph,2))
else:
	print(round(pm,2))
			
		
-- EXECUTION TIME:
0.622234
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/869/main.py", line 2, in <module>
    s = input() 
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-25 15:12:16) 
-- CODE:
a = float(input("Digite a: ")) 
s = input("Digite b: ") 
ph=(72.7 * a) - 58
pm=(62.1 * a) - 44.7
if(s=='M'):
	print(round(ph,2))
else:
	print(round(pm,2))
			
		
-- EXECUTION TIME:
0.737319
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/869/main.py", line 2, in <module>
    s = input() 
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-25 15:12:49) 
-- CODE:
a = float(input("Digite a: ")) 
s = input("Digite o sexo (M ou F): ") 
ph=(72.7 * a) - 58
pm=(62.1 * a) - 44.7
if(s=='M'):
	print(round(ph,2))
else:
	print(round(pm,2))
			
		
-- EXECUTION TIME:
0.77681
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/869/main.py", line 2, in <module>
    s = input() 
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-25 15:13:09) 
-- CODE:
a = float(input("Digite a: ")) 
s = input("Digite o sexo (M ou F): ") 
ph=(72.7 * a) - 58
pm=(62.1 * a) - 44.7
if(s=='M'):
	print(round(ph,2))
else:
	print(round(pm,2))
			
		
-- EXECUTION TIME:
0.711046
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/869/main.py", line 2, in <module>
    s = input() 
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 15:13:24) 
-- CODE:
a = float(input("Digite a: ")) 
s = input("Digite o sexo (M ou F): ") 
ph=(72.7 * a) - 58
pm=(62.1 * a) - 44.7
if( s=="M"):
	print(round(ph,2))
else:
	print(round(pm,2))
			
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    s = input() 
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 15:14:26) 
-- CODE:
a = float(input("Digite a: ")) 
s = input("Digite o sexo (M ou F): ") 
ph=(72.7 * a) - 58
pm=(62.1 * a) - 44.7
if( s=="M"):
	print(round(ph,2))
else:
	print(round(pm,2))
			
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    s = input() 
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 15:14:40) 
-- CODE:
a = float(input("Digite a: ")) 
s = input("Digite o sexo (M ou F): ") 
ph=(72.7 * a) - 58
pm=(62.1 * a) - 44.7
if( s=="M"):
	print(round(ph,2))
else:
	print(round(pm,2))
			
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    s = input() 
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-25 15:14:51) 
-- CODE:
a = float(input("Digite a: ")) 
s = input("Digite o sexo (M ou F): ") 
ph=(72.7 * a) - 58
pm=(62.1 * a) - 44.7
if( s=="M"):
	print(round(ph,2))
else:
	print(round(pm,2))
			
		
-- EXECUTION TIME:
0.816438
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/869/main.py", line 2, in <module>
    s = input() 
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-25 15:15:29) 
-- CODE:
a = float(input("Digite a: ")) 
s = input("Digite o sexo (M ou F): ") 
s=s.upper()
ph=(72.7 * a) - 58
px=(62.1 * a) - 44.7
if( s=="M"):
	print(round(ph,2))
else:
	print(round(px,2))
			
		
-- EXECUTION TIME:
0.780969
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/869/main.py", line 2, in <module>
    s = input() 
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 15:15:40) 
-- CODE:
a = float(input("Digite a: ")) 
s = input("Digite o sexo (M ou F): ") 
s=s.upper()
ph=(72.7 * a) - 58
px=(62.1 * a) - 44.7
if( s=="M"):
	print(round(ph,2))
else:
	print(round(px,2))
			
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    s = input() 
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-25 15:15:51) 
-- CODE:
a = float(input("Digite a: ")) 
s = input("Digite o sexo (M ou F): ") 
s=s.upper()
ph=(72.7 * a) - 58
px=(62.1 * a) - 44.7
if( s=="M"):
	print(round(ph,2))
else:
	print(round(px,2))
			
		
-- EXECUTION TIME:
0.89559
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/869/main.py", line 2, in <module>
    s = input() 
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-25 15:16:08) 
-- CODE:
a = float(input("Digite a: ")) 
s = input("Digite o sexo (M ou F): ") 
s=s.upper()
p=(72.7 * a) - 58
px=(62.1 * a) - 44.7
if( s=="M"):
	print(round(p,2))
else:
	print(round(px,2))
			
		
-- EXECUTION TIME:
0.553667
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/869/main.py", line 2, in <module>
    s = input() 
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 15:16:11) 
-- CODE:
a = float(input("Digite a: ")) 
s = input("Digite o sexo (M ou F): ") 
s=s.upper()
p=(72.7 * a) - 58
px=(62.1 * a) - 44.7
if( s=="M"):
	print(round(p,2))
else:
	print(round(px,2))
			
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    s = input() 
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-25 15:16:18) 
-- CODE:
a = float(input("Digite a: ")) 
s = input("Digite o sexo (M ou F): ") 
s=s.upper()
p=(72.7 * a) - 58
px=(62.1 * a) - 44.7
if( s=="M"):
	print(round(p,2))
else:
	print(round(px,2))
			
		
-- EXECUTION TIME:
0.859388
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/869/main.py", line 2, in <module>
    s = input() 
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 15:16:34) 
-- CODE:



a = float(input("Digite a: ")) 
s = input("Digite o sexo (M ou F): ") 
s=s.upper()
p=(72.7 * a) - 58
px=(62.1 * a) - 44.7
if( s=="M"):
	print(round(p,2))
else:
	print(round(px,2))
			
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    s = input() 
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-25 15:16:35) 
-- CODE:



a = float(input("Digite a: ")) 
s = input("Digite o sexo (M ou F): ") 
s=s.upper()
p=(72.7 * a) - 58
px=(62.1 * a) - 44.7
if( s=="M"):
	print(round(p,2))
else:
	print(round(px,2))
			
		
-- EXECUTION TIME:
0.653302
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/869/main.py", line 5, in <module>
    s = input() 
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-25 15:16:57) 
-- CODE:
a = float(input("Digite a: ")) 
s = input("Digite o sexo (M ou F): ") 
s=s.upper()
p=(72.7 * a) - 58
px=(62.1 * a) - 44.7

if( s=="M"):
	print(round(p,2))
else:
	print(round(px,2))
			
		
-- EXECUTION TIME:
0.590008
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/869/main.py", line 2, in <module>
    s = input() 
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-25 15:17:05) 
-- CODE:
a = float(input("Digite a: ")) 
s = input("Digite o sexo (M ou F): ") 
s=s.upper()
p=(72.7 * a) - 58
px=(62.1 * a) - 44.7

if( s="M"):
	print(round(p,2))
else:
	print(round(px,2))
			
		
-- EXECUTION TIME:
0.711025
-- ERROR:
  File "/home/codebench/codes/1644/869/main.py", line 7
    if( s="M"):
         ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-25 15:17:27) 
-- CODE:
a = float(input("Digite a: ")) 
s = input("Digite o sexo (M ou F): ") 
s=s.upper()
p=(72.7 * a) - 58
px=(62.1 * a) - 44.7

if(s=="M"):
	print(round(p,2))
else:
	print(round(px,2))
			
		
-- EXECUTION TIME:
0.797041
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/869/main.py", line 2, in <module>
    s = input() 
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-25 15:20:23) 
-- CODE:
compra = float(input("Digite a: ")) 
if(compra>=200.0):
	compra=compra* 0.95
	print(round(compra,2))
else:
	print(round(compra,2))


-- EXECUTION TIME:
0.656968
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.09
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
