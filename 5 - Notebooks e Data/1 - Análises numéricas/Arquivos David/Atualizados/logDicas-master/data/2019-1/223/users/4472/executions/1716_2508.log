== TEST (2019-05-15 18:58:46) 
-- CODE:
from math import *

from math import *

n = int(input("Informe um numero: "))

i = 0
e = 0
a = 2
b = 3
c = 4

while (i < n):
	e = e + (4 / (a + 1) * (b + 1) * (c + 1)
	i = i + 1
	
print (round(e,8))
-- ERROR:
File "XXXX", line 15
    i = i + 1
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 19:00:18) 
-- CODE:
from math import *

from math import *

n = int(input("Informe um numero: "))

i = 0
e = 0
a = 2
b = 3
c = 4

while (i < n):
	e = 3 + (4 / (a + 1) * (b + 1) * (c + 1)
	i = i + 1
	
print (round(e,8))
-- ERROR:
File "XXXX", line 15
    i = i + 1
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 19:00:38) 
-- CODE:
from math import *

from math import *

n = int(input("Informe um numero: "))

i = 0
e = 0
a = 2
b = 3
c = 4

while (i < n):
	e = 3 + (4 / (a + 1) * (b + 1) * (c + 1)
	#i = i + 1
	
print (round(e,8))
-- ERROR:
File "XXXX", line 17
    print (round(e,8))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 19:01:05) 
-- CODE:
from math import *

from math import *

n = int(input("Informe um numero: "))

i = 0
e = 0
a = 2
b = 3
c = 4

while (i < n):
	resul = 3 + (4 / (a + 1) * (b + 1) * (c + 1)
	#i = i + 1
	
print (round(resul,8))
-- ERROR:
File "XXXX", line 17
    print (round(resul,8))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 19:21:03) 
-- CODE:
valor = int(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
acum = 3

while (cont < valor):
	# Denominador
	x = (cont * 2) + (cont * 2 + 1) * (cont * 2 + 2)
	
	# Novos termos de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
		cont = cont + 1

print (round(aprox,8))
-- EXECUTION TIME:
0.197772
-- ERROR:
  File "/home/codebench/codes/1716/2508/main.py", line 15
    cont = cont + 1
    ^
IndentationError: unexpected indent

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 19:21:06) 
-- CODE:
valor = int(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
acum = 3

while (cont < valor):
	# Denominador
	x = (cont * 2) + (cont * 2 + 1) * (cont * 2 + 2)
	
	# Novos termos de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
		cont = cont + 1

print (round(aprox,8))
-- ERROR:
File "XXXX", line 15
    cont = cont + 1
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 19:21:24) 
-- CODE:
valor = int(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
acum = 3

while (cont < valor):
	# Denominador
	x = (cont * 2) + (cont * 2 + 1) * (cont * 2 + 2)
	
	# Novos termos de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))
-- EXECUTION TIME:
0.148387
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1716/2508/main.py", line 14, in <module>
    aprox = aprox + (-1) ** (cont + 1) * 4 / x
NameError: name 'aprox' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 19:21:26) 
-- CODE:
valor = int(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
acum = 3

while (cont < valor):
	# Denominador
	x = (cont * 2) + (cont * 2 + 1) * (cont * 2 + 2)
	
	# Novos termos de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    aprox = aprox + (-1) ** (cont + 1) * 4 / x
NameError: name 'aprox' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 19:22:38) 
-- CODE:
valor = int(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 3

while (cont < valor):
	# Denominador
	x = (cont * 2) + (cont * 2 + 1) * (cont * 2 + 2)
	
	# Novos termos de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))
-- OUTPUT:
3.19176703
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 19:23:49) 
-- CODE:
valor = int(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 3

while (cont < valor):
	# Denominador
	x = (cont * 2) + (cont * 2 + 1) * (cont * 2 + 2)
	
	# Novos termos de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))
-- EXECUTION TIME:
0.197322
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.19176703
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.20915551
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.20685428
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 19:32:02) 
-- CODE:
valor = int(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 3

while (cont < valor):
	# Denominador
	x = (cont * 2) + (cont * 2 + 1) + (cont * 2 + 2)
	
	# Novos termos de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))
-- EXECUTION TIME:
0.200885
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.22010582
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.30127949
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.26860403
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 19:38:10) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 3

while (cont < valor):
	# Denominador
	x = (cont * 2) + (cont * 2 + 1) + (cont * 2 + 2)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))
-- EXECUTION TIME:
0.191365
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.22010582
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.30127949
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.26860403
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 19:38:13) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 3

while (cont < valor):
	# Denominador
	x = (cont * 2) + (cont * 2 + 1) + (cont * 2 + 2)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))
-- OUTPUT:
3.22010582
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 19:39:32) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 3

while (cont < valor):
	# Denominador
	x = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))
-- EXECUTION TIME:
0.14282
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.14155633
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 21:34:04) 
-- CODE:
valor = float(input("Informe o valor de aproximacoes: "))

# Variavel contadora
cont = 1

# Variavel acumuladora
aprox = 3

while (cont < valor):
	# Denominador
	x = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	
	# Aproximacoes de PI
	aprox = aprox + (-1) ** (cont + 1) * 4 / x
	cont = cont + 1

print (round(aprox,8))
-- EXECUTION TIME:
0.143199
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.14155633
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
