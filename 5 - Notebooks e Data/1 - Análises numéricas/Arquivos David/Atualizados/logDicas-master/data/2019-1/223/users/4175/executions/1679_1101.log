== TEST (2019-05-02 12:07:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a quantidade de kwh gasto: "))
t = input("digite o topo de faixa de consumo: ")

{
if t.upper() == "R":
elif x <= 500:
	print(x*0.44)
-- ERROR:
File "XXXX", line 8
    if t.upper() == "R":
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:08:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a quantidade de kwh gasto: "))
t = input("digite o topo de faixa de consumo: ")

if t.upper() == "R":
elif x <= 500:
	print(x*0.44)
-- ERROR:
File "XXXX", line 8
    elif x <= 500:
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:29:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a quantidade de kwh gasto: "))
t = input("digite o topo de faixa de consumo: ")

print("Entradas: ", x,"kWh", "e tipo", t)


if t.upper() == "R":
	if (x < 0):
		p = -1
	elif x <= 500:
		p = x * 0.40
	else:
		p = x * 0.65
elif (t.upper() == "I"):
	if (x < 0):
		p = -1
	elif (x <= 1000):
		p = x * 0.55
	else:
		p = x * 0.6
elif (t.upper() == "C"):
	if (x < 0):
		p = -1
	elif (x <= 5000):
		p = x * 0.55
	else:
		p = x * 0.60
else:
	p = -1

print()
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:29:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a quantidade de kwh gasto: "))
t = input("digite o topo de faixa de consumo: ")

print("Entradas: ", x,"kWh", "e tipo", t)


if t.upper() == "R":
	if (x < 0):
		p = -1
	elif x <= 500:
		p = x * 0.40
	else:
		p = x * 0.65
elif (t.upper() == "I"):
	if (x < 0):
		p = -1
	elif (x <= 1000):
		p = x * 0.55
	else:
		p = x * 0.6
elif (t.upper() == "C"):
	if (x < 0):
		p = -1
	elif (x <= 5000):
		p = x * 0.55
	else:
		p = x * 0.60
else:
	p = -1

print(p)
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
-1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:29:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a quantidade de kwh gasto: "))
t = input("digite o topo de faixa de consumo: ")

print("Entradas: ", x,"kWh", "e tipo", t)


if t.upper() == "R":
	if (x < 0):
		p = -1
	elif x <= 500:
		p = x * 0.40
	else:
		p = x * 0.65
elif (t.upper() == "I"):
	if (x < 0):
		p = -1
	elif (x <= 1000):
		p = x * 0.55
	else:
		p = x * 0.6
elif (t.upper() == "C"):
	if (x < 0):
		p = -1
	elif (x <= 5000):
		p = x * 0.55
	else:
		p = x * 0.60
else:
	p = -1

print(round(p,1))
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
-1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:30:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a quantidade de kwh gasto: "))
t = input("digite o topo de faixa de consumo: ")

print("Entradas: ", x,"kWh", "e tipo", t)


if t.upper() == "R":
	if (x < 0):
		p = -1
	elif x <= 500:
		p = x * 0.40
	else:
		p = x * 0.65
elif (t.upper() == "I"):
	if (x < 0):
		p = -1
	elif (x <= 1000):
		p = x * 0.55
	else:
		p = x * 0.6
elif (t.upper() == "C"):
	if (x < 0):
		p = -1
	elif (x <= 5000):
		p = x * 0.55
	else:
		p = x * 0.60
else:
	p = -1

print("Valor total: R$"(round(p,2)))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 34, in <module>
    print("Valor total: R$"(round(p,2)))
TypeError: 'str' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:31:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a quantidade de kwh gasto: "))
t = input("digite o topo de faixa de consumo: ")

print("Entradas: ", x,"kWh", "e tipo", t)


if t.upper() == "R":
	if (x < 0):
		p = -1
	elif x <= 500:
		p = x * 0.40
	else:
		p = x * 0.65
elif (t.upper() == "I"):
	if (x < 0):
		p = -1
	elif (x <= 1000):
		p = x * 0.55
	else:
		p = x * 0.6
elif (t.upper() == "C"):
	if (x < 0):
		p = -1
	elif (x <= 5000):
		p = x * 0.55
	else:
		p = x * 0.60
else:
	p = -1
	
h = round(p,2)

print("Valor total: R$ ",h)
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Valor total: R$  -1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 12:31:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a quantidade de kwh gasto: "))
t = input("digite o topo de faixa de consumo: ")

print("Entradas: ", x,"kWh", "e tipo", t)


if t.upper() == "R":
	if (x < 0):
		p = -1
	elif x <= 500:
		p = x * 0.40
	else:
		p = x * 0.65
elif (t.upper() == "I"):
	if (x < 0):
		p = -1
	elif (x <= 1000):
		p = x * 0.55
	else:
		p = x * 0.6
elif (t.upper() == "C"):
	if (x < 0):
		p = -1
	elif (x <= 5000):
		p = x * 0.55
	else:
		p = x * 0.60
else:
	p = -1
	
h = round(p,2)

print("Valor total: R$ ",h)
-- EXECUTION TIME:
0.20497
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo I
Valor total: R$  -1
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo R
Valor total: R$  621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:31:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a quantidade de kwh gasto: "))
t = input("digite o topo de faixa de consumo: ")

print("Entradas: ", x,"kWh", "e tipo", t)


if t.upper() == "R":
	if (x < 0):
		p = -1
	elif x <= 500:
		p = x * 0.40
	else:
		p = x * 0.65
elif (t.upper() == "I"):
	if (x < 0):
		p = -1
	elif (x <= 1000):
		p = x * 0.55
	else:
		p = x * 0.6
elif (t.upper() == "C"):
	if (x < 0):
		p = -1
	elif (x <= 5000):
		p = x * 0.55
	else:
		p = x * 0.60
else:
	p = -1
	
h = round(p,2)

print("Valor total: R$ ",h)
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Valor total: R$  -1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:31:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a quantidade de kwh gasto: (R,I,C)"))
t = input("digite o topo de faixa de consumo: ")

print("Entradas: ", x,"kWh", "e tipo", t)


if t.upper() == "R":
	if (x < 0):
		p = -1
	elif x <= 500:
		p = x * 0.40
	else:
		p = x * 0.65
elif (t.upper() == "I"):
	if (x < 0):
		p = -1
	elif (x <= 1000):
		p = x * 0.55
	else:
		p = x * 0.6
elif (t.upper() == "C"):
	if (x < 0):
		p = -1
	elif (x <= 5000):
		p = x * 0.55
	else:
		p = x * 0.60
else:
	p = -1
	
h = round(p,2)

print("Valor total: R$ ",h)
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Valor total: R$  -1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:32:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a quantidade de kwh gasto: "))
t = input("digite o topo de faixa de consumo: (R,I,C)")

print("Entradas: ", x,"kWh", "e tipo", t)


if t.upper() == "R":
	if (x < 0):
		p = -1
	elif x <= 500:
		p = x * 0.40
	else:
		p = x * 0.65
elif (t.upper() == "I"):
	if (x < 0):
		p = -1
	elif (x <= 1000):
		p = x * 0.55
	else:
		p = x * 0.6
elif (t.upper() == "C"):
	if (x < 0):
		p = -1
	elif (x <= 5000):
		p = x * 0.55
	else:
		p = x * 0.60
else:
	p = -1
	
h = round(p,2)

print("Valor total: R$ ",h)
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Valor total: R$  -1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:34:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a quantidade de kwh gasto: "))
t = input("digite o topo de faixa de consumo: (R,I,C)")

print("Entradas: ", x,"kWh", "e tipo", t)

if t == "C" or t== "R" or t=="I" 
	if t.upper() == "R":
		if (x < 0):
			p = -1
		elif x <= 500:
			p = x * 0.40
		else:
			p = x * 0.65
	elif (t.upper() == "I"):
		if (x < 0):
			p = -1
		elif (x <= 1000):
			p = x * 0.55
		else:
			p = x * 0.6
	elif (t.upper() == "C"):
		if (x < 0):
			p = -1
		elif (x <= 5000):
			p = x * 0.55
		else:
			p = x * 0.60
	else:
		p = -1
else:
	print("Dados invalidos")
h = round(p,2)

print("Valor total: R$ ",h)
-- ERROR:
File "XXXX", line 9
    if t == "C" or t== "R" or t=="I" 
                                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:34:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a quantidade de kwh gasto: "))
t = input("digite o topo de faixa de consumo: (R,I,C)")

print("Entradas: ", x,"kWh", "e tipo", t)

if t == "C" or t== "R" or t=="I": 
	if t.upper() == "R":
		if (x < 0):
			p = -1
		elif x <= 500:
			p = x * 0.40
		else:
			p = x * 0.65
	elif (t.upper() == "I"):
		if (x < 0):
			p = -1
		elif (x <= 1000):
			p = x * 0.55
		else:
			p = x * 0.6
	elif (t.upper() == "C"):
		if (x < 0):
			p = -1
		elif (x <= 5000):
			p = x * 0.55
		else:
			p = x * 0.60
	else:
		p = -1
else:
	print("Dados invalidos")
h = round(p,2)

print("Valor total: R$ ",h)
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Valor total: R$  -1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:37:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a quantidade de kwh gasto: "))
t = input("digite o topo de faixa de consumo: (R,I,C)")

print("Entradas: ", x,"kWh", "e tipo", t)

if t == "C" or t== "R" or t=="I": 
	if t.upper() == "R":
		if (x < 0):
			p = -1
		elif x <= 500:
			p = round((x * 0.40),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.65),2)
			print("Valor total: R$ ",p)
	elif (t.upper() == "I"):
		if (x < 0):
			p = -1
		elif (x <= 1000):
			p = round((x * 0.55),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.60),2)
			print("Valor total: R$ ",p)
	elif (t.upper() == "C"):
		if (x < 0):
			p = -1
		elif (x <= 5000):
			p = round((x * 0.55),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.60),2)
			print("Valor total: R$ ",p)
			
	else:
		p = -1
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 12:37:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a quantidade de kwh gasto: "))
t = input("digite o topo de faixa de consumo: (R,I,C)")

print("Entradas: ", x,"kWh", "e tipo", t)

if t == "C" or t== "R" or t=="I": 
	if t.upper() == "R":
		if (x < 0):
			p = -1
		elif x <= 500:
			p = round((x * 0.40),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.65),2)
			print("Valor total: R$ ",p)
	elif (t.upper() == "I"):
		if (x < 0):
			p = -1
		elif (x <= 1000):
			p = round((x * 0.55),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.60),2)
			print("Valor total: R$ ",p)
	elif (t.upper() == "C"):
		if (x < 0):
			p = -1
		elif (x <= 5000):
			p = round((x * 0.55),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.60),2)
			print("Valor total: R$ ",p)
			
	else:
		p = -1
else:
	print("Dados invalidos")

-- EXECUTION TIME:
0.231578
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo I
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo R
Valor total: R$  621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:38:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a quantidade de kwh gasto: "))
t = input("digite o topo de faixa de consumo: (R,I,C)")

print("Entradas: ", x,"kWh", "e tipo", t)

if t == "C" or t== "R" or t=="I": 
	if t.upper() == "R":
		if (x < 0):
			p = -1
		elif x <= 500:
			p = round((x * 0.40),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.65),2)
			print("Valor total: R$ ",p)
	elif (t.upper() == "I"):
		if (x < 0):
			p = -1
		elif (x <= 1000):
			p = round((x * 0.55),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.60),2)
			print("Valor total: R$ ",p)
	elif (t.upper() == "C"):
		if (x < 0):
			p = -1
		elif (x <= 5000):
			p = round((x * 0.55),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.60),2)
			print("Valor total: R$ ",p)
			
	else:
		p = -1
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:38:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a quantidade de kwh gasto: "))
t = input("digite o topo de faixa de consumo: (R,I,C)")

print("Entradas: ", x,"kWh", "e tipo", t)

if t.upper() == "C" or t.upper() == "R" or t.upper() == "I": 
	if t.upper() == "R":
		if (x < 0):
			p = -1
		elif x <= 500:
			p = round((x * 0.40),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.65),2)
			print("Valor total: R$ ",p)
	elif (t.upper() == "I"):
		if (x < 0):
			p = -1
		elif (x <= 1000):
			p = round((x * 0.55),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.60),2)
			print("Valor total: R$ ",p)
	elif (t.upper() == "C"):
		if (x < 0):
			p = -1
		elif (x <= 5000):
			p = round((x * 0.55),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.60),2)
			print("Valor total: R$ ",p)
			
	else:
		p = -1
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 12:38:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a quantidade de kwh gasto: "))
t = input("digite o topo de faixa de consumo: (R,I,C)")

print("Entradas: ", x,"kWh", "e tipo", t)

if t.upper() == "C" or t.upper() == "R" or t.upper() == "I": 
	if t.upper() == "R":
		if (x < 0):
			p = -1
		elif x <= 500:
			p = round((x * 0.40),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.65),2)
			print("Valor total: R$ ",p)
	elif (t.upper() == "I"):
		if (x < 0):
			p = -1
		elif (x <= 1000):
			p = round((x * 0.55),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.60),2)
			print("Valor total: R$ ",p)
	elif (t.upper() == "C"):
		if (x < 0):
			p = -1
		elif (x <= 5000):
			p = round((x * 0.55),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.60),2)
			print("Valor total: R$ ",p)
			
	else:
		p = -1
else:
	print("Dados invalidos")

-- EXECUTION TIME:
0.16975
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo I
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo R
Valor total: R$  621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:38:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a quantidade de kwh gasto: "))
t = input("digite o topo de faixa de consumo: (R,I,C)")

print("Entradas: ", x,"kWh", "e tipo", t)

if t.upper() == "C" or t.upper() == "R" or t.upper() == "I": 
	if t.upper() == "R":
		if (x < 0):
			p = -1
		elif x <= 500:
			p = round((x * 0.40),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.65),2)
			print("Valor total: R$ ",p)
	elif (t.upper() == "I"):
		if (x < 0):
			p = -1
		elif (x <= 1000):
			p = round((x * 0.55),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.60),2)
			print("Valor total: R$ ",p)
	elif (t.upper() == "C"):
		if (x < 0):
			p = -1
		elif (x <= 5000):
			p = round((x * 0.55),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.60),2)
			print("Valor total: R$ ",p)
			
	else:
		p = -1
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:39:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a quantidade de kwh gasto: "))
t.upper() = input("digite o topo de faixa de consumo: (R,I,C)")

print("Entradas: ", x,"kWh", "e tipo", t)

if t.upper() == "C" or t.upper() == "R" or t.upper() == "I": 
	if t.upper() == "R":
		if (x < 0):
			p = -1
		elif x <= 500:
			p = round((x * 0.40),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.65),2)
			print("Valor total: R$ ",p)
	elif (t.upper() == "I"):
		if (x < 0):
			p = -1
		elif (x <= 1000):
			p = round((x * 0.55),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.60),2)
			print("Valor total: R$ ",p)
	elif (t.upper() == "C"):
		if (x < 0):
			p = -1
		elif (x <= 5000):
			p = round((x * 0.55),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.60),2)
			print("Valor total: R$ ",p)
			
	else:
		p = -1
else:
	print("Dados invalidos")

-- ERROR:
File "XXXX", line 5
    t.upper() = input()
    ^
SyntaxError: can't assign to function call
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:39:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a quantidade de kwh gasto: "))
h = input("digite o topo de faixa de consumo: (R,I,C)")
t = h.upper()

print("Entradas: ", x,"kWh", "e tipo", t)

if t.upper() == "C" or t.upper() == "R" or t.upper() == "I": 
	if t.upper() == "R":
		if (x < 0):
			p = -1
		elif x <= 500:
			p = round((x * 0.40),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.65),2)
			print("Valor total: R$ ",p)
	elif (t.upper() == "I"):
		if (x < 0):
			p = -1
		elif (x <= 1000):
			p = round((x * 0.55),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.60),2)
			print("Valor total: R$ ",p)
	elif (t.upper() == "C"):
		if (x < 0):
			p = -1
		elif (x <= 5000):
			p = round((x * 0.55),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.60),2)
			print("Valor total: R$ ",p)
			
	else:
		p = -1
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 12:39:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a quantidade de kwh gasto: "))
h = input("digite o topo de faixa de consumo: (R,I,C)")
t = h.upper()

print("Entradas: ", x,"kWh", "e tipo", t)

if t.upper() == "C" or t.upper() == "R" or t.upper() == "I": 
	if t.upper() == "R":
		if (x < 0):
			p = -1
		elif x <= 500:
			p = round((x * 0.40),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.65),2)
			print("Valor total: R$ ",p)
	elif (t.upper() == "I"):
		if (x < 0):
			p = -1
		elif (x <= 1000):
			p = round((x * 0.55),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.60),2)
			print("Valor total: R$ ",p)
	elif (t.upper() == "C"):
		if (x < 0):
			p = -1
		elif (x <= 5000):
			p = round((x * 0.55),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.60),2)
			print("Valor total: R$ ",p)
			
	else:
		p = -1
else:
	print("Dados invalidos")

-- EXECUTION TIME:
0.141851
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo I
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo R
Valor total: R$  621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 12:42:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a quantidade de kwh gasto: "))
t = input("digite o topo de faixa de consumo: (R,I,C)")

print("Entradas: ", x,"kWh", "e tipo", t.upper())

if t.upper() == "C" or t.upper() == "R" or t.upper() == "I": 
	if t.upper() == "R":
		if (x < 0):
			p = -1
		elif x <= 500:
			p = round((x * 0.40),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.65),2)
			print("Valor total: R$ ",p)
	elif (t.upper() == "I"):
		if (x < 0):
			p = -1
		elif (x <= 1000):
			p = round((x * 0.55),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.60),2)
			print("Valor total: R$ ",p)
	elif (t.upper() == "C"):
		if (x < 0):
			p = -1
		elif (x <= 5000):
			p = round((x * 0.55),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.60),2)
			print("Valor total: R$ ",p)
			
	else:
		p = -1
else:
	print("Dados invalidos")

-- EXECUTION TIME:
0.14433
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo I
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo R
Valor total: R$  621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:42:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a quantidade de kwh gasto: "))
t = input("digite o topo de faixa de consumo: (R,I,C)")

print("Entradas: ", x,"kWh", "e tipo", t.upper())

if t.upper() == "C" or t.upper() == "R" or t.upper() == "I": 
	if t.upper() == "R":
		if (x < 0):
			p = -1
		elif x <= 500:
			p = round((x * 0.40),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.65),2)
			print("Valor total: R$ ",p)
	elif (t.upper() == "I"):
		if (x < 0):
			p = -1
		elif (x <= 1000):
			p = round((x * 0.55),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.60),2)
			print("Valor total: R$ ",p)
	elif (t.upper() == "C"):
		if (x < 0):
			p = -1
		elif (x <= 5000):
			p = round((x * 0.55),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.60),2)
			print("Valor total: R$ ",p)
			
	else:
		p = -1
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:43:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a quantidade de kwh gasto: "))
t = input("digite o topo de faixa de consumo: (R,I,C)")

print("Entradas: ", x,"kWh", "e tipo", t.upper())

if t.upper() == "C" or t.upper() == "R" or t.upper() == "I": 
	if t.upper() == "R":
		if (x < 0):
			p = -1
		elif x <= 500:
			p = round((x * 0.40),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.65),2)
			print("Valor total: R$ ",p)
	elif (t.upper() == "I"):
		if (x < 0):
			p = -1
		elif (x <= 1000):
			p = round((x * 0.55),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.60),2)
			print("Valor total: R$ ",p)
	elif (t.upper() == "C"):
		if (x < 0):
			p = -1
		elif (x <= 5000):
			p = round((x * 0.55),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.60),2)
			print("Valor total: R$ ",p)
			
	else:
		p = -1
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:43:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a quantidade de kwh gasto: "))
t = input("digite o topo de faixa de consumo: (R,I,C)")

print("Entradas: ", x,"kWh","e tipo", t.upper())

if t.upper() == "C" or t.upper() == "R" or t.upper() == "I": 
	if t.upper() == "R":
		if (x < 0):
			p = -1
		elif x <= 500:
			p = round((x * 0.40),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.65),2)
			print("Valor total: R$ ",p)
	elif (t.upper() == "I"):
		if (x < 0):
			p = -1
		elif (x <= 1000):
			p = round((x * 0.55),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.60),2)
			print("Valor total: R$ ",p)
	elif (t.upper() == "C"):
		if (x < 0):
			p = -1
		elif (x <= 5000):
			p = round((x * 0.55),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.60),2)
			print("Valor total: R$ ",p)
			
	else:
		p = -1
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:43:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a quantidade de kwh gasto: "))
t = input("digite o topo de faixa de consumo: (R,I,C)")

print("Entradas: ", x,"kWh","e tipo", t.upper())

if t.upper() == "C" or t.upper() == "R" or t.upper() == "I": 
	if t.upper() == "R":
		if (x < 0):
			p = -1
		elif x <= 500:
			p = round((x * 0.40),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.65),2)
			print("Valor total: R$ ",p)
	elif (t.upper() == "I"):
		if (x < 0):
			p = -1
		elif (x <= 1000):
			p = round((x * 0.55),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.60),2)
			print("Valor total: R$ ",p)
	elif (t.upper() == "C"):
		if (x < 0):
			p = -1
		elif (x <= 5000):
			p = round((x * 0.55),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.60),2)
			print("Valor total: R$ ",p)
			
	else:
		p = -1
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:43:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a quantidade de kwh gasto: "))
t = input("digite o topo de faixa de consumo: (R,I,C)")

print("Entradas: ", x,"kWh","e tipo", t.upper())

if t.upper() == "C" or t.upper() == "R" or t.upper() == "I": 
	if t.upper() == "R":
		if (x < 0):
			p = -1
		elif x <= 500:
			p = round((x * 0.40),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.65),2)
			print("Valor total: R$ ",p)
	elif (t.upper() == "I"):
		if (x < 0):
			p = -1
		elif (x <= 1000):
			p = round((x * 0.55),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.60),2)
			print("Valor total: R$ ",p)
	elif (t.upper() == "C"):
		if (x < 0):
			p = -1
		elif (x <= 5000):
			p = round((x * 0.55),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.60),2)
			print("Valor total: R$ ",p)
			
	else:
		p = -1
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:44:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a quantidade de kwh gasto: "))
t = input("digite o topo de faixa de consumo: (R,I,C)")

print("Entradas: ", x,"kWh","e tipo", t.upper())

if t.upper() == "C" or t.upper() == "R" or t.upper() == "I": 
	if t.upper() == "R":
		if (x < 0):
			p = -1
		elif x <= 500:
			p = round((x * 0.40),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.65),2)
			print("Valor total: R$ ",p)
	elif (t.upper() == "I"):
		if (x < 0):
			p = -1
		elif (x <= 1000):
			p = round((x * 0.55),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.60),2)
			print("Valor total: R$ ",p)
	elif (t.upper() == "C"):
		if (x < 0):
			p = -1
		elif (x <= 5000):
			p = round((x * 0.55),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.60),2)
			print("Valor total: R$ ",p)
			
	else:
		p = -1
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:44:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a quantidade de kwh gasto: "))
t = input("digite o topo de faixa de consumo: (R,I,C)")

print("Entradas: ", x,"kWh","e tipo", t.upper())

if t.upper() == "C" or t.upper() == "R" or t.upper() == "I": 
	if t.upper() == "R":
		if (x < 0):
			p = -1
		elif x <= 500:
			p = round((x * 0.40),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.65),2)
			print("Valor total: R$ ",p)
	elif (t.upper() == "I"):
		if (x < 0):
			p = -1
		elif (x <= 1000):
			p = round((x * 0.55),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.60),2)
			print("Valor total: R$ ",p)
	elif (t.upper() == "C"):
		if (x < 0):
			p = -1
		elif (x <= 5000):
			p = round((x * 0.55),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.60),2)
			print("Valor total: R$ ",p)
			
	else:
		p = -1
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 12:44:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a quantidade de kwh gasto: "))
t = input("digite o topo de faixa de consumo: (R,I,C)")

print("Entradas: ", x,"kWh","e tipo", t.upper())

if t.upper() == "C" or t.upper() == "R" or t.upper() == "I": 
	if t.upper() == "R":
		if (x < 0):
			p = -1
		elif x <= 500:
			p = round((x * 0.40),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.65),2)
			print("Valor total: R$ ",p)
	elif (t.upper() == "I"):
		if (x < 0):
			p = -1
		elif (x <= 1000):
			p = round((x * 0.55),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.60),2)
			print("Valor total: R$ ",p)
	elif (t.upper() == "C"):
		if (x < 0):
			p = -1
		elif (x <= 5000):
			p = round((x * 0.55),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.60),2)
			print("Valor total: R$ ",p)
			
	else:
		p = -1
else:
	print("Dados invalidos")

-- EXECUTION TIME:
0.165262
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo I
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo R
Valor total: R$  621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 12:46:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a quantidade de kwh gasto: "))
t = input("digite o topo de faixa de consumo: (R,I,C)")

print("Entradas: ", x,"kWh","e tipo", t.upper())

if t.upper() == "C" or t.upper() == "R" or t.upper() == "I": 
	if t.upper() == "R":
		if (x < 0):
			p = "Dados invalidos"
		elif x <= 500:
			p = round((x * 0.40),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.65),2)
			print("Valor total: R$ ",p)
	elif (t.upper() == "I"):
		if (x < 0):
			p = "Dados invalidos"
		elif (x <= 1000):
			p = round((x * 0.55),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.60),2)
			print("Valor total: R$ ",p)
	elif (t.upper() == "C"):
		if (x < 0):
			p = "Dados invalidos"
		elif (x <= 5000):
			p = round((x * 0.55),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.60),2)
			print("Valor total: R$ ",p)
			
	else:
		p = "Dados invalidos"
else:
	print("Dados invalidos")

-- EXECUTION TIME:
0.19028
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo I
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo R
Valor total: R$  621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:46:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a quantidade de kwh gasto: "))
t = input("digite o topo de faixa de consumo: (R,I,C)")

print("Entradas: ", x,"kWh","e tipo", t.upper())

if t.upper() == "C" or t.upper() == "R" or t.upper() == "I": 
	if t.upper() == "R":
		if (x < 0):
			p = "Dados invalidos"
		elif x <= 500:
			p = round((x * 0.40),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.65),2)
			print("Valor total: R$ ",p)
	elif (t.upper() == "I"):
		if (x < 0):
			p = "Dados invalidos"
		elif (x <= 1000):
			p = round((x * 0.55),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.60),2)
			print("Valor total: R$ ",p)
	elif (t.upper() == "C"):
		if (x < 0):
			p = "Dados invalidos"
		elif (x <= 5000):
			p = round((x * 0.55),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.60),2)
			print("Valor total: R$ ",p)
			
	else:
		p = "Dados invalidos"
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 12:47:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a quantidade de kwh gasto: "))
t = input("digite o topo de faixa de consumo: (R,I,C)")

print("Entradas: ", x,"kWh","e tipo", t.upper())

if t.upper() == "C" or t.upper() == "R" or t.upper() == "I": 
	if t.upper() == "R":
		if (x < 0):
			print("Dados invalidos")
		elif x <= 500:
			p = round((x * 0.40),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.65),2)
			print("Valor total: R$ ",p)
	elif (t.upper() == "I"):
		if (x < 0):
			print("Dados invalidos")
		elif (x <= 1000):
			p = round((x * 0.55),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.60),2)
			print("Valor total: R$ ",p)
	elif (t.upper() == "C"):
		if (x < 0):
			print("Dados invalidos")
		elif (x <= 5000):
			p = round((x * 0.55),2)
			print("Valor total: R$ ",p)
		else:
			p = round((x * 0.60),2)
			print("Valor total: R$ ",p)
			
else:
	print("Dados invalidos")

-- EXECUTION TIME:
0.198269
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo R
Valor total: R$  621.08
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
