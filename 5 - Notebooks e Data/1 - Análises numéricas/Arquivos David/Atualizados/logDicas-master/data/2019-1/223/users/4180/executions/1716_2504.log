== TEST (2019-05-13 17:23:21) 
-- CODE:
quanInCo = int(input("Quantidade inicial de copias do virus no sangue de Micaleteia:"))
quanInLeu = int(input("Quantidade inicial de leucocitos no sangue:"))
PMultV = int(input("Percentual de multilicacao diaria do virus:"))/100
PMultL = int(input("Percentual de multilicacao diaria dos leucocitos:"))/100

dias = 0
while(quanInCo == quanInLeu/2):
	quanInCo = quanInCo + (quanInCo * PMultV)
	quanInLeu = quanInLeu + (quanInLeu * PMultL)
	dias = dias + 1
print(dias)
-- OUTPUT:
MAXIMO
5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 17:23:23) 
-- CODE:
quanInCo = int(input("Quantidade inicial de copias do virus no sangue de Micaleteia:"))
quanInLeu = int(input("Quantidade inicial de leucocitos no sangue:"))
PMultV = int(input("Percentual de multilicacao diaria do virus:"))/100
PMultL = int(input("Percentual de multilicacao diaria dos leucocitos:"))/100

dias = 0
while(quanInCo == quanInLeu/2):
	quanInCo = quanInCo + (quanInCo * PMultV)
	quanInLeu = quanInLeu + (quanInLeu * PMultL)
	dias = dias + 1
print(dias)
-- EXECUTION TIME:
0.119371
-- TEST CASE 1:
---- input:
350625
5500
2
75
---- correct output:
9
---- user output:
0
-- TEST CASE 2:
---- input:
650090
90045
4
90
---- correct output:
5
---- user output:
0
-- TEST CASE 3:
---- input:
419250
1725
9
59
---- correct output:
17
---- user output:
0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 17:23:24) 
-- CODE:
quanInCo = int(input("Quantidade inicial de copias do virus no sangue de Micaleteia:"))
quanInLeu = int(input("Quantidade inicial de leucocitos no sangue:"))
PMultV = int(input("Percentual de multilicacao diaria do virus:"))/100
PMultL = int(input("Percentual de multilicacao diaria dos leucocitos:"))/100

dias = 0
while(quanInCo == quanInLeu/2):
	quanInCo = quanInCo + (quanInCo * PMultV)
	quanInLeu = quanInLeu + (quanInLeu * PMultL)
	dias = dias + 1
print(dias)
-- OUTPUT:
MAXIMO
5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 17:24:08) 
-- CODE:
quanInCo = int(input("Quantidade inicial de copias do virus no sangue de Micaleteia:"))
quanInLeu = int(input("Quantidade inicial de leucocitos no sangue:"))
PMultV = int(input("Percentual de multilicacao diaria do virus:"))/100
PMultL = int(input("Percentual de multilicacao diaria dos leucocitos:"))/100

dias = 0
while(quanInCo > quanInLeu/2):
	quanInCo = quanInCo + (quanInCo * PMultV)
	quanInLeu = quanInLeu + (quanInLeu * PMultL)
	dias = dias + 1
print(dias)
-- EXECUTION TIME:
0.120369
-- TEST CASE 1:
---- input:
350625
5500
2
75
---- correct output:
9
---- user output:
9
-- TEST CASE 2:
---- input:
650090
90045
4
90
---- correct output:
5
---- user output:
5
-- TEST CASE 3:
---- input:
419250
1725
9
59
---- correct output:
17
---- user output:
17
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 17:24:09) 
-- CODE:
quanInCo = int(input("Quantidade inicial de copias do virus no sangue de Micaleteia:"))
quanInLeu = int(input("Quantidade inicial de leucocitos no sangue:"))
PMultV = int(input("Percentual de multilicacao diaria do virus:"))/100
PMultL = int(input("Percentual de multilicacao diaria dos leucocitos:"))/100

dias = 0
while(quanInCo > quanInLeu/2):
	quanInCo = quanInCo + (quanInCo * PMultV)
	quanInLeu = quanInLeu + (quanInLeu * PMultL)
	dias = dias + 1
print(dias)
-- EXECUTION TIME:
0.187079
-- TEST CASE 1:
---- input:
350625
5500
2
75
---- correct output:
9
---- user output:
9
-- TEST CASE 2:
---- input:
650090
90045
4
90
---- correct output:
5
---- user output:
5
-- TEST CASE 3:
---- input:
419250
1725
9
59
---- correct output:
17
---- user output:
17
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 10:27:49) 
-- CODE:
quanInCo = int(input("Quantidade inicial de copias do virus no sangue de Micaleteia:"))
quanInLeu = int(input("Quantidade inicial de leucocitos no sangue:"))
PMultV = int(input("Percentual de multilicacao diaria do virus:"))/100
PMultL = int(input("Percentual de multilicacao diaria dos leucocitos:"))/100

dias = 0
while(quanInCo > quanInLeu/2):
	quanInCo = quanInCo + (quanInCo * PMultV)
	quanInLeu = quanInLeu + (quanInLeu * PMultL)
	dias = dias + 1
print(dias)
-- OUTPUT:
9
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
