== TEST (2019-06-26 11:05:43) 
-- CODE:
from numpy import *
from numpy.linalg import *

pagamento = array(eval(input("pagamento dos N funcionarios:")))

for i in range(shape(pagamentos)[0]):
	for j in range(7):
		if(pagamento[i,j] == max(pagamento[i,:]))
		print(pagamento[i,j])
-- ERROR:
File "XXXX", line 8
    if(pagamento[i,j] == max(pagamento[i,:]))
                                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 11:06:02) 
-- CODE:
from numpy import *
from numpy.linalg import *

pagamento = array(eval(input("pagamento dos N funcionarios:")))

for i in range(shape(pagamentos)[0]):
	for j in range(7):
		if(pagamento[i,j] == max(pagamento[i,:])):
			print(pagamento[i,j])
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 11:07:03) 
-- CODE:
from numpy import *
from numpy.linalg import *

pagamento = array(eval(input("pagamento dos N funcionarios:")))

for i in range(shape(pagamento)[0]):
	for j in range(7):
		if(pagamento[i,j] == max(pagamento[i,:])):
			print(pagamento[i,j])
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 11:07:10) 
-- CODE:
from numpy import *
from numpy.linalg import *

pagamento = array(eval(input("pagamento dos N funcionarios:")))

for i in range(shape(pagamento)[0]):
	for j in range(7):
		if(pagamento[i,j] == max(pagamento[i,:])):
			print(pagamento[i,j])
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 11:07:22) 
-- CODE:
from numpy import *
from numpy.linalg import *

pagamento = array(eval(input("pagamento dos N funcionarios:")))

for i in range(shape(pagamento)[0]):
	for j in range(7):
		if(pagamento[i,j] == max(pagamento[i,:])):
			print(pagamento[i,j])
-- EXECUTION TIME:
1.06661
-- TEST CASE 1:
---- input:
[[34.5,67.8,89.7,56.4,65.7,78.9,81.2],[99.9,67.8,87.6,45.4,12.3,45.5,23.7],[27.5,93.1,45.9,47.3,19.2,76.5,49.3]]
---- correct output:
89.7
99.9
93.1
---- user output:
89.7
99.9
93.1
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 13:05:28) 
-- CODE:
from numpy import *
from numpy.linalg import *

pagamento = array(eval(input("pagamento dos N funcionarios:")))

for i in range(shape(pagamento)[0]):
		if(pagamento[i,j] == max(pagamento[i,:])):
			print(pagamento[i,j])
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 13:06:09) 
-- CODE:
from numpy import *
from numpy.linalg import *

pagamento = array(eval(input("pagamento dos N funcionarios:")))

for i in range(shape(pagamento)[0]):
		if(pagamento[i,j] == max(pagamento[i,:])):
			print(pagamento[i,j])
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 13:07:37) 
-- CODE:
from numpy import *
from numpy.linalg import *

pagamento = array(eval(input("pagamento dos N funcionarios:")))

for i in range(shape(pagamento)[0]):
	print(max(pagamento[i,:]))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-01 13:08:05) 
-- CODE:
from numpy import *
from numpy.linalg import *

pagamento = array(eval(input("pagamento dos N funcionarios:")))

for i in range(shape(pagamento)[0]):
	print(max(pagamento[i,:]))
-- EXECUTION TIME:
1.24104
-- TEST CASE 1:
---- input:
[[34.5,67.8,89.7,56.4,65.7,78.9,81.2],[99.9,67.8,87.6,45.4,12.3,45.5,23.7],[27.5,93.1,45.9,47.3,19.2,76.5,49.3]]
---- correct output:
89.7
99.9
93.1
---- user output:
89.7
99.9
93.1
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
