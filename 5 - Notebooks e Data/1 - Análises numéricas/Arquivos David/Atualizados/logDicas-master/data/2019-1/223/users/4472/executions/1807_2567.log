== SUBMITION (2019-06-12 01:02:29) 
-- CODE:
from numpy import *

base = int(input("Informe o tamanho da base: "))

for j in range(0, base):
	for in range(0, base - j):
		print("*",end="")
	print("\n",end="")
	
for j in range(0,base):
	for in range(0, j+i):
		prin("*",end="")
	prin("\n",end="")
-- EXECUTION TIME:
0.626545
-- ERROR:
  File "/home/codebench/codes/1807/2567/main.py", line 6
    for in range(0, base - j):
         ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 01:02:37) 
-- CODE:
from numpy import *

base = int(input("Informe o tamanho da base: "))

for j in range(0, base):
	for in range(0, base - j):
		print("*",end="")
	print("\n",end="")
	
for j in range(0,base):
	for in range(0, j+i):
		prin("*",end="")
	prin("\n",end="")
-- ERROR:
File "XXXX", line 6
    for in range(0, base - j):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 01:03:54) 
-- CODE:
from numpy import *

base = int(input("Informe o tamanho da base: "))

for j in range(0,base):
	for in range(0,base - j):
		print("*",end="")
	print("\n",end="")
	
for j in range(0,base):
	for in range(0, j+i):
		prin("*",end="")
	prin("\n",end="")
-- ERROR:
File "XXXX", line 6
    for in range(0,base - j):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 01:04:16) 
-- CODE:
from numpy import *

base = int(input("Informe o tamanho da base: "))

for j in range(0,base):
	for in range(0,base - j):
		print("*",end="")
		print("\n",end="")
	
for j in range(0,base):
	for in range(0, j+i):
		prin("*",end="")
		prin("\n",end="")
-- ERROR:
File "XXXX", line 6
    for in range(0,base - j):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 01:05:15) 
-- CODE:
base = int(input("Informe o tamanho da base: "))

for j in range(0,base):
	for in range(0,base - j):
		print("*",end="")
		print("\n",end="")
	
for j in range(0,base):
	for in range(0, j+i):
		prin("*",end="")
		prin("\n",end="")
-- EXECUTION TIME:
0.8513
-- ERROR:
  File "/home/codebench/codes/1807/2567/main.py", line 4
    for in range(0,base - j):
         ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 01:05:16) 
-- CODE:
base = int(input("Informe o tamanho da base: "))

for j in range(0,base):
	for in range(0,base - j):
		print("*",end="")
		print("\n",end="")
	
for j in range(0,base):
	for in range(0, j+i):
		prin("*",end="")
		prin("\n",end="")
-- ERROR:
File "XXXX", line 4
    for in range(0,base - j):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 22:22:45) 
-- CODE:
base = int(input("Informe o tamanho da base: "))

for j in range(0,base):
	
	for in range(0,base - j):
		print("*",end="")
	print("\n",end="")
	
for j in range(0,base):
	
	for in range(0, j+i):
		prin("*",end="")
	prin("\n",end="")
-- ERROR:
File "XXXX", line 5
    for in range(0,base - j):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 22:24:12) 
-- CODE:
base = int(input("Informe o tamanho da base: "))

for j in range(0,base):
	
	for in range(0,base - j):
		print("*",end="")
	print(\n,end="")
	
for j in range(0,base):
	
	for in range(0, j+i):
		prin("*",end="")
	prin("\n",end="")
-- ERROR:
File "XXXX", line 5
    for in range(0,base - j):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 23:23:25) 
-- CODE:
base = int(input("Informe o tamanho da base: "))

for j in range(0,base):
	
	for in range(0,base - j):
		print("*",end="")
	print(\n,end="")
	
for j in range(0,base):
	
	for in range(0, j+i):
		prin("*",end="")
	prin("\n",end="")
-- ERROR:
File "XXXX", line 5
    for in range(0,base - j):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 23:38:59) 
-- CODE:
base = int(input("Informe o tamanho da base: "))

for j in range(0,base):
	
	for i in range(0,base - j):
		print("*",end="")
	print("\n",end="")
	
for j in range(0,base):
	
	for i in range(0, j+i):
		prin("*",end="")
	prin("\n",end="")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    prin("\n",end="")
NameError: name 'prin' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 23:39:13) 
-- CODE:
base = int(input("Informe o tamanho da base: "))

for j in range(0,base):
	
	for i in range(0,base - j):
		print("*",end="")
	print("\n",end="")
	
for j in range(0,base):
	
	for i in range(0, j+i):
		prin("*",end="")
	print("\n",end="")
-- EXECUTION TIME:
0.660215
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1807/2567/main.py", line 12, in <module>
    prin("*",end="")
NameError: name 'prin' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 23:39:17) 
-- CODE:
base = int(input("Informe o tamanho da base: "))

for j in range(0,base):
	
	for i in range(0,base - j):
		print("*",end="")
	print("\n",end="")
	
for j in range(0,base):
	
	for i in range(0, j+i):
		prin("*",end="")
	print("\n",end="")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    prin("*",end="")
NameError: name 'prin' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 23:39:29) 
-- CODE:
base = int(input("Informe o tamanho da base: "))

for j in range(0,base):
	
	for i in range(0,base - j):
		print("*",end="")
	print("\n",end="")
	
for j in range(0,base):
	
	for i in range(0, j+i):
		print("*",end="")
	print("\n",end="")
-- EXECUTION TIME:
0.727868
-- TEST CASE 1:
---- input:
8
---- correct output:
********
*******
******
*****
****
***
**
*
*
**
***
****
*****
******
*******
********

---- user output:
********
*******
******
*****
****
***
**
*

*
**
****
*******
***********
****************
**********************
-- TEST CASE 2:
---- input:
11
---- correct output:
***********
**********
*********
********
*******
******
*****
****
***
**
*
*
**
***
****
*****
******
*******
********
*********
**********
***********

---- user output:
***********
**********
*********
********
*******
******
*****
****
***
**
*

*
**
****
*******
***********
****************
**********************
*****************************
*************************************
**********************************************
-- TEST CASE 3:
---- input:
25
---- correct output:
*************************
************************
***********************
**********************
*********************
********************
*******************
******************
*****************
****************
***************
**************
*************
************
***********
**********
*********
********
*******
******
*****
****
***
**
*
*
**
***
****
*****
******
*******
********
*********
**********
***********
************
*************
**************
***************
****************
*****************
******************
*******************
********************
*********************
**********************
***********************
************************
*************************

---- user output:
*************************
************************
***********************
**********************
*********************
********************
*******************
******************
*****************
****************
***************
**************
*************
************
***********
**********
*********
********
*******
******
*****
****
***
**
*

*
**
****
*******
***********
****************
**********************
*****************************
*************************************
**********************************************
********************************************************
*******************************************************************
*******************************************************************************
********************************************************************************************
**********************************************************************************************************
***********************************************************
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 23:39:31) 
-- CODE:
base = int(input("Informe o tamanho da base: "))

for j in range(0,base):
	
	for i in range(0,base - j):
		print("*",end="")
	print("\n",end="")
	
for j in range(0,base):
	
	for i in range(0, j+i):
		print("*",end="")
	print("\n",end="")
-- OUTPUT:
********
*******
******
*****
****
***
**
*

*
**
****
*******
***********
****************
**********************
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 23:39:49) 
-- CODE:
base = int(input("Informe o tamanho da base: "))

for j in range(0,base):
	
	for i in range(0,base - j):
		print("*",end="")
	print("\n",end="")
	
for j in range(0,base):
	
	for i in range(0, j+i):
		print("*",end="")
	print("\n",end="")
-- EXECUTION TIME:
0.653394
-- TEST CASE 1:
---- input:
8
---- correct output:
********
*******
******
*****
****
***
**
*
*
**
***
****
*****
******
*******
********

---- user output:
********
*******
******
*****
****
***
**
*

*
**
****
*******
***********
****************
**********************
-- TEST CASE 2:
---- input:
11
---- correct output:
***********
**********
*********
********
*******
******
*****
****
***
**
*
*
**
***
****
*****
******
*******
********
*********
**********
***********

---- user output:
***********
**********
*********
********
*******
******
*****
****
***
**
*

*
**
****
*******
***********
****************
**********************
*****************************
*************************************
**********************************************
-- TEST CASE 3:
---- input:
25
---- correct output:
*************************
************************
***********************
**********************
*********************
********************
*******************
******************
*****************
****************
***************
**************
*************
************
***********
**********
*********
********
*******
******
*****
****
***
**
*
*
**
***
****
*****
******
*******
********
*********
**********
***********
************
*************
**************
***************
****************
*****************
******************
*******************
********************
*********************
**********************
***********************
************************
*************************

---- user output:
*************************
************************
***********************
**********************
*********************
********************
*******************
******************
*****************
****************
***************
**************
*************
************
***********
**********
*********
********
*******
******
*****
****
***
**
*

*
**
****
*******
***********
****************
**********************
*****************************
*************************************
**********************************************
********************************************************
*******************************************************************
*******************************************************************************
********************************************************************************************
**********************************************************************************************************
***********************************************************
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 23:41:06) 
-- CODE:
base = int(input("Informe o tamanho da base: "))

for j in range(0,base):
	
	for i in range(0,base - j):
		print("*",end="")
	print("\n",end="")
	
for j in range(0,base):
		for i in range(0, j+1):
		print("*",end="")
	print("\n",end="")
-- EXECUTION TIME:
0.734779
-- ERROR:
  File "/home/codebench/codes/1807/2567/main.py", line 11
    print("*",end="")
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 23:41:15) 
-- CODE:
base = int(input("Informe o tamanho da base: "))

for j in range(0,base):
	
	for i in range(0,base - j):
		print("*",end="")
	print("\n",end="")
	
for j in range(0,base):
		for i in range(0, j+1):
		print("*",end="")
	print("\n",end="")
-- ERROR:
File "XXXX", line 11
    print("*",end="")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 23:42:46) 
-- CODE:
base = int(input("Informe o tamanho da base: "))

#parte de cima
for j in range(0,base):
	
	for i in range(0,base - j):
		print("*",end="")
	print("\n",end="")
	
#parte debaixo	
for j in range(0,base):
	for i in range(0, j+1):
		print("*",end="")
	print("\n",end="")
-- EXECUTION TIME:
0.798507
-- TEST CASE 1:
---- input:
8
---- correct output:
********
*******
******
*****
****
***
**
*
*
**
***
****
*****
******
*******
********

---- user output:
********
*******
******
*****
****
***
**
*
*
**
***
****
*****
******
*******
********
-- TEST CASE 2:
---- input:
11
---- correct output:
***********
**********
*********
********
*******
******
*****
****
***
**
*
*
**
***
****
*****
******
*******
********
*********
**********
***********

---- user output:
***********
**********
*********
********
*******
******
*****
****
***
**
*
*
**
***
****
*****
******
*******
********
*********
**********
***********
-- TEST CASE 3:
---- input:
25
---- correct output:
*************************
************************
***********************
**********************
*********************
********************
*******************
******************
*****************
****************
***************
**************
*************
************
***********
**********
*********
********
*******
******
*****
****
***
**
*
*
**
***
****
*****
******
*******
********
*********
**********
***********
************
*************
**************
***************
****************
*****************
******************
*******************
********************
*********************
**********************
***********************
************************
*************************

---- user output:
*************************
************************
***********************
**********************
*********************
********************
*******************
******************
*****************
****************
***************
**************
*************
************
***********
**********
*********
********
*******
******
*****
****
***
**
*
*
**
***
****
*****
******
*******
********
*********
**********
***********
************
*************
**************
***************
****************
*****************
******************
*******************
********************
*********************
**********************
***********************
************************
*************************
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
