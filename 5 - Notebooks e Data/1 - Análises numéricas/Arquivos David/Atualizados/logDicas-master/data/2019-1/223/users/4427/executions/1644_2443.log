== SUBMITION (2019-04-16 14:10:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r=float(input("raio do tanque:"))
x=float(input("altura da coluna de ar na parte superior do tanque:"))
N=input("opcao desejada:")

v=pi*x**2*(3*r-x)/3
r=4*pi*r**3/3
s=r-v

if(N=="1"):
	p=v
else:
	p=s

-- EXECUTION TIME:
0.130295
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:

-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 14:10:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r=float(input("raio do tanque:"))
x=float(input("altura da coluna de ar na parte superior do tanque:"))
N=input("opcao desejada:")

v=pi*x**2*(3*r-x)/3
r=4*pi*r**3/3
s=r-v

if(N=="1"):
	p=v
else:
	p=s

print(round(p,4))
-- EXECUTION TIME:
0.12066
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
