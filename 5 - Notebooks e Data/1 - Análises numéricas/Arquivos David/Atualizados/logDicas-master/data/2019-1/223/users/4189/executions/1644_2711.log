== TEST (2019-04-14 20:47:27) 
-- CODE:
valor = int(input("v:"))
qtick = int(input("q:"))
vtick = float(input("v:"))
ponibus = int(input("q:"))
vpasses = float(input("v:"))
soma = (valor - qtick*vtick + ponibus*vpasses)
if(valor >= soma)
   print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- ERROR:
File "XXXX", line 7
    if(valor >= soma)
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:47:41) 
-- CODE:
valor = int(input("v:"))
qtick = int(input("q:"))
vtick = float(input("v:"))
ponibus = int(input("q:"))
vpasses = float(input("v:"))
soma = (valor - qtick*vtick + ponibus*vpasses)
if(valor >= soma):
   print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- OUTPUT:
INSUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:48:08) 
-- CODE:
valor = int(input("v:"))
qtick = int(input("q:"))
vtick = float(input("v:"))
ponibus = int(input("q:"))
vpasses = float(input("v:"))
soma = (valor - qtick*vtick + ponibus*vpasses)
if(valor >= soma):
   print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- EXECUTION TIME:
0.149001
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
INSUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
INSUFICIENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:51:11) 
-- CODE:
valor = int(input("v:"))
qtick = int(input("q:"))
vtick = float(input("v:"))
ponibus = int(input("q:"))
vpasses = float(input("v:"))
soma = (valor - qtick*vtick + ponibus*vpasses)
if(valor >= soma):
	print("insuficiente".upper())
else:
	print("insuficiente".upper())
-- OUTPUT:
INSUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:51:28) 
-- CODE:
valor = int(input("v:"))
qtick = int(input("q:"))
vtick = float(input("v:"))
ponibus = int(input("q:"))
vpasses = float(input("v:"))
soma = (valor - qtick*vtick + ponibus*vpasses)
if(valor >= soma):
	print("insuficiente".upper())
else:
	print("insuficiente".upper())
-- EXECUTION TIME:
0.213427
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
INSUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
INSUFICIENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:54:40) 
-- CODE:
valor = int(input("v:"))
qtick = int(input("q:"))
vtick = float(input("v:"))
ponibus = int(input("q:"))
vpasses = float(input("v:"))
soma = (valor - (qtick*vtick) + (ponibus*vpasses))
if(valor >= soma):
	print("insuficiente".upper())
else:
	print("insuficiente".upper())
-- OUTPUT:
INSUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:55:10) 
-- CODE:
valor = int(input("v:"))
qtick = int(input("q:"))
vtick = float(input("v:"))
ponibus = int(input("q:"))
vpasses = float(input("v:"))
soma = ((valor) - (qtick*vtick) + (ponibus*vpasses))
if(valor >= soma):
	print("insuficiente".upper())
else:
	print("insuficiente".upper())
-- OUTPUT:
INSUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:55:59) 
-- CODE:
valor = int(input("v:"))
qtick = int(input("q:"))
vtick = float(input("v:"))
ponibus = int(input("q:"))
vpasses = float(input("v:"))
soma =  (qtick*vtick) + (ponibus*vpasses)/valor
if(valor >= soma):
	print("insuficiente".upper())
else:
	print("insuficiente".upper())
-- OUTPUT:
INSUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:56:32) 
-- CODE:
valor = int(input("v:"))
qtick = int(input("q:"))
vtick = float(input("v:"))
ponibus = int(input("q:"))
vpasses = float(input("v:"))
soma =  (qtick*vtick) + (ponibus*vpasses) - valor
if(valor >= soma):
	print("insuficiente".upper())
else:
	print("insuficiente".upper())
-- OUTPUT:
INSUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:57:46) 
-- CODE:
valor = int(input("v:"))
qtick = int(input("q:"))
vtick = float(input("v:"))
ponibus = int(input("q:"))
vpasses = float(input("v:"))
soma =  (qtick*vtick) + (ponibus*vpasses) - valor
if(valor >= soma):
	print("suficiente".upper())
else:
	print("insuficente".upper())
-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:58:01) 
-- CODE:
valor = int(input("v:"))
qtick = int(input("q:"))
vtick = float(input("v:"))
ponibus = int(input("q:"))
vpasses = float(input("v:"))
soma =  (qtick*vtick) + (ponibus*vpasses) - valor
if(valor >= soma):
	print("suficiente".upper())
else:
	print("insuficente".upper())
-- EXECUTION TIME:
0.282046
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
SUFICIENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:58:15) 
-- CODE:
valor = int(input("v:"))
qtick = int(input("q:"))
vtick = float(input("v:"))
ponibus = int(input("q:"))
vpasses = float(input("v:"))
soma =  ((qtick*vtick) + (ponibus*vpasses) - valor)
if(valor >= soma):
	print("suficiente".upper())
else:
	print("insuficente".upper())
-- EXECUTION TIME:
0.176579
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
SUFICIENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:58:52) 
-- CODE:
valor = int(input("v:"))
qtick = int(input("q:"))
vtick = float(input("v:"))
ponibus = int(input("q:"))
vpasses = float(input("v:"))
soma = ( valor - qtick*vtick + ponibus*vpasses )
if(valor >= soma):
	print("suficiente".upper())
else:
	print("insuficente".upper())
-- OUTPUT:
INSUFICENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:58:54) 
-- CODE:
valor = int(input("v:"))
qtick = int(input("q:"))
vtick = float(input("v:"))
ponibus = int(input("q:"))
vpasses = float(input("v:"))
soma = ( valor - qtick*vtick + ponibus*vpasses )
if(valor >= soma):
	print("suficiente".upper())
else:
	print("insuficente".upper())
-- EXECUTION TIME:
0.131963
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
INSUFICENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
INSUFICENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:59:46) 
-- CODE:
valor = int(input("v:"))
qtick = int(input("q:"))
vtick = float(input("v:"))
ponibus = int(input("q:"))
vpasses = float(input("v:"))
soma = ( valor - qtick*vtick + ponibus*vpasses )
if(valor > soma):
	print("suficiente".upper())
else:
	print("insuficente".upper())
-- EXECUTION TIME:
0.153051
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
INSUFICENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
INSUFICENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:59:49) 
-- CODE:
valor = int(input("v:"))
qtick = int(input("q:"))
vtick = float(input("v:"))
ponibus = int(input("q:"))
vpasses = float(input("v:"))
soma = ( valor - qtick*vtick + ponibus*vpasses )
if(valor > soma):
	print("suficiente".upper())
else:
	print("insuficente".upper())
-- EXECUTION TIME:
0.175256
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
INSUFICENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
INSUFICENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:59:49) 
-- CODE:
valor = int(input("v:"))
qtick = int(input("q:"))
vtick = float(input("v:"))
ponibus = int(input("q:"))
vpasses = float(input("v:"))
soma = ( valor - qtick*vtick + ponibus*vpasses )
if(valor > soma):
	print("suficiente".upper())
else:
	print("insuficente".upper())
-- EXECUTION TIME:
0.17605
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
INSUFICENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
INSUFICENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:59:50) 
-- CODE:
valor = int(input("v:"))
qtick = int(input("q:"))
vtick = float(input("v:"))
ponibus = int(input("q:"))
vpasses = float(input("v:"))
soma = ( valor - qtick*vtick + ponibus*vpasses )
if(valor > soma):
	print("suficiente".upper())
else:
	print("insuficente".upper())
-- EXECUTION TIME:
0.202263
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
INSUFICENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
INSUFICENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:59:50) 
-- CODE:
valor = int(input("v:"))
qtick = int(input("q:"))
vtick = float(input("v:"))
ponibus = int(input("q:"))
vpasses = float(input("v:"))
soma = ( valor - qtick*vtick + ponibus*vpasses )
if(valor > soma):
	print("suficiente".upper())
else:
	print("insuficente".upper())
-- EXECUTION TIME:
0.219421
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
INSUFICENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
INSUFICENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:01:06) 
-- CODE:
valor = int(input("v:"))
qtick = int(input("q:"))
vtick = float(input("v:"))
ponibus = int(input("q:"))
vpasses = float(input("v:"))
soma = ( valor - qtick*vtick + ponibus*vpasses )
if(valor > soma):
	print(soma)
else:
	print("insuficente".upper())
-- OUTPUT:
INSUFICENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:01:39) 
-- CODE:
valor = int(input("v:"))
qtick = int(input("q:"))
vtick = float(input("v:"))
ponibus = int(input("q:"))
vpasses = float(input("v:"))
soma = ( valor - qtick*vtick + ponibus*vpasses )
if(valor < soma):
	print(soma)
else:
	print("insuficente".upper())
-- OUTPUT:
427.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:03:04) 
-- CODE:
valor = int(input("v:"))
qtick = int(input("q:"))
vtick = float(input("v:"))
ponibus = int(input("q:"))
vpasses = float(input("v:"))
soma =  (qtick*vtick + ponibus*vpasses)/(valor)
if(valor < soma):
	print(soma)
else:
	print("insuficente".upper())
-- OUTPUT:
INSUFICENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:03:23) 
-- CODE:
valor = int(input("v:"))
qtick = int(input("q:"))
vtick = float(input("v:"))
ponibus = int(input("q:"))
vpasses = float(input("v:"))
soma =  (qtick*vtick + ponibus*vpasses)/(valor)
if(valor > soma):
	print(soma)
else:
	print("insuficente".upper())
-- OUTPUT:
0.1575
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:03:48) 
-- CODE:
valor = int(input("v:"))
qtick = int(input("q:"))
vtick = float(input("v:"))
ponibus = int(input("q:"))
vpasses = float(input("v:"))
soma =  (qtick*vtick + ponibus*vpasses) - (valor)
if(valor > soma):
	print(soma)
else:
	print("insuficente".upper())
-- OUTPUT:
-337.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:04:37) 
-- CODE:
valor = int(input("v:"))
qtick = int(input("q:"))
vtick = float(input("v:"))
ponibus = int(input("q:"))
vpasses = float(input("v:"))
soma = (valor) - (qtick*vtick + ponibus*vpasses)  
if(valor > soma):
	print(soma)
else:
	print("insuficente".upper())
-- OUTPUT:
337.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:05:10) 
-- CODE:
valor = int(input("v:"))
qtick = int(input("q:"))
vtick = float(input("v:"))
ponibus = int(input("q:"))
vpasses = float(input("v:"))
soma = (valor) - (qtick*vtick + ponibus*vpasses)  
if(valor > soma):
	print("suficiente".upper())
else:
	print("insuficente".upper())
-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:05:13) 
-- CODE:
valor = int(input("v:"))
qtick = int(input("q:"))
vtick = float(input("v:"))
ponibus = int(input("q:"))
vpasses = float(input("v:"))
soma = (valor) - (qtick*vtick + ponibus*vpasses)  
if(valor > soma):
	print("suficiente".upper())
else:
	print("insuficente".upper())
-- EXECUTION TIME:
0.150508
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
SUFICIENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:05:23) 
-- CODE:
valor = int(input("v:"))
qtick = int(input("q:"))
vtick = float(input("v:"))
ponibus = int(input("q:"))
vpasses = float(input("v:"))
soma = (valor) - (qtick*vtick + ponibus*vpasses)  
if(valor > soma):
	print("suficiente".upper())
else:
	print("insuficente".upper())
-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:17:20) 
-- CODE:
valor = int(input("v:"))
qtick = int(input("q:"))
vtick = float(input("v:"))
ponibus = int(input("q:"))
vpasses = float(input("v:"))
soma = (valor) - (qtick*vtick + ponibus*vpasses)  
if(valor > soma):
	print("suficiente".upper())
else:
	print("insuficente".upper())
-- EXECUTION TIME:
0.192172
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
SUFICIENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:17:21) 
-- CODE:
valor = int(input("v:"))
qtick = int(input("q:"))
vtick = float(input("v:"))
ponibus = int(input("q:"))
vpasses = float(input("v:"))
soma = (valor) - (qtick*vtick + ponibus*vpasses)  
if(valor > soma):
	print("suficiente".upper())
else:
	print("insuficente".upper())
-- EXECUTION TIME:
0.147865
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
SUFICIENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:17:21) 
-- CODE:
valor = int(input("v:"))
qtick = int(input("q:"))
vtick = float(input("v:"))
ponibus = int(input("q:"))
vpasses = float(input("v:"))
soma = (valor) - (qtick*vtick + ponibus*vpasses)  
if(valor > soma):
	print("suficiente".upper())
else:
	print("insuficente".upper())
-- EXECUTION TIME:
0.145231
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
SUFICIENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:17:36) 
-- CODE:
valor = int(input("v:"))
qtick = int(input("q:"))
vtick = float(input("v:"))
ponibus = int(input("q:"))
vpasses = float(input("v:"))
soma = (valor) - (qtick*vtick + ponibus*vpasses)  
if(valor > soma):
	print("suficiente".upper())
else:
	print("insuficiente".upper())
-- EXECUTION TIME:
0.215902
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
SUFICIENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:18:05) 
-- CODE:
valor = int(input("v:"))
qtick = int(input("q:"))
vtick = float(input("v:"))
ponibus = int(input("q:"))
vpasses = float(input("v:"))
soma = ((valor) - (qtick*vtick + ponibus*vpasses))
if(valor > soma):
	print("suficiente".upper())
else:
	print("insuficiente".upper())
-- EXECUTION TIME:
0.180816
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
SUFICIENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:18:06) 
-- CODE:
valor = int(input("v:"))
qtick = int(input("q:"))
vtick = float(input("v:"))
ponibus = int(input("q:"))
vpasses = float(input("v:"))
soma = ((valor) - (qtick*vtick + ponibus*vpasses))
if(valor > soma):
	print("suficiente".upper())
else:
	print("insuficiente".upper())
-- EXECUTION TIME:
0.169965
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
SUFICIENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:19:59) 
-- CODE:
valor = int(input("v:"))
qtick = int(input("q:"))
vtick = float(input("v:"))
ponibus = int(input("q:"))
vpasses = float(input("v:"))
soma = ((valor) - (qtick*vtick + ponibus*vpasses))
if (valor > soma):
	print("suficiente".upper())
else:
	print("insuficiente".upper())
-- EXECUTION TIME:
0.158203
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
SUFICIENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:20:48) 
-- CODE:
valor = int(input("v:"))
qtick = int(input("q:"))
vtick = float(input("v:"))
ponibus = int(input("q:"))
vpasses = float(input("v:"))
soma = ((valor) - (qtick*vtick + ponibus*vpasses))
if(valor > soma):
	print("suficiente".upper())
else:
	print("insuficiente".upper())
-- EXECUTION TIME:
0.176106
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
SUFICIENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:44:25) 
-- CODE:
valor = int(input("v:"))
qtick = int(input("q:"))
vtick = float(input("v:"))
ponibus = int(input("q:"))
vpasses = float(input("v:"))
soma = (valor) - (qtick*vtick + ponibus*vpasses)
if(valor > soma):
	print("suficiente".upper())
else:
	print("insuficiente".upper())
-- EXECUTION TIME:
0.207081
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
SUFICIENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:53:35) 
-- CODE:
valor = int(input("v:"))
qtick = int(input("q:"))
vtick = float(input("v:"))
ponibus = int(input("q:"))
vpasses = float(input("v:"))
soma = (valor) - (qtick*vtick + ponibus*vpasses)
if(valor > soma == 0):
	print("suficiente".upper())
else:
	print("insuficiente".upper())
-- EXECUTION TIME:
0.235834
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
INSUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
INSUFICIENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:53:38) 
-- CODE:
valor = int(input("v:"))
qtick = int(input("q:"))
vtick = float(input("v:"))
ponibus = int(input("q:"))
vpasses = float(input("v:"))
soma = (valor) - (qtick*vtick + ponibus*vpasses)
if(valor > soma == 0):
	print("suficiente".upper())
else:
	print("insuficiente".upper())
-- EXECUTION TIME:
0.167715
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
INSUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
INSUFICIENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:53:47) 
-- CODE:
valor = int(input("v:"))
qtick = int(input("q:"))
vtick = float(input("v:"))
ponibus = int(input("q:"))
vpasses = float(input("v:"))
soma = (valor) - (qtick*vtick + ponibus*vpasses)
if(valor > soma = 0):
	print("suficiente".upper())
else:
	print("insuficiente".upper())
-- EXECUTION TIME:
0.190565
-- ERROR:
  File "/home/codebench/codes/1644/2711/main.py", line 7
    if(valor > soma = 0):
                    ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:56:35) 
-- CODE:
valor = int(input("v:"))
qtick = int(input("q:"))
vtick = float(input("v:"))
ponibus = int(input("q:"))
vpasses = float(input("v:"))
soma = (valor) - (qtick*vtick + ponibus*vpasses)
if( soma==0 ):
	print("suficiente".upper())
else:
	print("insuficiente".upper())
-- EXECUTION TIME:
0.164514
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
INSUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
INSUFICIENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:56:37) 
-- CODE:
valor = int(input("v:"))
qtick = int(input("q:"))
vtick = float(input("v:"))
ponibus = int(input("q:"))
vpasses = float(input("v:"))
soma = (valor) - (qtick*vtick + ponibus*vpasses)
if( soma==0 ):
	print("suficiente".upper())
else:
	print("insuficiente".upper())
-- EXECUTION TIME:
0.199416
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
INSUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
INSUFICIENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:56:48) 
-- CODE:
valor = int(input("v:"))
qtick = int(input("q:"))
vtick = float(input("v:"))
ponibus = int(input("q:"))
vpasses = float(input("v:"))
soma = (valor) - (qtick*vtick + ponibus*vpasses)
if(soma==0):
	print("suficiente".upper())
else:
	print("insuficiente".upper())
-- EXECUTION TIME:
0.217204
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
INSUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
INSUFICIENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:56:54) 
-- CODE:
valor = int(input("v:"))
qtick = int(input("q:"))
vtick = float(input("v:"))
ponibus = int(input("q:"))
vpasses = float(input("v:"))
soma = (valor) - (qtick*vtick + ponibus*vpasses)
if(soma=0):
	print("suficiente".upper())
else:
	print("insuficiente".upper())
-- EXECUTION TIME:
0.139547
-- ERROR:
  File "/home/codebench/codes/1644/2711/main.py", line 7
    if(soma=0):
           ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:56:55) 
-- CODE:
valor = int(input("v:"))
qtick = int(input("q:"))
vtick = float(input("v:"))
ponibus = int(input("q:"))
vpasses = float(input("v:"))
soma = (valor) - (qtick*vtick + ponibus*vpasses)
if(soma=0):
	print("suficiente".upper())
else:
	print("insuficiente".upper())
-- EXECUTION TIME:
0.110327
-- ERROR:
  File "/home/codebench/codes/1644/2711/main.py", line 7
    if(soma=0):
           ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 22:00:33) 
-- CODE:
valor = int(input("v:"))
qtick = int(input("q:"))
vtick = float(input("v:"))
ponibus = int(input("q:"))
vpasses = float(input("v:"))
soma = (valor) - (qtick*vtick + ponibus*vpasses)
if(soma>=0):
	print("suficiente".upper())
else:
	print("insuficiente".upper())
-- EXECUTION TIME:
0.132949
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
INSUFICIENTE
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
