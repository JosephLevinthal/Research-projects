== TEST (2019-03-26 16:40:20) 
-- CODE:
print(float("Adicao: ", 5 + 3))

print(float("Subtracao: ",10-2))

print (float("Multiplicacao: ",2*4))

print(float("Divisao: ", 16//2))

print(float("Resto: ",17%9 ))

print (float("Potenciacao: ", 2**3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    print(float("Adicao: ", 5 + 3))
TypeError: float() takes at most 1 argument (2 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 16:40:56) 
-- CODE:
print(float("Adicao: ", 5 + 3))

print(float("Subtracao: ",10-2))

print(float("Multiplicacao: ",2*4))

print(float("Divisao: ", 16//2))

print(float("Resto: ",17%9 ))

print(float("Potenciacao: ", 2**3))
-- EXECUTION TIME:
0.181275
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1582/1334/main.py", line 1, in <module>
    print(float("Adicao: ", 5 + 3))
TypeError: float() takes at most 1 argument (2 given)

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:41:00) 
-- CODE:
print(float("Adicao: ", 5 + 3))

print(float("Subtracao: ",10-2))

print(float("Multiplicacao: ",2*4))

print(float("Divisao: ", 16//2))

print(float("Resto: ",17%9 ))

print(float("Potenciacao: ", 2**3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    print(float("Adicao: ", 5 + 3))
TypeError: float() takes at most 1 argument (2 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 16:41:36) 
-- CODE:
print(float("Adicao: ",5 + 3))

print(float("Subtracao: ",10-2))

print(float("Multiplicacao: ",2*4))

print(float("Divisao: ", 16//2))

print(float("Resto: ",17%9 ))

print(float("Potenciacao: ", 2**3))
-- EXECUTION TIME:
0.18082
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1582/1334/main.py", line 1, in <module>
    print(float("Adicao: ",5 + 3))
TypeError: float() takes at most 1 argument (2 given)

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:41:38) 
-- CODE:
print(float("Adicao: ",5 + 3))

print(float("Subtracao: ",10-2))

print(float("Multiplicacao: ",2*4))

print(float("Divisao: ", 16//2))

print(float("Resto: ",17%9 ))

print(float("Potenciacao: ", 2**3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    print(float("Adicao: ",5 + 3))
TypeError: float() takes at most 1 argument (2 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:41:51) 
-- CODE:
print(float("Adicao: " 5 + 3))

print(float("Subtracao: ",10-2))

print(float("Multiplicacao: ",2*4))

print(float("Divisao: ", 16//2))

print(float("Resto: ",17%9 ))

print(float("Potenciacao: ", 2**3))
-- ERROR:
File "XXXX", line 1
    print(float("Adicao: " 5 + 3))
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:42:16) 
-- CODE:
print(int("Adicao: " 5 + 3))

print(float("Subtracao: ",10-2))

print(float("Multiplicacao: ",2*4))

print(float("Divisao: ", 16//2))

print(float("Resto: ",17%9 ))

print(float("Potenciacao: ", 2**3))
-- ERROR:
File "XXXX", line 1
    print(int("Adicao: " 5 + 3))
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:42:51) 
-- CODE:
print("Adicao: " 5 + 3)

print(float("Subtracao: ",10-2))

print(float("Multiplicacao: ",2*4))

print(float("Divisao: ", 16//2))

print(float("Resto: ",17%9 ))

print(float("Potenciacao: ", 2**3))
-- ERROR:
File "XXXX", line 1
    print("Adicao: " 5 + 3)
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:43:01) 
-- CODE:
print("Adicao: ", 5 + 3)

print(float("Subtracao: ",10-2))

print(float("Multiplicacao: ",2*4))

print(float("Divisao: ", 16//2))

print(float("Resto: ",17%9 ))

print(float("Potenciacao: ", 2**3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    print(float("Subtracao: ",10-2))
TypeError: float() takes at most 1 argument (2 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:43:27) 
-- CODE:
print("Adicao: ",5 + 3)

print(float("Subtracao: ",10-2))

print(float("Multiplicacao: ",2*4))

print(float("Divisao: ", 16//2))

print(float("Resto: ",17%9 ))

print(float("Potenciacao: ", 2**3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    print(float("Subtracao: ",10-2))
TypeError: float() takes at most 1 argument (2 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:43:54) 
-- CODE:
print("Adicao: ",5 + 3)

print("Subtracao: ",10-2)

print(float("Multiplicacao: ",2*4))

print(float("Divisao: ", 16//2))

print(float("Resto: ",17%9 ))

print(float("Potenciacao: ", 2**3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(float("Multiplicacao: ",2*4))
TypeError: float() takes at most 1 argument (2 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:44:13) 
-- CODE:
print("Adicao: ",5 + 3)

print("Subtracao: ",10-2)

print("Multiplicacao: ",2*4)

print("Divisao: ", 16//2)

print("Resto: ",17%9 )

print(float("Potenciacao: ", 2**3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(float("Potenciacao: ", 2**3))
TypeError: float() takes at most 1 argument (2 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:44:25) 
-- CODE:
print("Adicao: ",5 + 3)

print("Subtracao: ",10-2)

print("Multiplicacao: ",2*4)

print("Divisao: ", 16//2)

print("Resto: ",17%9 )

print("Potenciacao: ", 2**3)
-- OUTPUT:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8
Resto:  8
Potenciacao:  8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 16:44:29) 
-- CODE:
print("Adicao: ",5 + 3)

print("Subtracao: ",10-2)

print("Multiplicacao: ",2*4)

print("Divisao: ", 16//2)

print("Resto: ",17%9 )

print("Potenciacao: ", 2**3)
-- EXECUTION TIME:
0.1713
-- TEST CASE 1:
---- input:
xxx
---- correct output:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto:  8
Potenciacao:  8
---- user output:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8
Resto:  8
Potenciacao:  8
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:44:45) 
-- CODE:
print("Adicao: ",5 + 3)

print("Subtracao: ",10-2)

print("Multiplicacao: ",2*4)

print("Divisao: ",16//2)

print("Resto: ",17%9 )

print("Potenciacao: ",2**3)
-- OUTPUT:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8
Resto:  8
Potenciacao:  8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:44:55) 
-- CODE:
print("Adicao: ",5 + 3)

print("Subtracao: ",10-2)

print("Multiplicacao: ",2*4)

print("Divisao: ",16//2)

print("Resto: ",17%9)

print("Potenciacao: ",2**3)
-- OUTPUT:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8
Resto:  8
Potenciacao:  8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 16:45:00) 
-- CODE:
print("Adicao: ",5 + 3)

print("Subtracao: ",10-2)

print("Multiplicacao: ",2*4)

print("Divisao: ",16//2)

print("Resto: ",17%9)

print("Potenciacao: ",2**3)
-- EXECUTION TIME:
0.187294
-- TEST CASE 1:
---- input:
xxx
---- correct output:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto:  8
Potenciacao:  8
---- user output:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8
Resto:  8
Potenciacao:  8
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:46:04) 
-- CODE:
print("Adicao: ",5 + 3)

print("Subtracao: ",10-2)

print("Multiplicacao: ",2*4)

print("Divisao: ",16//2)

print (float("Resto: ",17%9))

print (float("Potenciacao: ",2**3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print (float("Resto: ",17%9))
TypeError: float() takes at most 1 argument (2 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:46:29) 
-- CODE:
print("Adicao: ",5 + 3)

print("Subtracao: ",10-2)

print("Multiplicacao: ",2*4)

print("Divisao: ",16//2)

print("Resto: ",17%9)

print("Potenciacao: ",2**3)
-- OUTPUT:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8
Resto:  8
Potenciacao:  8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:46:42) 
-- CODE:
print("Adicao: ",5 + 3)

print("Subtracao: ",10-2)

print("Multiplicacao: ",2*4)

print("Divisao: ",16//2)

print("Resto: ",17 % 9)

print("Potenciacao: ",2**3)
-- OUTPUT:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8
Resto:  8
Potenciacao:  8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:46:53) 
-- CODE:
print("Adicao: ",5 + 3)

print("Subtracao: ",10-2)

print("Multiplicacao: ",2*4)

print("Divisao: ",16//2)

print("Resto: ",17%9)

print("Potenciacao: ",2**3)
-- OUTPUT:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8
Resto:  8
Potenciacao:  8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 16:46:56) 
-- CODE:
print("Adicao: ",5 + 3)

print("Subtracao: ",10-2)

print("Multiplicacao: ",2*4)

print("Divisao: ",16//2)

print("Resto: ",17%9)

print("Potenciacao: ",2**3)
-- EXECUTION TIME:
0.199644
-- TEST CASE 1:
---- input:
xxx
---- correct output:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto:  8
Potenciacao:  8
---- user output:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8
Resto:  8
Potenciacao:  8
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 16:47:12) 
-- CODE:
print("Adicao: ",5 + 3)

print("Subtracao: ",10-2)

print("Multiplicacao: ",2*4)

print("Divisao: ",16/2)

print("Resto: ",17%9)

print("Potenciacao: ",2**3)
-- OUTPUT:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto:  8
Potenciacao:  8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 16:47:15) 
-- CODE:
print("Adicao: ",5 + 3)

print("Subtracao: ",10-2)

print("Multiplicacao: ",2*4)

print("Divisao: ",16/2)

print("Resto: ",17%9)

print("Potenciacao: ",2**3)
-- EXECUTION TIME:
0.17385
-- TEST CASE 1:
---- input:
xxx
---- correct output:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto:  8
Potenciacao:  8
---- user output:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto:  8
Potenciacao:  8
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 07:06:59) 
-- CODE:
print("Adicao: ",5 + 3)

print("Subtracao: ",10-2)

print("Multiplicacao: ",2*4)

print("Divisao: ",16/2)

print("Resto: ",17%9)

print("Potenciacao: ",2**3)
-- OUTPUT:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto:  8
Potenciacao:  8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
