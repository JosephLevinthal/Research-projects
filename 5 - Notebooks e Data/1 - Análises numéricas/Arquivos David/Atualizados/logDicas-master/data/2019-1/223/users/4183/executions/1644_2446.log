== TEST (2019-04-07 23:27:03) 
-- CODE:
s = float(input("Senha: "))
a = (s//100000)%10
b = (s//10000)%10
c = (s//1000)%10
d = (s//100)%10
e = (s//10)%10
f = (s//1)%10
if (b+d+f % a+c+e == 0 ):
	print("acesso liberado")
else:
	print(senha invalida)
-- ERROR:
File "XXXX", line 11
    print(senha invalida)
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:27:15) 
-- CODE:
s = float(input("Senha: "))
a = (s//100000)%10
b = (s//10000)%10
c = (s//1000)%10
d = (s//100)%10
e = (s//10)%10
f = (s//1)%10
if (b+d+f % a+c+e == 0 ):
	print("acesso liberado")
else:
	print("senha invalida")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    if (b+d+f % a+c+e == 0 ):
ZeroDivisionError: float modulo
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:27:34) 
-- CODE:
s = float(input("Senha: "))
a = (s//100000)%10
b = (s//10000)%10
c = (s//1000)%10
d = (s//100)%10
e = (s//10)%10
f = (s//1)%10
if (b+d+f % a+c+e == 0 ):
	print("acesso liberado")
else:
	print("senha invalida")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    if (b+d+f % a+c+e == 0 ):
ZeroDivisionError: float modulo
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:27:41) 
-- CODE:
s = float(input("Senha: "))
a = (s//100000)%10
b = (s//10000)%10
c = (s//1000)%10
d = (s//100)%10
e = (s//10)%10
f = (s//1)%10
if (b+d+f % a+c+e == 0 ):
	print("acesso liberado")
else:
	print("senha invalida")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    if (b+d+f % a+c+e == 0 ):
ZeroDivisionError: float modulo
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:28:41) 
-- CODE:
s = int(input("Senha: "))
a = (s//100000)%10
b = (s//10000)%10
c = (s//1000)%10
d = (s//100)%10
e = (s//10)%10
f = (s//1)%10
if (b+d+f % a+c+e == 0 :
	print("acesso liberado")
else:
	print("senha invalida")
-- ERROR:
File "XXXX", line 8
    if (b+d+f % a+c+e == 0 :
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:28:52) 
-- CODE:
s = int(input("Senha: "))
a = (s//100000)%10
b = (s//10000)%10
c = (s//1000)%10
d = (s//100)%10
e = (s//10)%10
f = (s//1)%10
if (b+d+f % a+c+e == 0):
	print("acesso liberado")
else:
	print("senha invalida")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    if (b+d+f % a+c+e == 0):
ZeroDivisionError: integer division or modulo by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:29:50) 
-- CODE:
s = input("Senha: ")
a = (s//100000)%10
b = (s//10000)%10
c = (s//1000)%10
d = (s//100)%10
e = (s//10)%10
f = (s//1)%10
if (b+d+f % a+c+e == 0):
	print("acesso liberado")
else:
	print("senha invalida")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    a = (s//100000)%10
TypeError: unsupported operand type(s) for //: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:30:07) 
-- CODE:
s = float(input("Senha: "))
a = (s//100000)%10
b = (s//10000)%10
c = (s//1000)%10
d = (s//100)%10
e = (s//10)%10
f = (s//1)%10
if (b+d+f % a+c+e == 0):
	print("acesso liberado")
else:
	print("senha invalida")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    if (b+d+f % a+c+e == 0):
ZeroDivisionError: float modulo
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:31:03) 
-- CODE:
s = float(input("Senha: "))
a = (s//100000)%10
b = (s//10000)%10
c = (s//1000)%10
d = (s//100)%10
e = (s//10)%10
f = (s//1)%10
if ((b+d+f) % (a+c+e) == 0):
	print("acesso liberado")
else:
	print("senha invalida")
-- OUTPUT:
acesso liberado
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 23:31:12) 
-- CODE:
s = float(input("Senha: "))
a = (s//100000)%10
b = (s//10000)%10
c = (s//1000)%10
d = (s//100)%10
e = (s//10)%10
f = (s//1)%10
if ((b+d+f) % (a+c+e) == 0):
	print("acesso liberado")
else:
	print("senha invalida")
-- EXECUTION TIME:
0.179031
-- TEST CASE 1:
---- input:
087612
---- correct output:
acesso liberado
---- user output:
acesso liberado
-- TEST CASE 2:
---- input:
760834
---- correct output:
senha invalida
---- user output:
senha invalida
-- TEST CASE 3:
---- input:
122967
---- correct output:
acesso liberado
---- user output:
acesso liberado
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
