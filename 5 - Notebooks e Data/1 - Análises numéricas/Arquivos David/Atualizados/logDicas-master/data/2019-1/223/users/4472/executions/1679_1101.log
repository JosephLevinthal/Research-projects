== TEST (2019-04-25 10:51:50) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalação: R - Residencias | I - Insdustrias | C - Comercios: ")

if (instalacao == "R"):
	if (consumo <= 500):
		preco = consumo * 0.44
	else:
		preco = consumo * 0.65
elif (instalacao == "I"):
	if (consumo <= 1000):
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
elif (instalacao == "C"):
	if (consumo <= 5000):
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
else:
	print ("Dados invalidos")
	
print ("Entradas: ", consumo, " kWh e tipo ", instalacao)
print ("Valor total: R$")

-- OUTPUT:
Entradas:  -56.0  kWh e tipo  I
Valor total: R$
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:52:17) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")

if (instalacao == "R"):
	if (consumo <= 500):
		preco = consumo * 0.44
	else:
		preco = consumo * 0.65
elif (instalacao == "I"):
	if (consumo <= 1000):
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
elif (instalacao == "C"):
	if (consumo <= 5000):
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
else:
	print ("Dados invalidos")
	
print ("Entradas: ", consumo, " kWh e tipo ", instalacao)
print ("Valor total: R$")

-- OUTPUT:
Entradas:  -56.0  kWh e tipo  I
Valor total: R$
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:52:38) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")

if (instalacao == "R"):
	if (consumo <= 500):
		preco = consumo * 0.44
	else:
		preco = consumo * 0.65
elif (instalacao == "I"):
	if (consumo <= 1000):
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
elif (instalacao == "C"):
	if (consumo <= 5000):
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
else:
	print ("Dados invalidos")
	
print ("Entradas: ", consumo, " kWh e tipo ", instalacao)
print ("Valor total: R$", preco)

-- OUTPUT:
Entradas:  -56.0  kWh e tipo  I
Valor total: R$ -30.800000000000004
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:10:08) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")

if (instalacao == "R"):
	if (consumo > 0):
		elif (consumo <= 500):
			preco = consumo * 0.44
		else:
			preco = consumo * 0.65
elif (instalacao == "I"):
	if (consumo > 0):
		elif (consumo <= 1000):
			preco = consumo * 0.55
		else:
			preco = consumo * 0.60
elif (instalacao == "C"):
	if (consumo > 0):
		elif (consumo <= 5000):
			preco = consumo * 0.55
		else:
			preco = consumo * 0.60
else:
	print ("Dados invalidos")
	
print ("Entradas: ", consumo, " kWh e tipo ", instalacao)
print ("Valor total: R$", preco)

-- ERROR:
File "XXXX", line 6
    elif (consumo <= 500):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:11:15) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")

if (instalacao == "R"):
	if (consumo > 0):
		elif (consumo <= 500):
			preco = consumo * 0.44
		else:
			preco = consumo * 0.65
			
elif (instalacao == "I"):
	if (consumo > 0):
		elif (consumo <= 1000):
			preco = consumo * 0.55
		else:
			preco = consumo * 0.60
			
elif (instalacao == "C"):
	if (consumo > 0):
		elif (consumo <= 5000):
			preco = consumo * 0.55
		else:
			preco = consumo * 0.60
else:
	print ("Dados invalidos")
	
print ("Entradas: ", consumo, " kWh e tipo ", instalacao)
print ("Valor total: R$", preco)

-- EXECUTION TIME:
0.119281
-- ERROR:
  File "/home/codebench/codes/1679/1101/main.py", line 6
    elif (consumo <= 500):
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:11:16) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")

if (instalacao == "R"):
	if (consumo > 0):
		elif (consumo <= 500):
			preco = consumo * 0.44
		else:
			preco = consumo * 0.65
			
elif (instalacao == "I"):
	if (consumo > 0):
		elif (consumo <= 1000):
			preco = consumo * 0.55
		else:
			preco = consumo * 0.60
			
elif (instalacao == "C"):
	if (consumo > 0):
		elif (consumo <= 5000):
			preco = consumo * 0.55
		else:
			preco = consumo * 0.60
else:
	print ("Dados invalidos")
	
print ("Entradas: ", consumo, " kWh e tipo ", instalacao)
print ("Valor total: R$", preco)

-- ERROR:
File "XXXX", line 6
    elif (consumo <= 500):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:12:04) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")

if (instalacao == "R"):
	if (consumo > 0):
		elif (consumo <= 500):
			preco = consumo * 0.44
		else:
			preco = consumo * 0.65
			
elif (instalacao == "I"):
	if (consumo > 0):
		elif (consumo <= 1000):
			preco = consumo * 0.55
		else:
			preco = consumo * 0.60
			
elif (instalacao == "C"):
	if (consumo > 0):
		elif (consumo <= 5000):
			preco = consumo * 0.55
		else:
			preco = consumo * 0.60
else:
	print ("Dados invalidos")
	
print ("Entradas: ", consumo, " kWh e tipo ", instalacao)
print ("Valor total: R$", preco)

-- ERROR:
File "XXXX", line 6
    elif (consumo <= 500):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:12:29) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")

if (instalacao == "R"):
	if (consumo > 0):
		elif consumo <= 500:
			preco = consumo * 0.44
		else:
			preco = consumo * 0.65
			
elif (instalacao == "I"):
	if (consumo > 0):
		elif (consumo <= 1000):
			preco = consumo * 0.55
		else:
			preco = consumo * 0.60
			
elif (instalacao == "C"):
	if (consumo > 0):
		elif (consumo <= 5000):
			preco = consumo * 0.55
		else:
			preco = consumo * 0.60
else:
	print ("Dados invalidos")
	
print ("Entradas: ", consumo, " kWh e tipo ", instalacao)
print ("Valor total: R$", preco)

-- ERROR:
File "XXXX", line 6
    elif consumo <= 500:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:14:01) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")

if (instalacao == "R"):
	if (consumo < 0):
		preco = 0
		elif consumo <= 500:
			preco = consumo * 0.44
		else:
			preco = consumo * 0.65
			
elif (instalacao == "I"):
	if (consumo < 0):
		preco = 0
		elif (consumo <= 1000):
			preco = consumo * 0.55
		else:
			preco = consumo * 0.60
			
elif (instalacao == "C"):
	if (consumo < 0):
		preco < 0
		elif (consumo <= 5000):
			preco = consumo * 0.55
		else:
			preco = consumo * 0.60
else:
	print ("Dados invalidos")
	
print ("Entradas: ", consumo, " kWh e tipo ", instalacao)
print ("Valor total: R$", preco)

-- ERROR:
File "XXXX", line 7
    elif consumo <= 500:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:19:03) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")

if (instalacao == "R"):
	if consumo < 0:
		preco = -1
		elif consumo <= 500:
			preco = consumo * 0.44
		else:
			preco = consumo * 0.65
	
	elif (instalacao == "I"):
	if consumo < 0:
		preco = -1
		elif (consumo <= 1000):
			preco = consumo * 0.55
		else:
			preco = consumo * 0.60
			
	elif (instalacao == "C"):
		if consumo < 0:
			preco = -1
		elif (consumo <= 5000):
			preco = consumo * 0.55
		else:
			preco = consumo * 0.60
	else:
		preco = -1
else:
	print ("Dados invalidos")
	
print ("Entradas: ", consumo, " kWh e tipo ", instalacao)
print ("Valor total: R$", preco)

-- ERROR:
File "XXXX", line 7
    elif consumo <= 500:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:51:11) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")

if (instalacao == "R"):
	if consumo < 0:
		preco = -1
		elif consumo <= 500:
			preco = consumo * 0.44
		else:
			preco = consumo * 0.65
	
	elif (instalacao == "I"):
	if consumo < 0:
		preco = -1
		elif (consumo <= 1000):
			preco = consumo * 0.55
		else:
			preco = consumo * 0.60
			
	elif (instalacao == "C"):
		if consumo < 0:
			preco = -1
		elif (consumo <= 5000):
			preco = consumo * 0.55
		else:
			preco = consumo * 0.60
	else:
		preco = -1
else:
	print ("Dados invalidos")
	
print ("Entradas: ", consumo, " kWh e tipo ", instalacao)
print ("Valor total: R$", preco)

-- ERROR:
File "XXXX", line 7
    elif consumo <= 500:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:52:15) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")

if (instalacao == "R"):
	if consumo < 0:
		elif consumo <= 500:
			preco = consumo * 0.44
		else:
			preco = consumo * 0.65
	
	elif (instalacao == "I"):
	if consumo < 0:
		elif (consumo <= 1000):
			preco = consumo * 0.55
		else:
			preco = consumo * 0.60
			
	elif (instalacao == "C"):
		if consumo < 0:
		elif (consumo <= 5000):
			preco = consumo * 0.55
		else:
			preco = consumo * 0.60

else:
	print ("Dados invalidos")
	
print ("Entradas: ", consumo, " kWh e tipo ", instalacao)
print ("Valor total: R$", preco)

-- ERROR:
File "XXXX", line 6
    elif consumo <= 500:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:58:44) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")

if (instalacao == "R"):
	if consumo < 0 and consumo <= 500:
		preco = consumo * 0.44
	else:
		preco = consumo * 0.65
	
elif (instalacao == "I"):
	if consumo < 0 and consumo <= 1000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
			
elif (instalacao == "C"):
	if consumo < 0 and consumo <= 5000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60

else:
	print ("Dados invalidos")
	
print ("Entradas: ", consumo, " kWh e tipo ", instalacao)
print ("Valor total: R$", preco)

-- OUTPUT:
Entradas:  -56.0  kWh e tipo  I
Valor total: R$ -30.800000000000004
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:03:06) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")
preco = float

if (instalacao == "R"):
	if consumo < 0 and consumo <= 500:
		preco = consumo * 0.44
	else:
		preco = consumo * 0.65
	
elif (instalacao == "I"):
	if consumo < 0 and consumo <= 1000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
			
elif (instalacao == "C"):
	if consumo < 0 and consumo <= 5000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60

else:
	print ("Dados invalidos")
	
print ("Entradas: ", consumo, " kWh e tipo ", instalacao)
print ("Valor total: R$", preco)

-- EXECUTION TIME:
0.199719
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0  kWh e tipo  I
Valor total: R$ -30.800000000000004
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5  kWh e tipo  R
Valor total: R$ 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:03:07) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")
preco = float

if (instalacao == "R"):
	if consumo < 0 and consumo <= 500:
		preco = consumo * 0.44
	else:
		preco = consumo * 0.65
	
elif (instalacao == "I"):
	if consumo < 0 and consumo <= 1000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
			
elif (instalacao == "C"):
	if consumo < 0 and consumo <= 5000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60

else:
	print ("Dados invalidos")
	
print ("Entradas: ", consumo, " kWh e tipo ", instalacao)
print ("Valor total: R$", preco)

-- OUTPUT:
Entradas:  -56.0  kWh e tipo  I
Valor total: R$ -30.800000000000004
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:04:53) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")
preco = float

if (instalacao == "R"):
	if consumo < 0 and consumo <= 500:
		preco = consumo * 0.44
	else:
		preco = consumo * 0.65
	
elif (instalacao == "I"):
	if consumo < 0 and consumo <= 1000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
			
elif (instalacao == "C"):
	if consumo < 0 and consumo <= 5000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60

else:
	print ("Dados invalidos")
	
print ("Entradas: ", consumo, " kWh e tipo ", instalacao)
print ("Valor total: R$", round(preco,2))

-- OUTPUT:
Entradas:  -56.0  kWh e tipo  I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:05:14) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")

if (instalacao == "R"):
	if consumo < 0 and consumo <= 500:
		preco = consumo * 0.44
	else:
		preco = consumo * 0.65
	
elif (instalacao == "I"):
	if consumo < 0 and consumo <= 1000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
			
elif (instalacao == "C"):
	if consumo < 0 and consumo <= 5000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60

else:
	print ("Dados invalidos")
	
print ("Entradas: ", consumo, " kWh e tipo ", instalacao)
print ("Valor total: R$", round(preco,2))

-- OUTPUT:
Entradas:  -56.0  kWh e tipo  I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:09:41) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")

if consumo < 0:
	print ("Dados invalidos")

elif (instalacao == "R"):
	if consumo < 0 and consumo <= 500:
		preco = consumo * 0.44
	else:
		preco = consumo * 0.65
	
elif (instalacao == "I"):
	if consumo < 0 and consumo <= 1000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
			
elif (instalacao == "C"):
	if consumo < 0 and consumo <= 5000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60

#else:
	
	
print ("Entradas: ", consumo, " kWh e tipo ", instalacao)
print ("Valor total: R$", round(preco,2))

-- EXECUTION TIME:
0.114974
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1101/main.py", line 29, in <module>
    print ("Valor total: R$", round(preco,2))
NameError: name 'preco' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:09:42) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")

if consumo < 0:
	print ("Dados invalidos")

elif (instalacao == "R"):
	if consumo < 0 and consumo <= 500:
		preco = consumo * 0.44
	else:
		preco = consumo * 0.65
	
elif (instalacao == "I"):
	if consumo < 0 and consumo <= 1000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
			
elif (instalacao == "C"):
	if consumo < 0 and consumo <= 5000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60

#else:
	
	
print ("Entradas: ", consumo, " kWh e tipo ", instalacao)
print ("Valor total: R$", round(preco,2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 29, in <module>
    print ("Valor total: R$", round(preco,2))
NameError: name 'preco' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:10:13) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")

if consumo < 0:
	print ("Dados invalidos")

elif (instalacao == "R"):
	if consumo < 0 and consumo <= 500:
		preco = consumo * 0.44
	else:
		preco = consumo * 0.65
	
elif (instalacao == "I"):
	if consumo < 0 and consumo <= 1000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
			
elif (instalacao == "C"):
	if consumo < 0 and consumo <= 5000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60

#else:
	
	
print ("Entradas: ", consumo, " kWh e tipo ", instalacao)
print ("Valor total: R$", round(preco,2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 29, in <module>
    print ("Valor total: R$", round(preco,2))
NameError: name 'preco' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:12:32) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")

if consumo < 0:
	print ("Dados invalidos")

elif (instalacao == "R"):
	if consumo <= 500:
		preco = consumo * 0.44
	else:
		preco = consumo * 0.65
	
elif (instalacao == "I"):
	if consumo <= 1000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
			
elif (instalacao == "C"):
	if consumo <= 5000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60

#else:
	
	
print ("Entradas: ", consumo, " kWh e tipo ", instalacao)
print ("Valor total: R$", round(preco,2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 29, in <module>
    print ("Valor total: R$", round(preco,2))
NameError: name 'preco' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:15:52) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")
preco = float

if consumo < 0:
	print ("Dados invalidos")

elif (instalacao == "R"):
	if consumo <= 500:
		preco = consumo * 0.44
	else:
		preco = consumo * 0.65
	
elif (instalacao == "I"):
	if consumo <= 1000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
			
elif (instalacao == "C"):
	if consumo <= 5000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60

#else:
	
	
print ("Entradas: ", consumo, " kWh e tipo ", instalacao)
print ("Valor total: R$", round(preco,2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 30, in <module>
    print ("Valor total: R$", round(preco,2))
TypeError: type type doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:16:23) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")
preco = float

if consumo < 0:
	print ("Dados invalidos")

elif (instalacao == "R"):
	if consumo <= 500:
		preco = consumo * 0.44
	else:
		preco = consumo * 0.65
	
elif (instalacao == "I"):
	if consumo <= 1000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
			
elif (instalacao == "C"):
	if consumo <= 5000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60

#else:
	
	
print ("Entradas: ", consumo, " kWh e tipo ", instalacao)
print ("Valor total: R$", preco,2)

-- OUTPUT:
Dados invalidos
Entradas:  -56.0  kWh e tipo  I
Valor total: R$ <class 'float'> 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:26:09) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")
oreco500 = 0.44
precoa500 = 0.65
preco1000 = 0.65
precoa1000 = 0.55
preco5000 = 0.55
precoa5000 = 0.60

print ("Entradas: ", consumo, " kWh e tipo ", instalacao)

if consumo < 0:
	print ("Dados invalidos")
	
elif (instalacao == "R"):
	if consumo <= 500:
		total = preco500 * consumo
	else:
		total = precoa500 * consumo
	
elif (instalacao == "I"):
	total = preco1000 * consumo
	else:
		total = precoa1000 * consumo
			
elif (instalacao == "C"):
	total = preco5000 * consumo
	else:
		total = precoa5000 * consumo
	
print ("Valor total: R$", total)
-- ERROR:
File "XXXX", line 23
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:26:50) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")
oreco500 = 0.44
precoa500 = 0.65
preco1000 = 0.65
precoa1000 = 0.55
preco5000 = 0.55
precoa5000 = 0.60

print ("Entradas: ", consumo, " kWh e tipo ", instalacao)

if consumo < 0:
	print ("Dados invalidos")
	
elif (instalacao == "R"):
	if consumo <= 500:
		total = preco500 * consumo
	else:
		total = precoa500 * consumo
	
elif (instalacao == "I"):
	if consumo <= 1000:
	total = preco1000 * consumo
	else:
		total = precoa1000 * consumo
			
elif (instalacao == "C"):
	if consumo <= 5000:
	total = preco5000 * consumo
	else:
		total = precoa5000 * consumo
	
print ("Valor total: R$", total)
-- ERROR:
File "XXXX", line 23
    total = preco1000 * consumo
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:27:26) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")


if consumo < 0:
	print ("Dados invalidos")

elif (instalacao == "R"):
	if consumo <= 500:
		preco = consumo * 0.44
	else:
		preco = consumo * 0.65
	
elif (instalacao == "I"):
	if consumo <= 1000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
			
elif (instalacao == "C"):
	if consumo <= 5000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60

#else:
	
	
print ("Entradas: ", consumo, " kWh e tipo ", instalacao)
print ("Valor total: R$", preco,2)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 30, in <module>
    print ("Valor total: R$", preco,2)
NameError: name 'preco' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:27:38) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")


if consumo < 0:
	print ("Dados invalidos")

elif (instalacao == "R"):
	if consumo <= 500:
		preco = consumo * 0.44
	else:
		preco = consumo * 0.65
	
elif (instalacao == "I"):
	if consumo <= 1000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
			
elif (instalacao == "C"):
	if consumo <= 5000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60

#else:
	
	
print ("Entradas: ", consumo, " kWh e tipo ", instalacao)
print ("Valor total: R$", preco)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 30, in <module>
    print ("Valor total: R$", preco)
NameError: name 'preco' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:28:12) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")
preco = float

if consumo < 0:
	print ("Dados invalidos")

elif (instalacao == "R"):
	if consumo <= 500:
		preco = consumo * 0.44
	else:
		preco = consumo * 0.65
	
elif (instalacao == "I"):
	if consumo <= 1000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
			
elif (instalacao == "C"):
	if consumo <= 5000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60

#else:
	
	
print ("Entradas: ", consumo, " kWh e tipo ", instalacao)
print ("Valor total: R$", preco)

-- OUTPUT:
Dados invalidos
Entradas:  -56.0  kWh e tipo  I
Valor total: R$ <class 'float'>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:28:37) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")
float = preco

if consumo < 0:
	print ("Dados invalidos")

elif (instalacao == "R"):
	if consumo <= 500:
		preco = consumo * 0.44
	else:
		preco = consumo * 0.65
	
elif (instalacao == "I"):
	if consumo <= 1000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
			
elif (instalacao == "C"):
	if consumo <= 5000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60

#else:
	
	
print ("Entradas: ", consumo, " kWh e tipo ", instalacao)
print ("Valor total: R$", preco)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    float = preco
NameError: name 'preco' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:29:00) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")

if consumo < 0:
	print ("Dados invalidos")

elif (instalacao == "R"):
	if consumo <= 500:
		preco = consumo * 0.44
	else:
		preco = consumo * 0.65
	
elif (instalacao == "I"):
	if consumo <= 1000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
			
elif (instalacao == "C"):
	if consumo <= 5000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60

#else:
	
	
print ("Entradas: ", consumo, " kWh e tipo ", instalacao)
print ("Valor total: R$", preco)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 29, in <module>
    print ("Valor total: R$", preco)
NameError: name 'preco' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:29:12) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")

if consumo < 0:
	print ("Dados invalidos")

elif (instalacao == "R"):
	if consumo <= 500:
		preco = consumo * 0.44
	else:
		preco = consumo * 0.65
	
elif (instalacao == "I"):
	if consumo <= 1000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
			
elif (instalacao == "C"):
	if consumo <= 5000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60

#else:
	
	
print ("Entradas: ", consumo, " kWh e tipo ", instalacao)
print ("Valor total: R$", preco)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 29, in <module>
    print ("Valor total: R$", preco)
NameError: name 'preco' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:29:26) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")

if consumo < 0:
	print ("Dados invalidos")

elif (instalacao == "R"):
	if consumo <= 500:
		preco = consumo * 0.44
	else:
		preco = consumo * 0.65
	
elif (instalacao == "I"):
	if consumo <= 1000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
			
elif (instalacao == "C"):
	if consumo <= 5000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60

#else:
	
	
print ("Entradas: ", consumo, " kWh e tipo ", instalacao)
print ("Valor total: R$", preco)

-- EXECUTION TIME:
0.199251
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1101/main.py", line 29, in <module>
    print ("Valor total: R$", preco)
NameError: name 'preco' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:30:56) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")

if consumo < 0:
	print ("Dados invalidos")

elif (instalacao == "R"):
	if consumo <= 500:
		preco = consumo * 0.44
	else:
		preco = consumo * 0.65
	
elif (instalacao == "I"):
	if consumo <= 1000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
			
elif (instalacao == "C"):
	if consumo <= 5000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60

#else:
	
	
print ("Entradas: ", consumo, " kWh e tipo ", instalacao)
print ("Valor total: R$", roun(preco,2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 29, in <module>
    print ("Valor total: R$", roun(preco,2))
NameError: name 'roun' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:31:15) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")

if consumo < 0:
	print ("Dados invalidos")

elif (instalacao == "R"):
	if consumo <= 500:
		preco = consumo * 0.44
	else:
		preco = consumo * 0.65
	
elif (instalacao == "I"):
	if consumo <= 1000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
			
elif (instalacao == "C"):
	if consumo <= 5000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60

#else:
	
	
print ("Entradas: ", consumo, " kWh e tipo ", instalacao)
print ("Valor total: R$", round(preco,2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 29, in <module>
    print ("Valor total: R$", round(preco,2))
NameError: name 'preco' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:31:37) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")

if consumo < 0:
	print ("Dados invalidos")

elif (instalacao == "R"):
	if consumo <= 500:
		preco = consumo * 0.44
	else:
		preco = consumo * 0.65
	
elif (instalacao == "I"):
	if consumo <= 1000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
			
elif (instalacao == "C"):
	if consumo <= 5000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60

#else:
	
	
print ("Entradas: ", consumo, " kWh e tipo ", instalacao)
print ("Valor total: R$", round(preco,2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 29, in <module>
    print ("Valor total: R$", round(preco,2))
NameError: name 'preco' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:31:50) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")

if consumo < 0:
	print ("Dados invalidos")

elif (instalacao == "R"):
	if consumo <= 500:
		preco = consumo * 0.44
	else:
		preco = consumo * 0.65
	
elif (instalacao == "I"):
	if consumo <= 1000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
			
elif (instalacao == "C"):
	if consumo <= 5000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60

#else:
	
	
print ("Entradas: ", consumo, " kWh e tipo ", instalacao)
print ("Valor total: R$", round(preco,2))

-- EXECUTION TIME:
0.239057
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1101/main.py", line 29, in <module>
    print ("Valor total: R$", round(preco,2))
NameError: name 'preco' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:32:22) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")

if consumo < 0:
	print ("Dados invalidos")

elif (instalacao == "R"):
	if consumo <= 500:
		preco = consumo * 0.44
	else:
		preco = consumo * 0.65
	
elif (instalacao == "I"):
	if consumo <= 1000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
			
elif (instalacao == "C"):
	if consumo <= 5000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60

#else:
	
	
print ("Entradas: ", consumo, " kWh e tipo ", instalacao)
print ("Valor total: R$", round(preco,2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 29, in <module>
    print ("Valor total: R$", round(preco,2))
NameError: name 'preco' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:34:01) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")

if consumo < 0:
	print ("Dados invalidos")

elif (instalacao == "R"):
	if consumo <= 500:
		preco = consumo * 0.44
	else:
		preco = consumo * 0.65
	
elif (instalacao == "I"):
	if consumo <= 1000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
			
elif (instalacao == "C"):
	if consumo <= 5000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60

#else:
	
	
print ("Entradas:",consumo,"kWh e tipo", instalacao)
print ("Valor total: R$", round(preco,2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 29, in <module>
    print ("Valor total: R$", round(preco,2))
NameError: name 'preco' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:34:08) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")

if consumo < 0:
	print ("Dados invalidos")

elif (instalacao == "R"):
	if consumo <= 500:
		preco = consumo * 0.44
	else:
		preco = consumo * 0.65
	
elif (instalacao == "I"):
	if consumo <= 1000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
			
elif (instalacao == "C"):
	if consumo <= 5000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60

#else:
	
	
print ("Entradas:",consumo,"kWh e tipo", instalacao)
print ("Valor total: R$", round(preco,2))

-- EXECUTION TIME:
0.185571
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1101/main.py", line 29, in <module>
    print ("Valor total: R$", round(preco,2))
NameError: name 'preco' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:34:53) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")

if consumo < 0:
	print ("Dados invalidos")

elif (instalacao == "R"):
	if consumo <= 500:
		preco = consumo * 0.44
	else:
		preco = consumo * 0.65
	
elif (instalacao == "I"):
	if consumo <= 1000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
			
elif (instalacao == "C"):
	if consumo <= 5000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60

#else:
	
	
print ("Entradas:",consumo,"kWh e tipo", instalacao)
print ("Valor total: R$", round(preco,2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 29, in <module>
    print ("Valor total: R$", round(preco,2))
NameError: name 'preco' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:35:25) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")

if consumo < 0:
	print ("Dados invalidos")

elif (instalacao == "R"):
	if consumo <= 500:
		preco = consumo * 0.44
	else:
		preco = consumo * 0.65
	
elif (instalacao == "I"):
	if consumo <= 1000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
			
elif (instalacao == "C"):
	if consumo <= 5000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60

#else:
	
	
print ("Entradas:",consumo,"kWh e tipo", instalacao)
print ("Valor total: R$", round(preco,2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 29, in <module>
    print ("Valor total: R$", round(preco,2))
NameError: name 'preco' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:35:52) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")

if consumo < 0:
	print ("Dados invalidos")

elif (instalacao == "R"):
	if consumo <= 500:
		preco = consumo * 0.44
	else:
		preco = consumo * 0.65
	
elif (instalacao == "I"):
	if consumo <= 1000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
			
elif (instalacao == "C"):
	if consumo <= 5000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
#else:

print ("Entradas:",consumo,"kWh e tipo", instalacao)
print ("Valor total: R$", round(preco,2))

-- EXECUTION TIME:
0.168103
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1101/main.py", line 27, in <module>
    print ("Valor total: R$", round(preco,2))
NameError: name 'preco' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:36:45) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")

if consumo < 0:
	print ("Dados invalidos")

elif (instalacao == "R"):
	if consumo <= 500:
		preco = consumo * 0.44
	else:
		preco = consumo * 0.65
	
elif (instalacao == "I"):
	if consumo <= 1000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
			
elif (instalacao == "C"):
	if consumo <= 5000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
else:
	print ("Dados invalidos")

print ("Entradas:",consumo,"kWh e tipo", instalacao)
print ("Valor total: R$", round(preco,2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 28, in <module>
    print ("Valor total: R$", round(preco,2))
NameError: name 'preco' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:38:27) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")

if consumo < 0:
	print ("Dados invalidos")

elif (instalacao == "R"):
	if consumo <= 500:
		preco = consumo * 0.44
	else:
		preco = consumo * 0.65
	
elif (instalacao == "I"):
	if consumo <= 1000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
			
elif (instalacao == "C"):
	if consumo <= 5000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
else:
	print ("Dados invalidos")

print ("Entradas:",consumo,"kWh e tipo", instalacao)
if (instalacao != "R" and instalacao != "I" and instalacao != "C"):
	print ("Dados invalidos")
else:
	print ("Valor total: R$", round(preco,2))

-- EXECUTION TIME:
0.140224
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1101/main.py", line 31, in <module>
    print ("Valor total: R$", round(preco,2))
NameError: name 'preco' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:40:26) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")

if consumo < 0:
	print ("Dados invalidos")

elif (instalacao == "R"):
	if consumo <= 500:
		preco = consumo * 0.44
	else:
		preco = consumo * 0.65
	
elif (instalacao == "I"):
	if consumo <= 1000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
			
elif (instalacao == "C"):
	if consumo <= 5000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
else:
	print ("Dados invalidos")

print ("Entradas:", consumo,"kWh e tipo",instalacao)
if (instalacao != "R" and instalacao != "I" and instalacao != "C"):
	print ("Dados invalidos")
else:
	print ("Valor total: R$", round(preco,2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 31, in <module>
    print ("Valor total: R$", round(preco,2))
NameError: name 'preco' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:40:37) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")

if consumo < 0:
	print ("Dados invalidos")

elif (instalacao == "R"):
	if consumo <= 500:
		preco = consumo * 0.44
	else:
		preco = consumo * 0.65
	
elif (instalacao == "I"):
	if consumo <= 1000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
			
elif (instalacao == "C"):
	if consumo <= 5000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
else:
	print ("Dados invalidos")

print ("Entradas:", consumo,"kWh e tipo",instalacao)
if (instalacao != "R" and instalacao != "I" and instalacao != "C"):
	print ("Dados invalidos")
else:
	print ("Valor total: R$", round(preco,2))

-- EXECUTION TIME:
0.159511
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1101/main.py", line 31, in <module>
    print ("Valor total: R$", round(preco,2))
NameError: name 'preco' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:40:56) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")

if consumo < 0:
	print ("Dados invalidos")

elif (instalacao == "R"):
	if consumo <= 500:
		preco = consumo * 0.44
	else:
		preco = consumo * 0.65
	
elif (instalacao == "I"):
	if consumo <= 1000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
			
elif (instalacao == "C"):
	if consumo <= 5000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
#else:
#	print ("Dados invalidos")

print ("Entradas:", consumo,"kWh e tipo",instalacao)
if (instalacao != "R" and instalacao != "I" and instalacao != "C"):
	print ("Dados invalidos")
else:
	print ("Valor total: R$", round(preco,2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 31, in <module>
    print ("Valor total: R$", round(preco,2))
NameError: name 'preco' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:41:04) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")

if consumo < 0:
	print ("Dados invalidos")

elif (instalacao == "R"):
	if consumo <= 500:
		preco = consumo * 0.44
	else:
		preco = consumo * 0.65
	
elif (instalacao == "I"):
	if consumo <= 1000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
			
elif (instalacao == "C"):
	if consumo <= 5000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
#else:
#	print ("Dados invalidos")

print ("Entradas:", consumo,"kWh e tipo",instalacao)
if (instalacao != "R" and instalacao != "I" and instalacao != "C"):
	print ("Dados invalidos")
else:
	print ("Valor total: R$", round(preco,2))

-- EXECUTION TIME:
0.208303
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1101/main.py", line 31, in <module>
    print ("Valor total: R$", round(preco,2))
NameError: name 'preco' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:41:08) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")

if consumo < 0:
	print ("Dados invalidos")

elif (instalacao == "R"):
	if consumo <= 500:
		preco = consumo * 0.44
	else:
		preco = consumo * 0.65
	
elif (instalacao == "I"):
	if consumo <= 1000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
			
elif (instalacao == "C"):
	if consumo <= 5000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
#else:
#	print ("Dados invalidos")

print ("Entradas:", consumo,"kWh e tipo",instalacao)
if (instalacao != "R" and instalacao != "I" and instalacao != "C"):
	print ("Dados invalidos")
else:
	print ("Valor total: R$", round(preco,2))

-- EXECUTION TIME:
0.238399
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1101/main.py", line 31, in <module>
    print ("Valor total: R$", round(preco,2))
NameError: name 'preco' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:41:17) 
-- CODE:
consumo = float(input("Consumo da Energia: "))
instalacao = input("Informe o Tipo de Instalacao: R - Residencias | I - Insdustrias | C - Comercios: ")

if consumo < 0:
	#print ("Dados invalidos")

elif (instalacao == "R"):
	if consumo <= 500:
		preco = consumo * 0.44
	else:
		preco = consumo * 0.65
	
elif (instalacao == "I"):
	if consumo <= 1000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
			
elif (instalacao == "C"):
	if consumo <= 5000:
		preco = consumo * 0.55
	else:
		preco = consumo * 0.60
#else:
#	print ("Dados invalidos")

print ("Entradas:", consumo,"kWh e tipo",instalacao)
if (instalacao != "R" and instalacao != "I" and instalacao != "C"):
	print ("Dados invalidos")
else:
	print ("Valor total: R$", round(preco,2))

-- EXECUTION TIME:
0.177205
-- ERROR:
  File "/home/codebench/codes/1679/1101/main.py", line 7
    elif (instalacao == "R"):
       ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:42:26) 
-- CODE:
con = float(input("consumo de energia:"))
tipo = input("tipo de instalacao: (R/I/C)")

if(con < 0):
	print("Entradas:",con,"kWh e tipo",tipo)
	print("Dados invalidos")
	
elif(tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entradas:",con,"kWh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entradas:",con,"kWh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "I" and con <= 5000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kWh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "I" and con > 5000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kWh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "C" and con <= 1000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "C" and con > 1000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
else:
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")

-- EXECUTION TIME:
0.186908
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 17:46:06) 
-- CODE:
con = float(input("consumo de energia:"))
tipo = input("tipo de instalacao: (R/I/C)")

if(con < 0):
	print("Entradas:",con,"kWh e tipo",tipo)
	print("Dados invalidos")
	
elif(tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entradas:",con,"kWh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entradas:",con,"kWh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "I" and con <= 5000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kWh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "I" and con > 5000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kWh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "C" and con <= 1000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "C" and con > 1000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
else:
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")

-- EXECUTION TIME:
0.194177
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:15:31) 
-- CODE:

ce = float(input("Consumo de energia em kWh: "))
ti = input("Tipo de instalacao (R/I/C):").upper()

if (( ti != "R") and ( ti != "I" ) and ( ti != "C")):
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Dados invalidos")	
elif ( ti == "R" ): 
	if( ce <= 500 ):
		x = 0.44 * ce
	elif( ce > 500 ):
		x = 0.65 * ce
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Valor total: R$",round(x,2))
elif ( ti == "C"):
	if(ce <= 1000):
		x = 0.55 * ce
	elif (ce > 1000):
		x =  0.60 * ce
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Valor total: R$",round(x,2))
elif ( ti == "I"):
	if( ce <= 5000 ):
		x =  0.55 * ce 
	elif( ce > 5000 ):
		x =  0.60 * ce
	print("Entradas:",ce," kWh e tipo",ti)
	print("Valor total: R$",round(x,2))
-- OUTPUT:
Entradas: -56.0  kWh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:16:02) 
-- CODE:

ce = float(input("Consumo de energia em kWh: "))
ti = input("Tipo de instalacao (R/I/C):").upper()

if (( ti != "R") and ( ti != "I" ) and ( ti != "C")):
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Dados invalidos")	
elif ( ti == "R" ): 
	if( ce <= 500 ):
		x = 0.44 * ce
	elif( ce > 500 ):
		x = 0.65 * ce
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Valor total: R$",round(x,2))
elif ( ti == "C"):
	if(ce <= 1000):
		x = 0.55 * ce
	elif (ce > 1000):
		x =  0.60 * ce
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Valor total: R$",round(x,2))
elif ( ti == "I"):
	if( ce <= 5000 ):
		x =  0.55 * ce 
	elif( ce > 5000 ):
		x =  0.60 * ce
	print("Entradas:",ce," kWh e tipo",ti)
	print("Valor total: R$",round(x,2))
-- EXECUTION TIME:
0.181181
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0  kWh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:16:18) 
-- CODE:

ce = float(input("Consumo de energia em kWh: "))
ti = input("Tipo de instalacao (R/I/C):").upper()

if (( ti != "R") and ( ti != "I" ) and ( ti != "C")):
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Dados invalidos")	
elif ( ti == "R" ): 
	if( ce <= 500 ):
		x = 0.44 * ce
	elif( ce > 500 ):
		x = 0.65 * ce
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Valor total: R$",round(x,2))
elif ( ti == "C"):
	if(ce <= 1000):
		x = 0.55 * ce
	elif (ce > 1000):
		x =  0.60 * ce
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Valor total: R$",round(x,2))
elif ( ti == "I"):
	if( ce <= 5000 ):
		x =  0.55 * ce 
	elif( ce > 5000 ):
		x =  0.60 * ce
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Valor total: R$",round(x,2))
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:16:29) 
-- CODE:

ce = float(input("Consumo de energia em kWh: "))
ti = input("Tipo de instalacao (R/I/C):").upper()

if (( ti != "R") and ( ti != "I" ) and ( ti != "C")):
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Dados invalidos")	
elif ( ti == "R" ): 
	if( ce <= 500 ):
		x = 0.44 * ce
	elif( ce > 500 ):
		x = 0.65 * ce
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Valor total: R$",round(x,2))
elif ( ti == "C"):
	if(ce <= 1000):
		x = 0.55 * ce
	elif (ce > 1000):
		x =  0.60 * ce
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Valor total: R$",round(x,2))
elif ( ti == "I"):
	if( ce <= 5000 ):
		x =  0.55 * ce 
	elif( ce > 5000 ):
		x =  0.60 * ce
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Valor total: R$",round(x,2))
-- EXECUTION TIME:
0.182329
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:23:53) 
-- CODE:
ce = float(input("Consumo de energia em kWh: "))
ti = input("Tipo de instalacao (R/I/C):").upper()

if (( ti != "R") and (ti != "I" ) and (ti != "C")):
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Dados invalidos")	
	
elif ( ti == "R" ): 
	if( ce <= 500 ):
		x = 0.44 * ce
	elif( ce > 500 ):
		x = 0.65 * ce
		print("Entradas:",ce,"kWh e tipo",ti)
		print("Valor total: R$",round(x,2))
	
elif ( ti == "C"):
	if(ce <= 1000):
		x = 0.55 * ce
	elif (ce > 1000):
		x =  0.60 * ce
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Valor total: R$",round(x,2))
	
elif ( ti == "I"):
	if( ce <= 5000 ):
		x =  0.55 * ce 
	elif( ce > 5000 ):
		x =  0.60 * ce
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Valor total: R$",round(x,2))
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:26:47) 
-- CODE:
ce = float(input("Consumo de energia em kWh: "))
ti = input("Tipo de instalacao (R/I/C):").upper()

if (( ti != "R") and (ti != "I" ) and (ti != "C")):
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Dados invalidos")	
	
elif ( ti == "R" ): 
	if( ce <= 500 ):
		x = 0.44 * ce
	elif( ce > 500 ):
		x = 0.65 * ce
		print("Entradas:",ce,"kWh e tipo",ti)
		print("Valor total: R$",round(x,2))
	
elif ( ti == "C"):
	if(ce <= 1000):
		x = 0.55 * ce
	elif (ce > 1000):
		x =  0.60 * ce
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Valor total: R$",round(x,2))
	
elif ( ti == "I"):
	if( ce <= 5000 ):
		x =  0.55 * ce 
	elif( ce > 5000 ):
		x =  0.60 * ce
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Valor total: R$",round(x,2))
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:27:04) 
-- CODE:
ce = float(input("Consumo de energia em kWh: "))
ti = input("Tipo de instalacao (R/I/C):").upper()

if (( ti != "R") and (ti != "I" ) and (ti != "C")):
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Dados invalidos")	
	
elif ( ti == "R" ): 
	if( ce <= 500 ):
		x = 0.44 * ce
	elif( ce > 500 ):
		x = 0.65 * ce
		print("Entradas:",ce,"kWh e tipo",ti)
		print("Valor total: R$",round(x,2))
	
elif ( ti == "C"):
	if(ce <= 1000):
		x = 0.55 * ce
	elif (ce > 1000):
		x =  0.60 * ce
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Valor total: R$",round(x,2))
	
elif ( ti == "I"):
	if( ce <= 5000 ):
		x =  0.55 * ce 
	elif( ce > 5000 ):
		x =  0.60 * ce
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Valor total: R$",round(x,2))
-- EXECUTION TIME:
0.257171
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:37:05) 
-- CODE:
ce = float(input("Consumo de energia em kWh: "))
ti = input("Tipo de instalacao (R/I/C):")#.upper()

if (( ti != "R") and (ti != "I" ) and (ti != "C")):
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Dados invalidos")	
	
elif ( ti == "R" ): 
	if( ce <= 500 ):
		x = 0.44 * ce
	elif( ce > 500 ):
		x = 0.65 * ce
		print("Entradas:",ce,"kWh e tipo",ti)
		print("Valor total: R$",round(x,2))
	
elif ( ti == "C"):
	if(ce <= 1000):
		x = 0.55 * ce
	elif (ce > 1000):
		x =  0.60 * ce
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Valor total: R$",round(x,2))
	
elif ( ti == "I"):
	if( ce <= 5000 ):
		x =  0.55 * ce 
	elif( ce > 5000 ):
		x =  0.60 * ce
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Valor total: R$",round(x,2))
-- EXECUTION TIME:
0.170521
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:37:59) 
-- CODE:
ce = float(input("Consumo de energia em kWh: "))
ti = input("Tipo de instalacao (R/I/C):").upper()

if (( ti != "R") and (ti != "I" ) and (ti != "C")):
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Dados invalidos")	
	
elif ( ti == "R" ): 
	if( ce <= 500 ):
		x = 0.44 * ce
	elif( ce > 500 ):
		x = 0.65 * ce
		print("Entradas:",ce,"kWh e tipo",ti)
		print("Valor total: R$",round(x,2))
	
elif ( ti == "C"):
	if(ce <= 1000):
		x = 0.55 * ce
	elif (ce > 1000):
		x =  0.60 * ce
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Valor total: R$",round(x,2))
	
elif ( ti == "I"):
	if( ce <= 5000 ):
		x =  0.55 * ce 
	elif( ce > 5000 ):
		x =  0.60 * ce
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Valor total: R$",round(x,2))
else:
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Dados invalidos")
-- EXECUTION TIME:
0.15273
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:38:27) 
-- CODE:
ce = float(input("Consumo de energia em kWh: "))
ti = input("Tipo de instalacao (R/I/C):").upper()

if (( ti != "R") and (ti != "I" ) and (ti != "C")):
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Dados invalidos")	
	
elif ( ti == "R" ): 
	if( ce <= 500 ):
		x = 0.44 * ce
	else( ce > 500 ):
		x = 0.65 * ce
		print("Entradas:",ce,"kWh e tipo",ti)
		print("Valor total: R$",round(x,2))
	
elif ( ti == "C"):
	if(ce <= 1000):
		x = 0.55 * ce
	else(ce > 1000):
		x =  0.60 * ce
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Valor total: R$",round(x,2))
	
elif ( ti == "I"):
	if( ce <= 5000 ):
		x =  0.55 * ce 
	else( ce > 5000 ):
		x =  0.60 * ce
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Valor total: R$",round(x,2))
else:
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Dados invalidos")
-- EXECUTION TIME:
0.171352
-- ERROR:
  File "/home/codebench/codes/1679/1101/main.py", line 11
    else( ce > 500 ):
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:38:29) 
-- CODE:
ce = float(input("Consumo de energia em kWh: "))
ti = input("Tipo de instalacao (R/I/C):").upper()

if (( ti != "R") and (ti != "I" ) and (ti != "C")):
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Dados invalidos")	
	
elif ( ti == "R" ): 
	if( ce <= 500 ):
		x = 0.44 * ce
	else( ce > 500 ):
		x = 0.65 * ce
		print("Entradas:",ce,"kWh e tipo",ti)
		print("Valor total: R$",round(x,2))
	
elif ( ti == "C"):
	if(ce <= 1000):
		x = 0.55 * ce
	else(ce > 1000):
		x =  0.60 * ce
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Valor total: R$",round(x,2))
	
elif ( ti == "I"):
	if( ce <= 5000 ):
		x =  0.55 * ce 
	else( ce > 5000 ):
		x =  0.60 * ce
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Valor total: R$",round(x,2))
else:
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 11
    else( ce > 500 ):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:38:57) 
-- CODE:
ce = float(input("Consumo de energia em kWh: "))
ti = input("Tipo de instalacao (R/I/C):").upper()

if (( ti != "R") and (ti != "I" ) and (ti != "C")):
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Dados invalidos")	
	
elif ( ti == "R" ): 
	if( ce <= 500 ):
		x = 0.44 * ce
	else #( ce > 500 ):
		x = 0.65 * ce
		print("Entradas:",ce,"kWh e tipo",ti)
		print("Valor total: R$",round(x,2))
	
elif ( ti == "C"):
	if(ce <= 1000):
		x = 0.55 * ce
	else#(ce > 1000):
		x =  0.60 * ce
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Valor total: R$",round(x,2))
	
elif ( ti == "I"):
	if( ce <= 5000 ):
		x =  0.55 * ce 
	else#( ce > 5000 ):
		x =  0.60 * ce
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Valor total: R$",round(x,2))
else:
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Dados invalidos")
-- EXECUTION TIME:
0.182877
-- ERROR:
  File "/home/codebench/codes/1679/1101/main.py", line 11
    else #( ce > 500 ):
                      ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:38:59) 
-- CODE:
ce = float(input("Consumo de energia em kWh: "))
ti = input("Tipo de instalacao (R/I/C):").upper()

if (( ti != "R") and (ti != "I" ) and (ti != "C")):
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Dados invalidos")	
	
elif ( ti == "R" ): 
	if( ce <= 500 ):
		x = 0.44 * ce
	else #( ce > 500 ):
		x = 0.65 * ce
		print("Entradas:",ce,"kWh e tipo",ti)
		print("Valor total: R$",round(x,2))
	
elif ( ti == "C"):
	if(ce <= 1000):
		x = 0.55 * ce
	else#(ce > 1000):
		x =  0.60 * ce
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Valor total: R$",round(x,2))
	
elif ( ti == "I"):
	if( ce <= 5000 ):
		x =  0.55 * ce 
	else#( ce > 5000 ):
		x =  0.60 * ce
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Valor total: R$",round(x,2))
else:
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 11
    else #( ce > 500 ):
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:39:24) 
-- CODE:
ce = float(input("Consumo de energia em kWh: "))
ti = input("Tipo de instalacao (R/I/C):").upper()

if (( ti != "R") and (ti != "I" ) and (ti != "C")):
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Dados invalidos")	
	
elif ( ti == "R" ): 
	if( ce <= 500 ):
		x = 0.44 * ce
	else: #( ce > 500 ):
		x = 0.65 * ce
		print("Entradas:",ce,"kWh e tipo",ti)
		print("Valor total: R$",round(x,2))
	
elif ( ti == "C"):
	if(ce <= 1000):
		x = 0.55 * ce
	else: #(ce > 1000):
		x =  0.60 * ce
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Valor total: R$",round(x,2))
	
elif ( ti == "I"):
	if( ce <= 5000 ):
		x =  0.55 * ce 
	else: #( ce > 5000 ):
		x =  0.60 * ce
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Valor total: R$",round(x,2))
else:
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Dados invalidos")
-- EXECUTION TIME:
0.134139
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:39:25) 
-- CODE:
ce = float(input("Consumo de energia em kWh: "))
ti = input("Tipo de instalacao (R/I/C):").upper()

if (( ti != "R") and (ti != "I" ) and (ti != "C")):
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Dados invalidos")	
	
elif ( ti == "R" ): 
	if( ce <= 500 ):
		x = 0.44 * ce
	else: #( ce > 500 ):
		x = 0.65 * ce
		print("Entradas:",ce,"kWh e tipo",ti)
		print("Valor total: R$",round(x,2))
	
elif ( ti == "C"):
	if(ce <= 1000):
		x = 0.55 * ce
	else: #(ce > 1000):
		x =  0.60 * ce
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Valor total: R$",round(x,2))
	
elif ( ti == "I"):
	if( ce <= 5000 ):
		x =  0.55 * ce 
	else: #( ce > 5000 ):
		x =  0.60 * ce
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Valor total: R$",round(x,2))
else:
	print("Entradas:",ce,"kWh e tipo",ti)
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:52:31) 
-- CODE:
dia = int(input("Dia da Semana: "))
futuro = int(input("Dias a contar: "))
soma = (dia + futuro) % 7

if dia != 0 and dia != 1 and dia != 2 and dia != 3 and dia !=4 and dia != 5 and dia != 6:
	print ("A entrada",dia,"eh invalida")
	
# Dia 0 - Domingo
elif dia == 0:
	dia = "domingo"
	if soma == 0:
		soma = "domingo"
	elif soma == 1:
		soma = "segunda"
	elif soma == 2:
		soma = "terca"
	elif soma == 3:
		soma = "quarta"
	elif soma == 4:
		soma = "quinta"
	elif soma == 5:
		soma = "sexta"
	elif soma == 6:
		soma = "sabado"
	print ("Hoje eh",dia,"e o dia futuro eh",soma)
	
# Dia 1 - Segunda	
elif dia == 1:
	dia = "segunda"
	if soma == 0:
		soma = "domingo"
	elif soma == 1:
		soma = "segunda"
	elif soma == 2:
		soma = "terca"
	elif soma == 3:
		soma = "quarta"
	elif soma == 4:
		soma = "quinta"
	elif soma == 5:
		soma = "sexta"
	elif soma == 6:
		soma = "sabado"
	print ("Hoje eh",dia,"e o dia futuro eh",soma)
	
# Dia 2 - Terca
elif dia == 2:
	dia = "terca"
	if soma == 0:
		soma = "domingo"
	elif soma == 1:
		soma = "segunda"
	elif soma == 2:
		soma = "terca"
	elif soma == 3:
		soma = "quarta"
	elif soma == 4:
		soma = "quinta"
	elif soma == 5:
		soma = "sexta"
	elif soma == 6:
		soma = "sabado"
	print ("Hoje eh",dia,"e o dia futuro eh",soma)
	
# Dia 3 - Quarta
elif dia == 3:
	dia = "quarta"
	if soma == 0:
		soma = "domingo"
	elif soma == 1:
		soma = "segunda"
	elif soma == 2:
		soma = "terca"
	elif soma == 3:
		soma = "quarta"
	elif soma == 4:
		soma = "quinta"
	elif soma == 5:
		soma = "sexta"
	elif soma == 6:
		soma = "sabado"
	print ("Hoje eh",dia,"e o dia futuro eh",soma)
	
# Dia 4 - Quinta	
elif dia == 4:
	dia = "quinta"
	if soma == 0:
		soma = "domingo"
	elif soma == 1:
		soma = "segunda"
	elif soma == 2:
		soma = "terca"
	elif soma == 3:
		soma = "quarta"
	elif soma == 4:
		soma = "quinta"
	elif soma == 5:
		soma = "sexta"
	elif soma == 6:
		soma = "sabado"
	print ("Hoje eh",dia,"e o dia futuro eh",soma)
	
# Dia 5 - Sexta	
elif dia == 5:
	dia = "sexta"
	if soma == 0:
		soma = "domingo"
	elif soma == 1:
		soma = "segunda"
	elif soma == 2:
		soma = "terca"
	elif soma == 3:
		soma = "quarta"
	elif soma == 4:
		soma = "quinta"
	elif soma == 5:
		soma = "sexta"
	elif soma == 6:
		soma = "sabado"
	print ("Hoje eh",dia,"e o dia futuro eh",soma)
	
# Dia 6 - Sábado	
elif dia == 6:
	dia = "sabado"
	if soma == 0:
		soma = "domingo"
	elif soma == 1:
		soma = "segunda"
	elif soma == 2:
		soma = "terca"
	elif soma == 3:
		soma = "quarta"
	elif soma == 4:
		soma = "quinta"
	elif soma == 5:
		soma = "sexta"
	elif soma == 6:
		soma = "sabado"
	print ("Hoje eh",dia,"e o dia futuro eh",soma)
	
else:
		print ("A entrada",dia,"eh invalida")
-- EXECUTION TIME:
0.141747
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1101/main.py", line 2, in <module>
    futuro = int(input())
ValueError: invalid literal for int() with base 10: 'I'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:52:39) 
-- CODE:
dia = int(input("Dia da Semana: "))
futuro = int(input("Dias a contar: "))
soma = (dia + futuro) % 7

if dia != 0 and dia != 1 and dia != 2 and dia != 3 and dia !=4 and dia != 5 and dia != 6:
	print ("A entrada",dia,"eh invalida")
	
# Dia 0 - Domingo
elif dia == 0:
	dia = "domingo"
	if soma == 0:
		soma = "domingo"
	elif soma == 1:
		soma = "segunda"
	elif soma == 2:
		soma = "terca"
	elif soma == 3:
		soma = "quarta"
	elif soma == 4:
		soma = "quinta"
	elif soma == 5:
		soma = "sexta"
	elif soma == 6:
		soma = "sabado"
	print ("Hoje eh",dia,"e o dia futuro eh",soma)
	
# Dia 1 - Segunda	
elif dia == 1:
	dia = "segunda"
	if soma == 0:
		soma = "domingo"
	elif soma == 1:
		soma = "segunda"
	elif soma == 2:
		soma = "terca"
	elif soma == 3:
		soma = "quarta"
	elif soma == 4:
		soma = "quinta"
	elif soma == 5:
		soma = "sexta"
	elif soma == 6:
		soma = "sabado"
	print ("Hoje eh",dia,"e o dia futuro eh",soma)
	
# Dia 2 - Terca
elif dia == 2:
	dia = "terca"
	if soma == 0:
		soma = "domingo"
	elif soma == 1:
		soma = "segunda"
	elif soma == 2:
		soma = "terca"
	elif soma == 3:
		soma = "quarta"
	elif soma == 4:
		soma = "quinta"
	elif soma == 5:
		soma = "sexta"
	elif soma == 6:
		soma = "sabado"
	print ("Hoje eh",dia,"e o dia futuro eh",soma)
	
# Dia 3 - Quarta
elif dia == 3:
	dia = "quarta"
	if soma == 0:
		soma = "domingo"
	elif soma == 1:
		soma = "segunda"
	elif soma == 2:
		soma = "terca"
	elif soma == 3:
		soma = "quarta"
	elif soma == 4:
		soma = "quinta"
	elif soma == 5:
		soma = "sexta"
	elif soma == 6:
		soma = "sabado"
	print ("Hoje eh",dia,"e o dia futuro eh",soma)
	
# Dia 4 - Quinta	
elif dia == 4:
	dia = "quinta"
	if soma == 0:
		soma = "domingo"
	elif soma == 1:
		soma = "segunda"
	elif soma == 2:
		soma = "terca"
	elif soma == 3:
		soma = "quarta"
	elif soma == 4:
		soma = "quinta"
	elif soma == 5:
		soma = "sexta"
	elif soma == 6:
		soma = "sabado"
	print ("Hoje eh",dia,"e o dia futuro eh",soma)
	
# Dia 5 - Sexta	
elif dia == 5:
	dia = "sexta"
	if soma == 0:
		soma = "domingo"
	elif soma == 1:
		soma = "segunda"
	elif soma == 2:
		soma = "terca"
	elif soma == 3:
		soma = "quarta"
	elif soma == 4:
		soma = "quinta"
	elif soma == 5:
		soma = "sexta"
	elif soma == 6:
		soma = "sabado"
	print ("Hoje eh",dia,"e o dia futuro eh",soma)
	
# Dia 6 - Sábado	
elif dia == 6:
	dia = "sabado"
	if soma == 0:
		soma = "domingo"
	elif soma == 1:
		soma = "segunda"
	elif soma == 2:
		soma = "terca"
	elif soma == 3:
		soma = "quarta"
	elif soma == 4:
		soma = "quinta"
	elif soma == 5:
		soma = "sexta"
	elif soma == 6:
		soma = "sabado"
	print ("Hoje eh",dia,"e o dia futuro eh",soma)
	
else:
		print ("A entrada",dia,"eh invalida")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    futuro = int(input())
ValueError: invalid literal for int() with base 10: 'I'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 16:52:47) 
-- CODE:
dia = int(input("Dia da Semana: "))
futuro = int(input("Dias a contar: "))
soma = (dia + futuro) % 7

if dia != 0 and dia != 1 and dia != 2 and dia != 3 and dia !=4 and dia != 5 and dia != 6:
	print ("A entrada",dia,"eh invalida")
	
# Dia 0 - Domingo
elif dia == 0:
	dia = "domingo"
	if soma == 0:
		soma = "domingo"
	elif soma == 1:
		soma = "segunda"
	elif soma == 2:
		soma = "terca"
	elif soma == 3:
		soma = "quarta"
	elif soma == 4:
		soma = "quinta"
	elif soma == 5:
		soma = "sexta"
	elif soma == 6:
		soma = "sabado"
	print ("Hoje eh",dia,"e o dia futuro eh",soma)
	
# Dia 1 - Segunda	
elif dia == 1:
	dia = "segunda"
	if soma == 0:
		soma = "domingo"
	elif soma == 1:
		soma = "segunda"
	elif soma == 2:
		soma = "terca"
	elif soma == 3:
		soma = "quarta"
	elif soma == 4:
		soma = "quinta"
	elif soma == 5:
		soma = "sexta"
	elif soma == 6:
		soma = "sabado"
	print ("Hoje eh",dia,"e o dia futuro eh",soma)
	
# Dia 2 - Terca
elif dia == 2:
	dia = "terca"
	if soma == 0:
		soma = "domingo"
	elif soma == 1:
		soma = "segunda"
	elif soma == 2:
		soma = "terca"
	elif soma == 3:
		soma = "quarta"
	elif soma == 4:
		soma = "quinta"
	elif soma == 5:
		soma = "sexta"
	elif soma == 6:
		soma = "sabado"
	print ("Hoje eh",dia,"e o dia futuro eh",soma)
	
# Dia 3 - Quarta
elif dia == 3:
	dia = "quarta"
	if soma == 0:
		soma = "domingo"
	elif soma == 1:
		soma = "segunda"
	elif soma == 2:
		soma = "terca"
	elif soma == 3:
		soma = "quarta"
	elif soma == 4:
		soma = "quinta"
	elif soma == 5:
		soma = "sexta"
	elif soma == 6:
		soma = "sabado"
	print ("Hoje eh",dia,"e o dia futuro eh",soma)
	
# Dia 4 - Quinta	
elif dia == 4:
	dia = "quinta"
	if soma == 0:
		soma = "domingo"
	elif soma == 1:
		soma = "segunda"
	elif soma == 2:
		soma = "terca"
	elif soma == 3:
		soma = "quarta"
	elif soma == 4:
		soma = "quinta"
	elif soma == 5:
		soma = "sexta"
	elif soma == 6:
		soma = "sabado"
	print ("Hoje eh",dia,"e o dia futuro eh",soma)
	
# Dia 5 - Sexta	
elif dia == 5:
	dia = "sexta"
	if soma == 0:
		soma = "domingo"
	elif soma == 1:
		soma = "segunda"
	elif soma == 2:
		soma = "terca"
	elif soma == 3:
		soma = "quarta"
	elif soma == 4:
		soma = "quinta"
	elif soma == 5:
		soma = "sexta"
	elif soma == 6:
		soma = "sabado"
	print ("Hoje eh",dia,"e o dia futuro eh",soma)
	
# Dia 6 - Sábado	
elif dia == 6:
	dia = "sabado"
	if soma == 0:
		soma = "domingo"
	elif soma == 1:
		soma = "segunda"
	elif soma == 2:
		soma = "terca"
	elif soma == 3:
		soma = "quarta"
	elif soma == 4:
		soma = "quinta"
	elif soma == 5:
		soma = "sexta"
	elif soma == 6:
		soma = "sabado"
	print ("Hoje eh",dia,"e o dia futuro eh",soma)
	
else:
		print ("A entrada",dia,"eh invalida")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    futuro = int(input())
ValueError: invalid literal for int() with base 10: 'I'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:52:55) 
-- CODE:
dia = int(input("Dia da Semana: "))
futuro = int(input("Dias a contar: "))
soma = (dia + futuro) % 7

if dia != 0 and dia != 1 and dia != 2 and dia != 3 and dia !=4 and dia != 5 and dia != 6:
	print ("A entrada",dia,"eh invalida")
	
# Dia 0 - Domingo
elif dia == 0:
	dia = "domingo"
	if soma == 0:
		soma = "domingo"
	elif soma == 1:
		soma = "segunda"
	elif soma == 2:
		soma = "terca"
	elif soma == 3:
		soma = "quarta"
	elif soma == 4:
		soma = "quinta"
	elif soma == 5:
		soma = "sexta"
	elif soma == 6:
		soma = "sabado"
	print ("Hoje eh",dia,"e o dia futuro eh",soma)
	
# Dia 1 - Segunda	
elif dia == 1:
	dia = "segunda"
	if soma == 0:
		soma = "domingo"
	elif soma == 1:
		soma = "segunda"
	elif soma == 2:
		soma = "terca"
	elif soma == 3:
		soma = "quarta"
	elif soma == 4:
		soma = "quinta"
	elif soma == 5:
		soma = "sexta"
	elif soma == 6:
		soma = "sabado"
	print ("Hoje eh",dia,"e o dia futuro eh",soma)
	
# Dia 2 - Terca
elif dia == 2:
	dia = "terca"
	if soma == 0:
		soma = "domingo"
	elif soma == 1:
		soma = "segunda"
	elif soma == 2:
		soma = "terca"
	elif soma == 3:
		soma = "quarta"
	elif soma == 4:
		soma = "quinta"
	elif soma == 5:
		soma = "sexta"
	elif soma == 6:
		soma = "sabado"
	print ("Hoje eh",dia,"e o dia futuro eh",soma)
	
# Dia 3 - Quarta
elif dia == 3:
	dia = "quarta"
	if soma == 0:
		soma = "domingo"
	elif soma == 1:
		soma = "segunda"
	elif soma == 2:
		soma = "terca"
	elif soma == 3:
		soma = "quarta"
	elif soma == 4:
		soma = "quinta"
	elif soma == 5:
		soma = "sexta"
	elif soma == 6:
		soma = "sabado"
	print ("Hoje eh",dia,"e o dia futuro eh",soma)
	
# Dia 4 - Quinta	
elif dia == 4:
	dia = "quinta"
	if soma == 0:
		soma = "domingo"
	elif soma == 1:
		soma = "segunda"
	elif soma == 2:
		soma = "terca"
	elif soma == 3:
		soma = "quarta"
	elif soma == 4:
		soma = "quinta"
	elif soma == 5:
		soma = "sexta"
	elif soma == 6:
		soma = "sabado"
	print ("Hoje eh",dia,"e o dia futuro eh",soma)
	
# Dia 5 - Sexta	
elif dia == 5:
	dia = "sexta"
	if soma == 0:
		soma = "domingo"
	elif soma == 1:
		soma = "segunda"
	elif soma == 2:
		soma = "terca"
	elif soma == 3:
		soma = "quarta"
	elif soma == 4:
		soma = "quinta"
	elif soma == 5:
		soma = "sexta"
	elif soma == 6:
		soma = "sabado"
	print ("Hoje eh",dia,"e o dia futuro eh",soma)
	
# Dia 6 - Sábado	
elif dia == 6:
	dia = "sabado"
	if soma == 0:
		soma = "domingo"
	elif soma == 1:
		soma = "segunda"
	elif soma == 2:
		soma = "terca"
	elif soma == 3:
		soma = "quarta"
	elif soma == 4:
		soma = "quinta"
	elif soma == 5:
		soma = "sexta"
	elif soma == 6:
		soma = "sabado"
	print ("Hoje eh",dia,"e o dia futuro eh",soma)
	
else:
		print ("A entrada",dia,"eh invalida")
-- EXECUTION TIME:
0.135527
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1101/main.py", line 2, in <module>
    futuro = int(input())
ValueError: invalid literal for int() with base 10: 'I'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:53:23) 
-- CODE:
dia = int(input("Dia da Semana: "))
futuro = int(input("Dias a contar: "))
soma = (dia + futuro) % 7

if dia != 0 and dia != 1 and dia != 2 and dia != 3 and dia !=4 and dia != 5 and dia != 6:
	print ("A entrada",dia,"eh invalida")
	
# Dia 0 - Domingo
elif dia == 0:
	dia = "domingo"
	if soma == 0:
		soma = "domingo"
	elif soma == 1:
		soma = "segunda"
	elif soma == 2:
		soma = "terca"
	elif soma == 3:
		soma = "quarta"
	elif soma == 4:
		soma = "quinta"
	elif soma == 5:
		soma = "sexta"
	elif soma == 6:
		soma = "sabado"
	print ("Hoje eh",dia,"e o dia futuro eh",soma)
	
# Dia 1 - Segunda	
elif dia == 1:
	dia = "segunda"
	if soma == 0:
		soma = "domingo"
	elif soma == 1:
		soma = "segunda"
	elif soma == 2:
		soma = "terca"
	elif soma == 3:
		soma = "quarta"
	elif soma == 4:
		soma = "quinta"
	elif soma == 5:
		soma = "sexta"
	elif soma == 6:
		soma = "sabado"
	print ("Hoje eh",dia,"e o dia futuro eh",soma)
	
# Dia 2 - Terca
elif dia == 2:
	dia = "terca"
	if soma == 0:
		soma = "domingo"
	elif soma == 1:
		soma = "segunda"
	elif soma == 2:
		soma = "terca"
	elif soma == 3:
		soma = "quarta"
	elif soma == 4:
		soma = "quinta"
	elif soma == 5:
		soma = "sexta"
	elif soma == 6:
		soma = "sabado"
	print ("Hoje eh",dia,"e o dia futuro eh",soma)
	
# Dia 3 - Quarta
elif dia == 3:
	dia = "quarta"
	if soma == 0:
		soma = "domingo"
	elif soma == 1:
		soma = "segunda"
	elif soma == 2:
		soma = "terca"
	elif soma == 3:
		soma = "quarta"
	elif soma == 4:
		soma = "quinta"
	elif soma == 5:
		soma = "sexta"
	elif soma == 6:
		soma = "sabado"
	print ("Hoje eh",dia,"e o dia futuro eh",soma)
	
# Dia 4 - Quinta	
elif dia == 4:
	dia = "quinta"
	if soma == 0:
		soma = "domingo"
	elif soma == 1:
		soma = "segunda"
	elif soma == 2:
		soma = "terca"
	elif soma == 3:
		soma = "quarta"
	elif soma == 4:
		soma = "quinta"
	elif soma == 5:
		soma = "sexta"
	elif soma == 6:
		soma = "sabado"
	print ("Hoje eh",dia,"e o dia futuro eh",soma)
	
# Dia 5 - Sexta	
elif dia == 5:
	dia = "sexta"
	if soma == 0:
		soma = "domingo"
	elif soma == 1:
		soma = "segunda"
	elif soma == 2:
		soma = "terca"
	elif soma == 3:
		soma = "quarta"
	elif soma == 4:
		soma = "quinta"
	elif soma == 5:
		soma = "sexta"
	elif soma == 6:
		soma = "sabado"
	print ("Hoje eh",dia,"e o dia futuro eh",soma)
	
# Dia 6 - Sábado	
elif dia == 6:
	dia = "sabado"
	if soma == 0:
		soma = "domingo"
	elif soma == 1:
		soma = "segunda"
	elif soma == 2:
		soma = "terca"
	elif soma == 3:
		soma = "quarta"
	elif soma == 4:
		soma = "quinta"
	elif soma == 5:
		soma = "sexta"
	elif soma == 6:
		soma = "sabado"
	print ("Hoje eh",dia,"e o dia futuro eh",soma)
	
else:
	print ("A entrada",dia,"eh invalida")
-- EXECUTION TIME:
0.146501
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1101/main.py", line 2, in <module>
    futuro = int(input())
ValueError: invalid literal for int() with base 10: 'I'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:54:11) 
-- CODE:
con = float(input("consumo de energia:"))
tipo = input("tipo de instalacao: (R/I/C)")

if(con < 0):
	print("Entradas:",con,"kWh e tipo",tipo)
	print("Dados invalidos")
	
elif(tipo == "R" and con <= 500):
	preco = 0.44
	total = con * preco
	print("Entradas:",con,"kWh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "R" and con > 500):
	preco = 0.65
	total = con * preco
	print("Entradas:",con,"kWh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "I" and con <= 5000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kWh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "I" and con > 5000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kWh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "C" and con <= 1000):
	preco = 0.55
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
elif(tipo == "C" and con > 1000):
	preco = 0.60
	total = con * preco
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Valor total: R$",round(total,2))
else:
	print("Entradas:",con,"kwh e tipo",tipo)
	print("Dados invalidos")

-- EXECUTION TIME:
0.140023
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
