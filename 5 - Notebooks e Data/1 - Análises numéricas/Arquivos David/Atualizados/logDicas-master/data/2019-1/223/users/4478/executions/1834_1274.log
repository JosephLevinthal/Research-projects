== TEST (2019-07-02 13:32:08) 
-- CODE:
from numpy import*
from numpy.linalg import*

n = int(input("numero:"))

for i in range (0, n):
	for j in range (0,n):
		matriz[i,j] = min[i,j]+1
print(matriz)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 13:32:41) 
-- CODE:
from numpy import*
from numpy.linalg import*

n = int(input("numero:"))

for i in range (0, n):
	for j in range (0,n):
		matriz[i,j] = min(i,j)+1
print(matriz)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 13:33:49) 
-- CODE:
from numpy import*
from numpy.linalg import*

n = int(input("numero:"))
matriz = zeros((N,N), dtype=int)
for i in range (0, n):
	for j in range (0,n):
		matriz[i,j] = min(i,j)+1
print(matriz)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 13:34:02) 
-- CODE:
from numpy import*
from numpy.linalg import*

n = int(input("numero:"))
matriz = zeros((n,n), dtype=int)
for i in range (0, n):
	for j in range (0,n):
		matriz[i,j] = min(i,j)+1
print(matriz)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 13:34:16) 
-- CODE:
from numpy import*
from numpy.linalg import*

n = int(input("numero:"))
matriz = zeros((n,n), dtype=int)
for i in range (0, n):
	for j in range (0,n):
		matriz[i,j] = min(i,j)+1
print(matriz)
-- EXECUTION TIME:
0.964496
-- TEST CASE 1:
---- input:
3
---- correct output:
[[1 1 1]
 [1 2 2]
 [1 2 3]]
---- user output:
[[1 1 1]
 [1 2 2]
 [1 2 3]]
-- TEST CASE 2:
---- input:
8
---- correct output:
[[1 1 1 1 1 1 1 1]
 [1 2 2 2 2 2 2 2]
 [1 2 3 3 3 3 3 3]
 [1 2 3 4 4 4 4 4]
 [1 2 3 4 5 5 5 5]
 [1 2 3 4 5 6 6 6]
 [1 2 3 4 5 6 7 7]
 [1 2 3 4 5 6 7 8]]
---- user output:
[[1 1 1 1 1 1 1 1]
 [1 2 2 2 2 2 2 2]
 [1 2 3 3 3 3 3 3]
 [1 2 3 4 4 4 4 4]
 [1 2 3 4 5 5 5 5]
 [1 2 3 4 5 6 6 6]
 [1 2 3 4 5 6 7 7]
 [1 2 3 4 5 6 7 8]]
-- TEST CASE 3:
---- input:
1
---- correct output:
[[1]]
---- user output:
[[1]]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
