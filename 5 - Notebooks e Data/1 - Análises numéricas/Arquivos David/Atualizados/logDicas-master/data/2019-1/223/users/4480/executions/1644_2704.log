== TEST (2019-04-16 14:06:14) 
-- CODE:
nota = float(input())
boni = input()
if(boni=='S):
	final = nota
	print(round(final,1))
elif(boni='N'):
	print(nota)
-- ERROR:
File "XXXX", line 3
    if(boni=='S):
                ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:06:31) 
-- CODE:
nota = float(input())
boni = input()
if(boni=='S'):
	final = nota
	print(round(final,1))
elif(boni='N'):
	print(nota)
-- ERROR:
File "XXXX", line 6
    elif(boni='N'):
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:07:44) 
-- CODE:
nota = float(input())
boni = input()
if(boni=='S'):
	final = nota
	print(round(final,1))
elif(boni='N'):
	print(nota)
-- ERROR:
File "XXXX", line 6
    elif(boni='N'):
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:08:17) 
-- CODE:
nota = float(input())
boni = input()
if(boni=='S'):
	final = nota
	print(round(final,1))
elif(boni='N'):
	print(nota)
-- ERROR:
File "XXXX", line 6
    elif(boni='N'):
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:08:57) 
-- CODE:
nota = float(input())
boni = input()
if(boni=='S'):
	final = nota
	print(round(final,1))
else(boni='S')
	print(nota)
-- ERROR:
File "XXXX", line 6
    else(boni='S')
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:09:08) 
-- CODE:
nota = float(input())
boni = input()
if(boni=='S'):
	final = nota
	print(round(final,1))
else(boni='S'):
	print(nota)
-- ERROR:
File "XXXX", line 6
    else(boni='S'):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:20:49) 
-- CODE:
nota = float(input())
boni = input()
if(boni=='S'):
	final = nota
	print(round(final,1))
elif(boni=='N'):
	print(nota)
-- OUTPUT:
5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 14:20:54) 
-- CODE:
nota = float(input())
boni = input()
if(boni=='S'):
	final = nota
	print(round(final,1))
elif(boni=='N'):
	print(nota)
-- EXECUTION TIME:
0.240264
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.0
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.0
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:21:00) 
-- CODE:
nota = float(input())
boni = input()
if(boni=='S'):
	final = nota
	print(round(final,1))
elif(boni=='N'):
	print(nota)
-- OUTPUT:
5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:22:23) 
-- CODE:
nota = float(input('nota do fudido do aluno: '))
boni = input()
if(boni=='S'):
	final = nota
	print(round(final,1))
elif(boni=='N'):
	print(nota)
-- OUTPUT:
5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 14:22:42) 
-- CODE:
nota = float(input('nota do fudido do aluno: '))
boni = input()
if(boni=='S'):
	final = nota
	print(round(final,1))
elif(boni=='N'):
	print(nota)
-- EXECUTION TIME:
0.219084
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.0
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.0
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:22:45) 
-- CODE:
nota = float(input('nota do fudido do aluno: '))
boni = input()
if(boni=='S'):
	final = nota
	print(round(final,1))
elif(boni=='N'):
	print(nota)
-- OUTPUT:
5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:24:45) 
-- CODE:
nota = float(input('nota do fudido do aluno: '))
boni = input('s ou n')
if(boni=='S'):
	final = nota
	print(round(final,1))
elif(boni=='N'):
	print(nota)
-- OUTPUT:
5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 14:24:52) 
-- CODE:
nota = float(input('nota do fudido do aluno: '))
boni = input('s ou n')
if(boni=='S'):
	final = nota
	print(round(final,1))
elif(boni=='N'):
	print(nota)
-- EXECUTION TIME:
0.151832
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.0
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.0
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:24:55) 
-- CODE:
nota = float(input('nota do fudido do aluno: '))
boni = input('s ou n')
if(boni=='S'):
	final = nota
	print(round(final,1))
elif(boni=='N'):
	print(nota)
-- OUTPUT:
5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:27:32) 
-- CODE:
nota = float(input('nota do fudido do aluno: '))
boni = input()
if(boni=='S'):
	final = nota
	print(round(final,1))
elif(boni=='N'):
	print(nota)
-- OUTPUT:
5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:30:05) 
-- CODE:
nota = float(input('nota do fudido do aluno: '))
boni = input()
if(boni==(input)'S'):
	final = nota
	print(round(final,1))
elif(boni=='N'):
	print(nota)
-- ERROR:
File "XXXX", line 3
    if(boni==(input)'S'):
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:30:16) 
-- CODE:
nota = float(input('nota do fudido do aluno: '))
boni = input()
if(boni=='S'):
	final = nota
	print(round(final,1))
elif(boni=='N'):
	print(nota)
-- OUTPUT:
5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:30:50) 
-- CODE:
nota = float(input('nota do fudido do aluno: '))
boni = input(s)
if(boni=='S'):
	final = nota
	print(round(final,1))
elif(boni=='N'):
	print(nota)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    boni = input(s)
NameError: name 's' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:31:10) 
-- CODE:
nota = float(input('nota do fudido do aluno: '))
boni = input('s')
if(boni=='S'):
	final = nota
	print(round(final,1))
elif(boni=='N'):
	print(nota)
-- OUTPUT:
5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 14:31:20) 
-- CODE:
nota = float(input('nota do fudido do aluno: '))
boni = input('s')
if(boni=='S'):
	final = nota
	print(round(final,1))
elif(boni=='N'):
	print(nota)
-- EXECUTION TIME:
0.213104
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.0
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.0
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:31:23) 
-- CODE:
nota = float(input('nota do fudido do aluno: '))
boni = input('s')
if(boni=='S'):
	final = nota
	print(round(final,1))
elif(boni=='N'):
	print(nota)
-- OUTPUT:
5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:33:08) 
-- CODE:
nota = float(input('nota do fudido do aluno: '))
boni = input('s')
if(boni=='S'):
	final = nota*1.1
	print(round(final,1))
elif(boni=='N'):
	print(nota)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:36:00) 
-- CODE:
nota = float(input('nota do fudido do aluno: '))
boni = input('s')
if(boni=='S'):
	final = nota*1.1
	print(round(final,1))
elif(boni=='N'):
	print(nota)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:36:19) 
-- CODE:
nota = float(input('nota do fudido do aluno: '))
boni = input()
if(boni=='S'):
	final = nota*1.1
	print(round(final,1))
elif(boni=='N'):
	print(nota)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 14:36:31) 
-- CODE:
nota = float(input('nota do fudido do aluno: '))
boni = input()
if(boni=='S'):
	final = nota*1.1
	print(round(final,1))
elif(boni=='N'):
	print(nota)
-- EXECUTION TIME:
0.150067
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
