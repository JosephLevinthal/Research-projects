== TEST (2019-04-09 13:19:25) 
-- CODE:
a=float(input("nota do aluno: "))
n=input("bonificacao: ")
if (n.upper==S):
	n=n + n*(10/100)
else:
	print(n)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    if (n.upper==S):
NameError: name 'S' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 13:20:13) 
-- CODE:
a=float(input("nota do aluno: "))
n=input("bonificacao: ".)
if (n.upper=="S"):
	n=n + n*(10/100)
else:
	print(n)
-- ERROR:
File "XXXX", line 2
    n=input("bonificacao: ".)
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 13:20:19) 
-- CODE:
a=float(input("nota do aluno: "))
n=input("bonificacao: ")
if (n.upper=="S"):
	n=n + n*(10/100)
else:
	print(n)
-- OUTPUT:
S
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 13:21:13) 
-- CODE:
a=float(input("nota do aluno: "))
n=input("bonificacao: ")
if (n.upper=="S"):
	a=a + a*(10/100)
else:
	print(a)
-- OUTPUT:
5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 13:22:07) 
-- CODE:
a=float(input("nota do aluno: "))
n=input("bonificacao: ")
if (n=="S"):
	a=a + a*(10/100)
else:
	print(a)
-- OUTPUT:
5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 13:23:00) 
-- CODE:
a=float(input("nota do aluno: "))
n=input("bonificacao: ")
if (a=="S"):
	a = a + a*(10/100)
	print(a)
else:
	print(a)
-- OUTPUT:
5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 13:23:15) 
-- CODE:
a=float(input("nota do aluno: "))
n=input("bonificacao: ")
if (n=="S"):
	a = a + a*(10/100)
	print(a)
else:
	print(a)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 13:23:44) 
-- CODE:
a=float(input("nota do aluno: "))
n=input("bonificacao: ")
if (n.upper()=="S"):
	a = a + a*(10/100)
	print(a)
else:
	print(a)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 13:24:03) 
-- CODE:
a=float(input("nota do aluno: "))
n=input("bonificacao: ")
if (n.upper()=="S"):
	a = a + a*(10/100)
	print(a)
else:
	print(a)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 13:24:16) 
-- CODE:
a=float(input("nota do aluno: "))
n=input("bonificacao: ")
if (n.upper()=="S"):
	a = a + a*(10/100)
	print(a)
else:
	print(a)
-- EXECUTION TIME:
0.194666
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
