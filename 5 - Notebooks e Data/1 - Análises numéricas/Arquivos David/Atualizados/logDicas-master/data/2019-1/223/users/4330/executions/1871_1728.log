== TEST (2019-07-02 16:15:30) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada")))

if (shape(matriz)[0])==(shape(matriz)[1]):
	print("SIMETRICA")
else:
	print("ASSIMETRICA
	
-- ERROR:
File "XXXX", line 9
    print("ASSIMETRICA
                     ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:15:32) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada")))

if (shape(matriz)[0])==(shape(matriz)[1]):
	print("SIMETRICA")
else:
	print("ASSIMETRICA
	
-- ERROR:
File "XXXX", line 9
    print("ASSIMETRICA
                     ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:15:39) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada")))

if (shape(matriz)[0])==(shape(matriz)[1]):
	print("SIMETRICA")
else:
	print("ASSIMETRICA")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:16:02) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada:")))

if (shape(matriz)[0])==(shape(matriz)[1]):
	print("SIMETRICA")
else:
	print("ASSIMETRICA")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 16:16:22) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada:")))

if (shape(matriz)[0])==(shape(matriz)[1]):
	print("SIMETRICA")
else:
	print("ASSIMETRICA")
	
-- EXECUTION TIME:
1.00581
-- TEST CASE 1:
---- input:
[[3,5,2],[1,4,3],[2,3,5]]
---- correct output:
ASSIMETRICA
---- user output:
SIMETRICA
-- TEST CASE 2:
---- input:
[[3,5,2],[5,4,6],[2,6,5]]
---- correct output:
SIMETRICA
---- user output:
SIMETRICA
-- TEST CASE 3:
---- input:
[[3.0,7.8,3.1,1.4],[0.9,3.5,0.4,0.2],[8.9,2.8,2.1,6.6],[5.1,3.1,8.4,3.8]]
---- correct output:
ASSIMETRICA
---- user output:
SIMETRICA
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:16:36) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada:")))

if (shape(matriz)[0])==(shape(matriz)[1]):
	print("SIMETRICA")
else:
	print("ASSIMETRICA")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 16:16:44) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada:")))

if (shape(matriz)[0])==(shape(matriz)[1]):
	print("SIMETRICA")
else:
	print("ASSIMETRICA")
	
-- EXECUTION TIME:
0.950285
-- TEST CASE 1:
---- input:
[[3,5,2],[1,4,3],[2,3,5]]
---- correct output:
ASSIMETRICA
---- user output:
SIMETRICA
-- TEST CASE 2:
---- input:
[[3,5,2],[5,4,6],[2,6,5]]
---- correct output:
SIMETRICA
---- user output:
SIMETRICA
-- TEST CASE 3:
---- input:
[[3.0,7.8,3.1,1.4],[0.9,3.5,0.4,0.2],[8.9,2.8,2.1,6.6],[5.1,3.1,8.4,3.8]]
---- correct output:
ASSIMETRICA
---- user output:
SIMETRICA
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:17:56) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada:")))

for i in range(shape(matriz)[0]:
if (shape(matriz)[0])==(shape(matriz)[1]):
	print("SIMETRICA")
else:
	print("ASSIMETRICA")
	
-- ERROR:
File "XXXX", line 6
    for i in range(shape(matriz)[0]:
                                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:18:16) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada:")))

for i in range(shape(matriz)[0]:

	if (shape(matriz)[0])==(shape(matriz)[1]):
		print("SIMETRICA")
	else:
		print("ASSIMETRICA")
	
-- ERROR:
File "XXXX", line 6
    for i in range(shape(matriz)[0]:
                                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:18:22) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada:")))

for i in range(shape(matriz)[0])

	if (shape(matriz)[0])==(shape(matriz)[1]):
		print("SIMETRICA")
	else:
		print("ASSIMETRICA")
	
-- ERROR:
File "XXXX", line 6
    for i in range(shape(matriz)[0])
                                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:18:28) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada:")))

for i in range(shape(matriz)[0]):

	if (shape(matriz)[0])==(shape(matriz)[1]):
		print("SIMETRICA")
	else:
		print("ASSIMETRICA")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:19:01) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada:")))

for i in range(shape(matriz)[0]):
	if (shape(matriz)[0])==(shape(matriz)[1]):
		print("SIMETRICA")
	else:
		print("ASSIMETRICA")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 16:19:06) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada:")))

for i in range(shape(matriz)[0]):
	if (shape(matriz)[0])==(shape(matriz)[1]):
		print("SIMETRICA")
	else:
		print("ASSIMETRICA")
	
-- EXECUTION TIME:
2.38127
-- TEST CASE 1:
---- input:
[[3,5,2],[1,4,3],[2,3,5]]
---- correct output:
ASSIMETRICA
---- user output:
SIMETRICA
SIMETRICA
SIMETRICA
-- TEST CASE 2:
---- input:
[[3,5,2],[5,4,6],[2,6,5]]
---- correct output:
SIMETRICA
---- user output:
Matriz quadrada:SIMETRICA
SIMETRICA
SIMETRICA
-- TEST CASE 3:
---- input:
[[3.0,7.8,3.1,1.4],[0.9,3.5,0.4,0.2],[8.9,2.8,2.1,6.6],[5.1,3.1,8.4,3.8]]
---- correct output:
ASSIMETRICA
---- user output:
Matriz quadrada:SIMETRICA
SIMETRICA
SIMETRICA
SIMETRICA
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 16:19:06) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada:")))

for i in range(shape(matriz)[0]):
	if (shape(matriz)[0])==(shape(matriz)[1]):
		print("SIMETRICA")
	else:
		print("ASSIMETRICA")
	
-- EXECUTION TIME:
2.3925
-- TEST CASE 1:
---- input:
[[3,5,2],[1,4,3],[2,3,5]]
---- correct output:
ASSIMETRICA
---- user output:
Matriz quadrada:SIMETRICA
SIMETRICA
SIMETRICA
-- TEST CASE 2:
---- input:
[[3,5,2],[5,4,6],[2,6,5]]
---- correct output:
SIMETRICA
---- user output:
Matriz quadrada:SIMETRICA
SIMETRICA
SIMETRICA
-- TEST CASE 3:
---- input:
[[3.0,7.8,3.1,1.4],[0.9,3.5,0.4,0.2],[8.9,2.8,2.1,6.6],[5.1,3.1,8.4,3.8]]
---- correct output:
ASSIMETRICA
---- user output:
Matriz quadrada:SIMETRICA
SIMETRICA
SIMETRICA
SIMETRICA
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:19:23) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada:")))

for i in range(matriz[i:j]):
	if (shape(matriz)[0])==(shape(matriz)[1]):
		print("SIMETRICA")
	else:
		print("ASSIMETRICA")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:39:29) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada:")))

	if (shape(matriz)[0])==(shape(matriz)[1]):
		print("SIMETRICA")
	else:
		print("ASSIMETRICA")
	
-- ERROR:
File "XXXX", line 6
    if (shape(matriz)[0])==(shape(matriz)[1]):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:39:31) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada:")))

	if (shape(matriz)[0])==(shape(matriz)[1]):
		print("SIMETRICA")
	else:
		print("ASSIMETRICA")
	
-- ERROR:
File "XXXX", line 6
    if (shape(matriz)[0])==(shape(matriz)[1]):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:43:57) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada:")))

for i in range (shape(matriz)[i:j]:
	if (shape(matriz)[0])==(shape(matriz)[1]):
		print("SIMETRICA")
	else:
		print("ASSIMETRICA")
	
-- ERROR:
File "XXXX", line 6
    for i in range (shape(matriz)[i:j]:
                                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:44:03) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada:")))

for i in range (shape(matriz)[i:j])
	if (shape(matriz)[0])==(shape(matriz)[1]):
		print("SIMETRICA")
	else:
		print("ASSIMETRICA")
	
-- ERROR:
File "XXXX", line 6
    for i in range (shape(matriz)[i:j])
                                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:44:07) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada:")))

for i in range (shape(matriz)[i:j]):
	if (shape(matriz)[0])==(shape(matriz)[1]):
		print("SIMETRICA")
	else:
		print("ASSIMETRICA")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 16:44:10) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada:")))

for i in range (shape(matriz)[i:j]):
	if (shape(matriz)[0])==(shape(matriz)[1]):
		print("SIMETRICA")
	else:
		print("ASSIMETRICA")
	
-- EXECUTION TIME:
1.26297
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1871/1728/main.py", line 6, in <module>
    for i in range (shape(matriz)[i:j]):
NameError: name 'i' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:44:17) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada:")))

for i in range (shape(matriz)[i:j]):
	if (shape(matriz)[0])==(shape(matriz)[1]):
		print("SIMETRICA")
	else:
		print("ASSIMETRICA")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:44:38) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada:")))

for i in range (shape(matriz)):
	if (shape(matriz)[0])==(shape(matriz)[1]):
		print("SIMETRICA")
	else:
		print("ASSIMETRICA")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:48:54) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada:")))
	if (shape(matriz)[0])==(shape(matriz)[1]):
		print("SIMETRICA")
	else:
		print("ASSIMETRICA")
	
-- ERROR:
File "XXXX", line 5
    if (shape(matriz)[0])==(shape(matriz)[1]):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:49:01) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada:")))

if (shape(matriz)[0])==(shape(matriz)[1]):
		print("SIMETRICA")
	else:
		print("ASSIMETRICA")
	
-- ERROR:
File "XXXX", line 8
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:49:02) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada:")))

if (shape(matriz)[0])==(shape(matriz)[1]):
		print("SIMETRICA")
	else:
		print("ASSIMETRICA")
	
-- ERROR:
File "XXXX", line 8
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:49:06) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada:")))

if (shape(matriz)[0])==(shape(matriz)[1]):
		print("SIMETRICA")
else:
		print("ASSIMETRICA")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:49:10) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada:")))

if (shape(matriz)[0])==(shape(matriz)[1]):
	print("SIMETRICA")
else:
	print("ASSIMETRICA")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:50:19) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada:")))

if (shape(matriz)[0])==(shape(matriz)[1]):
	print("SIMETRICA")
else:
	print("ASSIMETRICA")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 16:50:22) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada:")))

if (shape(matriz)[0])==(shape(matriz)[1]):
	print("SIMETRICA")
else:
	print("ASSIMETRICA")
	
-- EXECUTION TIME:
1.06329
-- TEST CASE 1:
---- input:
[[3,5,2],[1,4,3],[2,3,5]]
---- correct output:
ASSIMETRICA
---- user output:
SIMETRICA
-- TEST CASE 2:
---- input:
[[3,5,2],[5,4,6],[2,6,5]]
---- correct output:
SIMETRICA
---- user output:
SIMETRICA
-- TEST CASE 3:
---- input:
[[3.0,7.8,3.1,1.4],[0.9,3.5,0.4,0.2],[8.9,2.8,2.1,6.6],[5.1,3.1,8.4,3.8]]
---- correct output:
ASSIMETRICA
---- user output:
SIMETRICA
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:50:26) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada:")))

if (shape(matriz)[0])==(shape(matriz)[1]):
	print("SIMETRICA")
else:
	print("ASSIMETRICA")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 16:50:32) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada:")))

if (shape(matriz)[0])==(shape(matriz)[1]):
	print("SIMETRICA")
else:
	print("ASSIMETRICA")
	
-- EXECUTION TIME:
1.7402
-- TEST CASE 1:
---- input:
[[3,5,2],[1,4,3],[2,3,5]]
---- correct output:
ASSIMETRICA
---- user output:
SIMETRICA
-- TEST CASE 2:
---- input:
[[3,5,2],[5,4,6],[2,6,5]]
---- correct output:
SIMETRICA
---- user output:
Matriz quadrada:SIMETRICA
-- TEST CASE 3:
---- input:
[[3.0,7.8,3.1,1.4],[0.9,3.5,0.4,0.2],[8.9,2.8,2.1,6.6],[5.1,3.1,8.4,3.8]]
---- correct output:
ASSIMETRICA
---- user output:
Matriz quadrada:SIMETRICA
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 16:50:32) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada:")))

if (shape(matriz)[0])==(shape(matriz)[1]):
	print("SIMETRICA")
else:
	print("ASSIMETRICA")
	
-- EXECUTION TIME:
3.94458
-- TEST CASE 1:
---- input:
[[3,5,2],[1,4,3],[2,3,5]]
---- correct output:
ASSIMETRICA
---- user output:
SIMETRICA
-- TEST CASE 2:
---- input:
[[3,5,2],[5,4,6],[2,6,5]]
---- correct output:
SIMETRICA
---- user output:
Matriz quadrada:SIMETRICA
-- TEST CASE 3:
---- input:
[[3.0,7.8,3.1,1.4],[0.9,3.5,0.4,0.2],[8.9,2.8,2.1,6.6],[5.1,3.1,8.4,3.8]]
---- correct output:
ASSIMETRICA
---- user output:
Matriz quadrada:SIMETRICA
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 16:50:32) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada:")))

if (shape(matriz)[0])==(shape(matriz)[1]):
	print("SIMETRICA")
else:
	print("ASSIMETRICA")
	
-- EXECUTION TIME:
4.14656
-- TEST CASE 1:
---- input:
[[3,5,2],[1,4,3],[2,3,5]]
---- correct output:
ASSIMETRICA
---- user output:
Matriz quadrada:SIMETRICA
-- TEST CASE 2:
---- input:
[[3,5,2],[5,4,6],[2,6,5]]
---- correct output:
SIMETRICA
---- user output:
Matriz quadrada:SIMETRICA
-- TEST CASE 3:
---- input:
[[3.0,7.8,3.1,1.4],[0.9,3.5,0.4,0.2],[8.9,2.8,2.1,6.6],[5.1,3.1,8.4,3.8]]
---- correct output:
ASSIMETRICA
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:51:44) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada:")))
matriz=matriz.t
if (shape(matriz)[0])==(shape(matriz)[1]):
	print("SIMETRICA")
else:
	print("ASSIMETRICA")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 16:51:50) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada:")))
matriz=matriz.t
if (shape(matriz)[0])==(shape(matriz)[1]):
	print("SIMETRICA")
else:
	print("ASSIMETRICA")
	
-- EXECUTION TIME:
0.897404
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1871/1728/main.py", line 5, in <module>
    matriz=matriz.t
AttributeError: 'numpy.ndarray' object has no attribute 't'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:51:53) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada:")))
matriz=matriz.t
if (shape(matriz)[0])==(shape(matriz)[1]):
	print("SIMETRICA")
else:
	print("ASSIMETRICA")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:52:01) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada:")))
matriz=matriz.T
if (shape(matriz)[0])==(shape(matriz)[1]):
	print("SIMETRICA")
else:
	print("ASSIMETRICA")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 16:52:08) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada:")))
matriz=matriz.T
if (shape(matriz)[0])==(shape(matriz)[1]):
	print("SIMETRICA")
else:
	print("ASSIMETRICA")
	
-- EXECUTION TIME:
0.816687
-- TEST CASE 1:
---- input:
[[3,5,2],[1,4,3],[2,3,5]]
---- correct output:
ASSIMETRICA
---- user output:
SIMETRICA
-- TEST CASE 2:
---- input:
[[3,5,2],[5,4,6],[2,6,5]]
---- correct output:
SIMETRICA
---- user output:
SIMETRICA
-- TEST CASE 3:
---- input:
[[3.0,7.8,3.1,1.4],[0.9,3.5,0.4,0.2],[8.9,2.8,2.1,6.6],[5.1,3.1,8.4,3.8]]
---- correct output:
ASSIMETRICA
---- user output:
SIMETRICA
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:53:42) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada:")))
matriz=matriz.T
if (shape(matriz)[i:])==(shape(matriz[:j])
	print("SIMETRICA")
else:
	print("ASSIMETRICA")
	
-- ERROR:
File "XXXX", line 7
    print("SIMETRICA")
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:53:46) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada:")))
matriz=matriz.T
if (shape(matriz)[i:])==(shape(matriz[:j]):
	print("SIMETRICA")
else:
	print("ASSIMETRICA")
	
-- ERROR:
File "XXXX", line 6
    if (shape(matriz)[i:])==(shape(matriz[:j]):
                                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:53:47) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada:")))
matriz=matriz.T
if (shape(matriz)[i:])==(shape(matriz[:j]):
	print("SIMETRICA")
else:
	print("ASSIMETRICA")
	
-- ERROR:
File "XXXX", line 6
    if (shape(matriz)[i:])==(shape(matriz[:j]):
                                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:53:57) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada:")))
matriz=matriz.T
if (shape(matriz)[i:])==(shape(matriz[:j]):
	print("SIMETRICA")
else:
	print("ASSIMETRICA")
	
-- ERROR:
File "XXXX", line 6
    if (shape(matriz)[i:])==(shape(matriz[:j]):
                                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:53:58) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada:")))
matriz=matriz.T
if (shape(matriz)[i:])==(shape(matriz[:j]):
	print("SIMETRICA")
else:
	print("ASSIMETRICA")
	
-- ERROR:
File "XXXX", line 6
    if (shape(matriz)[i:])==(shape(matriz[:j]):
                                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:54:10) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada:")))
matriz=matriz.T
if (shape(matriz)[i:])==(shape(matriz):j]):
	print("SIMETRICA")
else:
	print("ASSIMETRICA")
	
-- ERROR:
File "XXXX", line 6
    if (shape(matriz)[i:])==(shape(matriz):j]):
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:54:11) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada:")))
matriz=matriz.T
if (shape(matriz)[i:])==(shape(matriz):j]):
	print("SIMETRICA")
else:
	print("ASSIMETRICA")
	
-- ERROR:
File "XXXX", line 6
    if (shape(matriz)[i:])==(shape(matriz):j]):
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:54:32) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada:")))
matriz=matriz.T
if (shape(matriz)[i:])==(shape(matriz):[:j]):
	print("SIMETRICA")
else:
	print("ASSIMETRICA")
	
-- ERROR:
File "XXXX", line 6
    if (shape(matriz)[i:])==(shape(matriz):[:j]):
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 16:54:37) 
-- CODE:
from numpy import*
from numpy.linalg import*

matriz=array(eval(input("Matriz quadrada:")))
matriz=matriz.T
if (shape(matriz)[i:])==(shape(matriz)[:j]):
	print("SIMETRICA")
else:
	print("ASSIMETRICA")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
