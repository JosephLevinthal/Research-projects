== SUBMITION (2019-04-02 14:39:53) 
-- CODE:
from math import *
np = float(input())

prob = 1 - ( factorial(365)/factorial(365 - np)) * ( (1/365**np) )

print(round(prob,2))
-- EXECUTION TIME:
0.146418
-- TEST CASE 1:
---- input:
12
---- correct output:
16.7
---- user output:
0.17
-- TEST CASE 2:
---- input:
24
---- correct output:
53.83
---- user output:
0.54
-- TEST CASE 3:
---- input:
99
---- correct output:
100.0
---- user output:
1.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 14:40:34) 
-- CODE:
from math import *
np = float(input())

prob = ( 1 - ( factorial(365) / factorial(365 - np) ) ) * ( (1/365**np) )

print(round(prob,2))
-- EXECUTION TIME:
0.127909
-- TEST CASE 1:
---- input:
12
---- correct output:
16.7
---- user output:
-0.83
-- TEST CASE 2:
---- input:
24
---- correct output:
53.83
---- user output:
-0.46
-- TEST CASE 3:
---- input:
99
---- correct output:
100.0
---- user output:
-0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 14:42:09) 
-- CODE:
from math import *
np = float(input())

prob = ( 1 - ( factorial(365) / factorial(365 - np) ) ) * ( (1/365**np) )

print(round(prob,2))
-- OUTPUT:
-0.83
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 14:43:16) 
-- CODE:
from math import *
np = float(input())

prob = ( 1 - ( factorial(365) / factorial(365 - np) )  * ( (1/365**np) ))

print(round(prob,2))
-- EXECUTION TIME:
0.234122
-- TEST CASE 1:
---- input:
12
---- correct output:
16.7
---- user output:
0.17
-- TEST CASE 2:
---- input:
24
---- correct output:
53.83
---- user output:
0.54
-- TEST CASE 3:
---- input:
99
---- correct output:
100.0
---- user output:
1.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 14:44:00) 
-- CODE:
from math import *
np = float(input())

prob = ( 1 - ( factorial(365) / factorial(365 - np) )  * ( (1/365**np) ))

print(round(prob,2))
-- OUTPUT:
0.17
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 14:51:13) 
-- CODE:
from math import *
np = float(input())

prob = 1 - ( factorial(365) // factorial(365 - np) )  * (1/365**np) 

print(round(prob,2))
-- EXECUTION TIME:
0.220826
-- TEST CASE 1:
---- input:
12
---- correct output:
16.7
---- user output:
0.17
-- TEST CASE 2:
---- input:
24
---- correct output:
53.83
---- user output:
0.54
-- TEST CASE 3:
---- input:
99
---- correct output:
100.0
---- user output:
1.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 14:51:25) 
-- CODE:
from math import *
np = float(input())

prob = 1 - ( factorial(365) % factorial(365 - np) )  * (1/365**np) 

print(round(prob,2))
-- EXECUTION TIME:
0.177466
-- TEST CASE 1:
---- input:
12
---- correct output:
16.7
---- user output:
1.0
-- TEST CASE 2:
---- input:
24
---- correct output:
53.83
---- user output:
1.0
-- TEST CASE 3:
---- input:
99
---- correct output:
100.0
---- user output:
1.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 14:51:39) 
-- CODE:
from math import *
np = float(input())

prob = 1 - ( factorial(365) / factorial(365 - np) )  * (1/365**np) 

print(round(prob,2))
-- OUTPUT:
0.17
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 14:51:49) 
-- CODE:
from math import *
np = float(input())

prob = 1 - ( factorial(365) / factorial(365 - np) )  * (1/365**np) 

print(round(prob,2))
-- EXECUTION TIME:
0.151694
-- TEST CASE 1:
---- input:
12
---- correct output:
16.7
---- user output:
0.17
-- TEST CASE 2:
---- input:
24
---- correct output:
53.83
---- user output:
0.54
-- TEST CASE 3:
---- input:
99
---- correct output:
100.0
---- user output:
1.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 14:52:07) 
-- CODE:
from math import *
np = float(input())

prob = 1 - ( factorial(365) / factorial(365 - np) )  * (1/365**np) 

print(round(prob*100,2))
-- EXECUTION TIME:
0.130555
-- TEST CASE 1:
---- input:
12
---- correct output:
16.7
---- user output:
16.7
-- TEST CASE 2:
---- input:
24
---- correct output:
53.83
---- user output:
53.83
-- TEST CASE 3:
---- input:
99
---- correct output:
100.0
---- user output:
100.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
