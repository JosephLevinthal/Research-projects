== TEST (2019-03-20 18:36:38) 
-- CODE:
a = int(input("valor de a"))
b = int(input("valor de b"))
c = int(input("valor de c"))
a != 0
b != 0
c != 0
(a+b+c) !=0

print(round(((a ** 2)+(b ** 2)+(c ** 2))/(a+b+c)),7)
-- OUTPUT:
26 7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 18:36:46) 
-- CODE:
a = int(input("valor de a:"))
b = int(input("valor de b:"))
c = int(input("valor de c:"))
a != 0
b != 0
c != 0
(a+b+c) !=0

print(round(((a ** 2)+(b ** 2)+(c ** 2))/(a+b+c)),7)
-- OUTPUT:
26 7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 18:37:11) 
-- CODE:
a = int(input("valor de a:"))
b = int(input("valor de b:"))
c = int(input("valor de c:"))
a != 0
b != 0
c != 0
(a+b+c) !=0

print(round(((a ** 2)+(b ** 2)+(c ** 2))/(a+b+c),7))
-- EXECUTION TIME:
0.179055
-- TEST CASE 1:
---- input:
20
25
30
---- correct output:
25.6666667
---- user output:
25.6666667
-- TEST CASE 2:
---- input:
235
400
350
---- correct output:
342.8680203
---- user output:
342.8680203
-- TEST CASE 3:
---- input:
90
120
2
---- correct output:
106.1509434
---- user output:
106.1509434
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 18:37:11) 
-- CODE:
a = int(input("valor de a:"))
b = int(input("valor de b:"))
c = int(input("valor de c:"))
a != 0
b != 0
c != 0
(a+b+c) !=0

print(round(((a ** 2)+(b ** 2)+(c ** 2))/(a+b+c),7))
-- OUTPUT:
25.6666667
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 18:37:15) 
-- CODE:
a = int(input("valor de a:"))
b = int(input("valor de b:"))
c = int(input("valor de c:"))
a != 0
b != 0
c != 0
(a+b+c) !=0

print(round(((a ** 2)+(b ** 2)+(c ** 2))/(a+b+c),7))
-- EXECUTION TIME:
0.191647
-- TEST CASE 1:
---- input:
20
25
30
---- correct output:
25.6666667
---- user output:
25.6666667
-- TEST CASE 2:
---- input:
235
400
350
---- correct output:
342.8680203
---- user output:
342.8680203
-- TEST CASE 3:
---- input:
90
120
2
---- correct output:
106.1509434
---- user output:
106.1509434
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
