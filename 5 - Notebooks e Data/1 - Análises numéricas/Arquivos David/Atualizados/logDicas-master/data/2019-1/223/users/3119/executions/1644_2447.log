== TEST (2019-04-04 19:43:52) 
-- CODE:
#Preco e pagamento
preco = float(input("Preco do produto: "))
pagamento = float(input("Pagamento"))

if(preco > pagamento):
	mensagem = ("Falta"+" "+(preco - pagamento))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    mensagem = ("Falta"+" "+(preco - pagamento))
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 19:44:24) 
-- CODE:
#Preco e pagamento
preco = float(input("Preco do produto: "))
pagamento = float(input("Pagamento"))

if(preco > pagamento):
	mensagem = ("Falta"+" "+preco - pagamento)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    mensagem = ("Falta"+" "+preco - pagamento)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 19:44:28) 
-- CODE:
#Preco e pagamento
preco = float(input("Preco do produto: "))
pagamento = float(input("Pagamento: "))

if(preco > pagamento):
	mensagem = ("Falta"+" "+preco - pagamento)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    mensagem = ("Falta"+" "+preco - pagamento)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 19:46:21) 
-- CODE:
#Preco e pagamento
preco = float(input("Preco do produto: "))
pagamento = float(input("Pagamento: "))

if(preco > pagamento):
	mensagem = ("Falta"+" "+"preco - pagamento")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    mensagem = ("Falta"+" "+preco - pagamento)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 19:48:31) 
-- CODE:
#Preco e pagamento
preco = float(input("Preco do produto: "))
pagamento = float(input("Pagamento: "))
p= preco - pagamento

if(preco > pagamento):
	mensagem = ("Falta"+" "+p)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    mensagem = ("Falta"+" "+p)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 19:50:26) 
-- CODE:
#Preco e pagamento
preco = float(input("Preco do produto: "))
pagamento = float(input("Pagamento: "))
p = preco - pagamento

if(preco > pagamento):
	mensagem = ("Falta"+" "+ p)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    mensagem = ("Falta"+" "+ p)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 19:50:45) 
-- CODE:
#Preco e pagamento
preco = float(input("Preco do produto: "))
pagamento = float(input("Pagamento: "))
p = preco - pagamento

if(preco > pagamento):
	mensagem = "Falta"+" "+ p
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    mensagem = "Falta"+" "+ p
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 19:51:45) 
-- CODE:
#Preco e pagamento
preco = float(input("Preco do produto: "))
pagamento = float(input("Pagamento: "))
p = preco - pagamento

if(preco > pagamento):
	mensagem = ("Falta"+" "+ p)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    mensagem = ("Falta"+" "+ p)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 21:47:12) 
-- CODE:
#Preco e pagamento
preco = float(input("Preco do produto: "))
pagamento = float(input("Pagamento: "))
p = preco - pagamento

if(preco > pagamento):
	mensagem = ("Falta"+" "+ p)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    mensagem = ("Falta"+" "+ p)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 21:48:28) 
-- CODE:
#Preco e pagamento
preco = float(input("Preco do produto: "))
pagamento = float(input("Pagamento: "))
x = preco - pagamento

if(preco > pagamento):
	print("falta"+" "+x)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print("falta"+" "+x)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 21:51:38) 
-- CODE:
#Preco e pagamento
preco = float(input("Preco do produto: "))
pagamento = float(input("Pagamento: "))
x = preco - pagamento

if(preco > pagamento):
	print(x)
-- OUTPUT:
26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 21:52:04) 
-- CODE:
#Preco e pagamento
preco = float(input("Preco do produto: "))
pagamento = float(input("Pagamento: "))
x = preco - pagamento

if(preco > pagamento):
	print("Falta"+x)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print("Falta"+x)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 21:52:31) 
-- CODE:
#Preco e pagamento
preco = float(input("Preco do produto: "))
pagamento = float(input("Pagamento: "))
x = preco - pagamento

if(preco > pagamento):
	print("Falta")+x
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print("Falta")+x
TypeError: unsupported operand type(s) for +: 'NoneType' and 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 21:52:46) 
-- CODE:
#Preco e pagamento
preco = float(input("Preco do produto: "))
pagamento = float(input("Pagamento: "))
x = preco - pagamento

if(preco > pagamento):
	print("Falta",x)
-- OUTPUT:
Falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 21:53:04) 
-- CODE:
#Preco e pagamento
preco = float(input("Preco do produto: "))
pagamento = float(input("Pagamento: "))
x = preco - pagamento

if(preco > pagamento):
	print("Falta"+" ",x)
-- OUTPUT:
Falta  26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 21:54:19) 
-- CODE:
#Preco e pagamento
preco = float(input("Preco do produto: "))
pagamento = float(input("Pagamento: "))
x = preco - pagamento
y = pagamento - preco
if(preco > pagamento):
	mensagem("Falta"+" ",x)
else:
	mensagem("Troco de"+" ",y)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    mensagem("Falta"+" ",x)
NameError: name 'mensagem' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 21:54:52) 
-- CODE:
#Preco e pagamento
preco = float(input("Preco do produto: "))
pagamento = float(input("Pagamento: "))
x = preco - pagamento
y = pagamento - preco
if(preco > pagamento):
	mensagem("Falta"+" ",x)
else:
	mensagem("Troco de"+" ",y)
	
print(round(mensagem,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    mensagem("Falta"+" ",x)
NameError: name 'mensagem' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 21:55:12) 
-- CODE:
#Preco e pagamento
preco = float(input("Preco do produto: "))
pagamento = float(input("Pagamento: "))
x = preco - pagamento
y = pagamento - preco
if(preco > pagamento):
	mensagem = ("Falta"+" ",x)
else:
	mensagem = ("Troco de"+" ",y)
	
print(round(mensagem,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(round(mensagem,2))
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 21:56:28) 
-- CODE:
#Preco e pagamento
preco = float(input("Preco do produto: "))
pagamento = float(input("Pagamento: "))
x = preco - pagamento
y = pagamento - preco
if(preco > pagamento):
	mensagem = ("Falta"+" ",round(x,2))
else:
	mensagem = ("Troco de"+" ",round(y))
	
print(mensagem)
-- OUTPUT:
('Falta ', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 21:57:08) 
-- CODE:
#Preco e pagamento
preco = float(input("Preco do produto: "))
pagamento = float(input("Pagamento: "))
x = preco - pagamento
y = pagamento - preco
if(preco > pagamento):
	mensagem = "Falta"+" ",round(x,2)
else:
	mensagem = "Troco de"+" "round(y)
	
print(mensagem)
-- ERROR:
File "XXXX", line 9
    mensagem = "Troco de"+" "round(y)
                                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 21:57:19) 
-- CODE:
#Preco e pagamento
preco = float(input("Preco do produto: "))
pagamento = float(input("Pagamento: "))
x = preco - pagamento
y = pagamento - preco
if(preco > pagamento):
	mensagem = "Falta"+" ",round(x,2)
else:
	mensagem = "Troco de"+" "round(y,2)
	
print(mensagem)
-- ERROR:
File "XXXX", line 9
    mensagem = "Troco de"+" "round(y,2)
                                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 21:57:31) 
-- CODE:
#Preco e pagamento
preco = float(input("Preco do produto: "))
pagamento = float(input("Pagamento: "))
x = preco - pagamento
y = pagamento - preco
if(preco > pagamento):
	mensagem = "Falta"+" ",round(x,2)
else:
	mensagem = "Troco de"+" ",round(y,2)
	
print(mensagem)
-- OUTPUT:
('Falta ', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 21:58:19) 
-- CODE:
#Preco e pagamento
preco = float(input("Preco do produto: "))
pagamento = float(input("Pagamento: "))
x = round(preco - pagamento,2)
y = round(pagamento - preco,2)
if(preco > pagamento):
	mensagem = "Falta"+" ",x
else:
	mensagem = "Troco de"+" ",y
	
print(mensagem)
-- OUTPUT:
('Falta ', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 21:58:55) 
-- CODE:
#Preco e pagamento
preco = float(input("Preco do produto: "))
pagamento = float(input("Pagamento: "))
x = round(preco - pagamento,2)
y = round(pagamento - preco,2)
if(preco > pagamento):
	mensagem = "Falta"+" "+x
else:
	mensagem = "Troco de"+" "+y
	
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    mensagem = "Falta"+" "+x
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 21:59:16) 
-- CODE:
#Preco e pagamento
preco = float(input("Preco do produto: "))
pagamento = float(input("Pagamento: "))
x = round(preco - pagamento,2)
y = round(pagamento - preco,2)
if(preco > pagamento):
	mensagem = "Falta"+" ",x
else:
	mensagem = "Troco de"+" ",y
	
print(mensagem)
-- OUTPUT:
('Falta ', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 21:59:42) 
-- CODE:
#Preco e pagamento
preco = float(input("Preco do produto: "))
pagamento = float(input("Pagamento: "))
x = preco - pagamento
y = pagamento - preco
if(preco > pagamento):
	mensagem("Falta"+" ",x)
else:
	mensagem("Troco de"+" ",y)
	
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    mensagem("Falta"+" ",x)
NameError: name 'mensagem' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 21:59:56) 
-- CODE:
#Preco e pagamento
preco = float(input("Preco do produto: "))
pagamento = float(input("Pagamento: "))
x = preco - pagamento
y = pagamento - preco
if(preco > pagamento):
	mensagem=("Falta"+" ",x)
else:
	mensagem=("Troco de"+" ",y)
	
print(mensagem)
-- OUTPUT:
('Falta ', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 16:04:25) 
-- CODE:
#Preco e pagamento
preco = float(input("Preco do produto: "))
pagamento = float(input("Pagamento: "))
x = round(preco - pagamento, 2)
print(x)
-- OUTPUT:
26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 16:04:40) 
-- CODE:
#Preco e pagamento
preco = float(input("Preco do produto: "))
pagamento = float(input("Pagamento: "))
x = round(preco - pagamento, 2)
print(x)
-- EXECUTION TIME:
0.208454
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
-28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 16:04:42) 
-- CODE:
#Preco e pagamento
preco = float(input("Preco do produto: "))
pagamento = float(input("Pagamento: "))
x = round(preco - pagamento, 2)
print(x)
-- OUTPUT:
26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 16:05:38) 
-- CODE:
#Preco e pagamento
preco = float(input("Preco do produto: "))
pagamento = float(input("Pagamento: "))
x = round(preco - pagamento, 2)
y = round(pagamento - preco, 2) 
if(preco > pagamento):
	mensagem=("Falta"+" ",x)
else:
	mensagem=("Troco de"+" ",y)
	
print(mensagem)
-- OUTPUT:
('Falta ', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 16:05:55) 
-- CODE:
#Preco e pagamento
preco = float(input("Preco do produto: "))
pagamento = float(input("Pagamento: "))
x = round(preco - pagamento, 2)
y = round(pagamento - preco, 2) 
if(preco > pagamento):
	mensagem=("Falta", x)
else:
	mensagem=("Troco de"+" ",y)
	
print(mensagem)
-- OUTPUT:
('Falta', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 16:06:05) 
-- CODE:
#Preco e pagamento
preco = float(input("Preco do produto: "))
pagamento = float(input("Pagamento: "))
x = round(preco - pagamento, 2)
y = round(pagamento - preco, 2) 
if(preco > pagamento):
	mensagem=("Falta"+ x)
else:
	mensagem=("Troco de"+" ",y)
	
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    mensagem=("Falta"+ x)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 16:06:26) 
-- CODE:
#Preco e pagamento
preco = float(input("Preco do produto: "))
pagamento = float(input("Pagamento: "))
x = round(preco - pagamento, 2)
y = round(pagamento - preco, 2) 
if(preco > pagamento):
	mensagem=("Falta"+" " x)
else:
	mensagem=("Troco de"+" ",y)
	
print(mensagem)
-- ERROR:
File "XXXX", line 7
    mensagem=("Falta"+" " x)
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 16:06:29) 
-- CODE:
#Preco e pagamento
preco = float(input("Preco do produto: "))
pagamento = float(input("Pagamento: "))
x = round(preco - pagamento, 2)
y = round(pagamento - preco, 2) 
if(preco > pagamento):
	mensagem=("Falta"+" " x)
else:
	mensagem=("Troco de"+" ",y)
	
print(mensagem)
-- ERROR:
File "XXXX", line 7
    mensagem=("Falta"+" " x)
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 16:06:37) 
-- CODE:
#Preco e pagamento
preco = float(input("Preco do produto: "))
pagamento = float(input("Pagamento: "))
x = round(preco - pagamento, 2)
y = round(pagamento - preco, 2) 
if(preco > pagamento):
	mensagem=("Falta"+" "+x)
else:
	mensagem=("Troco de"+" ",y)
	
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    mensagem=("Falta"+" "+x)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 16:06:49) 
-- CODE:
#Preco e pagamento
preco = float(input("Preco do produto: "))
pagamento = float(input("Pagamento: "))
x = round(preco - pagamento, 2)
y = round(pagamento - preco, 2) 
if(preco > pagamento):
	mensagem=("Falta"+" ",x)
else:
	mensagem=("Troco de"+" ",y)
	
print(mensagem)
-- OUTPUT:
('Falta ', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 16:07:04) 
-- CODE:
#Preco e pagamento
preco = float(input("Preco do produto: "))
pagamento = float(input("Pagamento: "))
x = round(preco - pagamento, 2)
y = round(pagamento - preco, 2) 
if(preco > pagamento):
	mensagem=("Falta",x)
else:
	mensagem=("Troco de",y)
	
print(mensagem)
-- OUTPUT:
('Falta', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 16:32:40) 
-- CODE:
#Preco e pagamento
preco = float(input("Preco do produto: "))
pagamento = float(input("Pagamento: "))
x = round(preco - pagamento, 2)
y = round(pagamento - preco, 2) 
if(preco > pagamento):
	mensagem=(x)
else:
	mensagem=(y)
	
print(mensagem)
-- OUTPUT:
26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 16:33:23) 
-- CODE:
#Preco e pagamento
preco = float(input("Preco do produto: "))
pagamento = float(input("Pagamento: "))
x = round(preco - pagamento, 2)
y = round(pagamento - preco, 2) 
if(preco > pagamento):
	mensagem=("Falta"+" "+ x)
else:
	mensagem=("Troco de"+" "+ y)
	
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    mensagem=("Falta"+" "+ x)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 16:34:03) 
-- CODE:
#Preco e pagamento
preco = float(input("Preco do produto: "))
pagamento = float(input("Pagamento: "))

x = round(preco - pagamento, 2)
y = round(pagamento - preco, 2) 

if(preco > pagamento):
	mensagem=("Falta"+" "+ (round(preco - pagamento, 2)))
else:
	mensagem=("Troco de"+" "+ y)
	
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    mensagem=("Falta"+" "+ (round(preco - pagamento, 2)))
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 16:39:17) 
-- CODE:
#Preco e pagamento
preco = float(input("Preco do produto: "))
pagamento = float(input("Pagamento: "))

x = round(preco - pagamento, 2)
y = round(pagamento - preco, 2) 

if(preco > pagamento):
	mensagem=("Falta"+" ", x)
else:
	mensagem=("Troco de"+" "+ y)
	
print(mensagem)
-- OUTPUT:
('Falta ', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 16:55:59) 
-- CODE:
#Preco e pagamento
preco = float(input("Preco do produto: "))
pagamento = float(input("Pagamento: "))

X = round(preco - pagamento, 2)
Y = round(pagamento - preco, 2) 

if(preco > pagamento):
	mensagem=("Falta"+X)
else:
	mensagem=("Troco de"+Y)
	
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    mensagem=("Falta"+X)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 16:56:54) 
-- CODE:
#Preco e pagamento
preco = float(input("Preco do produto: "))
pagamento = float(input("Pagamento: "))

X = round(preco - pagamento, 2)
Y = round(pagamento - preco, 2) 

if(preco > pagamento):
	print("Falta", X)
else:
	mensagem=("Troco de"+Y)
	
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    print(mensagem)
NameError: name 'mensagem' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 16:57:11) 
-- CODE:
#Preco e pagamento
preco = float(input("Preco do produto: "))
pagamento = float(input("Pagamento: "))

X = round(preco - pagamento, 2)
Y = round(pagamento - preco, 2) 

if(preco > pagamento):
	print("Falta", X)
else:
	print("Troco de", Y)
	
-- OUTPUT:
Falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 16:57:16) 
-- CODE:
#Preco e pagamento
preco = float(input("Preco do produto: "))
pagamento = float(input("Pagamento: "))

X = round(preco - pagamento, 2)
Y = round(pagamento - preco, 2) 

if(preco > pagamento):
	print("Falta", X)
else:
	print("Troco de", Y)
	
-- EXECUTION TIME:
0.150828
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
