== TEST (2019-04-16 12:46:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

guardião = input("animal prateado: ")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    temperatura=float(input())
ValueError: could not convert string to float: 'C'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 12:51:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

guardiao = input("animal prateado: ")
if(guardiao == cervo):
	mensagem = "cervo eh o patrono do Harry Potter"
else:
	mensagem = guardiao "nao eh o patrono do Harry Potter"

-- ERROR:
File "XXXX", line 9
    mensagem = guardiao "nao eh o patrono do Harry Potter"
                                                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 12:51:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

guardiao = input("animal prateado: ")
if(guardiao == cervo):
	mensagem = "cervo eh o patrono do Harry Potter"
else:
	mensagem = (guardiao) "nao eh o patrono do Harry Potter"

-- ERROR:
File "XXXX", line 9
    mensagem = (guardiao) "nao eh o patrono do Harry Potter"
                                                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 12:52:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

guardiao = input("animal prateado: ")
if(guardiao == cervo):
	mensagem = "cervo eh o patrono do Harry Potter"
else:
	mensagem = "guardiao nao eh o patrono do Harry Potter"

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if(guardiao == cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 12:53:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

guardiao = input("animal prateado: ")
if(guardiao == cervo):
	mensagem = "cervo eh o patrono do Harry Potter"
else:
	mensagem = "guardiao nao eh o patrono do Harry Potter"

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if(guardiao == cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 12:54:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

guardiao = input("animal prateado: ")
if(guardiao == cervo):
	mensagem = "cervo eh o patrono do Harry Potter"
else:
	mensagem = "guardiao nao eh o patrono do Harry Potter"
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if(guardiao == cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 12:54:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

guardiao = input("animal prateado: ")
if(guardiao == cervo):
	mensagem = "cervo eh o patrono do Harry Potter"
else:
	mensagem = "guardiao nao eh o patrono do Harry Potter"
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if(guardiao == cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 12:55:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

guardiao = input("animal prateado: ")
patronum = cervo
if(guardiao == patronum):
	mensagem = "patronum eh o patrono do Harry Potter"
else:
	mensagem = "guardiao nao eh o patrono do Harry Potter"
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    patronum = cervo
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 13:00:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

guardiao = input("animal prateado: ")

if(guardiao == cervo):
	print("cervo eh o patrono do Harry Potter")
else(guardiao != cervo)
	print("guardiao eh o patrono do Harry Potter")

-- ERROR:
File "XXXX", line 9
    else(guardiao != cervo)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 13:00:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

guardiao = input("animal prateado: ")

if(guardiao == cervo):
	print("cervo eh o patrono do Harry Potter")
else(guardiao =! cervo)
	print("guardiao eh o patrono do Harry Potter")

-- ERROR:
File "XXXX", line 9
    else(guardiao =! cervo)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 13:01:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

guardiao = input("animal prateado: ")

if(guardiao == cervo):
	print("cervo eh o patrono do Harry Potter")
else(guardiao != cervo)
	print("guardiao eh o patrono do Harry Potter")

-- ERROR:
File "XXXX", line 9
    else(guardiao != cervo)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 13:02:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

guardiao = input("animal prateado: ")

if(guardiao == cervo):
	print("cervo eh o patrono do Harry Potter")
else(guardiao != cervo):
	print("guardiao eh o patrono do Harry Potter")

-- ERROR:
File "XXXX", line 9
    else(guardiao != cervo):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 13:02:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

guardiao = input("animal prateado: ")

if(guardiao == cervo):
	print("cervo eh o patrono do Harry Potter")
else:
	print("guardiao eh o patrono do Harry Potter")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if(guardiao == cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 13:03:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

guardiao = input("animal prateado: ")

if(guardiao == cervo):
	print("cervo eh o patrono do Harry Potter")
else:
	print("guardiao eh o patrono do Harry Potter")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if(guardiao == cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 13:14:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

guardiao = input("animal prateado: ")
mensaagem1 = cervo eh o patrono do Harry Potter
mensagem2 = guardiao "nao eh patrono do Harry Potter"
if(guardiao == cervo):
	print(mensagem1)
else:
	print(mensagem2)

-- ERROR:
File "XXXX", line 6
    mensaagem1 = cervo eh o patrono do Harry Potter
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 13:15:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

guardiao = input("animal prateado: ")
mensaagem1 = "cervo eh o patrono do Harry Potter"
mensagem2 = guardiao "nao eh patrono do Harry Potter"
if(guardiao == cervo):
	print(mensagem1)
else:
	print(mensagem2)

-- ERROR:
File "XXXX", line 7
    mensagem2 = guardiao "nao eh patrono do Harry Potter"
                                                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 13:15:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

guardiao = input("animal prateado: ")
mensaagem1 = "cervo eh o patrono do Harry Potter"
mensagem2 = (guardiao) "nao eh patrono do Harry Potter"
if(guardiao == cervo):
	print(mensagem1)
else:
	print(mensagem2)

-- ERROR:
File "XXXX", line 7
    mensagem2 = (guardiao) "nao eh patrono do Harry Potter"
                                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 13:15:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

guardiao = input("animal prateado: ")

-- ERROR:
File "XXXX", line 7
    mensagem2 = (guardiao) "nao eh patrono do Harry Potter"
                                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 13:22:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

guardiao = input("animal prateado: ")
patronum = "cervo"
if (guardiao == patronum):
	print("patronum eh patrono do Harry Potter")
else:
	print("guardiao nao eh patrono de Harry Potter")
-- OUTPUT:
patronum eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 13:24:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

guardiao = input("animal prateado: ")
patronum = "cervo"
if (guardiao == patronum):
	print((patronum) "eh patrono do Harry Potter")
else:
	print("guardiao nao eh patrono de Harry Potter")
-- ERROR:
File "XXXX", line 8
    print((patronum) "eh patrono do Harry Potter")
                                                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 13:24:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

guardiao = input("animal prateado: ")
patronum = "cervo"
if (guardiao == patronum):
	print(patronum "eh patrono do Harry Potter")
else:
	print("guardiao nao eh patrono de Harry Potter")
-- ERROR:
File "XXXX", line 8
    print(patronum "eh patrono do Harry Potter")
                                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 13:28:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

guardiao = input("animal prateado: ")
patronum = "cervo"
if (guardiao == patronum):
	print(patronum, "eh patrono do Harry Potter")
else:
	print(guardiao, "nao eh patrono do Harry Potter")
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 13:28:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

guardiao = input("animal prateado: ")
patronum = "cervo"
if (guardiao == patronum):
	print(patronum, "eh patrono do Harry Potter")
else:
	print(guardiao, "nao eh patrono do Harry Potter")
-- EXECUTION TIME:
0.143258
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
