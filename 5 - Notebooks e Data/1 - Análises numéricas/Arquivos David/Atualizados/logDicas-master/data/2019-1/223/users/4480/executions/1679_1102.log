== TEST (2019-05-01 20:51:21) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import * 
H = float(input(""))
r = float(input(""))
h = float(input(""))
if (h < 0 or H < 0 or r <0):
	vol = -1
elif (h <r ):
	vol = (1./3) * pi * h**2 (3 * r - h)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    vol = (1./3) * pi * h**2 (3 * r - h)
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:57:17) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import * 
H = float(input(""))
r = float(input(""))
h = float(input(""))
if (h < 0 or H < 0 or r <0):
	vol = -1
elif (h <r ):
	vol = (1./3) * pi * h**2 (3 * r - h)
elif (h < H - r):
	vol = (2./3) * pi * r***3 + pi * r**2 * (h - r)
elif (h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol = -1
	
print(round(vol, 3))
-- ERROR:
File "XXXX", line 15
    vol = (2./3) * pi * r***3 + pi * r**2 * (h - r)
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:58:05) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import * 
H = float(input(""))
r = float(input(""))
h = float(input(""))
if (h < 0 or H < 0 or r <0):
	vol = -1
elif (h <r ):
	vol = (1./3) * pi * h**2 (3 * r - h)
elif (h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif (h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol = -1
	
print(round(vol, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    vol = (1./3) * pi * h**2 (3 * r - h)
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 20:58:10) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import * 
H = float(input(""))
r = float(input(""))
h = float(input(""))
if (h < 0 or H < 0 or r <0):
	vol = -1
elif (h <r ):
	vol = (1./3) * pi * h**2 (3 * r - h)
elif (h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif (h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol = -1
	
print(round(vol, 3))
-- EXECUTION TIME:
0.176819
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1102/main.py", line 13, in <module>
    vol = (1./3) * pi * h**2 (3 * r - h)
TypeError: 'int' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:58:14) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import * 
H = float(input(""))
r = float(input(""))
h = float(input(""))
if (h < 0 or H < 0 or r <0):
	vol = -1
elif (h <r ):
	vol = (1./3) * pi * h**2 (3 * r - h)
elif (h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif (h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol = -1
	
print(round(vol, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    vol = (1./3) * pi * h**2 (3 * r - h)
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:59:08) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import * 
H = float(input(""))
r = float(input(""))
h = float(input(""))
if (h < 0 or H < 0 or r <0):
	vol = -1
elif (h <r ):
	vol = (1./3) * pi * h**2 (3 * r - h)
elif (h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif (h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol = 1
	
print(round(vol, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    vol = (1./3) * pi * h**2 (3 * r - h)
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 20:59:11) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import * 
H = float(input(""))
r = float(input(""))
h = float(input(""))
if (h < 0 or H < 0 or r <0):
	vol = -1
elif (h <r ):
	vol = (1./3) * pi * h**2 (3 * r - h)
elif (h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif (h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol = 1
	
print(round(vol, 3))
-- EXECUTION TIME:
0.143756
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1102/main.py", line 13, in <module>
    vol = (1./3) * pi * h**2 (3 * r - h)
TypeError: 'int' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:59:14) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import * 
H = float(input(""))
r = float(input(""))
h = float(input(""))
if (h < 0 or H < 0 or r <0):
	vol = -1
elif (h <r ):
	vol = (1./3) * pi * h**2 (3 * r - h)
elif (h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif (h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol = 1
	
print(round(vol, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    vol = (1./3) * pi * h**2 (3 * r - h)
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 21:01:17) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import * 
H = float(input(""))
h = float(input(""))
r = float(input(""))
print("Entradas: ", H, h, r)
if (h < 0 or H < 0 or r <0):
	vol = -1
elif (h <r ):
	vol = (1./3) * pi * h**2 (3 * r - h)
elif (h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif (h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol = 1
	
print(round(vol, 3))
-- OUTPUT:
Entradas:  11.3 5.7 2.3
81.987
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 21:01:44) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import * 
H = float(input(""))
r = float(input(""))
h = float(input(""))
print("Entradas: ", H, h, r)
if (h < 0 or H < 0 or r <0):
	vol = -1
elif (h <r ):
	vol = (1./3) * pi * h**2 (3 * r - h)
elif (h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif (h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol = 1
	
print(round(vol, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    vol = (1./3) * pi * h**2 (3 * r - h)
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 21:02:19) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import * 
H = float(input(""))
r = float(input(""))
h = float(input(""))
print("Entradas: ", H, h, r)
if (h < 0 or H < 0 or r <0):
	vol = -1
elif (h <r ):
	vol = (1./3) * pi * h**2 (3 * r - h)
elif (h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif (h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol = 1
	
print("Volume: ", round(vol, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    vol = (1./3) * pi * h**2 (3 * r - h)
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 21:02:31) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import * 
H = float(input(""))
r = float(input(""))
h = float(input(""))
print("Entradas: ", H, h, r)
if (h < 0 or H < 0 or r <0):
	vol = -1
elif (h <r ):
	vol = (1./3) * pi * h**2 (3 * r - h)
elif (h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif (h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol = 1
	
print("Volume: ", round(vol, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    vol = (1./3) * pi * h**2 (3 * r - h)
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 21:15:20) 
-- CODE:
from math import * 
H = float(input(""))
r = float(input(""))
h = float(input(""))
print("Entradas: ", H, h, r)
if (h < 0 or H < 0 or r <0):
	vol = -1
elif (h <r ):
	vol = (1./3) * pi * h**2 (3 * r - h)
elif (h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif (h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol = 1
	
print("Volume: ", round(vol, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    vol = (1./3) * pi * h**2 (3 * r - h)
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 21:15:44) 
-- CODE:
from math import * 
H = float(input(""))
h = float(input(""))
r = float(input(""))
print("Entradas: ", H, h, r)
if (h < 0 or H < 0 or r <0):
	vol = -1
elif (h <r ):
	vol = (1./3) * pi * h**2 (3 * r - h)
elif (h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif (h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol = 1
	
print("Volume: ", round(vol, 3))
-- OUTPUT:
Entradas:  11.3 5.7 2.3
Volume:  81.987
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 21:16:36) 
-- CODE:
from math import * 
H = int(input(""))
h = int(input(""))
r = int(input(""))
print("Entradas: ", H, h, r)
if (h < 0 or H < 0 or r <0):
	vol = -1
elif (h <r ):
	vol = (1./3) * pi * h**2 (3 * r - h)
elif (h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif (h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol = 1
	
print("Volume: ", round(vol, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    H = int(input(""))
ValueError: invalid literal for int() with base 10: '11.3'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 21:16:46) 
-- CODE:
from math import * 
H = int(input(""))
h = int(input(""))
r = int(input(""))
print("Entradas: ", H, h, r)
if (h < 0 or H < 0 or r <0):
	vol = -1
elif (h <r ):
	vol = (1./3) * pi * h**2 (3 * r - h)
elif (h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif (h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol = 1
	
print("Volume: ", round(vol, 3))
-- EXECUTION TIME:
0.133447
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1102/main.py", line 2, in <module>
    H = int(input(""))
ValueError: invalid literal for int() with base 10: '11.3'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 21:17:09) 
-- CODE:
from math import * 
H = int(input(""))
h = int(input(""))
r = int(input(""))
print("Entradas: ", H, h, r)
if (h < 0 or H < 0 or r <0):
	vol = -1
elif (h <r ):
	vol = (1./3) * pi * h**2 (3 * r - h)
elif (h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif (h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol = 1
	
print("Volume: ", round(vol, 3),"litros")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    H = int(input(""))
ValueError: invalid literal for int() with base 10: '11.3'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 21:17:25) 
-- CODE:
from math import * 
H = int(input(""))
h = int(input(""))
r = int(input(""))
print("Entradas: ", H, h, r)
if (h < 0 or H < 0 or r <0):
	vol = -1
elif (h <r ):
	vol = (1./3) * pi * h**2 (3 * r - h)
elif (h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif (h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol = 1
	
print("Volume: ", round(vol, 3),"litros")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    H = int(input(""))
ValueError: invalid literal for int() with base 10: '11.3'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 21:17:46) 
-- CODE:
from math import * 
H = int(input(""))
h = int(input(""))
r = int(input(""))
print("Entradas: ", H, h, r)
if (h < 0 or H < 0 or r <0):
	vol = -1
elif (h <r ):
	vol = (1./3) * pi * h**2 (3 * r - h)
elif (h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif (h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol = 1
	
print("Volume: ", round(vol, 3),"litros")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    H = int(input(""))
ValueError: invalid literal for int() with base 10: '11.3'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 21:18:10) 
-- CODE:
from math import * 
H = float(input(""))
h = float(input(""))
r = float(input(""))
print("Entradas: ", H, h, r)
if (h < 0 or H < 0 or r <0):
	vol = -1
elif (h <r ):
	vol = (1./3) * pi * h**2 (3 * r - h)
elif (h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif (h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol = 1
	
print("Volume: ", round(vol, 3),"litros")
-- OUTPUT:
Entradas:  11.3 5.7 2.3
Volume:  81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 21:19:42) 
-- CODE:
from math import * 
H = float(input(""))
h = float(input(""))
r = float(input(""))
print("Entradas: ", H,","h,"," r)
if (h < 0 or H < 0 or r <0):
	vol = -1
elif (h <r ):
	vol = (1./3) * pi * h**2 (3 * r - h)
elif (h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif (h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol = -1
	
print("Volume: ", round(vol, 3),"litros")
-- ERROR:
File "XXXX", line 5
    print("Entradas: ", H,","h,"," r)
                             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 21:19:56) 
-- CODE:
from math import * 
H = float(input(""))
h = float(input(""))
r = float(input(""))
print("Entradas: ", H,",",h,"," r)
if (h < 0 or H < 0 or r <0):
	vol = -1
elif (h <r ):
	vol = (1./3) * pi * h**2 (3 * r - h)
elif (h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif (h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol = -1
	
print("Volume: ", round(vol, 3),"litros")
-- ERROR:
File "XXXX", line 5
    print("Entradas: ", H,",",h,"," r)
                                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 21:20:04) 
-- CODE:
from math import * 
H = float(input(""))
h = float(input(""))
r = float(input(""))
print("Entradas: ", H,",",h,",", r)
if (h < 0 or H < 0 or r <0):
	vol = -1
elif (h <r ):
	vol = (1./3) * pi * h**2 (3 * r - h)
elif (h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif (h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol = -1
	
print("Volume: ", round(vol, 3),"litros")
-- OUTPUT:
Entradas:  11.3 , 5.7 , 2.3
Volume:  81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 21:21:36) 
-- CODE:
from math import * 
H = float(input(""))
r = float(input(""))
h = float(input(""))
print("Entradas: ", H,",",h,",", r)
if (h < 0 or H < 0 or r <0):
	vol = -1
elif (h <r ):
	vol = (1./3) * pi * h**2 (3 * r - h)
elif (h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif (h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol = -1
	
print("Volume: ", round(vol, 3),"litros")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    vol = (1./3) * pi * h**2 (3 * r - h)
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 21:22:13) 
-- CODE:
from math import * 
H = float(input(""))
h = float(input(""))
r = float(input(""))
print("Entradas: ", H,",",h,",", r)
if (h < 0 or H < 0 or r <0):
	vol = -1
elif (h <r ):
	vol = (1./3) * pi * h**2 (3 * r - h)
elif (h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif (h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol = -1
	
print("Volume: ", round(vol, 3),"litros")
-- OUTPUT:
Entradas:  11.3 , 5.7 , 2.3
Volume:  81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 21:54:39) 
-- CODE:
from math import * 
H = float(input(""))
h = float(input(""))
r = float(input(""))
print("Entradas: ", H,",",h,",", r)
if (h < 0 or H < 0 or r <0):
	vol = -1
elif (h <r ):
	vol = (1./3) * pi * h**2 (3 * r - h)
elif (h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif (h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol = -1
	
print("Volume: ", round(vol, 3),"litros")
-- OUTPUT:
Entradas:  11.3 , 5.7 , 2.3
Volume:  81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 21:59:10) 
-- CODE:
from math import * 
H = float(input(""))
h = float(input(""))
r = float(input(""))
print("Entradas: ", H,",",h,",", r)
if (h < 0 or H < 0 or r <0):
	vol = -1
elif (h <r ):
	vol = (1/3) * pi * h**2 (3 * r - h)
elif (h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif (h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol = -1
	
print("Volume: ", round(vol, 3),"litros")
-- OUTPUT:
Entradas:  11.3 , 5.7 , 2.3
Volume:  81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:01:11) 
-- CODE:
from math import * 
H = float(input(""))
h = float(input(""))
r = float(input(""))
print("Entradas: ", H,",",h,",", r)
if (h < 0 or H < 0 or r <0):
	vol = -1
elif (h <r ):
	vol = (1/3) * pi * h**2 (3 * r - h)
elif (h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif (h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol = -1
	
print("Volume: ", round(vol, 3),"litros")
-- OUTPUT:
Entradas:  11.3 , 5.7 , 2.3
Volume:  81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 15:50:17) 
-- CODE:
from math import * 
H = float(input(""))
h = float(input(""))
r = float(input(""))
print("Entradas: ", H,",",h,",", r)
if (h < 0 or H < 0 or r <0):
	vol = -1
elif (h <r ):
	vol = (1/3) * pi * h**2 (3 * r - h)
elif (h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif (h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol = -1
	
print("Volume: ", round(vol, 3),"litros")
-- EXECUTION TIME:
0.126919
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas:  11.3 , 5.7 , 2.3
Volume:  81.987 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas:  8.5 , 9.5 , 2.2
Volume:  -1 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas:  8.0 , 4.0 , 6.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 15:56:53) 
-- CODE:
from math import * 
H = float(input(""))
h = float(input(""))
r = float(input(""))
print("Entradas: ", H,",",h,",", r)
if (h < 0 or H < 0 or r <0):
	vol = -1
elif (h <r ):
	vol = (1/3) * pi * h**2 (3 * r - h)
elif (h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif (h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol = -1
	
print("Volume: ", round(vol, 3),"litros")
-- OUTPUT:
Entradas:  11.3 , 5.7 , 2.3
Volume:  81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
