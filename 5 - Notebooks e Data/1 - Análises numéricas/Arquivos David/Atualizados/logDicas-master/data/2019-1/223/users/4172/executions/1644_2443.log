== TEST (2019-04-09 16:19:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
R = float(input("raio: "))
x = float(input("altura: "))
N = int(input("numero: "))
V1=(4*pi*(R)**3)/3
v2=(pi*((x)**2)*(3*R-x))/3

if N==1 :
	mensagem = (V2)
else:
	mensagem = (v1)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    mensagem = (V2)
NameError: name 'V2' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 16:19:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
R = float(input("raio: "))
x = float(input("altura: "))
N = int(input("numero: "))
V1=(4*pi*(R)**3)/3
v2=(pi*((x)**2)*(3*R-x))/3

if N==1 :
	mensagem = (V2)
else:
	mensagem = (v1)
	
print(mensagem)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    mensagem = (V2)
NameError: name 'V2' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 16:19:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
R = float(input("raio: "))
x = float(input("altura: "))
N = int(input("numero: "))
V1=(4*pi*(R)**3)/3
v2=(pi*((x)**2)*(3*R-x))/3

if N==1 :
	mensagem = (V2)
else:
	mensagem = (V1)
	
print(mensagem)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    mensagem = (V2)
NameError: name 'V2' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 16:20:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
R = float(input("raio: "))
x = float(input("altura: "))
N = int(input("numero: "))
V1=(4*pi*(R)**3)/3
v2=(pi*((x)**2)*(3*R-x))/3

if N==1 :
	mensagem = (V2)
else:
	mensagem = (V1)
	
print(round(mensagem,4))


-- EXECUTION TIME:
0.208497
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/2443/main.py", line 12, in <module>
    mensagem = (V2)
NameError: name 'V2' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 16:20:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
R = float(input("raio: "))
x = float(input("altura: "))
N = int(input("numero: "))

V1=(4*pi*(R)**3)/3
v2=(pi*((x)**2)*(3*R-x))/3

if N==1 :
	mensagem = (V2)
else:
	mensagem = (V1)
	
print(round(mensagem,4))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    mensagem = (V2)
NameError: name 'V2' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 16:21:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
R = float(input("raio: "))
x = float(input("altura: "))
N = int(input("numero: "))

V1=4*pi*(R)**3/3
v2=(pi*((x)**2)*(3*R-x))/3

if N==1 :
	mensagem = (V2)
else:
	mensagem = (V1)
	
print(round(mensagem,4))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    mensagem = (V2)
NameError: name 'V2' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 16:22:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
R = float(input("raio: "))
x = float(input("altura: "))
N = int(input("numero: "))

V1=4*pi*(R)**3/3
v2=((pi*x**2)*(3*R-x))/3

if N==1 :
	mensagem = (V2)
else:
	mensagem = (V1)
	
print(round(mensagem,4))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    mensagem = (V2)
NameError: name 'V2' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 16:22:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
R = float(input("raio: "))
x = float(input("altura: "))
N = int(input("numero: "))

V1=4*pi*(R)**3/3
v2=(pi*x**2)*(3*R-x)/3

if N==1 :
	mensagem = (V2)
else:
	mensagem = (V1)
	
print(round(mensagem,4))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    mensagem = (V2)
NameError: name 'V2' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 16:22:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
R = float(input("raio: "))
x = float(input("altura: "))
N = int(input("numero: "))

V1=4*pi*(R)**3/3
v2=(pi*x**2)*(3*R-x)/3

if N==1 :
	mensagem = (V2)
else:
	mensagem = (V1)
	
print(round(mensagem,4))


-- EXECUTION TIME:
0.30438
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/2443/main.py", line 13, in <module>
    mensagem = (V2)
NameError: name 'V2' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 16:22:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
R = float(input("raio: "))
x = float(input("altura: "))
N = int(input("numero: "))

V1=4*pi*(R)**3/3
v2=(pi*x**2)*(3*R-x)/3

if N==1 :
	mensagem = (V2)
else:
	mensagem = (V1)
	
print(round(mensagem,4))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    mensagem = (V2)
NameError: name 'V2' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 16:24:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
R = float(input("raio: "))
x = float(input("altura: "))
N = int(input("numero: "))

V1=4*pi*(R)**3/3
v2=(pi*x**2)*((3*R)-x)/3

if N==1 :
	mensagem = (V2)
else:
	mensagem = (V1)
	
print(round(mensagem,4))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    mensagem = (V2)
NameError: name 'V2' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 16:27:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
R = float(input("raio: "))
x = float(input("altura: "))
N = int(input("numero: "))

V1=4*pi*(R)**3/3
v2=(pi*x**2)*((3*R)-x)/3
billie_eilish = (V1-V2)

if N==1 :
	mensagem = (billie_eilish )
else:
	mensagem = (V1)
	
print(round(mensagem,4))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    billie_eilish = (V1-V2)
NameError: name 'V2' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 16:27:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
R = float(input("raio: "))
x = float(input("altura: "))
N = int(input("numero: "))

V1=4*pi*(R)**3/3
v2=(pi*x**2)*((3*R)-x)/3
billie_eilish = (V1-V2)

if N==1 :
	mensagem = (billie_eilish )
else:
	mensagem = (V1)
	
print(round(mensagem,4))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    billie_eilish = (V1-V2)
NameError: name 'V2' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 16:27:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
R = float(input("raio: "))
x = float(input("altura: "))
N = int(input("numero: "))

V1=4*pi*(R)**3/3
v2=(pi*x**2)*((3*R)-x)/3
billie_eilish = (V1-v2)

if N==1 :
	mensagem = (billie_eilish )
else:
	mensagem = (V1)
	
print(round(mensagem,4))


-- OUTPUT:
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 16:27:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
R = float(input("raio: "))
x = float(input("altura: "))
N = int(input("numero: "))

V1=4*pi*(R)**3/3
v2=(pi*x**2)*((3*R)-x)/3
billie_eilish = (V1-v2)

if N==1 :
	mensagem = (billie_eilish )
else:
	mensagem = (V1)
	
print(round(mensagem,4))


-- EXECUTION TIME:
0.23035
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
170.5687
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
310.3391
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 16:27:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
R = float(input("raio: "))
x = float(input("altura: "))
N = int(input("numero: "))

V1=4*pi*(R)**3/3
v2=(pi*x**2)*((3*R)-x)/3
billie_eilish = (V1-v2)

if N==1 :
	mensagem = (billie_eilish )
else:
	mensagem = (V1)
	
print(round(mensagem,4))


-- OUTPUT:
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 16:29:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
R = float(input("raio: "))
x = float(input("altura: "))
N = int(input("numero: "))

V1=4*pi*(R)**3/3
v2=(pi*x**2)*((3*R)-x)/3
be = (V1-v2)

if N==1 :
	mensagem = (be )
else:
	mensagem = (V1)
	
print(round(mensagem,4))


-- OUTPUT:
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 16:29:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
R = float(input("raio: "))
x = float(input("altura: "))
N = int(input("numero: "))

V1=4*pi*(R)**3/3
v2=(pi*x**2)*((3*R)-x)/3
be = (V1-v2)

if N==1 :
	mensagem = (be )
else:
	mensagem = (V1)
	
print(round(mensagem,4))


-- OUTPUT:
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 16:29:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
R = float(input("raio: "))
x = float(input("altura: "))
N = int(input("numero: "))

V1=4*pi*(R)**3/3
v2=(pi*x**2)*((3*R)-x)/3
be = (V1-v2)

if N==1 :
	mensagem = (be )
else:
	mensagem = (V1)
	
print(round(mensagem,4))


-- EXECUTION TIME:
0.20073
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
170.5687
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
310.3391
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 16:30:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
R = float(input("raio: "))
x = float(input("altura: "))
N = int(input("numero: "))

V1=4*pi*(R)**3/3
v2=(pi*x**2)*((3*R)-x)/3
be = (V1-v2)

if N==1 :
	mensagem = (V1 )
else:
	mensagem = (be)
	
print(round(mensagem,4))


-- EXECUTION TIME:
0.141151
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
179.5944
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 16:30:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
R = float(input("raio: "))
x = float(input("altura: "))
N = int(input("numero: "))

V1=4*pi*(R)**3/3
v2=(pi*x**2)*((3*R)-x)/3
be = (V1-v2)

if N==1 :
	mensagem = (V1)
else:
	mensagem = (be)
	
print(round(mensagem,4))


-- EXECUTION TIME:
0.12331
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
179.5944
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 16:34:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
R = float(input("raio: "))
x = float(input("altura: "))
N = int(input("numero: "))

V1=4*pi*(R)**3/3
v2=(pi*x**2)*((3*R)-x)/3
be = (V1-v2)

if N==1 :
	mensagem = (v2)
else:
	mensagem = (be)
	
print(round(mensagem,4))


-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 16:34:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
R = float(input("raio: "))
x = float(input("altura: "))
N = int(input("numero: "))

V1=4*pi*(R)**3/3
v2=(pi*x**2)*((3*R)-x)/3
be = (V1-v2)

if N==2 :
	mensagem = (v2)
else:
	mensagem = (be)
	
print(round(mensagem,4))


-- EXECUTION TIME:
0.169308
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
170.5687
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
19.9983
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 16:34:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
R = float(input("raio: "))
x = float(input("altura: "))
N = int(input("numero: "))

V1=4*pi*(R)**3/3
v2=(pi*x**2)*((3*R)-x)/3
be = (V1-v2)

if N==2 :
	mensagem = (v2)
else:
	mensagem = (be)
	
print(round(mensagem,4))


-- OUTPUT:
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 16:34:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
R = float(input("raio: "))
x = float(input("altura: "))
N = int(input("numero: "))

V1=4*pi*(R)**3/3
v2=(pi*x**2)*((3*R)-x)/3
be = (V1-v2)

if N==2 :
	mensagem = (v2)
else:
	mensagem = (be)
	
print(round(mensagem,4))


-- EXECUTION TIME:
0.135786
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
170.5687
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
19.9983
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 16:34:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
R = float(input("raio: "))
x = float(input("altura: "))
N = int(input("numero: "))

V1=4*pi*(R)**3/3
v2=(pi*x**2)*((3*R)-x)/3
be = (V1-v2)

if N==2 :
	mensagem = (v2)
else:
	mensagem = (be)
	
print(round(mensagem,4))


-- OUTPUT:
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 16:34:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
R = float(input("raio: "))
x = float(input("altura: "))
N = int(input("numero: "))

V1=4*pi*(R)**3/3
v2=(pi*x**2)*((3*R)-x)/3
be = (V1-v2)

if N==2 :
	mensagem = (v2)
else:
	mensagem = (be)
	
print(round(mensagem,4))


-- OUTPUT:
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 16:34:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
R = float(input("raio: "))
x = float(input("altura: "))
N = int(input("numero: "))

V1=4*pi*(R)**3/3
v2=(pi*x**2)*((3*R)-x)/3
be = (V1-v2)

if N==2 :
	mensagem = (v2)
else:
	mensagem = (be)
	
print(round(mensagem,4))


-- EXECUTION TIME:
0.127156
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
170.5687
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
raio: altura: numero: 19.9983
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 16:34:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
R = float(input("raio: "))
x = float(input("altura: "))
N = int(input("numero: "))

V1=4*pi*(R)**3/3
v2=(pi*x**2)*((3*R)-x)/3
be = (V1-v2)

if N==2 :
	mensagem = (v2)
else:
	mensagem = (be)
	
print(round(mensagem,4))


-- OUTPUT:
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 16:34:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
R = float(input("raio: "))
x = float(input("altura: "))
N = int(input("numero: "))

V1=4*pi*(R)**3/3
v2=(pi*x**2)*((3*R)-x)/3
be = (V1-v2)

if N==2 :
	mensagem = (v2)
else:
	mensagem = (be)
	
print(round(mensagem,4))


-- EXECUTION TIME:
0.148794
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
raio: altura: numero: 19.9983
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
raio: altura: numero: 170.5687
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 16:34:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
R = float(input("raio: "))
x = float(input("altura: "))
N = int(input("numero: "))

V1=4*pi*(R)**3/3
v2=(pi*x**2)*((3*R)-x)/3
be = (V1-v2)

if N==2 :
	mensagem = (v2)
else:
	mensagem = (be)
	
print(round(mensagem,4))


-- EXECUTION TIME:
0.135138
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
raio: altura: numero: 170.5687
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
raio: altura: numero: 19.9983
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 16:34:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
R = float(input("raio: "))
x = float(input("altura: "))
N = int(input("numero: "))

V1=4*pi*(R)**3/3
v2=(pi*x**2)*((3*R)-x)/3
be = (V1-v2)

if N==2 :
	mensagem = (v2)
else:
	mensagem = (be)
	
print(round(mensagem,4))


-- OUTPUT:
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 16:34:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
R = float(input("raio: "))
x = float(input("altura: "))
N = int(input("numero: "))

V1=4*pi*(R)**3/3
v2=(pi*x**2)*((3*R)-x)/3
be = (V1-v2)

if N==2 :
	mensagem = (v2)
else:
	mensagem = (be)
	
print(round(mensagem,4))


-- OUTPUT:
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 16:34:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
R = float(input("raio: "))
x = float(input("altura: "))
N = int(input("numero: "))

V1=4*pi*(R)**3/3
v2=(pi*x**2)*((3*R)-x)/3
be = (V1-v2)

if N==2 :
	mensagem = (v2)
else:
	mensagem = (be)
	
print(round(mensagem,4))


-- OUTPUT:
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 16:34:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
R = float(input("raio: "))
x = float(input("altura: "))
N = int(input("numero: "))

V1=4*pi*(R)**3/3
v2=(pi*x**2)*((3*R)-x)/3
be = (V1-v2)

if N==2 :
	mensagem = (v2)
else:
	mensagem = (be)
	
print(round(mensagem,4))


-- EXECUTION TIME:
0.202857
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
170.5687
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
raio: altura: numero: 170.5687
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 16:34:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
R = float(input("raio: "))
x = float(input("altura: "))
N = int(input("numero: "))

V1=4*pi*(R)**3/3
v2=(pi*x**2)*((3*R)-x)/3
be = (V1-v2)

if N==2 :
	mensagem = (v2)
else:
	mensagem = (be)
	
print(round(mensagem,4))


-- EXECUTION TIME:
0.119292
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
170.5687
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
raio: altura: numero: 170.5687
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 16:34:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
R = float(input("raio: "))
x = float(input("altura: "))
N = int(input("numero: "))

V1=4*pi*(R)**3/3
v2=(pi*x**2)*((3*R)-x)/3
be = (V1-v2)

if N==2 :
	mensagem = (v2)
else:
	mensagem = (be)
	
print(round(mensagem,4))


-- EXECUTION TIME:
0.217991
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
raio: altura: numero: 170.5687
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
raio: altura: numero: 19.9983
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 16:34:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
R = float(input("raio: "))
x = float(input("altura: "))
N = int(input("numero: "))

V1=4*pi*(R)**3/3
v2=(pi*x**2)*((3*R)-x)/3
be = (V1-v2)

if N==1 :
	mensagem = (v2)
else:
	mensagem = (be)
	
print(round(mensagem,4))


-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 16:34:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
R = float(input("raio: "))
x = float(input("altura: "))
N = int(input("numero: "))

V1=4*pi*(R)**3/3
v2=(pi*x**2)*((3*R)-x)/3
be = (V1-v2)

if N==1 :
	mensagem = (v2)
else:
	mensagem = (be)
	
print(round(mensagem,4))


-- EXECUTION TIME:
0.198628
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
