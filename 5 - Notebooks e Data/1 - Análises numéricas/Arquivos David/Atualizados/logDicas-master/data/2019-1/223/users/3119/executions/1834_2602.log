== TEST (2019-06-18 16:46:52) 
-- CODE:
from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
vet = array(eval(input("Vetor: ")))

# Vetor de constantes (informado no enunciado)
bac = array([2, 1],[1, 2],[2, 3])


# Resolucao do sistema de equacoes lineares
qtd = solve(vet,bac)


# Imprime o preco de cada fruta
print("estafilococo: ", round(qtd[0], 1))
print("salmonela: ", round(qtd[1], 1))
print("coli: ", round(qtd[2], 1))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 16:47:25) 
-- CODE:
from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
vet = array(eval(input("Vetor: ")))

# Vetor de constantes (informado no enunciado)
bac = array([2, 1],[1, 2],[2, 3])
bac = bac.T

# Resolucao do sistema de equacoes lineares
qtd = solve(vet,bac)


# Imprime o preco de cada fruta
print("estafilococo: ", round(qtd[0], 1))
print("salmonela: ", round(qtd[1], 1))
print("coli: ", round(qtd[2], 1))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 16:48:27) 
-- CODE:
from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
vet = array(eval(input("Vetor: ")))

# Vetor de constantes (informado no enunciado)
bac = array([[2, 1],[1, 2],[2, 3]])
bac = bac.T

# Resolucao do sistema de equacoes lineares
qtd = solve(vet,bac)


# Imprime o preco de cada fruta
print("estafilococo: ", round(qtd[0], 1))
print("salmonela: ", round(qtd[1], 1))
print("coli: ", round(qtd[2], 1))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 16:48:38) 
-- CODE:
from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
vet = array(eval(input("Vetor: ")))

# Vetor de constantes (informado no enunciado)
bac = array([[2, 1],[1, 2],[2, 3]])


# Resolucao do sistema de equacoes lineares
qtd = solve(vet,bac)


# Imprime o preco de cada fruta
print("estafilococo: ", round(qtd[0], 1))
print("salmonela: ", round(qtd[1], 1))
print("coli: ", round(qtd[2], 1))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 16:51:26) 
-- CODE:
from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
vet = array(eval(input("Vetor: ")))

# Vetor de constantes (informado no enunciado)
bac = array([[2, 1, 4],[1, 2, 0],[2, 3, 2]])


# Resolucao do sistema de equacoes lineares
qtd = solve(vet,bac)


# Imprime o preco de cada fruta
print("estafilococo: ", round(qtd[0], 1))
print("salmonela: ", round(qtd[1], 1))
print("coli: ", round(qtd[2], 1))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 16:52:52) 
-- CODE:
from numpy import *
from numpy.linalg import *

bac = array([[2, 1, 4],[1, 2, 0],[2, 3, 2]])


vet = array(eval(input("Vetor: ")))
vet = vet.T


qtd = dot(bac,vet)


# Imprime o preco de cada fruta
print("estafilococo: ", round(qtd[0], 1))
print("salmonela: ", round(qtd[1], 1))
print("coli: ", round(qtd[2], 1))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 16:52:57) 
-- CODE:
from numpy import *
from numpy.linalg import *

bac = array([[2, 1, 4],[1, 2, 0],[2, 3, 2]])


vet = array(eval(input("Vetor: ")))
vet = vet.T


qtd = dot(bac,vet)


# Imprime o preco de cada fruta
print("estafilococo: ", round(qtd[0], 1))
print("salmonela: ", round(qtd[1], 1))
print("coli: ", round(qtd[2], 1))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 16:53:18) 
-- CODE:
from numpy import *
from numpy.linalg import *

bac = array([[2, 1, 4],[1, 2, 0],[2, 3, 2]])


vet = array(eval(input("Vetor: ")))
vet = vet.T


qtd = solve(bac,vet)


# Imprime o preco de cada fruta
print("estafilococo: ", round(qtd[0], 1))
print("salmonela: ", round(qtd[1], 1))
print("coli: ", round(qtd[2], 1))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 16:55:24) 
-- CODE:
from numpy import *
from numpy.linalg import *

bac = array([[2, 1, 4],[1, 2, 0],[2, 3, 2]])


vet = array(eval(input("Vetor: ")))
vet = vet.T


qtd = solve(bac,vet)


# Imprime o preco de cada fruta
print("estafilococo: ", round(qtd[0], 1))
print("salmonela: ", round(qtd[1], 1))
print("coli: ", round(qtd[2], 1))

if(qtd[0] == min(qtd)):
	print("estafilococo")
elif(qtd[1] == min(qtd)):
	print("salmonela")
else:
	print("coli")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-18 16:55:32) 
-- CODE:
from numpy import *
from numpy.linalg import *

bac = array([[2, 1, 4],[1, 2, 0],[2, 3, 2]])


vet = array(eval(input("Vetor: ")))
vet = vet.T


qtd = solve(bac,vet)


# Imprime o preco de cada fruta
print("estafilococo: ", round(qtd[0], 1))
print("salmonela: ", round(qtd[1], 1))
print("coli: ", round(qtd[2], 1))

if(qtd[0] == min(qtd)):
	print("estafilococo")
elif(qtd[1] == min(qtd)):
	print("salmonela")
else:
	print("coli")
-- EXECUTION TIME:
1.11515
-- TEST CASE 1:
---- input:
[3955.25,5652.36,8562.22]
---- correct output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
---- user output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
-- TEST CASE 2:
---- input:
[2095.52,1855.75,11295.21]

---- correct output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo

---- user output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo
-- TEST CASE 3:
---- input:
[8596.14,3212.68,2652.11]
---- correct output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela

---- user output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-18 17:36:00) 
-- CODE:
from numpy import *
from numpy.linalg import *

bac = array([[2, 1, 4],[1, 2, 0],[2, 3, 2]])

vet = array(eval(input("Vetor: ")))
vet = vet.T

qtd = solve(bac,vet)

print("estafilococo: ", round(qtd[0], 1))
print("salmonela: ", round(qtd[1], 1))
print("coli: ", round(qtd[2], 1))

if(qtd[0] == min(qtd)):
	print("estafilococo")
elif(qtd[1] == min(qtd)):
	print("salmonela")
else:
	print("coli")
-- EXECUTION TIME:
1.05975
-- TEST CASE 1:
---- input:
[3955.25,5652.36,8562.22]
---- correct output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
---- user output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
-- TEST CASE 2:
---- input:
[2095.52,1855.75,11295.21]

---- correct output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo

---- user output:
Vetor: estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo
-- TEST CASE 3:
---- input:
[8596.14,3212.68,2652.11]
---- correct output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela

---- user output:
Vetor: estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 17:36:14) 
-- CODE:
from numpy import *
from numpy.linalg import *

bac = array([[2, 1, 4],[1, 2, 0],[2, 3, 2]])


vet = array(eval(input("Vetor: ")))
vet = vet.T


qtd = solve(bac,vet)


print("estafilococo: ", round(qtd[0], 1))
print("salmonela: ", round(qtd[1], 1))
print("coli: ", round(qtd[2], 1))

if(qtd[0] == min(qtd)):
	print("estafilococo")
elif(qtd[1] == min(qtd)):
	print("salmonela")
else:
	print("coli")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-18 17:36:28) 
-- CODE:
from numpy import *
from numpy.linalg import *

bac = array([[2, 1, 4],[1, 2, 0],[2, 3, 2]])


vet = array(eval(input("Vetor: ")))
vet = vet.T


qtd = solve(bac,vet)


print("estafilococo: ", round(qtd[0], 1))
print("salmonela: ", round(qtd[1], 1))
print("coli: ", round(qtd[2], 1))

if(qtd[0] == min(qtd)):
	print("estafilococo")
elif(qtd[1] == min(qtd)):
	print("salmonela")
else:
	print("coli")
-- EXECUTION TIME:
1.09904
-- TEST CASE 1:
---- input:
[3955.25,5652.36,8562.22]
---- correct output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
---- user output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
-- TEST CASE 2:
---- input:
[2095.52,1855.75,11295.21]

---- correct output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo

---- user output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo
-- TEST CASE 3:
---- input:
[8596.14,3212.68,2652.11]
---- correct output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela

---- user output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-18 17:36:54) 
-- CODE:
from numpy import *
from numpy.linalg import *

bac = array([[2, 1, 4],[1, 2, 0],[2, 3, 2]])


vet = array(eval(input("Vetor: ")))
vet = vet.T


qtd = dot(inv(bac),vet)


print("estafilococo: ", round(qtd[0], 1))
print("salmonela: ", round(qtd[1], 1))
print("coli: ", round(qtd[2], 1))

if(qtd[0] == min(qtd)):
	print("estafilococo")
elif(qtd[1] == min(qtd)):
	print("salmonela")
else:
	print("coli")
-- EXECUTION TIME:
0.911689
-- TEST CASE 1:
---- input:
[3955.25,5652.36,8562.22]
---- correct output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
---- user output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
-- TEST CASE 2:
---- input:
[2095.52,1855.75,11295.21]

---- correct output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo

---- user output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo
-- TEST CASE 3:
---- input:
[8596.14,3212.68,2652.11]
---- correct output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela

---- user output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 17:36:57) 
-- CODE:
from numpy import *
from numpy.linalg import *

bac = array([[2, 1, 4],[1, 2, 0],[2, 3, 2]])


vet = array(eval(input("Vetor: ")))
vet = vet.T


qtd = dot(inv(bac),vet)


print("estafilococo: ", round(qtd[0], 1))
print("salmonela: ", round(qtd[1], 1))
print("coli: ", round(qtd[2], 1))

if(qtd[0] == min(qtd)):
	print("estafilococo")
elif(qtd[1] == min(qtd)):
	print("salmonela")
else:
	print("coli")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-18 17:37:04) 
-- CODE:
from numpy import *
from numpy.linalg import *

bac = array([[2, 1, 4],[1, 2, 0],[2, 3, 2]])


vet = array(eval(input("Vetor: ")))
vet = vet.T


qtd = dot(inv(bac),vet)


print("estafilococo: ", round(qtd[0], 1))
print("salmonela: ", round(qtd[1], 1))
print("coli: ", round(qtd[2], 1))

if(qtd[0] == min(qtd)):
	print("estafilococo")
elif(qtd[1] == min(qtd)):
	print("salmonela")
else:
	print("coli")
-- EXECUTION TIME:
0.950324
-- TEST CASE 1:
---- input:
[3955.25,5652.36,8562.22]
---- correct output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
---- user output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
-- TEST CASE 2:
---- input:
[2095.52,1855.75,11295.21]

---- correct output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo

---- user output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo
-- TEST CASE 3:
---- input:
[8596.14,3212.68,2652.11]
---- correct output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela

---- user output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 16:53:33) 
-- CODE:
from numpy import *
from numpy.linalg import *

bac = array([[2, 1, 4],[1, 2, 0],[2, 3, 2]])


vet = array(eval(input("Vetor: ")))
vet = vet.T


qtd = dot(inv(bac),vet)


print("estafilococo: ", round(qtd[0], 1))
print("salmonela: ", round(qtd[1], 1))
print("coli: ", round(qtd[2], 1))

if(qtd[0] == min(qtd)):
	print("estafilococo")
elif(qtd[1] == min(qtd)):
	print("salmonela")
else:
	print("coli")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
