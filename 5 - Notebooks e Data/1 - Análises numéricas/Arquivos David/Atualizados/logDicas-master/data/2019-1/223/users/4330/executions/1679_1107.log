== TEST (2019-04-28 13:16:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

X = int(input("Presente: "))
y = int(input("Futuro: "))

if (( x != 0) and ( x !== 1 ) and ( x != 2 ) and ( x != 3 ) and ( x != 4 ) and ( x != 5 ) and ( x != 6 )):
	print(" A entrada",x,"eh invalida")
-- ERROR:
File "XXXX", line 8
    if (( x != 0) and ( x !== 1 ) and ( x != 2 ) and ( x != 3 ) and ( x != 4 ) and ( x != 5 ) and ( x != 6 )):
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:17:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

X = int(input("Presente: "))
y = int(input("Futuro: "))

if (( x != 0 ) and ( x != 1 ) and ( x != 2 ) and ( x != 3 ) and ( x != 4 ) and ( x != 5 ) and ( x != 6 )):
	print(" A entrada",x,"eh invalida")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    if (( x != 0 ) and ( x != 1 ) and ( x != 2 ) and ( x != 3 ) and ( x != 4 ) and ( x != 5 ) and ( x != 6 )):
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:17:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

X = int(input("Presente: "))
y = int(input("Futuro: "))

if (( x != 0 ) and ( x != 1 ) and ( x != 2 ) and ( x != 3 ) and ( x != 4 ) and ( x != 5 ) and ( x != 6 )):
	print(" A entrada",x,"eh invalida")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    if (( x != 0 ) and ( x != 1 ) and ( x != 2 ) and ( x != 3 ) and ( x != 4 ) and ( x != 5 ) and ( x != 6 )):
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:18:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

X = int(input("Presente: "))
y = int(input("Futuro: "))

if (( x != 0 ) and ( x != 1 ) and ( x != 2 ) and ( x != 3 ) and ( x != 4 ) and ( x != 5 ) and ( x != 6 )):
	print(" A entrada",x,"eh invalida")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    if (( x != 0 ) and ( x != 1 ) and ( x != 2 ) and ( x != 3 ) and ( x != 4 ) and ( x != 5 ) and ( x != 6 )):
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:18:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

X = int(input("Presente: "))
y = int(input("Futuro: "))

if (( x != 0 ) and ( x != 1 ) and ( x != 2 ) and ( x != 3 ) and ( x != 4 ) and ( x != 5 ) and ( x != 6 )):
	print(" A entrada",x,"eh invalida")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    if (( x != 0 ) and ( x != 1 ) and ( x != 2 ) and ( x != 3 ) and ( x != 4 ) and ( x != 5 ) and ( x != 6 )):
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:19:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

X = int(input("Presente: "))
y = int(input("Futuro: "))

if (( x != 0 ) and ( x != 1 ) and ( x != 2 ) and ( x != 3 ) and ( x != 4 ) and ( x != 5 ) and ( x != 6 )):
	print("A entrada",x,"eh invalida")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    if (( x != 0 ) and ( x != 1 ) and ( x != 2 ) and ( x != 3 ) and ( x != 4 ) and ( x != 5 ) and ( x != 6 )):
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:19:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

X = int(input("Presente: "))
y = int(input("Futuro: "))

if (( x != 0 ) and ( x != 1 ) and ( x != 2 ) and ( x != 3 ) and ( x != 4 ) and ( x != 5 ) and ( x != 6 )):
	print("A entrada",x,"eh invalida")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    if (( x != 0 ) and ( x != 1 ) and ( x != 2 ) and ( x != 3 ) and ( x != 4 ) and ( x != 5 ) and ( x != 6 )):
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:20:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

X = int(input("Presente: "))
y = int(input("Futuro: "))

if (( x != 0 ) or ( x != 1 ) or ( x != 2 ) or ( x != 3 ) or ( x != 4 ) or ( x != 5 ) or ( x != 6 )):
	print("A entrada",x,"eh invalida")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    if (( x != 0 ) or ( x != 1 ) or ( x != 2 ) or ( x != 3 ) or ( x != 4 ) or ( x != 5 ) or ( x != 6 )):
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 13:20:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

X = int(input("Presente: "))
y = int(input("Futuro: "))

if (( x != 0 ) or ( x != 1 ) or ( x != 2 ) or ( x != 3 ) or ( x != 4 ) or ( x != 5 ) or ( x != 6 )):
	print("A entrada",x,"eh invalida")
-- EXECUTION TIME:
0.150903
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1107/main.py", line 8, in <module>
    if (( x != 0 ) or ( x != 1 ) or ( x != 2 ) or ( x != 3 ) or ( x != 4 ) or ( x != 5 ) or ( x != 6 )):
NameError: name 'x' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:20:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

X = int(input("Presente: "))
y = int(input("Futuro: "))

if (( x != 0 ) or ( x != 1 ) or ( x != 2 ) or ( x != 3 ) or ( x != 4 ) or ( x != 5 ) or ( x != 6 )):
	print("A entrada",x,"eh invalida")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    if (( x != 0 ) or ( x != 1 ) or ( x != 2 ) or ( x != 3 ) or ( x != 4 ) or ( x != 5 ) or ( x != 6 )):
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:20:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

X = int(input("Presente: "))
y = int(input("Futuro: "))

if (( x != 0 ) or ( x != 1 ) or ( x != 2 ) or ( x != 3 ) or ( x != 4 ) or ( x != 5 ) or ( x != 6 )):
	print("A entrada",x,"eh invalida")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    if (( x != 0 ) or ( x != 1 ) or ( x != 2 ) or ( x != 3 ) or ( x != 4 ) or ( x != 5 ) or ( x != 6 )):
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:20:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

X = int(input("Presente: "))
y = int(input("Futuro: "))

if (( x != 0 ) or ( x != 1 ) or ( x != 2 ) or ( x != 3 ) or ( x != 4 ) or ( x != 5 ) or ( x != 6 )):
	print("A entrada",x,"eh invalida")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    if (( x != 0 ) or ( x != 1 ) or ( x != 2 ) or ( x != 3 ) or ( x != 4 ) or ( x != 5 ) or ( x != 6 )):
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:23:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

X = int(input("Presente: "))
y = int(input("Futuro: "))

if (( x != 0 ) and ( x != 1 ) and ( x != 2 ) and ( x != 3 ) and ( x != 4 ) and ( x != 5 ) and ( x != 6 )):
	print("A entrada",x,"eh invalida")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    if (( x != 0 ) and ( x != 1 ) and ( x != 2 ) and ( x != 3 ) and ( x != 4 ) and ( x != 5 ) and ( x != 6 )):
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:23:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

X = int(input("Presente: "))
y = int(input("Futuro: "))

if (( x != 0 ) and ( x != 1 ) and ( x != 2 ) and ( x != 3 ) and ( x != 4 ) and ( x != 5 ) and ( x != 6 )):
	print("A entrada",x,"eh invalida")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    if (( x != 0 ) and ( x != 1 ) and ( x != 2 ) and ( x != 3 ) and ( x != 4 ) and ( x != 5 ) and ( x != 6 )):
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:24:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = int(input("Presente: "))
y = int(input("Futuro: "))

if (( x != 0 ) and ( x != 1 ) and ( x != 2 ) and ( x != 3 ) and ( x != 4 ) and ( x != 5 ) and ( x != 6 )):
	print("A entrada",x,"eh invalida")
-- OUTPUT:
A entrada 9 eh invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 13:24:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = int(input("Presente: "))
y = int(input("Futuro: "))

if (( x != 0 ) and ( x != 1 ) and ( x != 2 ) and ( x != 3 ) and ( x != 4 ) and ( x != 5 ) and ( x != 6 )):
	print("A entrada",x,"eh invalida")
-- EXECUTION TIME:
0.135113
-- TEST CASE 1:
---- input:
9
9

---- correct output:
A entrada 9 eh invalida
---- user output:
A entrada 9 eh invalida
-- TEST CASE 2:
---- input:
6
1024
---- correct output:
Hoje eh sabado e o dia futuro eh segunda
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:24:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = int(input("Presente: "))
y = int(input("Futuro: "))

if (( x != 0 ) and ( x != 1 ) and ( x != 2 ) and ( x != 3 ) and ( x != 4 ) and ( x != 5 ) and ( x != 6 )):
	print("A entrada",x,"eh invalida")
-- OUTPUT:
A entrada 9 eh invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:29:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = int(input("Presente: "))
y = int(input("Futuro: "))

if (( x != 0 ) and ( x != 1 ) and ( x != 2 ) and ( x != 3 ) and ( x != 4 ) and ( x != 5 ) and ( x != 6 )):
	print("A entrada",x,"eh invalida")
elif 
-- ERROR:
File "XXXX", line 10
    elif 
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 13:29:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = int(input("Presente: "))
y = int(input("Futuro: "))

if (( x != 0 ) and ( x != 1 ) and ( x != 2 ) and ( x != 3 ) and ( x != 4 ) and ( x != 5 ) and ( x != 6 )):
	print("A entrada",x,"eh invalida")
-- EXECUTION TIME:
0.128863
-- TEST CASE 1:
---- input:
9
9

---- correct output:
A entrada 9 eh invalida
---- user output:
A entrada 9 eh invalida
-- TEST CASE 2:
---- input:
6
1024
---- correct output:
Hoje eh sabado e o dia futuro eh segunda
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:29:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = int(input("Presente: "))
y = int(input("Futuro: "))

if (( x != 0 ) and ( x != 1 ) and ( x != 2 ) and ( x != 3 ) and ( x != 4 ) and ( x != 5 ) and ( x != 6 )):
	print("A entrada",x,"eh invalida")
-- OUTPUT:
A entrada 9 eh invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 16:47:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = int(input("Presente: "))
y = int(input("Futuro: "))

if (( x != 0 ) and ( x != 1 ) and ( x != 2 ) and ( x != 3 ) and ( x != 4 ) and ( x != 5 ) and ( x != 6 )):
	print("A entrada",x,"eh invalida")

-- OUTPUT:
A entrada 9 eh invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 02:12:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

hoje = int(input("sendo domingo igual 0, digite um numere para hoje:"))
futuro = int(input("digite um numero para dias futuros:"))

fut = (futuro + hoje) % 7

if(hoje != 0 and hoje != 1 and hoje != 2 and hoje != 3 and hoje != 4 and hoje != 5 and hoje != 6):
	print("A entrada",hoje,"eh invalida")

elif(hoje == 0):
	dia = "domingo"
	if (fut == 0):
		fut = "domingo"
	elif fut == 1:
		fut = "segunda"
	elif(fut == 2):
		fut = "terca"
	elif(fut == 3):
		fut = "quarta"
	elif(fut == 4):
		fut = "quinta"
	elif(fut == 5):
		fut = "sexta"
	elif(fut == 6):
		fut = "sabado"
		
elif(hoje == 1):
	dia = "segunda"
	if (fut == 0):
		fut = "domingo"
	elif fut == 1:
		fut = "segunda"
	elif(fut == 2):
		fut = "terca"
	elif(fut == 3):
		fut = "quarta"
	elif(fut == 4):
		fut = "quinta"
	elif(fut == 5):
		fut = "sexta"
	elif(fut == 6):
		fut = "sabado"
	
elif(hoje == 2):
	dia = "terca"
	if (fut == 0):
		fut = "domingo"
	elif fut == 1:
		fut = "segunda"
	elif(fut == 2):
		fut = "terca"
	elif(fut == 3):
		fut = "quarta"
	elif(fut == 4):
		fut = "quinta"
	elif(fut == 5):
		fut = "sexta"
	elif(fut == 6):
		fut = "sabado"
		
elif(hoje == 3):
	dia = "quarta"
	if (fut == 0):
		fut = "domingo"
	elif fut == 1:
		fut = "segunda"
	elif(fut == 2):
		fut = "terca"
	elif(fut == 3):
		fut = "quarta"
	elif(fut == 4):
		fut = "quinta"
	elif(fut == 5):
		fut = "sexta"
	elif(fut == 6):
		fut = "sabado"
	
elif(hoje == 4):
	dia = "quinta"
	if (fut == 0):
		fut = "domingo"
	elif fut == 1:
		fut = "segunda"
	elif(fut == 2):
		fut = "terca"
	elif(fut == 3):
		fut = "quarta"
	elif(fut == 4):
		fut = "quinta"
	elif(fut == 5):
		fut = "sexta"
	elif(fut == 6):
		fut = "sabado"
		
elif(hoje == 5):
	dia = "sexta"
	if (fut == 0):
		fut = "domingo"
	elif fut == 1:
		fut = "segunda"
	elif(fut == 2):
		fut = "terca"
	elif(fut == 3):
		fut = "quarta"
	elif(fut == 4):
		fut = "quinta"
	elif(fut == 5):
		fut = "sexta"
	elif(fut == 6):
		fut = "sabado"
		
elif(hoje == 6):
	dia = "sabado"
	if (fut == 0):
		fut = "domingo"
	elif fut == 1:
		fut = "segunda"
	elif(fut == 2):
		fut = "terca"
	elif(fut == 3):
		fut = "quarta"
	elif(fut == 4):
		fut = "quinta"
	elif(fut == 5):
		fut = "sexta"
	elif(fut == 6):
		fut = "sabado"
	print("Hoje eh",dia,"e o dia futuro eh",fut)

-- EXECUTION TIME:
0.201752
-- TEST CASE 1:
---- input:
9
9

---- correct output:
A entrada 9 eh invalida
---- user output:
A entrada 9 eh invalida
-- TEST CASE 2:
---- input:
6
1024
---- correct output:
Hoje eh sabado e o dia futuro eh segunda
---- user output:
Hoje eh sabado e o dia futuro eh segunda
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
