== TEST (2019-04-30 04:12:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x=<b):
	print(x,"pertence ao intervalo:",a,b)
	elif(a>=x and x=<b):
		print(x,"nao pertence ao intervalo:",a,b)
	elif(b<=a):
else:
print("Entradas a e b invalidas")
		
-- ERROR:
File "XXXX", line 7
    if(a<=x and x=<b):
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:13:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,b)
	elif(a>=x and x=<b):
		print(x,"nao pertence ao intervalo:",a,b)
	elif(b<=a):
else:
print("Entradas a e b invalidas")
		
-- ERROR:
File "XXXX", line 9
    elif(a>=x and x=<b):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:13:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,b)
	elif(a=>x and x<=b):
		print(x,"nao pertence ao intervalo:",a,b)
	elif(b<=a):
else:
print("Entradas a e b invalidas")
		
-- ERROR:
File "XXXX", line 9
    elif(a=>x and x<=b):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:13:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,b)
elif(a=>x and x<=b):
		print(x,"nao pertence ao intervalo:",a,b)
elif(b<=a):
else:
print("Entradas a e b invalidas")
		
-- ERROR:
File "XXXX", line 9
    elif(a=>x and x<=b):
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:13:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,b)
elif(a=>x and x<=b):
	print(x,"nao pertence ao intervalo:",a,b)
elif(b<=a):
else:
print("Entradas a e b invalidas")
		
-- ERROR:
File "XXXX", line 9
    elif(a=>x and x<=b):
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:14:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,b)
elif(a==>x and x<==b):
	print(x,"nao pertence ao intervalo:",a,b)
elif(b<=a):
else:
print("Entradas a e b invalidas")
		
-- ERROR:
File "XXXX", line 9
    elif(a==>x and x<==b):
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:14:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,b)
	elif(a=>x and x<=b):
		print(x,"nao pertence ao intervalo:",a,b)
elif(b<=a):
else:
print("Entradas a e b invalidas")
		
-- ERROR:
File "XXXX", line 9
    elif(a=>x and x<=b):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:15:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,b)
elif(a=>x and x<=b):
		print(x,"nao pertence ao intervalo:",a,b)
elif(b<=a):
else:
print("Entradas a e b invalidas")
		
-- ERROR:
File "XXXX", line 9
    elif(a=>x and x<=b):
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:15:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,b)
elif(a<=x and x<=b):
		print(x,"nao pertence ao intervalo:",a,b)
elif(b<=a):
else:
print("Entradas a e b invalidas")
		
-- ERROR:
File "XXXX", line 12
    else:
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:16:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,b)
elif(a<=x and x<=b):
		print(x,"nao pertence ao intervalo:",a,b)
elif(b<=a):
print("Entradas a e b invalidas")
		
-- ERROR:
File "XXXX", line 12
    print("Entradas a e b invalidas")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:16:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,b)
elif(a<=x and x<=b):
		print(x,"nao pertence ao intervalo:",a,b)
elif(b<=a):
	print("Entradas a e b invalidas")
		
-- ERROR:
File "XXXX", line 12
    print("Entradas a e b invalidas")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:17:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,b)
elif(a<=x and x<=b):
		print(x,"nao pertence ao intervalo:",a,b,)
elif(b<=a):
	print("Entradas a e b invalidas")
		
-- ERROR:
File "XXXX", line 12
    print("Entradas a e b invalidas")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:17:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,b)
elif(a<=x and x<=b):
		print(x,"nao pertence ao intervalo:",,a,b)
elif(b<=a):
	print("Entradas a e b invalidas")
		
-- ERROR:
File "XXXX", line 10
    print(x,"nao pertence ao intervalo:",,a,b)
                                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:17:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,b)
elif(a<=x and x<=b):
		print(x,"nao pertence ao intervalo:",a,b)
elif(b<=a):
	print("Entradas a e b invalidas")
		
-- ERROR:
File "XXXX", line 10
    print(x,"nao pertence ao intervalo:",,a,b)
                                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:18:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,b)
elif(a<=x and x<=b):
		print(x,"nao pertence ao intervalo:",a,,b,)
elif(b<=a):
	print("Entradas a e b invalidas")
		
-- ERROR:
File "XXXX", line 10
    print(x,"nao pertence ao intervalo:",a,,b,)
                                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:18:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,b)
elif(a<=x and x<=b):
		print(x,"nao pertence ao intervalo:",a,b,)
elif(b<=a):
	print("Entradas a e b invalidas")
		
-- ERROR:
File "XXXX", line 10
    print(x,"nao pertence ao intervalo:",a,,b,)
                                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:18:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,b)
elif(a<=x and x<=b):
		print(x,"nao pertence ao intervalo:",a b,)
elif(b<=a):
	print("Entradas a e b invalidas")
		
-- ERROR:
File "XXXX", line 10
    print(x,"nao pertence ao intervalo:",a b,)
                                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:19:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,b)
elif(a<=x and x<=b):
		print(x,"nao pertence ao intervalo:",a,",", b,)
elif(b<=a):
	print("Entradas a e b invalidas")
		
-- ERROR:
File "XXXX", line 10
    print(x,"nao pertence ao intervalo:",a b,)
                                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:19:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,b)
elif(a<=x and x<=b):
		print(x,"nao pertence ao intervalo:",a, "," , b,)
elif(b<=a):
	print("Entradas a e b invalidas")
		
-- ERROR:
File "XXXX", line 10
    print(x,"nao pertence ao intervalo:",a b,)
                                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:20:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",", b,)
elif(a<=x and x<=b):
		print(x,"nao pertence ao intervalo:",a,",", b,)
elif(b<=a):
	print("Entradas a e b invalidas")
		
-- ERROR:
File "XXXX", line 10
    print(x,"nao pertence ao intervalo:",a b,)
                                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:20:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,b,)
elif(a<=x and x<=b):
		print(x,"nao pertence ao intervalo:",a,",", b,)
elif(b<=a):
	print("Entradas a e b invalidas")
		
-- ERROR:
File "XXXX", line 10
    print(x,"nao pertence ao intervalo:",a b,)
                                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:21:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
elif(a<=x and x<=b):
		print(x,"nao pertence ao intervalo:",a,",", b,)
elif(b<=a):
	print("Entradas a e b invalidas")
		
-- ERROR:
File "XXXX", line 10
    print(x,"nao pertence ao intervalo:",a b,)
                                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 04:21:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
elif(a<=x and x<=b):
		print(x,"nao pertence ao intervalo:",a,",", b,)
elif(b<=a):
	print("Entradas a e b invalidas")
		
-- EXECUTION TIME:
0.185778
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:

-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas a e b invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo: 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 04:21:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
elif(a<=x or x<=b):
		print(x,"nao pertence ao intervalo:",a,",", b,)
elif(b<=a):
	print("Entradas a e b invalidas")
		
-- EXECUTION TIME:
0.195533
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo: 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas a e b invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo: 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:22:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
elif(a<=x or x<=b):
		print(x,"nao pertence ao intervalo:",a,",", b,)
elif(b<=a):
	print("Entradas a e b invalidas")
		
-- OUTPUT:
2.0 nao pertence ao intervalo: 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:23:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
elif(a<=x or x<=b):
		print(x,"nao pertence ao intervalo:",a,",", b,)
elif(b<=a):
	print("Entradas a e b invalidas")
		
-- OUTPUT:
2.0 nao pertence ao intervalo: 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:23:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
elif(a<=x or x<=b):
		print(x,"nao pertence ao intervalo:",a,",", b,)
elif(b<=a):
	print("Entradas a e b invalidas")
		
-- OUTPUT:
2.0 nao pertence ao intervalo: 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 04:26:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
elif(a<=x or x<=b):
		print(x,"nao pertence ao intervalo:",a,",", b,)
elif(b<=a):
else:
	print("Entradas a e b invalidas")
		
-- EXECUTION TIME:
0.242156
-- ERROR:
  File "/home/codebench/codes/1679/1103/main.py", line 12
    else:
       ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:26:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
elif(a<=x or x<=b):
		print(x,"nao pertence ao intervalo:",a,",", b,)
elif(b<=a):
else:
	print("Entradas a e b invalidas")
		
-- ERROR:
File "XXXX", line 12
    else:
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:26:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
elif(a<=x or x<=b):
		print(x,"nao pertence ao intervalo:",a,",", b,)
elif(b<=a):
	else:
	print("Entradas a e b invalidas")
		
-- ERROR:
File "XXXX", line 12
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:26:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
elif(a<=x or x<=b):
		print(x,"nao pertence ao intervalo:",a,",", b,)
elif(b<=a):
else:
		print("Entradas a e b invalidas")
		
-- ERROR:
File "XXXX", line 12
    else:
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:26:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
elif(a<=x or x<=b):
		print(x,"nao pertence ao intervalo:",a,",", b,)
elif(b<=a):
	else:
print("Entradas a e b invalidas")
		
-- ERROR:
File "XXXX", line 12
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:26:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
elif(a<=x or x<=b):
		print(x,"nao pertence ao intervalo:",a,",", b,)
elif(b<=a):
else:
print("Entradas a e b invalidas")
		
-- ERROR:
File "XXXX", line 12
    else:
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:39:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
elif(x<a and x>b)
		print(x,"nao pertence ao intervalo:",a,",", b,)
elif(b<=a):
else:
print("Entradas a e b invalidas")
		
-- ERROR:
File "XXXX", line 9
    elif(x<a and x>b)
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:39:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
elif(x<a and x>b):
		print(x,"nao pertence ao intervalo:",a,",", b,)
elif(b<=a):
else:
print("Entradas a e b invalidas")
		
-- ERROR:
File "XXXX", line 12
    else:
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:40:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
elif(x<a and x>b):
		print(x,"nao pertence ao intervalo:",a,",", b,)
elif(b<=a):
print("Entradas a e b invalidas")
		
-- ERROR:
File "XXXX", line 12
    print("Entradas a e b invalidas")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:40:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
elif(x<a and x>b):
		print(x,"nao pertence ao intervalo:",a,",", b,)
elif(b<=a):
	print("Entradas a e b invalidas")
		
-- ERROR:
File "XXXX", line 12
    print("Entradas a e b invalidas")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:40:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
elif(x<a and x>b):
		print(x,"nao pertence ao intervalo:",a,",", b,)
elif(b<=a):
	print("Entradas a e b invalidas")
		
-- ERROR:
File "XXXX", line 12
    print("Entradas a e b invalidas")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 04:40:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
elif(x<a and x>b):
		print(x,"nao pertence ao intervalo:",a,",", b,)
elif(b<=a):
	print("Entradas a e b invalidas")
		
-- EXECUTION TIME:
0.170457
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:

-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo: 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo: 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:40:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
elif(x<a and x>b):
		print(x,"nao pertence ao intervalo:",a,",", b,)
elif(b<=a):
	print("Entradas a e b invalidas")
		
-- ERROR:
File "XXXX", line 12
    print("Entradas a e b invalidas")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:41:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
elif(x<a and x>b):
	print(x,"nao pertence ao intervalo:",a,",", b,)
elif(b<=a):
	print("Entradas a e b invalidas")
		
-- ERROR:
File "XXXX", line 12
    print("Entradas a e b invalidas")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:41:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
elif(x<a or x>b):
	print(x,"nao pertence ao intervalo:",a,",", b,)
elif(b<=a):
	print("Entradas a e b invalidas")
		
-- OUTPUT:
2.0 nao pertence ao intervalo: 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 04:42:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
elif(x<a or x>b):
	print(x,"nao pertence ao intervalo:",a,",", b,)
elif(b<=a):
	print("Entradas a e b invalidas")
		
-- EXECUTION TIME:
0.120779
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo: 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo: 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo: 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:42:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
elif(x<a or x>b):
	print(x,"nao pertence ao intervalo:",a,",", b,)
elif(b<=a):
	print("Entradas a e b invalidas")
		
-- OUTPUT:
2.0 nao pertence ao intervalo: 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:43:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
elif(x<a or x>b):
	print(x,"nao pertence ao intervalo:",a,",", b,)
elif(x<b<=a):
	print("Entradas a e b invalidas")
		
-- OUTPUT:
2.0 nao pertence ao intervalo: 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:46:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
elif(x<a or x>b):
	print(x,"nao pertence ao intervalo:",a,",", b,)
elif(b<=a or a>x):
	print("Entradas a e b invalidas")
		
-- OUTPUT:
2.0 nao pertence ao intervalo: 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:46:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
elif(x<a or x>b):
	print(x,"nao pertence ao intervalo:",a,",", b,)
elif(b<=a or a>x):
else
	print("Entradas a e b invalidas")
		
-- ERROR:
File "XXXX", line 12
    else
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:47:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
elif(x<a or x>b):
	print(x,"nao pertence ao intervalo:",a,",", b,)
elif(b<=a or a>x):
	else:
print("Entradas a e b invalidas")
		
-- ERROR:
File "XXXX", line 12
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:47:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
elif(x<a or x>b):
	print(x,"nao pertence ao intervalo:",a,",", b,)
elif(b<=a or a>x):
else:
print("Entradas a e b invalidas")
		
-- ERROR:
File "XXXX", line 12
    else:
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:47:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
elif(x<a or x>b):
	print(x,"nao pertence ao intervalo:",a,",", b,)
elif(b<=a or a>x):
else:
	print("Entradas a e b invalidas")
		
-- ERROR:
File "XXXX", line 12
    else:
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:48:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
elif(x<a or x>b):
	print(x,"nao pertence ao intervalo:",a,",", b,)
elif(b<=a or a>x):
else:
		print("Entradas a e b invalidas")
		
-- ERROR:
File "XXXX", line 12
    else:
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:48:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
elif(x<a or x>b):
	print(x,"nao pertence ao intervalo:",a,",", b,)
elif(b<=a or a>x):
	else:
		print("Entradas a e b invalidas")
		
-- ERROR:
File "XXXX", line 12
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:48:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
elif(x<a or x>b):
	print(x,"nao pertence ao intervalo:",a,",", b,)
elif(b<=a or a>x):

		print("Entradas a e b invalidas")
		
-- OUTPUT:
2.0 nao pertence ao intervalo: 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:48:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
elif(x<a or x>b):
	print(x,"nao pertence ao intervalo:",a,",", b,)
elif(b<=a or a>x):
	print("Entradas a e b invalidas")
		
-- OUTPUT:
2.0 nao pertence ao intervalo: 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:49:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
elif(x<a or x>b):
	print(x,"nao pertence ao intervalo:",a,",", b,)
if(b<=a or a>x):
	print("Entradas a e b invalidas")
		
-- OUTPUT:
2.0 nao pertence ao intervalo: 3.0 , 4.0
Entradas a e b invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:49:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
if(x<a or x>b):
	print(x,"nao pertence ao intervalo:",a,",", b,)
if(b<=a or a>x):
	print("Entradas a e b invalidas")
		
-- OUTPUT:
2.0 nao pertence ao intervalo: 3.0 , 4.0
Entradas a e b invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:51:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
if(x<a or x>b ):
	print(x,"nao pertence ao intervalo:",a,",", b,)
if(b<=a):
	print("Entradas a e b invalidas")
		
-- OUTPUT:
2.0 nao pertence ao intervalo: 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:52:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x or x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
if(x<a and x>b ):
	print(x,"nao pertence ao intervalo:",a,",", b,)
if(b<=a):
	print("Entradas a e b invalidas")
		
-- OUTPUT:
2.0 pertence ao intervalo: 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:52:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
if(x<a and x>b ):
	print(x,"nao pertence ao intervalo:",a,",", b,)
if(b<=a):
	print("Entradas a e b invalidas")
		
-- OUTPUT:
2.0 pertence ao intervalo: 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:52:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
if(x<a and x>b ):
	print(x,"nao pertence ao intervalo:",a,",", b,)
if(b<=a):
	print("Entradas a e b invalidas")
		
-- OUTPUT:
2.0 pertence ao intervalo: 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:52:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
if(x<a and x>b ):
	print(x,"nao pertence ao intervalo:",a,",", b,)
if(b<=a):
	print("Entradas a e b invalidas")
		
-- OUTPUT:
2.0 pertence ao intervalo: 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:52:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
if(x<a and x>b ):
	print(x,"nao pertence ao intervalo:",a,",", b,)
if(b<=a):
	print("Entradas a e b invalidas")
		
-- OUTPUT:
2.0 pertence ao intervalo: 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:53:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
if(x<a or x>b ):
	print(x,"nao pertence ao intervalo:",a,",", b,)
if(b<=a):
	print("Entradas a e b invalidas")
		
-- OUTPUT:
2.0 nao pertence ao intervalo: 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:53:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
if(x<a or x>b ):
	print(x,"nao pertence ao intervalo:",a,",", b,)
if(b<=a):
	print("Entradas a e b invalidas")
		
-- OUTPUT:
2.0 nao pertence ao intervalo: 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:54:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x or x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
if(x<a and x>b ):
	print(x,"nao pertence ao intervalo:",a,",", b,)
if(b<=a):
	print("Entradas a e b invalidas")
		
-- OUTPUT:
2.0 pertence ao intervalo: 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:54:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x or x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
if(x<a and x>b ):
	print(x,"nao pertence ao intervalo:",a,",", b,)
if(b<=a):
	print("Entradas a e b invalidas")
		
-- OUTPUT:
2.0 pertence ao intervalo: 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:54:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
if(x<a and x>b ):
	print(x,"nao pertence ao intervalo:",a,",", b,)
if(b<=a):
	print("Entradas a e b invalidas")
		
-- OUTPUT:
2.0 pertence ao intervalo: 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:54:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
if(x<a and x>b ):
	print(x,"nao pertence ao intervalo:",a,",", b,)
if(b<=a):
	print("Entradas a e b invalidas")
		
-- OUTPUT:
2.0 pertence ao intervalo: 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:55:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
if(x<a and x>b ):
	print(x,"nao pertence ao intervalo:",a,",", b,)
if(b<=a):
	print("Entradas a e b invalidas")
		
-- OUTPUT:
2.0 pertence ao intervalo: 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:56:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
if(x<a or x>b and x<a>b ):
	print(x,"nao pertence ao intervalo:",a,",", b,)
if(b<=a):
	print("Entradas a e b invalidas")
		
-- OUTPUT:
2.0 nao pertence ao intervalo: 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:57:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
if(x<a or x>b):
	print(x,"nao pertence ao intervalo:",a,",", b,)
if(b<=a):
	print("Entradas a e b invalidas")
		
-- OUTPUT:
2.0 nao pertence ao intervalo: 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:57:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
if(x<a or x>b):
	print(x,"nao pertence ao intervalo:",a,",", b,)
if(b<=a):
	print("Entradas a e b invalidas")
		
-- OUTPUT:
2.0 nao pertence ao intervalo: 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:57:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
elif(x<a or x>b):
	print(x,"nao pertence ao intervalo:",a,",", b,)
if(b<=a):
	print("Entradas a e b invalidas")
		
-- OUTPUT:
2.0 nao pertence ao intervalo: 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 04:59:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
elif(x<a or x>b):
	print(x,"nao pertence ao intervalo:",a,",", b,)
if(b<=a or x>=a):
	print("Entradas a e b invalidas")
		
-- OUTPUT:
2.0 nao pertence ao intervalo: 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 12:55:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
elif(x<a or x>b):
	print(x,"nao pertence ao intervalo:",a,",", b,)
if(b<=a or x>=a):
	print("Entradas a e b invalidas")
		
-- EXECUTION TIME:
0.14317
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo: 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo: 6.5 , 3.5
Entradas a e b invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo: 1.1 , 22.2
Entradas a e b invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 12:55:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
elif(x<a or x>b):
	print(x,"nao pertence ao intervalo:",a,",", b,)
if(b<=a or x>=a):
	print("Entradas a e b invalidas")
		
-- OUTPUT:
2.0 nao pertence ao intervalo: 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 12:55:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(" "))
a=float(input(" "))
b=float(input(" "))
if(a<=x and x<=b):
	print(x,"pertence ao intervalo:",a,",",b,)
elif(x<a or x>b):
	print(x,"nao pertence ao intervalo:",a,",", b,)
if(b<=a or x>=a):
	print("Entradas a e b invalidas")
		
-- OUTPUT:
2.0 nao pertence ao intervalo: 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 15:07:53) 
-- CODE:
x=float(input('digite x: '))
a=float(input('digite a: '))
b=float(input('digite b: '))
if(b <= a):
	print('Entradas', a, 'e', b, 'invalidas')
elif( a <= x <= b ):
	print(x,'pertence ao intervalo', a,',', b)
else:
	print(x,'nao pertence ao intervalo', a, ',', b)

	

	

		
			
				 
				 



				 				  

				  





-- EXECUTION TIME:
0.131453
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
