== TEST (2019-03-24 21:18:40) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=int(input("numero de 4 digitos: "))

s1=x//1000
s2=(x//100)%
s3=(x//10)%
s4=x%
print(s1+s2+s3+s4)
 
-- ERROR:
File "XXXX", line 7
    s2=(x//100)%
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 21:19:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=int(input("numero de 4 digitos: "))

s1=x//1000
s2=(x//100)%10
s3=(x//10)%10
s4=x%10
print(s1+s2+s3+s4)
 
-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 21:19:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=int(input("numero de 4 digitos: "))

s1=x//1000
s2=(x//100)%10
s3=(x//10)%10
s4=x%10
print(s1+s2+s3+s4)
 
-- EXECUTION TIME:
0.131519
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 21:24:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=int(input("numero de 4 digitos: "))

s1=x//1000
s2=(x//100)%10
s3=(x//10)%10
s4=x%10
print(s1+s2+s3+s4)
 
-- EXECUTION TIME:
0.19806
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 21:25:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=int(input("numero de 4 digitos: "))

s1=x//1000
s2=(x//100)%10
s3=(x//10)%10
s4=x%10
print(s1+s2+s3+s4)
 
-- EXECUTION TIME:
0.138416
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 21:25:13) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=int(input("numero de 4 digitos: "))

s1=x//1000
s2=(x//100)%10
s3=(x//10)%10
s4=x%10
print(s1+s2+s3+s4)
 
-- EXECUTION TIME:
0.192945
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 16:10:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=int(input("numero de 4 digitos: "))

s1=x//1000
s2=(x//100)%10
s3=(x//10)%10
s4=x%10
print(s1+s2+s3+s4)
 
-- EXECUTION TIME:
0.106333
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 12:57:06) 
-- CODE:
a=int(input("digito de 4d:"))  

x=a%1000	
y=(a%100)%10
z=(a%10)%10
t=a%10

print(x+y+z+y)
-- OUTPUT:
182
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 12:57:46) 
-- CODE:
a=int(input("digito de 4d:"))  

x=a%1000	
y=(a%100)%10
z=(a%100)%10
t=a%10

print(x+y+z+y)
-- OUTPUT:
182
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 12:58:07) 
-- CODE:
a=int(input("digito de 4d:"))  

x=a%1000	
y=(a%1000)%100
z=(a%1000)%10
t=a%10

print(x+y+z+y)
-- OUTPUT:
322
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 12:58:44) 
-- CODE:
a=int(input("digito de 4d:"))  

x=a%1000	
y=(a//100)%10
z=(a//100)%10
t=a%10

print(x+y+z+y)
-- OUTPUT:
176
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 12:59:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=int(input("numero de 4 digitos: "))

s1=x//1000
s2=(x//100)%10
s3=(x//10)%10
s4=x%10
print(s1+s2+s3+s4)
 
-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
