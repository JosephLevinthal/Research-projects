== TEST (2019-06-13 04:45:40) 
-- CODE:
ast = int(input("metade do n√∫mero de ast: "))

for i in range(0, ast):
	print("*", end="")
-- OUTPUT:
***********
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 04:45:51) 
-- CODE:
ast = int(input("metade do numero de ast: "))

for i in range(0, ast):
	print("*", end="")
-- OUTPUT:
***********
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 05:14:29) 
-- CODE:
ast = int(input("metade do numero de ast: "))

for i in range(0, ast):
	print("*", end="ast")
-- OUTPUT:
*ast*ast*ast*ast*ast*ast*ast*ast*ast*ast*ast
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 05:15:03) 
-- CODE:
ast = int(input("metade do numero de ast: "))

for i in range(0, ast):
	print("*", end="*")
-- OUTPUT:
**********************
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 05:16:57) 
-- CODE:
ast = int(input("metade do numero de ast: "))

for i in range(0, ast):
	print("*", end="o")
-- OUTPUT:
*o*o*o*o*o*o*o*o*o*o*o
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 05:19:18) 
-- CODE:
ast = int(input("metade do numero de ast: "))

for i in range(0, ast):
	print("*", end="*")
	for j in range(0, i+o):
		print("*", end="")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    for j in range(0, i+o):
NameError: name 'o' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 05:19:35) 
-- CODE:
ast = int(input("metade do numero de ast: "))

for i in range(0, ast):
	print("*", end="*")
	for j in range(0, i+"o"):
		print("*", end="")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    for j in range(0, i+"o"):
TypeError: unsupported operand type(s) for +: 'int' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 05:22:50) 
-- CODE:
from numpy import*
ast = int(input("metade do numero de ast: "))

for i in range(0, ast):
	print("*", end="*")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 05:36:29) 
-- CODE:
from numpy import*
ast = int(input("metade do numero de ast: "))

for i in range(0, ast):
	print("i", end="*")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 05:36:49) 
-- CODE:
from numpy import*
ast = int(input("metade do numero de ast: "))

for i in range(0, ast):
	print("*", end="")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 05:37:05) 
-- CODE:
from numpy import*
ast = int(input("metade do numero de ast: "))

for i in range(0, ast):
	print("*"*2)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 05:37:22) 
-- CODE:
from numpy import*
ast = int(input("metade do numero de ast: "))

for i in range(0, ast):
	print("*")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 05:37:58) 
-- CODE:
from numpy import*
ast = int(input("metade do numero de ast: "))

for i in range(0, ast):
	print("*", end="")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 05:45:35) 
-- CODE:
from numpy import*
ast = int(input("metade do numero de ast: "))

for i in range(0, ast):
	
	print("*"*2, end="")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 05:53:00) 
-- CODE:
from numpy import*
ast = int(input("metade do numero de ast: "))

for i in range(0, ast):
	print("*"*2, end="")
	for j in range(0, i[:-1]):
		print("*", end="")

	
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 05:53:16) 
-- CODE:
from numpy import*
ast = int(input("metade do numero de ast: "))

for i in range(0, ast):
	print("*"*2, end="")
for j in range(0, i[:-1]):
	print("*", end="")

	
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 05:53:20) 
-- CODE:
from numpy import*
ast = int(input("metade do numero de ast: "))

for i in range(0, ast):
	print("*"*2, end="")
for j in range(0, i[:-1]):
	print("*", end="")

	
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 05:53:34) 
-- CODE:
from numpy import*
ast = int(input("metade do numero de ast: "))

for i in range(0, ast):
	print("*"*2, end="")
	for j in range(0, i[:-1]):
		print("*", end="")

	
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 05:53:50) 
-- CODE:
from numpy import*
ast = int(input("metade do numero de ast: "))

for i in range(0, ast):
	
	for j in range(0, i[:-1]):
		print("*", end="")
	print("*"*2, end="")
	
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 05:53:59) 
-- CODE:
from numpy import*
ast = int(input("metade do numero de ast: "))

for i in range(0, ast):
	
	for j in range(0, i[-1]):
		print("*", end="")
	print("*"*2, end="")
	
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 05:54:09) 
-- CODE:
from numpy import*
ast = int(input("metade do numero de ast: "))

for i in range(0, ast):
	
	for j in range(0, i[1]):
		print("*", end="")
	print("*"*2, end="")
	
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 05:54:21) 
-- CODE:
from numpy import*
ast = int(input("metade do numero de ast: "))

for i in range(0, ast):
	
	for j in range(0, i):
		print("*", end="")
	print("*"*2, end="")
	
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 11:35:59) 
-- CODE:
#from numpy import*
#ast = int(input("metade do numero de ast: "))

#for i in range(0, ast):
	
#	for j in range(0, i):
#		print("*", end="")
#	print("*"*2, end="")
metade_ast = int(input("metade dos asteriscos na primeira linha")) * 2

ast = "*"
ast_linha_1 = ast * metade_ast

QA2 = (len(ast_linha_1)- 2)//2


oo = "oo"
mult = 1
print(ast_linha_1)
ll = (ast * QA2 ) + (oo * mult ) + (ast * QA2 )
for ch in range(0,len(ast_linha_1)):
	if (QA2 <= len(ll)-1 and (mult <= (len(ast_linha_1) - 2)/2)):
		ll = (ast * QA2 ) + (oo * mult ) + (ast * QA2 ) 
		print(ll)
		QA2 = QA2 - 1
		mult = mult + 1	
	
	
-- OUTPUT:
**********************
**********oo**********
*********oooo*********
********oooooo********
*******oooooooo*******
******oooooooooo******
*****oooooooooooo*****
****oooooooooooooo****
***oooooooooooooooo***
**oooooooooooooooooo**
*oooooooooooooooooooo*
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 11:36:14) 
-- CODE:
#from numpy import*
#ast = int(input("metade do numero de ast: "))

#for i in range(0, ast):
	
#	for j in range(0, i):
#		print("*", end="")
#	print("*"*2, end="")
metade_ast = int(input("metade dos asteriscos na primeira linha")) * 2

ast = "*"
ast_linha_1 = ast * metade_ast

QA2 = (len(ast_linha_1)- 2)//2


oo = "oo"
mult = 1
print(ast_linha_1)
ll = (ast * QA2 ) + (oo * mult ) + (ast * QA2 )
for ch in range(0,len(ast_linha_1)):
	if (QA2 <= len(ll)-1 and (mult <= (len(ast_linha_1) - 2)/2)):
		ll = (ast * QA2 ) + (oo * mult ) + (ast * QA2 ) 
		print(ll)
		QA2 = QA2 - 1
		mult = mult + 1	
	
	
-- EXECUTION TIME:
0.666087
-- TEST CASE 1:
---- input:
11
---- correct output:
**********************
**********oo**********
*********oooo*********
********oooooo********
*******oooooooo*******
******oooooooooo******
*****oooooooooooo*****
****oooooooooooooo****
***oooooooooooooooo***
**oooooooooooooooooo**
*oooooooooooooooooooo*
---- user output:
**********************
**********oo**********
*********oooo*********
********oooooo********
*******oooooooo*******
******oooooooooo******
*****oooooooooooo*****
****oooooooooooooo****
***oooooooooooooooo***
**oooooooooooooooooo**
*oooooooooooooooooooo*
-- TEST CASE 2:
---- input:
19
---- correct output:
**************************************
******************oo******************
*****************oooo*****************
****************oooooo****************
***************oooooooo***************
**************oooooooooo**************
*************oooooooooooo*************
************oooooooooooooo************
***********oooooooooooooooo***********
**********oooooooooooooooooo**********
*********oooooooooooooooooooo*********
********oooooooooooooooooooooo********
*******oooooooooooooooooooooooo*******
******oooooooooooooooooooooooooo******
*****oooooooooooooooooooooooooooo*****
****oooooooooooooooooooooooooooooo****
***oooooooooooooooooooooooooooooooo***
**oooooooooooooooooooooooooooooooooo**
*oooooooooooooooooooooooooooooooooooo*
---- user output:
**************************************
******************oo******************
*****************oooo*****************
****************oooooo****************
***************oooooooo***************
**************oooooooooo**************
*************oooooooooooo*************
************oooooooooooooo************
***********oooooooooooooooo***********
**********oooooooooooooooooo**********
*********oooooooooooooooooooo*********
********oooooooooooooooooooooo********
*******oooooooooooooooooooooooo*******
******oooooooooooooooooooooooooo******
*****oooooooooooooooooooooooooooo*****
****oooooooooooooooooooooooooooooo****
***oooooooooooooooooooooooooooooooo***
**oooooooooooooooooooooooooooooooooo**
*oooooooooooooooooooooooooooooooooooo*
-- TEST CASE 3:
---- input:
26
---- correct output:
****************************************************
*************************oo*************************
************************oooo************************
***********************oooooo***********************
**********************oooooooo**********************
*********************oooooooooo*********************
********************oooooooooooo********************
*******************oooooooooooooo*******************
******************oooooooooooooooo******************
*****************oooooooooooooooooo*****************
****************oooooooooooooooooooo****************
***************oooooooooooooooooooooo***************
**************oooooooooooooooooooooooo**************
*************oooooooooooooooooooooooooo*************
************oooooooooooooooooooooooooooo************
***********oooooooooooooooooooooooooooooo***********
**********oooooooooooooooooooooooooooooooo**********
*********oooooooooooooooooooooooooooooooooo*********
********oooooooooooooooooooooooooooooooooooo********
*******oooooooooooooooooooooooooooooooooooooo*******
******oooooooooooooooooooooooooooooooooooooooo******
*****oooooooooooooooooooooooooooooooooooooooooo*****
****oooooooooooooooooooooooooooooooooooooooooooo****
***oooooooooooooooooooooooooooooooooooooooooooooo***
**oooooooooooooooooooooooooooooooooooooooooooooooo**
*oooooooooooooooooooooooooooooooooooooooooooooooooo*
---- user output:
****************************************************
*************************oo*************************
************************oooo************************
***********************oooooo***********************
**********************oooooooo**********************
*********************oooooooooo*********************
********************oooooooooooo********************
*******************oooooooooooooo*******************
******************oooooooooooooooo******************
*****************oooooooooooooooooo*****************
****************oooooooooooooooooooo****************
***************oooooooooooooooooooooo***************
**************oooooooooooooooooooooooo**************
*************oooooooooooooooooooooooooo*************
************oooooooooooooooooooooooooooo************
***********oooooooooooooooooooooooooooooo***********
**********oooooooooooooooooooooooooooooooo**********
*********oooooooooooooooooooooooooooooooooo*********
********oooooooooooooooooooooooooooooooooooo**
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
