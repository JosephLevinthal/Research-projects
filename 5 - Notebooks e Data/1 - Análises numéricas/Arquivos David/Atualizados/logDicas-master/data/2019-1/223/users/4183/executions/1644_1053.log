== TEST (2019-04-04 23:41:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = cervo
if (nome == 'cervo'):
	print(nome 'eh patrono do Harry Potter')
else:
	print(nome 'nao eh patrono do Harry POtter')

-- ERROR:
File "XXXX", line 6
    print(nome 'eh patrono do Harry Potter')
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 23:42:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = cervo
if (nome == 'cervo'):
	print(nome + 'eh patrono do Harry Potter')
else:
	print(nome + 'nao eh patrono do Harry POtter')

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    nome = cervo
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 23:43:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = "cervo"
if (nome == 'cervo'):
	print(nome + 'eh patrono do Harry Potter')
else:
	print(nome + 'nao eh patrono do Harry POtter')

-- OUTPUT:
cervoeh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 23:43:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = "cervo"
if (nome == 'cervo '):
	print(nome + 'eh patrono do Harry Potter')
else:
	print(nome + 'nao eh patrono do Harry POtter')

-- OUTPUT:
cervonao eh patrono do Harry POtter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 23:44:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = "cervo "
if (nome == 'cervo '):
	print(nome + 'eh patrono do Harry Potter')
else:
	print(nome + 'nao eh patrono do Harry POtter')

-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 23:44:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = "cervo "
if (nome == 'cervo '):
	print(nome + 'eh patrono do Harry Potter')
else:
	print(nome + 'nao eh patrono do Harry POtter')

-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-04 23:44:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = "cervo "
if (nome == 'cervo '):
	print(nome + 'eh patrono do Harry Potter')
else:
	print(nome + 'nao eh patrono do Harry POtter')

-- EXECUTION TIME:
0.178643
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 23:44:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = float(input("Nome: "))
if (nome == 'cervo '):
	print(nome + 'eh patrono do Harry Potter')
else:
	print(nome + 'nao eh patrono do Harry POtter')

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    nome = float(input())
ValueError: could not convert string to float: 'cervo'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 23:44:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = input("Nome: "))
if (nome == 'cervo '):
	print(nome + 'eh patrono do Harry Potter')
else:
	print(nome + 'nao eh patrono do Harry POtter')

-- ERROR:
File "XXXX", line 4
    nome = input())
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 23:45:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = input("Nome: ")
if (nome == 'cervo '):
	print(nome + 'eh patrono do Harry Potter')
else:
	print(nome + 'nao eh patrono do Harry POtter')

-- OUTPUT:
cervonao eh patrono do Harry POtter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 23:45:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = input("Nome: ")
if (nome == 'cervo '):
	print(nome + ' eh patrono do Harry Potter')
else:
	print(nome + ' nao eh patrono do Harry POtter')

-- OUTPUT:
cervo nao eh patrono do Harry POtter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 23:45:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = input("Nome: ")
if (nome == 'cervo'):
	print(nome + ' eh patrono do Harry Potter')
else:
	print(nome + ' nao eh patrono do Harry POtter')

-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-04 23:46:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = input("Nome: ")
if (nome == 'cervo'):
	print(nome + ' eh patrono do Harry Potter')
else:
	print(nome + ' nao eh patrono do Harry POtter')

-- EXECUTION TIME:
0.149581
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry POtter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 23:46:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = input("Nome: ")
if (nome == 'cervo'):
	print(nome ' eh patrono do Harry Potter')
else:
	print(nome ' nao eh patrono do Harry POtter')

-- ERROR:
File "XXXX", line 6
    print(nome ' eh patrono do Harry Potter')
                                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 23:46:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = input("Nome: ")
if (nome == 'cervo'):
	print(nome + ' eh patrono do Harry Potter')
else:
	print(nome + ' nao eh patrono do Harry POtter')

-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 23:47:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = input("Nome: ")
if (nome == 'cervo'):
	print(nome + ' eh patrono do Harry Potter')
else:
	print(nome + ' nao eh patrono do Harry Potter')

-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-04 23:47:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = input("Nome: ")
if (nome == 'cervo'):
	print(nome + ' eh patrono do Harry Potter')
else:
	print(nome + ' nao eh patrono do Harry Potter')

-- EXECUTION TIME:
0.135841
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
