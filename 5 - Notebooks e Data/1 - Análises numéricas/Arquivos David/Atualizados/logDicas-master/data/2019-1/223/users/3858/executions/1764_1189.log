== TEST (2019-05-30 13:01:05) 
-- CODE:
a = input()
x = a.replace(" ","")
i = 0
j = -1
while(i<len(x)):
	if(x[i]==x[j]):
		i = i + 1
		j = j -1
	print(x.upper())
	print(1)
	#elif(x[i]=!x[j]):
	#	print(x.upper())
	#	print(0)
-- OUTPUT:
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 13:02:29) 
-- CODE:
a = input()
x = a.replace(" ","")
i = 0
j = -1
while(i<len(x)):
	if(x[i]==x[j]):
		i = i + 1
		j = j -1
	print(x.upper())
	print(1)
	#elif(x[i]=!x[j]):
	#	print(x.upper())
	#	print(0)
-- OUTPUT:
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 13:03:39) 
-- CODE:
a = input()
x = a.replace(" ","")
i = 0
j = -1
while(i<len(x)):
	if(x[i]==x[j]):
		i = i + 1
		j = j -1
	print(x.upper())
	print(1)
	#elif(x[i]=!x[j]):
	#	print(x.upper())
	#	print(0)
-- OUTPUT:
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-30 13:37:05) 
-- CODE:
a = input()
x = a.replace(" ","")
i = 0
j = -1
while(i<len(x)):
	if(x[i]==x[j]):
		i = i + 1
		j = j -1
	print(x.upper())
	print(1)
	#elif(x[i]=!x[j]):
	#	print(x.upper())
	#	print(0)
-- EXECUTION TIME:
0.152373
-- TEST CASE 1:
---- input:
ACARARAJADADAJARARACA
---- correct output:
ACARARAJADADAJARARACA
1
---- user output:
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
-- TEST CASE 2:
---- input:
CACHORRO
---- correct output:
CACHORRO
0
---- user output:
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
-- TEST CASE 3:
---- input:
amalanadanalama
---- correct output:
AMALANADANALAMA
1
---- user output:
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-30 13:37:05) 
-- CODE:
a = input()
x = a.replace(" ","")
i = 0
j = -1
while(i<len(x)):
	if(x[i]==x[j]):
		i = i + 1
		j = j -1
	print(x.upper())
	print(1)
	#elif(x[i]=!x[j]):
	#	print(x.upper())
	#	print(0)
-- EXECUTION TIME:
0.287674
-- TEST CASE 1:
---- input:
ACARARAJADADAJARARACA
---- correct output:
ACARARAJADADAJARARACA
1
---- user output:
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
-- TEST CASE 2:
---- input:
CACHORRO
---- correct output:
CACHORRO
0
---- user output:
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
-- TEST CASE 3:
---- input:
amalanadanalama
---- correct output:
AMALANADANALAMA
1
---- user output:
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-30 13:38:04) 
-- CODE:
a = input()
x = a.replace(" ","")
i = 0
j = -1
while(i<len(x)):
	if(x[i]==x[j]):
		i = i + 1
		j = j -1
	print(x.upper())
	print(1)
	#elif(x[i]=!x[j]):
	#	print(x.upper())
	#	print(0)
-- EXECUTION TIME:
0.635909
-- TEST CASE 1:
---- input:
ACARARAJADADAJARARACA
---- correct output:
ACARARAJADADAJARARACA
1
---- user output:
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
-- TEST CASE 2:
---- input:
CACHORRO
---- correct output:
CACHORRO
0
---- user output:
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
-- TEST CASE 3:
---- input:
amalanadanalama
---- correct output:
AMALANADANALAMA
1
---- user output:
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-30 13:38:04) 
-- CODE:
a = input()
x = a.replace(" ","")
i = 0
j = -1
while(i<len(x)):
	if(x[i]==x[j]):
		i = i + 1
		j = j -1
	print(x.upper())
	print(1)
	#elif(x[i]=!x[j]):
	#	print(x.upper())
	#	print(0)
-- EXECUTION TIME:
0.483388
-- TEST CASE 1:
---- input:
ACARARAJADADAJARARACA
---- correct output:
ACARARAJADADAJARARACA
1
---- user output:
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
-- TEST CASE 2:
---- input:
CACHORRO
---- correct output:
CACHORRO
0
---- user output:
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
-- TEST CASE 3:
---- input:
amalanadanalama
---- correct output:
AMALANADANALAMA
1
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-30 13:39:04) 
-- CODE:
a = input()
x = a.replace(" ","")
i = 0
j = -1
while(i<len(x)):
	if(x[i]==x[j]):
		i = i + 1
		j = j -1
	print(x.upper())
	print(1)
	#elif(x[i]=!x[j]):
	#	print(x.upper())
	#	print(0)
-- EXECUTION TIME:
1.00187
-- TEST CASE 1:
---- input:
ACARARAJADADAJARARACA
---- correct output:
ACARARAJADADAJARARACA
1
---- user output:
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
-- TEST CASE 2:
---- input:
CACHORRO
---- correct output:
CACHORRO
0
---- user output:
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
-- TEST CASE 3:
---- input:
amalanadanalama
---- correct output:
AMALANADANALAMA
1
---- user output:
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-30 13:39:04) 
-- CODE:
a = input()
x = a.replace(" ","")
i = 0
j = -1
while(i<len(x)):
	if(x[i]==x[j]):
		i = i + 1
		j = j -1
	print(x.upper())
	print(1)
	#elif(x[i]=!x[j]):
	#	print(x.upper())
	#	print(0)
-- EXECUTION TIME:
0.549764
-- TEST CASE 1:
---- input:
ACARARAJADADAJARARACA
---- correct output:
ACARARAJADADAJARARACA
1
---- user output:
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
ACARARAJADADAJARARACA
1
-- TEST CASE 2:
---- input:
CACHORRO
---- correct output:
CACHORRO
0
---- user output:
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
CACHORRO
1
-- TEST CASE 3:
---- input:
amalanadanalama
---- correct output:
AMALANADANALAMA
1
---- user output:
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
AMALANADANALAMA
1
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
