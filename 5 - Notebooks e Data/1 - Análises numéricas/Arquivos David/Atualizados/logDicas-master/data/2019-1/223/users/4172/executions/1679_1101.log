== TEST (2019-04-29 11:55:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,I,C]")

if (CO<=500)and(CO<=1000)and(CO>5000)and(CO>500)and(CO>1000):
	if (CO<=500):
		X=0.44
		print(CO,KWH,"tipo",T)
		print(CO*X)
		
-- OUTPUT:
Entrada: 100
Animal: Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 11:57:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,I,C]")

if (CO<=500)and(CO<=1000)and(CO>5000)and(CO>500)and(CO>1000):
	if (CO<=500):
		X=0.44
		print(CO,KWH,str("tipo"),T)
		print(CO*X)
		
-- OUTPUT:
Entrada: 100
Animal: Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 11:58:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,I,C]")

if (CO<=500)and(CO<=1000)and(CO>5000)and(CO>500)and(CO>1000):
	if (CO<=500):
		X=0.44
		print(CO,KWH,str("tipo"),T)
		print(CO*X)
		
-- OUTPUT:
Entrada: 100
Animal: Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 11:59:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,I,C]")

if (CO<=500)and(CO<=1000)and(CO>5000)and(CO>500)and(CO>1000):
	if (T==C):
		X=0.44
		print(CO,KWH,str("tipo"),T)
		print(CO*X)
		
-- OUTPUT:
Entrada: 100
Animal: Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:00:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,I,C]")

if (CO<=500)and(CO<=1000)and(CO>5000)and(CO>500)and(CO>1000):
	if (T==C)and(CO<=500):
		X=0.44
		print(CO,KWH,str("tipo"),T)
		print(CO*X)
	elif        :
-- ERROR:
File "XXXX", line 13
    elif        :
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:00:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,I,C]")

if (CO<=500)and(CO<=1000)and(CO>5000)and(CO>500)and(CO>1000):
	if (T==C)and(CO<=500):
		X=0.44
		print(CO,KWH,str("tipo"),T)
		print(CO*X)
	        :
-- ERROR:
File "XXXX", line 13
    :
    ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:00:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,I,C]")

if (CO<=500)and(CO<=1000)and(CO>5000)and(CO>500)and(CO>1000):
	if (T==C)and(CO<=500):
		X=0.44
		print(CO,KWH,str("tipo"),T)
		print(CO*X)        
-- ERROR:
File "XXXX", line 13
    :
    ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:00:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,I,C]: ")

if (CO<=500)and(CO<=1000)and(CO>5000)and(CO>500)and(CO>1000):
	if (T==C)and(CO<=500):
		X=0.44
		print(CO,KWH,str("tipo"),T)
		print(CO*X)        
-- ERROR:
File "XXXX", line 13
    :
    ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:01:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,I,C]: ".upper())

if (CO<=500)and(CO<=1000)and(CO>5000)and(CO>500)and(CO>1000):
	if (T==C)and(CO<=500):
		X=0.44
		print(CO,KWH,str("tipo"),T)
		print(CO*X)  
	elif(T==C)and(CO>500)
		print(CO,KWH,str("tipo"),T)
		print(CO*X)
-- ERROR:
File "XXXX", line 13
    elif(T==C)and(CO>500)
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:01:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,I,C]: ".upper())

if (CO<=500)and(CO<=1000)and(CO>5000)and(CO>500)and(CO>1000):
	if (T==C)and(CO<=500):
		X=0.44
		print(CO,KWH,str("tipo"),T)
		print(CO*X)  
	elif(T==C)and(CO>500):
		print(CO,KWH,str("tipo"),T)
		print(CO*X)
-- OUTPUT:
TIPO DE INSTALACAO[R,I,C]:
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:02:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,I,C]: ".upper())

if (CO<=500)and(CO<=1000)and(CO>5000)and(CO>500)and(CO>1000):
	if (T==C)and(CO<=500):
		X=0.44
		print(CO,KWH,str("tipo"),T)
		print(CO*X)  
	elif(T==C)and(CO>500):
		print(CO,KWH,str("tipo"),T)
		print(CO*X)
else:
	print(CO,KWH,str("tipo"),T)
	print("invalido")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 17, in <module>
    print(CO,KWH,str("tipo"),T)
NameError: name 'KWH' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:02:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,I,C]: ".upper())

if (CO<=500)and(CO<=1000)and(CO>5000)and(CO>500)and(CO>1000):
	if (T==C)and(CO<=500):
		X=0.44
		print(CO,"KWH",str("tipo"),T)
		print(CO*X)  
	elif(T==C)and(CO>500):
		print(CO,KWH,str("tipo"),T)
		print(CO*X)
else:
	print(CO,KWH,str("tipo"),T)
	print("invalido")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 17, in <module>
    print(CO,KWH,str("tipo"),T)
NameError: name 'KWH' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:03:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,I,C]: ".upper())

if (CO<=500)and(CO<=1000)and(CO>5000)and(CO>500)and(CO>1000):
	if (T==C)and(CO<=500):
		X=0.44
		print(CO+str("KWH")+str("tipo")+T)
		print(CO*X)  
	elif(T==C)and(CO>500):
		print(CO,KWH,str("tipo"),T)
		print(CO*X)
else:
	print(CO,KWH,str("tipo"),T)
	print("invalido")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 17, in <module>
    print(CO,KWH,str("tipo"),T)
NameError: name 'KWH' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:03:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,I,C]: ".upper())

if (CO<=500)and(CO<=1000)and(CO>5000)and(CO>500)and(CO>1000):
	if (T==C)and(CO<=500):
		X=0.44
		print(CO+str("KWH")+str("tipo")+T)
		print(CO*X)  
	elif(T==C)and(CO>500):
		print(CO,"KWH",str("tipo"),T)
		print(CO*X)
else:
	print(CO,"KWH",str("tipo"),T)
	print("invalido")
-- OUTPUT:
TIPO DE INSTALACAO[R,I,C]: -56.0 KWH tipo I
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:04:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,I,C]: ".upper())

if (CO<=500)and(CO<=1000)and(CO>5000)and(CO>500)and(CO>1000):
	if (T==C)and(CO<=500):
		X=0.44
		print(CO,"KWH",str("tipo"),T)
		print(CO*X)  
	elif(T==C)and(CO>500):
		print(CO,"KWH",str("tipo"),T)
		print(CO*X)
else:
	print(CO,"KWH",str("tipo"),T)
	print("invalido")
-- OUTPUT:
TIPO DE INSTALACAO[R,I,C]: -56.0 KWH tipo I
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:04:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,I,C]: ".upper())

if (CO<=500)and(CO<=1000)and(CO>5000)and(CO>500)and(CO>1000):
	if (T==C)and(CO<=500):
		X=0.44
		print(CO,"KWH",str("tipo"),T)
		print(CO*X)  
	elif(T==C)and(CO>500):
		print(CO,"KWH",str("tipo"),T)
		print(CO*X)
else:
	print(CO,"KWH",str("tipo"),T)
	print("invalido")
-- OUTPUT:
TIPO DE INSTALACAO[R,I,C]: -56.0 KWH tipo I
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:04:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,I,C]: ".upper())

if (CO<=500)and(CO<=1000)and(CO>5000)and(CO>500)and(CO>1000):
	if (T==C)and(CO<=500):
		X=0.44
		print(CO,"KWH",str("tipo"),T)
		print(CO*X)  
	elif(T==C)and(CO>500):
		print(CO,"KWH",str("tipo"),T)
		print(CO*X)
else:
	print(CO,"KWH",str("tipo"),T)
	print("invalido")
-- OUTPUT:
TIPO DE INSTALACAO[R,I,C]: -56.0 KWH tipo I
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:06:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,I,C]: ".upper())

if (CO<=500)and(CO<=1000)and(CO>5000)and(CO>500)and(CO>1000):
	if (T==C)and(CO<=500):
		X=0.44
		print(CO,"KWH",str("tipo"),T)
		print(CO*X)  
	elif(T==C)and(CO>500):
		print(CO,"KWH",str("tipo"),T)
		print(CO*X)
else:
	print(CO,"KWH",str("tipo"),T)
	print("invalido")
-- OUTPUT:
TIPO DE INSTALACAO[R,I,C]: -56.0 KWH tipo I
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:12:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,I,C]: ".upper())

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (T==R)and(CO<=500):
		X=0.44
		print(CO,"KWH",str("tipo"),T)
		print(CO*X)  
	elif(T==R)and(CO>500):
			X=0,65
		print(CO,"KWH",str("tipo"),T)
		print(CO*X)
else:
	print(CO,"KWH",str("tipo"),T)
	print("invalido")
-- ERROR:
File "XXXX", line 15
    print(CO,"KWH",str("tipo"),T)
                                ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:12:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,I,C]: ".upper())

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (T==R)and(CO<=500):
		X=0.44
		print(CO,"KWH",str("tipo"),T)
		print(CO*X)  
	elif(T==R)and(CO>500):
		X=0,65
		print(CO,"KWH",str("tipo"),T)
		print(CO*X)
else:
	print(CO,"KWH",str("tipo"),T)
	print("invalido")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    if (T==R)and(CO<=500):
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:13:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,I,C]: ".upper())

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (T==R)and(CO<=500):
		X=0.44
		print(CO,"KWH",str("tipo"),T)
		print(CO*X)  
	elif(T==R)and(CO>500):
		X=0,65
		print(CO,"KWH",str("tipo"),T)
		print(CO*X)
else:
	print(CO,"KWH",str("tipo"),T)
	print("invalido")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    if (T==R)and(CO<=500):
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:14:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao: ".upper())

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (T==R)and(CO<=500):
		X=0.44
		print(CO,"KWH",str("tipo"),T)
		print(CO*X)  
	elif(T==R)and(CO>500):
		X=0,65
		print(CO,"KWH",str("tipo"),T)
		print(CO*X)
else:
	print(CO,"KWH",str("tipo"),T)
	print("invalido")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    if (T==R)and(CO<=500):
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:15:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
TI=input("Tipo de instalacao: ".upper())

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (TI == R)and(CO<=500):
		X=0.44
		print(CO,"KWH",str("tipo"),T)
		print(CO*X)  
	elif(TI == R)and(CO>500):
		X=0,65
		print(CO,"KWH",str("tipo"),T)
		print(CO*X)
else:
	print(CO,"KWH",str("tipo"),T)
	print("invalido")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    if (TI == R)and(CO<=500):
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:15:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
TI=input("Tipo de instalacao[R]: ".upper())

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (TI == R)and(CO<=500):
		X=0.44
		print(CO,"KWH",str("tipo"),T)
		print(CO*X)  
	elif(TI == R)and(CO>500):
		X=0,65
		print(CO,"KWH",str("tipo"),T)
		print(CO*X)
else:
	print(CO,"KWH",str("tipo"),T)
	print("invalido")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    if (TI == R)and(CO<=500):
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:19:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
TI=input("Tipo de instalacao: ".upper())

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500):
		X=0.44
		print(CO,"KWH",str("tipo"),T)
		print(CO*X)  
	elif(TI == R)and(CO>500):
		X=0,65
		print(CO,"KWH",str("tipo"),T)
		print(CO*X)
else:
	print(CO,"KWH",str("tipo"),T)
	print("invalido")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(CO,"KWH",str("tipo"),T)
NameError: name 'T' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:19:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao: ".upper())

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500):
		X=0.44
		print(CO,"KWH",str("tipo"),T)
		print(CO*X)  
	elif(CO>500):
		X=0,65
		print(CO,"KWH",str("tipo"),T)
		print(CO*X)
else:
	print(CO,"KWH",str("tipo"),T)
	print("invalido")
-- OUTPUT:
TIPO DE INSTALACAO: -56.0 KWH tipo I
-24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:31:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao: ".upper())

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500):
		X=0.44
		print(CO,"KWH",str("tipo"),T)
		print(str("R$"),CO*X)  
	elif(CO>500):
		X=0,65
		print(CO,("KWH"),str("tipo"),T)
		print(CO*X)
	elif(CO<=1000):	
		X=0.55
		print(CO,"KWH",str("tipo"),T)
		print(str("R$"),CO*X)
	elif(CO>1000)	
		X=0.60
		print(CO,"KWH",str("tipo"),T)
		print(str("R$"),CO*X)
	elif(CO==5000)
		X=0.55
		print(CO,"KWH",str("tipo"),T)
		print(str("R$"),CO*X)
	elif(CO>5000)
		X=0.60
		print(CO,"KWH",str("tipo"),T)
		print(str("R$"),CO*X)
	
else:
	print(CO,"KWH",str("tipo"),T)
	print("invalido")
-- ERROR:
File "XXXX", line 21
    elif(CO>1000)	
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:31:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao: ".upper())

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500):
		X=0.44
		print(CO,"KWH",str("tipo"),T)
		print(str("R$"),CO*X)  
	elif(CO>500):
		X=0,65
		print(CO,("KWH"),str("tipo"),T)
		print(CO*X)
	elif(CO<=1000):	
		X=0.55
		print(CO,"KWH",str("tipo"),T)
		print(str("R$"),CO*X)
	elif(CO>1000):
		X=0.60
		print(CO,"KWH",str("tipo"),T)
		print(str("R$"),CO*X)
	elif(CO==5000):
		X=0.55
		print(CO,"KWH",str("tipo"),T)
		print(str("R$"),CO*X)
	elif(CO>5000):
		X=0.60
		print(CO,"KWH",str("tipo"),T)
		print(str("R$"),CO*X)
	
else:
	print(CO,"KWH",str("tipo"),T)
	print("invalido")
-- OUTPUT:
TIPO DE INSTALACAO: -56.0 KWH tipo I
R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:31:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao: ".upper())

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500):
		X=0.44
		print(CO,"KWH",str("tipo"),T)
		print(str("R$"),CO*X)  
	elif(CO>500):
		X=0,65
		print(CO,("KWH"),str("tipo"),T)
		print(CO*X)
	elif(CO<=1000):	
		X=0.55
		print(CO,"KWH",str("tipo"),T)
		print(str("R$"),CO*X)
	elif(CO>1000):
		X=0.60
		print(CO,"KWH",str("tipo"),T)
		print(str("R$"),CO*X)
	elif(CO==5000):
		X=0.55
		print(CO,"KWH",str("tipo"),T)
		print(str("R$"),CO*X)
	elif(CO>5000):
		X=0.60
		print(CO,"KWH",str("tipo"),T)
		print(str("R$"),CO*X)
	
else:
	print(CO,"KWH",str("tipo"),T)
	print("invalido")
-- EXECUTION TIME:
0.151307
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
TIPO DE INSTALACAO: -56.0 KWH tipo I
R$ -24.64
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
TIPO DE INSTALACAO: 955.5 KWH tipo R
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:31:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao: ".upper())

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500):
		X=0.44
		print(CO,"KWH",str("tipo"),T)
		print(str("R$"),CO*X)  
	elif(CO>500):
		X=0,65
		print(CO,("KWH"),str("tipo"),T)
		print(CO*X)
	elif(CO<=1000):	
		X=0.55
		print(CO,"KWH",str("tipo"),T)
		print(str("R$"),CO*X)
	elif(CO>1000):
		X=0.60
		print(CO,"KWH",str("tipo"),T)
		print(str("R$"),CO*X)
	elif(CO==5000):
		X=0.55
		print(CO,"KWH",str("tipo"),T)
		print(str("R$"),CO*X)
	elif(CO>5000):
		X=0.60
		print(CO,"KWH",str("tipo"),T)
		print(str("R$"),CO*X)
	
else:
	print(CO,"KWH",str("tipo"),T)
	print("invalido")
-- OUTPUT:
TIPO DE INSTALACAO: -56.0 KWH tipo I
R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:32:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao: ".upper())

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500):
		X=0.44
		print(CO,"KWH",str("tipo"),T)
		print(str("R$"),CO*X)  
	elif(CO>500):
		X=0,65
		print(CO,("KWH"),str("tipo"),T)
		print(str("R$"),CO*X)
	elif(CO<=1000):	
		X=0.55
		print(CO,"KWH",str("tipo"),T)
		print(str("R$"),CO*X)
	elif(CO>1000):
		X=0.60
		print(CO,"KWH",str("tipo"),T)
		print(str("R$"),CO*X)
	elif(CO==5000):
		X=0.55
		print(CO,"KWH",str("tipo"),T)
		print(str("R$"),CO*X)
	elif(CO>5000):
		X=0.60
		print(CO,"KWH",str("tipo"),T)
		print(str("R$"),CO*X)
	
else:
	print(CO,"KWH",str("tipo"),T)
	print("invalido")
-- OUTPUT:
TIPO DE INSTALACAO: -56.0 KWH tipo I
R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:34:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao: ".upper())

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500):
		X=0.44
		print(CO,"KWH",str("tipo"),T)
		print(CO*X)  
	elif(CO>500):
		X=0,65
		print(CO,("KWH"),str("tipo"),T)
		print(CO*X)
	elif(CO<=1000):	
		X=0.55
		print(CO,"KWH",str("tipo"),T)
		print(CO*X)
	elif(CO>1000):
		X=0.60
		print(CO,"KWH",str("tipo"),T)
		print(CO*X)
	elif(CO==5000):
		X=0.55
		print(CO,"KWH",str("tipo"),T)
		print(,CO*X)
	elif(CO>5000):
		X=0.60
		print(CO,"KWH",str("tipo"),T)
		print(,CO*X)
	
else:
	print(CO,"KWH",str("tipo"),T)
	print("invalido")
-- ERROR:
File "XXXX", line 28
    print(,CO*X)
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:34:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao: ".upper())

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500):
		X=0.44
		print(CO,"KWH",str("tipo"),T)
		print(CO*X)  
	elif(CO>500):
		X=0,65
		print(CO,("KWH"),str("tipo"),T)
		print(CO*X)
	elif(CO<=1000):	
		X=0.55
		print(CO,"KWH",str("tipo"),T)
		print(CO*X)
	elif(CO>1000):
		X=0.60
		print(CO,"KWH",str("tipo"),T)
		print(CO*X)
	elif(CO==5000):
		X=0.55
		print(CO,"KWH",str("tipo"),T)
		print(CO*X)
	elif(CO>5000):
		X=0.60
		print(CO,"KWH",str("tipo"),T)
		print(CO*X)
	
else:
	print(CO,"KWH",str("tipo"),T)
	print("invalido")
-- OUTPUT:
TIPO DE INSTALACAO: -56.0 KWH tipo I
-24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:35:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao: ".upper())

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500):
		X=0.44
		print(CO,"KWH",str("tipo"),T)
		print(CO*X)  
	elif(CO>500):
		X=0,65
		print(CO,("KWH"),str("tipo"),T)
		print(CO*X)
	elif(CO<=1000):	
		X=0.55
		print(CO,"KWH",str("tipo"),T)
		print(CO*X)
	elif(CO>1000):
		X=0.60
		print(CO,"KWH",str("tipo"),T)
		print(CO*X)
	elif(CO==5000):
		X=0.55
		print(CO,"KWH",str("tipo"),T)
		print(CO*X)
	elif(CO>5000):
		X=0.60
		print(CO,"KWH",str("tipo"),T)
		print(CO*X)
	
else:
	print(CO,"KWH",str("tipo"),T)
	print("invalido")
-- OUTPUT:
TIPO DE INSTALACAO: -56.0 KWH tipo I
-24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:39:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao: ".upper())

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500):
		X=0.44
		print(CO,"KWH",str("tipo"),T)
		print(CO*X)  
	elif(CO>500):
		X=0,65
		print(CO,("KWH"),str("tipo"),T)
		print(CO*X)
	elif(CO<=1000):	
		X=0.55
		print(CO,"KWH",str("tipo"),T)
		print(CO*X)
	elif(CO>1000):
		X=0.60
		print(CO,"KWH",str("tipo"),T)
		print(CO*X)
	elif(CO==5000):
		X=0.55
		print(CO,"KWH",str("tipo"),T)
		print(CO*X)
	elif(CO>5000):
		X=0.60
		print(CO,"KWH",str("tipo"),T)
		print(CO*X)
	
else:
	print(CO,"KWH",str("tipo"),T)
	print("invalido")
-- OUTPUT:
TIPO DE INSTALACAO: -56.0 KWH tipo I
-24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:50:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,C,I]: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500):
		X=0.44
		print(CO,"KWH",str("tipo"),T)
		print("Valor total:","R$",CO*X)  
	elif(CO>500):
		X=0,65
		print(CO,("KWH"),str("tipo"),T)
		print("Valor total:","R$",CO*X)
	elif(CO<=1000):	
		X=0.55
		print(CO,"KWH",str("tipo"),T)
		print("Valor total:","R$",CO*X)
	elif(CO>1000):
		X=0.60
		print(CO,"KWH",str("tipo"),T)
		print("Valor total:","R$",CO*X)
	elif(CO==5000):
		X=0.55
		print(CO,"KWH",str("tipo"),T)
		print("Valor total:","R$",CO*X)
	elif(CO>5000):
		X=0.60
		print(CO,"KWH",str("tipo"),T)
		print("Valor total:","R$",CO*X)
	
else:
	print(CO,"KWH",str("tipo"),T)
	print("Dados invalido")
-- OUTPUT:
-56.0 KWH tipo I
Valor total: R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:53:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,C,I]: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500):
		X=0.44
		print(CO,"KWH",str("tipo"),T)
		print(str("Valor total: R$"),CO*X)  
	elif(CO>500):
		X=0,65
		print(CO,("KWH"),str("tipo"),T)
		print(str("Valor total: R$"),CO*X)
	elif(CO<=1000):	
		X=0.55
		print(CO,"KWH",str("tipo"),T)
		print(str("Valor total: R$"),CO*X)
	elif(CO>1000):
		X=0.60
		print(CO,"KWH",str("tipo"),T)
		print(str("Valor total: R$"),CO*X)
	elif(CO==5000):
		X=0.55
		print(CO,"KWH",str("tipo"),T)
		print(str("Valor total: R$"),CO*X)
	elif(CO>5000):
		X=0.60
		print(CO,"KWH",str("tipo"),T)
		print(str("Valor total: R$")CO*X)
	
else:
	print(CO,"KWH",str("tipo"),T)
	print("Dados invalido")
-- ERROR:
File "XXXX", line 32
    print(str("Valor total: R$")CO*X)
                                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:53:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,C,I]: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500):
		X=0.44
		print(CO,"KWH",str("tipo"),T)
		print(str("Valor total: R$"),CO*X)  
	elif(CO>500):
		X=0,65
		print(CO,("KWH"),str("tipo"),T)
		print(str("Valor total: R$"),CO*X)
	elif(CO<=1000):	
		X=0.55
		print(CO,"KWH",str("tipo"),T)
		print(str("Valor total: R$"),CO*X)
	elif(CO>1000):
		X=0.60
		print(CO,"KWH",str("tipo"),T)
		print(str("Valor total: R$"),CO*X)
	elif(CO==5000):
		X=0.55
		print(CO,"KWH",str("tipo"),T)
		print(str("Valor total: R$"),CO*X)
	elif(CO>5000):
		X=0.60
		print(CO,"KWH",str("tipo"),T)
		print(str("Valor total: R$"),CO*X)
	
else:
	print(CO,"KWH",str("tipo"),T)
	print("Dados invalido")
-- OUTPUT:
-56.0 KWH tipo I
Valor total: R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:55:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,C,I]: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500):
		X=0.44
		print(CO,"KWH",str("tipo"),T)
		print(str("Valor total: R$"),round((CO*X),2))  
	elif(CO>500):
		X=0,65
		print(CO,("KWH"),str("tipo"),T)
		print(str("Valor total: R$"),round((CO*X),2))
	elif(CO<=1000):	
		X=0.55
		print(CO,"KWH",str("tipo"),T)
		print(str("Valor total: R$"),round((CO*X),2))
	elif(CO>1000):
		X=0.60
		print(CO,"KWH",str("tipo"),T)
		print(str("Valor total: R$"),round((CO*X),2))
	elif(CO==5000):
		X=0.55
		print(CO,"KWH",str("tipo"),T)
		print(str("Valor total: R$"),round((CO*X),2))
	elif(CO>5000):
		X=0.60
		print(CO,"KWH",str("tipo"),T)
		print(str("Valor total: R$"),round((CO*X),2))
	
else:
	print(CO,"KWH",str("tipo"),T)
	print("Dados invalido")
-- OUTPUT:
-56.0 KWH tipo I
Valor total: R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:59:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,C,I]: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500):
		X=CO*0.44
		print(CO,"KWH",str("tipo"),T)
		print(str("Valor total: R$"),round((X),2))  
	elif(CO>500):
		X=CO*0,65
		print(CO,("KWH"),str("tipo"),T)
		print(str("Valor total: R$"),round((X),2))
	elif(CO<=1000):	
		X=CO*0.55
		print(CO,"KWH",str("tipo"),T)
		print(str("Valor total: R$"),round((X),2))
	elif(CO>1000):
		X=CO*0.60
		print(CO,"KWH",str("tipo"),T)
		print(str("Valor total: R$"),round((X),2))
	elif(CO==5000):
		X=CO*0.55
		print(CO,"KWH",str("tipo"),T)
		print(str("Valor total: R$"),round((X),2))
	elif(CO>5000):
		X=CO*0.60
		print(CO,"KWH",str("tipo"),T)
		print(str("Valor total: R$"),round((X),2))
	
else:
	print(CO,"KWH",str("tipo"),T)
	print("Dados invalido")
-- OUTPUT:
-56.0 KWH tipo I
Valor total: R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:59:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,C,I]: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500):
		X=CO*0.44
		print(CO,"KWH",str("tipo"),T)
		print(str("Valor total: R$"),round((X),2))  
	elif(CO>500):
		X=CO*0,65
		print(CO,("KWH"),str("tipo"),T)
		print(str("Valor total: R$"),round((X),2))
	elif(CO<=1000):	
		X=CO*0.55
		print(CO,"KWH",str("tipo"),T)
		print(str("Valor total: R$"),round((X),2))
	elif(CO>1000):
		X=CO*0.60
		print(CO,"KWH",str("tipo"),T)
		print(str("Valor total: R$"),round((X),2))
	elif(CO==5000):
		X=CO*0.55
		print(CO,"KWH",str("tipo"),T)
		print(str("Valor total: R$"),round((X),2))
	elif(CO>5000):
		X=CO*0.60
		print(CO,"KWH",str("tipo"),T)
		print(str("Valor total: R$"),round((X),2))
	
else:
	print(CO,"KWH",str("tipo"),T)
	print("Dados invalido")
-- OUTPUT:
-56.0 KWH tipo I
Valor total: R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:00:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,C,I]: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500):
		X=CO*0.44
		print(CO,"KWH",str("tipo"),T)
		print(str("Valor total: R$"),X)  
	elif(CO>500):
		X=CO*0,65
		print(CO,("KWH"),str("tipo"),T)
		print(str("Valor total: R$"),X)
	elif(CO<=1000):	
		X=CO*0.55
		print(CO,"KWH",str("tipo"),T)
		print(str("Valor total: R$"),X)
	elif(CO>1000):
		X=CO*0.60
		print(CO,"KWH",str("tipo"),T)
		print(str("Valor total: R$"),X)
	elif(CO==5000):
		X=CO*0.55
		print(CO,"KWH",str("tipo"),T)
		print(str("Valor total: R$"),X)
	elif(CO>5000):
		X=CO*0.60
		print(CO,"KWH",str("tipo"),T)
		print(str("Valor total: R$"),X)
	
else:
	print(CO,"KWH",str("tipo"),T)
	print("Dados invalido")
-- OUTPUT:
-56.0 KWH tipo I
Valor total: R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:03:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,C,I]: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500):
		X=CO*0.44
		print(CO,"KWH",str("tipo"),T)
		print(str("Valor total: R$"),X)  
	elif(CO>500):
		X=CO*0,65
		print(CO,("KWH"),str("tipo"),T)
		print(str("Valor total: R$"),X)
	elif(CO<=1000):	
		X= CO * 0.55
		print(CO,"KWH",str("tipo"),T)
		print(str("Valor total: R$"),X)
	elif(CO>1000):
		X= CO * 0.60
		print(CO,"KWH",str("tipo"),T)
		print(str("Valor total: R$"),X)
	elif(CO==5000):
		X= CO * 0.55
		print(CO,"KWH",str("tipo"),T)
		print(str("Valor total: R$"),X)
	elif(CO>5000):
		X= CO * 0.60
		print(CO,"KWH",str("tipo"),T)
		print(str("Valor total: R$"),X)
	
else:
	print(CO,"KWH",str("tipo"),T)
	print("Dados invalido")
-- EXECUTION TIME:
0.199593
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
-56.0 KWH tipo I
Valor total: R$ -24.64
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
955.5 KWH tipo R
Valor total: R$ (0.0, 65)
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:03:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,C,I]: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500):
		X=CO*0.44
		print(CO,"KWH",str("tipo"),T)
		print(str("Valor total: R$"),X)  
	elif(CO>500):
		X=CO*0,65
		print(CO,("KWH"),str("tipo"),T)
		print(str("Valor total: R$"),X)
	elif(CO<=1000):	
		X= CO * 0.55
		print(CO,"KWH",str("tipo"),T)
		print(str("Valor total: R$"),X)
	elif(CO>1000):
		X= CO * 0.60
		print(CO,"KWH",str("tipo"),T)
		print(str("Valor total: R$"),X)
	elif(CO==5000):
		X= CO * 0.55
		print(CO,"KWH",str("tipo"),T)
		print(str("Valor total: R$"),X)
	elif(CO>5000):
		X= CO * 0.60
		print(CO,"KWH",str("tipo"),T)
		print(str("Valor total: R$"),X)
	
else:
	print(CO,"KWH",str("tipo"),T)
	print("Dados invalido")
-- OUTPUT:
-56.0 KWH tipo I
Valor total: R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:06:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,C,I]: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500):
		X=CO*0.44
		print(CO,"KWH","e","tipo",T)
		print(str("Valor total: R$"),X)  
	elif(CO>500):
		X=CO*0,65
		print(CO,("KWH"),"e","tipo",T)
		print(str("Valor total: R$"),X)
	elif(CO<=1000):	
		X= CO * 0.55
		print(CO,"KWH","e","tipo",T)
		print(str("Valor total: R$"),X)
	elif(CO>1000):
		X= CO * 0.60
		print(CO,"KWH",",","tipo",T)
		print(str("Valor total: R$"),X)
	elif(CO==5000):
		X= CO * 0.55
		print(CO,"KWH","e","tipo",T)
		print(str("Valor total: R$"),X)
	elif(CO>5000):
		X= CO * 0.60
		print(CO,"KWH","e","tipo",T)
		print(str("Valor total: R$"),X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- OUTPUT:
-56.0 KWH e tipo I
Valor total: R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:06:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,C,I]: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500):
		X=CO*0.44
		print(CO,"KWH","e","tipo",T)
		print(str("Valor total: R$"),X)  
	elif(CO>500):
		X=CO*0,65
		print(CO,("KWH"),"e","tipo",T)
		print(str("Valor total: R$"),X)
	elif(CO<=1000):	
		X= CO * 0.55
		print(CO,"KWH","e","tipo",T)
		print(str("Valor total: R$"),X)
	elif(CO>1000):
		X= CO * 0.60
		print(CO,"KWH",",","tipo",T)
		print(str("Valor total: R$"),X)
	elif(CO==5000):
		X= CO * 0.55
		print(CO,"KWH","e","tipo",T)
		print(str("Valor total: R$"),X)
	elif(CO>5000):
		X= CO * 0.60
		print(CO,"KWH","e","tipo",T)
		print(str("Valor total: R$"),X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- OUTPUT:
-56.0 KWH e tipo I
Valor total: R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:06:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,C,I]: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500):
		X=CO*0.44
		print(CO,"KWH","e","tipo",T)
		print(str("Valor total: R$"),X)  
	elif(CO>500):
		X=CO*0,65
		print(CO,("KWH"),"e","tipo",T)
		print(str("Valor total: R$"),X)
	elif(CO<=1000):	
		X= CO * 0.55
		print(CO,"KWH","e","tipo",T)
		print(str("Valor total: R$"),X)
	elif(CO>1000):
		X= CO * 0.60
		print(CO,"KWH",",","tipo",T)
		print(str("Valor total: R$"),X)
	elif(CO==5000):
		X= CO * 0.55
		print(CO,"KWH","e","tipo",T)
		print(str("Valor total: R$"),X)
	elif(CO>5000):
		X= CO * 0.60
		print(CO,"KWH","e","tipo",T)
		print(str("Valor total: R$"),X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- EXECUTION TIME:
0.144075
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
-56.0 KWH e tipo I
Valor total: R$ -24.64
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
955.5 KWH e tipo R
Valor total: R$ (0.0, 65)
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:06:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,C,I]: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500):
		X=CO*0.44
		print(CO,"KWH","e","tipo",T)
		print(str("Valor total: R$"),X)  
	elif(CO>500):
		X=CO*0,65
		print(CO,("KWH"),"e","tipo",T)
		print(str("Valor total: R$"),X)
	elif(CO<=1000):	
		X= CO * 0.55
		print(CO,"KWH","e","tipo",T)
		print(str("Valor total: R$"),X)
	elif(CO>1000):
		X= CO * 0.60
		print(CO,"KWH",",","tipo",T)
		print(str("Valor total: R$"),X)
	elif(CO==5000):
		X= CO * 0.55
		print(CO,"KWH","e","tipo",T)
		print(str("Valor total: R$"),X)
	elif(CO>5000):
		X= CO * 0.60
		print(CO,"KWH","e","tipo",T)
		print(str("Valor total: R$"),X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- OUTPUT:
-56.0 KWH e tipo I
Valor total: R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:06:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,C,I]: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500):
		X=CO*0.44
		print(CO,"KWH","e","tipo",T)
		print(str("Valor total: R$"),X)  
	elif(CO>500):
		X=CO*0,65
		print(CO,("KWH"),"e","tipo",T)
		print(str("Valor total: R$"),X)
	elif(CO<=1000):	
		X= CO * 0.55
		print(CO,"KWH","e","tipo",T)
		print(str("Valor total: R$"),X)
	elif(CO>1000):
		X= CO * 0.60
		print(CO,"KWH","e","tipo",T)
		print(str("Valor total: R$"),X)
	elif(CO==5000):
		X= CO * 0.55
		print(CO,"KWH","e","tipo",T)
		print(str("Valor total: R$"),X)
	elif(CO>5000):
		X= CO * 0.60
		print(CO,"KWH","e","tipo",T)
		print(str("Valor total: R$"),X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- EXECUTION TIME:
0.215734
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
-56.0 KWH e tipo I
Valor total: R$ -24.64
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
955.5 KWH e tipo R
Valor total: R$ (0.0, 65)
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:06:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,C,I]: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500):
		X=CO*0.44
		print(CO,"KWH","e","tipo",T)
		print(str("Valor total: R$"),X)  
	elif(CO>500):
		X=CO*0,65
		print(CO,("KWH"),"e","tipo",T)
		print(str("Valor total: R$"),X)
	elif(CO<=1000):	
		X= CO * 0.55
		print(CO,"KWH","e","tipo",T)
		print(str("Valor total: R$"),X)
	elif(CO>1000):
		X= CO * 0.60
		print(CO,"KWH","e","tipo",T)
		print(str("Valor total: R$"),X)
	elif(CO==5000):
		X= CO * 0.55
		print(CO,"KWH","e","tipo",T)
		print(str("Valor total: R$"),X)
	elif(CO>5000):
		X= CO * 0.60
		print(CO,"KWH","e","tipo",T)
		print(str("Valor total: R$"),X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- OUTPUT:
-56.0 KWH e tipo I
Valor total: R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:07:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,C,I]: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500):
		X=CO*0.44
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)  
	elif(CO>500):
		X=CO*0,65
		print(CO,("KWH"),"e","tipo",T)
		print("Valor total: R$",X)
	elif(CO<=1000):	
		X= CO * 0.55
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>1000):
		X= CO * 0.60
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO==5000):
		X= CO * 0.55
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>5000):
		X= CO * 0.60
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- OUTPUT:
-56.0 KWH e tipo I
Valor total: R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:08:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,C,I]: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500):
		X=CO*0.44
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)  
	elif(CO>500):
		X=CO*0,65
		print(CO,("KWH"),"e","tipo",T)
		print("Valor total: R$",X)
	elif(CO<=1000):	
		X= CO * 0.55
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>1000):
		X= CO * 0.60
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO==5000):
		X= CO * 0.55
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>5000):
		X= CO * 0.60
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- OUTPUT:
-56.0 KWH e tipo I
Valor total: R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:11:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,C,I]: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500):
		Y=0.44
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)  
	elif(CO>500):
		Y=0.65
		X= (CO * Y)
		print(CO,("KWH"),"e","tipo",T)
		print("Valor total: R$",X)
	elif(CO<=1000):	
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>1000):
		Y=0.60
		X= (CO * 0.60)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO==5000):
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>5000):
		Y=0.60
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- OUTPUT:
-56.0 KWH e tipo I
Valor total: R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:11:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,C,I]: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500):
		Y=0.44
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)  
	elif(CO>500):
		Y=0.65
		X= (CO * Y)
		print(CO,("KWH"),"e","tipo",T)
		print("Valor total: R$",X)
	elif(CO<=1000):	
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>1000):
		Y=0.60
		X= (CO * 0.60)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO==5000):
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>5000):
		Y=0.60
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- OUTPUT:
-56.0 KWH e tipo I
Valor total: R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:14:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,C,I]: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500)or(T==R):
		Y=0.44
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)  
	elif(CO>500):
		Y=0.65
		X= (CO * Y)
		print(CO,("KWH"),"e","tipo",T)
		print("Valor total: R$",X)
	elif(CO<=1000):	
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>1000):
		Y=0.60
		X= (CO * 0.60)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO==5000):
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>5000):
		Y=0.60
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- OUTPUT:
-56.0 KWH e tipo I
Valor total: R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:15:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,C,I]: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500)or(T==R):
		Y=0.44
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)  
	elif(CO>500)or(T==R):
		Y=0.65
		X= (CO * Y)
		print(CO,("KWH"),"e","tipo",T)
		print("Valor total: R$",X)
	elif(CO<=1000)or(T==C):	
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>1000)or(T==C):
		Y=0.60
		X= (CO * 0.60)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO==5000)or(T==I):
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>5000)or(T==I):
		Y=0.60
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- OUTPUT:
-56.0 KWH e tipo I
Valor total: R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:17:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,C,I]: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500):
		Y=0.44
		X=(CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)  
	elif(CO>500):
		Y=0.65
		X= (CO * Y)
		print(CO,("KWH"),"e","tipo",T)
		print("Valor total: R$",X)
	elif(CO<=1000):	
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>1000):
		Y=0.60
		X= (CO * 0.60)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO==5000):
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>5000):
		Y=0.60
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- EXECUTION TIME:
0.220975
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
-56.0 KWH e tipo I
Valor total: R$ -24.64
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
955.5 KWH e tipo R
Valor total: R$ 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:17:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,C,I]: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500):
		Y=0.44
		X=(CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)  
	elif(CO>500):
		Y=0.65
		X= (CO * Y)
		print(CO,("KWH"),"e","tipo",T)
		print("Valor total: R$",X)
	elif(CO<=1000):	
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>1000):
		Y=0.60
		X= (CO * 0.60)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO==5000):
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>5000):
		Y=0.60
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- OUTPUT:
-56.0 KWH e tipo I
Valor total: R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:19:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,C,I]: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500)or(T==R):
		Y=0.44
		X=(CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)  
	elif(CO>500)or(T==R):
		Y=0.65
		X= (CO * Y)
		print(CO,("KWH"),"e","tipo",T)
		print("Valor total: R$",X)
	elif(CO<=1000):	
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>1000):
		Y=0.60
		X= (CO * 0.60)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO==5000):
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>5000):
		Y=0.60
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- OUTPUT:
-56.0 KWH e tipo I
Valor total: R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:20:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,C,I]: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500)or(T==R):
		Y=0.44
		X=(CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)  
	elif(CO>500):
		Y=0.65
		X= (CO * Y)
		print(CO,("KWH"),"e","tipo",T)
		print("Valor total: R$",X)
	elif(CO<=1000):	
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>1000):
		Y=0.60
		X= (CO * 0.60)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO==5000):
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>5000):
		Y=0.60
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- OUTPUT:
-56.0 KWH e tipo I
Valor total: R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:20:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,C,I]: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500)or(T==R):
		Y=0.44
		X=(CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)  
	elif(CO>500):
		Y=0.65
		X= (CO * Y)
		print(CO,("KWH"),"e","tipo",T)
		print("Valor total: R$",X)
	elif(CO<=1000):	
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>1000):
		Y=0.60
		X= (CO * 0.60)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO==5000):
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>5000):
		Y=0.60
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- OUTPUT:
-56.0 KWH e tipo I
Valor total: R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:21:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,C,I]: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500)or(T==R):
		Y=0.44
		X=(CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)  
	elif(CO>500)or(T==R):
		Y=0.65
		X= (CO * Y)
		print(CO,("KWH"),"e","tipo",T)
		print("Valor total: R$",X)
	elif(CO<=1000)or(T==C):	
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>1000)or(T==C):
		Y=0.60
		X= (CO * 0.60)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO==5000)or(T==I):
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>5000)or(T==I):
		Y=0.60
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- OUTPUT:
-56.0 KWH e tipo I
Valor total: R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:21:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,C,I]: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500):
		Y=0.44
		X=(CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)  
	elif(CO>500)or(T==R):
		Y=0.65
		X= (CO * Y)
		print(CO,("KWH"),"e","tipo",T)
		print("Valor total: R$",X)
	elif(CO<=1000)or(T==C):	
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>1000)or(T==C):
		Y=0.60
		X= (CO * 0.60)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO==5000)or(T==I):
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>5000)or(T==I):
		Y=0.60
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- OUTPUT:
-56.0 KWH e tipo I
Valor total: R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:23:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,C,I]: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500):
		Y=0.44
		X=(CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)  
	elif(CO>500)and(T==R):
		Y=0.65
		X= (CO * Y)
		print(CO,("KWH"),"e","tipo",T)
		print("Valor total: R$",X)
	elif(CO<=1000)and(T==C):	
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>1000)and(T==C):
		Y=0.60
		X= (CO * 0.60)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO==5000)and(T==I):
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>5000)and(T==I):
		Y=0.60
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- OUTPUT:
-56.0 KWH e tipo I
Valor total: R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:24:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,C,I]: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500):
		Y=0.44
		X=(CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)  
	elif(CO>500)or(T==R):
		Y=0.65
		X= (CO * Y)
		print(CO,("KWH"),"e","tipo",T)
		print("Valor total: R$",X)
	elif(CO<=1000)and(T==C):	
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>1000)and(T==C):
		Y=0.60
		X= (CO * 0.60)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO==5000)and(T==I):
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>5000)and(T==I):
		Y=0.60
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- OUTPUT:
-56.0 KWH e tipo I
Valor total: R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:24:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao[R,C,I]: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500):
		Y=0.44
		X=(CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)  
	elif(CO>500)or(T==R):
		Y=0.65
		X= (CO * Y)
		print(CO,("KWH"),"e","tipo",T)
		print("Valor total: R$",X)
	elif(CO<=1000)and(T==C):	
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>1000)and(T==C):
		Y=0.60
		X= (CO * 0.60)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO==5000)and(T==I):
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>5000)and(T==I):
		Y=0.60
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- OUTPUT:
-56.0 KWH e tipo I
Valor total: R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:26:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500):
		Y=0.44
		X=(CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)  
	elif(CO>500)or(T==R):
		Y=0.65
		X= (CO * Y)
		print(CO,("KWH"),"e","tipo",T)
		print("Valor total: R$",X)
	elif(CO<=1000)and(T==C):	
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>1000)and(T==C):
		Y=0.60
		X= (CO * 0.60)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO==5000)and(T==I):
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>5000)and(T==I):
		Y=0.60
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- OUTPUT:
-56.0 KWH e tipo I
Valor total: R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:26:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500):
		Y=0.44
		X=(CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)  
	elif(CO>500)or(T==R):
		Y=0.65
		X= (CO * Y)
		print(CO,("KWH"),"e","tipo",T)
		print("Valor total: R$",X)
	elif(CO<=1000)and(T==C):	
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>1000)and(T==C):
		Y=0.60
		X= (CO * 0.60)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO==5000)and(T==I):
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>5000)and(T==I):
		Y=0.60
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- OUTPUT:
-56.0 KWH e tipo I
Valor total: R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:26:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de instalacao: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500):
		Y=0.44
		X=(CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)  
	elif(CO>500)and(T==R):
		Y=0.65
		X= (CO * Y)
		print(CO,("KWH"),"e","tipo",T)
		print("Valor total: R$",X)
	elif(CO<=1000)and(T==C):	
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>1000)and(T==C):
		Y=0.60
		X= (CO * 0.60)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO==5000)and(T==I):
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>5000)and(T==I):
		Y=0.60
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- OUTPUT:
-56.0 KWH e tipo I
Valor total: R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:28:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de in: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500)and(T==R):
		Y=0.44
		X=(CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)  
	elif(CO>500)and(T==R):
		Y=0.65
		X= (CO * Y)
		print(CO,("KWH"),"e","tipo",T)
		print("Valor total: R$",X)
	elif(CO<=1000)and(T==C):	
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>1000)and(T==C):
		Y=0.60
		X= (CO * 0.60)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO==5000)and(T==I):
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>5000)and(T==I):
		Y=0.60
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    if (CO<=500)and(T==R):
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 11:59:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de in: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500)and(T==R):
		Y=0.44
		X=(CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)  
	elif(CO>500)and(T==R):
		Y=0.65
		X= (CO * Y)
		print(CO,("KWH"),"e","tipo",T)
		print("Valor total: R$",X)
	elif(CO<=1000)and(T==C):	
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>1000)and(T==C):
		Y=0.60
		X= (CO * 0.60)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO==5000)and(T==I):
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>5000)and(T==I):
		Y=0.60
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- EXECUTION TIME:
0.203282
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1679/1101/main.py", line 9, in <module>
    if (CO<=500)and(T==R):
NameError: name 'R' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:59:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de in: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500)and(T==R):
		Y=0.44
		X=(CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)  
	elif(CO>500)and(T==R):
		Y=0.65
		X= (CO * Y)
		print(CO,("KWH"),"e","tipo",T)
		print("Valor total: R$",X)
	elif(CO<=1000)and(T==C):	
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>1000)and(T==C):
		Y=0.60
		X= (CO * 0.60)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO==5000)and(T==I):
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>5000)and(T==I):
		Y=0.60
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    if (CO<=500)and(T==R):
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:00:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de in: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500)and(T==R):
		Y=0.44
		X=(CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)  
	elif(CO>500)and(T==R):
		Y=0.65
		X= (CO * Y)
		print(CO,("KWH"),"e","tipo",T)
		print("Valor total: R$",X)
	elif(CO<=1000):	
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>1000)and:
		Y=0.60
		X= (CO * 0.60)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO==5000):
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>5000)and(T==I):
		Y=0.60
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- ERROR:
File "XXXX", line 24
    elif(CO>1000)and:
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:00:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de in: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500)and(T==R):
		Y=0.44
		X=(CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)  
	elif(CO>500)and(T==R):
		Y=0.65
		X= (CO * Y)
		print(CO,("KWH"),"e","tipo",T)
		print("Valor total: R$",X)
	elif(CO<=1000):	
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>1000):
		Y=0.60
		X= (CO * 0.60)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO==5000):
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>5000)and(T==I):
		Y=0.60
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    if (CO<=500)and(T==R):
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:00:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de in: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500):
		Y=0.44
		X=(CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)  
	elif(CO>500)and(T==R):
		Y=0.65
		X= (CO * Y)
		print(CO,("KWH"),"e","tipo",T)
		print("Valor total: R$",X)
	elif(CO<=1000):	
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>1000):
		Y=0.60
		X= (CO * 0.60)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO==5000):
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>5000)and(T==I):
		Y=0.60
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- OUTPUT:
-56.0 KWH e tipo I
Valor total: R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:01:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de in: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500):
		Y=0.44
		X=(CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)  
	elif(CO>500)or(T == R):
		Y=0.65
		X= (CO * Y)
		print(CO,("KWH"),"e","tipo",T)
		print("Valor total: R$",X)
	elif(CO<=1000):	
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>1000):
		Y=0.60
		X= (CO * 0.60)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO==5000):
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>5000)and(T==I):
		Y=0.60
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- OUTPUT:
-56.0 KWH e tipo I
Valor total: R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:02:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO=float(input("Consumo de energy: "))
T=input("Tipo de in: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500):
		Y=0.44
		X=(CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)  
	elif(CO>500)not(T == C):
		Y=0.65
		X= (CO * Y)
		print(CO,("KWH"),"e","tipo",T)
		print("Valor total: R$",X)
	elif(CO<=1000):	
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>1000):
		Y=0.60
		X= (CO * 0.60)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO==5000):
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>5000)and(T==I):
		Y=0.60
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- ERROR:
File "XXXX", line 14
    elif(CO>500)not(T == C):
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:02:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500):
		Y=0.44
		X=(CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)  
	elif(CO>500)and(T == R):
		Y=0.65
		X= (CO * Y)
		print(CO,("KWH"),"e","tipo",T)
		print("Valor total: R$",X)
	elif(CO<=1000):	
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>1000):
		Y=0.60
		X= (CO * 0.60)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO==5000):
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>5000)and(T==I):
		Y=0.60
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- OUTPUT:
-56.0 KWH e tipo I
Valor total: R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 12:02:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500):
		Y=0.44
		X=(CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)  
	elif(CO>500)and(T == R):
		Y=0.65
		X= (CO * Y)
		print(CO,("KWH"),"e","tipo",T)
		print("Valor total: R$",X)
	elif(CO<=1000):	
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>1000):
		Y=0.60
		X= (CO * 0.60)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO==5000):
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	elif(CO>5000)and(T==I):
		Y=0.60
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- EXECUTION TIME:
0.165467
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
-56.0 KWH e tipo I
Valor total: R$ -24.64
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:04:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500):
		Y=0.44
		X=(CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)  
	elif(CO>500)and:
		Y=0.65
		X= (CO * Y)
		print(CO,("KWH"),"e","tipo",T)
		print("Valor total: R$", X)
	elif(CO<=1000)and(T==C):	
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO>1000):
		Y=0.60
		X= (CO * 0.60)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO==5000):
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO>5000)and(T==I):
		Y=0.60
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- ERROR:
File "XXXX", line 14
    elif(CO>500)and:
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:04:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500):
		Y=0.44
		X=(CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)  
	elif(CO>500):
		Y=0.65
		X= (CO * Y)
		print(CO,("KWH"),"e","tipo",T)
		print("Valor total: R$", X)
	elif(CO<=1000)and(T==C):	
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO>1000):
		Y=0.60
		X= (CO * 0.60)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO==5000):
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO>5000)and(T==I):
		Y=0.60
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- OUTPUT:
-56.0 KWH e tipo I
Valor total: R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:05:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500):
		Y=0.44
		X=(CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)  
	elif(CO>500):
		A=0.65
		X= (CO * A)
		print(CO,("KWH"),"e","tipo",T)
		print("Valor total: R$", X)
	elif(CO<=1000)and(T==C):	
		P=0.55
		X= (CO * P)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO>1000):
		E=0.60
		X= (CO * E)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO==5000):
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO>5000)and(T==I):
		Y=0.60
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- OUTPUT:
-56.0 KWH e tipo I
Valor total: R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:06:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500)and(T==R):
		Y=0.44
		X=(CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)  
	elif(CO>500):
		A=0.65
		X= (CO * A)
		print(CO,("KWH"),"e","tipo",T)
		print("Valor total: R$", X)
	elif(CO<=1000)and(T==C):	
		P=0.55
		X= (CO * P)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO>1000):
		E=0.60
		X= (CO * E)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO==5000):
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO>5000)and(T==I):
		Y=0.60
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    if (CO<=500)and(T==R):
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:06:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500)and(T==R):
		Y=0.44
		X=(CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)  
	elif(CO>500):
		A=0.65
		X= (CO * A)
		print(CO,("KWH"),"e","tipo",T)
		print("Valor total: R$", X)
	elif(CO<=1000)and(T==C):	
		P=0.55
		X= (CO * P)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO>1000):
		E=0.60
		X= (CO * E)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO==5000)and(T==I):
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO>5000)and(T==I):
		Y=0.60
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    if (CO<=500)and(T==R):
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:07:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500)and(T==R):
		Y=0.44
		X=(CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)  
	elif(CO>500):
		A=0.65
		X= (CO * A)
		print(CO,("KWH"),"e","tipo",T)
		print("Valor total: R$", X)
	elif(CO<=1000)and(T==C):	
		P=0.55
		X= (CO * P)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO>1000)and(T==C):
		E=0.60
		X= (CO * E)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO==5000)and(T==I):
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO>5000)and(T==I):
		Y=0.60
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    if (CO<=500)and(T==R):
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:07:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in: ")

if (CO<=500)and(CO<=1000)and(CO>5000)and(CO>500)and(CO>1000):
	if (CO<=500)and(T==R):
		Y=0.44
		X=(CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)  
	elif(CO>500):
		A=0.65
		X= (CO * A)
		print(CO,("KWH"),"e","tipo",T)
		print("Valor total: R$", X)
	elif(CO<=1000)and(T==C):	
		P=0.55
		X= (CO * P)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO>1000)and(T==C):
		E=0.60
		X= (CO * E)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO==5000)and(T==I):
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO>5000)and(T==I):
		Y=0.60
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- OUTPUT:
-56.0 KWH e tipo I
Dados invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:08:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in: ")

if (CO<=500)and(CO<=1000)and(CO>5000)and(CO>500)and(CO>1000)and(T==R)and(T==C)and(T==I):
	if (CO<=500)and(T==R):
		Y=0.44
		X=(CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)  
	elif(CO>500):
		A=0.65
		X= (CO * A)
		print(CO,("KWH"),"e","tipo",T)
		print("Valor total: R$", X)
	elif(CO<=1000)and(T==C):	
		P=0.55
		X= (CO * P)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO>1000)and(T==C):
		E=0.60
		X= (CO * E)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO==5000)and(T==I):
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO>5000)and(T==I):
		Y=0.60
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- OUTPUT:
-56.0 KWH e tipo I
Dados invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:09:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in: ")

if (CO<=500)and(CO<=1000)and(CO>5000)and(CO>500)and(CO>1000)and(T==R)and(T==C)and(T==I):
	if (CO<=500)and(T==R):
		Y=0.44
		X=(CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)  
	elif(CO>500)and(T==R):
		A=0.65
		X= (CO * A)
		print(CO,("KWH"),"e","tipo",T)
		print("Valor total: R$", X)
	elif(CO<=1000)and(T==C):	
		P=0.55
		X= (CO * P)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO>1000)and(T==C):
		E=0.60
		X= (CO * E)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO==5000)and(T==I):
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO>5000)and(T==I):
		Y=0.60
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- OUTPUT:
-56.0 KWH e tipo I
Dados invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:10:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000)or(T==R)or(T==C)or(T==I):
	if (CO<=500)and(T==R):
		Y=0.44
		X=(CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)  
	elif(CO>500)and(T==R):
		A=0.65
		X= (CO * A)
		print(CO,("KWH"),"e","tipo",T)
		print("Valor total: R$", X)
	elif(CO<=1000)and(T==C):	
		P=0.55
		X= (CO * P)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO>1000)and(T==C):
		E=0.60
		X= (CO * E)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO==5000)and(T==I):
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO>5000)and(T==I):
		Y=0.60
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    if (CO<=500)and(T==R):
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:10:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000)or(T==R)or(T==C)or(T==I):
	if (CO<=500)and(T==R):
		Y=0.44
		X=(CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)  
	elif(CO>500)OR(T==R):
		A=0.65
		X= (CO * A)
		print(CO,("KWH"),"e","tipo",T)
		print("Valor total: R$", X)
	elif(CO<=1000)and(T==C):	
		P=0.55
		X= (CO * P)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO>1000)and(T==C):
		E=0.60
		X= (CO * E)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO==5000)and(T==I):
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO>5000)and(T==I):
		Y=0.60
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- ERROR:
File "XXXX", line 14
    elif(CO>500)OR(T==R):
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:10:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000)or(T==R)or(T==C)or(T==I):
	if (CO<=500)and(T==R):
		Y=0.44
		X=(CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)  
	elif(CO>500)or(T==R):
		A=0.65
		X= (CO * A)
		print(CO,("KWH"),"e","tipo",T)
		print("Valor total: R$", X)
	elif(CO<=1000)and(T==C):	
		P=0.55
		X= (CO * P)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO>1000)and(T==C):
		E=0.60
		X= (CO * E)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO==5000)and(T==I):
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO>5000)and(T==I):
		Y=0.60
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    if (CO<=500)and(T==R):
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:10:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000)or(T==R)or(T==C)or(T==I):
	if (CO<=500)and(T==R):
		Y=0.44
		X=(CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)  
		elif(CO>500)or(T==R):
		A=0.65
		X= (CO * A)
		print(CO,("KWH"),"e","tipo",T)
		print("Valor total: R$", X)
		elif(CO<=1000)and(T==C):	
		P=0.55
		X= (CO * P)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
		elif(CO>1000)and(T==C):
		E=0.60
		X= (CO * E)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
		elif(CO==5000)and(T==I):
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
		elif(CO>5000)and(T==I):
		Y=0.60
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- ERROR:
File "XXXX", line 14
    elif(CO>500)or(T==R):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:11:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000)or(T==R)or(T==C)or(T==I):
	if (CO<=500)and(T==R):
		Y=0.44
		X=(CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)  
		elif(CO>500)or(T==R):
			A=0.65
			X= (CO * A)
			print(CO,("KWH"),"e","tipo",T)
			print("Valor total: R$", X)
		elif(CO<=1000)and(T==C):	
			P=0.55
			X= (CO * P)
			print(CO,"KWH","e","tipo",T)
			print("Valor total: R$", X)
		elif(CO>1000)and(T==C):
			E=0.60
			X= (CO * E)
			print(CO,"KWH","e","tipo",T)
			print("Valor total: R$", X)
		elif(CO==5000)and(T==I):
			Y=0.55
			X= (CO * Y)
			print(CO,"KWH","e","tipo",T)
			print("Valor total: R$", X)
		elif(CO>5000)and(T==I):
			Y=0.60
			X= (CO * Y)
			print(CO,"KWH","e","tipo",T)
			print("Valor total: R$", X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- ERROR:
File "XXXX", line 14
    elif(CO>500)or(T==R):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:12:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in: ")

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000)or(T==R)or(T==C)or(T==I):
	if (CO<=500)and(T==R):
		Y=0.44
		X=(CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)  
	elif(CO>500):
		A=0.65
		X= (CO * A)
		print(CO,("KWH"),"e","tipo",T)
		print("Valor total: R$", X)
	elif(CO<=1000)and(T==C):	
		P=0.55
		X= (CO * P)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO>1000)and(T==C):
		E=0.60
		X= (CO * E)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO==5000)and(T==I):
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO>5000)and(T==I):
		Y=0.60
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    if (CO<=500)and(T==R):
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:12:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in: ".upper())

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000)or(T==R)or(T==C)or(T==I):
	if (CO<=500)and(T==R):
		Y=0.44
		X=(CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)  
	elif(CO>500):
		A=0.65
		X= (CO * A)
		print(CO,("KWH"),"e","tipo",T)
		print("Valor total: R$", X)
	elif(CO<=1000)and(T==C):	
		P=0.55
		X= (CO * P)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO>1000)and(T==C):
		E=0.60
		X= (CO * E)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO==5000)and(T==I):
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO>5000)and(T==I):
		Y=0.60
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    if (CO<=500)and(T==R):
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:12:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in: ".upper())

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000)or(T==R)or(T==C)or(T==I):
	if (CO<=500)and(T==R):
		Y=0.44
		X=(CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)  
	elif(CO>500):
		A=0.65
		X= (CO * A)
		print(CO,("KWH"),"e","tipo",T)
		print("Valor total: R$", X)
	elif(CO<=1000)and(T==C):	
		P=0.55
		X= (CO * P)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO>1000)and(T==C):
		E=0.60
		X= (CO * E)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO==5000)and(T==I):
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO>5000)and(T==I):
		Y=0.60
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    if (CO<=500)and(T==R):
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:13:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in: ".upper())

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000)or(T==R)or(T==C)or(T==I):
	if (CO<=500)and(T==R):
		Y=0.44
		X=(CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$",X)  
	elif(CO>500):
		A=0.65
		X= (CO * A)
		print(CO,("KWH"),"e","tipo",T)
		print("Valor total: R$", X)
	elif(CO<=1000)and(T==C):	
		P=0.55
		X= (CO * P)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO>1000)and(T==C):
		E=0.60
		X= (CO * E)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO==5000)and(T==I):
		Y=0.55
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO>5000)and(T==I):
		Y=0.60
		X= (CO * Y)
		print(CO,"KWH","e","tipo",T)
		print("Valor total: R$", X)
	
else:
	print(CO,"KWH","e","tipo",T)
	print("Dados invalido")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    if (CO<=500)and(T==R):
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:15:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in: ".upper())

if (CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000)or(T==R)or(T==C)or(T==I):
	if (CO<=500)and(T==R):
		Y=0.44
		X=(CO * Y)
		print(CO,"kWh","e","tipo",T)
		print("Valor total: R$",X)  
	elif (T==R) and      (CO > 500):
		A=0.65
		X= (CO * A)
		print(CO,("kWh"),"e","tipo",T)
		print("Valor total: R$", X)
	elif(CO<=1000)and(T==C):	
		P=0.55
		X= (CO * P)
		print(CO,"kWh","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO>1000)and(T==C):
		E=0.60
		X= (CO * E)
		print(CO,"kWh","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO==5000)and(T==I):
		Y=0.55
		X= (CO * Y)
		print(CO,"kWh","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO>5000)and(T==I):
		Y=0.60
		X= (CO * Y)
		print(CO,"kWh","e","tipo",T)
		print("Valor total: R$", X)
	
else:
	print(CO,"kWh","e","tipo",T)
	print("Dados invalido")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    if (CO<=500)and(T==R):
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:22:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in: ".upper())

if (CO>0):
	if(CO<=500)and(T==R):
		y=0.44
		X=(CO*y)
		print(CO,"kWh","e","tipo",T)
		print("Valor total: R$",X)
	else:
		if(CO>500)and(T==R):
			y=0.65
			X=(CO*y)
			print(CO,"kWh","e","tipo",T)
			print("Valor total: R$",X)
	
-- OUTPUT:
TIPO DE IN:
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:27:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in: ".upper())

if (CO>0):
	if(CO<=500)and(T==R):
		y=0.44
		X=(CO*y)
		print(CO,"kWh","e","tipo",T)
		print("Valor total: R$",X)
	else:
		if(CO>500):
			y=0.65
			X=(CO*y)
			print(CO,"kWh","e","tipo",T)
			print("Valor total: R$",X)
		else:
			if(CO<=1000)and(T==C):
				y=0.55
				X=(CO*y)
				print(CO,"kWh","e","tipo",T)
				print("Valor total: R$",X)
			else:
				if(CO>1000)and(T==C):
					y=0.60
					X=(CO*y)
					print(CO,"kWh","e","tipo",T)
					print("Valor total: R$",X)
				else:
					if(CO<=5000)and(T==C):
						y=0.44
						X=(CO*y)
						print(CO,"kWh","e","tipo",T)
						print("Valor total: R$",X)
					else:
						if(CO>5000)and(T==C):
							y=0.44
							X=(CO*y)
							print(CO,"kWh","e","tipo",T)
							print("Valor total: R$",X)
else:
	print(CO,"kWh","e","tipo",T)
	print("Dados invalido")
-- OUTPUT:
TIPO DE IN: -56.0 kWh e tipo I
Dados invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:31:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in: ".upper())

if (CO>0):
	if(T==R)
		if (CO<=500):
			y=0.44
			X=(CO*y)
			print(CO,"kWh","e","tipo",T)
			print("Valor total: R$",X)
		else:
			if(CO>500):
				y=0.65
				X=(CO*y)
				print(CO,"kWh","e","tipo",T)
				print("Valor total: R$",X)
			else:
				if(T==C)
					if(CO<=1000):
						y=0.55
						X=(CO*y)
						print(CO,"kWh","e","tipo",T)
						print("Valor total: R$",X)
					else:
						if(CO>1000):
						y=0.60
						X=(CO*y)
						print(CO,"kWh","e","tipo",T)
						print("Valor total: R$",X)
					else:
						if(T==I)
							if(CO<=5000):
							y=0.44
							X=(CO*y)
							print(CO,"kWh","e","tipo",T)
							print("Valor total: R$",X)
							else:
								if(CO>5000):
								y=0.44
								X=(CO*y)
								print(CO,"kWh","e","tipo",T)
								print("Valor total: R$",X)
else:
	print(CO,"kWh","e","tipo",T)
	print("Dados invalido")
-- ERROR:
File "XXXX", line 9
    if(T==R)
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:32:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in: ".upper())

if (CO>0):
	if(T==R):
		if (CO<=500):
			y=0.44
			X=(CO*y)
			print(CO,"kWh","e","tipo",T)
			print("Valor total: R$",X)
		else:
			if(CO>500):
				y=0.65
				X=(CO*y)
				print(CO,"kWh","e","tipo",T)
				print("Valor total: R$",X)
			else:
				if(T==C):
					if(CO<=1000):
						y=0.55
						X=(CO*y)
						print(CO,"kWh","e","tipo",T)
						print("Valor total: R$",X)
					else:
						if(CO>1000):
						y=0.60
						X=(CO*y)
						print(CO,"kWh","e","tipo",T)
						print("Valor total: R$",X)
					else:
						if(T==I):
							if(CO<=5000):
							y=0.44
							X=(CO*y)
							print(CO,"kWh","e","tipo",T)
							print("Valor total: R$",X)
							else:
								if(CO>5000):
								y=0.44
								X=(CO*y)
								print(CO,"kWh","e","tipo",T)
								print("Valor total: R$",X)
else:
	print(CO,"kWh","e","tipo",T)
	print("Dados invalido")
-- ERROR:
File "XXXX", line 30
    y=0.60
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:32:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in: ".upper())

if (CO>0):
	if(T==R):
		if (CO<=500):
			y=0.44
			X=(CO*y)
			print(CO,"kWh","e","tipo",T)
			print("Valor total: R$",X)
		else:
			if(CO>500):
				y=0.65
				X=(CO*y)
				print(CO,"kWh","e","tipo",T)
				print("Valor total: R$",X)
			else:
				if(T==C):
					if(CO<=1000):
						y=0.55
						X=(CO*y)
						print(CO,"kWh","e","tipo",T)
						print("Valor total: R$",X)
					else:
						if(CO>1000):
							y=0.60
							X=(CO*y)
							print(CO,"kWh","e","tipo",T)
							print("Valor total: R$",X)
						else:
							if(T==I):
								if(CO<=5000):
									y=0.44
									X=(CO*y)
									print(CO,"kWh","e","tipo",T)
									print("Valor total: R$",X)
								else:
									if(CO>5000):
										y=0.44
										X=(CO*y)
										print(CO,"kWh","e","tipo",T)
										print("Valor total: R$",X)
else:
	print(CO,"kWh","e","tipo",T)
	print("Dados invalido")
-- OUTPUT:
TIPO DE IN: -56.0 kWh e tipo I
Dados invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:35:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in: ".upper())

if (CO>0):
	if(T=="R"):
		if (CO<=500):
			y=0.44
			X=(CO*y)
			print(CO,"kWh","e","tipo",T)
			print("Valor total: R$",X)
		else:
			if(CO>500):
				y=0.65
				X=(CO*y)
				print(CO,"kWh","e","tipo",T)
				print("Valor total: R$",X)
			else:
				if(T=="C"):
					if(CO<=1000):
						y=0.55
						X=(CO*y)
						print(CO,"kWh","e","tipo",T)
						print("Valor total: R$",X)
					else:
						if(CO>1000):
							y=0.60
							X=(CO*y)
							print(CO,"kWh","e","tipo",T)
							print("Valor total: R$",X)
						else:
							if(T=="I"):
								if(CO<=5000):
									y=0.44
									X=(CO*y)
									print(CO,"kWh","e","tipo",T)
									print("Valor total: R$",X)
								else:
									if(CO>5000):
										y=0.44
										X=(CO*y)
										print(CO,"kWh","e","tipo",T)
										print("Valor total: R$",X)
else:
	print(CO,"kWh","e","tipo",T)
	print("Dados invalido")
-- OUTPUT:
TIPO DE IN: -56.0 kWh e tipo I
Dados invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 12:35:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in: ".upper())

if (CO>0):
	if(T=="R"):
		if (CO<=500):
			y=0.44
			X=(CO*y)
			print(CO,"kWh","e","tipo",T)
			print("Valor total: R$",X)
		else:
			if(CO>500):
				y=0.65
				X=(CO*y)
				print(CO,"kWh","e","tipo",T)
				print("Valor total: R$",X)
			else:
				if(T=="C"):
					if(CO<=1000):
						y=0.55
						X=(CO*y)
						print(CO,"kWh","e","tipo",T)
						print("Valor total: R$",X)
					else:
						if(CO>1000):
							y=0.60
							X=(CO*y)
							print(CO,"kWh","e","tipo",T)
							print("Valor total: R$",X)
						else:
							if(T=="I"):
								if(CO<=5000):
									y=0.44
									X=(CO*y)
									print(CO,"kWh","e","tipo",T)
									print("Valor total: R$",X)
								else:
									if(CO>5000):
										y=0.44
										X=(CO*y)
										print(CO,"kWh","e","tipo",T)
										print("Valor total: R$",X)
else:
	print(CO,"kWh","e","tipo",T)
	print("Dados invalido")
-- EXECUTION TIME:
0.134961
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
TIPO DE IN: -56.0 kWh e tipo I
Dados invalido
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
TIPO DE IN: 955.5 kWh e tipo R
Valor total: R$ 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:35:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in: ".upper())

if (CO>0):
	if(T=="R"):
		if (CO<=500):
			y=0.44
			X=(CO*y)
			print(CO,"kWh","e","tipo",T)
			print("Valor total: R$",X)
		else:
			if(CO>500):
				y=0.65
				X=(CO*y)
				print(CO,"kWh","e","tipo",T)
				print("Valor total: R$",X)
			else:
				if(T=="C"):
					if(CO<=1000):
						y=0.55
						X=(CO*y)
						print(CO,"kWh","e","tipo",T)
						print("Valor total: R$",X)
					else:
						if(CO>1000):
							y=0.60
							X=(CO*y)
							print(CO,"kWh","e","tipo",T)
							print("Valor total: R$",X)
						else:
							if(T=="I"):
								if(CO<=5000):
									y=0.44
									X=(CO*y)
									print(CO,"kWh","e","tipo",T)
									print("Valor total: R$",X)
								else:
									if(CO>5000):
										y=0.44
										X=(CO*y)
										print(CO,"kWh","e","tipo",T)
										print("Valor total: R$",X)
else:
	print(CO,"kWh","e","tipo",T)
	print("Dados invalido")
-- OUTPUT:
TIPO DE IN: -56.0 kWh e tipo I
Dados invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 12:35:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in: ".upper())

if(CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000)or(T==R)or(T==C)or(T==I):
	if (CO<=500)and(T=="R"):
		Y=0.44
		X=(CO * Y)
		print(CO,"kWh","e","tipo",T)
		print("Valor total: R$",X)  
	elif (T=="R") and (CO > 500):
		A=0.65
		X= (CO * A)
		print(CO,("kWh"),"e","tipo",T)
		print("Valor total: R$", X)
	elif(CO<=1000)and(T=="C"):	
		P=0.55
		X= (CO * P)
		print(CO,"kWh","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO>1000)and(T=="C"):
		E=0.60
		X= (CO * E)
		print(CO,"kWh","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO==5000)and(T=="I"):
		Y=0.55
		X= (CO * Y)
		print(CO,"kWh","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO>5000)and(T=="I"):
		Y=0.60
		X= (CO * Y)
		print(CO,"kWh","e","tipo",T)
		print("Valor total: R$", X)
	
else:
	print(CO,"kWh","e","tipo",T)
	print("Dados invalido")
-- EXECUTION TIME:
0.211453
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
TIPO DE IN:
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
TIPO DE IN: 955.5 kWh e tipo R
Valor total: R$ 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:35:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in: ".upper())

if(CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000)or(T==R)or(T==C)or(T==I):
	if (CO<=500)and(T=="R"):
		Y=0.44
		X=(CO * Y)
		print(CO,"kWh","e","tipo",T)
		print("Valor total: R$",X)  
	elif (T=="R") and (CO > 500):
		A=0.65
		X= (CO * A)
		print(CO,("kWh"),"e","tipo",T)
		print("Valor total: R$", X)
	elif(CO<=1000)and(T=="C"):	
		P=0.55
		X= (CO * P)
		print(CO,"kWh","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO>1000)and(T=="C"):
		E=0.60
		X= (CO * E)
		print(CO,"kWh","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO==5000)and(T=="I"):
		Y=0.55
		X= (CO * Y)
		print(CO,"kWh","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO>5000)and(T=="I"):
		Y=0.60
		X= (CO * Y)
		print(CO,"kWh","e","tipo",T)
		print("Valor total: R$", X)
	
else:
	print(CO,"kWh","e","tipo",T)
	print("Dados invalido")
-- OUTPUT:
TIPO DE IN:
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:36:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in: ".upper())

if(CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000)or(T==R)or(T==C)or(T==I):
	if (CO<=500)and(T=="R"):
		Y=0.44
		X=(CO * Y)
		print(CO,"kWh","e","tipo",T)
		print("Valor total: R$",X)  
	elif (T=="R") and (CO > 500):
		A=0.65
		X= (CO * A)
		print(CO,("kWh"),"e","tipo",T)
		print(round("Valor total: R$", X,2)
	elif(CO<=1000)and(T=="C"):	
		P=0.55
		X= (CO * P)
		print(CO,"kWh","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO>1000)and(T=="C"):
		E=0.60
		X= (CO * E)
		print(CO,"kWh","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO==5000)and(T=="I"):
		Y=0.55
		X= (CO * Y)
		print(CO,"kWh","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO>5000)and(T=="I"):
		Y=0.60
		X= (CO * Y)
		print(CO,"kWh","e","tipo",T)
		print("Valor total: R$", X)
	
else:
	print(CO,"kWh","e","tipo",T)
	print("Dados invalido")
-- ERROR:
File "XXXX", line 18
    elif(CO<=1000)and(T=="C"):	
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:36:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in: ".upper())

if(CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000)or(T==R)or(T==C)or(T==I):
	if (CO<=500)and(T=="R"):
		Y=0.44
		X=(CO * Y)
		print(CO,"kWh","e","tipo",T)
		print("Valor total: R$",X)  
	elif (T=="R") and (CO > 500):
		A=0.65
		X= (CO * A)
		print(CO,("kWh"),"e","tipo",T)
		print("Valor total: R$", round(X),2)
	elif(CO<=1000)and(T=="C"):	
		P=0.55
		X= (CO * P)
		print(CO,"kWh","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO>1000)and(T=="C"):
		E=0.60
		X= (CO * E)
		print(CO,"kWh","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO==5000)and(T=="I"):
		Y=0.55
		X= (CO * Y)
		print(CO,"kWh","e","tipo",T)
		print("Valor total: R$", X)
	elif(CO>5000)and(T=="I"):
		Y=0.60
		X= (CO * Y)
		print(CO,"kWh","e","tipo",T)
		print("Valor total: R$", X)
	
else:
	print(CO,"kWh","e","tipo",T)
	print("Dados invalido")
-- OUTPUT:
TIPO DE IN:
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:37:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in: ".upper())

if(CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000)or(T==R)or(T==C)or(T==I):
	if (CO<=500)and(T=="R"):
		Y=0.44
		X=(CO * Y)
		print(CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X),2)  
	elif (T=="R") and (CO > 500):
		A=0.65
		X= (CO * A)
		print(CO,("kWh"),"e","tipo",T)
		print("Valor total: R$", round(X),2)
	elif(CO<=1000)and(T=="C"):	
		P=0.55
		X= (CO * P)
		print(CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X),2)
	elif(CO>1000)and(T=="C"):
		E=0.60
		X= (CO * E)
		print(CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X),2)
	elif(CO==5000)and(T=="I"):
		Y=0.55
		X= (CO * Y)
		print(CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X),2)
	elif(CO>5000)and(T=="I"):
		Y=0.60
		X= (CO * Y)
		print(CO,"kWh","e","tipo",T)
		print("Valor total: R$",round (X),2)
	
else:
	print(CO,"kWh","e","tipo",T)
	print("Dados invalido")
-- OUTPUT:
TIPO DE IN:
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:39:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in: ".upper())

if(CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000)or(T==R)or(T==C)or(T==I):
	if (CO<=500)and(T=="R"):
		Y=0.44
		X=(CO * Y)
		print(CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))  
	elif (T=="R") and (CO > 500):
		A=0.65
		X= (CO * A)
		print(CO,("kWh"),"e","tipo",T)
		print("Valor total: R$", round(X,2))
	elif(CO<=1000)and(T=="C"):	
		P=0.55
		X= (CO * P)
		print(CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO>1000)and(T=="C"):
		E=0.60
		X= (CO * E)
		print(CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO==5000)and(T=="I"):
		Y=0.55
		X= (CO * Y)
		print(CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO>5000)and(T=="I"):
		Y=0.60
		X= (CO * Y)
		print(CO,"kWh","e","tipo",T)
		print("Valor total: R$",round (X,2))
	
else:
	print(CO,"kWh","e","tipo",T)
	print("Dados invalido")
-- OUTPUT:
TIPO DE IN:
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 12:39:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in: ".upper())

if(CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000)or(T==R)or(T==C)or(T==I):
	if (CO<=500)and(T=="R"):
		Y=0.44
		X=(CO * Y)
		print(CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))  
	elif (T=="R") and (CO > 500):
		A=0.65
		X= (CO * A)
		print(CO,("kWh"),"e","tipo",T)
		print("Valor total: R$", round(X,2))
	elif(CO<=1000)and(T=="C"):	
		P=0.55
		X= (CO * P)
		print(CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO>1000)and(T=="C"):
		E=0.60
		X= (CO * E)
		print(CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO==5000)and(T=="I"):
		Y=0.55
		X= (CO * Y)
		print(CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO>5000)and(T=="I"):
		Y=0.60
		X= (CO * Y)
		print(CO,"kWh","e","tipo",T)
		print("Valor total: R$",round (X,2))
	
else:
	print(CO,"kWh","e","tipo",T)
	print("Dados invalido")
-- EXECUTION TIME:
0.179281
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
TIPO DE IN:
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
TIPO DE IN: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:39:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in: ".upper())

if(CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000)or(T==R)or(T==C)or(T==I):
	if (CO<=500)and(T=="R"):
		Y=0.44
		X=(CO * Y)
		print(CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))  
	elif (T=="R") and (CO > 500):
		A=0.65
		X= (CO * A)
		print(CO,("kWh"),"e","tipo",T)
		print("Valor total: R$", round(X,2))
	elif(CO<=1000)and(T=="C"):	
		P=0.55
		X= (CO * P)
		print(CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO>1000)and(T=="C"):
		E=0.60
		X= (CO * E)
		print(CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO==5000)and(T=="I"):
		Y=0.55
		X= (CO * Y)
		print(CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO>5000)and(T=="I"):
		Y=0.60
		X= (CO * Y)
		print(CO,"kWh","e","tipo",T)
		print("Valor total: R$",round (X,2))
	
else:
	print(CO,"kWh","e","tipo",T)
	print("Dados invalido")
-- OUTPUT:
TIPO DE IN:
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:40:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in: ".upper())

if(CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000)or(T==R)or(T==C)or(T==I):
	if (CO<=500)and(T=="R"):
		Y=0.44
		X=(CO * Y)
		print("Entradas",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))  
	elif (T=="R") and (CO > 500):
		A=0.65
		X= (CO * A)
		print("Entradas",CO,("kWh"),"e","tipo",T)
		print("Valor total: R$", round(X,2))
	elif(CO<=1000)and(T=="C"):	
		P=0.55
		X= (CO * P)
		print("Entradas",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO>1000)and(T=="C"):
		E=0.60
		X= (CO * E)
		print("Entradas",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO==5000)and(T=="I"):
		Y=0.55
		X= (CO * Y)
		print("Entradas",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO>5000)and(T=="I"):
		Y=0.60
		X= (CO * Y)
		print("Entradas",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round (X,2))
	
else:
	print("Entradas",CO,"kWh","e","tipo",T)
	print("Dados invalido")
-- OUTPUT:
TIPO DE IN:
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:40:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in: ".upper())

if(CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000)or(T==R)or(T==C)or(T==I):
	if (CO<=500)and(T=="R"):
		Y=0.44
		X=(CO * Y)
		print("Entradas",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))  
	elif (T=="R") and (CO > 500):
		A=0.65
		X= (CO * A)
		print("Entradas",CO,("kWh"),"e","tipo",T)
		print("Valor total: R$", round(X,2))
	elif(CO<=1000)and(T=="C"):	
		P=0.55
		X= (CO * P)
		print("Entradas",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO>1000)and(T=="C"):
		E=0.60
		X= (CO * E)
		print("Entradas",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO==5000)and(T=="I"):
		Y=0.55
		X= (CO * Y)
		print("Entradas",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO>5000)and(T=="I"):
		Y=0.60
		X= (CO * Y)
		print("Entradas",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round (X,2))
	
else:
	print("Entradas",CO,"kWh","e","tipo",T)
	print("Dados invalido")
-- OUTPUT:
TIPO DE IN:
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:41:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in: ".upper())

if(CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000)or(T==R)or(T==C)or(T==I):
	if (CO<=500)and(T=="R"):
		Y=0.44
		X=(CO * Y)
		print("Entradas: ",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))  
	elif (T=="R") and (CO > 500):
		A=0.65
		X= (CO * A)
		print("Entradas: ",CO,("kWh"),"e","tipo",T)
		print("Valor total: R$", round(X,2))
	elif(CO<=1000)and(T=="C"):	
		P=0.55
		X= (CO * P)
		print("Entradas: ",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO>1000)and(T=="C"):
		E=0.60
		X= (CO * E)
		print("Entradas: ",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO==5000)and(T=="I"):
		Y=0.55
		X= (CO * Y)
		print("Entradas: ",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO>5000)and(T=="I"):
		Y=0.60
		X= (CO * Y)
		print("Entradas: ",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round (X,2))
	
else:
	print("Entradas: ",CO,"kWh","e","tipo",T)
	print("Dados invalido")
-- OUTPUT:
TIPO DE IN:
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 12:41:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in: ".upper())

if(CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000)or(T==R)or(T==C)or(T==I):
	if (CO<=500)and(T=="R"):
		Y=0.44
		X=(CO * Y)
		print("Entradas: ",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))  
	elif (T=="R") and (CO > 500):
		A=0.65
		X= (CO * A)
		print("Entradas: ",CO,("kWh"),"e","tipo",T)
		print("Valor total: R$", round(X,2))
	elif(CO<=1000)and(T=="C"):	
		P=0.55
		X= (CO * P)
		print("Entradas: ",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO>1000)and(T=="C"):
		E=0.60
		X= (CO * E)
		print("Entradas: ",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO==5000)and(T=="I"):
		Y=0.55
		X= (CO * Y)
		print("Entradas: ",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO>5000)and(T=="I"):
		Y=0.60
		X= (CO * Y)
		print("Entradas: ",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round (X,2))
	
else:
	print("Entradas: ",CO,"kWh","e","tipo",T)
	print("Dados invalido")
-- EXECUTION TIME:
0.124704
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
TIPO DE IN:
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
TIPO DE IN: Entradas:  955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:41:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in: ".upper())

if(CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000)or(T==R)or(T==C)or(T==I):
	if (CO<=500)and(T=="R"):
		Y=0.44
		X=(CO * Y)
		print("Entradas: ",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))  
	elif (T=="R") and (CO > 500):
		A=0.65
		X= (CO * A)
		print("Entradas: ",CO,("kWh"),"e","tipo",T)
		print("Valor total: R$", round(X,2))
	elif(CO<=1000)and(T=="C"):	
		P=0.55
		X= (CO * P)
		print("Entradas: ",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO>1000)and(T=="C"):
		E=0.60
		X= (CO * E)
		print("Entradas: ",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO==5000)and(T=="I"):
		Y=0.55
		X= (CO * Y)
		print("Entradas: ",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO>5000)and(T=="I"):
		Y=0.60
		X= (CO * Y)
		print("Entradas: ",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round (X,2))
	
else:
	print("Entradas: ",CO,"kWh","e","tipo",T)
	print("Dados invalido")
-- OUTPUT:
TIPO DE IN:
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 12:41:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in: ".upper())

if(CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000)or(T==R)or(T==C)or(T==I):
	if (CO<=500)and(T=="R"):
		Y=0.44
		X=(CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))  
	elif (T=="R") and (CO > 500):
		A=0.65
		X= (CO * A)
		print("Entradas:",CO,("kWh"),"e","tipo",T)
		print("Valor total: R$", round(X,2))
	elif(CO<=1000)and(T=="C"):	
		P=0.55
		X= (CO * P)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO>1000)and(T=="C"):
		E=0.60
		X= (CO * E)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO==5000)and(T=="I"):
		Y=0.55
		X= (CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO>5000)and(T=="I"):
		Y=0.60
		X= (CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round (X,2))
	
else:
	print("Entradas:",CO,"kWh","e","tipo",T)
	print("Dados invalido")
-- EXECUTION TIME:
0.17593
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
TIPO DE IN:
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
TIPO DE IN: Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:41:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in: ".upper())

if(CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000)or(T==R)or(T==C)or(T==I):
	if (CO<=500)and(T=="R"):
		Y=0.44
		X=(CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))  
	elif (T=="R") and (CO > 500):
		A=0.65
		X= (CO * A)
		print("Entradas:",CO,("kWh"),"e","tipo",T)
		print("Valor total: R$", round(X,2))
	elif(CO<=1000)and(T=="C"):	
		P=0.55
		X= (CO * P)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO>1000)and(T=="C"):
		E=0.60
		X= (CO * E)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO==5000)and(T=="I"):
		Y=0.55
		X= (CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO>5000)and(T=="I"):
		Y=0.60
		X= (CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round (X,2))
	
else:
	print("Entradas:",CO,"kWh","e","tipo",T)
	print("Dados invalido")
-- OUTPUT:
TIPO DE IN:
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 12:44:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in[C,R,I]: ".upper())

if(CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000)or(T==R)or(T==C)or(T==I):
	if (CO<=500)and(T=="R"):
		Y=0.44
		X=(CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))  
	elif (T=="R") and (CO > 500):
		A=0.65
		X= (CO * A)
		print("Entradas:",CO,("kWh"),"e","tipo",T)
		print("Valor total: R$", round(X,2))
	elif(CO<=1000)and(T=="C"):	
		P=0.55
		X= (CO * P)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO>1000)and(T=="C"):
		E=0.60
		X= (CO * E)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO==5000)and(T=="I"):
		Y=0.55
		X= (CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO>5000)and(T=="I"):
		Y=0.60
		X= (CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round (X,2))
	
else:
	print("Entradas:",CO,"kWh","e","tipo",T)
	print("Dados invalido")
-- EXECUTION TIME:
0.14273
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
TIPO DE IN[C,R,I]:
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
TIPO DE IN[C,R,I]: Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 12:44:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in[C,R,I]: ".upper())

if(CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000)or(T==R)or(T==C)or(T==I):
	if (CO<=500)and(T=="R"):
		Y=0.44
		X=(CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))  
	elif (T=="R") and (CO > 500):
		A=0.65
		X= (CO * A)
		print("Entradas:",CO,("kWh"),"e","tipo",T)
		print("Valor total: R$", round(X,2))
	elif(CO<=1000)and(T=="C"):	
		P=0.55
		X= (CO * P)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO>1000)and(T=="C"):
		E=0.60
		X= (CO * E)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO==5000)and(T=="I"):
		Y=0.55
		X= (CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO>5000)and(T=="I"):
		Y=0.60
		X= (CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round (X,2))
	
else:
	print("Entradas:",CO,"kWh","e","tipo",T)
	print("Dados invalidoS")
-- EXECUTION TIME:
0.13628
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
TIPO DE IN[C,R,I]:
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
TIPO DE IN[C,R,I]: Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 12:44:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in[C,R,I]: ".upper())

if(CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000)or(T==R)or(T==C)or(T==I):
	if (CO<=500)and(T=="R"):
		Y=0.44
		X=(CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))  
	elif (T=="R") and (CO > 500):
		A=0.65
		X= (CO * A)
		print("Entradas:",CO,("kWh"),"e","tipo",T)
		print("Valor total: R$", round(X,2))
	elif(CO<=1000)and(T=="C"):	
		P=0.55
		X= (CO * P)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO>1000)and(T=="C"):
		E=0.60
		X= (CO * E)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO==5000)and(T=="I"):
		Y=0.55
		X= (CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO>5000)and(T=="I"):
		Y=0.60
		X= (CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round (X,2))
	
else:
	print("Entradas:",CO,"kWh","e","tipo",T)
	print("Dados invalidos")
-- EXECUTION TIME:
0.120565
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
TIPO DE IN[C,R,I]:
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
TIPO DE IN[C,R,I]: Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 12:45:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in[C,R,I]: ".upper())

if(CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000)or(T==R)or(T==C)or(T==I):
	if (CO<=500)and(T=="R"):
		Y=0.44
		X=(CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))  
	elif (T=="R") and (CO > 500):
		A=0.65
		X= (CO * A)
		print("Entradas:",CO,("kWh"),"e","tipo",T)
		print("Valor total: R$", round(X,2))
	elif(CO<=1000)and(T=="C"):	
		P=0.55
		X= (CO * P)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO>1000)and(T=="C"):
		E=0.60
		X= (CO * E)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO==5000)and(T=="I"):
		Y=0.55
		X= (CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO>5000)and(T=="I"):
		Y=0.60
		X= (CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round (X,2))
	
else:
	print("Entradas:",CO,"kWh","e","tipo",T)
	print("Dados invalidos")
-- EXECUTION TIME:
0.166867
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
TIPO DE IN[C,R,I]:
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
TIPO DE IN[C,R,I]: Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 12:46:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in[C,R,I]: ".upper())

if(CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500)and(T=="R"):
		Y=0.44
		X=(CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))  
	elif (T=="R") and (CO > 500):
		A=0.65
		X= (CO * A)
		print("Entradas:",CO,("kWh"),"e","tipo",T)
		print("Valor total: R$", round(X,2))
	elif(CO<=1000)and(T=="C"):	
		P=0.55
		X= (CO * P)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO>1000)and(T=="C"):
		E=0.60
		X= (CO * E)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO==5000)and(T=="I"):
		Y=0.55
		X= (CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO>5000)and(T=="I"):
		Y=0.60
		X= (CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round (X,2))
	
else:
	print("Entradas:",CO,"kWh","e","tipo",T)
	print("Dados invalidos")
-- EXECUTION TIME:
0.186896
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
TIPO DE IN[C,R,I]:
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
TIPO DE IN[C,R,I]: Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 12:46:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in[C,R,I]: ".upper())

if(CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500)and(T=="R"):
		Y=0.44
		X=(CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))  
	elif (T=="R") and (CO > 500):
		A=0.65
		X= (CO * A)
		print("Entradas:",CO,("kWh"),"e","tipo",T)
		print("Valor total: R$", round(X,2))
	elif(CO<=1000)and(T=="C"):	
		P=0.55
		X= (CO * P)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO>1000)and(T=="C"):
		E=0.60
		X= (CO * E)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO==5000)and(T=="I"):
		Y=0.55
		X= (CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO>5000)and(T=="I"):
		Y=0.60
		X= (CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round (X,2))
	
else:
	print("Entradas:",CO,"kWh","e","tipo",T)
	print("Dados invalidos")
-- EXECUTION TIME:
0.20741
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
TIPO DE IN[C,R,I]:
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
TIPO DE IN[C,R,I]: Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:46:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in[C,R,I]: ".upper())

if(CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500)and(T=="R"):
		Y=0.44
		X=(CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))  
	elif (T=="R") and (CO > 500):
		A=0.65
		X= (CO * A)
		print("Entradas:",CO,("kWh"),"e","tipo",T)
		print("Valor total: R$", round(X,2))
	elif(CO<=1000)and(T=="C"):	
		P=0.55
		X= (CO * P)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO>1000)and(T=="C"):
		E=0.60
		X= (CO * E)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO==5000)and(T=="I"):
		Y=0.55
		X= (CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO>5000)and(T=="I"):
		Y=0.60
		X= (CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round (X,2))
	
else:
	print("Entradas:",CO,"kWh","e","tipo",T)
	print("Dados invalidos")
-- OUTPUT:
TIPO DE IN[C,R,I]:
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:46:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in[C,R,I]: ".upper())

if(CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500)and(T=="R"):
		Y=0.44
		X=(CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))  
	elif (T=="R") and (CO > 500):
		A=0.65
		X= (CO * A)
		print("Entradas:",CO,("kWh"),"e","tipo",T)
		print("Valor total: R$", round(X,2))
	elif(CO<=1000)and(T=="C"):	
		P=0.55
		X= (CO * P)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO>1000)and(T=="C"):
		E=0.60
		X= (CO * E)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO==5000)and(T=="I"):
		Y=0.55
		X= (CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO>5000)and(T=="I"):
		Y=0.60
		X= (CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round (X,2))
	
else:
	print("Entradas:",CO,"kWh","e","tipo",T)
	print("Dados invalidos")
-- OUTPUT:
TIPO DE IN[C,R,I]:
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:46:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in[C,R,I]: ".upper())

if(CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500)and(T=="R"):
		Y=0.44
		X=(CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))  
	elif (T=="R") and (CO > 500):
		A=0.65
		X= (CO * A)
		print("Entradas:",CO,("kWh"),"e","tipo",T)
		print("Valor total: R$", round(X,2))
	elif(CO<=1000)and(T=="C"):	
		P=0.55
		X= (CO * P)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO>1000)and(T=="C"):
		E=0.60
		X= (CO * E)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO==5000)and(T=="I"):
		Y=0.55
		X= (CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO>5000)and(T=="I"):
		Y=0.60
		X= (CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round (X,2))
	
else:
	print("Entradas:",CO,"kWh","e","tipo",T)
	print("Dados invalidos")
-- OUTPUT:
TIPO DE IN[C,R,I]:
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:47:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in[C,R,I]: ".upper())

if(CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500)and(T=="R"):
		Y=0.44
		X=(CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))  
	elif (T=="R") and (CO > 500):
		A=0.65
		X= (CO * A)
		print("Entradas:",CO,("kWh"),"e","tipo",T)
		print("Valor total: R$", round(X,2))
	elif(CO<=1000)and(T=="C"):	
		P=0.55
		X= (CO * P)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO>1000)and(T=="C"):
		E=0.60
		X= (CO * E)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO==5000)and(T=="I"):
		Y=0.55
		X= (CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO>5000)and(T=="I"):
		Y=0.60
		X= (CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round (X,2))
	
else:
	print("Entradas:",CO,"kWh","e","tipo",T)
	print("Dados invalidos")
-- OUTPUT:
TIPO DE IN[C,R,I]:
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:50:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in[C,R,I]: ".upper())

if(CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000):
	if (CO<=500)and(T=="R"):
		Y=0.44
		X=(CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))  
	elif (T=="R") and (CO > 500):
		A=0.65
		X= (CO * A)
		print("Entradas:",CO,("kWh"),"e","tipo",T)
		print("Valor total: R$", round(X,2))
	elif(CO<=1000)and(T=="C"):	
		P=0.55
		X= (CO * P)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO>1000)and(T=="C"):
		E=0.60
		X= (CO * E)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO==5000)and(T=="I"):
		Y=0.55
		X= (CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif(CO>5000)and(T=="I"):
		Y=0.60
		X= (CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round (X,2))
	
else:
	print("Entradas:",CO,"kWh","e","tipo",T)
	print("Dados invalidos")
-- OUTPUT:
TIPO DE IN[C,R,I]:
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 12:53:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in[C,R,I]: ".upper())

if((CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000)):
	if ((CO<=500)and(T=="R")):
		Y=0.44
		X=(CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))  
	elif ((T=="R") and (CO > 500)):
		A=0.65
		X= (CO * A)
		print("Entradas:",CO,("kWh"),"e","tipo",T)
		print("Valor total: R$", round(X,2))
	elif((CO<=1000)and(T=="C")):	
		P=0.55
		X= (CO * P)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif((CO>1000)and(T=="C")):
		E=0.60
		X= (CO * E)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif((CO==5000)and(T=="I")):
		Y=0.55
		X= (CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif((CO>5000)and(T=="I")):
		Y=0.60
		X= (CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round (X,2))
	
else:
	print("Entradas:",CO,"kWh","e","tipo",T)
	print("Dados invalidos")
-- EXECUTION TIME:
0.255144
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
TIPO DE IN[C,R,I]:
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
TIPO DE IN[C,R,I]: Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:53:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in[C,R,I]: ".upper())

if((CO<=500)or(CO<=1000)or(CO>5000)or(CO>500)or(CO>1000)):
	if ((CO<=500)and(T=="R")):
		Y=0.44
		X=(CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))  
	elif ((T=="R") and (CO > 500)):
		A=0.65
		X= (CO * A)
		print("Entradas:",CO,("kWh"),"e","tipo",T)
		print("Valor total: R$", round(X,2))
	elif((CO<=1000)and(T=="C")):	
		P=0.55
		X= (CO * P)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif((CO>1000)and(T=="C")):
		E=0.60
		X= (CO * E)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif((CO==5000)and(T=="I")):
		Y=0.55
		X= (CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif((CO>5000)and(T=="I")):
		Y=0.60
		X= (CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round (X,2))
	
else:
	print("Entradas:",CO,"kWh","e","tipo",T)
	print("Dados invalidos")
-- OUTPUT:
TIPO DE IN[C,R,I]:
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:53:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in[C,R,I]: ".upper())

if(CO>0):
	if ((CO<=500)and(T=="R")):
		Y=0.44
		X=(CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))  
	elif ((T=="R") and (CO > 500)):
		A=0.65
		X= (CO * A)
		print("Entradas:",CO,("kWh"),"e","tipo",T)
		print("Valor total: R$", round(X,2))
	elif((CO<=1000)and(T=="C")):	
		P=0.55
		X= (CO * P)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif((CO>1000)and(T=="C")):
		E=0.60
		X= (CO * E)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif((CO==5000)and(T=="I")):
		Y=0.55
		X= (CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif((CO>5000)and(T=="I")):
		Y=0.60
		X= (CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round (X,2))
	
else:
	print("Entradas:",CO,"kWh","e","tipo",T)
	print("Dados invalidos")
-- OUTPUT:
TIPO DE IN[C,R,I]: Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 12:53:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in[C,R,I]: ".upper())

if(CO>0):
	if ((CO<=500)and(T=="R")):
		Y=0.44
		X=(CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))  
	elif ((T=="R") and (CO > 500)):
		A=0.65
		X= (CO * A)
		print("Entradas:",CO,("kWh"),"e","tipo",T)
		print("Valor total: R$", round(X,2))
	elif((CO<=1000)and(T=="C")):	
		P=0.55
		X= (CO * P)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif((CO>1000)and(T=="C")):
		E=0.60
		X= (CO * E)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif((CO==5000)and(T=="I")):
		Y=0.55
		X= (CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif((CO>5000)and(T=="I")):
		Y=0.60
		X= (CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round (X,2))
	
else:
	print("Entradas:",CO,"kWh","e","tipo",T)
	print("Dados invalidos")
-- EXECUTION TIME:
0.147447
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
TIPO DE IN[C,R,I]: Entradas: -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
TIPO DE IN[C,R,I]: Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:54:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in[C,R,I]: ".upper())

print(T)
if(CO>0):
	if ((CO<=500)and(T=="R")):
		Y=0.44
		X=(CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))  
	elif ((T=="R") and (CO > 500)):
		A=0.65
		X= (CO * A)
		print("Entradas:",CO,("kWh"),"e","tipo",T)
		print("Valor total: R$", round(X,2))
	elif((CO<=1000)and(T=="C")):	
		P=0.55
		X= (CO * P)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif((CO>1000)and(T=="C")):
		E=0.60
		X= (CO * E)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif((CO==5000)and(T=="I")):
		Y=0.55
		X= (CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif((CO>5000)and(T=="I")):
		Y=0.60
		X= (CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round (X,2))
	
else:
	print("Entradas:",CO,"kWh","e","tipo",T)
	print("Dados invalidos")
-- OUTPUT:
TIPO DE IN[C,R,I]: I
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:54:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in[C,R,I]: ").upper()

print(T)
if(CO>0):
	if ((CO<=500)and(T=="R")):
		Y=0.44
		X=(CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))  
	elif ((T=="R") and (CO > 500)):
		A=0.65
		X= (CO * A)
		print("Entradas:",CO,("kWh"),"e","tipo",T)
		print("Valor total: R$", round(X,2))
	elif((CO<=1000)and(T=="C")):	
		P=0.55
		X= (CO * P)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif((CO>1000)and(T=="C")):
		E=0.60
		X= (CO * E)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif((CO==5000)and(T=="I")):
		Y=0.55
		X= (CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif((CO>5000)and(T=="I")):
		Y=0.60
		X= (CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round (X,2))
	
else:
	print("Entradas:",CO,"kWh","e","tipo",T)
	print("Dados invalidos")
-- OUTPUT:
I
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 12:55:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in[C,R,I]: ").upper()


if(CO>0):
	if ((CO<=500)and(T=="R")):
		Y=0.44
		X=(CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))  
	elif ((T=="R") and (CO > 500)):
		A=0.65
		X= (CO * A)
		print("Entradas:",CO,("kWh"),"e","tipo",T)
		print("Valor total: R$", round(X,2))
	elif((CO<=1000)and(T=="C")):	
		P=0.55
		X= (CO * P)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif((CO>1000)and(T=="C")):
		E=0.60
		X= (CO * E)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif((CO==5000)and(T=="I")):
		Y=0.55
		X= (CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round(X,2))
	elif((CO>5000)and(T=="I")):
		Y=0.60
		X= (CO * Y)
		print("Entradas:",CO,"kWh","e","tipo",T)
		print("Valor total: R$",round (X,2))
	
else:
	print("Entradas:",CO,"kWh","e","tipo",T)
	print("Dados invalidos")
-- EXECUTION TIME:
0.189488
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:56:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in[C,R,I]: ").upper()

print("Entradas:",CO,"kWh","e","tipo",T)

if(CO>0):
	if ((CO<=500)and(T=="R")):
		Y=0.44
		X=(CO * Y)
		print("Valor total: R$",round(X,2))  
	elif ((T=="R") and (CO > 500)):
		A=0.65
		X= (CO * A)
		print("Valor total: R$", round(X,2))
	elif((CO<=1000)and(T=="C")):	
		P=0.55
		X= (CO * P)		
		print("Valor total: R$",round(X,2))
	elif((CO>1000)and(T=="C")):
		E=0.60
		X= (CO * E)		
		print("Valor total: R$",round(X,2))
	elif((CO==5000)and(T=="I")):
		Y=0.55
		X= (CO * Y)		
		print("Valor total: R$",round(X,2))
	elif((CO>5000)and(T=="I")):
		Y=0.60
		X= (CO * Y)		
		print("Valor total: R$",round (X,2))
	
else:	
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:57:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in[C,R,I]: ").upper()

print("Entradas:",CO,"kWh","e","tipo",T)

if(CO>0):
	if ((CO<=500)and(T=="R")):
		Y=0.44
		X=(CO * Y)
		print("Valor total: R$",round(X,2))  
	elif ((T=="R") and (CO > 500)):
		A=0.65
		X= (CO * A)
		print("Valor total: R$", round(X,2))
	elif((CO<=1000)and(T=="C")):	
		P=0.55
		X= (CO * P)		
		print("Valor total: R$",round(X,2))
	elif((CO>1000)and(T=="C")):
		E=0.60
		X= (CO * E)		
		print("Valor total: R$",round(X,2))
	elif((CO==5000)and(T=="I")):
		Y=0.55
		X= (CO * Y)		
		print("Valor total: R$",round(X,2))
	elif((CO>5000)and(T=="I")):
		Y=0.60
		X= (CO * Y)		
		print("Valor total: R$",round (X,2))
	
else:
	print("Entradas:",CO,"kWh","e","tipo",T)
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 12:57:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
CO = float ( input (" Consumo de energy: "))
T = input("Tipo de in[C,R,I]: ").upper()

print("Entradas:",CO,"kWh","e","tipo",T)

if(CO>0):
	if ((CO<=500)and(T=="R")):
		Y=0.44
		X=(CO * Y)
		print("Valor total: R$",round(X,2))  
	elif ((T=="R") and (CO > 500)):
		A=0.65
		X= (CO * A)
		print("Valor total: R$", round(X,2))
	elif((CO<=1000)and(T=="C")):	
		P=0.55
		X= (CO * P)		
		print("Valor total: R$",round(X,2))
	elif((CO>1000)and(T=="C")):
		E=0.60
		X= (CO * E)		
		print("Valor total: R$",round(X,2))
	elif((CO==5000)and(T=="I")):
		Y=0.55
		X= (CO * Y)		
		print("Valor total: R$",round(X,2))
	elif((CO>5000)and(T=="I")):
		Y=0.60
		X= (CO * Y)		
		print("Valor total: R$",round (X,2))
	
else:	
	print("Dados invalidos")
-- EXECUTION TIME:
0.133812
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
