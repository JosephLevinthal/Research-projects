== TEST (2019-04-16 13:57:12) 
-- CODE:
nota = float(input("nota do aluno: "))
boni = input("aluno com bonificacao: (S/N) ")
acrescimo = nota*0,1
if(boni.upper()=="S"):
	nota =  nota+acrescimo
else:
	nota = nota
print(nota)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    nota =  nota+acrescimo
TypeError: unsupported operand type(s) for +: 'float' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:00:09) 
-- CODE:
nota = float(input("nota do aluno: "))
boni = input("aluno com bonificacao: (S/N) ")
acrescimo = nota*0,1
if(boni.upper()=="S"):
	nota = nota + acrescimo
else:
	nota = nota
print(nota)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    nota = nota + acrescimo
TypeError: unsupported operand type(s) for +: 'float' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:00:37) 
-- CODE:
nota = float(input("nota do aluno: "))
boni = input("aluno com bonificacao: (S/N) ")
acrescimo = nota*0,1
if(boni.upper()=="S"):
	nota = float(nota + acrescimo)
else:
	nota = nota
print(nota)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    nota = float(nota + acrescimo)
TypeError: unsupported operand type(s) for +: 'float' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:03:06) 
-- CODE:
nota = float(input("nota do aluno: "))
boni = input("aluno com bonificacao: (S/N) ")
acrescimo = float(input("valor do acrescimo: "))
if(boni.upper()=="S"):
	valor = nota*acrescimo
	valor = nota+valor
else:
	nota = nota
print(nota)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    acrescimo = float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:03:23) 
-- CODE:
nota = float(input("nota do aluno: "))
boni = input("aluno com bonificacao: (S/N) ")
acrescimo = float(input("valor do acrescimo: "))
if(boni.upper()=="S"):
	valor = nota*acrescimo
	valor = nota+valor
else:
	nota = nota
print(nota)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    acrescimo = float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:03:26) 
-- CODE:
nota = float(input("nota do aluno: "))
boni = input("aluno com bonificacao: (S/N) ")
acrescimo = float(input("valor do acrescimo: "))
if(boni.upper()=="S"):
	valor = nota*acrescimo
	valor = nota+valor
else:
	nota = nota
print(nota)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    acrescimo = float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 14:04:16) 
-- CODE:
nota = float(input("nota do aluno: "))
boni = input("aluno com bonificacao: (S/N) ")
acrescimo = float(input("valor do acrescimo: "))
if(boni.upper()=="S"):
	valor = nota*acrescimo
	valor = nota+valor
else:
	nota = nota
print(nota)
-- EXECUTION TIME:
0.18435
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/2704/main.py", line 3, in <module>
    acrescimo = float(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:04:34) 
-- CODE:
nota = float(input("nota do aluno: "))
boni = input("aluno com bonificacao: (S/N) ")
acrescimo = float(input("valor do acrescimo: "))
if(boni.upper()=="S"):
	valor = nota*acrescimo
	nota = nota+valor
else:
	nota = nota
print(nota)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    acrescimo = float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 14:05:03) 
-- CODE:
nota = float(input("nota do aluno: "))
boni = input("aluno com bonificacao: (S/N) ")
acrescimo = float(input("valor do acrescimo: "))
if(boni.upper()=="S"):
	valor = nota*acrescimo
	nota = nota+valor
else:
	nota = nota
print(nota)
-- EXECUTION TIME:
0.177593
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/2704/main.py", line 3, in <module>
    acrescimo = float(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:05:25) 
-- CODE:
nota = float(input("nota do aluno: "))
boni = input("aluno com bonificacao: (S/N) ")
acrescimo = float(input("valor do acrescimo: "))
if(boni.upper()=="S"):
	valor = nota*acrescimo
	nota = nota+valor
else:
	nota = nota
print(nota)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    acrescimo = float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 14:05:53) 
-- CODE:
nota = float(input("nota do aluno: "))
boni = input("aluno com bonificacao: (S/N) ")
acrescimo = float(input("valor do acrescimo: "))
if(boni.upper()=="S"):
	valor = nota*acrescimo
	nota = nota+valor
else:
	nota = nota
print(nota)
-- EXECUTION TIME:
0.275874
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1644/2704/main.py", line 3, in <module>
    acrescimo = float(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:09:10) 
-- CODE:
nota = float(input("nota do aluno: "))
boni = input("aluno com bonificacao: (S/N) ")

if(boni.upper()=="S"):
	valor = nota*0,1
	nota = nota+valor
else:
	nota = nota
print(nota)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    nota = nota+valor
TypeError: unsupported operand type(s) for +: 'float' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:09:14) 
-- CODE:
nota = float(input("nota do aluno: "))
boni = input("aluno com bonificacao: (S/N) ")

if(boni.upper()=="S"):
	valor = nota*0.1
	nota = nota+valor
else:
	nota = nota
print(nota)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:09:49) 
-- CODE:
nota = float(input("nota do aluno: "))
boni = input("aluno com bonificacao: (S/N) ")

if(boni.upper()=="S"):
	valor = nota*0.1
	nota = nota+valor
else:
	nota = nota
print(nota)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:10:04) 
-- CODE:
nota = float(input("nota do aluno: "))
boni = input("aluno com bonificacao: (S/N) ")

if(boni.upper()=="S"):
	valor = nota*0.1
	nota = nota+valor
else:
	nota = nota
print(nota)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:11:00) 
-- CODE:
nota = float(input("nota do aluno: "))
boni = input("aluno com bonificacao: (S/N) ")

if(boni.upper()=="S"):
	nota = nota*0.1+nota
else:
	nota = nota
print(nota)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:11:19) 
-- CODE:
nota = float(input("nota do aluno: "))
boni = input("aluno com bonificacao: (S/N) ")

if(boni.upper()=="S"):
	nota = nota*0.1+nota
else:
	nota = nota
print(nota)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:11:21) 
-- CODE:
nota = float(input("nota do aluno: "))
boni = input("aluno com bonificacao: (S/N) ")

if(boni.upper()=="S"):
	nota = nota*0.1+nota
else:
	nota = nota
print(nota)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 14:11:44) 
-- CODE:
nota = float(input("nota do aluno: "))
boni = input("aluno com bonificacao: (S/N) ")

if(boni.upper()=="S"):
	nota = nota*0.1+nota
else:
	nota = nota
print(nota)
-- EXECUTION TIME:
0.145433
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
