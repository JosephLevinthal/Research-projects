== SUBMITION (2019-05-21 01:03:19) 
-- CODE:
from numpy import *

v1 = array(eval(input("v1: ")))
v2 = array(eval(input("v2: ")))

c1 = 0
Ev = 0
Bv = 0
i = 0

while i < size(v1):
	if (v1[c1]) == 11 and v2[c1] == 11 or (v1[c1]) == 22 and v2[c1] == 22 or (v1[c1]) == 33 and v2[c1] == 33:
		Ev += 0
		Bv += 0
	elif (v1[c1]) == 11 and v2[c1] == 33 or (v1[c1]) == 33 and v2[c1] == 22 or (v1[c1]) == 22 and v2[c1] == 11:
		Ev += 1
	elif (v2[c1]) == 11 and v1[c1] == 33 or (v2[c1]) == 33 and v1[c1] == 22 or (v2[c1]) == 22 and v1[c1] == 11:
		Bv += 1
		
	i += 1
	c1 += 1
	
print(i)
if Ev > Bv:
	print("EUSAPIA")
elif Bv > Ev:
	print("BARSANULFO"):
else:
	print("EMPATE")
-- EXECUTION TIME:
0.145136
-- ERROR:
  File "/home/codebench/codes/1764/1576/main.py", line 27
    print("BARSANULFO"):
                       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-21 01:03:20) 
-- CODE:
from numpy import *

v1 = array(eval(input("v1: ")))
v2 = array(eval(input("v2: ")))

c1 = 0
Ev = 0
Bv = 0
i = 0

while i < size(v1):
	if (v1[c1]) == 11 and v2[c1] == 11 or (v1[c1]) == 22 and v2[c1] == 22 or (v1[c1]) == 33 and v2[c1] == 33:
		Ev += 0
		Bv += 0
	elif (v1[c1]) == 11 and v2[c1] == 33 or (v1[c1]) == 33 and v2[c1] == 22 or (v1[c1]) == 22 and v2[c1] == 11:
		Ev += 1
	elif (v2[c1]) == 11 and v1[c1] == 33 or (v2[c1]) == 33 and v1[c1] == 22 or (v2[c1]) == 22 and v1[c1] == 11:
		Bv += 1
		
	i += 1
	c1 += 1
	
print(i)
if Ev > Bv:
	print("EUSAPIA")
elif Bv > Ev:
	print("BARSANULFO"):
else:
	print("EMPATE")
-- ERROR:
File "XXXX", line 27
    print("BARSANULFO"):
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-21 01:03:26) 
-- CODE:
from numpy import *

v1 = array(eval(input("v1: ")))
v2 = array(eval(input("v2: ")))

c1 = 0
Ev = 0
Bv = 0
i = 0

while i < size(v1):
	if (v1[c1]) == 11 and v2[c1] == 11 or (v1[c1]) == 22 and v2[c1] == 22 or (v1[c1]) == 33 and v2[c1] == 33:
		Ev += 0
		Bv += 0
	elif (v1[c1]) == 11 and v2[c1] == 33 or (v1[c1]) == 33 and v2[c1] == 22 or (v1[c1]) == 22 and v2[c1] == 11:
		Ev += 1
	elif (v2[c1]) == 11 and v1[c1] == 33 or (v2[c1]) == 33 and v1[c1] == 22 or (v2[c1]) == 22 and v1[c1] == 11:
		Bv += 1
		
	i += 1
	c1 += 1
	
print(i)
if Ev > Bv:
	print("EUSAPIA")
elif Bv > Ev:
	print("BARSANULFO")
else:
	print("EMPATE")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-21 01:03:28) 
-- CODE:
from numpy import *

v1 = array(eval(input("v1: ")))
v2 = array(eval(input("v2: ")))

c1 = 0
Ev = 0
Bv = 0
i = 0

while i < size(v1):
	if (v1[c1]) == 11 and v2[c1] == 11 or (v1[c1]) == 22 and v2[c1] == 22 or (v1[c1]) == 33 and v2[c1] == 33:
		Ev += 0
		Bv += 0
	elif (v1[c1]) == 11 and v2[c1] == 33 or (v1[c1]) == 33 and v2[c1] == 22 or (v1[c1]) == 22 and v2[c1] == 11:
		Ev += 1
	elif (v2[c1]) == 11 and v1[c1] == 33 or (v2[c1]) == 33 and v1[c1] == 22 or (v2[c1]) == 22 and v1[c1] == 11:
		Bv += 1
		
	i += 1
	c1 += 1
	
print(i)
if Ev > Bv:
	print("EUSAPIA")
elif Bv > Ev:
	print("BARSANULFO")
else:
	print("EMPATE")
-- EXECUTION TIME:
0.573394
-- TEST CASE 1:
---- input:
[33,22,33,22,11,11,33,22,11,11,22,33]
[22,33,22,11,11,33,22,11,11,22,33,33]
---- correct output:
12
EUSAPIA
---- user output:
12
EUSAPIA
-- TEST CASE 2:
---- input:
[33,22,33,11,33,22,11,22,33,11]
[11,33,22,33,11,33,22,11,22,33]
---- correct output:
10
EMPATE
---- user output:
10
EMPATE
-- TEST CASE 3:
---- input:
[33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11,22]
[11,33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11]
---- correct output:
18
BARSANULFO
---- user output:
18
BARSANULFO
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-21 16:49:20) 
-- CODE:
from numpy import *

v1 = array(eval(input("v1: ")))
v2 = array(eval(input("v2: ")))

c1 = 0
Ev = 0
Bv = 0
i = c1

while i < size(v1):
	if (v1[c1]) == 11 and v2[c1] == 11 or (v1[c1]) == 22 and v2[c1] == 22 or (v1[c1]) == 33 and v2[c1] == 33:
		Ev += 0
		Bv += 0
	elif (v1[c1]) == 11 and v2[c1] == 33 or (v1[c1]) == 33 and v2[c1] == 22 or (v1[c1]) == 22 and v2[c1] == 11:
		Ev += 1
	elif (v2[c1]) == 11 and v1[c1] == 33 or (v2[c1]) == 33 and v1[c1] == 22 or (v2[c1]) == 22 and v1[c1] == 11:
		Bv += 1
		
	i += 1
	c1 += 1
	
print(i)
if Ev > Bv:
	print("EUSAPIA")
elif Bv > Ev:
	print("BARSANULFO")
else:
	print("EMPATE")
-- EXECUTION TIME:
0.476008
-- TEST CASE 1:
---- input:
[33,22,33,22,11,11,33,22,11,11,22,33]
[22,33,22,11,11,33,22,11,11,22,33,33]
---- correct output:
12
EUSAPIA
---- user output:
12
EUSAPIA
-- TEST CASE 2:
---- input:
[33,22,33,11,33,22,11,22,33,11]
[11,33,22,33,11,33,22,11,22,33]
---- correct output:
10
EMPATE
---- user output:
10
EMPATE
-- TEST CASE 3:
---- input:
[33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11,22]
[11,33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11]
---- correct output:
18
BARSANULFO
---- user output:
12
EUSAPIA
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-21 16:49:22) 
-- CODE:
from numpy import *

v1 = array(eval(input("v1: ")))
v2 = array(eval(input("v2: ")))

c1 = 0
Ev = 0
Bv = 0
i = c1

while i < size(v1):
	if (v1[c1]) == 11 and v2[c1] == 11 or (v1[c1]) == 22 and v2[c1] == 22 or (v1[c1]) == 33 and v2[c1] == 33:
		Ev += 0
		Bv += 0
	elif (v1[c1]) == 11 and v2[c1] == 33 or (v1[c1]) == 33 and v2[c1] == 22 or (v1[c1]) == 22 and v2[c1] == 11:
		Ev += 1
	elif (v2[c1]) == 11 and v1[c1] == 33 or (v2[c1]) == 33 and v1[c1] == 22 or (v2[c1]) == 22 and v1[c1] == 11:
		Bv += 1
		
	i += 1
	c1 += 1
	
print(i)
if Ev > Bv:
	print("EUSAPIA")
elif Bv > Ev:
	print("BARSANULFO")
else:
	print("EMPATE")
-- EXECUTION TIME:
0.399993
-- TEST CASE 1:
---- input:
[33,22,33,22,11,11,33,22,11,11,22,33]
[22,33,22,11,11,33,22,11,11,22,33,33]
---- correct output:
12
EUSAPIA
---- user output:
12
EUSAPIA
-- TEST CASE 2:
---- input:
[33,22,33,11,33,22,11,22,33,11]
[11,33,22,33,11,33,22,11,22,33]
---- correct output:
10
EMPATE
---- user output:
10
EMPATE
-- TEST CASE 3:
---- input:
[33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11,22]
[11,33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11]
---- correct output:
18
BARSANULFO
---- user output:
18
BARSANULFO
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-21 16:49:23) 
-- CODE:
from numpy import *

v1 = array(eval(input("v1: ")))
v2 = array(eval(input("v2: ")))

c1 = 0
Ev = 0
Bv = 0
i = c1

while i < size(v1):
	if (v1[c1]) == 11 and v2[c1] == 11 or (v1[c1]) == 22 and v2[c1] == 22 or (v1[c1]) == 33 and v2[c1] == 33:
		Ev += 0
		Bv += 0
	elif (v1[c1]) == 11 and v2[c1] == 33 or (v1[c1]) == 33 and v2[c1] == 22 or (v1[c1]) == 22 and v2[c1] == 11:
		Ev += 1
	elif (v2[c1]) == 11 and v1[c1] == 33 or (v2[c1]) == 33 and v1[c1] == 22 or (v2[c1]) == 22 and v1[c1] == 11:
		Bv += 1
		
	i += 1
	c1 += 1
	
print(i)
if Ev > Bv:
	print("EUSAPIA")
elif Bv > Ev:
	print("BARSANULFO")
else:
	print("EMPATE")
-- EXECUTION TIME:
0.341251
-- TEST CASE 1:
---- input:
[33,22,33,22,11,11,33,22,11,11,22,33]
[22,33,22,11,11,33,22,11,11,22,33,33]
---- correct output:
12
EUSAPIA
---- user output:
12
EUSAPIA
-- TEST CASE 2:
---- input:
[33,22,33,11,33,22,11,22,33,11]
[11,33,22,33,11,33,22,11,22,33]
---- correct output:
10
EMPATE
---- user output:
10
EMPATE
-- TEST CASE 3:
---- input:
[33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11,22]
[11,33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11]
---- correct output:
18
BARSANULFO
---- user output:
18
BARSANULFO
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-21 16:50:08) 
-- CODE:
from numpy import *

v1 = array(eval(input("v1: ")))
v2 = array(eval(input("v2: ")))

Ev = 0
Bv = 0
i = 0

while i < size(v1):
	if (v1[i]) == 11 and v2[i] == 11 or (v1[i]) == 22 and v2[i] == 22 or (v1[i]) == 33 and v2[i] == 33:
		Ev += 0
		Bv += 0
	elif (v1[i]) == 11 and v2[i] == 33 or (v1[i]) == 33 and v2[i] == 22 or (v1[i]) == 22 and v2[i] == 11:
		Ev += 1
	elif (v2[i]) == 11 and v1[i] == 33 or (v2[i]) == 33 and v1[i] == 22 or (v2[i]) == 22 and v1[i] == 11:
		Bv += 1
		
	i += 1
	
print(i)

if Ev > Bv:
	print("EUSAPIA")
elif Bv > Ev:
	print("BARSANULFO")
else:
	print("EMPATE")
-- EXECUTION TIME:
0.465643
-- TEST CASE 1:
---- input:
[33,22,33,22,11,11,33,22,11,11,22,33]
[22,33,22,11,11,33,22,11,11,22,33,33]
---- correct output:
12
EUSAPIA
---- user output:
v1: v2: 12
EUSAPIA
-- TEST CASE 2:
---- input:
[33,22,33,11,33,22,11,22,33,11]
[11,33,22,33,11,33,22,11,22,33]
---- correct output:
10
EMPATE
---- user output:
v1: v2: 10
EMPATE
-- TEST CASE 3:
---- input:
[33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11,22]
[11,33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11]
---- correct output:
18
BARSANULFO
---- user output:
v1: v2: 18
BARSANULFO
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-21 16:50:09) 
-- CODE:
from numpy import *

v1 = array(eval(input("v1: ")))
v2 = array(eval(input("v2: ")))

Ev = 0
Bv = 0
i = 0

while i < size(v1):
	if (v1[i]) == 11 and v2[i] == 11 or (v1[i]) == 22 and v2[i] == 22 or (v1[i]) == 33 and v2[i] == 33:
		Ev += 0
		Bv += 0
	elif (v1[i]) == 11 and v2[i] == 33 or (v1[i]) == 33 and v2[i] == 22 or (v1[i]) == 22 and v2[i] == 11:
		Ev += 1
	elif (v2[i]) == 11 and v1[i] == 33 or (v2[i]) == 33 and v1[i] == 22 or (v2[i]) == 22 and v1[i] == 11:
		Bv += 1
		
	i += 1
	
print(i)

if Ev > Bv:
	print("EUSAPIA")
elif Bv > Ev:
	print("BARSANULFO")
else:
	print("EMPATE")
-- EXECUTION TIME:
0.373563
-- TEST CASE 1:
---- input:
[33,22,33,22,11,11,33,22,11,11,22,33]
[22,33,22,11,11,33,22,11,11,22,33,33]
---- correct output:
12
EUSAPIA
---- user output:
12
EUSAPIA
-- TEST CASE 2:
---- input:
[33,22,33,11,33,22,11,22,33,11]
[11,33,22,33,11,33,22,11,22,33]
---- correct output:
10
EMPATE
---- user output:
10
EMPATE
-- TEST CASE 3:
---- input:
[33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11,22]
[11,33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11]
---- correct output:
18
BARSANULFO
---- user output:
18
BARSANULFO
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-21 16:50:10) 
-- CODE:
from numpy import *

v1 = array(eval(input("v1: ")))
v2 = array(eval(input("v2: ")))

Ev = 0
Bv = 0
i = 0

while i < size(v1):
	if (v1[i]) == 11 and v2[i] == 11 or (v1[i]) == 22 and v2[i] == 22 or (v1[i]) == 33 and v2[i] == 33:
		Ev += 0
		Bv += 0
	elif (v1[i]) == 11 and v2[i] == 33 or (v1[i]) == 33 and v2[i] == 22 or (v1[i]) == 22 and v2[i] == 11:
		Ev += 1
	elif (v2[i]) == 11 and v1[i] == 33 or (v2[i]) == 33 and v1[i] == 22 or (v2[i]) == 22 and v1[i] == 11:
		Bv += 1
		
	i += 1
	
print(i)

if Ev > Bv:
	print("EUSAPIA")
elif Bv > Ev:
	print("BARSANULFO")
else:
	print("EMPATE")
-- EXECUTION TIME:
0.388201
-- TEST CASE 1:
---- input:
[33,22,33,22,11,11,33,22,11,11,22,33]
[22,33,22,11,11,33,22,11,11,22,33,33]
---- correct output:
12
EUSAPIA
---- user output:
12
EUSAPIA
-- TEST CASE 2:
---- input:
[33,22,33,11,33,22,11,22,33,11]
[11,33,22,33,11,33,22,11,22,33]
---- correct output:
10
EMPATE
---- user output:
10
EMPATE
-- TEST CASE 3:
---- input:
[33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11,22]
[11,33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11]
---- correct output:
18
BARSANULFO
---- user output:
18
BARSANULFO
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-21 17:01:53) 
-- CODE:
from numpy import *

v1 = array(eval(input("v1: ")))
v2 = array(eval(input("v2: ")))

Ev = 0
Bv = 0
i = 0

while i < size(v1):
	if (v1[i]) == v2[i]
		Ev += 0
		Bv += 0
	elif (v1[i]) == 11 and v2[i] == 33 or (v1[i]) == 33 and v2[i] == 22 or (v1[i]) == 22 and v2[i] == 11:
		Ev += 1
	elif (v2[i]) == 11 and v1[i] == 33 or (v2[i]) == 33 and v1[i] == 22 or (v2[i]) == 22 and v1[i] == 11:
		Bv += 1
		
	i += 1
	
print(i)

if Ev > Bv:
	print("EUSAPIA")
elif Bv > Ev:
	print("BARSANULFO")
else:
	print("EMPATE")
-- EXECUTION TIME:
0.147088
-- ERROR:
  File "/home/codebench/codes/1764/1576/main.py", line 11
    if (v1[i]) == v2[i]
                      ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-21 17:01:55) 
-- CODE:
from numpy import *

v1 = array(eval(input("v1: ")))
v2 = array(eval(input("v2: ")))

Ev = 0
Bv = 0
i = 0

while i < size(v1):
	if (v1[i]) == v2[i]
		Ev += 0
		Bv += 0
	elif (v1[i]) == 11 and v2[i] == 33 or (v1[i]) == 33 and v2[i] == 22 or (v1[i]) == 22 and v2[i] == 11:
		Ev += 1
	elif (v2[i]) == 11 and v1[i] == 33 or (v2[i]) == 33 and v1[i] == 22 or (v2[i]) == 22 and v1[i] == 11:
		Bv += 1
		
	i += 1
	
print(i)

if Ev > Bv:
	print("EUSAPIA")
elif Bv > Ev:
	print("BARSANULFO")
else:
	print("EMPATE")
-- EXECUTION TIME:
0.195703
-- ERROR:
  File "/home/codebench/codes/1764/1576/main.py", line 11
    if (v1[i]) == v2[i]
                      ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-21 17:01:56) 
-- CODE:
from numpy import *

v1 = array(eval(input("v1: ")))
v2 = array(eval(input("v2: ")))

Ev = 0
Bv = 0
i = 0

while i < size(v1):
	if (v1[i]) == v2[i]
		Ev += 0
		Bv += 0
	elif (v1[i]) == 11 and v2[i] == 33 or (v1[i]) == 33 and v2[i] == 22 or (v1[i]) == 22 and v2[i] == 11:
		Ev += 1
	elif (v2[i]) == 11 and v1[i] == 33 or (v2[i]) == 33 and v1[i] == 22 or (v2[i]) == 22 and v1[i] == 11:
		Bv += 1
		
	i += 1
	
print(i)

if Ev > Bv:
	print("EUSAPIA")
elif Bv > Ev:
	print("BARSANULFO")
else:
	print("EMPATE")
-- EXECUTION TIME:
0.144291
-- ERROR:
  File "/home/codebench/codes/1764/1576/main.py", line 11
    if (v1[i]) == v2[i]
                      ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-21 17:02:02) 
-- CODE:
from numpy import *

v1 = array(eval(input("v1: ")))
v2 = array(eval(input("v2: ")))

Ev = 0
Bv = 0
i = 0

while i < size(v1):
	if (v1[i]) == v2[i]:
		Ev += 0
		Bv += 0
	elif (v1[i]) == 11 and v2[i] == 33 or (v1[i]) == 33 and v2[i] == 22 or (v1[i]) == 22 and v2[i] == 11:
		Ev += 1
	elif (v2[i]) == 11 and v1[i] == 33 or (v2[i]) == 33 and v1[i] == 22 or (v2[i]) == 22 and v1[i] == 11:
		Bv += 1
		
	i += 1
	
print(i)

if Ev > Bv:
	print("EUSAPIA")
elif Bv > Ev:
	print("BARSANULFO")
else:
	print("EMPATE")
-- EXECUTION TIME:
0.410592
-- TEST CASE 1:
---- input:
[33,22,33,22,11,11,33,22,11,11,22,33]
[22,33,22,11,11,33,22,11,11,22,33,33]
---- correct output:
12
EUSAPIA
---- user output:
12
EUSAPIA
-- TEST CASE 2:
---- input:
[33,22,33,11,33,22,11,22,33,11]
[11,33,22,33,11,33,22,11,22,33]
---- correct output:
10
EMPATE
---- user output:
10
EMPATE
-- TEST CASE 3:
---- input:
[33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11,22]
[11,33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11]
---- correct output:
18
BARSANULFO
---- user output:
18
BARSANULFO
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
