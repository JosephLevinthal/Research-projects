== TEST (2019-04-09 10:51:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite um numero: "))
y=float(input("digite um numero"))

if(2*x+y== 3):
	mensagem = "ponto pertence a reta."
else:
	mensagem = "ponto nao pertence a reta."

print(mensagem)

-- OUTPUT:
ponto pertence a reta.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:51:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite um numero: "))
y=float(input("digite um numero"))

if(2*x+y== 3):
	mensagem = "ponto pertence a reta."
else:
	mensagem = "ponto nao pertence a reta."

print(mensagem)

-- EXECUTION TIME:
0.139295
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta.
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta.
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:51:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite um numero: "))
y=float(input("digite um numero"))

if(2*x+y=3):
	mensagem = "ponto pertence a reta."
else:
	mensagem = "ponto nao pertence a reta."

print(mensagem)

-- EXECUTION TIME:
0.156091
-- ERROR:
  File "/home/codebench/codes/1637/1054/main.py", line 7
    if(2*x+y=3):
            ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:51:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite um numero: "))
y=float(input("digite um numero"))

if(2*x+y=3):
	mensagem = "ponto pertence a reta."
else:
	mensagem = "ponto nao pertence a reta."

print(mensagem)

-- ERROR:
File "XXXX", line 7
    if(2*x+y=3):
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:52:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite um numero: "))
y=float(input("digite um numero"))

if(2*x+y==3):
	mensagem = "ponto pertence a reta."
else:
	mensagem = "ponto nao pertence a reta."

print(mensagem)

-- OUTPUT:
ponto pertence a reta.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:53:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite um numero: "))
y=float(input("digite um numero"))

if(2*x+y==3):
	mensagem = "ponto pertence a reta."
else:
	mensagem = "ponto nao pertence a reta."

print(mensagem)

-- EXECUTION TIME:
0.160106
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta.
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta.
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:53:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite um numero: "))
y=float(input("digite um numero"))

if(2*x+y==3):
	mensagem = "ponto pertence a reta."
else:
	mensagem = "ponto nao pertence a reta."

print(mensagem)

-- OUTPUT:
ponto pertence a reta.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:54:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite um numero: "))
y=float(input("digite um numero"))

if(2*x+y=3==):
	mensagem = "ponto pertence a reta."
else:
	mensagem = "ponto nao pertence a reta."

print(mensagem)

-- ERROR:
File "XXXX", line 7
    if(2*x+y=3==):
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:09:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite um numero: "))
y=float(input("digite um numero"))

if(2*x+y==3):
	mensagem = "ponto pertence a reta."
else:
	mensagem = "ponto nao pertence a reta."

print(mensagem)

-- OUTPUT:
ponto pertence a reta.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:19:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite um numero: "))
y=float(input("digite um numero"))

if(2*x+y-3==0):
	mensagem = "ponto pertence a reta."
else:
	mensagem = "ponto nao pertence a reta."

print(mensagem)

-- EXECUTION TIME:
0.190306
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta.
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta.
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:20:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite um numero: "))
y=float(input("digite um numero"))

if(2*x+y-3==0):
	mensagem = "ponto pertence a reta."
else:
	mensagem = "ponto nao pertence a reta."

print(mensagem)

-- EXECUTION TIME:
0.211938
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta.
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta.
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:20:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite um numero: "))
y=float(input("digite um numero"))

if(2*x+y-3==0):
	mensagem = "ponto pertence a reta."
else:
	mensagem = "ponto nao pertence a reta."

print(mensagem)

-- EXECUTION TIME:
0.213613
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta.
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta.
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:20:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite um numero: "))
y=float(input("digite um numero"))

if(2*x+y-3==0):
	mensagem = "ponto pertence a reta."
else:
	mensagem = "ponto nao pertence a reta."

print(mensagem)

-- OUTPUT:
ponto pertence a reta.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:20:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite um numero: "))
y=float(input("digite um numero"))

if(2*x+y-3==0):
	mensagem = "ponto pertence a reta."
else:
	mensagem = "ponto nao pertence a reta."

print(mensagem)

-- EXECUTION TIME:
0.1182
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta.
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta.
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:21:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite um numero: "))
y=float(input("digite um numero"))

if(2*x+y-3==0):
	mensagem = "ponto pertence a reta."
else:
	mensagem = "ponto nao pertence a reta."

print(mensagem)

-- OUTPUT:
ponto pertence a reta.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:21:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite um numero: "))
y=float(input("digite um numero"))

if(2*x+y-3==0):
	mensagem = "ponto pertence a reta."
else:
	mensagem = "ponto nao pertence a reta."

print(mensagem)

-- OUTPUT:
ponto pertence a reta.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:21:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite um numero: "))
y=float(input("digite um numero"))

if(2*x+y-3==0):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"

print(mensagem)

-- EXECUTION TIME:
0.20153
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
