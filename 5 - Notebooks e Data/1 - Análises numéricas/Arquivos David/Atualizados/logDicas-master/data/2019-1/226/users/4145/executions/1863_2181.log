== TEST (2019-07-02 10:24:17) 
-- CODE:
from numpy import*
from numpy.linalg import*
m=array(eval(input("matriz: ")))
j=0
for i in range(size(m)):
	for k in range(shape(m)[0]):
		if k+j == shape(m)[0]-1:
			m[k,j]=0
	j=j+1
print(min(m))
		
		
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 10:25:26) 
-- CODE:
from numpy import*
from numpy.linalg import*
m=array(eval(input("matriz: ")))
j=0
for i in range(size(m)):
	for k in range(shape(m)[0]):
		if k+j == shape(m)[0]-1:
			m[k,j]=0
	j=j+1
print(min(m[i,:]))
		
		
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 10:26:00) 
-- CODE:
from numpy import*
from numpy.linalg import*
m=array(eval(input("matriz: ")))
j=0
for i in range(size(m)):
	for k in range(shape(m)[0]):
		if k+j == shape(m)[0]-1:
			m[k,j]=0
	j=j+1
print(min(m[:,:]))
		
		
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 10:26:10) 
-- CODE:
from numpy import*
from numpy.linalg import*
m=array(eval(input("matriz: ")))
j=0
for i in range(size(m)):
	for k in range(shape(m)[0]):
		if k+j == shape(m)[0]-1:
			m[k,j]=0
	j=j+1
print(min(m))
		
		
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 10:26:32) 
-- CODE:
from numpy import*
from numpy.linalg import*
m=array(eval(input("matriz: ")))
j=0
for i in range(size(m)):
	for k in range(shape(m)[0]):
		if k+j == shape(m)[0]-1:
			m[k,j]=0
	j=j+1
print(m)
		
		
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 10:28:41) 
-- CODE:
from numpy import*
from numpy.linalg import*
m=array(eval(input("matriz: ")))
j=0
for i in range(size(m)):
	for k in range(shape(m)[0]):
		if k+j == shape(m)[0]-1:
			m[k,j]=0
	j=j+1
print(m)
vet=zeros(shape(m)[0],dtype=int)
for q in range(size(m)):
	vet[q]= min(m[q,:])
print(vet)
		
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 10:31:17) 
-- CODE:
from numpy import*
from numpy.linalg import*
m=array(eval(input("matriz: ")))
j=0
for i in range(size(m)):
	for k in range(shape(m)[0]):
		if k+j == shape(m)[0]-1:
			m[k,j]=0
	j=j+1
print(m)
vet=zeros(shape(m)[0],dtype=int)
for q in range(shape(m)[0]):
	vet[q]= min(m[q,:])
print(vet)
		
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 10:31:40) 
-- CODE:
from numpy import*
from numpy.linalg import*
m=array(eval(input("matriz: ")))
j=0
for i in range(size(m)):
	for k in range(shape(m)[0]):
		if k+j == shape(m)[0]-1:
			m[k,j]=0
	j=j+1
#print(m)
vet=zeros(shape(m)[0],dtype=int)
for q in range(shape(m)[0]):
	vet[q]= min(m[q,:])
print(vet)
		
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 10:31:59) 
-- CODE:
from numpy import*
from numpy.linalg import*
m=array(eval(input("matriz: ")))
j=0
for i in range(size(m)):
	for k in range(shape(m)[0]):
		if k+j == shape(m)[0]-1:
			m[k,j]=0
	j=j+1
#print(m)
vet=zeros(shape(m)[0],dtype=int)
for q in range(shape(m)[0]):
	vet[q]= min(m[q,:])
#print(vet)
print(min(vet))
		
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 10:32:09) 
-- CODE:
from numpy import*
from numpy.linalg import*
m=array(eval(input("matriz: ")))
j=0
for i in range(size(m)):
	for k in range(shape(m)[0]):
		if k+j == shape(m)[0]-1:
			m[k,j]=0
	j=j+1
#print(m)
vet=zeros(shape(m)[0],dtype=int)
for q in range(shape(m)[0]):
	vet[q]= min(m[q,:])
#print(vet)
print(min(vet))
		
		
-- EXECUTION TIME:
1.06187
-- TEST CASE 1:
---- input:
[[10,8,2],[20,16,4],[40,32,8]]
---- correct output:
4.0
---- user output:
0
-- TEST CASE 2:
---- input:
[[0.32,0.48,0.56],[0.12,0.54,0.34],[0.67,0.89,0.76]]
---- correct output:
0.12
---- user output:
0
-- TEST CASE 3:
---- input:
[[34.5,66.7,89.7,65.8,34.6],[77.8,65.7,89.7,23.4,45.9],[12.3,98.9,23.4,67.7,55.5],[33.3,44.4,56.8,91.3,51.9],[11.1,22.2,34.5,66.5,15.9]]
---- correct output:
12.3
---- user output:
0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 10:32:23) 
-- CODE:
from numpy import*
from numpy.linalg import*
m=array(eval(input("matriz: ")))
j=0
for i in range(size(m)):
	for k in range(shape(m)[0]):
		if k+j == shape(m)[0]-1:
			m[k,j]=0
	j=j+1
#print(m)
vet=zeros(shape(m)[0],dtype=float)
for q in range(shape(m)[0]):
	vet[q]= min(m[q,:])
#print(vet)
print(min(vet))
		
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 10:32:32) 
-- CODE:
from numpy import*
from numpy.linalg import*
m=array(eval(input("matriz: ")))
j=0
for i in range(size(m)):
	for k in range(shape(m)[0]):
		if k+j == shape(m)[0]-1:
			m[k,j]=0
	j=j+1
#print(m)
vet=zeros(shape(m)[0],dtype=float)
for q in range(shape(m)[0]):
	vet[q]= min(m[q,:])
#print(vet)
print(min(vet))
		
		
-- EXECUTION TIME:
1.05027
-- TEST CASE 1:
---- input:
[[10,8,2],[20,16,4],[40,32,8]]
---- correct output:
4.0
---- user output:
0.0
-- TEST CASE 2:
---- input:
[[0.32,0.48,0.56],[0.12,0.54,0.34],[0.67,0.89,0.76]]
---- correct output:
0.12
---- user output:
0.0
-- TEST CASE 3:
---- input:
[[34.5,66.7,89.7,65.8,34.6],[77.8,65.7,89.7,23.4,45.9],[12.3,98.9,23.4,67.7,55.5],[33.3,44.4,56.8,91.3,51.9],[11.1,22.2,34.5,66.5,15.9]]
---- correct output:
12.3
---- user output:
0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 10:32:41) 
-- CODE:
from numpy import*
from numpy.linalg import*
m=array(eval(input("matriz: ")))
j=0
for i in range(size(m)):
	for k in range(shape(m)[0]):
		if k+j == shape(m)[0]-1:
			m[k,j]=0
	j=j+1
#print(m)
vet=zeros(shape(m)[0],dtype=float)
for q in range(shape(m)[0]):
	vet[q]= min(m[q,:])
#print(vet)
print(min(vet))
		
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 10:32:50) 
-- CODE:
from numpy import*
from numpy.linalg import*
m=array(eval(input("matriz: ")))
j=0
for i in range(size(m)):
	for k in range(shape(m)[0]):
		if k+j == shape(m)[0]-1:
			m[k,j]=0
	j=j+1
#print(m)
vet=zeros(shape(m)[0],dtype=float)
for q in range(shape(m)[0]):
	vet[q]= min(m[q,:])
#print(vet)
print(min(vet))
		
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 10:33:00) 
-- CODE:
from numpy import*
from numpy.linalg import*
m=array(eval(input("matriz: ")))
j=0
for i in range(size(m)):
	for k in range(shape(m)[0]):
		if k+j == shape(m)[0]-1:
			m[k,j]=0
	j=j+1
#print(m)
vet=zeros(shape(m)[0],dtype=float)
for q in range(shape(m)[0]):
	vet[q]= min(m[q,:])
#print(vet)
print(min(vet))
		
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 10:33:29) 
-- CODE:
from numpy import*
from numpy.linalg import*
m=array(eval(input("matriz: ")))
j=0
for i in range(size(m)):
	for k in range(shape(m)[0]):
		if k+j == shape(m)[0]-1:
			m[k,j]=0
	j=j+1
#print(m)
vet=zeros(shape(m)[0],dtype=float)
for q in range(shape(m)[0]):
	vet[q]= min(m[q,:])
#print(vet)
print(min(vet))
		
		
-- EXECUTION TIME:
1.04289
-- TEST CASE 1:
---- input:
[[10,8,2],[20,16,4],[40,32,8]]
---- correct output:
4.0
---- user output:
0.0
-- TEST CASE 2:
---- input:
[[0.32,0.48,0.56],[0.12,0.54,0.34],[0.67,0.89,0.76]]
---- correct output:
0.12
---- user output:
0.0
-- TEST CASE 3:
---- input:
[[34.5,66.7,89.7,65.8,34.6],[77.8,65.7,89.7,23.4,45.9],[12.3,98.9,23.4,67.7,55.5],[33.3,44.4,56.8,91.3,51.9],[11.1,22.2,34.5,66.5,15.9]]
---- correct output:
12.3
---- user output:
0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 10:46:15) 
-- CODE:
from numpy import*
from numpy.linalg import*
m=array(eval(input("matriz: ")))
j=0
for i in range(size(m)):
	for k in range(shape(m)[0]):
		if k+j == shape(m)[0]-1:
			m[k,j]=0
	j=j+1
#print(m)
vet=zeros(shape(m)[0],dtype=float)
for q in range(shape(m)[0]):
	vet[q]= min(m[q,:])
#print(vet)
print(min(vet))
		
		
-- EXECUTION TIME:
0.860425
-- TEST CASE 1:
---- input:
[[10,8,2],[20,16,4],[40,32,8]]
---- correct output:
4.0
---- user output:
0.0
-- TEST CASE 2:
---- input:
[[0.32,0.48,0.56],[0.12,0.54,0.34],[0.67,0.89,0.76]]
---- correct output:
0.12
---- user output:
0.0
-- TEST CASE 3:
---- input:
[[34.5,66.7,89.7,65.8,34.6],[77.8,65.7,89.7,23.4,45.9],[12.3,98.9,23.4,67.7,55.5],[33.3,44.4,56.8,91.3,51.9],[11.1,22.2,34.5,66.5,15.9]]
---- correct output:
12.3
---- user output:
0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 10:46:25) 
-- CODE:
from numpy import*
from numpy.linalg import*
m=array(eval(input("matriz: ")))
j=0
for i in range(size(m)):
	for k in range(shape(m)[0]):
		if k+j == shape(m)[0]-1:
			m[k,j]=0
	j=j+1
#print(m)
vet=zeros(shape(m)[0],dtype=float)
for q in range(shape(m)[0]):
	vet[q]= min(m[q,:])
#print(vet)
print(min(vet))
		
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 10:46:36) 
-- CODE:
from numpy import*
from numpy.linalg import*
m=array(eval(input("matriz: ")))
j=0
for i in range(size(m)):
	for k in range(shape(m)[0]):
		if k+j == shape(m)[0]-1:
			m[k,j]=0
	j=j+1
#print(m)
vet=zeros(shape(m)[0],dtype=float)
for q in range(shape(m)[0]):
	vet[q]= min(m[q,:])
#print(vet)
print(min(vet))
		
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 10:46:44) 
-- CODE:
from numpy import*
from numpy.linalg import*
m=array(eval(input("matriz: ")))
j=0
for i in range(size(m)):
	for k in range(shape(m)[0]):
		if k+j == shape(m)[0]-1:
			m[k,j]=0
	j=j+1
#print(m)
vet=zeros(shape(m)[0],dtype=float)
for q in range(shape(m)[0]):
	vet[q]= min(m[q,:])
#print(vet)
print(min(vet))
		
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 10:46:57) 
-- CODE:
from numpy import*
from numpy.linalg import*
m=array(eval(input("matriz: ")))
j=0
for i in range(size(m)):
	for k in range(shape(m)[0]):
		if k+j == shape(m)[0]-1:
			m[k,j]=0
	j=j+1
#print(m)
vet=zeros(shape(m)[0],dtype=float)
for q in range(shape(m)[0]):
	vet[q]= min(m[q,:])
#print(vet)
print(min(vet))
		
		
-- EXECUTION TIME:
1.07809
-- TEST CASE 1:
---- input:
[[10,8,2],[20,16,4],[40,32,8]]
---- correct output:
4.0
---- user output:
0.0
-- TEST CASE 2:
---- input:
[[0.32,0.48,0.56],[0.12,0.54,0.34],[0.67,0.89,0.76]]
---- correct output:
0.12
---- user output:
0.0
-- TEST CASE 3:
---- input:
[[34.5,66.7,89.7,65.8,34.6],[77.8,65.7,89.7,23.4,45.9],[12.3,98.9,23.4,67.7,55.5],[33.3,44.4,56.8,91.3,51.9],[11.1,22.2,34.5,66.5,15.9]]
---- correct output:
12.3
---- user output:
0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 10:50:04) 
-- CODE:
from numpy import*
from numpy.linalg import*
m=array(eval(input("matriz: ")))
j=0
for i in range(size(m)):
	for k in range(shape(m)[0]):
		if k+j == shape(m)[0]-1:
			m[k,j]=0
	j=j+1
vet=zeros(shape(m)[0],dtype=float)
for q in range(shape(m)[0]):
	vet[q]= min(m[q,:])
print(min(vet))
		
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
