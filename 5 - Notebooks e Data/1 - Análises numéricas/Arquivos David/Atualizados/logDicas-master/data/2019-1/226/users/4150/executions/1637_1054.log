== TEST (2019-04-09 10:54:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = int(input("digite a cordenada X: "))
y = int(input("digite a cordenada Y: "))

if (2x+y=3):
	mensagem = "ponto pertence a reta"
else :
	mensagem = "ponto nao pertence a reta"
print(mensagem)

-- ERROR:
File "XXXX", line 8
    if (2x+y=3):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:54:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = int(input("digite a cordenada X: "))
y = int(input("digite a cordenada Y: "))

if (2*x+y=3):
	mensagem = "ponto pertence a reta"
else :
	mensagem = "ponto nao pertence a reta"
print(mensagem)

-- ERROR:
File "XXXX", line 8
    if (2*x+y=3):
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:55:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = int(input("digite a cordenada X: "))
y = int(input("digite a cordenada Y: "))

if (2*x+y == 3):
	mensagem = "ponto pertence a reta"
else :
	mensagem = "ponto nao pertence a reta"
print(mensagem)

-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:55:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = int(input("digite a cordenada X: "))
y = int(input("digite a cordenada Y: "))

if (2*x+y == 3):
	mensagem = "ponto pertence a reta"
else :
	mensagem = "ponto nao pertence a reta"
print(mensagem)

-- EXECUTION TIME:
0.131846
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
