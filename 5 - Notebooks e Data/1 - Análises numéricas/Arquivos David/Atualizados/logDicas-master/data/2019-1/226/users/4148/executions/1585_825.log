== TEST (2019-03-28 10:54:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = input("digite um valor para raio r")
print(a = 3,14*a**2)
-- ERROR:
File "XXXX", line 5
    print(a = 3,14*a**2)
               ^
SyntaxError: positional argument follows keyword argument
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:55:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = input("digite um valor para raio r")
print(A = 3,14*a**2)
-- ERROR:
File "XXXX", line 5
    print(A = 3,14*a**2)
               ^
SyntaxError: positional argument follows keyword argument
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:55:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("digite um valor para raio r"))
print(A = 3,14*a**2)
-- ERROR:
File "XXXX", line 5
    print(A = 3,14*a**2)
               ^
SyntaxError: positional argument follows keyword argument
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:56:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("determine um valor para raio r: "))
print(A = 3,14*a**2)
-- ERROR:
File "XXXX", line 5
    print(A = 3,14*a**2)
               ^
SyntaxError: positional argument follows keyword argument
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:56:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("determine um valor para raio r: "))
print(A = 3,14*a**2)
-- ERROR:
File "XXXX", line 5
    print(A = 3,14*a**2)
               ^
SyntaxError: positional argument follows keyword argument
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:57:37) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("determine um valor para raio r: "))
print(mach(A = pi*a**2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(mach(A = pi*a**2))
NameError: name 'mach' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:58:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("determine um valor para raio r: "))]
mach=pi
print(A = pi*a**2)
-- ERROR:
File "XXXX", line 4
    a = float(input())]
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:58:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("determine um valor para raio r: "))
mach=pi
print(A = pi*a**2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    mach=pi
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 11:03:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
r = float(input("valor do raio r: "))    


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    mach=pi
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 11:04:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
r = float(input("valor do raio r: ")) 
A = pi * r ** 2


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    mach=pi
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 11:04:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
r = float(input("valor do raio r: ")) 
a = pi * r ** 2


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    mach=pi
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 11:06:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
r = float(input("valor do raio")) 
a = pi * r ** 2
v = (4/3) * pi *(r**3)
print(round(a, 3))
print(round(v, 3))

-- OUTPUT:
63.617
381.704
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 11:07:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
r = float(input("valor do raio")) 
a = pi * r ** 2
v = (4/3) * pi *(r**3)
print(round(a, 3))
print(round(v, 3))

-- EXECUTION TIME:
0.108282
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.617
381.704
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.388
7871.076
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
