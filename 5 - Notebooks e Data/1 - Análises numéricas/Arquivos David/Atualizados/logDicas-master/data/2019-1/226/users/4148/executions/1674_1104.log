== SUBMITION (2019-05-01 20:24:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("valor a: "))
b = float(input("valor b: "))
c = float(input("valor c: "))
d = float(input("valor d: "))

print("intervalo 1:", a, ",", b)
print("intervalo 2:", c ",", d)

if(b<=a)or(d<=c):
   print("Entradas invalidas")
elif(b<c):
	print("Nao ha intersecao")
else:
	print("Ha intersecao")
	
		
-- EXECUTION TIME:
0.165314
-- ERROR:
  File "/home/codebench/codes/1674/1104/main.py", line 10
    print("intervalo 2:", c ",", d)
                              ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 20:24:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("valor a: "))
b = float(input("valor b: "))
c = float(input("valor c: "))
d = float(input("valor d: "))

print("intervalo 1:", a, ",", b)
print("intervalo 2:", c ",", d)

if(b<=a)or(d<=c):
   print("Entradas invalidas")
elif(b<c):
	print("Nao ha intersecao")
else:
	print("Ha intersecao")
	
		
-- EXECUTION TIME:
0.195776
-- ERROR:
  File "/home/codebench/codes/1674/1104/main.py", line 10
    print("intervalo 2:", c ",", d)
                              ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 20:25:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("valor a: "))
b = float(input("valor b: "))
c = float(input("valor c: "))
d = float(input("valor d: "))

print("intervalo 1: ", a, ",", b)
print("intervalo 2: ", c ",", d)

if(b<=a)or(d<=c):
   print("Entradas invalidas")
elif(b<c):
	print("Nao ha intersecao")
else:
	print("Ha intersecao")
	
		
-- EXECUTION TIME:
0.143583
-- ERROR:
  File "/home/codebench/codes/1674/1104/main.py", line 10
    print("intervalo 2: ", c ",", d)
                               ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 20:25:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("valor a: "))
b = float(input("valor b: "))
c = float(input("valor c: "))
d = float(input("valor d: "))

print("intervalo 1: ", a, ",", b)
print("intervalo 2: ", c ",", d)

if(b<=a)or(d<=c):
   print("Entradas invalidas")
elif(b<c):
	print("Nao ha intersecao")
else:
	print("Ha intersecao")
	
		
-- EXECUTION TIME:
0.202578
-- ERROR:
  File "/home/codebench/codes/1674/1104/main.py", line 10
    print("intervalo 2: ", c ",", d)
                               ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 20:26:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("valor a: "))
b = float(input("valor b: "))
c = float(input("valor c: "))
d = float(input("valor d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c ",", d)

if(b<=a)or(d<=c):
   print("Entradas invalidas")
elif(b<c):
	print("Nao ha intersecao")
else:
	print("Ha intersecao")
	
		
-- EXECUTION TIME:
0.140811
-- ERROR:
  File "/home/codebench/codes/1674/1104/main.py", line 10
    print("Intervalo 2: ", c ",", d)
                               ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 20:26:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("valor a: "))
b = float(input("valor b: "))
c = float(input("valor c: "))
d = float(input("valor d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c ",", d)

if(b<=a)or(d<=c):
   print("Entradas invalidas")
elif(b<c):
	print("Nao ha intersecao")
else:
	print("Ha intersecao")
	
		
-- EXECUTION TIME:
0.138272
-- ERROR:
  File "/home/codebench/codes/1674/1104/main.py", line 10
    print("Intervalo 2: ", c ",", d)
                               ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:26:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("valor a: "))
b = float(input("valor b: "))
c = float(input("valor c: "))
d = float(input("valor d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c ",", d)

if(b<=a)or(d<=c):
   print("Entradas invalidas")
elif(b<c):
	print("Nao ha intersecao")
else:
	print("Ha intersecao")
	
		
-- ERROR:
File "XXXX", line 10
    print("Intervalo 2: ", c ",", d)
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:27:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("valor a: "))
b = float(input("valor b: "))
c = float(input("valor c: "))
d = float(input("valor d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c ",", d)

if(b<=a)or(d<=c):
   print("Entradas invalidas")
elif(b<c):
	print("Nao ha intersecao")
else:
	print("Ha intersecao")
	
		
-- ERROR:
File "XXXX", line 10
    print("Intervalo 2: ", c ",", d)
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:27:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("valor a: "))
b = float(input("valor b: "))
c = float(input("valor c: "))
d = float(input("valor d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c ",", d)

if(b<=a)or(d<=c):
   print("Entradas invalidas")
elif(b<c):
	print("Nao ha intersecao")
else:
	print("Ha intersecao")
	
		
-- ERROR:
File "XXXX", line 10
    print("Intervalo 2: ", c ",", d)
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:27:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("valor a: "))
b = float(input("valor b: "))
c = float(input("valor c: "))
d = float(input("valor d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c ",", d)

if(b<=a)or(d<=c):
   print("Entradas invalidas")
elif(b<c):
	print("Nao ha intersecao")
else:
	print("Ha intersecao")
	
		
-- ERROR:
File "XXXX", line 10
    print("Intervalo 2: ", c ",", d)
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:27:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("valor a: "))
b = float(input("valor b: "))
c = float(input("valor c: "))
d = float(input("valor d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c ",", d)

if(b<=a)or(d<=c):
   print("Entradas invalidas")
elif(b<c):
	print("Nao ha intersecao")
else:
	print("Ha intersecao")
	
		
-- ERROR:
File "XXXX", line 10
    print("Intervalo 2: ", c ",", d)
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:28:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("valor de a: "))
b = float(input("valor de b: "))
c = float(input("valor de c: "))
d = float(input("valor de d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c ",", d)

if(b<=a)or(d<=c):
   print("Entradas invalidas")
elif(b<c):
	print("Nao ha intersecao")
else:
	print("Ha intersecao")
	
		
-- ERROR:
File "XXXX", line 10
    print("Intervalo 2: ", c ",", d)
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:28:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("valor de a: "))
b = float(input("valor de b: "))
c = float(input("valor de c: "))
d = float(input("valor de d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c ",", d)

if(b<=a)or(d<=c):
   print("Entradas invalidas")
elif(b<c):
	print("Nao ha intersecao")
else:
	print("Ha intersecao")
	
		
-- ERROR:
File "XXXX", line 10
    print("Intervalo 2: ", c ",", d)
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:28:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("valor de a: "))
b = float(input("valor de b: "))
c = float(input("valor de c: "))
d = float(input("valor de d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c ",", d)

if(b<=a)or(d<=c):
   print("Entradas invalidas")
elif(b<c):
	print("Nao ha intersecao")
else:
	print("Ha intersecao")
	
		
-- ERROR:
File "XXXX", line 10
    print("Intervalo 2: ", c ",", d)
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:30:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("valor de a: "))
b = float(input("valor de b: "))
c = float(input("valor de c: "))
d = float(input("valor de d: "))

print("Intervalo 1: ",a,",",b)
print("Intervalo 2: ",c,",",d)

if(b<=a)or(d<=c):
   print("Entradas invalidas")
elif(b<c):
	print("Nao ha intersecao")
else:
	print("Ha intersecao")
	
		
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 20:30:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("valor de a: "))
b = float(input("valor de b: "))
c = float(input("valor de c: "))
d = float(input("valor de d: "))

print("Intervalo 1: ",a,",",b)
print("Intervalo 2: ",c,",",d)

if(b<=a)or(d<=c):
   print("Entradas invalidas")
elif(b<c):
	print("Nao ha intersecao")
else:
	print("Ha intersecao")
	
		
-- EXECUTION TIME:
0.131996
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1:  1.5 , 5.0
Intervalo 2:  2.5 , 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1:  -1.0 , -3.0
Intervalo 2:  1.0 , 3.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
