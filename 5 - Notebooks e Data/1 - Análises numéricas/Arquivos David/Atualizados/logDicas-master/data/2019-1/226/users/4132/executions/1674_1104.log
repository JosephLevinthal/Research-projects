== TEST (2019-04-26 22:10:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a =float(input("Digite a: "))
b =float(input("Digite b: "))
c =float(input("Digite c: "))
d =float(input("Digite d: "))

if((b>a)and(d>c)):
	if(((c>=a)and(c<=b)) or ((d>=a)and(d<=b))):
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Ha interseccao")
	else:
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Nao ha interseccao")
else:
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha interseccao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 22:11:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a =float(input("Digite a: "))
b =float(input("Digite b: "))
c =float(input("Digite c: "))
d =float(input("Digite d: "))

if((b>a)and(d>c)):
	if(((c>=a)and(c<=b)) or ((d>=a)and(d<=b))):
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Ha interseccao")
	else:
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Nao ha interseccao")
else:
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
	print("Entradas invalidas")
-- EXECUTION TIME:
0.124001
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha interseccao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha interseccao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:11:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a =float(input("Digite a: "))
b =float(input("Digite b: "))
c =float(input("Digite c: "))
d =float(input("Digite d: "))

if((b>a)and(d>c)):
	if(((c>=a)and(c<=b)) or ((d>=a)and(d<=b))):
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Ha interseccao")
	else:
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Nao ha interseccao")
else:
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha interseccao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:12:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a =float(input("Digite a: "))
b =float(input("Digite b: "))
c =float(input("Digite c: "))
d =float(input("Digite d: "))

if((b>a)and(d>c)):
	if(((c>=a)and(c<=b)) or ((d>=a)and(d<=b))):
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Ha interseccao")
	else:
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Nao ha interseccao")
else:
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha interseccao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:12:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a =float(input("Digite a: "))
b =float(input("Digite b: "))
c =float(input("Digite c: "))
d =float(input("Digite d: "))

if((b>a)and(d>c)):
	if(((c>=a)and(c<=b)) or ((d>=a)and(d<=b))):
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Ha interseccao")
	else:
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Nao ha interseccao")
else:
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha interseccao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:15:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a =float(input("Digite a: "))
b =float(input("Digite b: "))
c =float(input("Digite c: "))
d =float(input("Digite d: "))

if((b>a)and(d>c)):
	if(((c>=a)and(c<=b)) or ((d>=a)and(d<=b))):
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Ha interseccao")
	elif(((a>=c)and(a<=d)) or ((b>=c)and(b<=d))):
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Ha interseccao")
	else:
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Nao ha interseccao")
else:
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha interseccao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 22:15:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a =float(input("Digite a: "))
b =float(input("Digite b: "))
c =float(input("Digite c: "))
d =float(input("Digite d: "))

if((b>a)and(d>c)):
	if(((c>=a)and(c<=b)) or ((d>=a)and(d<=b))):
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Ha interseccao")
	elif(((a>=c)and(a<=d)) or ((b>=c)and(b<=d))):
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Ha interseccao")
	else:
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Nao ha interseccao")
else:
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
	print("Entradas invalidas")
-- EXECUTION TIME:
0.136079
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha interseccao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha interseccao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:15:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a =float(input("Digite a: "))
b =float(input("Digite b: "))
c =float(input("Digite c: "))
d =float(input("Digite d: "))

if((b>a)and(d>c)):
	if(((c>=a)and(c<=b)) or ((d>=a)and(d<=b))):
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Ha interseccao")
	elif(((a>=c)and(a<=d)) or ((b>=c)and(b<=d))):
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Ha interseccao")
	else:
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Nao ha interseccao")
else:
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha interseccao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:15:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a =float(input("Digite a: "))
b =float(input("Digite b: "))
c =float(input("Digite c: "))
d =float(input("Digite d: "))

if((b>a)and(d>c)):
	if(((c>=a)and(c<=b)) or ((d>=a)and(d<=b))):
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Ha interseccao")
	elif(((a>=c)and(a<=d)) or ((b>=c)and(b<=d))):
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Ha interseccao")
	else:
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Nao ha interseccao")
else:
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha interseccao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 22:18:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a =float(input("Digite a: "))
b =float(input("Digite b: "))
c =float(input("Digite c: "))
d =float(input("Digite d: "))

if((b>a)and(d>c)):
	if(((c>=a)and(c<=b)) or ((d>=a)and(d<=b))):
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Ha interseccao")
	elif(((a>=c)and(a<=d)) or ((b>=c)and(b<=d))):
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Ha interseccao")
	else:
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Nao ha interseccao")
else:
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
	print("Entradas invalidas")
-- EXECUTION TIME:
0.17584
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha interseccao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha interseccao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:18:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a =float(input("Digite a: "))
b =float(input("Digite b: "))
c =float(input("Digite c: "))
d =float(input("Digite d: "))

if((b>a)and(d>c)):
	if(((c>=a)and(c<=b)) or ((d>=a)and(d<=b))):
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Ha interseccao")
	elif(((a>=c)and(a<=d)) or ((b>=c)and(b<=d))):
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Ha interseccao")
	else:
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Nao ha interseccao")
else:
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha interseccao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:21:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a =float(input("Digite a: "))
b =float(input("Digite b: "))
c =float(input("Digite c: "))
d =float(input("Digite d: "))

if((b>a)and(d>c)):
	if(((c>=a)and(c<=b)) or ((d>=a)and(d<=b))):
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Ha interseccao")
	elif(((a>=c)and(a<=d)) or ((b>=c)and(b<=d))):
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Ha interseccao")
	else:
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Nao ha interseccao")
else:
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
	print("Entradas invalidas")
-- EXECUTION TIME:
0.211758
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha interseccao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha interseccao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:43:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a =float(input("Digite a: "))
b =float(input("Digite b: "))
c =float(input("Digite c: "))
d =float(input("Digite d: "))

print("Intervalo 1: ",a,",",b)
print("Intervalo 2: ",c,",",d)

if(b<=a)or(d<=c):
	print("Entradas invalidas")
elif(b<c):
	print("Nao ha intersecao")
else:
	print("Ha intersecao")
-- EXECUTION TIME:
0.225352
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1:  1.5 , 5.0
Intervalo 2:  2.5 , 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1:  -1.0 , -3.0
Intervalo 2:  1.0 , 3.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
