== TEST (2019-05-11 13:06:26) 
-- CODE:
p = int(input("insira a quantidade inicial de pirarucus:"))
pc = float(input("insira o percentual de crescimento dos pirarucus:"))
qm = int(input("insira a quantidade de pirarucus retirados cada mes:"))

mes = 0

while(p > 0 and p < 8000):
	cp = (p * pc)/100
	p = p + cp - qm
	mes = mes + 1
	qm = int(input("insira a nova quantidade retirada:"))

if(p <= 0):
	msg = "ZERO"
else:
	msg = "MAXIMO"
print(msg)
print(mes)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    qm = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 13:07:54) 
-- CODE:
p = int(input("insira a quantidade inicial de pirarucus:"))
pc = float(input("insira o percentual de crescimento dos pirarucus:"))
qm = int(input("insira a quantidade de pirarucus retirados cada mes:"))

mes = 0

while(p > 0 and p < 8000):
	cp = (p * pc)/100
	p = p + cp - qm
	mes = mes + 1
qm = int(input("insira a nova quantidade retirada:"))

if(p <= 0):
	msg = "ZERO"
else:
	msg = "MAXIMO"
print(msg)
print(mes)
	
-- OUTPUT:
MAXIMO
5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 13:14:58) 
-- CODE:
p = int(input("insira a quantidade inicial de pirarucus:"))
pc = float(input("insira o percentual de crescimento dos pirarucus:"))
qm = int(input("insira a quantidade de pirarucus retirados cada mes:"))

mes = 0

while(p > 0 and p < 8000):
	cp = (p * pc)/100
	p = p + cp - qm
	qm = int(input("insira a nova quantidade retirada:"))
	mes = mes + 1
if(p <= 0):
	msg = "ZERO"
else:
	msg = "MAXIMO"
print(msg)
print(mes)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    qm = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 13:17:06) 
-- CODE:
p = int(input("insira a quantidade inicial de pirarucus:"))
pc = float(input("insira o percentual de crescimento dos pirarucus:"))
qm = int(input("insira a quantidade de pirarucus retirados cada mes:"))

mes = 0

while(p > 0 and p < 8000):
	cp = (p * pc)/100
	p = p + cp - qm
	mes = mes + 1
	if(p > 0 and p < 8000):
		qm = int(input("insira a nova quantidade retirada:"))

if(p <= 0):
	msg = "ZERO"
else:
	msg = "MAXIMO"
print(msg)
print(mes)
	
-- OUTPUT:
MAXIMO
5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-11 13:17:46) 
-- CODE:
p = int(input("insira a quantidade inicial de pirarucus:"))
pc = float(input("insira o percentual de crescimento dos pirarucus:"))
qm = int(input("insira a quantidade de pirarucus retirados cada mes:"))

mes = 0

while(p > 0 and p < 8000):
	cp = (p * pc)/100
	p = p + cp - qm
	mes = mes + 1
	if(p > 0 and p < 8000):
		qm = int(input("insira a nova quantidade retirada:"))

if(p <= 0):
	msg = "ZERO"
else:
	msg = "MAXIMO"
print(msg)
print(mes)
	
-- EXECUTION TIME:
3.67923
-- TEST CASE 1:
---- input:
1234
56
7
8
9
10
11
---- correct output:
MAXIMO
5
---- user output:
MAXIMO
5
-- TEST CASE 2:
---- input:
5432
1
987
654
4321
---- correct output:
ZERO
3
---- user output:
ZERO
3
-- TEST CASE 3:
---- input:
2468
35
1234
900
1
2
3
4
5
---- correct output:
MAXIMO
7
---- user output:
MAXIMO
7
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
