== SUBMITION (2019-04-25 10:21:31) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("x:"))
y = float(input("y:"))
z = float(input("z:"))

if ((x >= y + z) or (y >= x + z) or (z >= y + x)):
	print("Nao e um triangulo")
else:
	if ((x == y) and (y == z)):
	   print("equilatero")
	else:
		if((x == y) or (y == z) or (z == x)):
		   print("isoceles")
		else:
			print("escaleno")
-- EXECUTION TIME:
0.175056
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Nao e um triangulo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:23:37) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("x:"))
y = float(input("y:"))
z = float(input("z:"))

if ((x >= y + z) or (y >= x + z) or (z >= y + x)):
	print("Tipo de triangulo: invalido")
else:
	if ((x == y) and (y == z)):
	   print("Tipo de triangulo: equilatero")
	else:
		if((x == y) or (y == z) or (z == x)):
		   print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de tiangulo: escaleno")
-- EXECUTION TIME:
0.212442
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Tipo de tiangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:23:38) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("x:"))
y = float(input("y:"))
z = float(input("z:"))

if ((x >= y + z) or (y >= x + z) or (z >= y + x)):
	print("Tipo de triangulo: invalido")
else:
	if ((x == y) and (y == z)):
	   print("Tipo de triangulo: equilatero")
	else:
		if((x == y) or (y == z) or (z == x)):
		   print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de tiangulo: escaleno")
-- EXECUTION TIME:
0.161703
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Tipo de tiangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:23:39) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("x:"))
y = float(input("y:"))
z = float(input("z:"))

if ((x >= y + z) or (y >= x + z) or (z >= y + x)):
	print("Tipo de triangulo: invalido")
else:
	if ((x == y) and (y == z)):
	   print("Tipo de triangulo: equilatero")
	else:
		if((x == y) or (y == z) or (z == x)):
		   print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de tiangulo: escaleno")
-- OUTPUT:
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:24:50) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("x:"))
y = float(input("y:"))
z = float(input("z:"))

if ((x >= y + z) or (y >= x + z) or (z >= y + x)):
	print("Tipo de triangulo: invalido")
else:
	if ((x == y) and (y == z)):
	   print("Tipo de triangulo: equilatero")
	else:
		if((x == y) or (y == z) or (z == x)):
		   print("Tipo de triangulo: isoceles")
		else:
			print("Entradas: "a , b , c)
			print("Tipo de tiangulo: escaleno")
-- ERROR:
File "XXXX", line 16
    print("Entradas: "a , b , c)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:25:06) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("x:"))
y = float(input("y:"))
z = float(input("z:"))

if ((x >= y + z) or (y >= x + z) or (z >= y + x)):
	print("Tipo de triangulo: invalido")
else:
	if ((x == y) and (y == z)):
	   print("Tipo de triangulo: equilatero")
	else:
		if((x == y) or (y == z) or (z == x)):
		   print("Tipo de triangulo: isoceles")
		else:
			print("Entradas: "x , y , z)
			print("Tipo de tiangulo: escaleno")
-- ERROR:
File "XXXX", line 16
    print("Entradas: "x , y , z)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:31:38) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("x:"))
y = float(input("y:"))
z = float(input("z:"))
print("Entradas:", x",", ","y, ","z )
if ((x >= y + z) or (y >= x + z) or (z >= y + x)):
	print("Tipo de triangulo: invalido")
else:
	if ((x == y) and (y == z)):
	   print("Tipo de triangulo: equilatero")
	else:
		if((x == y) or (y == z) or (z == x)):
		   print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de tiangulo: escaleno")
-- ERROR:
File "XXXX", line 6
    print("Entradas:", x",", ","y, ","z )
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:31:47) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("x:"))
y = float(input("y:"))
z = float(input("z:"))
print("Entradas:", x"," , ","y , ","z )
if ((x >= y + z) or (y >= x + z) or (z >= y + x)):
	print("Tipo de triangulo: invalido")
else:
	if ((x == y) and (y == z)):
	   print("Tipo de triangulo: equilatero")
	else:
		if((x == y) or (y == z) or (z == x)):
		   print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de tiangulo: escaleno")
-- ERROR:
File "XXXX", line 6
    print("Entradas:", x"," , ","y , ","z )
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:32:06) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("x:"))
y = float(input("y:"))
z = float(input("z:"))
print("Entradas:",x,y,z )
if ((x >= y + z) or (y >= x + z) or (z >= y + x)):
	print("Tipo de triangulo: invalido")
else:
	if ((x == y) and (y == z)):
	   print("Tipo de triangulo: equilatero")
	else:
		if((x == y) or (y == z) or (z == x)):
		   print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de tiangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 4.0 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:32:18) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("x:"))
y = float(input("y:"))
z = float(input("z:"))
print("Entradas:",x,",",y,z )
if ((x >= y + z) or (y >= x + z) or (z >= y + x)):
	print("Tipo de triangulo: invalido")
else:
	if ((x == y) and (y == z)):
	   print("Tipo de triangulo: equilatero")
	else:
		if((x == y) or (y == z) or (z == x)):
		   print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de tiangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:32:34) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("x:"))
y = float(input("y:"))
z = float(input("z:"))
print("Entradas:",x,",",y",",z )
if ((x >= y + z) or (y >= x + z) or (z >= y + x)):
	print("Tipo de triangulo: invalido")
else:
	if ((x == y) and (y == z)):
	   print("Tipo de triangulo: equilatero")
	else:
		if((x == y) or (y == z) or (z == x)):
		   print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de tiangulo: escaleno")
-- ERROR:
File "XXXX", line 6
    print("Entradas:",x,",",y",",z )
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:32:40) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("x:"))
y = float(input("y:"))
z = float(input("z:"))
print("Entradas:",x,",",y,",",z )
if ((x >= y + z) or (y >= x + z) or (z >= y + x)):
	print("Tipo de triangulo: invalido")
else:
	if ((x == y) and (y == z)):
	   print("Tipo de triangulo: equilatero")
	else:
		if((x == y) or (y == z) or (z == x)):
		   print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de tiangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:32:45) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("x:"))
y = float(input("y:"))
z = float(input("z:"))
print("Entradas:",x,",",y,",",z )
if ((x >= y + z) or (y >= x + z) or (z >= y + x)):
	print("Tipo de triangulo: invalido")
else:
	if ((x == y) and (y == z)):
	   print("Tipo de triangulo: equilatero")
	else:
		if((x == y) or (y == z) or (z == x)):
		   print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de tiangulo: escaleno")
-- EXECUTION TIME:
0.159101
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de tiangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:33:07) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("x:"))
y = float(input("y:"))
z = float(input("z:"))
print("Entradas:",x,",",y,",",z )
if ((x >= y + z) or (y >= x + z) or (z >= y + x)):
	print("Tipo de triangulo: invalido")
else:
	if ((x == y) and (y == z)):
	   print("Tipo de triangulo: equilatero")
	else:
		if((x == y) or (y == z) or (z == x)):
		   print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de tiangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:36:25) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("x:"))
y = float(input("y:"))
z = float(input("z:"))
print("Entradas:",x,",",y,",",z )
if ((x + y <= z) or (z + x <= y) or (y + x <= x)):
	print("Tipo de triangulo: invalido")
else:
	if ((x == y) and (y == z)):
	   print("Tipo de triangulo: equilatero")
	else:
		if((x == y) or (y == z) or (z == x)):
		   print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de tiangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:36:30) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("x:"))
y = float(input("y:"))
z = float(input("z:"))
print("Entradas:",x,",",y,",",z )
if ((x + y <= z) or (z + x <= y) or (y + x <= x)):
	print("Tipo de triangulo: invalido")
else:
	if ((x == y) and (y == z)):
	   print("Tipo de triangulo: equilatero")
	else:
		if((x == y) or (y == z) or (z == x)):
		   print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de tiangulo: escaleno")
-- EXECUTION TIME:
0.191524
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de tiangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:36:38) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("x:"))
y = float(input("y:"))
z = float(input("z:"))
print("Entradas:",x,",",y,",",z )
if ((x + y <= z) or (z + x <= y) or (y + x <= x)):
	print("Tipo de triangulo: invalido")
else:
	if ((x == y) and (y == z)):
	   print("Tipo de triangulo: equilatero")
	else:
		if((x == y) or (y == z) or (z == x)):
		   print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de tiangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:38:06) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("x:"))
b = float(input("y:"))
c = float(input("z:"))
print("Entradas:",a,",",b,",",c )
if ((a + b <= c) or (c + a <= b) or (b + c <= a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
	   print("Tipo de triangulo: equilatero")
	else:
		if((a == b) or (b == c) or (c == a)):
		   print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de tiangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:38:28) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("x:"))
b = float(input("y:"))
c = float(input("z:"))
print("Entradas:",a,",",b,",",c )
if ((a + b <= c) or (c + a <= b) or (b + c <= a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
	   print("Tipo de triangulo: equilatero")
	else:
		if((a == b) or (b == c) or (c == a)):
		   print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de tiangulo: escaleno")
-- EXECUTION TIME:
0.206083
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de tiangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:38:48) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("x:"))
b = float(input("y:"))
c = float(input("z:"))

print("Entradas:",a,",",b,",",c )

if ((a + b <= c) or (c + a <= b) or (b + c <= a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
	   print("Tipo de triangulo: equilatero")
	else:
		if((a == b) or (b == c) or (c == a)):
		   print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de tiangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:39:01) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("x:"))
b = float(input("y:"))
c = float(input("z:"))

print("Entradas:",a,",",b,",",c )

if ((a + b <= c) or (c + a <= b) or (b + c <= a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
	   print("Tipo de triangulo: equilatero")
	else:
		if((a == b) or (b == c) or (c == a)):
		   print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de tiangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:39:06) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("x:"))
b = float(input("y:"))
c = float(input("z:"))

print("Entradas:",a,",",b,",",c )

if ((a + b <= c) or (c + a <= b) or (b + c <= a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
	   print("Tipo de triangulo: equilatero")
	else:
		if((a == b) or (b == c) or (c == a)):
		   print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de tiangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:39:10) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("x:"))
b = float(input("y:"))
c = float(input("z:"))

print("Entradas:",a,",",b,",",c )

if ((a + b <= c) or (c + a <= b) or (b + c <= a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
	   print("Tipo de triangulo: equilatero")
	else:
		if((a == b) or (b == c) or (c == a)):
		   print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de tiangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:39:24) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("x:"))
b = float(input("y:"))
c = float(input("z:"))

print("Entradas:",a,",",b,",",c )

if ((a + b <= c) or (c + a <= b) or (b + c <= a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
	   print("Tipo de triangulo: equilatero")
	else:
		if((a == b) or (b == c) or (c == a)):
		   print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de tiangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:39:55) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("x:"))
b = float(input("y:"))
c = float(input("z:"))

print("Entradas:",a,",",b,",",c )

if ((a + b <= c) or (c + a <= b) or (b + c <= a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
	   print("Tipo de triangulo: equilatero")
	else:
		if((a == b) or (b == c) or (c == a)):
		   print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de tiangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:39:59) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("x:"))
b = float(input("y:"))
c = float(input("z:"))

print("Entradas:",a,",",b,",",c )

if ((a + b <= c) or (c + a <= b) or (b + c <= a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
	   print("Tipo de triangulo: equilatero")
	else:
		if((a == b) or (b == c) or (c == a)):
		   print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de tiangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:40:06) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("x:"))
b = float(input("y:"))
c = float(input("z:"))

print("Entradas:",a,",",b,",",c )

if ((a + b <= c) or (c + a <= b) or (b + c <= a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
	   print("Tipo de triangulo: equilatero")
	else:
		if((a == b) or (b == c) or (c == a)):
		   print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de tiangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:41:05) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("x:"))
b = float(input("y:"))
c = float(input("z:"))

print("Entradas:",a,",",b,",",c )

if ((a + b <= c) or (c + a <= b) or (b + c <= a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
	   print("Tipo de triangulo: equilatero")
	else:
		if((a == b) or (b == c) or (c == a)):
		   print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de tiangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:41:10) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("x:"))
b = float(input("y:"))
c = float(input("z:"))

print("Entradas:",a,",",b,",",c )

if ((a + b <= c) or (c + a <= b) or (b + c <= a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
	   print("Tipo de triangulo: equilatero")
	else:
		if((a == b) or (b == c) or (c == a)):
		   print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de tiangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:41:33) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("x:"))
b = float(input("y:"))
c = float(input("z:"))

print("Entradas:",a,",",b,",",c )

if ((a + b <= c) or (c + a <= b) or (b + c <= a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
	   print("Tipo de triangulo: equilatero")
	else:
		if((a == b) or (b == c) or (c == a)):
		   print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de tiangulo: escaleno")
-- EXECUTION TIME:
0.152516
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de tiangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:42:58) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("A:"))
b = float(input("B:"))
c = float(input("C:"))

print("Entradas:",a,",",b,",",c )

if ((a + b <= c) or (c + a <= b) or (b + c <= a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
	   print("Tipo de triangulo: equilatero")
	else:
		if((a == b) or (b == c) or (c == a)):
		   print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de tiangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:43:03) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("A:"))
b = float(input("B:"))
c = float(input("C:"))

print("Entradas:",a,",",b,",",c )

if ((a + b <= c) or (c + a <= b) or (b + c <= a)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
	   print("Tipo de triangulo: equilatero")
	else:
		if((a == b) or (b == c) or (c == a)):
		   print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de tiangulo: escaleno")
-- EXECUTION TIME:
0.120609
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de tiangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:52:15) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Lado a:"))
b = float(input("Lado b:"))
c = float(input("Lado c:"))

print("Entradas:", a,",",b,",",c)

if(a+b<=c or b+c<=a or c+a<=b):
	print("Tipo de triangulo: invalido")
elif(a == b or b == c):
	print("Tipo de triangulo: equilatero")
	elif(a==b and b!=c or b==C and b!=a):
		print("Tipo de triangulo: isosceles")
		elif(a!=b and b!=c and c!=a)
		print("Tipo de triangulo: escaleno")
-- ERROR:
File "XXXX", line 13
    elif(a==b and b!=c or b==C and b!=a):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:52:40) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Lado a:"))
b = float(input("Lado b:"))
c = float(input("Lado c:"))

print("Entradas:", a,",",b,",",c)

if(a+b<=c or b+c<=a or c+a<=b):
	print("Tipo de triangulo: invalido")
elif(a == b or b == c):
	print("Tipo de triangulo: equilatero")
elif(a==b and b!=c or b==C and b!=a):
		print("Tipo de triangulo: isosceles")
		elif(a!=b and b!=c and c!=a)
		print("Tipo de triangulo: escaleno")
-- ERROR:
File "XXXX", line 15
    elif(a!=b and b!=c and c!=a)
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:52:47) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Lado a:"))
b = float(input("Lado b:"))
c = float(input("Lado c:"))

print("Entradas:", a,",",b,",",c)

if(a+b<=c or b+c<=a or c+a<=b):
	print("Tipo de triangulo: invalido")
elif(a == b or b == c):
	print("Tipo de triangulo: equilatero")
elif(a==b and b!=c or b==C and b!=a):
		print("Tipo de triangulo: isosceles")
elif(a!=b and b!=c and c!=a)
		print("Tipo de triangulo: escaleno")
-- ERROR:
File "XXXX", line 15
    elif(a!=b and b!=c and c!=a)
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:52:59) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Lado a:"))
b = float(input("Lado b:"))
c = float(input("Lado c:"))

print("Entradas:", a,",",b,",",c)

if(a+b<=c or b+c<=a or c+a<=b):
	print("Tipo de triangulo: invalido")
elif(a == b or b == c):
	print("Tipo de triangulo: equilatero")
elif(a==b and b!=c or b==C and b!=a):
	print("Tipo de triangulo: isosceles")
elif(a!=b and b!=c and c!=a):
	print("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: equilatero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:53:03) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Lado a:"))
b = float(input("Lado b:"))
c = float(input("Lado c:"))

print("Entradas:", a,",",b,",",c)

if(a+b<=c or b+c<=a or c+a<=b):
	print("Tipo de triangulo: invalido")
elif(a == b or b == c):
	print("Tipo de triangulo: equilatero")
elif(a==b and b!=c or b==C and b!=a):
	print("Tipo de triangulo: isosceles")
elif(a!=b and b!=c and c!=a):
	print("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: equilatero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:53:04) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Lado a:"))
b = float(input("Lado b:"))
c = float(input("Lado c:"))

print("Entradas:", a,",",b,",",c)

if(a+b<=c or b+c<=a or c+a<=b):
	print("Tipo de triangulo: invalido")
elif(a == b or b == c):
	print("Tipo de triangulo: equilatero")
elif(a==b and b!=c or b==C and b!=a):
	print("Tipo de triangulo: isosceles")
elif(a!=b and b!=c and c!=a):
	print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.149781
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: equilatero
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:53:43) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Lado a:"))
b = float(input("Lado b:"))
c = float(input("Lado c:"))

print("Entradas:", a,",",b,",",c)

if(a+b<=c or b+c<=a or c+a<=b):
	print("Tipo de triangulo: invalido")
elif(a == b or b == c):
	print("Tipo de triangulo: equilatero")
elif(a==b and b!=c or b==C and b!=a):
	print("Tipo de triangulo: isosceles")
elif(a!=b and b!=c and c!=a):
	print("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: equilatero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:53:47) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Lado a:"))
b = float(input("Lado b:"))
c = float(input("Lado c:"))

print("Entradas:", a,",",b,",",c)

if(a+b<=c or b+c<=a or c+a<=b):
	print("Tipo de triangulo: invalido")
elif(a == b or b == c):
	print("Tipo de triangulo: equilatero")
elif(a==b and b!=c or b==C and b!=a):
	print("Tipo de triangulo: isosceles")
elif(a!=b and b!=c and c!=a):
	print("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: equilatero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:53:54) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Lado a:"))
b = float(input("Lado b:"))
c = float(input("Lado c:"))

print("Entradas:", a,",",b,",",c)

if(a+b<=c or b+c<=a or c+a<=b):
	print("Tipo de triangulo: invalido")
elif(a == b or b == c):
	print("Tipo de triangulo: equilatero")
elif(a==b and b!=c or b==C and b!=a):
	print("Tipo de triangulo: isosceles")
elif(a!=b and b!=c and c!=a):
	print("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: equilatero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:54:04) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Lado a:"))
b = float(input("Lado b:"))
c = float(input("Lado c:"))

print("Entradas:", a,",",b,",",c)

if(a+b<=c or b+c<=a or c+a<=b):
	print("Tipo de triangulo: invalido")
elif(a == b or b == c):
	print("Tipo de triangulo: equilatero")
elif(a==b and b!=c or b==c and b!=a):
	print("Tipo de triangulo: isosceles")
elif(a!=b and b!=c and c!=a):
	print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.136261
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: equilatero
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:54:06) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Lado a:"))
b = float(input("Lado b:"))
c = float(input("Lado c:"))

print("Entradas:", a,",",b,",",c)

if(a+b<=c or b+c<=a or c+a<=b):
	print("Tipo de triangulo: invalido")
elif(a == b or b == c):
	print("Tipo de triangulo: equilatero")
elif(a==b and b!=c or b==c and b!=a):
	print("Tipo de triangulo: isosceles")
elif(a!=b and b!=c and c!=a):
	print("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: equilatero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:54:18) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Lado a:"))
b = float(input("Lado b:"))
c = float(input("Lado c:"))

print("Entradas:", a,",",b,",",c)

if(a+b<=c or b+c<=a or c+a<=b):
	print("Tipo de triangulo: invalido")
elif(a == b or b == c):
	print("Tipo de triangulo: equilatero")
elif(a==b and b!=c or b==c and b!=a):
	print("Tipo de triangulo: isosceles")
elif(a!=b and b!=c and c!=a):
	print("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: equilatero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:54:18) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Lado a:"))
b = float(input("Lado b:"))
c = float(input("Lado c:"))

print("Entradas:", a,",",b,",",c)

if(a+b<=c or b+c<=a or c+a<=b):
	print("Tipo de triangulo: invalido")
elif(a == b or b == c):
	print("Tipo de triangulo: equilatero")
elif(a==b and b!=c or b==c and b!=a):
	print("Tipo de triangulo: isosceles")
elif(a!=b and b!=c and c!=a):
	print("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: equilatero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:54:23) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Lado a:"))
b = float(input("Lado b:"))
c = float(input("Lado c:"))

print("Entradas:", a,",",b,",",c)

if(a+b<=c or b+c<=a or c+a<=b):
	print("Tipo de triangulo: invalido")
elif(a == b or b == c):
	print("Tipo de triangulo: equilatero")
elif(a==b and b!=c or b==c and b!=a):
	print("Tipo de triangulo: isosceles")
elif(a!=b and b!=c and c!=a):
	print("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: equilatero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:54:32) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Lado a:"))
b = float(input("Lado b:"))
c = float(input("Lado c:"))

print("Entradas:", a,",",b,",",c)

if(a+b<=c or b+c<=a or c+a<=b):
	print("Tipo de triangulo: invalido")
elif(a == b or b == c):
	print("Tipo de triangulo: equilatero")
elif(a==b and b!=c or b==c and b!=a):
	print("Tipo de triangulo: isosceles")
elif(a!=b and b!=c and c!=a):
	print("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: equilatero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:54:58) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Lado a:"))
b = float(input("Lado b:"))
c = float(input("Lado c:"))

print("Entradas:", a,",",b,",",c)

if(a+b<=c or b+c<=a or c+a<=b):
	print("Tipo de triangulo: invalido")
elif(a == b or c == a):
	print("Tipo de triangulo: equilatero")
elif(a==b and b!=c or b==c and b!=a):
	print("Tipo de triangulo: isosceles")
elif(a!=b and b!=c and c!=a):
	print("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:55:02) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Lado a:"))
b = float(input("Lado b:"))
c = float(input("Lado c:"))

print("Entradas:", a,",",b,",",c)

if(a+b<=c or b+c<=a or c+a<=b):
	print("Tipo de triangulo: invalido")
elif(a == b or c == a):
	print("Tipo de triangulo: equilatero")
elif(a==b and b!=c or b==c and b!=a):
	print("Tipo de triangulo: isosceles")
elif(a!=b and b!=c and c!=a):
	print("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:59:13) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Lado a:"))
b = float(input("Lado b:"))
c = float(input("Lado c:"))

print("Entradas:", a,",",b,",",c)

if(a+b<=c or b+c<=a or c+a<=b):
	print("Tipo de triangulo: invalido")
elif(a == b and c == a):
	print("Tipo de triangulo: equilatero")
elif((a==b or b==c) and (a!=b or b!=c or c!=a)):
	print("Tipo de triangulo: isosceles")
elif(a!=b and b!=c and c!=a):
	print("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:59:18) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Lado a:"))
b = float(input("Lado b:"))
c = float(input("Lado c:"))

print("Entradas:", a,",",b,",",c)

if(a+b<=c or b+c<=a or c+a<=b):
	print("Tipo de triangulo: invalido")
elif(a == b and c == a):
	print("Tipo de triangulo: equilatero")
elif((a==b or b==c) and (a!=b or b!=c or c!=a)):
	print("Tipo de triangulo: isosceles")
elif(a!=b and b!=c and c!=a):
	print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.233217
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
