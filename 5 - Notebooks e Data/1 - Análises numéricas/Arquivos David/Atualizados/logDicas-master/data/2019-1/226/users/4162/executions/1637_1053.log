== TEST (2019-04-04 13:22:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ep= input("escreva seu patronum: ")
if (ep.upper()==CERVO):
	msg="cervo eh patronum do Harry Potter"
if (ep.upper()!= CERVO):
	msg= ep, "nao eh patrono do Harry Potter"	
print(msg)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if (ep.upper()==CERVO):
NameError: name 'CERVO' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 13:22:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ep= input("escreva seu patronum: ")
if (ep.upper()==CERVO):
	msg="cervo eh patronum do Harry Potter"
if (ep.upper()!= CERVO):
	msg= ep, "nao eh patrono do Harry Potter"	
print(msg)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if (ep.upper()==CERVO):
NameError: name 'CERVO' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 13:23:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ep= input("escreva seu patronum: ")
if (ep.upper()=="CERVO"):
	msg="cervo eh patronum do Harry Potter"
if (ep.upper()!= "CERVO"):
	msg= ep, "nao eh patrono do Harry Potter"	
print(msg)
-- OUTPUT:
cervo eh patronum do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 13:23:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ep= input("escreva seu patronum: ")
if (ep.upper()=="CERVO"):
	msg="cervo eh patronum do Harry Potter"
if (ep.upper()!= "CERVO"):
	msg= ep, "nao eh patrono do Harry Potter"	
print(msg)
-- OUTPUT:
cervo eh patronum do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 13:24:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ep= input("escreva seu patronum: ")
if (ep.upper()=="CERVO"):
	msg="cervo eh patronum do Harry Potter"
if (ep.upper()!= "CERVO"):
	msg= ep+" nao eh patrono do Harry Potter"	
print(msg)
-- OUTPUT:
cervo eh patronum do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-04 13:24:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ep= input("escreva seu patronum: ")
if (ep.upper()=="CERVO"):
	msg="cervo eh patronum do Harry Potter"
if (ep.upper()!= "CERVO"):
	msg= ep+" nao eh patrono do Harry Potter"	
print(msg)
-- EXECUTION TIME:
0.194278
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patronum do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 13:24:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ep= input("escreva seu patronum: ")
if (ep.upper()=="CERVO"):
	msg="cervo eh patronum do Harry Potter"
if (ep.upper()!= "CERVO"):
	msg= ep+" nao eh patrono do Harry Potter"	
print(msg)
-- OUTPUT:
cervo eh patronum do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 13:24:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ep= input("escreva seu patronum: ")
if (ep.upper()=="CERVO"):
	msg="cervo eh patronum do Harry Potter"
if (ep.upper()!= "CERVO"):
	msg= ep+" nao eh patrono do Harry Potter"	
print(msg)
-- OUTPUT:
cervo eh patronum do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-04 13:24:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ep= input("escreva seu patronum: ")
if (ep.upper()=="CERVO"):
	msg="cervo eh patronum do Harry Potter"
if (ep.upper()!= "CERVO"):
	msg= ep+" nao eh patrono do Harry Potter"	
print(msg)


-- EXECUTION TIME:
0.157378
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patronum do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 13:24:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ep= input("escreva seu patronum: ")
if (ep.upper()=="CERVO"):
	msg="cervo eh patronum do Harry Potter"
if (ep.upper()!= "CERVO"):
	msg= ep+" nao eh patrono do Harry Potter"	
print(msg)


-- OUTPUT:
cervo eh patronum do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-04 13:25:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ep= input("escreva seu patronum: ")

if (ep.upper()=="CERVO"):
	msg="cervo eh patronum do Harry Potter"
if (ep.upper()!= "CERVO"):
	msg= ep+" nao eh patrono do Harry Potter"	

print(msg)

-- EXECUTION TIME:
0.187197
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patronum do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 13:26:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ep= input("escreva seu patronum: ")

if (ep.upper()=="CERVO"):
	msg="cervo eh patronum do Harry Potter"
if (ep.upper()!= "CERVO"):
	msg= ep+" nao eh patrono do Harry Potter"
print(msg)

-- OUTPUT:
cervo eh patronum do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-04 13:26:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ep= input("escreva seu patronum: ")

if (ep.upper()=="CERVO"):
	msg="cervo eh patronum do Harry Potter"
if (ep.upper()!= "CERVO"):
	msg= ep+" nao eh patrono do Harry Potter"
print(msg)

-- EXECUTION TIME:
0.153054
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patronum do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-04 13:26:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ep= input("escreva seu patronum: ")

if (ep.upper()=="CERVO"):
	msg="cervo eh patronum do Harry Potter"
if (ep.upper()!= "CERVO"):
	msg= ep+" nao eh patrono do Harry Potter"

print(msg)


-- EXECUTION TIME:
0.206332
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patronum do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 13:26:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ep= input("escreva seu patronum: ")

if (ep.upper()=="CERVO"):
	msg="cervo eh patronum do Harry Potter"
if (ep.upper()!= "CERVO"):
	msg= ep+" nao eh patrono do Harry Potter"

print(msg)


-- OUTPUT:
cervo eh patronum do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-04 13:26:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ep= input("escreva seu patronum: ")

if (ep.upper()=="CERVO"):
	msg="cervo eh patrono do Harry Potter"
if (ep.upper()!= "CERVO"):
	msg= ep+" nao eh patrono do Harry Potter"

print(msg)


-- EXECUTION TIME:
0.17316
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 11:32:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ep= input("escreva seu patronum: ")

if (ep.upper()=="CERVO"):
	msg="cervo eh patrono do Harry Potter"
if (ep.upper()!= "CERVO"):
	msg= ep+" nao eh patrono do Harry Potter"

print(msg)


-- EXECUTION TIME:
0.174492
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
