== TEST (2019-04-25 10:58:10) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
es = escaleno
i = isosceles
eq = equilatero
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a = b = c):
			print("Tipo de triangulo:", eq)
				elif((a = b) or (a = c) or (b = c)):
				print("Tipo de triangulo:",i)
					elif(a != b and b != c amd  a != c):
						print("Tipo de triangulo:", es )
					else:
						print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- ERROR:
File "XXXX", line 11
    if( a = b = c):
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:58:35) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
es = escaleno
i = isosceles
eq = equilatero
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b == c):
			print("Tipo de triangulo:", eq)
				elif((a == b) or (a == c) or (b == c)):
				print("Tipo de triangulo:",i)
					elif(a != b and b != c amd  a != c):
						print("Tipo de triangulo:", es )
					else:
						print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- ERROR:
File "XXXX", line 13
    elif((a == b) or (a == c) or (b == c)):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:59:03) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
es = escaleno
i = isosceles
eq = equilatero
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b == c):
			print("Tipo de triangulo:", eq)
		elif((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i)
				elif(a != b and b != c amd  a != c):
					print("Tipo de triangulo:", es )
					else:
						print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- ERROR:
File "XXXX", line 15
    elif(a != b and b != c amd  a != c):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:59:17) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
es = escaleno
i = isosceles
eq = equilatero
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b == c):
			print("Tipo de triangulo:", eq)
		elif((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i)
				 elif(a != b and b != c amd  a != c):
					print("Tipo de triangulo:", es )
					else:
						print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- ERROR:
File "XXXX", line 15
    elif(a != b and b != c amd  a != c):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:59:33) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
es = escaleno
i = isosceles
eq = equilatero
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b == c):
			print("Tipo de triangulo:", eq)
		elif((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i)
				  elif(a != b and b != c amd  a != c):
					 print("Tipo de triangulo:", es )
					else:
						print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- ERROR:
File "XXXX", line 15
    elif(a != b and b != c amd  a != c):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:59:39) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
es = escaleno
i = isosceles
eq = equilatero
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b == c):
			print("Tipo de triangulo:", eq)
		elif((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i)
				   elif(a != b and b != c amd  a != c):
					 print("Tipo de triangulo:", es )
					else:
						print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- ERROR:
File "XXXX", line 15
    elif(a != b and b != c amd  a != c):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:00:03) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
es = escaleno
i = isosceles
eq = equilatero
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b == c):
			print("Tipo de triangulo:", eq)
		elif((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i)
				    elif(a != b and b != c and  a != c):
					 print("Tipo de triangulo:", es )
					else:
						print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- ERROR:
File "XXXX", line 15
    elif(a != b and b != c and  a != c):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:00:15) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
es = escaleno
i = isosceles
eq = equilatero
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b == c):
			print("Tipo de triangulo:", eq)
		elif((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i)
				   elif(a != b and b != c and  a != c):
					 print("Tipo de triangulo:", es )
					else:
						print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- ERROR:
File "XXXX", line 15
    elif(a != b and b != c and  a != c):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:00:22) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
es = escaleno
i = isosceles
eq = equilatero
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b == c):
			print("Tipo de triangulo:", eq)
		elif((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i)
				 elif(a != b and b != c and  a != c):
					 print("Tipo de triangulo:", es )
					else:
						print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- ERROR:
File "XXXX", line 15
    elif(a != b and b != c and  a != c):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:00:29) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
es = escaleno
i = isosceles
eq = equilatero
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b == c):
			print("Tipo de triangulo:", eq)
		elif((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i)
				 elif(a != b and b != c and  a != c):
					 print("Tipo de triangulo:", es )
					else:
						print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- ERROR:
File "XXXX", line 15
    elif(a != b and b != c and  a != c):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:00:49) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
es = escaleno
i = isosceles
eq = equilatero
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b == c):
			print("Tipo de triangulo:", eq)
		elif((a == b) or (a == c) or (b == c)):
			 print("Tipo de triangulo:",i)
				 elif(a != b and b != c and  a != c):
					 print("Tipo de triangulo:", es )
					else:
						print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- ERROR:
File "XXXX", line 15
    elif(a != b and b != c and  a != c):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:01:16) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
es = escaleno
i = isosceles
eq = equilatero
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b == c):
			print("Tipo de triangulo:", eq)
		elif((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i)
			elif(a != b and b != c and  a != c):
				print("Tipo de triangulo:", es )
					else:
						print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- ERROR:
File "XXXX", line 15
    elif(a != b and b != c and  a != c):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:01:55) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
es = escaleno
i = isosceles
eq = equilatero
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b == c):
			print("Tipo de triangulo:", eq)
		elif((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i)
			elif((a != b) and (b != c) and  (a != c)):
				print("Tipo de triangulo:", es )
					else:
						print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- ERROR:
File "XXXX", line 15
    elif((a != b) and (b != c) and  (a != c)):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:02:44) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
es = escaleno
i = isosceles
eq = equilatero
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b == c):
			print("Tipo de triangulo:", eq)
			elif((a == b) or (a == c) or (b == c)):
				print("Tipo de triangulo:",i)
				elif((a != b) and (b != c) and  (a != c)):
					print("Tipo de triangulo:", es )
					else:
						print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- ERROR:
File "XXXX", line 13
    elif((a == b) or (a == c) or (b == c)):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:03:01) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
es = escaleno
i = isosceles
eq = equilatero
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b == c):
			print("Tipo de triangulo:", eq)
			 elif((a == b) or (a == c) or (b == c)):
				print("Tipo de triangulo:",i)
				elif((a != b) and (b != c) and  (a != c)):
					print("Tipo de triangulo:", es )
					else:
						print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- ERROR:
File "XXXX", line 13
    elif((a == b) or (a == c) or (b == c)):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:03:11) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
es = escaleno
i = isosceles
eq = equilatero
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b == c):
			print("Tipo de triangulo:", eq)
			elif((a == b) or (a == c) or (b == c)):
				print("Tipo de triangulo:",i)
				elif((a != b) and (b != c) and  (a != c)):
					print("Tipo de triangulo:", es )
					else:
						print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- ERROR:
File "XXXX", line 13
    elif((a == b) or (a == c) or (b == c)):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:03:43) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
es = escaleno
i = isosceles
eq = equilatero
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b == c):
			print("Tipo de triangulo:", eq)
		elif((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i)
		elif((a != b) and (b != c) and  (a != c)):
			print("Tipo de triangulo:", es )
			else:
				print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- ERROR:
File "XXXX", line 17
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:03:53) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
es = escaleno
i = isosceles
eq = equilatero
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b == c):
			print("Tipo de triangulo:", eq)
		elif((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i)
		elif((a != b) and (b != c) and  (a != c)):
			print("Tipo de triangulo:", es )
		else:
			print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    es = escaleno
NameError: name 'escaleno' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:05:09) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
es = escaleno
i = isosceles
eq = equilatero
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b == c):
			print("Tipo de triangulo: equilatero")
		elif((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo: isoisceles)
		elif((a != b) and (b != c) and  (a != c)):
			print("Tipo de triangulo:escaleno" )
		else:
			print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- ERROR:
File "XXXX", line 14
    print("Tipo de triangulo: isoisceles)
                                        ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:05:28) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
es = escaleno
i = isosceles
eq = equilatero
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b == c):
			print("Tipo de triangulo: equilatero")
		elif((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo: isosceles")
		elif((a != b) and (b != c) and  (a != c)):
			print("Tipo de triangulo:escaleno" )
		else:
			print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    es = escaleno
NameError: name 'escaleno' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:05:40) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b == c):
			print("Tipo de triangulo: equilatero")
		elif((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo: isosceles")
		elif((a != b) and (b != c) and  (a != c)):
			print("Tipo de triangulo:escaleno" )
		else:
			print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- OUTPUT:
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:06:38) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b == c):
			print("Tipo de triangulo: equilatero")
		elif((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo: isosceles")
		elif((a != b) and (b != c)):
			print("Tipo de triangulo:escaleno" )
		else:
			print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- OUTPUT:
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:07:16) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b == c):
			print("Tipo de triangulo: equilatero")
		elif((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo: isosceles")
		elif((a != b) and (b != c)):
			print("Tipo de triangulo:escaleno" )
		else:
			print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- OUTPUT:
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:07:22) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b == c):
			print("Tipo de triangulo: equilatero")
		elif((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo: isosceles")
		elif((a != b) and (b != c)):
			print("Tipo de triangulo:escaleno" )
		else:
			print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- OUTPUT:
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:07:28) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b == c):
			print("Tipo de triangulo: equilatero")
		elif((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo: isosceles")
		elif((a != b) and (b != c)):
			print("Tipo de triangulo:escaleno" )
		else:
			print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- OUTPUT:
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:08:11) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b == c):
			print("Tipo de triangulo: equilatero")
		elif((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo: isosceles")
		elif((a != b) and (b != c)):
			print("Tipo de triangulo:escaleno" )
		else:
			print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- OUTPUT:
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:08:31) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b == c):
			print("Tipo de triangulo: equilatero")
		elif((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo: isosceles")
		elif((a != b) and (b != c)):
			print("Tipo de triangulo:escaleno" )
		else:
			print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- OUTPUT:
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:10:45) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

if((a > 0) and (b > 0)and (c > 0)):
	elif(a < b +c) and (b < a + c) and (c < a + b):
	elif( a == b == c):
		print("Tipo de triangulo: equilatero")
	elif((a == b) or (a == c) or (b == c)):
		print("Tipo de triangulo: isosceles")
	elif((a != b) and (b != c)):
		print("Tipo de triangulo:escaleno" )
	else:
		print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- ERROR:
File "XXXX", line 8
    elif(a < b +c) and (b < a + c) and (c < a + b):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:11:03) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

if((a > 0) and (b > 0)and (c > 0)):
	elif(a < b +c) and (b < a + c) and (c < a + b):
	if( a == b == c):
		print("Tipo de triangulo: equilatero")
	elif((a == b) or (a == c) or (b == c)):
		print("Tipo de triangulo: isosceles")
	elif((a != b) and (b != c)):
		print("Tipo de triangulo:escaleno" )
	else:
		print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- ERROR:
File "XXXX", line 8
    elif(a < b +c) and (b < a + c) and (c < a + b):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:11:42) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
	   if( a == b == c):
		   print("Tipo de triangulo: equilatero")
	   elif((a == b) or (a == c) or (b == c)):
		   print("Tipo de triangulo: isosceles")
	   elif((a != b) and (b != c)):
		   print("Tipo de triangulo:escaleno" )
	   else:
		   print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- OUTPUT:
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:12:27) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
	   if( a == b == c):
		   print("Tipo de triangulo: equilatero")
	   if((a == b) or (a == c) or (b == c)):
		   print("Tipo de triangulo: isosceles")
	   if((a != b) and (b != c)):
		   print("Tipo de triangulo:escaleno" )
	   else:
		   print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- OUTPUT:
Tipo de triangulo: isosceles
Tipo de triangulo: invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:13:07) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
	   if( a == b == c):
		   print("Tipo de triangulo: equilatero")
	      if((a == b) or (a == c) or (b == c)):
		      print("Tipo de triangulo: isosceles")
	         if((a != b) and (b != c)):
		         print("Tipo de triangulo:escaleno" )
	              else:
		               print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- ERROR:
File "XXXX", line 11
    if((a == b) or (a == c) or (b == c)):
                                        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:14:06) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
	   if( a == b == c):
		   print("Tipo de triangulo: equilatero")
	        if((a == b) or (a == c) or (b == c)):
		         print("Tipo de triangulo: isosceles")
	              if((a != b) and (b != c)):
		               print("Tipo de triangulo:escaleno" )
	                  else:
		                  print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- ERROR:
File "XXXX", line 11
    if((a == b) or (a == c) or (b == c)):
                                        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:14:15) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
	   if( a == b == c):
		   print("Tipo de triangulo: equilatero")
	         if((a == b) or (a == c) or (b == c)):
		         print("Tipo de triangulo: isosceles")
	              if((a != b) and (b != c)):
		               print("Tipo de triangulo:escaleno" )
	                  else:
		                  print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- ERROR:
File "XXXX", line 11
    if((a == b) or (a == c) or (b == c)):
                                        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:14:22) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
	   if( a == b == c):
		   print("Tipo de triangulo: equilatero")
	           if((a == b) or (a == c) or (b == c)):
		         print("Tipo de triangulo: isosceles")
	              if((a != b) and (b != c)):
		               print("Tipo de triangulo:escaleno" )
	                  else:
		                  print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- ERROR:
File "XXXX", line 11
    if((a == b) or (a == c) or (b == c)):
                                        ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:14:36) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
	   if( a == b == c):
		   print("Tipo de triangulo: equilatero")
	           	if((a == b) or (a == c) or (b == c)):
		         print("Tipo de triangulo: isosceles")
	              if((a != b) and (b != c)):
		               print("Tipo de triangulo:escaleno" )
	                  else:
		                  print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- ERROR:
File "XXXX", line 11
    if((a == b) or (a == c) or (b == c)):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:16:02) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b == c):
			print("Tipo de triangulo: equilatero")
				if((a == b) or (a == c) or (b == c)):
					print("Tipo de triangulo: isosceles")
						if((a != b) and (b != c)):
							print("Tipo de triangulo:escaleno" )
								else:
									print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- ERROR:
File "XXXX", line 11
    if((a == b) or (a == c) or (b == c)):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:16:32) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		elif( a == b == c):
			print("Tipo de triangulo: equilatero")
				if((a == b) or (a == c) or (b == c)):
					print("Tipo de triangulo: isosceles")
						if((a != b) and (b != c)):
							print("Tipo de triangulo:escaleno" )
								else:
									print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- ERROR:
File "XXXX", line 9
    elif( a == b == c):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:16:45) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		elif( a == b == c):
			print("Tipo de triangulo: equilatero")
				if((a == b) or (a == c) or (b == c)):
					print("Tipo de triangulo: isosceles")
						if((a != b) and (b != c)):
							print("Tipo de triangulo:escaleno" )
								else:
									print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- ERROR:
File "XXXX", line 9
    elif( a == b == c):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:17:01) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		elif( a == b and b == c):
			print("Tipo de triangulo: equilatero")
				if((a == b) or (a == c) or (b == c)):
					print("Tipo de triangulo: isosceles")
						if((a != b) and (b != c)):
							print("Tipo de triangulo:escaleno" )
								else:
									print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- ERROR:
File "XXXX", line 9
    elif( a == b and b == c):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:17:11) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b and b == c):
			print("Tipo de triangulo: equilatero")
				if((a == b) or (a == c) or (b == c)):
					print("Tipo de triangulo: isosceles")
						if((a != b) and (b != c)):
							print("Tipo de triangulo:escaleno" )
								else:
									print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- ERROR:
File "XXXX", line 11
    if((a == b) or (a == c) or (b == c)):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:17:22) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b and b == c):
			print("Tipo de triangulo: equilatero")
				if((a == b) or (a == c) or (b == c)):
					print("Tipo de triangulo: isosceles")
						if((a != b) and (b != c)):
							print("Tipo de triangulo:escaleno" )
								else:
									print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- ERROR:
File "XXXX", line 11
    if((a == b) or (a == c) or (b == c)):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:17:26) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b and b == c):
			print("Tipo de triangulo: equilatero")
					if((a == b) or (a == c) or (b == c)):
					print("Tipo de triangulo: isosceles")
						if((a != b) and (b != c)):
							print("Tipo de triangulo:escaleno" )
								else:
									print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- ERROR:
File "XXXX", line 11
    if((a == b) or (a == c) or (b == c)):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:17:31) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b and b == c):
			print("Tipo de triangulo: equilatero")
				if((a == b) or (a == c) or (b == c)):
					print("Tipo de triangulo: isosceles")
						if((a != b) and (b != c)):
							print("Tipo de triangulo:escaleno" )
								else:
									print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- ERROR:
File "XXXX", line 11
    if((a == b) or (a == c) or (b == c)):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:17:43) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b and b == c):
			print("Tipo de triangulo: equilatero")
			if((a == b) or (a == c) or (b == c)):
					print("Tipo de triangulo: isosceles")
						if((a != b) and (b != c)):
							print("Tipo de triangulo:escaleno" )
								else:
									print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- ERROR:
File "XXXX", line 13
    if((a != b) and (b != c)):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:17:49) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b and b == c):
			print("Tipo de triangulo: equilatero")
			if((a == b) or (a == c) or (b == c)):
					print("Tipo de triangulo: isosceles")
						if((a != b) and (b != c)):
							print("Tipo de triangulo:escaleno" )
								else:
									print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- ERROR:
File "XXXX", line 13
    if((a != b) and (b != c)):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:17:54) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b and b == c):
			print("Tipo de triangulo: equilatero")
			if((a == b) or (a == c) or (b == c)):
					print("Tipo de triangulo: isosceles")
					if((a != b) and (b != c)):
							print("Tipo de triangulo:escaleno" )
								else:
									print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- ERROR:
File "XXXX", line 15
    else:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:18:02) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b and b == c):
			print("Tipo de triangulo: equilatero")
			if((a == b) or (a == c) or (b == c)):
					print("Tipo de triangulo: isosceles")
					if((a != b) and (b != c)):
							print("Tipo de triangulo:escaleno" )
							else:
								print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- ERROR:
File "XXXX", line 15
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:18:08) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b and b == c):
			print("Tipo de triangulo: equilatero")
			if((a == b) or (a == c) or (b == c)):
					print("Tipo de triangulo: isosceles")
					if((a != b) and (b != c)):
						print("Tipo de triangulo:escaleno" )
							else:
								print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- ERROR:
File "XXXX", line 15
    else:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:18:13) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b and b == c):
			print("Tipo de triangulo: equilatero")
			if((a == b) or (a == c) or (b == c)):
					print("Tipo de triangulo: isosceles")
					if((a != b) and (b != c)):
						print("Tipo de triangulo:escaleno" )
						else:
								print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- ERROR:
File "XXXX", line 15
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:18:22) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b and b == c):
			print("Tipo de triangulo: equilatero")
			if((a == b) or (a == c) or (b == c)):
					print("Tipo de triangulo: isosceles")
					if((a != b) and (b != c)):
						print("Tipo de triangulo:escaleno" )
					else:
								print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- ERROR:
File "XXXX", line 15
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:18:25) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b and b == c):
			print("Tipo de triangulo: equilatero")
			if((a == b) or (a == c) or (b == c)):
					print("Tipo de triangulo: isosceles")
					if((a != b) and (b != c)):
						print("Tipo de triangulo:escaleno" )
					else:
								print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- ERROR:
File "XXXX", line 15
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:18:57) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b and b == c):
			print("Tipo de triangulo: equilatero")
			if((a == b) or (a == c) or (b == c)):
					print("Tipo de triangulo: isosceles")
					if((a != b) and (b != c)):
						print("Tipo de triangulo:escaleno" )
else:
	print("Tipo de triangulo:invalido")
			
	

-- ERROR:
File "XXXX", line 15
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:20:34) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b and b == c):
			print("Tipo de triangulo: equilatero")
			if((a == b) or (a == c) or (b == c)):
					print("Tipo de triangulo: isosceles")
					if((a != b) and (b != c)):
						print("Tipo de triangulo:escaleno" )
else:
	print("Tipo de triangulo:invalido")
			
	

-- OUTPUT:
entradas: 2.0 , 4.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:23:26) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equlatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b and b == c):
			print("Tipo de triangulo:",eq)
			if((a == b) or (a == c) or (b == c)):
					print("Tipo de triangulo:",i )
					if((a != b) and (b != c)):
						print("Tipo de triangulo:",es )
else:
	print("Tipo de triangulo:invalido")
			
	

-- OUTPUT:
entradas: 2.0 , 4.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:23:43) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equlatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b and b == c):
			print("Tipo de triangulo:",eq)
			if((a == b) or (a == c) or (b == c)):
					print("Tipo de triangulo:",i )
					if((a != b) and (b != c)):
						print("Tipo de triangulo:",es )
else:
	print("Tipo de triangulo:invalido")
			
	

-- OUTPUT:
entradas: 2.0 , 4.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:24:10) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equlatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b and b == c):
			print("Tipo de triangulo:",eq)
			if((a == b) or (a == c) or (b == c)):
					print("Tipo de triangulo:",i )
					if((a != b) and (b != c)):
						print("Tipo de triangulo:",es )
else:
	print("Tipo de triangulo:invalido")
			
	

-- OUTPUT:
entradas: 2.0 , 4.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:24:15) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equlatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b and b == c):
			print("Tipo de triangulo:",eq)
			if((a == b) or (a == c) or (b == c)):
					print("Tipo de triangulo:",i )
					if((a != b) and (b != c)):
						print("Tipo de triangulo:",es )
else:
	print("Tipo de triangulo:invalido")
			
	

-- OUTPUT:
entradas: 2.0 , 4.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:24:25) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equlatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b and b == c):
			print("Tipo de triangulo:",eq)
			if((a == b) or (a == c) or (b == c)):
					print("Tipo de triangulo:",i )
					if((a != b) and (b != c)):
						print("Tipo de triangulo:",es )
else:
	print("Tipo de triangulo:invalido")
			
	

-- OUTPUT:
entradas: 2.0 , 4.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:24:25) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equlatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b and b == c):
			print("Tipo de triangulo:",eq)
			if((a == b) or (a == c) or (b == c)):
					print("Tipo de triangulo:",i )
					if((a != b) and (b != c)):
						print("Tipo de triangulo:",es )
else:
	print("Tipo de triangulo:invalido")
			
	

-- EXECUTION TIME:
0.182113
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
entradas: 2.0 , 4.0 , 4.0
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
entradas: 3.3 , 4.4 , 5.5
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
entradas: 1.0 , 2.0 , 7.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:24:31) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equlatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b and b == c):
			print("Tipo de triangulo:",eq)
			if((a == b) or (a == c) or (b == c)):
					print("Tipo de triangulo:",i )
					if((a != b) and (b != c)):
						print("Tipo de triangulo:",es )
else:
	print("Tipo de triangulo:invalido")
			
	

-- OUTPUT:
entradas: 2.0 , 4.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:25:22) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equlatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
			if((a == b) or (a == c) or (b == c)):
					print("Tipo de triangulo:",i )
					if((a != b) and (b != c)):
						print("Tipo de triangulo:",es )
else:
	print("Tipo de triangulo:invalido")
			
	

-- OUTPUT:
entradas: 2.0 , 4.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:26:33) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equlatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
			if((a == b) or (a == c) or (b == c)):
					print("Tipo de triangulo:",i )
					if((a != b) and (b != c)):
						print("Tipo de triangulo:",es )
else:
	print("Tipo de triangulo:invalido")
			
	

-- OUTPUT:
entradas: 2.0 , 4.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:26:37) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equlatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
			if((a == b) or (a == c) or (b == c)):
					print("Tipo de triangulo:",i )
					if((a != b) and (b != c)):
						print("Tipo de triangulo:",es )
else:
	print("Tipo de triangulo:invalido")
			
	

-- OUTPUT:
entradas: 2.0 , 4.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:27:10) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
			if((a == b) or (a == c) or (b == c)):
					print("Tipo de triangulo:",i )
					if((a != b) and (b != c)):
						print("Tipo de triangulo:",es )
else:
	print("Tipo de triangulo:invalido")
			
	

-- EXECUTION TIME:
0.198343
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
entradas: 2.0 , 4.0 , 4.0
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
entradas: 3.3 , 4.4 , 5.5
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
entradas: 1.0 , 2.0 , 7.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:27:11) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
			if((a == b) or (a == c) or (b == c)):
					print("Tipo de triangulo:",i )
					if((a != b) and (b != c)):
						print("Tipo de triangulo:",es )
else:
	print("Tipo de triangulo:invalido")
			
	

-- OUTPUT:
entradas: 2.0 , 4.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:28:19) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
			if((a == b) or (a == c) or (b == c)):
					print("Tipo de triangulo:",i )
					if((a != b) and (b != c)):
						print("Tipo de triangulo:",es )
		else:
			print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- OUTPUT:
entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:28:24) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
			if((a == b) or (a == c) or (b == c)):
					print("Tipo de triangulo:",i )
					if((a != b) and (b != c)):
						print("Tipo de triangulo:",es )
		else:
			print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- EXECUTION TIME:
0.13466
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo:invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
entradas: 1.0 , 2.0 , 7.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:28:26) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
			if((a == b) or (a == c) or (b == c)):
					print("Tipo de triangulo:",i )
					if((a != b) and (b != c)):
						print("Tipo de triangulo:",es )
		else:
			print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- OUTPUT:
entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:28:58) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
			if((a == b) or (a == c) or (b == c)):
					print("Tipo de triangulo:",i )
					if((a != b) and (b != c)):
						print("Tipo de triangulo:",es )
		else:
			print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- OUTPUT:
entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:29:04) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
			if((a == b) or (a == c) or (b == c)):
					print("Tipo de triangulo:",i )
					if((a != b) and (b != c)):
						print("Tipo de triangulo:",es )
		else:
			print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- OUTPUT:
entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:29:04) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
			if((a == b) or (a == c) or (b == c)):
					print("Tipo de triangulo:",i )
					if((a != b) and (b != c)):
						print("Tipo de triangulo:",es )
		else:
			print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- OUTPUT:
entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:29:04) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
			if((a == b) or (a == c) or (b == c)):
					print("Tipo de triangulo:",i )
					if((a != b) and (b != c)):
						print("Tipo de triangulo:",es )
		else:
			print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- OUTPUT:
entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:31:48) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
		elif ((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i )
		else:
			print("Tipo de triangulo:",es )
	else:
		print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- OUTPUT:
entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:34:36) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
		elif ((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i )
		else:
			print("Tipo de triangulo:",es )
	else:
		print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- EXECUTION TIME:
0.127681
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:34:37) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
		elif ((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i )
		else:
			print("Tipo de triangulo:",es )
	else:
		print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- EXECUTION TIME:
0.174579
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:34:38) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
		elif ((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i )
		else:
			print("Tipo de triangulo:",es )
	else:
		print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- EXECUTION TIME:
0.2046
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:34:39) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
		elif ((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i )
		else:
			print("Tipo de triangulo:",es )
	else:
		print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- EXECUTION TIME:
0.230958
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:34:40) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
		elif ((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i )
		else:
			print("Tipo de triangulo:",es )
	else:
		print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- EXECUTION TIME:
0.211094
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:34:40) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
		elif ((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i )
		else:
			print("Tipo de triangulo:",es )
	else:
		print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- EXECUTION TIME:
0.127912
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:34:40) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
		elif ((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i )
		else:
			print("Tipo de triangulo:",es )
	else:
		print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- EXECUTION TIME:
0.367921
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:34:41) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
		elif ((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i )
		else:
			print("Tipo de triangulo:",es )
	else:
		print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- EXECUTION TIME:
0.487709
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:

-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:34:41) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
		elif ((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i )
		else:
			print("Tipo de triangulo:",es )
	else:
		print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- EXECUTION TIME:
0.645953
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:34:41) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
		elif ((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i )
		else:
			print("Tipo de triangulo:",es )
	else:
		print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- EXECUTION TIME:
0.640221
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:34:41) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
		elif ((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i )
		else:
			print("Tipo de triangulo:",es )
	else:
		print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- EXECUTION TIME:
0.471378
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:34:41) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
		elif ((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i )
		else:
			print("Tipo de triangulo:",es )
	else:
		print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- EXECUTION TIME:
0.548453
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:34:42) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
		elif ((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i )
		else:
			print("Tipo de triangulo:",es )
	else:
		print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- EXECUTION TIME:
0.210625
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:34:42) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
		elif ((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i )
		else:
			print("Tipo de triangulo:",es )
	else:
		print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- EXECUTION TIME:
0.457791
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:34:43) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
		elif ((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i )
		else:
			print("Tipo de triangulo:",es )
	else:
		print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- EXECUTION TIME:
0.780327
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:34:43) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
		elif ((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i )
		else:
			print("Tipo de triangulo:",es )
	else:
		print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- EXECUTION TIME:
0.783773
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:34:43) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
		elif ((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i )
		else:
			print("Tipo de triangulo:",es )
	else:
		print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- EXECUTION TIME:
0.719831
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:34:43) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
		elif ((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i )
		else:
			print("Tipo de triangulo:",es )
	else:
		print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- EXECUTION TIME:
0.441798
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:34:44) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
		elif ((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i )
		else:
			print("Tipo de triangulo:",es )
	else:
		print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- EXECUTION TIME:
0.483307
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:34:44) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
		elif ((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i )
		else:
			print("Tipo de triangulo:",es )
	else:
		print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- EXECUTION TIME:
0.336571
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:34:44) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
		elif ((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i )
		else:
			print("Tipo de triangulo:",es )
	else:
		print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- EXECUTION TIME:
0.337135
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:34:44) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
		elif ((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i )
		else:
			print("Tipo de triangulo:",es )
	else:
		print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- EXECUTION TIME:
0.553685
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:34:44) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
		elif ((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i )
		else:
			print("Tipo de triangulo:",es )
	else:
		print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- EXECUTION TIME:
0.634854
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:34:44) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
		elif ((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i )
		else:
			print("Tipo de triangulo:",es )
	else:
		print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- EXECUTION TIME:
0.586628
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:34:45) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
		elif ((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i )
		else:
			print("Tipo de triangulo:",es )
	else:
		print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- EXECUTION TIME:
0.454235
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:

-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:34:45) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
		elif ((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i )
		else:
			print("Tipo de triangulo:",es )
	else:
		print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- EXECUTION TIME:
0.287795
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:37:20) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
		elif ((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i )
		else:
			print("Tipo de triangulo:",es )
	else:
		print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- EXECUTION TIME:
0.137638
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:37:23) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
		elif ((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i )
		else:
			print("Tipo de triangulo:",es )
	else:
		print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- EXECUTION TIME:
0.180396
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:37:27) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
		elif ((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i )
		else:
			print("Tipo de triangulo:",es )
	else:
		print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- OUTPUT:
entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:37:36) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
		elif ((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i )
		else:
			print("Tipo de triangulo:",es )
	else:
		print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- OUTPUT:
entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:37:52) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
		elif ((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i )
		else:
			print("Tipo de triangulo:",es )
	else:
		print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- OUTPUT:
entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:38:02) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
		elif ((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i )
		else:
			print("Tipo de triangulo:",es )
	else:
		print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- OUTPUT:
entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:38:09) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
		elif ((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i )
		else:
			print("Tipo de triangulo:",es )
	else:
		print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- OUTPUT:
entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:38:20) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
		elif ((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i )
		else:
			print("Tipo de triangulo:",es )
	else:
		print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- EXECUTION TIME:
0.208383
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:38:28) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
		elif ((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i )
		else:
			print("Tipo de triangulo:",es )
	else:
		print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- OUTPUT:
entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:38:36) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
		elif ((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i )
		else:
			print("Tipo de triangulo:",es )
	else:
		print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- EXECUTION TIME:
0.183442
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:39:22) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"

if(a < b +c) and (b < a + c) and (c < a + b):
	if( a == b) and (b == c):
		print("Tipo de triangulo:",eq)
	elif ((a == b) or (a == c) or (b == c)):
		print("Tipo de triangulo:",i )
	else:
		print("Tipo de triangulo:",es )
	else:
		print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- ERROR:
File "XXXX", line 18
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:39:39) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
		elif ((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i )
		else:
			print("Tipo de triangulo:",es )
	else:
		print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- EXECUTION TIME:
0.213143
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:39:51) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
		elif ((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i )
		else:
			print("Tipo de triangulo:",es )
	else:
		print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- OUTPUT:
entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:39:59) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
		elif ((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i )
		else:
			print("Tipo de triangulo:",es )
	else:
		print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
			
	

-- OUTPUT:
entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:40:26) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
		elif ((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i )
		else:
			print("Tipo de triangulo:",es )
	else:
		print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")
			
	

-- EXECUTION TIME:
0.19199
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:40:44) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
		elif ((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i )
		else:
			print("Tipo de triangulo:",es )
	else:
		print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")
			
	

-- EXECUTION TIME:
0.182486
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:41:21) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
		elif ((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i )
		else:
			print("Tipo de triangulo:",es )
	else:
		print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")
			
	

-- OUTPUT:
entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:41:45) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))
print("Entradas:", a,",",b,",",c )
es = "escaleno"
i = "isosceles"
eq = "equilatero"
if((a > 0) and (b > 0)and (c > 0)):
	if(a < b +c) and (b < a + c) and (c < a + b):
		if( a == b) and (b == c):
			print("Tipo de triangulo:",eq)
		elif ((a == b) or (a == c) or (b == c)):
			print("Tipo de triangulo:",i )
		else:
			print("Tipo de triangulo:",es )
	else:
		print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")
			
	

-- EXECUTION TIME:
0.144239
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
