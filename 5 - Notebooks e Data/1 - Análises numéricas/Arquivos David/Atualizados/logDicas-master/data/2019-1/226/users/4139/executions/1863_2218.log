== TEST (2019-07-02 11:14:51) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input("mat: ")))

for i in mat:
	for j in mat:
		if i < j or i == j:
			mat[i,j] = 0

print(sum(mat))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:17:53) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input("mat: ")))

for i in range(mat):
	for j in mat:
		if i < j or i == j:
			mat[i,j] = 0

print(sum(mat))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:18:56) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input("mat: ")))

for i in range(size(mat)):
	for j in mat:
		if i < j or i == j:
			mat[i,j] = 0

print(sum(mat))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:19:45) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input("mat: ")))

for i in range(mat):
	for j in range(mat):
		if i < j or i == j:
			mat[i,j] = 0

print(sum(mat))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:20:43) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input("mat: ")))

for i in range(size(mat)):
	for j in range(size(mat)):
		if i < j or i == j:
			mat[i,j] = 0

print(sum(mat))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:35:47) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input("mat: ")))

for i in range(shape(mat)[0]):
	for j in range(shape(mat)[1]):
		if i < j or i == j:
			mat[i,j] = 0

print(sum(mat))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 11:36:39) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input("mat: ")))

for i in range(shape(mat)[0]):
	for j in range(shape(mat)[1]):
		if i < j or i == j:
			mat[i,j] = 0

print(sum(mat))
-- EXECUTION TIME:
1.11265
-- TEST CASE 1:
---- input:
[[10,8,2],[20,16,4],[40,32,8]]
---- correct output:
14.0
---- user output:
92
-- TEST CASE 2:
---- input:
[[0.32,0.48,0.56],[0.12,0.54,0.34],[0.67,0.89,0.76]]
---- correct output:
1.38
---- user output:
1.6800000000000002
-- TEST CASE 3:
---- input:
[[34.5,66.7,89.7,65.8,34.6],[77.8,65.7,89.7,23.4,45.9],[12.3,98.9,23.4,67.7,55.5],[33.3,44.4,56.8,91.3,51.9],[11.1,22.2,34.5,66.5,15.9]]
---- correct output:
590.9
---- user output:
457.79999999999995
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:37:00) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input("mat: ")))

for i in range(shape(mat)[0]):
	for j in range(shape(mat)[1]):
		if i < j or i == j:
			mat[i,j] = 0

print(sum(mat))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:38:40) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input("mat: ")))

for i in range(shape(mat)[0]):
	for j in range(shape(mat)[1]):
		if i < j or i == j:
			mat[i,j] = 0
			print(i,j)

print(sum(mat))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:40:38) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input("mat: ")))

for i in range(shape(mat)[0]):
	for j in range(shape(mat)[1]):
		if i < j or i == j:
			mat[i,j] = 0
			print mat[i,j]

print(sum(mat))
-- ERROR:
File "XXXX", line 10
    print mat[i,j]
            ^
SyntaxError: Missing parentheses in call to 'print'. Did you mean print(mat[i,j])?
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:40:57) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input("mat: ")))

for i in range(shape(mat)[0]):
	for j in range(shape(mat)[1]):
		if i < j or i == j:
			mat[i,j] = 0
			print(mat[i,j])

print(sum(mat))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:45:08) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input("mat: ")))
soma = 0
for i in range(shape(mat)[0]):
	for j in range(shape(mat)[1]):
		if j > i:
			soma = soma + mat[i,j]

print(sum(mat))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:45:48) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input("mat: ")))
soma = 0
for i in range(shape(mat)[0]):
	for j in range(shape(mat)[1]):
		if j > i:
			soma = soma + mat[i,j]

print(soma)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 11:46:15) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input("mat: ")))
soma = 0
for i in range(shape(mat)[0]):
	for j in range(shape(mat)[1]):
		if j > i:
			soma = soma + mat[i,j]

print(soma)
-- EXECUTION TIME:
0.91024
-- TEST CASE 1:
---- input:
[[10,8,2],[20,16,4],[40,32,8]]
---- correct output:
14.0
---- user output:
14
-- TEST CASE 2:
---- input:
[[0.32,0.48,0.56],[0.12,0.54,0.34],[0.67,0.89,0.76]]
---- correct output:
1.38
---- user output:
1.3800000000000001
-- TEST CASE 3:
---- input:
[[34.5,66.7,89.7,65.8,34.6],[77.8,65.7,89.7,23.4,45.9],[12.3,98.9,23.4,67.7,55.5],[33.3,44.4,56.8,91.3,51.9],[11.1,22.2,34.5,66.5,15.9]]
---- correct output:
590.9
---- user output:
590.9
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 11:46:41) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input("mat: ")))
soma = 0
for i in range(shape(mat)[0]):
	for j in range(shape(mat)[1]):
		if j > i:
			soma = soma + mat[i,j]

print(soma)
-- EXECUTION TIME:
1.49503
-- TEST CASE 1:
---- input:
[[10,8,2],[20,16,4],[40,32,8]]
---- correct output:
14.0
---- user output:
14
-- TEST CASE 2:
---- input:
[[0.32,0.48,0.56],[0.12,0.54,0.34],[0.67,0.89,0.76]]
---- correct output:
1.38
---- user output:
1.3800000000000001
-- TEST CASE 3:
---- input:
[[34.5,66.7,89.7,65.8,34.6],[77.8,65.7,89.7,23.4,45.9],[12.3,98.9,23.4,67.7,55.5],[33.3,44.4,56.8,91.3,51.9],[11.1,22.2,34.5,66.5,15.9]]
---- correct output:
590.9
---- user output:
1.3800000000000001
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 11:46:42) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input("mat: ")))
soma = 0
for i in range(shape(mat)[0]):
	for j in range(shape(mat)[1]):
		if j > i:
			soma = soma + mat[i,j]

print(soma)
-- EXECUTION TIME:
3.39824
-- TEST CASE 1:
---- input:
[[10,8,2],[20,16,4],[40,32,8]]
---- correct output:
14.0
---- user output:
14
-- TEST CASE 2:
---- input:
[[0.32,0.48,0.56],[0.12,0.54,0.34],[0.67,0.89,0.76]]
---- correct output:
1.38
---- user output:
1.3800000000000001
-- TEST CASE 3:
---- input:
[[34.5,66.7,89.7,65.8,34.6],[77.8,65.7,89.7,23.4,45.9],[12.3,98.9,23.4,67.7,55.5],[33.3,44.4,56.8,91.3,51.9],[11.1,22.2,34.5,66.5,15.9]]
---- correct output:
590.9
---- user output:
590.9
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 11:46:42) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input("mat: ")))
soma = 0
for i in range(shape(mat)[0]):
	for j in range(shape(mat)[1]):
		if j > i:
			soma = soma + mat[i,j]

print(soma)
-- EXECUTION TIME:
4.13797
-- TEST CASE 1:
---- input:
[[10,8,2],[20,16,4],[40,32,8]]
---- correct output:
14.0
---- user output:
1.3800000000000001
-- TEST CASE 2:
---- input:
[[0.32,0.48,0.56],[0.12,0.54,0.34],[0.67,0.89,0.76]]
---- correct output:
1.38
---- user output:
1.3800000000000001
-- TEST CASE 3:
---- input:
[[34.5,66.7,89.7,65.8,34.6],[77.8,65.7,89.7,23.4,45.9],[12.3,98.9,23.4,67.7,55.5],[33.3,44.4,56.8,91.3,51.9],[11.1,22.2,34.5,66.5,15.9]]
---- correct output:
590.9
---- user output:
590.9
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 11:46:42) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input("mat: ")))
soma = 0
for i in range(shape(mat)[0]):
	for j in range(shape(mat)[1]):
		if j > i:
			soma = soma + mat[i,j]

print(soma)
-- EXECUTION TIME:
6.1878
-- TEST CASE 1:
---- input:
[[10,8,2],[20,16,4],[40,32,8]]
---- correct output:
14.0
---- user output:
1.3800000000000001
-- TEST CASE 2:
---- input:
[[0.32,0.48,0.56],[0.12,0.54,0.34],[0.67,0.89,0.76]]
---- correct output:
1.38
---- user output:
590.9
-- TEST CASE 3:
---- input:
[[34.5,66.7,89.7,65.8,34.6],[77.8,65.7,89.7,23.4,45.9],[12.3,98.9,23.4,67.7,55.5],[33.3,44.4,56.8,91.3,51.9],[11.1,22.2,34.5,66.5,15.9]]
---- correct output:
590.9
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 11:46:42) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input("mat: ")))
soma = 0
for i in range(shape(mat)[0]):
	for j in range(shape(mat)[1]):
		if j > i:
			soma = soma + mat[i,j]

print(soma)
-- EXECUTION TIME:
7.9481
-- TEST CASE 1:
---- input:
[[10,8,2],[20,16,4],[40,32,8]]
---- correct output:
14.0
---- user output:
1.3800000000000001
-- TEST CASE 2:
---- input:
[[0.32,0.48,0.56],[0.12,0.54,0.34],[0.67,0.89,0.76]]
---- correct output:
1.38
---- user output:
590.9
-- TEST CASE 3:
---- input:
[[34.5,66.7,89.7,65.8,34.6],[77.8,65.7,89.7,23.4,45.9],[12.3,98.9,23.4,67.7,55.5],[33.3,44.4,56.8,91.3,51.9],[11.1,22.2,34.5,66.5,15.9]]
---- correct output:
590.9
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:47:01) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input("mat: ")))
soma = 0
for i in range(shape(mat)[0]):
	for j in range(shape(mat)[1]):
		if j > i:
			soma = soma + mat[i,j]

print(soma)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 11:49:01) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input("mat: ")))
soma = 0
for i in range(shape(mat)[0]):
	for j in range(shape(mat)[1]):
		if j > i:
			soma = soma + mat[i,j]

print((round(soma,0))
-- EXECUTION TIME:
0.586627
-- ERROR:
  File "/home/codebench/codes/1863/2218/main.py", line 12
    
                         ^
SyntaxError: unexpected EOF while parsing

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 11:49:16) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input("mat: ")))
soma = 0
for i in range(shape(mat)[0]):
	for j in range(shape(mat)[1]):
		if j > i:
			soma = soma + mat[i,j]

print((round(soma,2))
-- EXECUTION TIME:
0.8214
-- ERROR:
  File "/home/codebench/codes/1863/2218/main.py", line 12
    
                         ^
SyntaxError: unexpected EOF while parsing

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 11:49:24) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input("mat: ")))
soma = 0
for i in range(shape(mat)[0]):
	for j in range(shape(mat)[1]):
		if j > i:
			soma = soma + mat[i,j]

print((round(soma,2))
-- EXECUTION TIME:
0.851386
-- ERROR:
  File "/home/codebench/codes/1863/2218/main.py", line 12
    
                         ^
SyntaxError: unexpected EOF while parsing

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:49:51) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input("mat: ")))
soma = 0
for i in range(shape(mat)[0]):
	for j in range(shape(mat)[1]):
		if j > i:
			soma = soma + mat[i,j]

print((round(soma,2))
-- ERROR:
File "XXXX", line 12
    
                         ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:50:08) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input("mat: ")))
soma = 0
for i in range(shape(mat)[0]):
	for j in range(shape(mat)[1]):
		if j > i:
			soma = soma + mat[i,j]

print(round(soma,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:51:14) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input("mat: ")))
soma = 0
for i in range(shape(mat)[0]):
	for j in range(shape(mat)[1]):
		if j > i:
			soma = soma + mat[i,j]

print(round(soma,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 11:51:50) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input("mat: ")))
soma = 0
for i in range(shape(mat)[0]):
	for j in range(shape(mat)[1]):
		if j > i:
			soma = soma + mat[i,j]

print(round(soma,2))
-- EXECUTION TIME:
1.14264
-- TEST CASE 1:
---- input:
[[10,8,2],[20,16,4],[40,32,8]]
---- correct output:
14.0
---- user output:
14
-- TEST CASE 2:
---- input:
[[0.32,0.48,0.56],[0.12,0.54,0.34],[0.67,0.89,0.76]]
---- correct output:
1.38
---- user output:
1.38
-- TEST CASE 3:
---- input:
[[34.5,66.7,89.7,65.8,34.6],[77.8,65.7,89.7,23.4,45.9],[12.3,98.9,23.4,67.7,55.5],[33.3,44.4,56.8,91.3,51.9],[11.1,22.2,34.5,66.5,15.9]]
---- correct output:
590.9
---- user output:
590.9
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
