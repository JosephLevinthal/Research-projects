== TEST (2019-03-12 13:07:33) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(2001)

# Impressao do dobro do numero
print(num)
-- OUTPUT:
2001
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-12 13:07:35) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(2001)

# Impressao do dobro do numero
print(num)
-- EXECUTION TIME:
0.134175
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
2001
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
2001
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-12 13:08:01) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(2001)

# Impressao do dobro do numero
print(int)
-- EXECUTION TIME:
0.137704
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
<class 'int'>
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
<class 'int'>
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 13:08:40) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(2001))

# Impressao do dobro do numero
print(num)
-- OUTPUT:
20011234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-12 13:08:41) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(2001))

# Impressao do dobro do numero
print(num)
-- EXECUTION TIME:
0.287306
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
20011234
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
2001444
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 13:10:12) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("20: "))

# Impressao do dobro do numero
print(num)
-- OUTPUT:
1234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-12 13:10:13) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("20: "))

# Impressao do dobro do numero
print(num)
-- EXECUTION TIME:
0.14567
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
1234
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
444
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 13:12:01) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("20: vinte"))

# Impressao do dobro do numero
print(num)
-- OUTPUT:
1234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-12 13:12:03) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("20: vinte"))

# Impressao do dobro do numero
print(num)
-- EXECUTION TIME:
0.142903
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
1234
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
444
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 13:13:13) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("15"))

# Impressao do dobro do numero
print(2*num)
-- OUTPUT:
2468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-12 13:13:15) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("15"))

# Impressao do dobro do numero
print(2*num)
-- EXECUTION TIME:
0.192716
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
2468
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
888
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
