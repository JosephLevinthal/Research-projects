== TEST (2019-05-14 11:29:18) 
-- CODE:
n = int(input("digite o numero inteiro:"))
t = 0
b = 1
while(n>0and(b<=n):
	if(n%b==0):
		print(b)
		b = b + 1
		t = t + 1
	else:
		b = b + 1
print(t,"divisores")
	
-- ERROR:
File "XXXX", line 4
    while(n>0and(b<=n):
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 11:29:24) 
-- CODE:
n = int(input("digite o numero inteiro:"))
t = 0
b = 1
while(n>0)and(b<=n):
	if(n%b==0):
		print(b)
		b = b + 1
		t = t + 1
	else:
		b = b + 1
print(t,"divisores")
	
-- OUTPUT:
1
2
3
4
6
12
6 divisores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 11:29:32) 
-- CODE:
n = int(input("digite o numero inteiro:"))
t = 0
b = 1
while(n>0)and(b<=n):
	if(n%b==0):
		print(b)
		b = b + 1
		t = t + 1
	else:
		b = b + 1
print(t,"divisores")
	
-- EXECUTION TIME:
0.168619
-- TEST CASE 1:
---- input:
12
---- correct output:
1
2
3
4
6
12
6 divisores
---- user output:
1
2
3
4
6
12
6 divisores
-- TEST CASE 2:
---- input:
49
---- correct output:
1
7
49
3 divisores
---- user output:
1
7
49
3 divisores
-- TEST CASE 3:
---- input:
30
---- correct output:
1
2
3
5
6
10
15
30
8 divisores
---- user output:
1
2
3
5
6
10
15
30
8 divisores
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
