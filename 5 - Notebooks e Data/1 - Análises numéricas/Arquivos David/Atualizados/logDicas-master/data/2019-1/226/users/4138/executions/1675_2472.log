== SUBMITION (2019-05-02 12:41:57) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("insira a resposta da questao 1:")
y = input("insira a resposta da questao 2:")
z = input("insira a resposta da questao 3:")

# e,d,c
if(x != "e" and y != "d" and z != "c"):
	print(0)
elif(x == "e" and y != "d" and z != "c")
	print(1)
elif(x != "e" and y == "d" and z != "c")
	print(1)
elif(x != "e" and y != "d" and z == "c")
	print(1)
elif(x == "e" and y == "d" and z != "c")
	print(2)
elif(x == "e" and y != "d" and z == "c")
	print(2)
elif(x != "e" and y == "d" and z != "c")
	print(2)
else:
	print(3)


	
-- EXECUTION TIME:
0.156921
-- ERROR:
  File "/home/codebench/codes/1675/2472/main.py", line 10
    elif(x == "e" and y != "d" and z != "c")
                                           ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:41:58) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("insira a resposta da questao 1:")
y = input("insira a resposta da questao 2:")
z = input("insira a resposta da questao 3:")

# e,d,c
if(x != "e" and y != "d" and z != "c"):
	print(0)
elif(x == "e" and y != "d" and z != "c")
	print(1)
elif(x != "e" and y == "d" and z != "c")
	print(1)
elif(x != "e" and y != "d" and z == "c")
	print(1)
elif(x == "e" and y == "d" and z != "c")
	print(2)
elif(x == "e" and y != "d" and z == "c")
	print(2)
elif(x != "e" and y == "d" and z != "c")
	print(2)
else:
	print(3)


	
-- ERROR:
File "XXXX", line 10
    elif(x == "e" and y != "d" and z != "c")
                                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:45:11) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("insira a resposta da questao 1:")
y = input("insira a resposta da questao 2:")
z = input("insira a resposta da questao 3:")
i = input("insira o gabarito da questao 1:")
j = input("insira a gabarito da questao 2:")
k = input("insira o gabarito da questao 3:")
# e,d,c
if(x != i and y != j and z != k):
	print(0)
elif(x == i and y != j and z != k):
	print(1)
elif(x != i and y == j and z != k):
	print(1)
elif(x != i and y != j and z == k):
	print(1)
elif(x == i and y == j and z != k):
	print(2)
elif(x == i and y != j and z == k):
	print(2)
elif(x != i and y == j and z != k):
	print(2)
else:
	print(3)


	
-- ERROR:
File "XXXX", line 10
    elif(x == "e" and y != "d" and z != "c")
                                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 12:45:13) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("insira a resposta da questao 1:")
y = input("insira a resposta da questao 2:")
z = input("insira a resposta da questao 3:")
i = input("insira o gabarito da questao 1:")
j = input("insira a gabarito da questao 2:")
k = input("insira o gabarito da questao 3:")
# e,d,c
if(x != i and y != j and z != k):
	print(0)
elif(x == i and y != j and z != k):
	print(1)
elif(x != i and y == j and z != k):
	print(1)
elif(x != i and y != j and z == k):
	print(1)
elif(x == i and y == j and z != k):
	print(2)
elif(x == i and y != j and z == k):
	print(2)
elif(x != i and y == j and z != k):
	print(2)
else:
	print(3)


	
-- EXECUTION TIME:
0.193955
-- TEST CASE 1:
---- input:
a
b
c
d
e
a
---- correct output:
0
---- user output:
0
-- TEST CASE 2:
---- input:
a
b
c
a
b
c
---- correct output:
3
---- user output:
3
-- TEST CASE 3:
---- input:
c
d
e
c
d
c
---- correct output:
2
---- user output:
2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
