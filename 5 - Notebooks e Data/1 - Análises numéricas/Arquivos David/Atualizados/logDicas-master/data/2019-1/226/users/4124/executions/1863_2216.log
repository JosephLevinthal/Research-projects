== TEST (2019-07-02 11:17:54) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input("Matriz quadrada: ")))
n = shape(mat)[0]
ed = (n**2 - n)//2
vet = zeros(ed, dtype = float)
for i in range(n):
	for j in range(n):
		if i < j:
			mat[i,j] == vet[i]
print[vet]
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:18:16) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input("Matriz quadrada: ")))
n = shape(mat)[0]
ed = (n**2 - n)//2
vet = zeros(ed, dtype = float)
for i in range(n):
	for j in range(n):
		if i < j:
			mat[i,j] == vet[i]
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:18:38) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input("Matriz quadrada: ")))
n = shape(mat)[0]
ed = (n**2 - n)//2
vet = zeros(ed, dtype = float)
for i in range(n):
	for j in range(n):
		if i < j:
			mat[i,j] = vet[i]
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:19:37) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input("Matriz quadrada: ")))
n = shape(mat)[0]
ed = (n**2 - n)//2
vet = zeros(ed, dtype = float)
for i in range(n):
	for j in range(n):
		if i < j:
			vet[i] = mat[i,j]
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:22:08) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input("Matriz quadrada: ")))
n = shape(mat)[0]
ed = (n**2 - n)//2
vet = zeros(ed, dtype = float)
for i in range(n):
	for j in range(n):
		if i < j:
			vet[j] = mat[i,j]
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:22:38) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input("Matriz quadrada: ")))
n = shape(mat)[0]
ed = (n**2 - n)//2
vet = zeros(ed, dtype = float)
for i in range(n):
	for j in range(n):
		if i < j:
			vet[i] = mat[i,j]
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:24:34) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input("Matriz quadrada: ")))
n = shape(mat)[0]
ed = (n**2 - n)//2
vet = zeros(ed, dtype = float)
for i in range(n):
	for j in range(n):
		if i < j:
			vet[i-1] = mat[i,j]
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:25:11) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input("Matriz quadrada: ")))
n = shape(mat)[0]
ed = (n**2 - n)//2
vet = zeros(ed, dtype = float)
for i in range(n):
	for j in range(n):
		if i < j:
			vet[i] = mat[i,j]
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:26:57) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input("Matriz quadrada: ")))
n = shape(mat)[0]
ed = (n**2 - n)//2
vet = zeros(ed + 1, dtype = float)
for i in range(n):
	for j in range(n):
		if i < j:
			vet[i] = mat[i,j]
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:27:22) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input("Matriz quadrada: ")))
n = shape(mat)[0]
ed = (n**2 - n)//2
vet = zeros(ed, dtype = float)
for i in range(n):
	for j in range(n):
		if i < j:
			vet[i] = mat[i,j]
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:27:44) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input("Matriz quadrada: ")))
n = shape(mat)[0]
ed = (n**2 - n)//2
vet = zeros(ed + 1, dtype = float)
for i in range(n):
	for j in range(n):
		if i < j:
			vet[i] = mat[i,j]
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:28:02) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input("Matriz quadrada: ")))
n = shape(mat)[0]
ed = (n**2 - n)//2
vet = zeros(ed + 1, dtype = float)
for i in range(n):
	for j in range(n):
		if i < j:
			vet[i - 1] = mat[i,j]
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:28:24) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input("Matriz quadrada: ")))
n = shape(mat)[0]
ed = (n**2 - n)//2
vet = zeros(ed + 1, dtype = float)
for i in range(n):
	for j in range(n):
		if i < j:
			vet[i + 1] = mat[i,j]
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:28:41) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input("Matriz quadrada: ")))
n = shape(mat)[0]
ed = (n**2 - n)//2
vet = zeros(ed + 1, dtype = float)
for i in range(n):
	for j in range(n):
		if i < j:
			vet[i + 2] = mat[i,j]
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:30:05) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input("Matriz quadrada: ")))
n = shape(mat)[0]
ed = (n**2 - n)//2
vet = zeros(ed, dtype = float)
j = 1
for i in range(n):
	for j in range(n):
		if i < j:
			vet[i] = mat[i,j]

print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:30:50) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input("Matriz quadrada: ")))
n = shape(mat)[0]
ed = (n**2 - n)//2
vet = zeros(ed, dtype = float)

for i in range(n):
	for j in range(n):
		if i < j:
			vet[i] = mat[i,j]
print(max(vet))

print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 11:31:04) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input("Matriz quadrada: ")))
n = shape(mat)[0]
ed = (n**2 - n)//2
vet = zeros(ed, dtype = float)

for i in range(n):
	for j in range(n):
		if i < j:
			vet[i] = mat[i,j]
print(max(vet))

print(vet)
-- EXECUTION TIME:
1.02479
-- TEST CASE 1:
---- input:
[[10,8,2],[20,16,4],[40,32,8]]
---- correct output:
8.0
---- user output:
4.0
[2. 4. 0.]
-- TEST CASE 2:
---- input:
[[0.32,0.48,0.56],[0.12,0.54,0.34],[0.67,0.89,0.76]]
---- correct output:
0.56
---- user output:
0.56
[0.56 0.34 0.  ]
-- TEST CASE 3:
---- input:
[[34.5,66.7,89.7,65.8,34.6],[77.8,65.7,89.7,23.4,45.9],[12.3,98.9,23.4,67.7,55.5],[33.3,44.4,56.8,91.3,51.9],[11.1,22.2,34.5,66.5,15.9]]
---- correct output:
89.7
---- user output:
55.5
[34.6 45.9 55.5 51.9  0.   0.   0.   0.   0.   0. ]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 11:31:08) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input("Matriz quadrada: ")))
n = shape(mat)[0]
ed = (n**2 - n)//2
vet = zeros(ed, dtype = float)

for i in range(n):
	for j in range(n):
		if i < j:
			vet[i] = mat[i,j]
print(max(vet))


-- EXECUTION TIME:
1.04625
-- TEST CASE 1:
---- input:
[[10,8,2],[20,16,4],[40,32,8]]
---- correct output:
8.0
---- user output:
4.0
-- TEST CASE 2:
---- input:
[[0.32,0.48,0.56],[0.12,0.54,0.34],[0.67,0.89,0.76]]
---- correct output:
0.56
---- user output:
0.56
-- TEST CASE 3:
---- input:
[[34.5,66.7,89.7,65.8,34.6],[77.8,65.7,89.7,23.4,45.9],[12.3,98.9,23.4,67.7,55.5],[33.3,44.4,56.8,91.3,51.9],[11.1,22.2,34.5,66.5,15.9]]
---- correct output:
89.7
---- user output:
55.5
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:32:02) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input("Matriz quadrada: ")))
n = shape(mat)[0]
ed = (n**2 - n)//2
vet = zeros(ed, dtype = float)

for i in range(n):
	for j in range(n):
		if i < j:
			vet[i] = mat[i,j]
print(max(vet))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:32:13) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input("Matriz quadrada: ")))
n = shape(mat)[0]
ed = (n**2 - n)//2
vet = zeros(ed, dtype = float)

for i in range(n):
	for j in range(n):
		if i < j:
			vet[i] = mat[i,j]
print(vet)
print(max(vet))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:33:37) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input("Matriz quadrada: ")))
n = shape(mat)[0]
ed = (n**2 - n)//2
vet = zeros(ed, dtype = float)
k = 0
for i in range(n):
	for j in range(n):
		if i < j:
			vet[k] = mat[i,j]
			k = k + 1
print(vet)
print(max(vet))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 11:33:50) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input("Matriz quadrada: ")))
n = shape(mat)[0]
ed = (n**2 - n)//2
vet = zeros(ed, dtype = float)
k = 0
for i in range(n):
	for j in range(n):
		if i < j:
			vet[k] = mat[i,j]
			k = k + 1

print(max(vet))


-- EXECUTION TIME:
1.034
-- TEST CASE 1:
---- input:
[[10,8,2],[20,16,4],[40,32,8]]
---- correct output:
8.0
---- user output:
8.0
-- TEST CASE 2:
---- input:
[[0.32,0.48,0.56],[0.12,0.54,0.34],[0.67,0.89,0.76]]
---- correct output:
0.56
---- user output:
0.56
-- TEST CASE 3:
---- input:
[[34.5,66.7,89.7,65.8,34.6],[77.8,65.7,89.7,23.4,45.9],[12.3,98.9,23.4,67.7,55.5],[33.3,44.4,56.8,91.3,51.9],[11.1,22.2,34.5,66.5,15.9]]
---- correct output:
89.7
---- user output:
89.7
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
