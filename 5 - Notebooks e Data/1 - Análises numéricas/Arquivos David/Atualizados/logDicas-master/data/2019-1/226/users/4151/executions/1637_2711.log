== TEST (2019-04-09 11:42:10) 
-- CODE:
x=float(input("valor disponivel: "))
y=int(input("quantidade de tickets: "))
z=float(input(" valor do tickets: "))
w=int(input("passes de onibus: "))
t=float(input("valor dos passes: "))

if((y*z) + (w*t)< x):
	mensagem="suficiente"
else:
	mensagem="insuficiente"
	
print(mensagem)

-- OUTPUT:
suficiente
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:42:44) 
-- CODE:
x=float(input("valor disponivel: "))
y=int(input("quantidade de tickets: "))
z=float(input(" valor do tickets: "))
w=int(input("passes de onibus: "))
t=float(input("valor dos passes: "))

if((y*z) + (w*t)< x):
	mensagem="suficiente"
else:
	mensagem="insuficiente"
	
print(mensagem)

-- EXECUTION TIME:
0.140238
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
suficiente
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
insuficiente
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:43:28) 
-- CODE:
x=float(input("valor disponivel: "))
y=int(input("quantidade de tickets: "))
z=float(input(" valor do tickets: "))
w=int(input("passes de onibus: "))
t=float(input("valor dos passes: "))

if((y*z) + (w*t)< x):
	mensagem="SUFICIENTE"
else:
	mensagem="INSUFICIETE"
	
print(mensagem)

-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:44:20) 
-- CODE:
x=float(input("valor disponivel: "))
y=int(input("quantidade de tickets: "))
z=float(input(" valor do tickets: "))
w=int(input("passes de onibus: "))
t=float(input("valor dos passes: "))

if((y*z) + (w*t)< x):
	mensagem="SUFICIENTE"
else:
	mensagem="INSUFICIETE"
	
print(mensagem)

-- EXECUTION TIME:
0.1587
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
INSUFICIETE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:45:11) 
-- CODE:
x=float(input("valor disponivel: "))
y=int(input("quantidade de tickets: "))
z=float(input(" valor do tickets: "))
w=int(input("passes de onibus: "))
t=float(input("valor dos passes: "))

if((y*z) + (w*t)< x):
	mensagem="SUFICIENTE"
else:
	mensagem="INSUFICIETE"
	
print(mensagem)

-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:46:28) 
-- CODE:
x=float(input("valor disponivel: "))
y=int(input("quantidade de tickets: "))
z=float(input(" valor do tickets: "))
w=int(input("passes de onibus: "))
t=float(input("valor dos passes: "))

if((y*z) + (w*t)< x):
	mensagem="SUFICIENTE"
else:
	mensagem="INSUFICIETE"
	
print(mensagem)

-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:47:31) 
-- CODE:
x=float(input("valor disponivel: "))
y=int(input("quantidade de tickets: "))
z=float(input(" valor do tickets: "))
w=int(input("passes de onibus: "))
t=float(input("valor dos passes: "))

if((y*z) + (w*t)< x):
	mensagem="SUFICIENTE"
else:
	mensagem="INSUFICIETE"
	
print(mensagem)

-- EXECUTION TIME:
0.177766
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
INSUFICIETE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:49:00) 
-- CODE:
x=float(input("valor disponivel: "))
y=int(input("quantidade de tickets: "))
z=float(input("valor do tickets: "))
w=int(input("passes de onibus: "))
t=float(input("valor dos passes: "))

if((y*z) + (w*t)< x):
	mensagem="SUFICIENTE"
else:
	mensagem="INSUFICIENTE"
	
print(mensagem)

-- EXECUTION TIME:
0.229141
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
INSUFICIENTE
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
