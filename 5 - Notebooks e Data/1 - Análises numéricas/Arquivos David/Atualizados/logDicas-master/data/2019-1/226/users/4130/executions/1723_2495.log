== TEST (2019-05-07 18:05:54) 
-- CODE:
# Introducao a Programacao de Computadores
# Criado em 15 / 05 / 2015
# @author: IComp / UFAM

# Primeiro input
num = int(input("Digite um numero: "))

# Laco de repeticao
while (num >= 0 and num<= 9):
	# Verifica se valor eh divisivel por 2
	if (num / 2):
		mensagem = "PAR"
	else:
		mensagem = "IMPAR"
	
	print(mensagem)
	
	# Inputs seguintes
	num = int(input("Digite um numero: "))

-- OUTPUT:
IMPAR
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 18:06:08) 
-- CODE:
# Introducao a Programacao de Computadores
# Criado em 15 / 05 / 2015
# @author: IComp / UFAM

# Primeiro input
num = int(input("Digite um numero: "))

# Laco de repeticao
while (num >= 0 and num<= 99):
	# Verifica se valor eh divisivel por 2
	if (num / 2):
		mensagem = "PAR"
	else:
		mensagem = "IMPAR"
	
	print(mensagem)
	
	# Inputs seguintes
	num = int(input("Digite um numero: "))

-- OUTPUT:
IMPAR
PAR
PAR
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 18:06:11) 
-- CODE:
# Introducao a Programacao de Computadores
# Criado em 15 / 05 / 2015
# @author: IComp / UFAM

# Primeiro input
num = int(input("Digite um numero: "))

# Laco de repeticao
while (num >= 0 and num<= 99):
	# Verifica se valor eh divisivel por 2
	if (num / 2):
		mensagem = "PAR"
	else:
		mensagem = "IMPAR"
	
	print(mensagem)
	
	# Inputs seguintes
	num = int(input("Digite um numero: "))

-- OUTPUT:
IMPAR
PAR
PAR
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 18:07:22) 
-- CODE:
# Introducao a Programacao de Computadores
# Criado em 15 / 05 / 2015
# @author: IComp / UFAM

# Primeiro input
num = int(input("Digite um numero: "))

# Laco de repeticao
while (num >= 0 and num<= 99):
	# Verifica se valor eh divisivel por 2
	if (num == 2):
		mensagem = "PAR"
	else:
		mensagem = "IMPAR"
	
	print(mensagem)
	
	# Inputs seguintes
	num = int(input("Digite um numero: "))

-- OUTPUT:
IMPAR
IMPAR
IMPAR
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 18:07:44) 
-- CODE:
# Introducao a Programacao de Computadores
# Criado em 15 / 05 / 2015
# @author: IComp / UFAM

# Primeiro input
num = int(input("Digite um numero: "))

# Laco de repeticao
while (num >= 0 and num<= 99):
	# Verifica se valor eh divisivel por 2
	if (num == 1):
		mensagem = "PAR"
	else:
		mensagem = "IMPAR"
	
	print(mensagem)
	
	# Inputs seguintes
	num = int(input("Digite um numero: "))

-- OUTPUT:
IMPAR
IMPAR
IMPAR
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 18:09:31) 
-- CODE:
# Introducao a Programacao de Computadores
# Criado em 15 / 05 / 2015
# @author: IComp / UFAM

# Primeiro input
num = int(input("Digite um numero: "))

# Laco de repeticao
while (num >= 0 and num < 100):
	# Verifica se valor eh divisivel por 2
	if (num == par):
		mensagem = "PAR"
	else:
		mensagem = "IMPAR"
	
	print(mensagem)
	
	# Inputs seguintes
	num = int(input("Digite um numero: "))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    if (num == par):
NameError: name 'par' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 18:11:36) 
-- CODE:
# Introducao a Programacao de Computadores
# Criado em 15 / 05 / 2015
# @author: IComp / UFAM

# Primeiro input
num = int(input("Digite um numero: "))

# Laco de repeticao
while (num >= 0 and num < 100):
	# Verifica se valor eh divisivel por 2
	if (num == 2, 4, 6, 8, 10):
		mensagem = "PAR"
	else:
		mensagem = "IMPAR"
	
	print(mensagem)
	
	# Inputs seguintes
	num = int(input("Digite um numero: "))

-- OUTPUT:
PAR
PAR
PAR
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 18:12:02) 
-- CODE:
# Introducao a Programacao de Computadores
# Criado em 15 / 05 / 2015
# @author: IComp / UFAM

# Primeiro input
num = int(input("Digite um numero: "))

# Laco de repeticao
while (num >= 0 and num < 100):
	# Verifica se valor eh divisivel por 2
	if (num == 2, 4, 6, 8, 10):
		mensagem = "PAR"
	else:
		mensagem = "IMPAR"
	
	print(mensagem)
	
	# Inputs seguintes
	num = int(input("Digite um numero: "))

-- OUTPUT:
PAR
PAR
PAR
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-07 18:13:54) 
-- CODE:
# Primeiro input
num = int(input("Digite um numero: "))

# Laco de repeticao
while (num >= 0 and num < 100):
	# Verifica se valor eh divisivel por 2
	if (num == / 2):
		mensagem = "PAR"
	else:
		mensagem = "IMPAR"
	
	print(mensagem)
	
	# Inputs seguintes
	num = int(input("Digite um numero: "))

-- ERROR:
File "XXXX", line 7
    if (num == / 2):
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 10:04:47) 
-- CODE:
# Primeiro input
num = int(input("Digite um numero: "))

# Laco de repeticao
while (num >= 0 and num < 100):
	# Verifica se valor eh divisivel por 2
	if (num % 2 == 0):
		mensagem = "PAR"
	else:
		mensagem = "IMPAR"
	
	print(mensagem)
	
	# Inputs seguintes
	num = int(input("Digite um numero: "))

-- OUTPUT:
PAR
PAR
PAR
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-09 10:05:14) 
-- CODE:
# Primeiro input
num = int(input("Digite um numero: "))

# Laco de repeticao
while (num >= 0 and num < 100):
	# Verifica se valor eh divisivel por 2
	if (num % 2 == 0):
		mensagem = "PAR"
	else:
		mensagem = "IMPAR"
	
	print(mensagem)
	
	# Inputs seguintes
	num = int(input("Digite um numero: "))

-- EXECUTION TIME:
0.194236
-- TEST CASE 1:
---- input:
0
22
44
-1
---- correct output:
PAR
PAR
PAR
---- user output:
PAR
PAR
PAR
-- TEST CASE 2:
---- input:
1
33
55
777
9999
-1
---- correct output:
IMPAR
IMPAR
IMPAR
IMPAR
IMPAR
---- user output:
IMPAR
IMPAR
IMPAR
-- TEST CASE 3:
---- input:
10528
4999
123
45
6
-1
---- correct output:
PAR
IMPAR
IMPAR
IMPAR
PAR
---- user output:

-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 10:05:48) 
-- CODE:
# Primeiro input
num = int(input("Digite um numero: "))

# Laco de repeticao
while (num > -1):
	# Verifica se valor eh divisivel por 2
	if (num % 2 == 0):
		mensagem = "PAR"
	else:
		mensagem = "IMPAR"
	
	print(mensagem)
	
	# Inputs seguintes
	num = int(input("Digite um numero: "))

-- OUTPUT:
PAR
PAR
PAR
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 10:05:57) 
-- CODE:
# Primeiro input
num = int(input("Digite um numero: "))

# Laco de repeticao
while (num > -1):
	# Verifica se valor eh divisivel por 2
	if (num % 2 == 0):
		mensagem = "PAR"
	else:
		mensagem = "IMPAR"
	
	print(mensagem)
	
	# Inputs seguintes
	num = int(input("Digite um numero: "))

-- OUTPUT:
PAR
PAR
PAR
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-09 10:05:58) 
-- CODE:
# Primeiro input
num = int(input("Digite um numero: "))

# Laco de repeticao
while (num > -1):
	# Verifica se valor eh divisivel por 2
	if (num % 2 == 0):
		mensagem = "PAR"
	else:
		mensagem = "IMPAR"
	
	print(mensagem)
	
	# Inputs seguintes
	num = int(input("Digite um numero: "))

-- EXECUTION TIME:
0.135175
-- TEST CASE 1:
---- input:
0
22
44
-1
---- correct output:
PAR
PAR
PAR
---- user output:
PAR
PAR
PAR
-- TEST CASE 2:
---- input:
1
33
55
777
9999
-1
---- correct output:
IMPAR
IMPAR
IMPAR
IMPAR
IMPAR
---- user output:
IMPAR
IMPAR
IMPAR
IMPAR
IMPAR
-- TEST CASE 3:
---- input:
10528
4999
123
45
6
-1
---- correct output:
PAR
IMPAR
IMPAR
IMPAR
PAR
---- user output:
PAR
IMPAR
IMPAR
IMPAR
PAR
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:04:15) 
-- CODE:
x = int(input("Digite um numero: "))

while(x > -1):
	if(x % 2 == 0):
		mensagem = "PAR"
	else:
		mensagem = "IMPAR"
	print(mensagem)
	x = int(input("Digite um numero: "))
-- OUTPUT:
PAR
PAR
PAR
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:04:40) 
-- CODE:
x = int(input("Digite um numero: "))

while(x > -1):
	if(x % 2 == 0):
		mensagem = "PAR"
	else:
		mensagem = "IMPAR"
	print(mensagem)
	x = int(input("Digite um numero: "))
-- OUTPUT:
PAR
PAR
PAR
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:04:52) 
-- CODE:
x = int(input("Digite um numero: "))

while(x > -1):
	if(x % 2 == 0):
		mensagem = "PAR"
	else:
		mensagem = "IMPAR"
	print(mensagem)
	x = int(input("Digite um numero: "))
-- OUTPUT:
PAR
PAR
PAR
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 20:04:52) 
-- CODE:
x = int(input("Digite um numero: "))

while(x > -1):
	if(x % 2 == 0):
		mensagem = "PAR"
	else:
		mensagem = "IMPAR"
	print(mensagem)
	x = int(input("Digite um numero: "))
-- EXECUTION TIME:
0.167747
-- TEST CASE 1:
---- input:
0
22
44
-1
---- correct output:
PAR
PAR
PAR
---- user output:
PAR
PAR
PAR
-- TEST CASE 2:
---- input:
1
33
55
777
9999
-1
---- correct output:
IMPAR
IMPAR
IMPAR
IMPAR
IMPAR
---- user output:
IMPAR
IMPAR
IMPAR
IMPAR
IMPAR
-- TEST CASE 3:
---- input:
10528
4999
123
45
6
-1
---- correct output:
PAR
IMPAR
IMPAR
IMPAR
PAR
---- user output:
PAR
IMPAR
IMPAR
IMPAR
PAR
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:06:34) 
-- CODE:
x = int(input("Digite um numero: "))

while(x > -1):
	if(x % 2 == 0):
		mensagem = "PAR"
	else:
		mensagem = "IMPAR"
	print(mensagem)
	x = int(input("Digite um numero: "))
-- OUTPUT:
PAR
PAR
PAR
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 20:06:51) 
-- CODE:
x = int(input("Digite um numero: "))

while(x > -1):
	if(x % 2 == 0):
		mensagem = "PAR"
	else:
		mensagem = "IMPAR"
	print(mensagem)
	x = int(input("Digite um numero: "))
-- EXECUTION TIME:
0.229037
-- TEST CASE 1:
---- input:
0
22
44
-1
---- correct output:
PAR
PAR
PAR
---- user output:
PAR
PAR
PAR
-- TEST CASE 2:
---- input:
1
33
55
777
9999
-1
---- correct output:
IMPAR
IMPAR
IMPAR
IMPAR
IMPAR
---- user output:
IMPAR
IMPAR
IMPAR
IMPAR
IMPAR
-- TEST CASE 3:
---- input:
10528
4999
123
45
6
-1
---- correct output:
PAR
IMPAR
IMPAR
IMPAR
PAR
---- user output:
PAR
IMPAR
IMPAR
IMPAR
PAR
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 08:42:36) 
-- CODE:
x = int(ix = int(input("Digite um numero: "nput("Digite um numero: "))

while(x > -1):
	if(x % 2 == 0):
		mensagem = "PAR"
	else:
		mensagem = "IMPAR"
	print(mensagem)
	x = int(input("Digite um numero: "))
-- ERROR:
File "XXXX", line 1
    x = int(ix = int(input("Digite um numero: "nput("Digite um numero: "))
                                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 08:42:54) 
-- CODE:
x = int(ix = int(input("Digite um numero: "nput("Digite um numero: "))

while(x > -1):
	if(x % 2 == 0):
		mensagem = "PAR"
	else:
		mensagem = "IMPAR"
	print(mensagem)
	x = int(input("Digite um numero: "))
-- EXECUTION TIME:
0.192651
-- ERROR:
  File "/home/codebench/codes/1723/2495/main.py", line 1
    x = int(ix = int(input("Digite um numero: "nput("Digite um numero: "))
                                                  ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 08:43:01) 
-- CODE:
x = int(ix = int(input("Digite um numero: "nput("Digite um numero: "))

while(x > -1):
	if(x % 2 == 0):
		mensagem = "PAR"
	else:
		mensagem = "IMPAR"
	print(mensagem)
	x = int(input("Digite um numero: "))
-- EXECUTION TIME:
0.182792
-- ERROR:
  File "/home/codebench/codes/1723/2495/main.py", line 1
    x = int(ix = int(input("Digite um numero: "nput("Digite um numero: "))
                                                  ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 08:43:53) 
-- CODE:
x = int(ix = int(input("Digite um numero:)))

while(x > -1):
	if(x % 2 == 0):
		mensagem = "PAR"
	else:
		mensagem = "IMPAR"
	print(mensagem)
	x = int(input("Digite um numero: "))
-- ERROR:
File "XXXX", line 1
    x = int(ix = int(input("Digite um numero:)))
                                               ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
