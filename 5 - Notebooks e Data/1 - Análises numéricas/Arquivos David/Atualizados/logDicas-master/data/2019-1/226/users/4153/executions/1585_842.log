== SUBMITION (2019-03-25 12:44:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("Insira um numero inteiro de quatro digitos: "))
num1=numero//1000
num2=numero//100-(num1*numero)
num3=numero//10-(num2*numero)
num4=numero//1-(num3*numero)

print(num1+num2+num3+num4)

-- EXECUTION TIME:
0.134445
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
-6938265272304
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
-1019191898
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:45:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("Insira um numero inteiro de quatro digitos: "))
num1=numero//1000
num2=numero//100-(num1*numero)
num3=numero//10-(num2*numero)
num4=numero//1-(num3*numero)

print(num1+num2+num3+num4)

-- OUTPUT:
-6938265272304
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:45:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("Insira um numero inteiro de quatro digitos: "))
num1=numero//1000
num2=numero//100-(num1*numero)
num3=numero//10-(num2*numero)
num4=numero//(num3*numero)

print(num1+num2+num3+num4)

-- OUTPUT:
756379078
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:45:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("Insira um numero inteiro de quatro digitos: "))
num1=numero//1000
num2=numero//100-(num1*numero)
num3=numero//10-(num2*numero)
num4=numero//(num3*numero)

print(num1+num2+num3+num4)

-- OUTPUT:
756379078
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:45:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("Insira um numero inteiro de quatro digitos: "))
num1=numero//1000
num2=numero//100-(num1*numero)
num3=numero//10-(num2*numero)
num4=numero//(num3*numero)

print(num1+num2+num3+num4)

-- OUTPUT:
756379078
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:46:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("Insira um numero inteiro de quatro digitos: "))
num1=numero//1000
num2=numero//100-(num1*numero)
num3=numero//10-(num2*numero)
num4=numero//(num3*numero)

print(num1+num2+num3+num4)

-- OUTPUT:
756379078
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:47:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("Insira um numero inteiro de quatro digitos: "))
num1=numero//1000
num2=numero//1000-(num1*numero)
num3=numero//1000-(num2*numero)
num4=numero//1000(num3*numero)

print(num1+num2+num3+num4)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    num4=numero//1000(num3*numero)
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:47:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("Insira um numero inteiro de quatro digitos: "))
num1=numero//1000
num2=numero//1000-(num1*numero)
num3=numero//1000-(num2*numero)
num4=numero//1000(num3*numero)

print(num1+num2+num3+num4)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    num4=numero//1000(num3*numero)
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:47:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("Insira um numero inteiro de quatro digitos: "))
num1=numero//1000
num2=numero//1000-(num1*numero)
num3=numero//1000-(num2*numero)
num4=numero//1000(num3*numero)

print(num1+num2+num3+num4)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    num4=numero//1000(num3*numero)
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:47:24) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("Insira um numero inteiro de quatro digitos: "))
num1=numero//1000
num2=numero//1000-(num1*numero)
num3=numero//1000-(num2*numero)
num4=numero//1000-(num3*numero)

print(num1+num2+num3+num4)

-- OUTPUT:
-6945156003366
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:47:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("Insira um numero inteiro de quatro digitos: "))
num1=numero//1000
num2=numero//100-(num1*numero)
num3=numero//10-(num2*numero)
num4=numero//(num3*numero)

print(num1+num2+num3+num4)

-- OUTPUT:
756379078
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:51:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("Insira um numero inteiro de quatro digitos: "))
num1=numero//1000
num2=numero//100-(%10)
num3=numero//10-(numero/100)*10
num4=numero%(num3*numero)

print(num1+num2+num3+num4)

-- ERROR:
File "XXXX", line 6
    num2=numero//100-(%10)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:52:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("Insira um numero inteiro de quatro digitos: "))
num1=numero//1000
num2=numero//100-(10*numero)
num3=numero//10-(numero/100)*10
num4=numero%(num3*numero)

print(num1+num2+num3+num4)

-- OUTPUT:
-93464.90000000251
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:53:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("Insira um numero inteiro de quatro digitos: "))
num1=numero//1000
num2=numero//100-(10*numero)
num3=numero//(-10)-(numero/100)*10
num4=numero%(num3*numero)

print(num1+num2+num3+num4)

-- OUTPUT:
-16919499.200000003
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 12:53:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("Insira um numero inteiro de quatro digitos: "))
num1=numero//1000
num2=numero//100-(10*numero)
num3=numero//(-10-(numero/100)*10
num4=numero%(num3*numero)

print(num1+num2+num3+num4)

-- EXECUTION TIME:
0.0984969
-- ERROR:
  File "/home/codebench/codes/1585/842/main.py", line 8
    num4=numero%(num3*numero)
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:53:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("Insira um numero inteiro de quatro digitos: "))
num1=numero//1000
num2=numero//100-(10*numero)
num3=numero//10-(numero/100)*10
num4=numero%(num3*numero)

print(num1+num2+num3+num4)

-- OUTPUT:
-93464.90000000251
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:55:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("Insira um numero inteiro de quatro digitos: "))
num1=numero//1000
num2=numero//100-(10*num1)
num3=numero//10-(numero/100)*10
num4=numero%(num3*numero)

print(num1+num2+num3+num4)

-- OUTPUT:
-1824.9000000025035
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:55:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("Insira um numero inteiro de quatro digitos: "))
num1=numero//1000
num2=numero//100-(10*num1)
num3=numero//10-(numero/100)*10
num4=numero%(num3*numero)

print(num1+num2+num3+num4)

-- OUTPUT:
-1824.9000000025035
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:55:37) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("Insira um numero inteiro de quatro digitos: "))
num1=numero//1000
num2=numero//100-(10*num1)
num3=numero//10-(numero/100)*10
num4=numero%num3

print(num1+num2+num3+num4)

-- OUTPUT:
9.59999999791421
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:55:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("Insira um numero inteiro de quatro digitos: "))
num1=numero//1000
num2=numero//100-(10*num1)
num3=numero//10-(numero/100)
num4=numero%num3

print(num1+num2+num3+num4)

-- OUTPUT:
930.3000000000002
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:55:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("Insira um numero inteiro de quatro digitos: "))
num1=numero//1000
num2=numero//100-(10*num1)
num3=numero//10-(numero/100)
num4=numero%num3

print(num1+num2+num3+num4)

-- OUTPUT:
930.3000000000002
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:55:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("Insira um numero inteiro de quatro digitos: "))
num1=numero//1000
num2=numero//100-(10*num1)
num3=numero//10-(numero/100)
num4=numero%num3

print(num1+num2+num3+num4)

-- OUTPUT:
930.3000000000002
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:55:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("Insira um numero inteiro de quatro digitos: "))
num1=numero//1000
num2=numero//100-(10*num1)
num3=numero//10-(numero/100)
num4=numero%num3

print(num1+num2+num3+num4)

-- OUTPUT:
930.3000000000002
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:57:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("Insira um numero inteiro de quatro digitos: "))
num1=numero//1000
num2=numero//100-(10*num1)
num3=numero//10-(numero//100)
num4=numero%num3

print(num1+num2+num3+num4)

-- OUTPUT:
923
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:58:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("Insira um numero inteiro de quatro digitos: "))
num1=numero//1000
num2=numero//100-(10*num1)
num3=numero//10-(numero//100)
num4=numero%num3

print(num1+num2+num3+num4)

-- OUTPUT:
923
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:59:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("Insira um numero inteiro de quatro digitos: "))
num1=numero//1000
#num2=numero//100-(10*num1)
#num3=numero//10-(numero//100)
#num4=numero%num3

print(num1)#+num2+num3+num4)

-- OUTPUT:
9
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:59:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("Insira um numero inteiro de quatro digitos: "))
num1=numero//1000
#num2=numero//100-(10*num1)
#num3=numero//10-(numero//100)
#num4=numero%num3

print(num1)#+num2+num3+num4)

-- OUTPUT:
9
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:59:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("Insira um numero inteiro de quatro digitos: "))
num1=numero//1000
num2=numero//100-(10*num1)
#num3=numero//10-(numero//100)
#num4=numero%num3

print(num1+num2)#+num3+num4)

-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:00:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("Insira um numero inteiro de quatro digitos: "))
#num1=numero//1000
num2=numero//100-(10*num1)
#num3=numero//10-(numero//100)
#num4=numero%num3

print(num2)#+num3+num4)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    num2=numero//100-(10*num1)
NameError: name 'num1' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:00:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("Insira um numero inteiro de quatro digitos: "))
num1=numero//1000
num2=numero//100-(10*num1)
#num3=numero//10-(numero//100)
#num4=numero%num3

print(num2)#+num3+num4)

-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:01:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("Insira um numero inteiro de quatro digitos: "))
num1=numero//1000
num2=numero//100-(10*num1)
num3=numero//10-(numero//100)
#num4=numero%num3

print(num3)#+num4)

-- OUTPUT:
826
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:01:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("Insira um numero inteiro de quatro digitos: "))
num1=numero//1000
num2=numero//100-(10*num1)
num3=numero//(numero//100)
#num4=numero%num3

print(num3)#+num4)

-- OUTPUT:
100
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:01:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("Insira um numero inteiro de quatro digitos: "))
num1=numero//1000
num2=numero//100-(10*num1)
num3=(numero//10)-(numero//100)
#num4=numero%num3

print(num3)#+num4)

-- OUTPUT:
826
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:02:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("Insira um numero inteiro de quatro digitos: "))
num1=numero//1000
num2=numero//100-(10*num1)
num3=(numero//10)-(numero//10)
#num4=numero%num3

print(num3)#+num4)

-- OUTPUT:
826
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:02:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("Insira um numero inteiro de quatro digitos: "))
num1=numero//1000
num2=numero//100-(10*num1)
num3=(numero//100)-(numero//10)
#num4=numero%num3

print(num3)#+num4)

-- OUTPUT:
-826
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:03:40) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("Insira um numero inteiro de quatro digitos: "))
num1=numero//1000
num2=numero//100-(10*num1)
num3=(numero//10)-(100*num2)
#num4=numero%num3

print(num3)#+num4)

-- OUTPUT:
817
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:04:05) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("Insira um numero inteiro de quatro digitos: "))
num1=numero//1000
num2=numero//100-(10*num1)
num3=(numero//10)-(100*num2)
#num4=numero%num3

print(num3)#+num4)

-- OUTPUT:
817
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:04:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("Insira um numero inteiro de quatro digitos: "))
num1=numero//1000
num2=numero//100-(10*num1)
num3=(numero//10)-(100*num2)
#num4=numero%num3

print(num3)#+num4)

-- OUTPUT:
817
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:04:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("Insira um numero inteiro de quatro digitos: "))
num1=numero//1000
num2=numero//100-(10*num1)
num3=(numero//10)-(100*num2)
#num4=numero%num3

print(num3)#+num4)

-- OUTPUT:
817
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:04:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("Insira um numero inteiro de quatro digitos: "))
num1=numero//1000
num2=numero//100-(10*num1)
num3=(numero//10)-(numero//100)
#num4=numero%num3

print(num3)#+num4)

-- OUTPUT:
826
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:05:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("Insira um numero inteiro de quatro digitos: "))
num1=numero//1000
num2=numero//100-(10*num1)
num3=numero//10-(numero//100)*10
#num4=numero%num3

print(num3)#+num4)

-- OUTPUT:
7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:05:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("Insira um numero inteiro de quatro digitos: "))
num1=numero//1000
num2=numero//100-(10*num1)
num3=numero//10-(numero//100)*10
num4=numero%num3

print(num4)

-- OUTPUT:
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:06:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("Insira um numero inteiro de quatro digitos: "))
num1=numero//1000
num2=numero//100-(10*num1)
num3=numero//10-(numero//100)*10
num4=numero%num3

print(num1+num2+num3+num4)

-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 13:06:37) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("Insira um numero inteiro de quatro digitos: "))
num1=numero//1000
num2=numero//100-(10*num1)
num3=numero//10-(numero//100)*10
num4=numero%num3

print(num1+num2+num3+num4)

-- EXECUTION TIME:
0.146542
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
