== TEST (2019-04-30 11:14:33) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =input("Brasao:")
print("Entrada", x)
if(x == "lobo"):
	print("Casa:Stark")
elif(x == "leao"):
	print("Casa:Lannister")
elif(x == "veado"):
	print("Casa:Baratheon")
elif(x == "dragao"):
	print("Casa:Targaryen")
elif(x == "rosa"):
	print("Casa:Tyrell")
elif(x == "sol"):
	print("Casa:Martell")
elif(x == "lula")
   print("Casa:Greyjoy")
elif(x == "esfolado"):
	print("Casa:Bolton")
elif(x == "turta")
	print("Casa:Turlly")






-- ERROR:
File "XXXX", line 17
    elif(x == "lula")
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:14:40) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =input("Brasao:")
print("Entrada", x)
if(x == "lobo"):
	print("Casa:Stark")
elif(x == "leao"):
	print("Casa:Lannister")
elif(x == "veado"):
	print("Casa:Baratheon")
elif(x == "dragao"):
	print("Casa:Targaryen")
elif(x == "rosa"):
	print("Casa:Tyrell")
elif(x == "sol"):
	print("Casa:Martell")
elif(x == "lula"):
   print("Casa:Greyjoy")
elif(x == "esfolado"):
	print("Casa:Bolton")
elif(x == "turta")
	print("Casa:Turlly")






-- ERROR:
File "XXXX", line 21
    elif(x == "turta")
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:14:44) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =input("Brasao:")
print("Entrada", x)
if(x == "lobo"):
	print("Casa:Stark")
elif(x == "leao"):
	print("Casa:Lannister")
elif(x == "veado"):
	print("Casa:Baratheon")
elif(x == "dragao"):
	print("Casa:Targaryen")
elif(x == "rosa"):
	print("Casa:Tyrell")
elif(x == "sol"):
	print("Casa:Martell")
elif(x == "lula"):
   print("Casa:Greyjoy")
elif(x == "esfolado"):
	print("Casa:Bolton")
elif(x == "turta"):
	print("Casa:Turlly")






-- OUTPUT:
Entrada lula
Casa:Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 11:14:46) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =input("Brasao:")
print("Entrada", x)
if(x == "lobo"):
	print("Casa:Stark")
elif(x == "leao"):
	print("Casa:Lannister")
elif(x == "veado"):
	print("Casa:Baratheon")
elif(x == "dragao"):
	print("Casa:Targaryen")
elif(x == "rosa"):
	print("Casa:Tyrell")
elif(x == "sol"):
	print("Casa:Martell")
elif(x == "lula"):
   print("Casa:Greyjoy")
elif(x == "esfolado"):
	print("Casa:Bolton")
elif(x == "turta"):
	print("Casa:Turlly")






-- EXECUTION TIME:
0.170333
-- TEST CASE 1:
---- input:
lula
---- correct output:
Entrada: lula
Casa: Greyjoy
---- user output:
Entrada lula
Casa:Greyjoy
-- TEST CASE 2:
---- input:
tambaqui
---- correct output:
Entrada: tambaqui
Brasao invalido
---- user output:
Entrada tambaqui
-- TEST CASE 3:
---- input:
dragao
---- correct output:
Entrada: dragao
Casa: Targaryen
---- user output:
Entrada dragao
Casa:Targaryen
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:30:23) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =input("Brasao:")
print("Entrada", x)
if(x == "lobo"):
	print("Casa: Stark")
elif(x == "leao"):
	print("Casa: Lannister")
elif(x == "veado"):
	print("Casa: Baratheon")
elif(x == "dragao"):
	print("Casa: Targaryen")
elif(x == "rosa"):
	print("Casa: Tyrell")
elif(x == "sol"):
	print("Casa: Martell")
elif(x == "lula"):
   print("Casa: Greyjoy")
elif(x == "esfolado"):
	print("Casa: Bolton")
elif(x == "turta")
	print("Casa: Tully")






-- ERROR:
File "XXXX", line 21
    elif(x == "turta")
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:30:33) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =input("Brasao:")
print("Entrada", x)
if(x == "lobo"):
	print("Casa: Stark")
elif(x == "leao"):
	print("Casa: Lannister")
elif(x == "veado"):
	print("Casa: Baratheon")
elif(x == "dragao"):
	print("Casa: Targaryen")
elif(x == "rosa"):
	print("Casa: Tyrell")
elif(x == "sol"):
	print("Casa: Martell")
elif(x == "lula"):
   print("Casa: Greyjoy")
elif(x == "esfolado"):
	print("Casa: Bolton")
elif(x == "turta")
	print("Casa: Tully")






-- ERROR:
File "XXXX", line 21
    elif(x == "turta")
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:30:44) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =input("Brasao:")
print("Entrada", x)
if(x == "lobo"):
	print("Casa: Stark")
elif(x == "leao"):
	print("Casa: Lannister")
elif(x == "veado"):
	print("Casa: Baratheon")
elif(x == "dragao"):
	print("Casa: Targaryen")
elif(x == "rosa"):
	print("Casa: Tyrell")
elif(x == "sol"):
	print("Casa: Martell")
elif(x == "lula"):
   print("Casa: Greyjoy")
elif(x == "esfolado"):
	print("Casa: Bolton")
elif(x == "turta"):
	print("Casa: Tully")






-- OUTPUT:
Entrada lula
Casa: Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 11:30:46) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =input("Brasao:")
print("Entrada", x)
if(x == "lobo"):
	print("Casa: Stark")
elif(x == "leao"):
	print("Casa: Lannister")
elif(x == "veado"):
	print("Casa: Baratheon")
elif(x == "dragao"):
	print("Casa: Targaryen")
elif(x == "rosa"):
	print("Casa: Tyrell")
elif(x == "sol"):
	print("Casa: Martell")
elif(x == "lula"):
   print("Casa: Greyjoy")
elif(x == "esfolado"):
	print("Casa: Bolton")
elif(x == "turta"):
	print("Casa: Tully")






-- EXECUTION TIME:
0.133836
-- TEST CASE 1:
---- input:
lula
---- correct output:
Entrada: lula
Casa: Greyjoy
---- user output:
Entrada lula
Casa: Greyjoy
-- TEST CASE 2:
---- input:
tambaqui
---- correct output:
Entrada: tambaqui
Brasao invalido
---- user output:
Entrada tambaqui
-- TEST CASE 3:
---- input:
dragao
---- correct output:
Entrada: dragao
Casa: Targaryen
---- user output:
Entrada dragao
Casa: Targaryen
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:34:34) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =input("Brasao:")
print("Entrada", x)
if(x == "lobo"):
	print("Casa: Stark")
elif(x == "leao"):
	print("Casa: Lannister")
elif(x == "veado"):
	print("Casa: Baratheon")
elif(x == "dragao"):
	print("Casa: Targaryen")
elif(x == "rosa"):
	print("Casa: Tyrell")
elif(x == "sol"):
	print("Casa: Martell")
elif(x == "lula"):
   print("Casa: Greyjoy")
elif(x == "esfolado"):
	print("Casa: Bolton")
elif(x == "turta"):
	print("Casa: Tully")






-- OUTPUT:
Entrada lula
Casa: Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:42:11) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =input("Brasao:")
print("Entrada", x)
if(x == "lobo"):
	print("Casa: Stark")
elif(x == "leao"):
	print("Casa: Lannister")
elif(x == "veado"):
	print("Casa: Baratheon")
elif(x == "dragao"):
	print("Casa: Targaryen")
elif(x == "rosa"):
	print("Casa: Tyrell")
elif(x == "sol"):
	print("Casa: Martell")
elif(x == "lula"):
   print("Casa: Greyjoy")
elif(x == "esfolado"):
	print("Casa: Bolton")
elif(x == "turta"):
	print("Casa: Tully")






-- OUTPUT:
Entrada lula
Casa: Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 11:42:13) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =input("Brasao:")
print("Entrada", x)
if(x == "lobo"):
	print("Casa: Stark")
elif(x == "leao"):
	print("Casa: Lannister")
elif(x == "veado"):
	print("Casa: Baratheon")
elif(x == "dragao"):
	print("Casa: Targaryen")
elif(x == "rosa"):
	print("Casa: Tyrell")
elif(x == "sol"):
	print("Casa: Martell")
elif(x == "lula"):
   print("Casa: Greyjoy")
elif(x == "esfolado"):
	print("Casa: Bolton")
elif(x == "turta"):
	print("Casa: Tully")






-- EXECUTION TIME:
0.15909
-- TEST CASE 1:
---- input:
lula
---- correct output:
Entrada: lula
Casa: Greyjoy
---- user output:
Entrada lula
Casa: Greyjoy
-- TEST CASE 2:
---- input:
tambaqui
---- correct output:
Entrada: tambaqui
Brasao invalido
---- user output:
Entrada tambaqui
-- TEST CASE 3:
---- input:
dragao
---- correct output:
Entrada: dragao
Casa: Targaryen
---- user output:
Entrada dragao
Casa: Targaryen
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 11:43:36) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =input("Brasao:")
print("Entrada", x)
if(x == "lobo"):
	print("Casa: Stark")
elif(x == "leao"):
	print("Casa: Lannister")
elif(x == "veado"):
	print("Casa: Baratheon")
elif(x == "dragao"):
	print("Casa: Targaryen")
elif(x == "rosa"):
	print("Casa: Tyrell")
elif(x == "sol"):
	print("Casa: Martell")
elif(x == "lula"):
   print("Casa: Greyjoy")
elif(x == "esfolado"):
	print("Casa: Bolton")
elif(x == "turta"):
	print("Casa: Tully")
else:
	casa="Brasao invadlido"
	
	print(casa)






-- EXECUTION TIME:
0.169545
-- TEST CASE 1:
---- input:
lula
---- correct output:
Entrada: lula
Casa: Greyjoy
---- user output:
Entrada lula
Casa: Greyjoy
-- TEST CASE 2:
---- input:
tambaqui
---- correct output:
Entrada: tambaqui
Brasao invalido
---- user output:
Entrada tambaqui
Brasao invadlido
-- TEST CASE 3:
---- input:
dragao
---- correct output:
Entrada: dragao
Casa: Targaryen
---- user output:
Entrada dragao
Casa: Targaryen
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 11:43:44) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =input("Brasao:")
print("Entrada", x)
if(x == "lobo"):
	print("Casa: Stark")
elif(x == "leao"):
	print("Casa: Lannister")
elif(x == "veado"):
	print("Casa: Baratheon")
elif(x == "dragao"):
	print("Casa: Targaryen")
elif(x == "rosa"):
	print("Casa: Tyrell")
elif(x == "sol"):
	print("Casa: Martell")
elif(x == "lula"):
   print("Casa: Greyjoy")
elif(x == "esfolado"):
	print("Casa: Bolton")
elif(x == "turta"):
	print("Casa: Tully")
else:
	casa="Brasao invalido"
	
	print(casa)






-- EXECUTION TIME:
0.127723
-- TEST CASE 1:
---- input:
lula
---- correct output:
Entrada: lula
Casa: Greyjoy
---- user output:
Entrada lula
Casa: Greyjoy
-- TEST CASE 2:
---- input:
tambaqui
---- correct output:
Entrada: tambaqui
Brasao invalido
---- user output:
Entrada tambaqui
Brasao invalido
-- TEST CASE 3:
---- input:
dragao
---- correct output:
Entrada: dragao
Casa: Targaryen
---- user output:
Entrada dragao
Casa: Targaryen
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:43:48) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =input("Brasao:")
print("Entrada", x)
if(x == "lobo"):
	print("Casa: Stark")
elif(x == "leao"):
	print("Casa: Lannister")
elif(x == "veado"):
	print("Casa: Baratheon")
elif(x == "dragao"):
	print("Casa: Targaryen")
elif(x == "rosa"):
	print("Casa: Tyrell")
elif(x == "sol"):
	print("Casa: Martell")
elif(x == "lula"):
   print("Casa: Greyjoy")
elif(x == "esfolado"):
	print("Casa: Bolton")
elif(x == "turta"):
	print("Casa: Tully")
else:
	casa="Brasao invalido"
	
	print(casa)






-- OUTPUT:
Entrada lula
Casa: Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 11:45:08) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =input("Brasao:")
print("Entrada", x)
if(x == "lobo"):
	print("Casa: Stark")
elif(x == "leao"):
	print("Casa: Lannister")
elif(x == "veado"):
	print("Casa: Baratheon")
elif(x == "dragao"):
	print("Casa: Targaryen")
elif(x == "rosa"):
	print("Casa: Tyrell")
elif(x == "sol"):
	print("Casa: Martell")
elif(x == "lula"):
   print("Casa: Greyjoy")
elif(x == "esfolado"):
	print("Casa: Bolton")
elif(x == "turta"):
	print("Casa: Tully")
else:
	casa="Brasao invalido"
	
	
	print(casa)






-- EXECUTION TIME:
0.150166
-- TEST CASE 1:
---- input:
lula
---- correct output:
Entrada: lula
Casa: Greyjoy
---- user output:
Entrada lula
Casa: Greyjoy
-- TEST CASE 2:
---- input:
tambaqui
---- correct output:
Entrada: tambaqui
Brasao invalido
---- user output:
Entrada tambaqui
Brasao invalido
-- TEST CASE 3:
---- input:
dragao
---- correct output:
Entrada: dragao
Casa: Targaryen
---- user output:
Entrada dragao
Casa: Targaryen
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:52:58) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =input("Brasao:")
print("Entrada", x)
if(x == "lobo"):
	print("Casa: Stark")
elif(x == "leao"):
	print("Casa: Lannister")
elif(x == "veado"):
	print("Casa: Baratheon")
elif(x == "dragao"):
	print("Casa: Targaryen")
elif(x == "rosa"):
	print("Casa: Tyrell")
elif(x == "sol"):
	print("Casa: Martell")
elif(x == "lula"):
   print("Casa: Greyjoy")
elif(x == "esfolado"):
	print("Casa: Bolton")
elif(x == "turta"):
	print("Casa: Tully")
else:
	casa="Brasao invalido"
	
	
	print(casa)






-- OUTPUT:
Entrada lula
Casa: Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:54:20) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =input("Brasao:").lower()
print("Entrada",x)
if(x == "lobo"):
	print("Casa: Stark")
elif(x == "leao"):
	print("Casa: Lannister")
elif(x == "veado"):
	print("Casa: Baratheon")
elif(x == "dragao"):
	print("Casa: Targaryen")
elif(x == "rosa"):
	print("Casa: Tyrell")
elif(x == "sol"):
	print("Casa: Martell")
elif(x == "lula"):
   print("Casa: Greyjoy")
elif(x == "esfolado"):
	print("Casa: Bolton")
elif(x == "turta"):
	print("Casa: Tully")
else:
	casa="Brasao invalido"
	
	
	print(casa)






-- OUTPUT:
Entrada lula
Casa: Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 22:54:23) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =input("Brasao:").lower()
print("Entrada",x)
if(x == "lobo"):
	print("Casa: Stark")
elif(x == "leao"):
	print("Casa: Lannister")
elif(x == "veado"):
	print("Casa: Baratheon")
elif(x == "dragao"):
	print("Casa: Targaryen")
elif(x == "rosa"):
	print("Casa: Tyrell")
elif(x == "sol"):
	print("Casa: Martell")
elif(x == "lula"):
   print("Casa: Greyjoy")
elif(x == "esfolado"):
	print("Casa: Bolton")
elif(x == "turta"):
	print("Casa: Tully")
else:
	casa="Brasao invalido"
	
	
	print(casa)






-- EXECUTION TIME:
0.218055
-- TEST CASE 1:
---- input:
lula
---- correct output:
Entrada: lula
Casa: Greyjoy
---- user output:
Entrada lula
Casa: Greyjoy
-- TEST CASE 2:
---- input:
tambaqui
---- correct output:
Entrada: tambaqui
Brasao invalido
---- user output:
Entrada tambaqui
Brasao invalido
-- TEST CASE 3:
---- input:
dragao
---- correct output:
Entrada: dragao
Casa: Targaryen
---- user output:
Entrada dragao
Casa: Targaryen
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:02:57) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =input("Brasao:").lower()
print("Entrada",x)
if(x == "lobo"):
	y = "Stark"
	print("Casa:",y)
elif(x == "leao"):
	y = "Lannister"
	print("Casa:",y)
elif(x == "veado"):
	y = "Baratheon"
	print("Casa:",y)
elif(x == "dragao"):
	y="Targaryen"
	print("Casa:",y)
elif(x == "rosa"):
	y = "Tyrell"
	print("Casa:",y)
elif(x == "sol"):
	y = "Martell"
	print("Casa:",y)
elif(x == "lula"):
	y = "Greyjoy"
   print("Casa:",y)
elif(x == "esfolado"):
	y = "Bolton"
	print("Casa:",y)
elif(x == "turta"):
	y = "Tully"
	print("Casa:",y)
else:
	y = "Brasao invalido"
	print(y)






-- ERROR:
File "XXXX", line 25
    print("Casa:",y)
                   ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 23:03:40) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =input("Brasao:").lower()
print("Entrada",x)
if(x == "lobo"):
	y = "Stark"
	print("Casa:",y)
elif(x == "leao"):
	y = "Lannister"
	print("Casa:",y)
elif(x == "veado"):
	y = "Baratheon"
	print("Casa:",y)
elif(x == "dragao"):
	y="Targaryen"
	print("Casa:",y)
elif(x == "rosa"):
	y = "Tyrell"
	print("Casa:",y)
elif(x == "sol"):
	y = "Martell"
	print("Casa:",y)
elif(x == "lula"):
	y = "Greyjoy"
   print("Casa:",y)
elif(x == "esfolado"):
	y = "Bolton"
	print("Casa:",y)
elif(x == "turta"):
	y = "Tully"
	print("Casa:",y)
else:
	y = "Brasao invalido"
	print(y)






-- EXECUTION TIME:
0.196615
-- ERROR:
  File "/home/codebench/codes/1674/1105/main.py", line 25
    print("Casa:",y)
                   ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:03:40) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =input("Brasao:").lower()
print("Entrada",x)
if(x == "lobo"):
	y = "Stark"
	print("Casa:",y)
elif(x == "leao"):
	y = "Lannister"
	print("Casa:",y)
elif(x == "veado"):
	y = "Baratheon"
	print("Casa:",y)
elif(x == "dragao"):
	y="Targaryen"
	print("Casa:",y)
elif(x == "rosa"):
	y = "Tyrell"
	print("Casa:",y)
elif(x == "sol"):
	y = "Martell"
	print("Casa:",y)
elif(x == "lula"):
	y = "Greyjoy"
   print("Casa:",y)
elif(x == "esfolado"):
	y = "Bolton"
	print("Casa:",y)
elif(x == "turta"):
	y = "Tully"
	print("Casa:",y)
else:
	y = "Brasao invalido"
	print(y)






-- ERROR:
File "XXXX", line 25
    print("Casa:",y)
                   ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:04:10) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =input("Brasao:").lower()
print("Entrada",x)
if(x == "lobo"):
	y = "Stark"
	print("Casa:",y)
elif(x == "leao"):
	y = "Lannister"
	print("Casa:",y)
elif(x == "veado"):
	y = "Baratheon"
	print("Casa:",y)
elif(x == "dragao"):
	y="Targaryen"
	print("Casa:",y)
elif(x == "rosa"):
	y = "Tyrell"
	print("Casa:",y)
elif(x == "sol"):
	y = "Martell"
	print("Casa:",y)
elif(x == "lula"):
	y = "Greyjoy"
   print("Casa:",y)
elif(x == "esfolado"):
	y = "Bolton"
	print("Casa:",y)
elif(x == "turta"):
	y = "Tully"
	print("Casa:",y)
else:
	y = "Brasao invalido"
	print(y)






-- ERROR:
File "XXXX", line 25
    print("Casa:",y)
                   ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:04:35) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =input("Brasao:").lower()
print("Entrada",x)
if(x == "lobo"):
	y = "Stark"
	print("Casa:",y)
elif(x == "leao"):
	y = "Lannister"
	print("Casa:",y)
elif(x == "veado"):
	y = "Baratheon"
	print("Casa:",y)
elif(x == "dragao"):
	y="Targaryen"
	print("Casa:",y)
elif(x == "rosa"):
	y = "Tyrell"
	print("Casa:",y)
elif(x == "sol"):
	y = "Martell"
	print("Casa:",y)
elif(x == "lula"):
	y = "Greyjoy"
   print("Casa:",y)
elif(x == "esfolado"):
	y = "Bolton"
elif(x == "turta"):
	y = "Tully"
	print("Casa:",y)
else:
	y = "Brasao invalido"
	print(y)






-- ERROR:
File "XXXX", line 25
    print("Casa:",y)
                   ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:04:52) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =input("Brasao:").lower()
print("Entrada",x)
if(x == "lobo"):
	y = "Stark"
	print("Casa:",y)
elif(x == "leao"):
	y = "Lannister"
	print("Casa:",y)
elif(x == "veado"):
	y = "Baratheon"
	print("Casa:",y)
elif(x == "dragao"):
	y="Targaryen"
	print("Casa:",y)
elif(x == "rosa"):
	y = "Tyrell"
	print("Casa:",y)
elif(x == "sol"):
	y = "Martell"
	print("Casa:",y)
elif(x == "lula"):
	y = "Greyjoy"
   print("Casa:", y)
elif(x == "esfolado"):
	y = "Bolton"
elif(x == "turta"):
	y = "Tully"
	print("Casa:",y)
else:
	y = "Brasao invalido"
	print(y)






-- ERROR:
File "XXXX", line 25
    print("Casa:", y)
                    ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:05:14) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =input("Brasao:").lower()
print("Entrada",x)
if(x == "lobo"):
	y = "Stark"
	print("Casa:",y)
elif(x == "leao"):
	y = "Lannister"
	print("Casa:",y)
elif(x == "veado"):
	y = "Baratheon"
	print("Casa:",y)
elif(x == "dragao"):
	y="Targaryen"
	print("Casa:",y)
elif(x == "rosa"):
	y = "Tyrell"
	print("Casa:",y)
elif(x == "sol"):
	y = "Martell"
	print("Casa:",y)
elif(x == "lula"):
	y = "Greyjoy"
   print("Casa:",y)
elif(x == "esfolado"):
	y = "Bolton"
elif(x == "turta"):
	y = "Tully"
	print("Casa:",y)
else:
	y = "Brasao invalido"
	print(y)






-- ERROR:
File "XXXX", line 25
    print("Casa:",y)
                   ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 23:06:41) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =input("Brasao:").lower()
print("Entrada",x)
if(x == "lobo"):
	y = "Stark"
	print("Casa:",y)
elif(x == "leao"):
	y = "Lannister"
	print("Casa:",y)
elif(x == "veado"):
	y = "Baratheon"
	print("Casa:",y)
elif(x == "dragao"):
	y="Targaryen"
	print("Casa:",y)
elif(x == "rosa"):
	y = "Tyrell"
	print("Casa:",y)
elif(x == "sol"):
	y = "Martell"
	print("Casa:",y)
elif(x == "lula"):
	y = "Greyjoy"
   print("Casa:",y)
elif(x == "esfolado"):
	y = "Bolton"
elif(x == "turta"):
	y = "Tully"
	print("Casa:",y)
else:
	y = "Brasao invalido"
	print(y)






-- EXECUTION TIME:
0.148105
-- ERROR:
  File "/home/codebench/codes/1674/1105/main.py", line 25
    print("Casa:",y)
                   ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:06:41) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =input("Brasao:").lower()
print("Entrada",x)
if(x == "lobo"):
	y = "Stark"
	print("Casa:",y)
elif(x == "leao"):
	y = "Lannister"
	print("Casa:",y)
elif(x == "veado"):
	y = "Baratheon"
	print("Casa:",y)
elif(x == "dragao"):
	y="Targaryen"
	print("Casa:",y)
elif(x == "rosa"):
	y = "Tyrell"
	print("Casa:",y)
elif(x == "sol"):
	y = "Martell"
	print("Casa:",y)
elif(x == "lula"):
	y = "Greyjoy"
   print("Casa:",y)
elif(x == "esfolado"):
	y = "Bolton"
elif(x == "turta"):
	y = "Tully"
	print("Casa:",y)
else:
	y = "Brasao invalido"
	print(y)






-- ERROR:
File "XXXX", line 25
    print("Casa:",y)
                   ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 23:07:33) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =input("Brasao:").lower()
print("Entrada",x)
if(x == "lobo"):
	y = "Stark"
	print("Casa:",y)
elif(x == "leao"):
	y = "Lannister"
	print("Casa:",y)
elif(x == "veado"):
	y = "Baratheon"
	print("Casa:",y)
elif(x == "dragao"):
	y="Targaryen"
	print("Casa:",y)
elif(x == "rosa"):
	y = "Tyrell"
	print("Casa:",y)
elif(x == "sol"):
	y = "Martell"
	print("Casa:",y)
elif(x == "lula"):
	y = "Greyjoy"
   print("Casa:",y)
elif(x == "esfolado"):
	y = "Bolton"
	print("Casa",y)
elif(x == "turta"):
	y = "Tully"
	print("Casa:",y)
else:
	y = "Brasao invalido"
	print(y)






-- EXECUTION TIME:
0.144004
-- ERROR:
  File "/home/codebench/codes/1674/1105/main.py", line 25
    print("Casa:",y)
                   ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:07:34) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =input("Brasao:").lower()
print("Entrada",x)
if(x == "lobo"):
	y = "Stark"
	print("Casa:",y)
elif(x == "leao"):
	y = "Lannister"
	print("Casa:",y)
elif(x == "veado"):
	y = "Baratheon"
	print("Casa:",y)
elif(x == "dragao"):
	y="Targaryen"
	print("Casa:",y)
elif(x == "rosa"):
	y = "Tyrell"
	print("Casa:",y)
elif(x == "sol"):
	y = "Martell"
	print("Casa:",y)
elif(x == "lula"):
	y = "Greyjoy"
   print("Casa:",y)
elif(x == "esfolado"):
	y = "Bolton"
	print("Casa",y)
elif(x == "turta"):
	y = "Tully"
	print("Casa:",y)
else:
	y = "Brasao invalido"
	print(y)






-- ERROR:
File "XXXX", line 25
    print("Casa:",y)
                   ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 00:09:00) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =input("Brasao:").lower()
print("Entrada",x)
if(x == "lobo"):
	y = "Stark"
	print("Casa:",y)
elif(x == "leao"):
	y = "Lannister"
	print("Casa:",y)
elif(x == "veado"):
	y = "Baratheon"
	print("Casa:",y)
elif(x == "dragao"):
	y="Targaryen"
	print("Casa:",y)
elif(x == "rosa"):
	y = "Tyrell"
	print("Casa:",y)
elif(x == "sol"):
	y = "Martell"
	print("Casa:",y)
elif(x == "lula"):
	y = "Greyjoy"
   print("Casa:",y)
elif(x == "esfolado"):
	y = "Bolton"
	print("Casa",y)
elif(x == "turta"):
	y = "Tully"
	print("Casa:",y)
else:
	y = "Brasao invalido"
	print(y)






-- ERROR:
File "XXXX", line 25
    print("Casa:",y)
                   ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 00:09:20) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =input("Brasao:").lower()
print("Entrada",x)
if(x == "lobo"):
	y = "Stark"
	print("Casa:",y)
elif(x == "leao"):
	y = "Lannister"
	print("Casa:",y)
elif(x == "veado"):
	y = "Baratheon"
	print("Casa:",y)
elif(x == "dragao"):
	y="Targaryen"
	print("Casa:",y)
elif(x == "rosa"):
	y = "Tyrell"
	print("Casa:",y)
elif(x == "sol"):
	y = "Martell"
	print("Casa:",y)
elif(x == "lula"):
	y = "Greyjoy"
   print("Casa:",y)
elif(x == "esfolado"):
	y = "Bolton"
	print("Casa",y)
elif(x == "turta"):
	y = "Tully"
	print("Casa:",y)
else:
	y = "Brasao invalido"
	print(y)






-- ERROR:
File "XXXX", line 25
    print("Casa:",y)
                   ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 00:09:29) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =input("Brasao:").lower()
print("Entrada",x)
if(x == "lobo"):
	y = "Stark"
	print("Casa:",y)
elif(x == "leao"):
	y = "Lannister"
	print("Casa:",y)
elif(x == "veado"):
	y = "Baratheon"
	print("Casa:",y)
elif(x == "dragao"):
	y="Targaryen"
	print("Casa:",y)
elif(x == "rosa"):
	y = "Tyrell"
	print("Casa:",y)
elif(x == "sol"):
	y = "Martell"
	print("Casa:",y)
elif(x == "lula"):
	y = "Greyjoy"
   print("Casa:",y)
elif(x == "esfolado"):
	y = "Bolton"
	print("Casa",y)
elif(x == "turta"):
	y = "Tully"
	print("Casa:",y)
else:
	y = "Brasao invalido"
	print(y)






-- ERROR:
File "XXXX", line 25
    print("Casa:",y)
                   ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 00:23:11) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =input("Brasao:").lower()
print("Entrada",x)
if(x == "lobo"):
	y = "Stark"
	print("Casa:",y)
elif(x == "leao"):
	y = "Lannister"
	print("Casa:",y)
elif(x == "veado"):
	y = "Baratheon"
	print("Casa:",y)
elif(x == "dragao"):
	y="Targaryen"
	print("Casa:",y)
elif(x == "rosa"):
	y = "Tyrell"
	print("Casa:",y)
elif(x == "sol"):
	y = "Martell"
	print("Casa:",y)
elif(x == "lula"):
	y = "Greyjoy"
   print("Casa:",y)
elif(x == "esfolado"):
	y = "Bolton"
	print("Casa",y)
elif(x == "turta"):
	y = "Tully"
	print("Casa:",y)
else:
	y = "Brasao invalido"
	print(y)






-- ERROR:
File "XXXX", line 25
    print("Casa:",y)
                   ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 00:23:51) 
-- CODE:
x =input("digite o brasao:").lower()
print("Entrada",x)
if(x == "lobo"):
	y = "Stark"
	print("Casa:",y)
elif(x == "leao"):
	y = "Lannister"
	print("Casa:",y)
elif(x == "veado"):
	y = "Baratheon"
	print("Casa:",y)
elif(x == "dragao"):
	y="Targaryen"
	print("Casa:",y)
elif(x == "rosa"):
	y = "Tyrell"
	print("Casa:",y)
elif(x == "sol"):
	y = "Martell"
	print("Casa:",y)
elif(x == "lula"):
	y = "Greyjoy"
   print("Casa:",y)
elif(x == "esfolado"):
	y = "Bolton"
	print("Casa",y)
elif(x == "turta"):
	y = "Tully"
	print("Casa:",y)
else:
	y = "Brasao invalido"
	print(y)






-- ERROR:
File "XXXX", line 23
    print("Casa:",y)
                   ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 00:23:59) 
-- CODE:
x =input("digite o brasao:").lower()
print("Entrada",x)
if(x == "lobo"):
	y = "Stark"
	print("Casa:",y)
elif(x == "leao"):
	y = "Lannister"
	print("Casa:",y)
elif(x == "veado"):
	y = "Baratheon"
	print("Casa:",y)
elif(x == "dragao"):
	y="Targaryen"
	print("Casa:",y)
elif(x == "rosa"):
	y = "Tyrell"
	print("Casa:",y)
elif(x == "sol"):
	y = "Martell"
	print("Casa:",y)
elif(x == "lula"):
	y = "Greyjoy"
   print("Casa:",y)
elif(x == "esfolado"):
	y = "Bolton"
	print("Casa",y)
elif(x == "turta"):
	y = "Tully"
	print("Casa:",y)
else:
	y = "Brasao invalido"
	print(y)






-- ERROR:
File "XXXX", line 23
    print("Casa:",y)
                   ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 00:24:22) 
-- CODE:
x =input("digite o brasao:").lower()
print("Entrada",x)

if(x=="lobo"):
	y = "Stark"
	print("Casa:",y)
elif(x == "leao"):
	y = "Lannister"
	print("Casa:",y)
elif(x == "veado"):
	y = "Baratheon"
	print("Casa:",y)
elif(x == "dragao"):
	y="Targaryen"
	print("Casa:",y)
elif(x == "rosa"):
	y = "Tyrell"
	print("Casa:",y)
elif(x == "sol"):
	y = "Martell"
	print("Casa:",y)
elif(x == "lula"):
	y = "Greyjoy"
   print("Casa:",y)
elif(x == "esfolado"):
	y = "Bolton"
	print("Casa",y)
elif(x == "turta"):
	y = "Tully"
	print("Casa:",y)
else:
	y = "Brasao invalido"
	print(y)






-- ERROR:
File "XXXX", line 24
    print("Casa:",y)
                   ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 00:24:36) 
-- CODE:
x =input("digite o brasao:").lower()
print("Entrada",x)

if(x=="lobo"):
	y = "Stark"
	print("Casa:",y)
elif(x == "leao"):
	y = "Lannister"
	print("Casa:",y)
elif(x == "veado"):
	y = "Baratheon"
	print("Casa:",y)
elif(x == "dragao"):
	y="Targaryen"
	print("Casa:",y)
elif(x == "rosa"):
	y = "Tyrell"
	print("Casa:",y)
elif(x == "sol"):
	y = "Martell"
	print("Casa:",y)
elif(x == "lula"):
	y = "Greyjoy"
   print("Casa:",y)
elif(x == "esfolado"):
	y = "Bolton"
	print("Casa",y)
elif(x == "turta"):
	y = "Tully"
	print("Casa:",y)
else:
	y = "Brasao invalido"
	print(y)






-- ERROR:
File "XXXX", line 24
    print("Casa:",y)
                   ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 00:25:04) 
-- CODE:
x =input("digite o brasao:").lower()
print("Entrada",x)

if(x=="lobo"):
	y = "Stark"
	print("Casa:",y)
elif(x=="leao"):
	y = "Lannister"
	print("Casa:",y)
elif(x=="veado"):
	y = "Baratheon"
	print("Casa:",y)
elif(x=="dragao"):
	y="Targaryen"
	print("Casa:",y)
elif(x=="rosa"):
	y = "Tyrell"
	print("Casa:",y)
elif(x=="sol"):
	y = "Martell"
	print("Casa:",y)
elif(x == "lula"):
	y = "Greyjoy"
   print("Casa:",y)
elif(x == "esfolado"):
	y = "Bolton"
	print("Casa",y)
elif(x=="turta"):
	y = "Tully"
	print("Casa:",y)
else:
	y = "Brasao invalido"
	print(y)






-- ERROR:
File "XXXX", line 24
    print("Casa:",y)
                   ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 00:25:09) 
-- CODE:
x =input("digite o brasao:").lower()
print("Entrada",x)

if(x=="lobo"):
	y = "Stark"
	print("Casa:",y)
elif(x=="leao"):
	y = "Lannister"
	print("Casa:",y)
elif(x=="veado"):
	y = "Baratheon"
	print("Casa:",y)
elif(x=="dragao"):
	y="Targaryen"
	print("Casa:",y)
elif(x=="rosa"):
	y = "Tyrell"
	print("Casa:",y)
elif(x=="sol"):
	y = "Martell"
	print("Casa:",y)
elif(x == "lula"):
	y = "Greyjoy"
   	print("Casa:",y)
elif(x == "esfolado"):
	y = "Bolton"
	print("Casa",y)
elif(x=="turta"):
	y = "Tully"
	print("Casa:",y)
else:
	y = "Brasao invalido"
	print(y)






-- ERROR:
File "XXXX", line 24
    print("Casa:",y)
                   ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 00:25:18) 
-- CODE:
x =input("digite o brasao:").lower()
print("Entrada",x)

if(x=="lobo"):
	y = "Stark"
	print("Casa:",y)
elif(x=="leao"):
	y = "Lannister"
	print("Casa:",y)
elif(x=="veado"):
	y = "Baratheon"
	print("Casa:",y)
elif(x=="dragao"):
	y="Targaryen"
	print("Casa:",y)
elif(x=="rosa"):
	y = "Tyrell"
	print("Casa:",y)
elif(x=="sol"):
	y = "Martell"
	print("Casa:",y)
elif(x == "lula"):
	y = "Greyjoy"
   print("Casa:",y)
elif(x == "esfolado"):
	y = "Bolton"
	print("Casa",y)
elif(x=="turta"):
	y = "Tully"
	print("Casa:",y)
else:
	y = "Brasao invalido"
	print(y)






-- ERROR:
File "XXXX", line 24
    print("Casa:",y)
                   ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 00:27:07) 
-- CODE:
x = input("digite o brasao: ").lower()
print("Entrada: ",x)

if(x == "lobo"):
	y = "Stark"
	print("Casa: ",y)
elif(x == "leao"):
	y = "Lannister"
	print("Casa: ",y)
elif(x == "veado"):
	y == "Baratheon"
	print("Casa: ",y)
elif(x == "dragao"):
	y = "Targaryen"
	print("Casa: ",y)
elif(x == "rosa"):
	y = "Tyrell"
	print("Casa: ",y)
elif(x == "sol"):
	y = "Martell"
	print("Casa: ",y)
elif(x == "lula"):
	y = "Greyjoy"
	print("Casa: ",y)
elif(x == "esfolado"):
	y = "Bolton"
elif(x == "turta"):
	y = "Tully"
	print("Casa: ",y)
else:
	y = "Brasao invalido"
	print(y)






-- EXECUTION TIME:
0.155562
-- TEST CASE 1:
---- input:
lula
---- correct output:
Entrada: lula
Casa: Greyjoy
---- user output:
Entrada:  lula
Casa:  Greyjoy
-- TEST CASE 2:
---- input:
tambaqui
---- correct output:
Entrada: tambaqui
Brasao invalido
---- user output:
Entrada:  tambaqui
Brasao invalido
-- TEST CASE 3:
---- input:
dragao
---- correct output:
Entrada: dragao
Casa: Targaryen
---- user output:
Entrada:  dragao
Casa:  Targaryen
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
