== TEST (2019-06-25 11:09:48) 
-- CODE:
from numpy import*
from numpy.linalg import*

n = array(input(""))

mat = ((n,n) dtype=int)
-- ERROR:
File "XXXX", line 6
    mat = ((n,n) dtype=int)
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 11:10:02) 
-- CODE:
from numpy import*
from numpy.linalg import*

n = array(input(""))

mat = ((n,n), dtype=int)
print(mat)
-- ERROR:
File "XXXX", line 6
    mat = ((n,n), dtype=int)
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 11:10:37) 
-- CODE:
from numpy import*
from numpy.linalg import*

n = array(input(""))

mat = shape((n,n), dtype=int)
print(mat)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 11:11:35) 
-- CODE:
from numpy import*
from numpy.linalg import*

n = array(input(""))

mat = ((n,n), dtype=int)
print(mat)
-- ERROR:
File "XXXX", line 6
    mat = ((n,n), dtype=int)
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 11:11:46) 
-- CODE:
from numpy import*
from numpy.linalg import*

n = array(input(""))

j = mat((n,n), dtype=int)
print(mat)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 11:12:00) 
-- CODE:
from numpy import*
from numpy.linalg import*

n = array(input(""))

j = mat((n,n), dtype=int)
print(j)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 11:12:48) 
-- CODE:
from numpy import*
from numpy.linalg import*

n = array(input(""))

j = mat([n,n], dtype=int)
print(j)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 11:41:48) 
-- CODE:
from numpy import*
from numpy.linalg import*

n = array(input(""))

mat = zeros((n,n), dtype=int)


for i in range(n):
	for j in range(n): 
		mat[i, j] = min[i, j] + 1
		
print(mat)
		
	  
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 11:42:24) 
-- CODE:
from numpy import*
from numpy.linalg import*

n = array(input(""))

mat = zeros((n,n), dtype=int)


for i in range(n):
	for j in range(n): 
		mat[i, j] = min(i, j) + 1
		
print(mat)
		
	  
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 11:42:45) 
-- CODE:
from numpy import*
from numpy.linalg import*

n = int(input(""))

mat = zeros((n,n), dtype=int)


for i in range(n):
	for j in range(n): 
		mat[i, j] = min(i, j) + 1
		
print(mat)
		
	  
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-25 11:42:52) 
-- CODE:
from numpy import*
from numpy.linalg import*

n = int(input(""))

mat = zeros((n,n), dtype=int)


for i in range(n):
	for j in range(n): 
		mat[i, j] = min(i, j) + 1
		
print(mat)
		
	  
	
-- EXECUTION TIME:
1.05331
-- TEST CASE 1:
---- input:
3
---- correct output:
[[1 1 1]
 [1 2 2]
 [1 2 3]]
---- user output:
[[1 1 1]
 [1 2 2]
 [1 2 3]]
-- TEST CASE 2:
---- input:
8
---- correct output:
[[1 1 1 1 1 1 1 1]
 [1 2 2 2 2 2 2 2]
 [1 2 3 3 3 3 3 3]
 [1 2 3 4 4 4 4 4]
 [1 2 3 4 5 5 5 5]
 [1 2 3 4 5 6 6 6]
 [1 2 3 4 5 6 7 7]
 [1 2 3 4 5 6 7 8]]
---- user output:
[[1 1 1 1 1 1 1 1]
 [1 2 2 2 2 2 2 2]
 [1 2 3 3 3 3 3 3]
 [1 2 3 4 4 4 4 4]
 [1 2 3 4 5 5 5 5]
 [1 2 3 4 5 6 6 6]
 [1 2 3 4 5 6 7 7]
 [1 2 3 4 5 6 7 8]]
-- TEST CASE 3:
---- input:
1
---- correct output:
[[1]]
---- user output:
[[1]]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
