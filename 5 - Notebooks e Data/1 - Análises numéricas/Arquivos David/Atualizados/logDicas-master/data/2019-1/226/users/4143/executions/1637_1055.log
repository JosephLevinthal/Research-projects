== TEST (2019-04-10 19:55:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
a = float(input("V0:"))
b = float(input("Angulo:"))
c = float(input("Distancia do passaro ao porco:"))
b2 = (radians(b))
eq = (((a)**2)*sin(2*b2))/9.8

if ( c == eq):
	print("sim")
else:
	print("nao")

-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:57:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
a = float(input("V0:"))
b = float(input("Angulo:"))
c = float(input("Distancia do passaro ao porco:"))
b2 = (radians(b))
eq = (((a)**2)*sin(2*b2))/9.8

if ( eq == c):
	print("sim")
else:
	print("nao")

-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:57:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
a = float(input("V0:"))
b = float(input("Angulo:"))
c = float(input("Distancia do passaro ao porco:"))
b2 = (radians(b))
eq = (((a)**2)*sin(2*b2))/9.8

if ( eq == c):
	print("sim")
else:
	print("nao")

-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 20:02:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
a = float(input("V0:"))
b = float(input("Angulo:"))
c = float(input("Distancia do passaro ao porco:"))
b2 = (radians(b))
eq = (((a)**2)*sin(2*b2))/9.8
b3 =abs(c-eq)
if ( b3 == c):
	print("sim")
else:
	print("nao")

-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 20:03:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
a = float(input("V0:"))
b = float(input("Angulo:"))
c = float(input("Distancia do passaro ao porco:"))
b2 = (radians(b))
eq = (((a)**2)*sin(2*b2))/9.8
b3 =abs(c-eq)
if ( b3 == c):
	print("sim")
else:
	print("nao")

-- EXECUTION TIME:
0.15214
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:11:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
a = float(input("V0:"))
b = float(input("Angulo:"))
c = float(input("Distancia do passaro ao porco:"))
b2 = (radians(b))
eq = (((a)**2)*sin(2*b2))/9.8
d = abs(eq-c)
if (d <0.1 ):
	print("sim")
else:
	print("nao")

-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 10:12:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
a = float(input("V0:"))
b = float(input("Angulo:"))
c = float(input("Distancia do passaro ao porco:"))
b2 = (radians(b))
eq = (((a)**2)*sin(2*b2))/9.8
d = abs(eq-c)
if (d <0.1 ):
	print("sim")
else:
	print("nao")

-- EXECUTION TIME:
0.160877
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
