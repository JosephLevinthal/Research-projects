== TEST (2019-04-25 12:48:14) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Insira o valor do lado: "))
b = float(input("Insira o valor do lado: "))
c = float(input("Insira o valor do lado: "))

print("Entradas:", a, ",", b, ",", c)

if((a >= b + c) or (b >= a + c) or (c >= a + b) or (a < 0)or (b < 0) or (c < 0)):
	print("invalido")
else:
	if((a==b) and(c == b)):
		print("equilatero")
	if((a == b) or (a == c)or (b == c)):
		print("isoceles")
	else:
		print("escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 12:48:23) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Insira o valor do lado: "))
b = float(input("Insira o valor do lado: "))
c = float(input("Insira o valor do lado: "))

print("Entradas:", a, ",", b, ",", c)

if((a >= b + c) or (b >= a + c) or (c >= a + b) or (a < 0)or (b < 0) or (c < 0)):
	print("invalido")
else:
	if((a==b) and(c == b)):
		print("equilatero")
	if((a == b) or (a == c)or (b == c)):
		print("isoceles")
	else:
		print("escaleno")
-- EXECUTION TIME:
0.158621
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 12:48:41) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Insira o valor do lado: "))
b = float(input("Insira o valor do lado: "))
c = float(input("Insira o valor do lado: "))

print("Entradas:", a, ",", b, ",", c)

if((a >= b + c) or (b >= a + c) or (c >= a + b) or (a < 0)or (b < 0) or (c < 0)):
	print("invalido")
else:
	if((a==b) and(c == b)):
		print("equilatero")
	if((a == b) or (a == c)or (b == c)):
		print("isoceles")
	else:
		print("escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 12:50:01) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Insira o valor do lado: "))
b = float(input("Insira o valor do lado: "))
c = float(input("Insira o valor do lado: "))

print("Entradas:", a, ",", b, ",", c)

if((a >= b + c) or (b >= a + c) or (c >= a + b) or (a < 0)or (b < 0) or (c < 0)):
	print("Tipo de triangulo: invalido")
else:iso
	if((a==b) and(c == b)):
		print("Tipo de triangulo: equilatero")
	if((a == b) or (a == c)or (b == c)):
		print("Tipo de triangulo: isoceles")
	else:
		print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.199738
-- ERROR:
  File "/home/codebench/codes/1674/1099/main.py", line 12
    if((a==b) and(c == b)):
    ^
IndentationError: unexpected indent

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 12:50:08) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Insira o valor do lado: "))
b = float(input("Insira o valor do lado: "))
c = float(input("Insira o valor do lado: "))

print("Entradas:", a, ",", b, ",", c)

if((a >= b + c) or (b >= a + c) or (c >= a + b) or (a < 0)or (b < 0) or (c < 0)):
	print("Tipo de triangulo: invalido")
else:iso
	if((a==b) and(c == b)):
		print("Tipo de triangulo: equilatero")
	if((a == b) or (a == c)or (b == c)):
		print("Tipo de triangulo: isoceles")
	else:
		print("Tipo de triangulo: escaleno")
-- ERROR:
File "XXXX", line 12
    if((a==b) and(c == b)):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 12:50:34) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Insira o valor do lado: "))
b = float(input("Insira o valor do lado: "))
c = float(input("Insira o valor do lado: "))

print("Entradas:", a, ",", b, ",", c)

if((a >= b + c) or (b >= a + c) or (c >= a + b) or (a < 0)or (b < 0) or (c < 0)):
	print("Tipo de triangulo: invalido")
else:
	if((a == b) and (c == b)):
		print("Tipo de triangulo: equilatero")
	if((a == b) or (a == c)or (b == c)):
		print("Tipo de triangulo: isoceles")
	else:
		print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.160249
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 12:50:36) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Insira o valor do lado: "))
b = float(input("Insira o valor do lado: "))
c = float(input("Insira o valor do lado: "))

print("Entradas:", a, ",", b, ",", c)

if((a >= b + c) or (b >= a + c) or (c >= a + b) or (a < 0)or (b < 0) or (c < 0)):
	print("Tipo de triangulo: invalido")
else:
	if((a == b) and (c == b)):
		print("Tipo de triangulo: equilatero")
	if((a == b) or (a == c)or (b == c)):
		print("Tipo de triangulo: isoceles")
	else:
		print("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:02:52) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Insira o valor do lado: "))
b = float(input("Insira o valor do lado: "))
c = float(input("Insira o valor do lado: "))

print("Entradas:", a, ",", b, ",", c)

if((a >= b + c) or (b >= a + c) or (c >= a + b) or (a < 0)or (b < 0) or (c < 0)):
	print("Tipo de triangulo: invalido")Tipo de triangTipo de triangulo: ulo: 
else:Tipo de triangulo: Tipo de triangulo: 
	if((a == b) and (c == b)):
		print("Tipo de triangulo: equilatero")
	if((a == b) or (a == c)or (b == c)):
		print("Tipo de triangulo: isoceles")
	else:
		print("Tipo de triangulo: escaleno")
-- ERROR:
File "XXXX", line 10
    print("Tipo de triangulo: invalido")Tipo de triangTipo de triangulo: ulo: 
                                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:03:15) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Insira o valor do lado: "))
b = float(input("Insira o valor do lado: "))
c = float(input("Insira o valor do lado: "))

print("Entradas:", a, ",", b, ",", c)

if((a >= b + c) or (b >= a + c) or (c >= a + b) or (a < 0)or (b < 0) or (c < 0)):
	print("Tipo de triangulo: invalido" 
else: 
	if((a == b) and (c == b)):
		print("Tipo de triangulo: equilatero")
	if((a == b) or (a == c)or (b == c)):
		print("Tipo de triangulo: isoceles")
	else:
		print("Tipo de triangulo: escaleno")
-- ERROR:
File "XXXX", line 11
    else: 
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:03:23) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Insira o valor do lado: "))
b = float(input("Insira o valor do lado: "))
c = float(input("Insira o valor do lado: "))

print("Entradas:", a, ",", b, ",", c)

if((a >= b + c) or (b >= a + c) or (c >= a + b) or (a < 0)or (b < 0) or (c < 0)):
	print("Tipo de triangulo: invalido" 
else:
	if((a == b) and (c == b)):
		print("Tipo de triangulo: equilatero")
	if((a == b) or (a == c)or (b == c)):
		print("Tipo de triangulo: isoceles")
	else:
		print("Tipo de triangulo: escaleno")
-- ERROR:
File "XXXX", line 11
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:03:31) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Insira o valor do lado: "))
b = float(input("Insira o valor do lado: "))
c = float(input("Insira o valor do lado: "))

print("Entradas:", a, ",", b, ",", c)

if((a >= b + c) or (b >= a + c) or (c >= a + b) or (a < 0)or (b < 0) or (c < 0)):
	print("Tipo de triangulo: invalido" 
else:
	if((a == b) and (c == b)):
		print("Tipo de triangulo: equilatero")
	if((a == b) or (a == c)or (b == c)):
		print("Tipo de triangulo: isoceles")
	else:
		print("Tipo de triangulo: escaleno")
-- ERROR:
File "XXXX", line 11
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:10:18) 
-- CODE:
a = float(input("Insira o lado: "))
b = float(input("Insira o lado: "))
c = float(input("Insira o lado: "))

print("Entradas:",a ", ",b ", ",c)
-- ERROR:
File "XXXX", line 5
    print("Entradas:",a ", ",b ", ",c)
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:10:36) 
-- CODE:
a = float(input("Insira o lado: "))
b = float(input("Insira o lado: "))
c = float(input("Insira o lado: "))

print("Entradas:",a ", ",b ", ",c)
-- ERROR:
File "XXXX", line 5
    print("Entradas:",a ", ",b ", ",c)
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:10:59) 
-- CODE:
a = float(input("Insira o lado: "))
b = float(input("Insira o lado: "))
c = float(input("Insira o lado: "))

print("Entradas:",a, ", ",b, ", ",c)
-- OUTPUT:
Entradas: 2.0 ,  4.0 ,  4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:11:38) 
-- CODE:
a = float(input("Insira o lado: "))
b = float(input("Insira o lado: "))
c = float(input("Insira o lado: "))

print("Entradas:",a, ",",b, ",",c)
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:18:03) 
-- CODE:
a = float(input("Insira o lado: "))
b = float(input("Insira o lado: "))
c = float(input("Insira o lado: "))

print("Entradas:",a, ",",b, ",",c)

if((a >= b + c) or (b>= a + c) or (c >= b + a)):
	print("invalido")
else:
	if((a == b) and (b == c)):
		print("equilatero")
	if((a == b) or (b == c) or (a == c)):
		print("isoceles")
	else:
		print("escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:18:07) 
-- CODE:
a = float(input("Insira o lado: "))
b = float(input("Insira o lado: "))
c = float(input("Insira o lado: "))

print("Entradas:",a, ",",b, ",",c)

if((a >= b + c) or (b>= a + c) or (c >= b + a)):
	print("invalido")
else:
	if((a == b) and (b == c)):
		print("equilatero")
	if((a == b) or (b == c) or (a == c)):
		print("isoceles")
	else:
		print("escaleno")
-- EXECUTION TIME:
0.153185
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:19:54) 
-- CODE:
a = float(input("Insira o lado: "))
b = float(input("Insira o lado: "))
c = float(input("Insira o lado: "))

print("Entradas:",a, ",",b, ",",c)

if((a >= b + c) or (b>= a + c) or (c >= b + a)):
	print("invalido")
else:
	if((a == b) and (b == c)):
		print("equilatero")
	else
	   if((a == b) or (b == c) or (a == c)):
			print("isoceles")
	   else:
		   print("escaleno")
-- EXECUTION TIME:
0.193852
-- ERROR:
  File "/home/codebench/codes/1674/1099/main.py", line 12
    else
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:20:41) 
-- CODE:
a = float(input("Insira o lado: "))
b = float(input("Insira o lado: "))
c = float(input("Insira o lado: "))

print("Entradas:",a, ",",b, ",",c)

if((a >= b + c) or (b>= a + c) or (c >= b + a)):
	print("invalido")
else:
	if((a == b) and (b == c)):
		print("equilatero")
	else:
	   if((a == b) or (b == c) or (a == c)):
			print("isoceles")
	   else:
		   print("escaleno")
-- EXECUTION TIME:
0.131464
-- ERROR:
  File "/home/codebench/codes/1674/1099/main.py", line 14
    print("isoceles")
                    ^
TabError: inconsistent use of tabs and spaces in indentation

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:20:43) 
-- CODE:
a = float(input("Insira o lado: "))
b = float(input("Insira o lado: "))
c = float(input("Insira o lado: "))

print("Entradas:",a, ",",b, ",",c)

if((a >= b + c) or (b>= a + c) or (c >= b + a)):
	print("invalido")
else:
	if((a == b) and (b == c)):
		print("equilatero")
	else:
	   if((a == b) or (b == c) or (a == c)):
			print("isoceles")
	   else:
		   print("escaleno")
-- ERROR:
File "XXXX", line 14
    print("isoceles")
                    ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:21:19) 
-- CODE:
a = float(input("Insira o lado: "))
b = float(input("Insira o lado: "))
c = float(input("Insira o lado: "))

print("Entradas:",a, ",",b, ",",c)

if((a >= b + c) or (b>= a + c) or (c >= b + a)):
	print("invalido")
else:
	if((a == b) and (b == c)):
		print("equilatero")
	else:
	   if((a == b) or (b == c) or (a == c)):
			print("isosceles")
	   else:
		   print("escaleno")
-- EXECUTION TIME:
0.163424
-- ERROR:
  File "/home/codebench/codes/1674/1099/main.py", line 14
    print("isosceles")
                     ^
TabError: inconsistent use of tabs and spaces in indentation

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:21:21) 
-- CODE:
a = float(input("Insira o lado: "))
b = float(input("Insira o lado: "))
c = float(input("Insira o lado: "))

print("Entradas:",a, ",",b, ",",c)

if((a >= b + c) or (b>= a + c) or (c >= b + a)):
	print("invalido")
else:
	if((a == b) and (b == c)):
		print("equilatero")
	else:
	   if((a == b) or (b == c) or (a == c)):
			print("isosceles")
	   else:
		   print("escaleno")
-- ERROR:
File "XXXX", line 14
    print("isosceles")
                     ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:22:10) 
-- CODE:
a = float(input("Insira o lado: "))
b = float(input("Insira o lado: "))
c = float(input("Insira o lado: "))

print("Entradas:",a, ",",b, ",",c)

if((a >= b + c) or (b>= a + c) or (c >= b + a)):
	print("invalido")
else:
	if((a == b) and (b == c)):
		print("equilatero")
	else:
	   if((a == b) or (b == c) or (a == c)):
			print("isosceles")
		else:
			print("escaleno")
-- ERROR:
File "XXXX", line 14
    print("isosceles")
                     ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:31:41) 
-- CODE:
a = float(input("Insira o lado: "))
b = float(input("Insira o lado: "))
c = float(input("Insira o lado: "))

print("Entradas:",a, ",",b, ",",c)

if((a >= b + c) or (b>= a + c) or (c >= b + a)):
	print("Tipo de triangulo: invalido")
if((a == b) and ( b == c)):
	print("Tipo de triangulo: equilatero")
elif((a == b) or (b == c) or (c == a)):
	print("tipo de triangulo: isosceles")
else:
	print("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:31:49) 
-- CODE:
a = float(input("Insira o lado: "))
b = float(input("Insira o lado: "))
c = float(input("Insira o lado: "))

print("Entradas:",a, ",",b, ",",c)

if((a >= b + c) or (b>= a + c) or (c >= b + a)):
	print("Tipo de triangulo: invalido")
if((a == b) and ( b == c)):
	print("Tipo de triangulo: equilatero")
elif((a == b) or (b == c) or (c == a)):
	print("tipo de triangulo: isosceles")
else:
	print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.132591
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
Tipo de triangulo: escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:32:20) 
-- CODE:
a = float(input("Insira o lado: "))
b = float(input("Insira o lado: "))
c = float(input("Insira o lado: "))

print("Entradas:",a, ",",b, ",",c)

if((a >= b + c) or (b>= a + c) or (c >= b + a)):
	print("Tipo de triangulo: invalido")
if((a == b) and ( b == c)):
	print("Tipo de triangulo: equilatero")
elif((a == b) or (b == c) or (c == a)):
	print("Tipo de triangulo: isosceles")
else:
	print("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:32:24) 
-- CODE:
a = float(input("Insira o lado: "))
b = float(input("Insira o lado: "))
c = float(input("Insira o lado: "))

print("Entradas:",a, ",",b, ",",c)

if((a >= b + c) or (b>= a + c) or (c >= b + a)):
	print("Tipo de triangulo: invalido")
if((a == b) and ( b == c)):
	print("Tipo de triangulo: equilatero")
elif((a == b) or (b == c) or (c == a)):
	print("Tipo de triangulo: isosceles")
else:
	print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.161025
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
Tipo de triangulo: escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:32:32) 
-- CODE:
a = float(input("Insira o lado: "))
b = float(input("Insira o lado: "))
c = float(input("Insira o lado: "))

print("Entradas:",a, ",",b, ",",c)

if((a >= b + c) or (b>= a + c) or (c >= b + a)):
	print("Tipo de triangulo: invalido")
if((a == b) and ( b == c)):
	print("Tipo de triangulo: equilatero")
elif((a == b) or (b == c) or (c == a)):
	print("Tipo de triangulo: isosceles")
else:
	print("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:34:27) 
-- CODE:
a = float(input("Insira o lado: "))
b = float(input("Insira o lado: "))
c = float(input("Insira o lado: "))

print("Entradas:",a, ",",b, ",",c)

if((a >= b + c) or (b>= a + c) or (c >= b + a)):
	print("Tipo de triangulo: invalido")
if((a == b) and ( b == c)):
	print("Tipo de triangulo: equilatero")
elif((a == b) or (b == c) or (c == a)):
	print("Tipo de triangulo: isosceles")
if((a != b) and (b != c)):
	print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.165734
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
Tipo de triangulo: escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:34:30) 
-- CODE:
a = float(input("Insira o lado: "))
b = float(input("Insira o lado: "))
c = float(input("Insira o lado: "))

print("Entradas:",a, ",",b, ",",c)

if((a >= b + c) or (b>= a + c) or (c >= b + a)):
	print("Tipo de triangulo: invalido")
if((a == b) and ( b == c)):
	print("Tipo de triangulo: equilatero")
elif((a == b) or (b == c) or (c == a)):
	print("Tipo de triangulo: isosceles")
if((a != b) and (b != c)):
	print("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:36:27) 
-- CODE:
a = float(input("Insira o lado: "))
b = float(input("Insira o lado: "))
c = float(input("Insira o lado: "))

print("Entradas:",a, ",",b, ",",c)

if((a >= b + c) or (b>= a + c) or (c >= b + a)):
	print("Tipo de triangulo: invalido")
elif((a == b) and ( b == c)):
	print("Tipo de triangulo: equilatero")
elif((a == b) or (b == c) or (c == a)):
	print("Tipo de triangulo: isosceles")
elif((a != b) and (b != c)):
	print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.139134
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
