== TEST (2019-04-27 11:03:40) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("brasao: ")

if (x==lobo):
	y=Stark
elif (x==leao):
	y=Lennister
	
	print("Entrada: ", x)
	print(y)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if (x==lobo):
NameError: name 'lobo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 11:04:17) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("brasao: ")

if (x=="lobo"):
	y="Stark"
elif (x=="leao"):
	y='Lennister"
	
	print("Entrada: ", x)
	print(y)

-- ERROR:
File "XXXX", line 8
    y='Lennister"
                ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 11:04:25) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("brasao: ")

if (x=="lobo"):
	y="Stark"
elif (x=="leao"):
	y="Lennister"
	
	print("Entrada: ", x)
	print(y)

-- ERROR:
File "XXXX", line 8
    y='Lennister"
                ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 11:04:40) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("brasao: ")

if (x=="lobo"):
	y="Stark"
elif (x=="leao"):
	y="Lennister"
	
print("Entrada: ", x)
print(y)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(y)
NameError: name 'y' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 11:05:57) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("brasao: ")

print("Entrada: ", x)
print("Brasao ", y)

if (x=="lobo"):
	y="Stark"
elif (x=="leao"):
	y="Lennister"
	


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print("Brasao ", y)
NameError: name 'y' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 11:06:54) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("brasao: ")

print("Entrada: ", x)

if (x=="lobo"):
	y="Stark"
elif (x=="leao"):
	y="Lennister"
	
print("Brasao ", y)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    print("Brasao ", y)
NameError: name 'y' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 11:08:08) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("brasao: ")

print("Entrada: ", x)

if (x=="lobo"):
	y="Stark"
elif (x=="leao"):
	y="Lennister"
	
print("Brasao ", y)
else:
	print("Brasao " "invalido")

-- ERROR:
File "XXXX", line 13
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 11:08:27) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("brasao: ")

print("Entrada: ", x)

if (x=="lobo"):
	y="Stark"
elif (x=="leao"):
	y="Lennister"
	
print("Brasao ", y)
  else:
	   print("Brasao " "invalido")

-- ERROR:
File "XXXX", line 13
    else:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 11:08:28) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("brasao: ")

print("Entrada: ", x)

if (x=="lobo"):
	y="Stark"
elif (x=="leao"):
	y="Lennister"
	
print("Brasao ", y)
  else:
	   print("Brasao " "invalido")

-- ERROR:
File "XXXX", line 13
    else:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 11:08:40) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("brasao: ")

print("Entrada: ", x)

if (x=="lobo"):
	y="Stark"
elif (x=="leao"):
	y="Lennister"
	
print("Brasao ", y)
    else:
	     print("Brasao " "invalido")

-- ERROR:
File "XXXX", line 13
    else:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 11:08:45) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("brasao: ")

print("Entrada: ", x)

if (x=="lobo"):
	y="Stark"
elif (x=="leao"):
	y="Lennister"
	
print("Brasao ", y)
    else:
	    print("Brasao " "invalido")

-- ERROR:
File "XXXX", line 13
    else:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 11:09:16) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("brasao: ")

print("Entrada: ", x)

if (x=="lobo"):
	y="Stark"
elif (x=="leao"):
	y="Lennister"
	
print("Brasao ", y)

   else:
		print("Brasao " "invalido")

-- ERROR:
File "XXXX", line 14
    else:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 11:09:24) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("brasao: ")

print("Entrada: ", x)

if (x=="lobo"):
	y="Stark"
elif (x=="leao"):
	y="Lennister"
	
print("Brasao ", y)

    else:
		 print("Brasao " "invalido")

-- ERROR:
File "XXXX", line 14
    else:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 11:09:28) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("brasao: ")

print("Entrada: ", x)

if (x=="lobo"):
	y="Stark"
elif (x=="leao"):
	y="Lennister"
	
print("Brasao ", y)

     else:
		  print("Brasao " "invalido")

-- ERROR:
File "XXXX", line 14
    else:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 11:09:37) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("brasao: ")

print("Entrada: ", x)

if (x=="lobo"):
	y="Stark"
elif (x=="leao"):
	y="Lennister"
	
print("Brasao ", y)

    else:
		 print("Brasao " "invalido")

-- ERROR:
File "XXXX", line 14
    else:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 11:14:58) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("brasao: ".lower())

print("Entrada: ", x)

if (x=="lobo"):
	y="Stark"
elif (x=="leao"):
	y="Lennister"
elif (x=="veado"):
	y="Baratheon"
elif ("dragao")
	


-- ERROR:
File "XXXX", line 13
    elif ("dragao")
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 11:19:36) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("brasao: ".lower())

print("Entrada: ", x)

if (x=="lobo"):
	y="Stark"
elif (x=="leao"):
	y="Lennister"
elif (x=="veado"):
	y="Baratheon"
elif ("dragao"):
	y="Targaryen"
elif ("rosa"):
	y="Tyrell"
elif ("sol"):
	y="Martell"
elif ("lula"):
	y="Greyjoy"
elif ("esfolado"):
	y="Bolton"
elif ("turta"):
   y="Tully"
	
else:
	print("Brasao invalido")

-- OUTPUT:
brasao: Entrada:  lula
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 11:22:56) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("brasao: ".lower())

print("Entrada: ", x)

if (x=="lobo"):
	y="Stark"
elif (x=="leao"):
	y="Lennister"
elif (x=="veado"):
	y="Baratheon"
elif ("dragao"):
	y="Targaryen"
elif ("rosa"):
	y="Tyrell"
elif ("sol"):
	y="Martell"
elif ("lula"):
	y="Greyjoy"
elif ("esfolado"):
	y="Bolton"
elif ("turta"):
   y="Tully"
	
else:
	print("Brasao invalido")

-- OUTPUT:
brasao: Entrada:  lula
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:08:13) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("brasao: ".lower())

if (x=="lobo"):
	y="Stark"
elif (x=="leao"):
	y="Lennister"
elif (x=="veado"):
	y="Baratheon"
elif ("dragao"):
	y="Targaryen"
elif ("rosa"):
	y="Tyrell"
elif ("sol"):
	y="Martell"
elif ("lula"):
	y="Greyjoy"
elif ("esfolado"):
	y="Bolton"
elif ("turta"):
   y="Tully"
print()   	
else:
	print("Entrada: ", x)
	print("Brasao invalido")

-- ERROR:
File "XXXX", line 24
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:08:14) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("brasao: ".lower())

if (x=="lobo"):
	y="Stark"
elif (x=="leao"):
	y="Lennister"
elif (x=="veado"):
	y="Baratheon"
elif ("dragao"):
	y="Targaryen"
elif ("rosa"):
	y="Tyrell"
elif ("sol"):
	y="Martell"
elif ("lula"):
	y="Greyjoy"
elif ("esfolado"):
	y="Bolton"
elif ("turta"):
   y="Tully"
print()   	
else:
	print("Entrada: ", x)
	print("Brasao invalido")

-- ERROR:
File "XXXX", line 24
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:08:38) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("brasao: ".lower())

if (x=="lobo"):
	y="Stark"
elif (x=="leao"):
	y="Lennister"
elif (x=="veado"):
	y="Baratheon"
elif ("dragao"):
	y="Targaryen"
elif ("rosa"):
	y="Tyrell"
elif ("sol"):
	y="Martell"
elif ("lula"):
	y="Greyjoy"
elif ("esfolado"):
	y="Bolton"
elif ("turta"):
   y="Tully"
print()   	
  else:
		print("Entrada: ", x)
	   print("Brasao invalido")

-- ERROR:
File "XXXX", line 24
    else:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:09:55) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("brasao: ".lower())

if (x=="lobo"):
	y="Stark"
elif (x=="leao"):
	y="Lennister"
elif (x=="veado"):
	y="Baratheon"
elif ("dragao"):
	y="Targaryen"
elif ("rosa"):
	y="Tyrell"
elif ("sol"):
	y="Martell"
elif ("lula"):
	y="Greyjoy"
elif ("esfolado"):
	y="Bolton"
elif ("turta"):
   y="Tully"
print()   	
   else:
		print("Entrada: ", x)
	   print("Brasao invalido")

-- ERROR:
File "XXXX", line 24
    else:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:11:30) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("brasao: ".lower())

if (x=="lobo"):
	y="Stark"
elif (x=="leao"):
	y="Lennister"
elif (x=="veado"):
	y="Baratheon"
elif ("dragao"):
	y="Targaryen"
elif ("rosa"):
	y="Tyrell"
elif ("sol"):
	y="Martell"
elif ("lula"):
	y="Greyjoy"
elif ("esfolado"):
	y="Bolton"
elif ("turta"):
   y="Tully"
print("Entrada: ", x)
print("Casa: ", y)
   else:
		print("Entrada: ", x)
	   print("Brasao invalido")

-- ERROR:
File "XXXX", line 25
    else:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:11:32) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("brasao: ".lower())

if (x=="lobo"):
	y="Stark"
elif (x=="leao"):
	y="Lennister"
elif (x=="veado"):
	y="Baratheon"
elif ("dragao"):
	y="Targaryen"
elif ("rosa"):
	y="Tyrell"
elif ("sol"):
	y="Martell"
elif ("lula"):
	y="Greyjoy"
elif ("esfolado"):
	y="Bolton"
elif ("turta"):
   y="Tully"
print("Entrada: ", x)
print("Casa: ", y)
   else:
		print("Entrada: ", x)
	   print("Brasao invalido")

-- ERROR:
File "XXXX", line 25
    else:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:11:32) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("brasao: ".lower())

if (x=="lobo"):
	y="Stark"
elif (x=="leao"):
	y="Lennister"
elif (x=="veado"):
	y="Baratheon"
elif ("dragao"):
	y="Targaryen"
elif ("rosa"):
	y="Tyrell"
elif ("sol"):
	y="Martell"
elif ("lula"):
	y="Greyjoy"
elif ("esfolado"):
	y="Bolton"
elif ("turta"):
   y="Tully"
print("Entrada: ", x)
print("Casa: ", y)
   else:
		print("Entrada: ", x)
	   print("Brasao invalido")

-- ERROR:
File "XXXX", line 25
    else:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:11:32) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("brasao: ".lower())

if (x=="lobo"):
	y="Stark"
elif (x=="leao"):
	y="Lennister"
elif (x=="veado"):
	y="Baratheon"
elif ("dragao"):
	y="Targaryen"
elif ("rosa"):
	y="Tyrell"
elif ("sol"):
	y="Martell"
elif ("lula"):
	y="Greyjoy"
elif ("esfolado"):
	y="Bolton"
elif ("turta"):
   y="Tully"
print("Entrada: ", x)
print("Casa: ", y)
   else:
		print("Entrada: ", x)
	   print("Brasao invalido")

-- ERROR:
File "XXXX", line 25
    else:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:11:42) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("brasao: ".lower())

if (x=="lobo"):
	y="Stark"
elif (x=="leao"):
	y="Lennister"
elif (x=="veado"):
	y="Baratheon"
elif ("dragao"):
	y="Targaryen"
elif ("rosa"):
	y="Tyrell"
elif ("sol"):
	y="Martell"
elif ("lula"):
	y="Greyjoy"
elif ("esfolado"):
	y="Bolton"
elif ("turta"):
   y="Tully"
print("Entrada: ", x)
print("Casa: ", y)
else:
		print("Entrada: ", x)
	   print("Brasao invalido")

-- ERROR:
File "XXXX", line 25
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:11:52) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("brasao: ".lower())

if (x=="lobo"):
	y="Stark"
elif (x=="leao"):
	y="Lennister"
elif (x=="veado"):
	y="Baratheon"
elif ("dragao"):
	y="Targaryen"
elif ("rosa"):
	y="Tyrell"
elif ("sol"):
	y="Martell"
elif ("lula"):
	y="Greyjoy"
elif ("esfolado"):
	y="Bolton"
elif ("turta"):
   y="Tully"
print("Entrada: ", x)
print("Casa: ", y)
else:
   print("Entrada: ", x)
	print("Brasao invalido")

-- ERROR:
File "XXXX", line 25
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:11:53) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("brasao: ".lower())

if (x=="lobo"):
	y="Stark"
elif (x=="leao"):
	y="Lennister"
elif (x=="veado"):
	y="Baratheon"
elif ("dragao"):
	y="Targaryen"
elif ("rosa"):
	y="Tyrell"
elif ("sol"):
	y="Martell"
elif ("lula"):
	y="Greyjoy"
elif ("esfolado"):
	y="Bolton"
elif ("turta"):
   y="Tully"
print("Entrada: ", x)
print("Casa: ", y)
else:
   print("Entrada: ", x)
	print("Brasao invalido")

-- ERROR:
File "XXXX", line 25
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:11:54) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("brasao: ".lower())

if (x=="lobo"):
	y="Stark"
elif (x=="leao"):
	y="Lennister"
elif (x=="veado"):
	y="Baratheon"
elif ("dragao"):
	y="Targaryen"
elif ("rosa"):
	y="Tyrell"
elif ("sol"):
	y="Martell"
elif ("lula"):
	y="Greyjoy"
elif ("esfolado"):
	y="Bolton"
elif ("turta"):
   y="Tully"
print("Entrada: ", x)
print("Casa: ", y)
else:
   print("Entrada: ", x)
	print("Brasao invalido")

-- ERROR:
File "XXXX", line 25
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:11:54) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("brasao: ".lower())

if (x=="lobo"):
	y="Stark"
elif (x=="leao"):
	y="Lennister"
elif (x=="veado"):
	y="Baratheon"
elif ("dragao"):
	y="Targaryen"
elif ("rosa"):
	y="Tyrell"
elif ("sol"):
	y="Martell"
elif ("lula"):
	y="Greyjoy"
elif ("esfolado"):
	y="Bolton"
elif ("turta"):
   y="Tully"
print("Entrada: ", x)
print("Casa: ", y)
else:
   print("Entrada: ", x)
	print("Brasao invalido")

-- ERROR:
File "XXXX", line 25
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:11:55) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("brasao: ".lower())

if (x=="lobo"):
	y="Stark"
elif (x=="leao"):
	y="Lennister"
elif (x=="veado"):
	y="Baratheon"
elif ("dragao"):
	y="Targaryen"
elif ("rosa"):
	y="Tyrell"
elif ("sol"):
	y="Martell"
elif ("lula"):
	y="Greyjoy"
elif ("esfolado"):
	y="Bolton"
elif ("turta"):
   y="Tully"
print("Entrada: ", x)
print("Casa: ", y)
else:
   print("Entrada: ", x)
	print("Brasao invalido")

-- ERROR:
File "XXXX", line 25
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:16:36) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("brasao: ".lower())

print("Entrada: ", x)

if (x=="lobo"):
	y="Stark"
	print("Casa: ", y)
elif (x=="leao"):
	y="Lennister"
	print("Casa: ", y)
elif (x=="veado"):
	y="Baratheon
	print("Casa: ", y)
elif ("dragao"):
	y="Targaryen"
	print("Casa: ", y)
elif ("rosa"):
	y="Tyrell"
	print("Casa: ", y)
elif ("sol"):
	y="Martell"
	print("Casa: ", y)
elif ("lula"):
	y="Greyjoy"
	print("Casa: ", y)
elif ("esfolado"):
	y="Bolton"
	print("Casa: ", y)	
elif ("turta"):
   y="Tully"
print("Casa: ", y)
else:
   print("Entrada: ", x)
	print("Brasao invalido")

-- ERROR:
File "XXXX", line 14
    y="Baratheon
               ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:16:50) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("brasao: ".lower())

print("Entrada: ", x)

if (x=="lobo"):
	y="Stark"
	print("Casa: ", y)
elif (x=="leao"):
	y="Lennister"
	print("Casa: ", y)
elif (x=="veado"):
	y="Baratheon
	print("Casa: ", y)
elif ("dragao"):
	y="Targaryen"
	print("Casa: ", y)
elif ("rosa"):
	y="Tyrell"
	print("Casa: ", y)
elif ("sol"):
	y="Martell"
	print("Casa: ", y)
elif ("lula"):
	y="Greyjoy"
	print("Casa: ", y)
elif ("esfolado"):
	y="Bolton"
	print("Casa: ", y)	
elif ("turta"):
   y="Tully"
print("Casa: ", y)
else:
   print("Entrada: ", x)
	print("Brasao invalido")

-- ERROR:
File "XXXX", line 14
    y="Baratheon
               ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:17:51) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("brasao: ".lower())

print("Entrada: ", x)

if (x=="lobo"):
	y="Stark"
	print("Casa: ", y)
elif (x=="leao"):
	y="Lennister"
	print("Casa: ", y)
elif (x=="veado"):
	y="Baratheon
	print("Casa: ", y)
elif (x=="dragao"):
	y="Targaryen"
	print("Casa: ", y)
elif (x=="rosa"):
	y="Tyrell"
	print("Casa: ", y)
elif (x=="sol"):
	y="Martell"
	print("Casa: ", y)
elif (x=="lula"):
	y="Greyjoy"
	print("Casa: ", y)
elif (x=="esfolado"):
	y="Bolton"
	print("Casa: ", y)	
elif (x=="turta"):
   y="Tully"
print("Casa: ", y)
else:
   print("Entrada: ", x)
	print("Brasao invalido")

-- ERROR:
File "XXXX", line 14
    y="Baratheon
               ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:17:52) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("brasao: ".lower())

print("Entrada: ", x)

if (x=="lobo"):
	y="Stark"
	print("Casa: ", y)
elif (x=="leao"):
	y="Lennister"
	print("Casa: ", y)
elif (x=="veado"):
	y="Baratheon
	print("Casa: ", y)
elif (x=="dragao"):
	y="Targaryen"
	print("Casa: ", y)
elif (x=="rosa"):
	y="Tyrell"
	print("Casa: ", y)
elif (x=="sol"):
	y="Martell"
	print("Casa: ", y)
elif (x=="lula"):
	y="Greyjoy"
	print("Casa: ", y)
elif (x=="esfolado"):
	y="Bolton"
	print("Casa: ", y)	
elif (x=="turta"):
   y="Tully"
print("Casa: ", y)
else:
   print("Entrada: ", x)
	print("Brasao invalido")

-- ERROR:
File "XXXX", line 14
    y="Baratheon
               ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:17:52) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("brasao: ".lower())

print("Entrada: ", x)

if (x=="lobo"):
	y="Stark"
	print("Casa: ", y)
elif (x=="leao"):
	y="Lennister"
	print("Casa: ", y)
elif (x=="veado"):
	y="Baratheon
	print("Casa: ", y)
elif (x=="dragao"):
	y="Targaryen"
	print("Casa: ", y)
elif (x=="rosa"):
	y="Tyrell"
	print("Casa: ", y)
elif (x=="sol"):
	y="Martell"
	print("Casa: ", y)
elif (x=="lula"):
	y="Greyjoy"
	print("Casa: ", y)
elif (x=="esfolado"):
	y="Bolton"
	print("Casa: ", y)	
elif (x=="turta"):
   y="Tully"
print("Casa: ", y)
else:
   print("Entrada: ", x)
	print("Brasao invalido")

-- ERROR:
File "XXXX", line 14
    y="Baratheon
               ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:17:53) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("brasao: ".lower())

print("Entrada: ", x)

if (x=="lobo"):
	y="Stark"
	print("Casa: ", y)
elif (x=="leao"):
	y="Lennister"
	print("Casa: ", y)
elif (x=="veado"):
	y="Baratheon
	print("Casa: ", y)
elif (x=="dragao"):
	y="Targaryen"
	print("Casa: ", y)
elif (x=="rosa"):
	y="Tyrell"
	print("Casa: ", y)
elif (x=="sol"):
	y="Martell"
	print("Casa: ", y)
elif (x=="lula"):
	y="Greyjoy"
	print("Casa: ", y)
elif (x=="esfolado"):
	y="Bolton"
	print("Casa: ", y)	
elif (x=="turta"):
   y="Tully"
print("Casa: ", y)
else:
   print("Entrada: ", x)
	print("Brasao invalido")

-- ERROR:
File "XXXX", line 14
    y="Baratheon
               ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:17:53) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("brasao: ".lower())

print("Entrada: ", x)

if (x=="lobo"):
	y="Stark"
	print("Casa: ", y)
elif (x=="leao"):
	y="Lennister"
	print("Casa: ", y)
elif (x=="veado"):
	y="Baratheon
	print("Casa: ", y)
elif (x=="dragao"):
	y="Targaryen"
	print("Casa: ", y)
elif (x=="rosa"):
	y="Tyrell"
	print("Casa: ", y)
elif (x=="sol"):
	y="Martell"
	print("Casa: ", y)
elif (x=="lula"):
	y="Greyjoy"
	print("Casa: ", y)
elif (x=="esfolado"):
	y="Bolton"
	print("Casa: ", y)	
elif (x=="turta"):
   y="Tully"
print("Casa: ", y)
else:
   print("Entrada: ", x)
	print("Brasao invalido")

-- ERROR:
File "XXXX", line 14
    y="Baratheon
               ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:18:55) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("brasao: ".lower())

print("Entrada: ", x)

if (x=="lobo"):
	y="Stark"
	print("Casa: ", y)
elif (x=="leao"):
	y="Lennister"
	print("Casa: ", y)
elif (x=="veado"):
	y="Baratheon
	print("Casa: ", y)
elif (x=="dragao"):
	y="Targaryen"
	print("Casa: ", y)
elif (x=="rosa"):
	y="Tyrell"
	print("Casa: ", y)
elif (x=="sol"):
	y="Martell"
	print("Casa: ", y)
elif (x=="lula"):
	y="Greyjoy"
	print("Casa: ", y)
elif (x=="esfolado"):
	y="Bolton"
	print("Casa: ", y)	
elif (x=="turta"):
   y="Tully"
print("Casa: ", y)
else:
   print("Entrada: ", x)
	print("Brasao invalido")

-- ERROR:
File "XXXX", line 14
    y="Baratheon
               ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:32:35) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("brasao: ")

print("Entrada: ", x)

if (x=="lobo"):
	print("Casa: Stark")
elif (x=="leao"):
	print("Casa: Lennister")
elif (x=="veado"):
   print("Casa: Baratheon")
elif (x=="dragao"):
	print("Casa: Targaryen")
elif (x=="rosa"):
	print("Casa: Tyrell")
elif (x=="sol"):
	print("Casa: Martell")
elif (x=="lula"):
	print("Casa: Greyjoy")
elif (x=="esfolado"):
	print("Casa: Bolton")
elif (x=="turta"):
	print("Casa: Tully")
else:
	print("Brasao invalido")
	
	
-- OUTPUT:
Entrada:  lula
Casa: Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:32:43) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = input("brasao: ")

print("Entrada: ", x)

if (x=="lobo"):
	print("Casa: Stark")
elif (x=="leao"):
	print("Casa: Lennister")
elif (x=="veado"):
   print("Casa: Baratheon")
elif (x=="dragao"):
	print("Casa: Targaryen")
elif (x=="rosa"):
	print("Casa: Tyrell")
elif (x=="sol"):
	print("Casa: Martell")
elif (x=="lula"):
	print("Casa: Greyjoy")
elif (x=="esfolado"):
	print("Casa: Bolton")
elif (x=="turta"):
	print("Casa: Tully")
else:
	print("Brasao invalido")
	
	
-- EXECUTION TIME:
0.14822
-- TEST CASE 1:
---- input:
lula
---- correct output:
Entrada: lula
Casa: Greyjoy
---- user output:
Entrada:  lula
Casa: Greyjoy
-- TEST CASE 2:
---- input:
tambaqui
---- correct output:
Entrada: tambaqui
Brasao invalido
---- user output:
Entrada:  tambaqui
Brasao invalido
-- TEST CASE 3:
---- input:
dragao
---- correct output:
Entrada: dragao
Casa: Targaryen
---- user output:
Entrada:  dragao
Casa: Targaryen
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
