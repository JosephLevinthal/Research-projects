== TEST (2019-04-27 10:39:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = int(input("Num x:"))
a = int(input("Num a:"))
b = int(input("Num b:"))
if (b >a):
	if (a<= x <=b):
		print( x, "pertence ao intervalo" a, b)
-- ERROR:
File "XXXX", line 9
    print( x, "pertence ao intervalo" a, b)
                                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 10:39:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = int(input("Num x:"))
a = int(input("Num a:"))
b = int(input("Num b:"))
if (b >a):
	if (a<= x <=b):
		print( x, "pertence ao intervalo" a, b)
-- ERROR:
File "XXXX", line 9
    print( x, "pertence ao intervalo" a, b)
                                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 10:39:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = int(input("Num x:"))
a = int(input("Num a:"))
b = int(input("Num b:"))
if (b >a):
	if (a<= x <=b):
		print( x, "pertence ao intervalo", a, b)
-- ERROR:
File "XXXX", line 9
    print( x, "pertence ao intervalo" a, b)
                                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 10:49:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Num x:"))
a = float(input("Num a:"))
b = float(input("Num b:"))
if (b >a):
	if (a<= x <=b):
		print( x, "pertence ao intervalo", a, b)
	elif ((x<a) or (x>b)):
		print(x, "nao pertence ao intervalo", a, b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 10:52:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Num x:"))
a = float(input("Num a:"))
b = float(input("Num b:"))
if (b >a):
	if (a<= x <=b):
		print( x, "pertence ao intervalo", a, b)
	elif ((x<a) or (x>b)):
		print(x, "nao pertence ao intervalo", a, b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 10:54:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Num x:"))
a = float(input("Num a:"))
b = float(input("Num b:"))
if (b >a):
	if (a<= x <=b):
		print( x, "pertence ao intervalo", a, b)
	elif ((x<a) or (x>b)):
		print(x, "nao pertence ao intervalo", a,",", b)
else:
	print("Entradas", a,"e",b,"invalidas")
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 10:54:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Num x:"))
a = float(input("Num a:"))
b = float(input("Num b:"))
if (b >a):
	if (a<= x <=b):
		print( x, "pertence ao intervalo", a, b)
	elif ((x<a) or (x>b)):
		print(x, "nao pertence ao intervalo", a,",", b)
else:
	print("Entradas", a,"e",b,"invalidas")
-- EXECUTION TIME:
0.158226
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 10:55:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Num x:"))
a = float(input("Num a:"))
b = float(input("Num b:"))
if (b >a):
	if (a<= x <=b):
		print( x, "pertence ao intervalo", a, b)
	elif ((x<a) or (x>b)):
		print(x, "nao pertence ao intervalo", a,",", b)
else:
	print("Entradas", a,"e",b,"invalidas")
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 10:56:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Num x:"))
a = float(input("Num a:"))
b = float(input("Num b:"))
if (b >a):
	if (a<= x <=b):
		print( x, "pertence ao intervalo", a,",", b)
	elif ((x<a) or (x>b)):
		print(x, "nao pertence ao intervalo", a,",", b)
else:
	print("Entradas", a,"e",b,"invalidas")
-- EXECUTION TIME:
0.132541
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
