== TEST (2019-04-25 11:44:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kw): "))
ti = input("tipo de instalacao").upper()

print("Entradas:",kw,"kw e tipo ",ti)

if((ti=="R")or(ti=="I")or(ti=="C")):
elif(ti=="R"):
elif(kw<=500):
	v = kw*0.44
	print("Valor total: r$",v)
elif(kw>500):
	v = kw*0.65
	print("Valor total: r$",v)
elif(ti=="C"):
elif(kw<=1000):
	v = kw*0.55
	print("Valor total: r$",v)
elif(kw>1000):
	v = kw*0.60
	print("Valor total: r$",v)
elif(ti=="I"):
elif(kw<=5000):
	v = kw*0.55
	print("Valor total: r$",v)
elif(kw>5000):
	v = kw*0.60
	print("Valor total: r$",v)
else:	
	print("Dados invalidos")
#print("Entradas:",kw,"kw e tipo ",ti)	
#print("Valor total: r$",v)
-- ERROR:
File "XXXX", line 10
    elif(ti=="R"):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:47:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kw): "))
ti = input("tipo de instalacao").upper()

print("Entradas:",kw,"kWh e tipo ",ti)

if((ti=="R")or(ti=="I")or(ti=="C")):
elif(ti=="R"):
elif(kw<=500):
	v = kw*0.44
	print("Valor total: r$",v)
elif(kw>500):
	v = kw*0.65
	print("Valor total: r$",v)
elif(ti=="C"):
elif(kw<=1000):
	v = kw*0.55
	print("Valor total: r$",v)
elif(kw>1000):
	v = kw*0.60
	print("Valor total: r$",v)
elif(ti=="I"):
elif(kw<=5000):
	v = kw*0.55
	print("Valor total: r$",v)
elif(kw>5000):
	v = kw*0.60
	print("Valor total: r$",v)
else:	
	print("Dados invalidos")
#print("Entradas:",kw,"kw e tipo ",ti)	
#print("Valor total: r$",v)
-- ERROR:
File "XXXX", line 10
    elif(ti=="R"):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:47:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kw): "))
ti = input("tipo de instalacao").upper()

print("Entradas:",kw,"kWh e tipo ",ti)

if((ti=="R")or(ti=="I")or(ti=="C")):
	elif(ti=="R"):
elif(kw<=500):
	v = kw*0.44
	print("Valor total: r$",v)
elif(kw>500):
	v = kw*0.65
	print("Valor total: r$",v)
elif(ti=="C"):
elif(kw<=1000):
	v = kw*0.55
	print("Valor total: r$",v)
elif(kw>1000):
	v = kw*0.60
	print("Valor total: r$",v)
elif(ti=="I"):
elif(kw<=5000):
	v = kw*0.55
	print("Valor total: r$",v)
elif(kw>5000):
	v = kw*0.60
	print("Valor total: r$",v)
else:	
	print("Dados invalidos")
#print("Entradas:",kw,"kw e tipo ",ti)	
#print("Valor total: r$",v)
-- ERROR:
File "XXXX", line 10
    elif(ti=="R"):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:49:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kw): "))
ti = input("tipo de instalacao").upper()

print("Entradas:",kw,"kWh e tipo ",ti)

if((ti=="R")or(ti=="I")or(ti=="C")):
	elif(ti=="R"):
elif((ti=="R")and(kw<=500)):
	v = kw*0.44
	print("Valor total: r$",v)
	else:
	v = kw*0.65
	print("Valor total: r$",v)
elif(ti=="C"):
elif(kw<=1000):
	v = kw*0.55
	print("Valor total: r$",v)
elif(kw>1000):
	v = kw*0.60
	print("Valor total: r$",v)
elif(ti=="I"):
elif(kw<=5000):
	v = kw*0.55
	print("Valor total: r$",v)
elif(kw>5000):
	v = kw*0.60
	print("Valor total: r$",v)
else:	
	print("Dados invalidos")
#print("Entradas:",kw,"kw e tipo ",ti)	
#print("Valor total: r$",v)
-- ERROR:
File "XXXX", line 10
    elif(ti=="R"):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:49:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kw): "))
ti = input("tipo de instalacao").upper()

print("Entradas:",kw,"kWh e tipo ",ti)

if((ti=="R")or(ti=="I")or(ti=="C")):
elif((ti=="R")and(kw<=500)):
	v = kw*0.44
	print("Valor total: r$",v)
	else:
	v = kw*0.65
	print("Valor total: r$",v)
elif(ti=="C"):
elif(kw<=1000):
	v = kw*0.55
	print("Valor total: r$",v)
elif(kw>1000):
	v = kw*0.60
	print("Valor total: r$",v)
elif(ti=="I"):
elif(kw<=5000):
	v = kw*0.55
	print("Valor total: r$",v)
elif(kw>5000):
	v = kw*0.60
	print("Valor total: r$",v)
else:	
	print("Dados invalidos")
#print("Entradas:",kw,"kw e tipo ",ti)	
#print("Valor total: r$",v)
-- ERROR:
File "XXXX", line 10
    elif((ti=="R")and(kw<=500)):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:54:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kw): "))
ti = input("tipo de instalacao").upper()

print("Entradas:",kw,"kWh e tipo ",ti)

if((ti=="R")or(ti=="I")or(ti=="C")):
elif((ti=="R")and(kw<=500)):
	v = kw*0.44
elif((ti=="R")and(kw>500))	
	v = kw*0.65
	z ="Valor total: r$",v
elif(ti=="C"):
elif(kw<=1000):
	v = kw*0.55
	z ="Valor total: r$",v
elif(kw>1000):
	v = kw*0.60
	z ="Valor total: r$",v
elif(ti=="I"):
elif(kw<=5000):
	v = kw*0.55
	z ="Valor total: r$",v
elif(kw>5000):
	v = kw*0.60
	z ="Valor total: r$",v
else:	
	v= Dados invalidos
	
print(z)
#print("Entradas:",kw,"kw e tipo ",ti)	
#print("Valor total: r$",v)
-- ERROR:
File "XXXX", line 10
    elif((ti=="R")and(kw<=500)):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:54:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kw): "))
ti = input("tipo de instalacao").upper()

print("Entradas:",kw,"kWh e tipo ",ti)

if((ti=="R")or(ti=="I")or(ti=="C")):
elif((ti=="R")and(kw<=500)):
	v = kw*0.44
elif((ti=="R")and(kw>500))	
	v = kw*0.65
	z ="Valor total: r$",v
elif(ti=="C"):
elif(kw<=1000):
	v = kw*0.55
	z ="Valor total: r$",v
elif(kw>1000):
	v = kw*0.60
	z ="Valor total: r$",v
elif(ti=="I"):
elif(kw<=5000):
	v = kw*0.55
	z ="Valor total: r$",v
elif(kw>5000):
	v = kw*0.60
	z ="Valor total: r$",v
else:	
	v= Dados invalidos
	
print(z)
#print("Entradas:",kw,"kw e tipo ",ti)	
#print("Valor total: r$",v)
-- ERROR:
File "XXXX", line 10
    elif((ti=="R")and(kw<=500)):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:55:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kw): "))
ti = input("tipo de instalacao").upper()

print("Entradas:",kw,"kWh e tipo ",ti)

if((ti=="R")or(ti=="I")or(ti=="C")):
elif((ti=="R")and(kw<=500)):
	v = kw*0.44
elif((ti=="R")and(kw>500))	
	v = kw*0.65
	z ="Valor total: r$",v
elif(ti=="C"):
elif(kw<=1000):
	v = kw*0.55
	z ="Valor total: r$",v
elif(kw>1000):
	v = kw*0.60
	z ="Valor total: r$",v
elif(ti=="I"):
elif(kw<=5000):
	v = kw*0.55
	z ="Valor total: r$",v
elif(kw>5000):
	v = kw*0.60
	z ="Valor total: r$",v
else:	
	z= "Dados invalidos"
	
print(z)
#print("Entradas:",kw,"kw e tipo ",ti)	
#print("Valor total: r$",v)
-- ERROR:
File "XXXX", line 10
    elif((ti=="R")and(kw<=500)):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 12:53:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kw): "))
ti = input("tipo de instalacao").upper()

print("Entradas:",kw,"kWh e tipo ",ti)

if((ti=="R")or(ti=="I")or(ti=="C")):
elif((ti=="R")and(kw<=500)):
	v = kw*0.44
elif((ti=="R")and(kw>500))	
	v = kw*0.65
	z ="Valor total: r$",v
elif(ti=="C"):
elif(kw<=1000):
	v = kw*0.55
	z ="Valor total: r$",v
elif(kw>1000):
	v = kw*0.60
	z ="Valor total: r$",v
elif(ti=="I"):
elif(kw<=5000):
	v = kw*0.55
	z ="Valor total: r$",v
elif(kw>5000):
	v = kw*0.60
	z ="Valor total: r$",v
else:	
	z= "Dados invalidos"
	
print(z)
#print("Entradas:",kw,"kw e tipo ",ti)	
#print("Valor total: r$",v)
-- ERROR:
File "XXXX", line 10
    elif((ti=="R")and(kw<=500)):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 12:54:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kw): "))
ti = input("tipo de instalacao").upper()

print("Entradas:",kw,"kWh e tipo ",ti)

if((ti=="R")or(ti=="I")or(ti=="C")):
	if((ti=="R")and(kw<=500)):
		v = kw*0.44
elif((ti=="R")and(kw>500))	:
	v = kw*0.65
	z ="Valor total: r$",v
elif(ti=="C"):
elif(kw<=1000):
	v = kw*0.55
	z ="Valor total: r$",v
elif(kw>1000):
	v = kw*0.60
	z ="Valor total: r$",v
elif(ti=="I"):
elif(kw<=5000):
	v = kw*0.55
	z ="Valor total: r$",v
elif(kw>5000):
	v = kw*0.60
	z ="Valor total: r$",v
else:	
	z= "Dados invalidos"
	
print(z)
#print("Entradas:",kw,"kw e tipo ",ti)	
#print("Valor total: r$",v)
-- ERROR:
File "XXXX", line 16
    elif(kw<=1000):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 12:54:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kw): "))
ti = input("tipo de instalacao").upper()

print("Entradas:",kw,"kWh e tipo ",ti)

if((ti=="R")or(ti=="I")or(ti=="C")):
	if((ti=="R")and(kw<=500)):
		v = kw*0.44
elif((ti=="R")and(kw>500))	:
	v = kw*0.65
	z ="Valor total: r$",v
elif(ti=="C"):
	if(kw<=1000):
		v = kw*0.55
		z ="Valor total: r$",v
elif(kw>1000):
	v = kw*0.60
	z ="Valor total: r$",v
elif(ti=="I"):
elif(kw<=5000):
	v = kw*0.55
	z ="Valor total: r$",v
elif(kw>5000):
	v = kw*0.60
	z ="Valor total: r$",v
else:	
	z= "Dados invalidos"
	
print(z)
#print("Entradas:",kw,"kw e tipo ",ti)	
#print("Valor total: r$",v)
-- ERROR:
File "XXXX", line 23
    elif(kw<=5000):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 12:54:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kw): "))
ti = input("tipo de instalacao").upper()

print("Entradas:",kw,"kWh e tipo ",ti)

if((ti=="R")or(ti=="I")or(ti=="C")):
	if((ti=="R")and(kw<=500)):
		v = kw*0.44
elif((ti=="R")and(kw>500))	:
	v = kw*0.65
	z ="Valor total: r$",v
elif(ti=="C"):
	if(kw<=1000):
		v = kw*0.55
		z ="Valor total: r$",v
elif(kw>1000):
	v = kw*0.60
	z ="Valor total: r$",v
elif(ti=="I"):
	if(kw<=5000):
		v = kw*0.55
		z ="Valor total: r$",v
elif(kw>5000):
	v = kw*0.60
	z ="Valor total: r$",v
else:	
	z= "Dados invalidos"
	
print(z)
#print("Entradas:",kw,"kw e tipo ",ti)	
#print("Valor total: r$",v)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 32, in <module>
    print(z)
NameError: name 'z' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 12:55:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kw): "))
ti = input("tipo de instalacao").upper()

print("Entradas:",kw,"kWh e tipo ",ti)

if((ti=="R")or(ti=="I")or(ti=="C")):
	if((ti=="R")and(kw<=500)):
		v = kw*0.44
elif((ti=="R")and(kw>500))	:
	v = kw*0.65
	z ="Valor total: r$",v
elif(ti=="C"):
	if(kw<=1000):
		v = kw*0.55
		z ="Valor total: r$",v
elif(kw>1000):
	v = kw*0.60
	z ="Valor total: r$",v
elif(ti=="I"):
	if(kw<=5000):
		v = kw*0.55
		z ="Valor total: r$",v
elif(kw>5000):
	v = kw*0.60
	z ="Valor total: r$",v
else:	
	z= "Dados invalidos"
	
print(z)
#print("Entradas:",kw,"kw e tipo ",ti)	
#print("Valor total: r$",v)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 32, in <module>
    print(z)
NameError: name 'z' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 12:55:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kw): "))
ti = input("tipo de instalacao: ").upper()

print("Entradas:",kw,"kWh e tipo ",ti)

if((ti=="R")or(ti=="I")or(ti=="C")):
	if((ti=="R")and(kw<=500)):
		v = kw*0.44
elif((ti=="R")and(kw>500))	:
	v = kw*0.65
	z ="Valor total: r$",v
elif(ti=="C"):
	if(kw<=1000):
		v = kw*0.55
		z ="Valor total: r$",v
elif(kw>1000):
	v = kw*0.60
	z ="Valor total: r$",v
elif(ti=="I"):
	if(kw<=5000):
		v = kw*0.55
		z ="Valor total: r$",v
elif(kw>5000):
	v = kw*0.60
	z ="Valor total: r$",v
else:	
	z= "Dados invalidos"
	
print(z)
#print("Entradas:",kw,"kw e tipo ",ti)	
#print("Valor total: r$",v)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 32, in <module>
    print(z)
NameError: name 'z' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 12:56:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kw): "))
ti = input("tipo de instalacao: ").upper()

print("Entradas:",kw,"kWh e tipo ",ti)

if((ti=="R")or(ti=="I")or(ti=="C")):
	if((ti=="R")and(kw<=500)):
		v = kw*0.44
		z ="Valor total: r$",v
elif((ti=="R")and(kw>500))	:
	v = kw*0.65
	z ="Valor total: r$",v
elif(ti=="C"):
	if(kw<=1000):
		v = kw*0.55
		z ="Valor total: r$",v
elif(kw>1000):
	v = kw*0.60
	z ="Valor total: r$",v
elif(ti=="I"):
	if(kw<=5000):
		v = kw*0.55
		z ="Valor total: r$",v
elif(kw>5000):
	v = kw*0.60
	z ="Valor total: r$",v
else:	
	z= "Dados invalidos"
	
print(z)
#print("Entradas:",kw,"kw e tipo ",ti)	
#print("Valor total: r$",v)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 33, in <module>
    print(z)
NameError: name 'z' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 12:56:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kw): "))
ti = input("tipo de instalacao: ").upper()

print("Entradas:",kw,"kWh e tipo ",ti)

if((ti=="R")or(ti=="I")or(ti=="C")):
	if((ti=="R")and(kw<=500)):
		v = kw*0.44
		z ="Valor total: r$",v
elif((ti=="R")and(kw>500))	:
	v = kw*0.65
	z ="Valor total: r$",v
elif(ti=="C"):
	if(kw<=1000):
		v = kw*0.55
		z ="Valor total: r$",v
elif(kw>1000):
	v = kw*0.60
	z ="Valor total: r$",v
elif(ti=="I"):
	if(kw<=5000):
		v = kw*0.55
		z ="Valor total: r$",v
elif(kw>5000):
	v = kw*0.60
	z ="Valor total: r$",v
else:	
	z= "Dados invalidos"
	
print(z)
#print("Entradas:",kw,"kw e tipo ",ti)	
#print("Valor total: r$",v)
-- EXECUTION TIME:
0.123025
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1674/1101/main.py", line 33, in <module>
    print(z)
NameError: name 'z' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 12:56:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kw): "))
ti = input("tipo de instalacao: ").upper()

print("Entradas:",kw,"kWh e tipo ",ti)

if((ti=="R")or(ti=="I")or(ti=="C")):
	if((ti=="R")and(kw<=500)):
		v = kw*0.44
		z ="Valor total: r$",v
elif((ti=="R")and(kw>500))	:
	v = kw*0.65
	z ="Valor total: r$",v
elif(ti=="C"):
	if(kw<=1000):
		v = kw*0.55
		z ="Valor total: r$",v
elif(kw>1000):
	v = kw*0.60
	z ="Valor total: r$",v
elif(ti=="I"):
	if(kw<=5000):
		v = kw*0.55
		z ="Valor total: r$",v
elif(kw>5000):
	v = kw*0.60
	z ="Valor total: r$",v
else:	
	z= "Dados invalidos"
	
print(z)
#print("Entradas:",kw,"kw e tipo ",ti)	
#print("Valor total: r$",v)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 33, in <module>
    print(z)
NameError: name 'z' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 13:00:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kw): "))
ti = input("tipo de instalacao: ").upper()

print("Entradas:",kw,"kWh e tipo ",ti)

if(ti=="R"):
	if((ti=="R")and(kw<=500)):
		v = kw*0.44
		z ="Valor total: r$",v
elif((ti=="R")and(kw>500))	:
	v = kw*0.65
	z ="Valor total: r$",v
elif(ti=="C"):
	if(kw<=1000):
		v = kw*0.55
		z ="Valor total: r$",v
elif(kw>1000):
	v = kw*0.60
	z ="Valor total: r$",v
elif(ti=="I"):
	if(kw<=5000):
		v = kw*0.55
		z ="Valor total: r$",v
elif(kw>5000):
	v = kw*0.60
	z ="Valor total: r$",v
else:	
	z= "Dados invalidos"
	
print(z)
#print("Entradas:",kw,"kw e tipo ",ti)	
#print("Valor total: r$",v)
-- OUTPUT:
Entradas: -56.0 kWh e tipo  I
('Valor total: r$', -30.800000000000004)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 13:02:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kw): "))
ti = input("tipo de instalacao: ").upper()

print("Entradas:",kw,"kWh e tipo ",ti)

if(ti=="R"):
	if((ti=="R")and(kw<=500)):
		v = kw*0.44
		z ="Valor total: r$",v
elif((ti=="R")and(kw>500))	:
	v = kw*0.65
	z ="Valor total: r$",v
elif(ti=="C"):
	if(kw<=1000):
		v = kw*0.55
		z ="Valor total: r$",v
elif(kw>1000):
	v = kw*0.60
	z ="Valor total: r$",v
elif(ti=="I"):
	if(kw<=5000):
		v = kw*0.55
		z ="Valor total: r$",v
elif(kw>5000):
	v = kw*0.60
	z ="Valor total: r$",v
else:	
	z= "Dados invalidos"
	
print(z)
#print("Entradas:",kw,"kw e tipo ",ti)	
#print("Valor total: r$",v)
-- OUTPUT:
Entradas: -56.0 kWh e tipo  I
('Valor total: r$', -30.800000000000004)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 13:09:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kw): "))
ti = input("tipo de instalacao: ").upper()
print("Entradas: "kw "kwh e tipo" ti)
if(ti=="R"):
	if(kw<=500):
		v=kw*0.44
	else:
		v=kw*0.65
elif(ti=="C"):
	if(kw<=1000):
		v=kw*0.55
	else:
		v=kw*0.60
elif(ti=="I"):
	if(kw<=5000):
		v=kw*0.55
	else:
		v=kw*0.60
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 6
    print("Entradas: "kw "kwh e tipo" ti)
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 13:10:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kw): "))
ti = input("tipo de instalacao: ").upper()
print("Entradas: "kw "kwh e tipo" ti)
if(ti=="R"):
	if(kw<=500):
		v=kw*0.44
	else:
		v=kw*0.65
elif(ti=="C"):
	if(kw<=1000):
		v=kw*0.55
	else:
		v=kw*0.60
elif(ti=="I"):
	if(kw<=5000):
		v=kw*0.55
	else:
		v=kw*0.60
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 6
    print("Entradas: "kw "kwh e tipo" ti)
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 13:11:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kw): "))
ti = input("tipo de instalacao: ").upper()
print("Entradas:"kw "kwh e tipo" ti)
if(ti=="R"):
	if(kw<=500):
		v=kw*0.44
	else:
		v=kw*0.65
elif(ti=="C"):
	if(kw<=1000):
		v=kw*0.55
	else:
		v=kw*0.60
elif(ti=="I"):
	if(kw<=5000):
		v=kw*0.55
	else:
		v=kw*0.60
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 6
    print("Entradas:"kw "kwh e tipo" ti)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 13:14:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kw): "))
ti = input("tipo de instalacao: ").upper()

print("Entradas:", kw, "kwh e tipo", ti)
if(ti=="R"):
	if(kw<=500):
		v=kw*0.44
	else:
		v=kw*0.65
elif(ti=="C"):
	if(kw<=1000):
		v=kw*0.55
	else:
		v=kw*0.60
elif(ti=="I"):
	if(kw<=5000):
		v=kw*0.55
	else:
		v=kw*0.60
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 13:14:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kw): "))
ti = input("tipo de instalacao: ").upper()

print("Entradas:", kw, "kwh e tipo", ti)
if(ti=="R"):
	if(kw<=500):
		v=kw*0.44
	else:
		v=kw*0.65
elif(ti=="C"):
	if(kw<=1000):
		v=kw*0.55
	else:
		v=kw*0.60
elif(ti=="I"):
	if(kw<=5000):
		v=kw*0.55
	else:
		v=kw*0.60
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 13:14:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kw): "))
ti = input("tipo de instalacao: ").upper()

print("Entradas:", kw, "kwh e tipo", ti)
if(ti=="R"):
	if(kw<=500):
		v=kw*0.44
	else:
		v=kw*0.65
elif(ti=="C"):
	if(kw<=1000):
		v=kw*0.55
	else:
		v=kw*0.60
elif(ti=="I"):
	if(kw<=5000):
		v=kw*0.55
	else:
		v=kw*0.60
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 13:14:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kw): "))
ti = input("tipo de instalacao: ").upper()

print("Entradas:", kw, "kwh e tipo", ti)
if(ti=="R"):
	if(kw<=500):
		v=kw*0.44
	else:
		v=kw*0.65
elif(ti=="C"):
	if(kw<=1000):
		v=kw*0.55
	else:
		v=kw*0.60
elif(ti=="I"):
	if(kw<=5000):
		v=kw*0.55
	else:
		v=kw*0.60
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:57:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kw): "))
ti = input("tipo de instalacao: ").upper()

print("Entradas:", kw, "kwh e tipo", ti)
if(ti=="R"):
	if(kw<=500):
		v=kw*0.44
	else:
		v=kw*0.65
	elif(ti=="C"):
		if(kw<=1000):
			v=kw*0.55
		else:
			v=kw*0.60
		elif(ti=="I"):
			if(kw<=5000):
				v=kw*0.55
			else:
				v=kw*0.60
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 13
    elif(ti=="C"):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:02:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kWh): "))
ti = input("tipo de instalacao: ").upper()
print("Entradas: ",kw," kWh e tipo ",ti)
if(ti=="R"):
	if(kw<=500):
		v = kw*0.44
	elif(kw>500):
		v = kw*0.65
else:
	print("Dados invalidos" )
-- OUTPUT:
Entradas:  -56.0  kWh e tipo  I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:03:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kWh): "))
ti = input("tipo de instalacao: ").upper()
print("Entradas: ",kw," kWh e tipo ",ti)
if(ti=="R"):
	if(kw<=500):
		v = kw*0.44
	elif(kw>500):
		v = kw*0.65
else:
	print("Dados invalidos" )
-- OUTPUT:
Entradas:  -56.0  kWh e tipo  I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:08:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kWh): "))
ti = input("tipo de instalacao: ").upper()
print("Entradas: ",kw," kWh e tipo ",ti)
if(ti=="R"):
	if(kw<=500):
		v = kw*0.44
	elif(kw>500):
		v = kw*0.65
		if(ti=="C"):
			if(kw<=1000):
				v = kw*0.55
			elif(kw>1000):
				v = kw*0.60
				if(ti=="I"):
					if(kw<=5000):
						v = kw*0.55
					elif(kw>5000):
						v = kw*0.60
					
					
else:
	print("Dados invalidos" )
print("Valor total: R$ ",v)	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 26, in <module>
    print("Valor total: R$ ",v)	
NameError: name 'v' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:09:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kWh): "))
ti = input("tipo de instalacao: ").upper()
print("Entradas: ",kw," kWh e tipo ",ti)
if(ti=="R"):
	if(kw<=500):
		v = kw*0.44
	elif(kw>500):
		v = kw*0.65
		if(ti=="C"):
			if(kw<=1000):
				v = kw*0.55
			elif(kw>1000):
				v = kw*0.60
				if(ti=="I"):
					if(kw<=5000):
						v = kw*0.55
					elif(kw>5000):
						v = kw*0.60
					
	print("Valor total: R$ ",v)				
else:
	print("Dados invalidos" )
#print("Valor total: R$ ",v)	
-- OUTPUT:
Entradas:  -56.0  kWh e tipo  I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:11:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kWh): "))
ti = input("tipo de instalacao: ").upper()
print("Entradas: ",kw," kWh e tipo ",ti)
if(ti=="R"):
	if(kw<=500):
		v = kw*0.44
	elif(kw>500):
		v = kw*0.65
	if(ti=="C"):
		if(kw<=1000):
			v = kw*0.55
	elif(kw>1000):
		v = kw*0.60
	if(ti=="I"):
		if(kw<=5000):
			v = kw*0.55
		elif(kw>5000):
			v = kw*0.60
					
	print("Valor total: R$ ",v)				
else:
	print("Dados invalidos" )
#print("Valor total: R$ ",v)	
-- OUTPUT:
Entradas:  -56.0  kWh e tipo  I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:12:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kWh): "))
ti = input("tipo de instalacao: ").upper()
print("Entradas: ",kw," kWh e tipo ",ti)
if(ti=="R"):
	if(kw<=500):
		v = kw*0.44
	elif(kw>500):
		v = kw*0.65
	if(ti=="C"):
	elif(kw<=1000):
			v = kw*0.55
	elif(kw>1000):
		v = kw*0.60
	if(ti=="I"):
	elif(kw<=5000):
			v = kw*0.55
		elif(kw>5000):
			v = kw*0.60
					
	print("Valor total: R$ ",v)				
else:
	print("Dados invalidos" )
#print("Valor total: R$ ",v)	
-- ERROR:
File "XXXX", line 13
    elif(kw<=1000):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:19:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kWh): "))
ti = input("tipo de instalacao: ").upper()
print("Entradas: ",kw," kWh e tipo ",ti)
if((ti=="R")or (ti=="C")or(ti=="I"))
	if(ti=="R"):
		if(kw<=500):
			v = kw*0.44
		else:
			v = kw*0.65
		#print("Valor total: R$ ",v)	
	elif(ti=="C"):
		if(kw<=1000):
		v = kw*0.55
	else:
		v = kw*0.60
	elif(ti=="I"):
		if(kw<=5000):
			v = kw*0.55
	else:
			v = kw*0.60
					
	#print("Valor total: R$ ",v)				
else:
	print("Dados invalidos" )
#print("Valor total: R$ ",v)	
-- ERROR:
File "XXXX", line 7
    if((ti=="R")or (ti=="C")or(ti=="I"))
                                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:19:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kWh): "))
ti = input("tipo de instalacao: ").upper()
print("Entradas: ",kw," kWh e tipo ",ti)
if((ti=="R")or (ti=="C")or(ti=="I")):
	if(ti=="R"):
		if(kw<=500):
			v = kw*0.44
		else:
			v = kw*0.65
		#print("Valor total: R$ ",v)	
	elif(ti=="C"):
		if(kw<=1000):
		v = kw*0.55
	else:
		v = kw*0.60
	elif(ti=="I"):
		if(kw<=5000):
			v = kw*0.55
	else:
			v = kw*0.60
					
	#print("Valor total: R$ ",v)				
else:
	print("Dados invalidos" )
#print("Valor total: R$ ",v)	
-- ERROR:
File "XXXX", line 16
    v = kw*0.55
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:20:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kWh): "))
ti = input("tipo de instalacao: ").upper()
print("Entradas: ",kw," kWh e tipo ",ti)
if((ti=="R")or (ti=="C")or(ti=="I")):
	if(ti=="R"):
		if(kw<=500):
			v = kw*0.44
		else:
			v = kw*0.65
		#print("Valor total: R$ ",v)	
	elif(ti=="C"):
		if(kw<=1000):
			v = kw*0.55
	else:
		v = kw*0.60
	elif(ti=="I"):
		if(kw<=5000):
			v = kw*0.55
	else:
			v = kw*0.60
					
	#print("Valor total: R$ ",v)				
else:
	print("Dados invalidos" )
#print("Valor total: R$ ",v)	
-- ERROR:
File "XXXX", line 19
    elif(ti=="I"):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:21:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kWh): "))
ti = input("tipo de instalacao: ").upper()
print("Entradas: ",kw," kWh e tipo ",ti)
if((ti=="R")or (ti=="C")or(ti=="I")):
	if(ti=="R"):
		if(kw<=500):
			v = kw*0.44
		else:
			v = kw*0.65
		#print("Valor total: R$ ",v)	
	elif(ti=="C"):
		if(kw<=1000):
			v = kw*0.55
		else:
			v = kw*0.60
	elif(ti=="I"):
		if(kw<=5000):
			v = kw*0.55
	else:
			v = kw*0.60
					
	#print("Valor total: R$ ",v)				
else:
	print("Dados invalidos" )
#print("Valor total: R$ ",v)	
-- OUTPUT:
Entradas:  -56.0  kWh e tipo  I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:21:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kWh): "))
ti = input("tipo de instalacao: ").upper()
print("Entradas: ",kw," kWh e tipo ",ti)
if((ti=="R")or (ti=="C")or(ti=="I")):
	if(ti=="R"):
		if(kw<=500):
			v = kw*0.44
		else:
			v = kw*0.65
		#print("Valor total: R$ ",v)	
	elif(ti=="C"):
		if(kw<=1000):
			v = kw*0.55
		else:
			v = kw*0.60
	elif(ti=="I"):
		if(kw<=5000):
			v = kw*0.55
	else:
			v = kw*0.60
					
	print("Valor total: R$ ",v)				
else:
	print("Dados invalidos" )
#print("Valor total: R$ ",v)	
-- OUTPUT:
Entradas:  -56.0  kWh e tipo  I
Valor total: R$  -30.800000000000004
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:22:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kWh): "))
ti = input("tipo de instalacao: ").upper()
print("Entradas: ",kw," kWh e tipo ",ti)
if((ti=="R")or (ti=="C")or(ti=="I")):
	if(ti=="R"):
		if(kw<=500):
			v = kw*0.44
		else:
			v = kw*0.65
		#print("Valor total: R$ ",v)	
	elif(ti=="C"):
		if(kw<=1000):
			v = kw*0.55
		else:
			v = kw*0.60
	elif(ti=="I"):
		if(kw<=5000):
			v = kw*0.55
	else:
			v = kw*0.60
					
	print("Valor total: R$ ",round(v,2))				
else:
	print("Dados invalidos" )
#print("Valor total: R$ ",v)	
-- OUTPUT:
Entradas:  -56.0  kWh e tipo  I
Valor total: R$  -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 22:22:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kWh): "))
ti = input("tipo de instalacao: ").upper()
print("Entradas: ",kw," kWh e tipo ",ti)
if((ti=="R")or (ti=="C")or(ti=="I")):
	if(ti=="R"):
		if(kw<=500):
			v = kw*0.44
		else:
			v = kw*0.65
		#print("Valor total: R$ ",v)	
	elif(ti=="C"):
		if(kw<=1000):
			v = kw*0.55
		else:
			v = kw*0.60
	elif(ti=="I"):
		if(kw<=5000):
			v = kw*0.55
	else:
			v = kw*0.60
					
	print("Valor total: R$ ",round(v,2))				
else:
	print("Dados invalidos" )
#print("Valor total: R$ ",v)	
-- EXECUTION TIME:
0.15047
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0  kWh e tipo  I
Valor total: R$  -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5  kWh e tipo  R
Valor total: R$  621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:22:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kWh): "))
ti = input("tipo de instalacao: ").upper()
print("Entradas: ",kw," kWh e tipo ",ti)
if((ti=="R")or (ti=="C")or(ti=="I")):
	if(ti=="R"):
		if(kw<=500):
			v = kw*0.44
		else:
			v = kw*0.65
		#print("Valor total: R$ ",v)	
	elif(ti=="C"):
		if(kw<=1000):
			v = kw*0.55
		else:
			v = kw*0.60
	elif(ti=="I"):
		if(kw<=5000):
			v = kw*0.55
	else:
			v = kw*0.60
					
	print("Valor total: R$ ",round(v,2))				
else:
	print("Dados invalidos" )
#print("Valor total: R$ ",v)	
-- OUTPUT:
Entradas:  -56.0  kWh e tipo  I
Valor total: R$  -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:23:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kWh): "))
ti = input("tipo de instalacao: ").upper()
print("Entradas: ",kw," kWh e tipo ",ti)
if((ti=="R")or (ti=="C")or(ti=="I")):
	if(ti=="R"):
		if(kw<=500):
			v = kw*0.44
		else:
			v = kw*0.65
		#print("Valor total: R$ ",v)	
	elif(ti=="C"):
		if(kw<=1000):
			v = kw*0.55
		else:
			v = kw*0.60
	elif(ti=="I"):
		if(kw<=5000):
			v = kw*0.55
	else:
			v = kw*0.60
					
	print("Valor total: R$ ",round(v,2))				
else:
	print("Dados invalidos" )
#print("Valor total: R$ ",v)	
-- OUTPUT:
Entradas:  -56.0  kWh e tipo  I
Valor total: R$  -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:24:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kWh): "))
ti = input("tipo de instalacao: ").upper()
print("Entradas: ",kw," kWh e tipo ",ti)
if((ti=="R")or (ti=="C")or(ti=="I")):
	if(ti=="R"):
		if(kw<=500):
			v = kw*0.44
		else:
			v = kw*0.65
		#print("Valor total: R$ ",v)	
	elif(ti=="C"):
		if(kw<=1000):
			v = kw*0.55
		else:
			v = kw*0.60
	elif(ti=="I"):
		if(kw<=5000):
			v = kw*0.55
	else:
			v = kw*0.60
					
	print("Valor total: R$ ",round(v,2))				
else:
	print("Dados invalidos" )
#print("Valor total: R$ ",v)	
-- OUTPUT:
Entradas:  -56.0  kWh e tipo  I
Valor total: R$  -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:24:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kWh): "))
ti = input("tipo de instalacao: ").upper()
print("Entradas: ",kw," kWh e tipo ",ti)
if((ti=="R")or (ti=="C")or(ti=="I")):
	if(ti=="R"):
		if(kw<=500):
			v = kw*0.44
		else:
			v = kw*0.65
		#print("Valor total: R$ ",v)	
	elif(ti=="C"):
		if(kw<=1000):
			v = kw*0.55
		else:
			v = kw*0.60
	elif(ti=="I"):
		if(kw<=5000):
			v = kw*0.55
	else:
			v = kw*0.60
					
	print("Valor total: R$ ",round(v,2))				
else:
	print("Dados invalidos" )
#print("Valor total: R$ ",v)	
-- OUTPUT:
Entradas:  -56.0  kWh e tipo  I
Valor total: R$  -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:25:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kWh): "))
ti = input("tipo de instalacao: ").upper()
print("Entradas: ",kw," kWh e tipo ",ti)
if((ti=="R")or (ti=="C")or(ti=="I")):
	if(ti=="R"):
		if(kw<=500):
			v = kw*0.44
		else:
			v = kw*0.65
		#print("Valor total: R$ ",v)	
	elif(ti=="C"):
		if(kw<=1000):
			v = kw*0.55
		else:
			v = kw*0.60
	elif(ti=="I"):
		if(kw<=5000):
			v = kw*0.55
	else:
			v = kw*0.60
					
	print("Valor total: R$ ",round(v,2))				
else:
	print("Dados invalidos" )
#print("Valor total: R$ ",v)	
-- OUTPUT:
Entradas:  -56.0  kWh e tipo  I
Valor total: R$  -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:25:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kWh): "))
ti = input("tipo de instalacao: ").upper()
print("Entradas: ",kw," kWh e tipo ",ti)
if((ti=="R")or (ti=="C")or(ti=="I")):
	if(ti=="R"):
		if(kw<=500):
			v = kw*0.44
		else:
			v = kw*0.65
		#print("Valor total: R$ ",v)	
	elif(ti=="C"):
		if(kw<=1000):
			v = kw*0.55
		else:
			v = kw*0.60
	elif(ti=="I"):
		if(kw<=5000):
			v = kw*0.55
	else:
			v = kw*0.60
					
	print("Valor total: R$ ",round(v,2))				
else:
	print("Dados invalidos" )
#print("Valor total: R$ ",v)	
-- OUTPUT:
Entradas:  -56.0  kWh e tipo  I
Valor total: R$  -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:26:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kWh): "))
ti = input("tipo de instalacao: ").upper()
print("Entradas: ",kw," kWh e tipo ",ti)
if((ti=="R")or (ti=="C")or(ti=="I")):
	if(ti=="R"):
		if(kw<=500):
			v = kw*0.44
		else:
			v = kw*0.65
		#print("Valor total: R$ ",v)	
	elif(ti=="C"):
		if(kw<=1000):
			v = kw*0.55
		else:
			v = kw*0.60
	elif(ti=="I"):
		if(kw<=5000):
			v = kw*0.55
	else:
			v = kw*0.60
					
	print("Valor total: R$ ",round(v,2))				
else:
	print("Dados invalidos" )
#print("Valor total: R$ ",v)	
-- OUTPUT:
Entradas:  -56.0  kWh e tipo  I
Valor total: R$  -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:26:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kWh): "))
ti = input("tipo de instalacao: ").upper()
print("Entradas: ",kw," kWh e tipo ",ti)
if((ti=="R")or (ti=="C")or(ti=="I")):
	if(ti=="R"):
		if(kw<=500):
			v = kw*0.44
		else:
			v = kw*0.65
		#print("Valor total: R$ ",v)	
	elif(ti=="C"):
		if(kw<=1000):
			v = kw*0.55
		else:
			v = kw*0.60
	elif(ti=="I"):
		if(kw<=5000):
			v = kw*0.55
		else:
			v = kw*0.60
					
	print("Valor total: R$ ",round(v,2))				
else:
	print("Dados invalidos" )
#print("Valor total: R$ ",v)	
-- OUTPUT:
Entradas:  -56.0  kWh e tipo  I
Valor total: R$  -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 22:27:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kWh): "))
ti = input("tipo de instalacao: ").upper()
print("Entradas: ",kw," kWh e tipo ",ti)
if((ti=="R")or (ti=="C")or(ti=="I")):
	if(ti=="R"):
		if(kw<=500):
			v = kw*0.44
		else:
			v = kw*0.65
		#print("Valor total: R$ ",v)	
	elif(ti=="C"):
		if(kw<=1000):
			v = kw*0.55
		else:
			v = kw*0.60
	elif(ti=="I"):
		if(kw<=5000):
			v = kw*0.55
		else:
			v = kw*0.60
					
	print("Valor total: R$ ",round(v,2))				
else:
	print("Dados invalidos" )
#print("Valor total: R$ ",v)	
-- EXECUTION TIME:
0.162207
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0  kWh e tipo  I
Valor total: R$  -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5  kWh e tipo  R
Valor total: R$  621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:27:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kWh): "))
ti = input("tipo de instalacao: ").upper()
print("Entradas: ",kw," kWh e tipo ",ti)
if((ti=="R")or (ti=="C")or(ti=="I")):
	if(ti=="R"):
		if(kw<=500):
			v = kw*0.44
		else:
			v = kw*0.65
		#print("Valor total: R$ ",v)	
	elif(ti=="C"):
		if(kw<=1000):
			v = kw*0.55
		else:
			v = kw*0.60
	elif(ti=="I"):
		if(kw<=5000):
			v = kw*0.55
		else:
			v = kw*0.60
					
	print("Valor total: R$ ",round(v,2))				
else:
	print("Dados invalidos" )
#print("Valor total: R$ ",v)	
-- OUTPUT:
Entradas:  -56.0  kWh e tipo  I
Valor total: R$  -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:28:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kWh): "))
ti = input("tipo de instalacao: ").upper()
print("Entradas: ",kw," kWh e tipo ",ti)
if(((ti=="R")or (ti=="C")or(ti=="I"))and(kw>=0)):
	if(ti=="R"):
		if(kw<=500):
			v = kw*0.44
		else:
			v = kw*0.65
		#print("Valor total: R$ ",v)	
	elif(ti=="C"):
		if(kw<=1000):
			v = kw*0.55
		else:
			v = kw*0.60
	elif(ti=="I"):
		if(kw<=5000):
			v = kw*0.55
		else:
			v = kw*0.60
					
	print("Valor total: R$ ",round(v,2))				
else:
	print("Dados invalidos" )
#print("Valor total: R$ ",v)	
-- OUTPUT:
Entradas:  -56.0  kWh e tipo  I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 22:28:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kw = float(input("consumo de energia(em kWh): "))
ti = input("tipo de instalacao: ").upper()
print("Entradas: ",kw," kWh e tipo ",ti)
if(((ti=="R")or (ti=="C")or(ti=="I"))and(kw>=0)):
	if(ti=="R"):
		if(kw<=500):
			v = kw*0.44
		else:
			v = kw*0.65
		#print("Valor total: R$ ",v)	
	elif(ti=="C"):
		if(kw<=1000):
			v = kw*0.55
		else:
			v = kw*0.60
	elif(ti=="I"):
		if(kw<=5000):
			v = kw*0.55
		else:
			v = kw*0.60
					
	print("Valor total: R$ ",round(v,2))				
else:
	print("Dados invalidos" )
#print("Valor total: R$ ",v)	
-- EXECUTION TIME:
0.151485
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0  kWh e tipo  I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5  kWh e tipo  R
Valor total: R$  621.08
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
