== TEST (2019-04-30 20:01:43) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n  = float(input("Numero de horas extras:"))
nf = float(input("Numero de horas faltadas:"))

h = n - ((1/4)*nf)

if(h > 400):
	print(n, "extras e", nf, "de falta")
	print(500)
else:
	print(n, "extras e", nf, "de falta")
	print(100)
-- OUTPUT:
420.0 extras e 20.0 de falta
500
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 20:02:11) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n  = float(input("Numero de horas extras:"))
nf = float(input("Numero de horas faltadas:"))

h = n - ((1/4)*nf)

if(h > 400):
	print(n, "extras e", nf, "de falta")
	print("R$",500)
else:
	print(n, "extras e", nf, "de falta")
	print("R$",100)
-- EXECUTION TIME:
0.216953
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 100
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 100
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 20:02:12) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n  = float(input("Numero de horas extras:"))
nf = float(input("Numero de horas faltadas:"))

h = n - ((1/4)*nf)

if(h > 400):
	print(n, "extras e", nf, "de falta")
	print("R$",500)
else:
	print(n, "extras e", nf, "de falta")
	print("R$",100)
-- EXECUTION TIME:
0.131854
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 100
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 100
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 20:02:12) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n  = float(input("Numero de horas extras:"))
nf = float(input("Numero de horas faltadas:"))

h = n - ((1/4)*nf)

if(h > 400):
	print(n, "extras e", nf, "de falta")
	print("R$",500)
else:
	print(n, "extras e", nf, "de falta")
	print("R$",100)
-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 20:02:38) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n  = float(input("Numero de horas extras:"))
nf = float(input("Numero de horas faltadas:"))

h =round(n - ((1/4)*nf), 2)

if(h > 400):
	print(n, "extras e", nf, "de falta")
	print("R$",500)
else:
	print(n, "extras e", nf, "de falta")
	print("R$",100)
-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 20:02:49) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n  = float(input("Numero de horas extras:"))
nf = float(input("Numero de horas faltadas:"))

h =round(n - ((1/4)*nf), 2)

if(h > 400):
	print(n, "extras e", nf, "de falta")
	print("R$",500)
else:
	print(n, "extras e", nf, "de falta")
	print("R$",100)
-- EXECUTION TIME:
0.206243
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 100
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 100
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 20:02:50) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n  = float(input("Numero de horas extras:"))
nf = float(input("Numero de horas faltadas:"))

h =round(n - ((1/4)*nf), 2)

if(h > 400):
	print(n, "extras e", nf, "de falta")
	print("R$",500)
else:
	print(n, "extras e", nf, "de falta")
	print("R$",100)
-- EXECUTION TIME:
0.158898
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 100
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 100
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 20:05:36) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n  = float(input("Numero de horas extras:"))
nf = float(input("Numero de horas faltadas:"))

h =round(n - ((1/4)*nf), 2)

if(h <= 400):
	print(n, "extras e", nf, "de falta")
	print("R$",100)
else:
	print(n, "extras e", nf, "de falta")
	print("R$",500)
-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 20:06:03) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n  = float(input("Numero de horas extras:"))
nf = float(input("Numero de horas faltadas:"))

h =round(n - ((1/4)*nf), 2)

if(h <= 400):
	print(n, "extras e", nf, "de falta")
	print("R$",100.0)
else:
	print(n, "extras e", nf, "de falta")
	print("R$",500.0)
-- EXECUTION TIME:
0.197805
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500.0
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 100.0
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 100.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
