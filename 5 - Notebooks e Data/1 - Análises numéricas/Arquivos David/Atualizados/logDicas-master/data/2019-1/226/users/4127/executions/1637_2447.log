== TEST (2019-04-07 14:01:11) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

if (pc>pgm):
	msg= "Falta" + pc-pgm
print(msg)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    msg= "Falta" + pc-pgm
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 14:01:54) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

if (pc>pgm):
	msg= ("Falta" + pc-pgm)
print(msg)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    msg= ("Falta" + pc-pgm)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 14:04:19) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

ffalta= pc-pgm
ttroco= pgm-pc
if (pc>pgm):
	msg= ("Falta" + ffalta)
else: 
	msg= ("Troco"+ troco)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    msg= ("Falta" + ffalta)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 14:04:32) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

ffalta= pc-pgm
ttroco= pgm-pc
if (pc>pgm):
	msg= ("Falta" + ffalta)
else: 
	msg= ("Troco"+ ttroco)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    msg= ("Falta" + ffalta)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 14:06:22) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

if (pc<=pgm):
	msg= ("Troco" + pgm-pc)
else: 
	msg= ("Falta" + pc-pgm)
print(msg)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    msg= ("Falta" + pc-pgm)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 14:06:30) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

if (pc<=pgm):
	msg= ("Troco" + pgm-pc)
else: 
	msg= ("Falta" + pc-pgm)
print(msg)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    msg= ("Falta" + pc-pgm)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 14:07:09) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

if (pc<=pgm):
	msg= ("Troco" + (pgm-pc))
else: 
	msg= ("Falta" + (pc-pgm))
print(msg)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    msg= ("Falta" + (pc-pgm))
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 14:07:32) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

print(pc-pgm)
-- OUTPUT:
26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 14:08:03) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

print("falta"+pc-pgm)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print("falta"+pc-pgm)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 14:08:16) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

print("falta", pc-pgm)
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 14:08:31) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

if (pc<=pgm):
	msg= ("Troco" , (pgm-pc))
else: 
	msg= ("Falta" , (pc-pgm))
print(msg)
-- OUTPUT:
('Falta', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 14:08:56) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

if (pc<=pgm):
	msg= ("Troco de " , (pgm-pc))
else: 
	msg= ("Falta" , (pc-pgm))
print(msg)
-- OUTPUT:
('Falta', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 14:09:02) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

if (pc<=pgm):
	msg= ("Troco de " , (pgm-pc))
else: 
	msg= ("Falta" , (pc-pgm))
print(msg)
-- EXECUTION TIME:
0.131281
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
('Falta', 26.0)
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
('Troco de ', 28.0)
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
('Troco de ', 0.0)
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 14:09:10) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

if (pc<=pgm):
	msg= ("Troco de ", (pgm-pc))
else: 
	msg= ("Falta", (pc-pgm))
print(msg)
-- OUTPUT:
('Falta', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 14:09:20) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

if (pc<=pgm):
	msg= ("Troco de ",(pgm-pc))
else: 
	msg= ("Falta",(pc-pgm))
print(msg)
-- OUTPUT:
('Falta', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 14:09:40) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

print("falta",pc-pgm)
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 14:09:57) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

print("troco de",pc-pgm)
-- OUTPUT:
troco de 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 14:10:37) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

if (pc<=pgm):
	msg= ("troco de",pgm-pc
else: 
	msg= ("falta",pc-pgm)
print(msg)
-- ERROR:
File "XXXX", line 6
    else: 
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 14:10:49) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

if (pc<=pgm):
	msg= ("troco de",pgm-pc)
else: 
	msg= ("falta",pc-pgm)
print(msg)
-- OUTPUT:
('falta', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 14:10:54) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

if (pc<=pgm):
	msg= ("troco de",pgm-pc)
else: 
	msg= ("falta",pc-pgm)
print(msg)
-- EXECUTION TIME:
0.203712
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
('falta', 26.0)
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
('troco de', 28.0)
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
('troco de', 0.0)
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 14:11:43) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

if (pc<=pgm):
	print("troco de",pgm-pc)
else: 
	print("falta",pc-pgm)

-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 14:11:54) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

if (pc<=pgm):
	print("troco de",pgm-pc)
else: 
	print("falta",pc-pgm)

-- EXECUTION TIME:
0.125771
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 14:12:23) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

if (pc<=pgm):
	print("troco de",round(pgm-pc))
else: 
	print("falta",round(pc-pgm))

-- OUTPUT:
falta 26
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 14:12:27) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

if (pc<=pgm):
	print("troco de",round(pgm-pc))
else: 
	print("falta",round(pc-pgm))

-- EXECUTION TIME:
0.184465
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta 26
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco de 28
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco de 0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 14:12:45) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

if (pc<=pgm):
	print("troco de",round(pgm-pc))
else: 
	print("falta",round(pc-pgm))

-- OUTPUT:
falta 26
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 14:12:58) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

if (pc<=pgm):
	print("Troco de",round(pgm-pc))
else: 
	print("Falta",round(pc-pgm))

-- OUTPUT:
Falta 26
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 14:12:59) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

if (pc<=pgm):
	print("Troco de",round(pgm-pc))
else: 
	print("Falta",round(pc-pgm))

-- EXECUTION TIME:
0.135539
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta 26
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 14:14:20) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

if (pc>pgm):
	msg= ("Falta",pc-pgm)
else: 
	msg= ("Troco de",pgm-pc)

-- OUTPUT:
Falta 26
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 14:14:37) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

if (pc>pgm):
	msg= ("Falta",pc-pgm)
else: 
	msg= ("Troco de",pgm-pc)
print(msg)

-- OUTPUT:
('Falta', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 14:14:41) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

if (pc>pgm):
	msg= ("Falta",pc-pgm)
else: 
	msg= ("Troco de",pgm-pc)
print(msg)

-- EXECUTION TIME:
0.153487
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
('Falta', 26.0)
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
('Troco de', 28.0)
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
('Troco de', 0.0)
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 14:15:35) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

x= pc-pgm
y= pgm-pc
if (pc>pgm):
	msg= ("Falta" + x)
else: 
	msg= ("Troco de" + y)
print(msg)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    msg= ("Falta" + x)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 14:15:44) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

x= pc-pgm
y= pgm-pc
if (pc>pgm):
	msg= ("Falta" , x)
else: 
	msg= ("Troco de" , y)
print(msg)

-- OUTPUT:
('Falta', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 14:15:51) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

x= pc-pgm
y= pgm-pc
if (pc>pgm):
	msg= ("Falta" , x)
else: 
	msg= ("Troco de" , y)
print(msg)

-- EXECUTION TIME:
0.155836
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
('Falta', 26.0)
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
('Troco de', 28.0)
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
('Troco de', 0.0)
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 14:16:05) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

x= pc-pgm
y= pgm-pc
if (pc>pgm):
	msg= ("Falta" , x)
else: 
	msg= ("Troco de" , y)
print(round(msg, 2)

-- EXECUTION TIME:
0.140951
-- ERROR:
  File "/home/codebench/codes/1637/2447/main.py", line 11
    
                       ^
SyntaxError: unexpected EOF while parsing

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 14:16:06) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

x= pc-pgm
y= pgm-pc
if (pc>pgm):
	msg= ("Falta" , x)
else: 
	msg= ("Troco de" , y)
print(round(msg, 2)

-- ERROR:
File "XXXX", line 11
    
                       ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 14:16:11) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

x= pc-pgm
y= pgm-pc
if (pc>pgm):
	msg= ("Falta" , x)
else: 
	msg= ("Troco de" , y)
print(round(msg, 2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(round(msg, 2))
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 14:16:13) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

x= pc-pgm
y= pgm-pc
if (pc>pgm):
	msg= ("Falta" , x)
else: 
	msg= ("Troco de" , y)
print(round(msg, 2))

-- EXECUTION TIME:
0.146436
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1637/2447/main.py", line 10, in <module>
    print(round(msg, 2))
TypeError: type tuple doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 14:16:19) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

x= pc-pgm
y= pgm-pc
if (pc>pgm):
	msg= ("Falta" , x)
else: 
	msg= ("Troco de" , y)
print(round(msg, 2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(round(msg, 2))
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 14:45:27) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

if (pc>pgm):
	msg=('Falta',pc-pgm)
else:
	msg=('Troco de',pgm-pc)
print(round(msg,2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(round(msg,2))
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 14:46:17) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

if (pc>pgm):
	msg=('Falta',round(pc-pgm,2))
else:
	msg=('Troco de',round(pgm-pc,2))
print(msg)

-- OUTPUT:
('Falta', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 16:43:48) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

if (pc>pgm):
	msg='Falta',round(pc-pgm,2)
else:
	msg='Troco de',round(pgm-pc,2)
print(msg)

-- OUTPUT:
('Falta', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 16:44:14) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

if (pc>pgm):
	msg="Falta",round(pc-pgm,2)
else:
	msg="Troco de",round(pgm-pc,2)
print(msg)

-- OUTPUT:
('Falta', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 16:46:14) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

if (pc>pgm)
	msg= "Falta" round(pc-pgm,2)
else:
	msg= "Troco de" round(pgm-pc,2)
print(msg)
-- ERROR:
File "XXXX", line 4
    if (pc>pgm)
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 16:46:21) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

if (pc>pgm):
	msg= "Falta" round(pc-pgm,2)
else:
	msg= "Troco de" round(pgm-pc,2)
print(msg)
-- ERROR:
File "XXXX", line 5
    msg= "Falta" round(pc-pgm,2)
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 16:46:41) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

if (pc>pgm):
	msg= ("Falta" round(pc-pgm,2))
else:
	msg= "Troco de" round(pgm-pc,2)
print(msg)
-- ERROR:
File "XXXX", line 5
    msg= ("Falta" round(pc-pgm,2))
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 16:47:00) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

if (pc>pgm):
	msg= ("Falta",round(pc-pgm,2))
else:
	msg= "Troco de",round(pgm-pc,2)
print(msg)
-- OUTPUT:
('Falta', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 16:47:33) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

print("troco de", pc-pgm)
-- OUTPUT:
troco de 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 16:48:01) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

print("troco de", round(pc-pgm))
-- OUTPUT:
troco de 26
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 16:48:20) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

print("troco de", round(pc-pgm,2))
-- OUTPUT:
troco de 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 16:49:11) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

if (pc>pgm):
	print("falta",round(pc-pgm,2))

-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 16:49:23) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

if (pc>pgm):
	print("falta",round(pc-pgm,2))

-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 16:49:28) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

if (pc>pgm):
	print("falta",round(pc-pgm,2))

-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 16:49:52) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

if (pc>pgm):
	print("falta",round(pc-pgm,2))
else:
	print("troco",round(pgm-pc,2))

-- EXECUTION TIME:
0.202871
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 16:49:54) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

if (pc>pgm):
	print("falta",round(pc-pgm,2))
else:
	print("troco",round(pgm-pc,2))

-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 16:50:13) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

if (pc>pgm):
	print("Falta",round(pc-pgm,2))
else:
	print("Troco de",round(pgm-pc,2))

-- OUTPUT:
Falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 16:50:18) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

if (pc>pgm):
	print("Falta",round(pc-pgm,2))
else:
	print("Troco de",round(pgm-pc,2))

-- EXECUTION TIME:
0.147049
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 16:51:06) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

if (pc>pgm):
	msg=("Falta",round(pc-pgm,2))
else:
	msg=("Troco de",round(pgm-pc,2))
print(msg)

-- OUTPUT:
('Falta', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:19:15) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

if (pc>pgm):
	msg=("Falta",round(pc-pgm,2))
else:
	msg=("Troco de",round(pgm-pc,2))
print(msg)

-- OUTPUT:
('Falta', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:19:27) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

if (pc>pgm):
	msg=("Falta",round(pc-pgm,2))
else:
	msg=("Troco de",round(pgm-pc,2))
print(msg)

-- EXECUTION TIME:
0.190037
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
('Falta', 26.0)
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
('Troco de', 28.0)
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
('Troco de', 0.0)
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:23:02) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

if (pc>pgm):
	msg=("Falta",round(pc-pgm,2))
else:
	msg=("Troco de",round(pgm-pc,2))
print(msg)

-- EXECUTION TIME:
0.175612
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
('Falta', 26.0)
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
('Troco de', 28.0)
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
('Troco de', 0.0)
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:23:27) 
-- CODE:
pc= float(input("qual o valor do produto?"))
pgm= float(input("qual o valor do pagamento?"))

if (pc>pgm):
	print("Falta",round(pc-pgm,2))
else:
	print("Troco de",round(pgm-pc,2))


-- EXECUTION TIME:
0.212088
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
