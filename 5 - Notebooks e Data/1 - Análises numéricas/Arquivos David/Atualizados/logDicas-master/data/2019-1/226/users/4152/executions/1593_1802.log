== TEST (2019-03-26 11:41:13) 
-- CODE:
from math import *

vida = 

D1 = 

D2 =

dano = sqrt(5 * D1) + (pi ** (D2 / 3))

print(dano)
-- ERROR:
File "XXXX", line 3
    vida = 
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:42:58) 
-- CODE:
from math import *

vida = int(input("Escreva os pontos de vida inicial: "))

D1 = int(input("Escreva o resultado do dado 1: "))

D2 = int(input("Escreva o resultado do dado 2: "))

dano = sqrt(5 * D1) + (pi ** (D2 / 3))

print(dano)
-- OUTPUT:
12.105672378589148
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:45:00) 
-- CODE:
from math import *

vida = int(input("Escreva os pontos de vida inicial: "))

D1 = int(input("Escreva o resultado do dado 1: "))

D2 = int(input("Escreva o resultado do dado 2: "))

dano = sqrt((5 * D1)) + (pi ** (D2 / 3))

print(dano)
-- OUTPUT:
12.105672378589148
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:09:48) 
-- CODE:
from math import *

vida = int(input("Escreva os pontos de vida inicial: "))

D1 = int(input("Escreva o resultado do dado 1: "))

D2 = int(input("Escreva o resultado do dado 2: "))

dano = sqrt((5 * D1)) + (pi ** (D2 / 3))

print(vida - dano)
-- OUTPUT:
187.89432762141087
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 10:10:08) 
-- CODE:
from math import *

vida = int(input("Escreva os pontos de vida inicial: "))

D1 = int(input("Escreva o resultado do dado 1: "))

D2 = int(input("Escreva o resultado do dado 2: "))

dano = sqrt((5 * D1)) + (pi ** (D2 / 3))

print(vida - dano)
-- EXECUTION TIME:
0.163295
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
187.89432762141087
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
284.653170023859
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
496.2993401349387
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:10:16) 
-- CODE:
from math import *

vida = int(input("Escreva os pontos de vida inicial: "))

D1 = int(input("Escreva o resultado do dado 1: "))

D2 = int(input("Escreva o resultado do dado 2: "))

dano = sqrt((5 * D1)) + (pi ** (D2 / 3))

print(vida - dano)
-- OUTPUT:
187.89432762141087
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:11:59) 
-- CODE:
from math import *

vida = int(input("Escreva os pontos de vida inicial: "))

D1 = int(input("Escreva o resultado do dado 1: "))

D2 = int(input("Escreva o resultado do dado 2: "))

dano = int(sqrt((5 * D1)) + (pi ** (D2 / 3)))

print(vida - dano)
-- OUTPUT:
188
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 10:12:13) 
-- CODE:
from math import *

vida = int(input("Escreva os pontos de vida inicial: "))

D1 = int(input("Escreva o resultado do dado 1: "))

D2 = int(input("Escreva o resultado do dado 2: "))

dano = int(sqrt((5 * D1)) + (pi ** (D2 / 3)))

print(vida - dano)
-- EXECUTION TIME:
0.16921
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
188
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
285
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
