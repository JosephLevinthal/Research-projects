== TEST (2019-05-02 00:22:37) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))
print ("Entradas:",a,",",b,",",c)
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 00:34:50) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))
print ("Entradas:",a,",",b,",",c)
if ((a>0)and(b>0)and(c>0)):
	if ((a<b+c)and(b<a+c)and(c<a+b)):
		if ((a==b)and(b==c)and(a==c)):
			print ("Tipo de triangulo: equilatero")
		elif ((a!=b)and(b!=c)and(a!=c)):
			print ("Tipo de triangulo: escaleno")
		else:
			print ("Tipo de triangulo: isosceles")
	else:
		print ("Tipo de triangulo: invalido ")
else:
	print ("tipo de triangulo: invalido")
		
		
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 00:34:58) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado 1:"))
b = float(input("lado 2:"))
c = float(input("lado 3:"))
print ("Entradas:",a,",",b,",",c)
if ((a>0)and(b>0)and(c>0)):
	if ((a<b+c)and(b<a+c)and(c<a+b)):
		if ((a==b)and(b==c)and(a==c)):
			print ("Tipo de triangulo: equilatero")
		elif ((a!=b)and(b!=c)and(a!=c)):
			print ("Tipo de triangulo: escaleno")
		else:
			print ("Tipo de triangulo: isosceles")
	else:
		print ("Tipo de triangulo: invalido ")
else:
	print ("tipo de triangulo: invalido")
		
		
-- EXECUTION TIME:
0.197005
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
