== TEST (2019-03-31 23:46:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
a = input("valor de a:")
b = input("valor de b:")
c = input("vamor de c:")
x = (a + b + c)/2
area = sqrt(x*(x - a)*(x - b)*(x - c))
print(round(area, 5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    x = (a + b + c)/2
TypeError: unsupported operand type(s) for /: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 23:49:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
a = input("valor de a:")
b = input("valor de b:")
c = input("vamor de c:")
x = float(a + b + c)/2
area = sqrt(x*(x - a)*(x - b)*(x - c))
print(round(area, 5))
-- EXECUTION TIME:
0.135804
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1585/2905/main.py", line 8, in <module>
    x = float(a + b + c)/2
ValueError: could not convert string to float: '11.019.513.2'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:49:24) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
a = input("valor de a:")
b = input("valor de b:")
c = input("vamor de c:")
x = float(a + b + c)/2
area = sqrt(x*(x - a)*(x - b)*(x - c))
print(round(area, 5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    x = float(a + b + c)/2
ValueError: could not convert string to float: '11.019.513.2'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 23:51:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
a = float(input("valor de a:"))
b = float(input("valor de b:"))
c = float(input("vamor de c:")0
x = float(a + b + c)/2
area = sqrt(x*(x - a)*(x - b)*(x - c))
print(round(area, 5))
-- EXECUTION TIME:
0.193765
-- ERROR:
  File "/home/codebench/codes/1585/2905/main.py", line 7
    c = float(input()0
                     ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:52:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
a = float(input("valor de a:"))
b = float(input("valor de b:"))
c = float(input("vamor de c:")0
x = int(a + b + c)/2
area = sqrt(x*(x - a)*(x - b)*(x - c))
print(round(area, 5))
-- ERROR:
File "XXXX", line 7
    c = float(input()0
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:53:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
a = float(input("valor de a:"))
b = float(input("valor de b:"))
c = float(input("vamor de c:")0
x = float(a + b + c)/2
area = sqrt(x*(x - a)*(x - b)*(x - c))
print(round(area, 5))
-- ERROR:
File "XXXX", line 7
    c = float(input()0
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 23:57:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
a = float(input("valor de a:"))
b = float(input("valor de b:))
c = float((input("valor de c:")
x = float(a + b + c)/2
area = sqrt(x*(x - a)*(x - b)*(x - c))
print(round(area, 5))
-- EXECUTION TIME:
0.173504
-- ERROR:
  File "/home/codebench/codes/1585/2905/main.py", line 6
    b = float(input("valor de b:))
                                 ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 23:57:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
a = float(input("valor de a:"))
b = float(input("valor de b:))
c = float((input("valor de c:"))
x = float(a + b + c)/2
area = sqrt(x*(x - a)*(x - b)*(x - c))
print(round(area, 5))
-- EXECUTION TIME:
0.138658
-- ERROR:
  File "/home/codebench/codes/1585/2905/main.py", line 6
    b = float(input("valor de b:))
                                 ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:58:08) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
a = float(input("valor de a:"))
b = float(input("valor de b:))
c = float(input("valor de c:"))
x = float(a + b + c)/2
area = sqrt(x*(x - a)*(x - b)*(x - c))
print(round(area, 5))
-- ERROR:
File "XXXX", line 6
    b = float(input("valor de b:))
                                 ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 23:59:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
a = float(input("valor de a:"))
b = float(input("valor de b:"))
c = float(input("valor de c:"))
x = float(a + b + c)/2
area = sqrt(x*(x - a)*(x - b)*(x - c))
print(round(area, 5))
-- EXECUTION TIME:
0.172868
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1585/2905/main.py", line 9, in <module>
    area = sqrt(x*(x - a)*(x - b)*(x - c))
NameError: name 'sqrt' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:59:13) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
a = float(input("valor de a:"))
b = float(input("valor de b:"))
c = float(input("valor de c:"))
x = float(a + b + c)/2
area = sqrt(x*(x - a)*(x - b)*(x - c))
print(round(area, 5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    area = sqrt(x*(x - a)*(x - b)*(x - c))
NameError: name 'sqrt' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 21:18:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
a = float(input("valor de a:"))
b = float(input("valor de b:"))
c = float(input("valor de c:"))
x = float(a + b + c)/2
area = math.sqrt(x*(x - a)*(x - b)*(x - c))
print(round(area, 5))
-- OUTPUT:
69.41967
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 21:19:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
a = float(input("valor de a:"))
b = float(input("valor de b:"))
c = float(input("valor de c:"))
x = float(a + b + c)/2
area = math.sqrt(x*(x - a)*(x - b)*(x - c))
print(round(area, 5))
-- EXECUTION TIME:
0.170128
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.41967
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709.16654
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
