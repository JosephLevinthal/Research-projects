== TEST (2019-04-14 12:03:53) 
-- CODE:
a = float(input("digite um coeficiente: "))
b = float(input("digite um coeficiente: "))
c = float(input("digite um coeficiente: "))
d = float(input("digite um coeficiente: "))
e = float(input("digite um coeficiente: "))
f = float(input("digite um coeficiente: "))

x = ((c*e)-(b*f))/((a*e)-(b*d))
y = ((a*f)-(c*d))/((a*e)-(b*d))
if (x!= 0/0) (y!=0/0):
	print(x)
	print(y)
else:
	print("Nao tem solucao")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    x = ((c*e)-(b*f))/((a*e)-(b*d))
ZeroDivisionError: float division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 12:07:51) 
-- CODE:
a = float(input("digite um coeficiente: "))
b = float(input("digite um coeficiente: "))
c = float(input("digite um coeficiente: "))
d = float(input("digite um coeficiente: "))
e = float(input("digite um coeficiente: "))
f = float(input("digite um coeficiente: "))

if (x=((c*e)-(b*f))/((a*e)-(b*d))!= 0/0), (y=((a*f)-(c*d))/((a*e)-(b*d))!=0/0):
	print(x)
	print(y)
else:
	print("Nao tem solucao")

-- ERROR:
File "XXXX", line 8
    if (x=((c*e)-(b*f))/((a*e)-(b*d))!= 0/0), (y=((a*f)-(c*d))/((a*e)-(b*d))!=0/0):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 12:08:02) 
-- CODE:
a = float(input("digite um coeficiente: "))
b = float(input("digite um coeficiente: "))
c = float(input("digite um coeficiente: "))
d = float(input("digite um coeficiente: "))
e = float(input("digite um coeficiente: "))
f = float(input("digite um coeficiente: "))

if (x=((c*e)-(b*f))/((a*e)-(b*d))!= 0/0) (y=((a*f)-(c*d))/((a*e)-(b*d))!=0/0):
	print(x)
	print(y)
else:
	print("Nao tem solucao")

-- ERROR:
File "XXXX", line 8
    if (x=((c*e)-(b*f))/((a*e)-(b*d))!= 0/0) (y=((a*f)-(c*d))/((a*e)-(b*d))!=0/0):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 12:08:27) 
-- CODE:
a = float(input("digite um coeficiente: "))
b = float(input("digite um coeficiente: "))
c = float(input("digite um coeficiente: "))
d = float(input("digite um coeficiente: "))
e = float(input("digite um coeficiente: "))
f = float(input("digite um coeficiente: "))

if (x=((c*e)-(b*f))/((a*e)-(b*d))!= 0/0):
	print(x)
if ((y=((a*f)-(c*d))/((a*e)-(b*d))!=0/0))
	print(y)
else:
	print("Nao tem solucao")

-- ERROR:
File "XXXX", line 8
    if (x=((c*e)-(b*f))/((a*e)-(b*d))!= 0/0):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 12:09:59) 
-- CODE:
a = float(input("digite um coeficiente: "))
b = float(input("digite um coeficiente: "))
c = float(input("digite um coeficiente: "))
d = float(input("digite um coeficiente: "))
e = float(input("digite um coeficiente: "))
f = float(input("digite um coeficiente: "))

if ((x)!= 0/0):
	x = ((c*e)-(b*f))/((a*e)-(b*d)
	print(x)
if ((y!=0/0)):
	y=((a*f)-(c*d))/((a*e)-(b*d))!=0/0
	print(y)
else:
	print("Nao tem solucao")

-- ERROR:
File "XXXX", line 10
    print(x)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 12:10:32) 
-- CODE:
a = float(input("digite um coeficiente: "))
b = float(input("digite um coeficiente: "))
c = float(input("digite um coeficiente: "))
d = float(input("digite um coeficiente: "))
e = float(input("digite um coeficiente: "))
f = float(input("digite um coeficiente: "))

if (((c*e)-(b*f))/((a*e)-(b*d))!= 0/0):
	x = ((c*e)-(b*f))/((a*e)-(b*d))
	print(x)
if ((y!=0/0)):
	y=((a*f)-(c*d))/((a*e)-(b*d))!=0/0
	print(y)
else:
	print("Nao tem solucao")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    if (((c*e)-(b*f))/((a*e)-(b*d))!= 0/0):
ZeroDivisionError: float division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 12:11:50) 
-- CODE:
a = float(input("digite um coeficiente: "))
b = float(input("digite um coeficiente: "))
c = float(input("digite um coeficiente: "))
d = float(input("digite um coeficiente: "))
e = float(input("digite um coeficiente: "))
f = float(input("digite um coeficiente: "))

if (((c*e)-(b*f))/((a*e)-(b*d))):
	x = ((c*e)-(b*f))/((a*e)-(b*d))
	print(x)
if ((y!=0/0)):
	y=((a*f)-(c*d))/((a*e)-(b*d))!=0/0
	print(y)
else:
	print("Nao tem solucao")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    if (((c*e)-(b*f))/((a*e)-(b*d))):
ZeroDivisionError: float division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 12:13:44) 
-- CODE:
a = float(input("digite um coeficiente: "))
b = float(input("digite um coeficiente: "))
c = float(input("digite um coeficiente: "))
d = float(input("digite um coeficiente: "))
e = float(input("digite um coeficiente: "))
f = float(input("digite um coeficiente: "))

if ((a*e) - (b*d) !=0):
	x = ((c*e)-(b*f))/((a*e)-(b*d))
	print(x)
#if ((y!=0/0)):
	#y=((a*f)-(c*d))/((a*e)-(b*d))!=0/0
	#print(y)
else:
	print("Nao tem solucao")

-- OUTPUT:
Nao tem solucao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 12:15:24) 
-- CODE:
a = float(input("digite um coeficiente: "))
b = float(input("digite um coeficiente: "))
c = float(input("digite um coeficiente: "))
d = float(input("digite um coeficiente: "))
e = float(input("digite um coeficiente: "))
f = float(input("digite um coeficiente: "))

if ((a*e) - (b*d) !=0):
	x = ((c*e)-(b*f))/((a*e)-(b*d))
	print(x)
if (((a*e)-(b*d))!=0):
	y=((a*f)-(c*d))/((a*e)-(b*d))
	print(y)
else:
	print("Nao tem solucao")

-- OUTPUT:
Nao tem solucao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 12:15:31) 
-- CODE:
a = float(input("digite um coeficiente: "))
b = float(input("digite um coeficiente: "))
c = float(input("digite um coeficiente: "))
d = float(input("digite um coeficiente: "))
e = float(input("digite um coeficiente: "))
f = float(input("digite um coeficiente: "))

if ((a*e) - (b*d) !=0):
	x = ((c*e)-(b*f))/((a*e)-(b*d))
	print(x)
if (((a*e)-(b*d))!=0):
	y=((a*f)-(c*d))/((a*e)-(b*d))
	print(y)
else:
	print("Nao tem solucao")

-- OUTPUT:
Nao tem solucao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 12:15:45) 
-- CODE:
a = float(input("digite um coeficiente: "))
b = float(input("digite um coeficiente: "))
c = float(input("digite um coeficiente: "))
d = float(input("digite um coeficiente: "))
e = float(input("digite um coeficiente: "))
f = float(input("digite um coeficiente: "))

if ((a*e) - (b*d) !=0):
	x = ((c*e)-(b*f))/((a*e)-(b*d))
	print(x)
if (((a*e)-(b*d))!=0):
	y=((a*f)-(c*d))/((a*e)-(b*d))
	print(y)
else:
	print("Nao tem solucao")

-- OUTPUT:
Nao tem solucao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 12:15:54) 
-- CODE:
a = float(input("digite um coeficiente: "))
b = float(input("digite um coeficiente: "))
c = float(input("digite um coeficiente: "))
d = float(input("digite um coeficiente: "))
e = float(input("digite um coeficiente: "))
f = float(input("digite um coeficiente: "))

if ((a*e) - (b*d) !=0):
	x = ((c*e)-(b*f))/((a*e)-(b*d))
	print(x)
if (((a*e)-(b*d))!=0):
	y=((a*f)-(c*d))/((a*e)-(b*d))
	print(y)
else:
	print("Nao tem solucao")

-- OUTPUT:
Nao tem solucao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 12:16:21) 
-- CODE:
a = float(input("digite um coeficiente: "))
b = float(input("digite um coeficiente: "))
c = float(input("digite um coeficiente: "))
d = float(input("digite um coeficiente: "))
e = float(input("digite um coeficiente: "))
f = float(input("digite um coeficiente: "))

if ((a*e) - (b*d) !=0):
	x = ((c*e)-(b*f))/((a*e)-(b*d))
	print(x)
if (((a*e)-(b*d))!=0):
	y=((a*f)-(c*d))/((a*e)-(b*d))
	print(y)
else:
	print("Nao tem solucao")

-- OUTPUT:
Nao tem solucao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 12:16:37) 
-- CODE:
a = float(input("digite um coeficiente: "))
b = float(input("digite um coeficiente: "))
c = float(input("digite um coeficiente: "))
d = float(input("digite um coeficiente: "))
e = float(input("digite um coeficiente: "))
f = float(input("digite um coeficiente: "))

if ((a*e) - (b*d) !=0):
	x = ((c*e)-(b*f))/((a*e)-(b*d))
	print(x)
if (((a*e)-(b*d))!=0):
	y=((a*f)-(c*d))/((a*e)-(b*d))
	print(y)
else:
	print("Nao tem solucao")

-- EXECUTION TIME:
0.1949
-- TEST CASE 1:
---- input:
10.0
10.0
12.0
10.0
10.0
12.0
---- correct output:
Nao tem solucao
---- user output:
Nao tem solucao
-- TEST CASE 2:
---- input:
1.0
8.0
12.0
16.0
22.0
30.0
---- correct output:
-0.22641509433962265
1.528301886792453
---- user output:
-0.22641509433962265
1.528301886792453
-- TEST CASE 3:
---- input:
24.0
48.0
52.0
112.0
16.0
1.0
---- correct output:
-0.15705128205128205
1.1618589743589745
---- user output:
-0.15705128205128205
1.1618589743589745
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
