== SUBMITION (2019-04-25 12:18:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = float(input("Digite a:"))
b = float(input("Digite b:"))
x = float(input("Digite x:"))

if(b>a):
	if(x>=a and x<=b):
		print("x pertence ao intervalo a, b")
	else:
		print("x nao pertence ao intervalo a, b")
else:
	print("Entradas a e b invalidas")
		

-- EXECUTION TIME:
0.142457
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
x nao pertence ao intervalo a, b
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
x nao pertence ao intervalo a, b
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
Entradas a e b invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 12:18:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = float(input("Digite a:"))
b = float(input("Digite b:"))
x = float(input("Digite x:"))

if(b>a):
	if(x>=a and x<=b):
		print("x pertence ao intervalo a, b")
	else:
		print("x nao pertence ao intervalo a, b")
else:
	print("Entradas a e b invalidas")
		

-- OUTPUT:
x nao pertence ao intervalo a, b
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 12:19:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x:"))
a = float(input("Digite a:"))
b = float(input("Digite b:"))


if(b>a):
	if(x>=a and x<=b):
		print("x pertence ao intervalo a, b")
	else:
		print("x nao pertence ao intervalo a, b")
else:
	print("Entradas a e b invalidas")
		

-- EXECUTION TIME:
0.293972
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
x nao pertence ao intervalo a, b
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas a e b invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
x pertence ao intervalo a, b
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 12:19:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x:"))
a = float(input("Digite a:"))
b = float(input("Digite b:"))


if(b>a):
	if(x>=a and x<=b):
		print("x pertence ao intervalo a, b")
	else:
		print("x nao pertence ao intervalo a, b")
else:
	print("Entradas a e b invalidas")
		

-- OUTPUT:
x nao pertence ao intervalo a, b
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 12:21:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x:"))
a = float(input("Digite a:"))
b = float(input("Digite b:"))


if(b>a):
	if(x>=a and x<=b):
		print( x,"pertence ao intervalo",a,b)
	else:
		print( x,"nao pertence ao intervalo",a,b)
else:
	print("Entradas", a , b ,"invalidas")
		

-- EXECUTION TIME:
0.130789
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 12:21:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x:"))
a = float(input("Digite a:"))
b = float(input("Digite b:"))


if(b>a):
	if(x>=a and x<=b):
		print( x,"pertence ao intervalo",a,b)
	else:
		print( x,"nao pertence ao intervalo",a,b)
else:
	print("Entradas", a , b ,"invalidas")
		

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 12:21:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x:"))
a = float(input("Digite a:"))
b = float(input("Digite b:"))


if(b>a):
	if(x>=a and x<=b):
		print( x,"pertence ao intervalo",a,",",b)
	else:
		print( x,"nao pertence ao intervalo",a,",",b)
else:
	print("Entradas", a , b ,"invalidas")
		

-- EXECUTION TIME:
0.178975
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 12:22:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x:"))
a = float(input("Digite a:"))
b = float(input("Digite b:"))


if(b>a):
	if(x>=a and x<=b):
		print( x,"pertence ao intervalo",a,",",b)
	else:
		print( x,"nao pertence ao intervalo",a,",",b)
else:
	print("Entradas", a ,"e", b ,"invalidas")
		

-- EXECUTION TIME:
0.195399
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
