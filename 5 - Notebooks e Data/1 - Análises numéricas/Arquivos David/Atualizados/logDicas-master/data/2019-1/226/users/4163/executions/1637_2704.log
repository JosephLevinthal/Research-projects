== TEST (2019-04-09 10:22:56) 
-- CODE:
n = float(input("nota do aluno"))
opcao = input("bonificacao (S/N)")

if opcao.upper() == "S":
	nf= n * 0.10
else: opcao.upper() == "N"
	nf(n)

print(nf)
-- ERROR:
File "XXXX", line 7
    nf(n)
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:23:31) 
-- CODE:
n = float(input("nota do aluno"))
opcao = input("bonificacao (S/N)")

if opcao.upper() == "S":
	nf= n * 0.10
else: opcao.upper() == "N"
	nf = n

print(nf)
-- ERROR:
File "XXXX", line 7
    nf = n
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:25:17) 
-- CODE:
n = float(input("nota do aluno"))
opcao = input("bonificacao (S/N)")

if opcao.upper() == "S":
	nf = n * 0.10
else: opcao.upper() == "N"
	nf = n
	
print(nf)
-- ERROR:
File "XXXX", line 7
    nf = n
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:25:31) 
-- CODE:
n = float(input("nota do aluno"))
opcao = input("bonificacao (S/N)")

if opcao.upper() == "S":
	nf = n * 0.10
else:opcao.upper() == "N"
	nf = n
	
print(nf)
-- ERROR:
File "XXXX", line 7
    nf = n
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:26:30) 
-- CODE:
n = float(input("nota do aluno"))
opcao = input("bonificacao (S/N)")

if opcao.upper() == "S":
	nf = n * 0.10
else:opcao.upper() == "N"
	nf = n
	
print(nf)
-- ERROR:
File "XXXX", line 7
    nf = n
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:27:51) 
-- CODE:
n = float(input("nota do aluno"))
opcao = input("bonificacao (S/N)")

if opcao.upper() == "S":
	nf = n * 0.10
else:
	nf = n
	
print(nf)
-- OUTPUT:
0.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:28:10) 
-- CODE:
n = float(input("nota do aluno"))
opcao = input("bonificacao (S/N)")

if opcao.upper() == "S":
	nf = n * 0.10
else:
	nf = n
	
print(nf)
-- OUTPUT:
0.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:28:46) 
-- CODE:
n = float(input("nota do aluno"))
opcao = input("bonificacao (S/N)")

if opcao.upper() == "S":
	nf = n * 10
else:
	nf = n
	
print(nf)
-- OUTPUT:
50.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:29:04) 
-- CODE:
n = float(input("nota do aluno"))
opcao = input("bonificacao (S/N)")

if opcao.upper() == "S":
	nf = n * 1.0
else:
	nf = n
	
print(nf)
-- OUTPUT:
5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:29:27) 
-- CODE:
n = float(input("nota do aluno"))
opcao = input("bonificacao (S/N)")

if opcao.upper() == "S":
	nf = n * 1.1
else:
	nf = n
	
print(nf)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:30:49) 
-- CODE:
n = float(input("nota do aluno"))
opcao = input("bonificacao (S/N)")

if opcao.upper() == "S":
	nf = n * 1.1
else:
	nf = n
	
print(round(nf, 1)
-- ERROR:
File "XXXX", line 10
    
                      ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:31:00) 
-- CODE:
n = float(input("nota do aluno"))
opcao = input("bonificacao (S/N)")

if opcao.upper() == "S":
	nf = n * 1.1
else:
	nf = n
	
print(round(nf, 1))
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:31:13) 
-- CODE:
n = float(input("nota do aluno"))
opcao = input("bonificacao (S/N)")

if opcao.upper() == "S":
	nf = n * 1.1
else:
	nf = n
	
print(round(nf, 1))
-- EXECUTION TIME:
0.158297
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:36:23) 
-- CODE:
n = float(input("nota do aluno"))
opcao = input("bonificacao (S/N)")

if opcao.upper() == "S":
	nf = n * 1.1
else:
	nf = n
	
print(round(nf, 1))
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
