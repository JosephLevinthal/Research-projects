== TEST (2019-05-14 10:26:35) 
-- CODE:
n = int(input("Digite um numero: "))
from math import * 

soma = 3 
i = 0 
while (n <= i):
	geral = soma + (-1) * (4/ (2*i) * (2*i + 1) * (2*i + 2))
	i = i + 1
print(round(soma, 10))
-- OUTPUT:
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:27:11) 
-- CODE:
n = int(input("Digite um numero: "))
from math import * 

soma = 3 
i = 0 
while (n <= i):
	geral = soma + (-1) ** i * (4/ (2*i) * (2*i + 1) * (2*i + 2))
	i = i + 1
print(round(soma, 10))
-- OUTPUT:
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:27:35) 
-- CODE:
n = int(input("Digite um numero: "))
from math import * 

soma = 3 
i = 0 
while (n <= i):
	geral = soma + (-1) ** i * (4/ (2*i) * (2*i + 1) * (2*i + 2))
	i = i + 1
print(round(soma, 8))
-- OUTPUT:
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:27:46) 
-- CODE:
n = int(input("Digite um numero: "))
from math import * 

soma = 3 
i = 0 
while (n <= i):
	geral = soma + (-1) ** i * (4/ (2*i) * (2*i + 1) * (2*i + 2))
	i = i + 1
print(round(soma, 8))
-- OUTPUT:
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:28:00) 
-- CODE:
n = int(input("Digite um numero: "))
from math import * 

soma = 3 
i = 0 
while (n <= i):
	geral = soma + ((-1) ** i * (4/ (2*i) * (2*i + 1) * (2*i + 2)))
	i = i + 1
print(round(soma, 8))
-- OUTPUT:
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:28:24) 
-- CODE:
n = int(input("Digite um numero: "))
from math import * 

soma = 3 
i = 1 
while (n <= i):
	geral = soma + ((-1) ** i * (4/ (2*i) * (2*i + 1) * (2*i + 2)))
	i = i + 1
print(round(soma, 8))
-- OUTPUT:
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:28:35) 
-- CODE:
n = int(input("Digite um numero: "))
from math import * 

soma = 3 
i = 0
while (n < i):
	geral = soma + ((-1) ** i * (4/ (2*i) * (2*i + 1) * (2*i + 2)))
	i = i + 1
print(round(soma, 8))
-- OUTPUT:
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:28:58) 
-- CODE:
n = int(input("Digite um numero: "))
from math import * 

soma = 3 
i = 1
while (n < i):
	geral = soma + ((-1) ** (i + 1)* (4/ (2*i) * (2*i + 1) * (2*i + 2)))
	i = i + 1
print(round(soma, 8))
-- OUTPUT:
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:29:27) 
-- CODE:
n = int(input("Digite um numero: "))
from math import * 

soma = 3 
i = 1
while (n < i):
	soma = soma + ((-1) ** (i + 1)* (4/ (2*i) * (2*i + 1) * (2*i + 2)))
	i = i + 1
print(round(soma, 8))
-- OUTPUT:
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 10:30:42) 
-- CODE:
n = int(input("Digite um numero: "))
from math import * 

soma = 3 
i = 1
while (n <> i):
	soma = soma + ((-1) ** (i + 1)* (4/ (2*i) * (2*i + 1) * (2*i + 2)))
	i = i + 1
print(round(soma, 8))
-- EXECUTION TIME:
0.221564
-- ERROR:
  File "/home/codebench/codes/1723/2508/main.py", line 6
    while (n <> i):
              ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:30:45) 
-- CODE:
n = int(input("Digite um numero: "))
from math import * 

soma = 3 
i = 1
while (n > i):
	soma = soma + ((-1) ** (i + 1)* (4/ (2*i) * (2*i + 1) * (2*i + 2)))
	i = i + 1
print(round(soma, 8))
-- OUTPUT:
-10.66666667
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 10:30:45) 
-- CODE:
n = int(input("Digite um numero: "))
from math import * 

soma = 3 
i = 1
while (n > i):
	soma = soma + ((-1) ** (i + 1)* (4/ (2*i) * (2*i + 1) * (2*i + 2)))
	i = i + 1
print(round(soma, 8))
-- EXECUTION TIME:
0.137316
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
-10.66666667
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
105.8655618
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
-66.3354407
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 10:30:50) 
-- CODE:
n = int(input("Digite um numero: "))
from math import * 

soma = 3 
i = 1
while (n > i):
	soma = soma + ((-1) ** (i + 1)* (4/ (2*i) * (2*i + 1) * (2*i + 2)))
	i = i + 1
print(round(soma, 8))
-- EXECUTION TIME:
0.160866
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
-10.66666667
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
105.8655618
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
-66.3354407
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:31:28) 
-- CODE:
n = int(input("Digite um numero: "))
from math import * 

soma = 3 
i = 1
while (n > i):
	soma = soma + ((-1) ** (i + 1))* (4/ (2*i) * (2*i + 1) * (2*i + 2))
	i = i + 1
print(round(soma, 8))
-- OUTPUT:
-10.66666667
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 10:31:30) 
-- CODE:
n = int(input("Digite um numero: "))
from math import * 

soma = 3 
i = 1
while (n > i):
	soma = soma + ((-1) ** (i + 1))* (4/ (2*i) * (2*i + 1) * (2*i + 2))
	i = i + 1
print(round(soma, 8))
-- EXECUTION TIME:
0.167905
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
-10.66666667
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
105.8655618
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
-66.3354407
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:31:55) 
-- CODE:
n = int(input("Digite um numero: "))
from math import * 

soma = 3 
i = 1
while (n > i):
	soma = soma + ((-1) ** (i + 1))* (4/ ((2*i) * (2*i + 1) * (2*i + 2)))
	i = i + 1
print(round(soma, 8))
-- OUTPUT:
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 10:31:56) 
-- CODE:
n = int(input("Digite um numero: "))
from math import * 

soma = 3 
i = 1
while (n > i):
	soma = soma + ((-1) ** (i + 1))* (4/ ((2*i) * (2*i + 1) * (2*i + 2)))
	i = i + 1
print(round(soma, 8))
-- EXECUTION TIME:
0.135085
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.14155633
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
