== TEST (2019-04-07 11:17:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
rt = float(input("Raio do tanque"))
h = float(input("Altura da coluna de ar:"))
n = int(input("Opcao 1: VOLUME DE AR. Opacao 2: VOLUME DE COMBUSTIVEL."))

ve = (4*pi*(rt**3))/3
vce = (pi*(h**2) * (3rt - h))/3

if (n == 1):
	x = vce
else:
	x = ve - vce
	
print(x)	
-- ERROR:
File "XXXX", line 10
    vce = (pi*(h**2) * (3rt - h))/3
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 11:17:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
rt = float(input("Raio do tanque"))
h = float(input("Altura da coluna de ar:"))
n = int(input("Opcao 1: VOLUME DE AR. Opacao 2: VOLUME DE COMBUSTIVEL."))

ve = (4*pi*(rt**3))/3
vce = (pi*(h**2) * (3*rt - h))/3

if (n == 1):
	x = vce
else:
	x = ve - vce
	
print(x)	
-- OUTPUT:
9.025664794069577
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 11:17:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
rt = float(input("Raio do tanque:"))
h = float(input("Altura da coluna de ar:"))
n = int(input("Opcao 1: VOLUME DE AR. Opacao 2: VOLUME DE COMBUSTIVEL."))

ve = (4*pi*(rt**3))/3
vce = (pi*(h**2) * (3*rt - h))/3

if (n == 1):
	x = vce
else:
	x = ve - vce
	
print(x)	
-- EXECUTION TIME:
0.198541
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.025664794069577
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3407570570127
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 11:17:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
rt = float(input("Raio do tanque:"))
h = float(input("Altura da coluna de ar:"))
n = int(input("Opcao 1: VOLUME DE AR. Opacao 2: VOLUME DE COMBUSTIVEL."))

ve = (4*pi*(rt**3))/3
vce = (pi*(h**2) * (3*rt - h))/3

if (n == 1):
	x = vce
else:
	x = ve - vce
	
print(x)	
-- OUTPUT:
9.025664794069577
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 11:18:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
rt = float(input("Raio do tanque:"))
h = float(input("Altura da coluna de ar:"))
n = int(input("Opcao 1: VOLUME DE AR. Opacao 2: VOLUME DE COMBUSTIVEL."))

ve = (4*pi*(rt**3))/3
vce = (pi*(h**2) * (3*rt - h))/3

if (n == 1):
	x = vce
else:
	x = ve - vce
	
print(round(x, 4)	
-- ERROR:
File "XXXX", line 18
    
                      ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 11:18:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
rt = float(input("Raio do tanque:"))
h = float(input("Altura da coluna de ar:"))
n = int(input("Opcao 1: VOLUME DE AR. Opacao 2: VOLUME DE COMBUSTIVEL."))

ve = (4*pi*(rt**3))/3
vce = (pi*(h**2) * (3*rt - h))/3

if (n == 1):
	x = vce
else:
	x = ve - vce
	
print(round(x, 4)	)
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 11:18:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
rt = float(input("Raio do tanque:"))
h = float(input("Altura da coluna de ar:"))
n = int(input("Opcao 1: VOLUME DE AR. Opacao 2: VOLUME DE COMBUSTIVEL."))

ve = (4*pi*(rt**3))/3
vce = (pi*(h**2) * (3*rt - h))/3

if (n == 1):
	x = vce
else:
	x = ve - vce
	
print(round(x, 4)	)
-- EXECUTION TIME:
0.204332
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
