== TEST (2019-05-23 11:24:18) 
-- CODE:
from numpy import*
v= array(eval(input()))

while(i<size(v)):
	if(v[i]<0):
		del(v[i])	
	i=i+1
print(v)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 11:24:47) 
-- CODE:
from numpy import*
v= array(eval(input()))
i=0
while(i<size(v)):
	if(v[i]<0):
		del(v[i])	
	i=i+1
print(v)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 11:31:00) 
-- CODE:
from numpy import*
v= array(eval(input()))
i=0
a=0
j=0
while(i<size(v)):
	if(v[i]<0):
	else:
		a=a+1
	i=i+1
v2=arange(a)
while(j<size(v)):
	if(v[j]>0):
		v2[j]=v[j]
	j=j+1
print(v2)



-- ERROR:
File "XXXX", line 8
    else:
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 11:32:03) 
-- CODE:
from numpy import*
v= array(eval(input()))
i=0
a=0
j=0
while(i<size(v)):
	if(v[i]>=0):
		a=a+1
	i=i+1
v2=arange(a)
while(j<size(v)):
	if(v[j]>0):
		v2[j]=v[j]
	j=j+1
print(v2)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 11:33:45) 
-- CODE:
from numpy import*
v= array(eval(input()))
i=0
a=0
j=0
while(i<size(v)):
	if(v[i]>=0):
		a=a+1
	i=i+1
v2=arange(a)
while(j<size(v)):
	if(v[j]>0):
		v2[j]=v[j]
	j=j+1
print(v2)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 11:39:40) 
-- CODE:
from numpy import*
v= array(eval(input()))
i=0
a=0
j=0
k=0
while(i<size(v)):
	if(v[i]>=0):
		a=a+1
	i=i+1
v2=arange(a)
print(v2)
while(j<size(v)):
	if(v[j]>0):
		v2[k]=v[j]
		k=k+1
		
	j=j+1
print(v2)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-23 11:40:02) 
-- CODE:
from numpy import*
v= array(eval(input()))
i=0
a=0
j=0
k=0
while(i<size(v)):
	if(v[i]>=0):
		a=a+1
	i=i+1
v2=arange(a)
print(v2)
while(j<size(v)):
	if(v[j]>0):
		v2[k]=v[j]
		k=k+1
		
	j=j+1
print(v2)



-- EXECUTION TIME:
0.344002
-- TEST CASE 1:
---- input:
[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,1]
---- correct output:
[1]
---- user output:
[0]
[1]
-- TEST CASE 2:
---- input:
[2,-1,3,-4,5]
---- correct output:
[2 3 5]
---- user output:
[0 1 2]
[2 3 5]
-- TEST CASE 3:
---- input:
[-1,18,32,14,25,-6]
---- correct output:
[18 32 14 25]
---- user output:
[0 1 2 3]
[18 32 14 25]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 11:40:06) 
-- CODE:
from numpy import*
v= array(eval(input()))
i=0
a=0
j=0
k=0
while(i<size(v)):
	if(v[i]>=0):
		a=a+1
	i=i+1
v2=arange(a)
print(v2)
while(j<size(v)):
	if(v[j]>0):
		v2[k]=v[j]
		k=k+1
		
	j=j+1
print(v2)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-23 11:40:37) 
-- CODE:
from numpy import*
v= array(eval(input()))
i=0
a=0
j=0
k=0
while(i<size(v)):
	if(v[i]>=0):
		a=a+1
	i=i+1
v2=arange(a)
while(j<size(v)):
	if(v[j]>0):
		v2[k]=v[j]
		k=k+1
		
	j=j+1
print(v2)



-- EXECUTION TIME:
0.374705
-- TEST CASE 1:
---- input:
[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,1]
---- correct output:
[1]
---- user output:
[1]
-- TEST CASE 2:
---- input:
[2,-1,3,-4,5]
---- correct output:
[2 3 5]
---- user output:
[2 3 5]
-- TEST CASE 3:
---- input:
[-1,18,32,14,25,-6]
---- correct output:
[18 32 14 25]
---- user output:
[18 32 14 25]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
