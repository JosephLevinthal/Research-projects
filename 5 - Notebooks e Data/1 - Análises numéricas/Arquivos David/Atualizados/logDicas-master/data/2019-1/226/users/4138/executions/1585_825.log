== SUBMITION (2019-03-25 13:44:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = input(float("insira o raio:"))
from math import pi
area = pi * r**0,5
volume = 4/3 * pi * r**3
print(round(area,3))
print(round(volume,3))
-- EXECUTION TIME:
0.222071
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1585/825/main.py", line 4, in <module>
    raio = input(float("insira o raio:"))
ValueError: could not convert string to float: 'insira o raio:'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:44:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = input(float("insira o raio:"))
from math import pi
area = pi * r**0,5
volume = 4/3 * pi * r**3
print(round(area,3))
print(round(volume,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    raio = input(float("insira o raio:"))
ValueError: could not convert string to float: 'insira o raio:'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 13:45:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi
area = pi * r**0,5
volume = 4/3 * pi * r**3
print(round(area,3))
print(round(volume,3))
-- EXECUTION TIME:
0.208465
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1585/825/main.py", line 6, in <module>
    area = pi * r**0,5
NameError: name 'r' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:45:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi
area = pi * r**0,5
volume = 4/3 * pi * r**3
print(round(area,3))
print(round(volume,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    area = pi * r**0,5
NameError: name 'r' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:45:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi
area = pi * raio**0,5
volume = 4/3 * pi * raio**3
print(round(area,3))
print(round(volume,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(round(area,3))
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 13:46:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi
area = pi * raio**0,5
volume = 4/3 * pi * raio**3
print(round(area,3))
print(round(volume,3))
-- EXECUTION TIME:
0.222264
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1585/825/main.py", line 8, in <module>
    print(round(area,3))
TypeError: type tuple doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 13:46:27) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi
area = pi * raio **0,5
volume = 4/3 * pi * raio**3
print(round(area,3))
print(round(volume,3))
-- EXECUTION TIME:
0.198828
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1585/825/main.py", line 8, in <module>
    print(round(area,3))
TypeError: type tuple doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:46:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi
area = pi * raio **0,5
volume = 4/3 * pi * raio**3
print(round(area,3))
print(round(volume,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(round(area,3))
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:47:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi
area = pi * raio **0,5
volume = 4/3 * pi * raio**0,3
print(round(area,3))
print(round(volume,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(round(area,3))
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:48:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi
A = pi * raio **0,5

volume = 4/3 * pi * raio**0,3

print(round(area,3))
print(round(volume,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(round(area,3))
NameError: name 'area' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:48:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi
A = pi * raio

volume = 4/3 * pi * raio**0,3

print(round(area,3))
print(round(volume,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(round(area,3))
NameError: name 'area' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:48:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi
A = pi * raio

volume = 4/3 * pi * raio**0,3

print(round(A,3))
print(round(volume,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(round(volume,3))
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:49:40) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi
A = pi * raio

V = 4/3 * pi 

print(round(A,3))
print(round(V,3))
-- OUTPUT:
14.137
4.189
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:50:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi
A = pi * (raio**0,5)

V = 4/3 * pi 

print(round(A,3))
print(round(V,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    A = pi * (raio**0,5)
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:51:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi
A =float( pi * (raio**0,5))

V = 4/3 * pi 

print(round(A,3))
print(round(V,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    A =float( pi * (raio**0,5))
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:51:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi
A = pi * raio**0,5

V = 4/3 * pi 

print(round(A,3))
print(round(V,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(round(A,3))
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:52:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi
A = pi * raio**0,5

V = 4/3 * pi 

print(round(A,3))
print(round(V,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(round(A,3))
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:53:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi
A1 = pi * raio
A= A1**0,5

V = 4/3 * pi 

print(round(A,3))
print(round(V,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(round(A,3))
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:51:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi
A1 = pi * raio
A= A1**0,5

V = 4/3 * pi 

print(round(A,3))
print(round(V,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(round(A,3))
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:51:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi
A1 = pi * raio
A= A1**0,5

V = 4/3 * pi 

print(round(A,3))
print(round(V,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(round(A,3))
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:53:05) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi
A1 = pi * raio**0,5


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(round(A,3))
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:53:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi
A = pi * raio**0,5
V= pi * raio **3


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(round(A,3))
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:54:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi
A = pi * raio**0,5
V= pi * raio **3

print(round(A,3))
print(round(V,3))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(round(A,3))
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:56:05) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi

A = pi * raio**0,5
V= pi * raio **3

print(round(A,3))
print(round(V,3))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(round(A,3))
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:56:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi

A = pi * raio**0,5
V= pi * raio **3




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(round(A,3))
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:57:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi

A = pi * raio**0,5
V= pi * raio **3

print(A)
print(V)


-- OUTPUT:
(3.141592653589793, 5)
286.2776305583699
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:58:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi

A = pi * raio**0,5
V= pi * raio **3

print(round(A,3)
print(V)


-- ERROR:
File "XXXX", line 11
    print(V)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:59:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi

A = pi * raio**0,5
V= pi * raio **3

print(round(A,3)
print(round(V,3)


-- ERROR:
File "XXXX", line 11
    print(round(V,3)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:00:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi

A = pi * raio**0,5
V= pi * raio **3

print(round(A,3))
print(round(V,3))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(round(A,3))
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:01:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi

A = pi * raio**0,5
V= pi * raio **3

print(round(A,3)
print(round(V,3)


-- ERROR:
File "XXXX", line 11
    print(round(V,3)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:02:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi

A = pi * raio**0,5
V= pi * raio **3

print(round(A,3))
print(round(V,3))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(round(A,3))
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:03:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi

A = pi * raio**0,5
V= 4/3 * pi * raio **3

print(round(A,3))
print(round(V,3))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(round(A,3))
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:03:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi

A = pi * raio**0,5
V= 4/3 * pi * raio **3

print(round(A,3))
print(round(V,3))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(round(A,3))
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:03:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi

A = pi * raio**0,5
V= 4/3 * pi * raio **3

print(round(A,3))



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(round(A,3))
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:04:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi

A = pi * raio**0,5
V= 4/3 * pi * raio **3

print(round(A,3)



-- ERROR:
File "XXXX", line 13
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:04:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi

A = pi * raio**0,5
V= 4/3 * pi * raio **3

print(round(A,3)



-- ERROR:
File "XXXX", line 13
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:04:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi

A = pi * raio**0,5
V= 4/3 * pi * raio **3

print(round(A,3))



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(round(A,3))
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:05:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi

A = pi * raio**0,5
V= 4/3 * pi * raio **3

round(A,3)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    round(A,3)
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:07:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi

A = pi * raio**0,5
V= 4/3 * pi * raio **3




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    round(A,3)
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:07:37) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi

A = pi * raio**0.5
V= 4/3 * pi * raio **3




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    round(A,3)
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:07:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi

A = pi * raio**0.5




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    round(A,3)
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:08:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi

A = pi * raio **0.5




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    round(A,3)
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:08:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi

A = pi * raio **0.5




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    round(A,3)
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:09:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi

A= pi * raio**0.5




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    round(A,3)
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:09:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi

A= pi * raio**0.5




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    round(A,3)
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:10:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi

A= pi * raio**0.5
V= 4/3 * pi * raio**3




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    round(A,3)
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:10:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi

A= pi * raio**0.5
V= 4/3 * pi * raio**3
print(A)



-- OUTPUT:
6.664324407237548
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:11:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi

A= pi * raio**0.5
V= 4/3 * pi * raio**3
print(A)
print(V)



-- OUTPUT:
6.664324407237548
381.7035074111598
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:12:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi

A= pi * raio**0.5
V= 4/3 * pi * raio**3
print(round(A, 3)
print(round(V, 3)



-- ERROR:
File "XXXX", line 10
    print(round(V, 3)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:12:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi

A= pi * raio**0.5
V= 4/3 * pi * raio**3
print(round(A, 3))
print(round(V, 3))



-- OUTPUT:
6.664
381.704
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 16:12:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi

A= pi * raio**0.5
V= 4/3 * pi * raio**3
print(round(A, 3))
print(round(V, 3))



-- EXECUTION TIME:
0.171222
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
6.664
381.704
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
11.036
7871.076
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 16:12:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi

A= pi * raio**0.5
V= 4/3 * pi * raio**3
print(round(A, 3))
print(round(V, 3))



-- EXECUTION TIME:
0.174573
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
6.664
381.704
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
11.036
7871.076
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:12:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi

A= pi * raio**0.5
V= 4/3 * pi * raio**3
print(round(A, 3))
print(round(V, 3))



-- OUTPUT:
6.664
381.704
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 16:13:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi

A= pi * raio**0.5
V= 4/3 * pi * raio**3
print(round(A, 3))
print(round(V, 3))



-- EXECUTION TIME:
0.200433
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
6.664
381.704
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
11.036
7871.076
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:13:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi

A= pi * raio**0.5
V= 4/3 * pi * raio**3
print(round(A, 3))
print(round(V, 3))



-- OUTPUT:
6.664
381.704
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:14:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi

A= pi * raio**0.5
V= 4/3 * pi * raio**0.3
print(round(A, 3))
print(round(V, 3))



-- OUTPUT:
6.664
6.577
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 16:14:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi

A= pi * raio**0.5
V= 4/3 * pi * raio**0.3
print(round(A, 3))
print(round(V, 3))



-- EXECUTION TIME:
0.188862
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
6.664
6.577
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
11.036
8.902
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:14:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi

A= pi * raio**2
V= 4/3 * pi * raio**3
print(round(A, 3))
print(round(V, 3))



-- OUTPUT:
63.617
381.704
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 16:14:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("insira o raio:"))
from math import pi

A= pi * raio**2
V= 4/3 * pi * raio**3
print(round(A, 3))
print(round(V, 3))



-- EXECUTION TIME:
0.122334
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.617
381.704
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.388
7871.076
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
