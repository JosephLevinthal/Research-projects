== TEST (2019-05-09 10:59:04) 
-- CODE:
numA = int(input("Numero de habitantes da cidade A:"))
numB = int(input("Numero de habitantes da cidade A:"))
taxA = int(input("Percentual de crescimento de A:"))
taxB = int(input("Percentual de crescimento de A:"))
ano = 0
while(numA >= numB):
	ano = ano + 1
	numA = numA * taxA
	numB = numB * taxB
print(ano)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    taxA = int(input())
ValueError: invalid literal for int() with base 10: '35.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:00:14) 
-- CODE:
numA = int(input("Numero de habitantes da cidade A:"))
numB = int(input("Numero de habitantes da cidade A:"))
taxA = int(input("Percentual de crescimento de A:"))
taxB = int(input("Percentual de crescimento de A:"))
ano = 0
while(numA >= numB):
	ano = ano + 1
	numA = numA * (taxA / 100)
	numB = numB * taxB / 100)
print(ano)
	
-- ERROR:
File "XXXX", line 9
    numB = numB * taxB / 100)
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:00:21) 
-- CODE:
numA = int(input("Numero de habitantes da cidade A:"))
numB = int(input("Numero de habitantes da cidade A:"))
taxA = int(input("Percentual de crescimento de A:"))
taxB = int(input("Percentual de crescimento de A:"))
ano = 0
while(numA >= numB):
	ano = ano + 1
	numA = numA * (taxA / 100)
	numB = numB * (taxB / 100)
print(ano)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    taxA = int(input())
ValueError: invalid literal for int() with base 10: '35.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:00:36) 
-- CODE:
numA = int(input("Numero de habitantes da cidade A:"))
numB = int(input("Numero de habitantes da cidade B:"))
taxA = int(input("Percentual de crescimento de A:"))
taxB = int(input("Percentual de crescimento de b:"))
ano = 0
while(numA >= numB):
	ano = ano + 1
	numA = numA * (taxA / 100)
	numB = numB * (taxB / 100)
print(ano)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    taxA = int(input())
ValueError: invalid literal for int() with base 10: '35.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:00:53) 
-- CODE:
numA = int(input("Numero de habitantes da cidade A:"))
numB = int(input("Numero de habitantes da cidade B:"))
taxA = int(input("Percentual de crescimento de A:"))
taxB = int(input("Percentual de crescimento de b:"))
ano = 0
while(numA >= numB):
	ano = ano + 1
	numA = numA * (taxA / 100)
	numB = numB * (taxB / 100)
print(ano)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    taxA = int(input())
ValueError: invalid literal for int() with base 10: '35.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:01:07) 
-- CODE:
numA = int(input("Numero de habitantes da cidade A:"))
numB = int(input("Numero de habitantes da cidade B:"))
taxA = float(input("Percentual de crescimento de A:"))
taxB = float(input("Percentual de crescimento de b:"))
ano = 0
while(numA >= numB):
	ano = ano + 1
	numA = numA * (taxA / 100)
	numB = numB * (taxB / 100)
print(ano)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    taxA = int(input())
ValueError: invalid literal for int() with base 10: '35.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:02:06) 
-- CODE:
numA = int(input("Numero de habitantes da cidade A:"))
numB = int(input("Numero de habitantes da cidade B:"))
taxA = float(input("Percentual de crescimento de A:"))
taxB = float(input("Percentual de crescimento de b:"))
ano = 0
while(numA < numB):
	ano = ano + 1
	numA = numA * (taxA / 100)
	numB = numB * (taxB / 100)
print(ano)
	
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:05:16) 
-- CODE:
numA = int(input("Numero de habitantes da cidade A:"))
numB = int(input("Numero de habitantes da cidade B:"))
taxA = float(input("Percentual de crescimento de A:"))
taxB = float(input("Percentual de crescimento de b:"))
ano = 0
while(numA < numB):
	ano = ano + 1
	numA = numA * (taxA / 100)
	numB = numB * (taxB / 100)
	ano = ano + 1
print(ano)
	
-- OUTPUT:
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:06:14) 
-- CODE:
numA = int(input("Numero de habitantes da cidade A:"))
numB = int(input("Numero de habitantes da cidade B:"))
taxA = float(input("Percentual de crescimento de A:"))
taxB = float(input("Percentual de crescimento de b:"))
ano = 0
while(numA < numB):
	ano = ano + x 
	numA = numA * (taxA / 100)
	numB = numB * (taxB / 100)
	x = ano + 1
print(ano)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    ano = ano + x 
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:06:46) 
-- CODE:
numA = int(input("Numero de habitantes da cidade A:"))
numB = int(input("Numero de habitantes da cidade B:"))
taxA = float(input("Percentual de crescimento de A:"))
taxB = float(input("Percentual de crescimento de b:"))
ano = 0
while(numA < numB):
	x = ano + 1
	numA = numA * (taxA / 100)
	numB = numB * (taxB / 100)
	ano = ano + x 
print(ano)
	
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:10:12) 
-- CODE:
numA = int(input("Numero de habitantes da cidade A:"))
numB = int(input("Numero de habitantes da cidade B:"))
taxA = float(input("Percentual de crescimento de A:"))
taxB = float(input("Percentual de crescimento de b:"))
ano = 0
while(numA < numB):
	x = ano + 1
	crea = numA * (taxA / 100)
	creb = numB * (taxB / 100)
	numA = numA + crea
	numB = numB + creb
print(ano)
	
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-09 11:10:48) 
-- CODE:
numA = int(input("Numero de habitantes da cidade A:"))
numB = int(input("Numero de habitantes da cidade B:"))
taxA = float(input("Percentual de crescimento de A:"))
taxB = float(input("Percentual de crescimento de b:"))
ano = 0
while(numA < numB):
	ano = ano + 1
	crea = numA * (taxA / 100)
	creb = numB * (taxB / 100)
	numA = numA + crea
	numB = numB + creb
print(ano)
	
-- EXECUTION TIME:
0.155448
-- TEST CASE 1:
---- input:
250150
580000
35.5
10.5
---- correct output:
5
---- user output:
5
-- TEST CASE 2:
---- input:
180250
1200000
10.25
5.7
---- correct output:
45
---- user output:
45
-- TEST CASE 3:
---- input:
1000000
1650000
12.75
3.2
---- correct output:
6
---- user output:
6
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
