== TEST (2019-04-30 10:25:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Insira a coordenada A:")
b = float(input("Insira a coordenada B:")
c = float(input("Insira a coordenada C:")
d = float(input("Insira a coordenada D:")
			 
if( b < a and d < c):
	print("Intervalo 1:" a, b
			"Intervalo 2:" c, d
			 "Nao ha intersecao")
			 
-- ERROR:
File "XXXX", line 5
    b = float(input()
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:26:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Insira a coordenada A:"))
b = float(input("Insira a coordenada B:"))
c = float(input("Insira a coordenada C:"))
d = float(input("Insira a coordenada D:"))
			 
if( b < a and d < c):
	print("Intervalo 1:" a, b
			"Intervalo 2:" c, d
			 "Nao ha intersecao")
			 
-- ERROR:
File "XXXX", line 10
    print("Intervalo 1:" a, b
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:26:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Insira a coordenada A:"))
b = float(input("Insira a coordenada B:"))
c = float(input("Insira a coordenada C:"))
d = float(input("Insira a coordenada D:"))
			 
if( b < a and d < c):
	print("Intervalo 1:" a, b)
			 
-- ERROR:
File "XXXX", line 10
    print("Intervalo 1:" a, b)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:26:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Insira a coordenada A:"))
b = float(input("Insira a coordenada B:"))
c = float(input("Insira a coordenada C:"))
d = float(input("Insira a coordenada D:"))
			 
if( b < a and d < c):
	print("Intervalo 1:" ,a, b
			"Intervalo 2:" ,c, d
			 "Nao ha intersecao")
			 
-- ERROR:
File "XXXX", line 11
    "Intervalo 2:" ,c, d
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:26:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Insira a coordenada A:"))
b = float(input("Insira a coordenada B:"))
c = float(input("Insira a coordenada C:"))
d = float(input("Insira a coordenada D:"))
			 
if( b < a and d < c):
	print("Intervalo 1:" , a, b
			"Intervalo 2:" , c, d
			 "Nao ha intersecao")
			 
-- ERROR:
File "XXXX", line 11
    "Intervalo 2:" , c, d
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:27:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Insira a coordenada A:"))
b = float(input("Insira a coordenada B:"))
c = float(input("Insira a coordenada C:"))
d = float(input("Insira a coordenada D:"))
			 
if( b < a and d < c):
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Nao ha intersecao")
			 
-- ERROR:
File "XXXX", line 11
    "Intervalo 2:" , c, d
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:33:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Insira a coordenada A:"))
b = float(input("Insira a coordenada B:"))
c = float(input("Insira a coordenada C:"))
d = float(input("Insira a coordenada D:"))
			 
if( b < a or d < c):
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Entradas invalidas")
elif( b>= a and c>= d or b>=d and c>=a):
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Ha intersecao")
else:
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Nao ha intersecao")
-- OUTPUT:
Intervalo 1: 1.0 2.0
Intervalo 2: 4.0 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:33:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Insira a coordenada A:"))
b = float(input("Insira a coordenada B:"))
c = float(input("Insira a coordenada C:"))
d = float(input("Insira a coordenada D:"))
			 
if( b < a or d < c):
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Entradas invalidas")
elif( b>= a and c>= d or b>=d and c>=a):
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Ha intersecao")
else:
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Nao ha intersecao")
-- EXECUTION TIME:
0.124498
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 2.0
Intervalo 2: 4.0 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 5.0
Intervalo 2: 2.5 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 -3.0
Intervalo 2: 1.0 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:35:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Insira a coordenada A:"))
b = float(input("Insira a coordenada B:"))
c = float(input("Insira a coordenada C:"))
d = float(input("Insira a coordenada D:"))
			 
if( b < a or d < c):
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Entradas invalidas")
elif( b>= a and c>= d or b>=d and c>=a):
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Ha intersecao")
else:
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Nao ha intersecao")
-- OUTPUT:
Intervalo 1: 1.0 2.0
Intervalo 2: 4.0 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:35:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Insira a coordenada A:"))
b = float(input("Insira a coordenada B:"))
c = float(input("Insira a coordenada C:"))
d = float(input("Insira a coordenada D:"))
			 
if( b < a or d < c):
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Entradas invalidas")
elif( b>= a and c>= d or b>=d and c>=a):
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Ha intersecao")
else:
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Nao ha intersecao")
-- EXECUTION TIME:
0.117116
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 2.0
Intervalo 2: 4.0 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 5.0
Intervalo 2: 2.5 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 -3.0
Intervalo 2: 1.0 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:35:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Insira a coordenada A:"))
b = float(input("Insira a coordenada B:"))
c = float(input("Insira a coordenada C:"))
d = float(input("Insira a coordenada D:"))
			 
if( b < a or d < c):
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Entradas invalidas")
elif( b>= a and c>= d or b>=d and c>=a):
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Ha intersecao")
else:
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Nao ha intersecao")
-- EXECUTION TIME:
0.133998
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 2.0
Intervalo 2: 4.0 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.0 2.0
Intervalo 2: 4.0 5.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: 1.0 2.0
Intervalo 2: 4.0 5.0
Nao ha intersecao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:35:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Insira a coordenada A:"))
b = float(input("Insira a coordenada B:"))
c = float(input("Insira a coordenada C:"))
d = float(input("Insira a coordenada D:"))
			 
if( b < a or d < c):
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Entradas invalidas")
elif( b>= a and c>= d or b>=d and c>=a):
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Ha intersecao")
else:
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Nao ha intersecao")
-- EXECUTION TIME:
0.149232
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 2.0
Intervalo 2: 4.0 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:

-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: 1.5 5.0
Intervalo 2: 2.5 3.0
Ha intersecao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:35:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Insira a coordenada A:"))
b = float(input("Insira a coordenada B:"))
c = float(input("Insira a coordenada C:"))
d = float(input("Insira a coordenada D:"))
			 
if( b < a or d < c):
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Entradas invalidas")
elif( b>= a and c>= d or b>=d and c>=a):
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Ha intersecao")
else:
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Nao ha intersecao")
-- EXECUTION TIME:
0.207567
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 2.0
Intervalo 2: 4.0 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.0 2.0
Intervalo 2: 4.0 5.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: 1.5 5.0
Intervalo 2: 2.5 3.0
Ha intersecao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:35:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Insira a coordenada A:"))
b = float(input("Insira a coordenada B:"))
c = float(input("Insira a coordenada C:"))
d = float(input("Insira a coordenada D:"))
			 
if( b < a or d < c):
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Entradas invalidas")
elif( b>= a and c>= d or b>=d and c>=a):
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Ha intersecao")
else:
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Nao ha intersecao")
-- EXECUTION TIME:
0.202022
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.5 5.0
Intervalo 2: 2.5 3.0
Ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:

-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: 1.5 5.0
Intervalo 2: 2.5 3.0
Ha intersecao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:35:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Insira a coordenada A:"))
b = float(input("Insira a coordenada B:"))
c = float(input("Insira a coordenada C:"))
d = float(input("Insira a coordenada D:"))
			 
if( b < a or d < c):
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Entradas invalidas")
elif( b>= a and c>= d or b>=d and c>=a):
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Ha intersecao")
else:
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Nao ha intersecao")
-- EXECUTION TIME:
0.320041
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 2.0
Intervalo 2: 4.0 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: -1.0 -3.0
Intervalo 2: 1.0 3.0
Entradas invalidas
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:35:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Insira a coordenada A:"))
b = float(input("Insira a coordenada B:"))
c = float(input("Insira a coordenada C:"))
d = float(input("Insira a coordenada D:"))
			 
if( b < a or d < c):
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Entradas invalidas")
elif( b>= a and c>= d or b>=d and c>=a):
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Ha intersecao")
else:
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Nao ha intersecao")
-- EXECUTION TIME:
0.422271
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 2.0
Intervalo 2: 4.0 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 5.0
Intervalo 2: 2.5 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: 1.5 5.0
Intervalo 2: 2.5 3.0
Ha intersecao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:35:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Insira a coordenada A:"))
b = float(input("Insira a coordenada B:"))
c = float(input("Insira a coordenada C:"))
d = float(input("Insira a coordenada D:"))
			 
if( b < a or d < c):
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Entradas invalidas")
elif( b>= a and c>= d or b>=d and c>=a):
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Ha intersecao")
else:
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Nao ha intersecao")
-- EXECUTION TIME:
0.43562
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 2.0
Intervalo 2: 4.0 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: -1.0 -3.0
Intervalo 2: 1.0 3.0
Entradas invalidas
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 -3.0
Intervalo 2: 1.0 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:35:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Insira a coordenada A:"))
b = float(input("Insira a coordenada B:"))
c = float(input("Insira a coordenada C:"))
d = float(input("Insira a coordenada D:"))
			 
if( b < a or d < c):
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Entradas invalidas")
elif( b>= a and c>= d or b>=d and c>=a):
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Ha intersecao")
else:
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Nao ha intersecao")
-- EXECUTION TIME:
0.394661
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 2.0
Intervalo 2: 4.0 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: -1.0 -3.0
Intervalo 2: 1.0 3.0
Entradas invalidas
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:35:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Insira a coordenada A:"))
b = float(input("Insira a coordenada B:"))
c = float(input("Insira a coordenada C:"))
d = float(input("Insira a coordenada D:"))
			 
if( b < a or d < c):
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Entradas invalidas")
elif( b>= a and c>= d or b>=d and c>=a):
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Ha intersecao")
else:
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Nao ha intersecao")
-- EXECUTION TIME:
0.509757
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 2.0
Intervalo 2: 4.0 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: -1.0 -3.0
Intervalo 2: 1.0 3.0
Entradas invalidas
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:35:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Insira a coordenada A:"))
b = float(input("Insira a coordenada B:"))
c = float(input("Insira a coordenada C:"))
d = float(input("Insira a coordenada D:"))
			 
if( b < a or d < c):
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Entradas invalidas")
elif( b>= a and c>= d or b>=d and c>=a):
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Ha intersecao")
else:
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Nao ha intersecao")
-- EXECUTION TIME:
0.649074
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1674/1104/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:35:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Insira a coordenada A:"))
b = float(input("Insira a coordenada B:"))
c = float(input("Insira a coordenada C:"))
d = float(input("Insira a coordenada D:"))
			 
if( b < a or d < c):
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Entradas invalidas")
elif( b>= a and c>= d or b>=d and c>=a):
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Ha intersecao")
else:
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Nao ha intersecao")
-- EXECUTION TIME:
0.435303
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.5 5.0
Intervalo 2: 2.5 3.0
Ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: -1.0 -3.0
Intervalo 2: 1.0 3.0
Entradas invalidas
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:37:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Insira a coordenada A:"))
b = float(input("Insira a coordenada B:"))
c = float(input("Insira a coordenada C:"))
d = float(input("Insira a coordenada D:"))
			 
if( b < a or d < c):
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Entradas invalidas")
elif( c>=a and c<=b or d>=a and d<=b):
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Ha intersecao")
else:
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Nao ha intersecao")
-- EXECUTION TIME:
0.145271
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 2.0
Intervalo 2: 4.0 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 5.0
Intervalo 2: 2.5 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 -3.0
Intervalo 2: 1.0 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:37:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Insira a coordenada A:"))
b = float(input("Insira a coordenada B:"))
c = float(input("Insira a coordenada C:"))
d = float(input("Insira a coordenada D:"))
			 
if( b < a or d < c):
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Entradas invalidas")
elif( (c>=a) and (c<=b) or (d>=a) and (d<=b):
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Ha intersecao")
else:
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Nao ha intersecao")
-- EXECUTION TIME:
0.152041
-- ERROR:
  File "/home/codebench/codes/1674/1104/main.py", line 13
    elif( (c>=a) and (c<=b) or (d>=a) and (d<=b):
                                                ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:37:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Insira a coordenada A:"))
b = float(input("Insira a coordenada B:"))
c = float(input("Insira a coordenada C:"))
d = float(input("Insira a coordenada D:"))
			 
if( b < a or d < c):
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Entradas invalidas")
elif( (c>=a) and (c<=b) or (d>=a) and (d<=b):
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Ha intersecao")
else:
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Nao ha intersecao")
-- EXECUTION TIME:
0.130732
-- ERROR:
  File "/home/codebench/codes/1674/1104/main.py", line 13
    elif( (c>=a) and (c<=b) or (d>=a) and (d<=b):
                                                ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:37:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Insira a coordenada A:"))
b = float(input("Insira a coordenada B:"))
c = float(input("Insira a coordenada C:"))
d = float(input("Insira a coordenada D:"))
			 
if( b < a or d < c):
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Entradas invalidas")
elif( (c>=a) and (c<=b) or (d>=a) and (d<=b):
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Ha intersecao")
else:
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Nao ha intersecao")
-- EXECUTION TIME:
0.179229
-- ERROR:
  File "/home/codebench/codes/1674/1104/main.py", line 13
    elif( (c>=a) and (c<=b) or (d>=a) and (d<=b):
                                                ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:37:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Insira a coordenada A:"))
b = float(input("Insira a coordenada B:"))
c = float(input("Insira a coordenada C:"))
d = float(input("Insira a coordenada D:"))
			 
if( b < a or d < c):
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Entradas invalidas")
elif( (c>=a) and (c<=b) or (d>=a) and (d<=b):
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Ha intersecao")
else:
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Nao ha intersecao")
-- EXECUTION TIME:
0.165447
-- ERROR:
  File "/home/codebench/codes/1674/1104/main.py", line 13
    elif( (c>=a) and (c<=b) or (d>=a) and (d<=b):
                                                ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:37:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Insira a coordenada A:"))
b = float(input("Insira a coordenada B:"))
c = float(input("Insira a coordenada C:"))
d = float(input("Insira a coordenada D:"))
			 
if( b < a or d < c):
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Entradas invalidas")
elif( (c>=a) and (c<=b) or (d>=a) and (d<=b)):
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Ha intersecao")
else:
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Nao ha intersecao")
-- EXECUTION TIME:
0.147021
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 2.0
Intervalo 2: 4.0 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 5.0
Intervalo 2: 2.5 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 -3.0
Intervalo 2: 1.0 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:37:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Insira a coordenada A:"))
b = float(input("Insira a coordenada B:"))
c = float(input("Insira a coordenada C:"))
d = float(input("Insira a coordenada D:"))
			 
if( b < a or d < c):
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Entradas invalidas")
elif( (c>=a) and (c<=b) or (d>=a) and (d<=b)):
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Ha intersecao")
else:
	print("Intervalo 1:" , a, b)
	print("Intervalo 2:" , c, d)
	print("Nao ha intersecao")
-- EXECUTION TIME:
0.132795
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 2.0
Intervalo 2: 4.0 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 5.0
Intervalo 2: 2.5 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 -3.0
Intervalo 2: 1.0 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:38:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Insira a coordenada A:"))
b = float(input("Insira a coordenada B:"))
c = float(input("Insira a coordenada C:"))
d = float(input("Insira a coordenada D:"))
			 
if( b < a or d < c):
	print("Intervalo 1:" , a,",", b)
	print("Intervalo 2:" , c,",",  d)
	print("Entradas invalidas")
elif( (c>=a) and (c<=b) or (d>=a) and (d<=b)):
	print("Intervalo 1:" , a,",",  b)
	print("Intervalo 2:" , c,",",  d)
	print("Ha intersecao")
else:
	print("Intervalo 1:" , a,",",  b)
	print("Intervalo 2:" , c,",",  d)
	print("Nao ha intersecao")
-- EXECUTION TIME:
0.187704
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
