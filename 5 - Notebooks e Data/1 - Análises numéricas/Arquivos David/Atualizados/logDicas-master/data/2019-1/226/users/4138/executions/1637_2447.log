== TEST (2019-04-06 18:32:09) 
-- CODE:
preco = float(input("insira o preco: "))
pagamento = float(input("insira o valor a ser pago: "))

if (preco > pagamento)
	mensagem = "Troco de " + (pagamento - preco)
else:
	mensagem = "Troco de " + (preco - pagamento)
	
print(mensagem)
-- ERROR:
File "XXXX", line 4
    if (preco > pagamento)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 18:32:21) 
-- CODE:
preco = float(input("insira o preco: "))
pagamento = float(input("insira o valor a ser pago: "))

if (preco > pagamento):
	mensagem = "Troco de " + (pagamento - preco)
else:
	mensagem = "Troco de " + (preco - pagamento)
	
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    mensagem = "Troco de " + (pagamento - preco)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 18:33:24) 
-- CODE:
preco = float(input("insira o preco: "))
pagamento = float(input("insira o valor a ser pago: "))

if (preco > pagamento):
	mensagem = "Troco de " + (pagamento - preco)
else:
	mensagem = "Troco de " + (preco - pagamento)
	
print(round(mensagem,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    mensagem = "Troco de " + (pagamento - preco)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 18:34:09) 
-- CODE:
preco = float(input("insira o preco: "))
pagamento = float(input("insira o valor a ser pago: "))

if ( pagamento > preco):
	mensagem = "Troco de " + (pagamento - preco)
else:
	mensagem = "Troco de " + (preco - pagamento)
	
print(round(mensagem,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    mensagem = "Troco de " + (preco - pagamento)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 18:34:56) 
-- CODE:
preco = float(input("insira o preco: "))
pagamento = float(input("insira o valor a ser pago: "))

if ( pagamento > preco):
	mensagem = "Troco de " + (pagamento) - (preco)
else:
	mensagem = "Troco de " + (preco - pagamento)
	
print(round(mensagem,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    mensagem = "Troco de " + (preco - pagamento)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 18:41:02) 
-- CODE:
preco = float(input("insira o preco: "))
pagamento = float(input("insira o valor a ser pago: "))

y = preco
Z = pagamento
if ( pagamento > preco):
	mensagem = "Troco de " + (z - y)
else:
	mensagem = "Troco de " + (y -z)
	
print(round(mensagem,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    mensagem = "Troco de " + (y -z)
NameError: name 'z' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 18:42:17) 
-- CODE:
preco = float(input("insira o preco: "))
pagamento = float(input("insira o valor a ser pago: "))

y = preco
z = pagamento
if ( pagamento > preco):
	mensagem = "Troco de " + (Z - y)
else:
	mensagem = "Troco de " + (y -z)
	
print(round(mensagem,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    mensagem = "Troco de " + (y -z)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 18:42:31) 
-- CODE:
preco = float(input("insira o preco: "))
pagamento = float(input("insira o valor a ser pago: "))

y = preco
z = pagamento
if ( pagamento > preco):
	mensagem = "Troco de " + (z - y)
else:
	mensagem = "Troco de " + (y -z)
	
print(round(mensagem,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    mensagem = "Troco de " + (y -z)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 18:55:13) 
-- CODE:
preco = float(input("insira o preco: "))
pagamento = float(input("insira o valor a ser pago: "))

x =  preco - pagamento
Y = pagamento - preco

if ( pagamento > preco):
	mensagem = "Falta " + X
else:
	mensagem = "Troco de " + Y
	
print(round(mensagem,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    mensagem = "Troco de " + Y
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 18:55:31) 
-- CODE:
preco = float(input("insira o preco: "))
pagamento = float(input("insira o valor a ser pago: "))

X =  preco - pagamento
Y = pagamento - preco

if ( pagamento > preco):
	mensagem = "Falta " + X
else:
	mensagem = "Troco de " + Y
	
print(round(mensagem,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    mensagem = "Troco de " + Y
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 18:56:29) 
-- CODE:
preco = float(input("insira o preco: "))
pagamento = float(input("insira o valor a ser pago: "))

X = float(preco - pagamento)
Y = float(pagamento - preco)

if ( pagamento > preco):
	mensagem = "Falta " + X
else:
	mensagem = "Troco de " + Y
	
print(round(mensagem,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    mensagem = "Troco de " + Y
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 19:01:31) 
-- CODE:
preco = float(input("insira o preco: "))
pagamento = float(input("insira o valor a ser pago: "))

X = preco
Y = pagamento

if ( pagamento > preco):
	mensagem = "Falta " + (X - pagamento)
else:
	mensagem = "Troco de " + (Y - preco)
	
print(round(mensagem,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    mensagem = "Troco de " + (Y - preco)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 19:06:00) 
-- CODE:
preco = float(input("insira o preco: "))
pagamento = float(input("insira o valor a ser pago: "))

if ( pagamento > preco):
	mensagem = "Falta " + X
else:
	mensagem = "Troco de " + Y
	
print(round(mensagem,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    mensagem = "Troco de " + Y
NameError: name 'Y' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 19:07:12) 
-- CODE:
preco = float(input("insira o preco: "))
pagamento = float(input("insira o valor a ser pago: "))

X = pagamento

if ( pagamento > preco):
	mensagem = "Falta " + X
else:
	mensagem = "Troco de " + Y
	
print(round(mensagem,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    mensagem = "Troco de " + Y
NameError: name 'Y' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 19:07:57) 
-- CODE:
preco = float(input("insira o preco: "))
pagamento = float(input("insira o valor a ser pago: "))

X = pagamento

if ( pagamento > preco):
	mensagem = (" Falta " + X)
else:
	mensagem = "Troco de " + Y
	
print(round(mensagem,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    mensagem = "Troco de " + Y
NameError: name 'Y' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 19:10:42) 
-- CODE:
preco = float(input("insira o preco: "))
pagamento = float(input("insira o valor a ser pago: "))

X = pagamento - preco
Y = preco - pagamento
if ( pagamento > preco):
	mensagem = " Falta " + X 
else:
	mensagem = "Troco de " + Y
	
print(round(mensagem,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    mensagem = "Troco de " + Y
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 19:12:04) 
-- CODE:
preco = float(input("insira o preco: "))
pagamento = float(input("insira o valor a ser pago: "))

X = pagamento - preco
Y = preco - pagamento
if ( pagamento > preco):
	mensagem =  "Falta" + (X)
else:
	mensagem = "Troco de " + (Y)
	
print(round(mensagem,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    mensagem = "Troco de " + (Y)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 19:12:53) 
-- CODE:
preco = float(input("insira o preco: "))
pagamento = float(input("insira o valor a ser pago: "))

X = pagamento - preco
Y = preco - pagamento
if ( pagamento > preco):
	mensagem =  Falta + (X)
else:
	mensagem = Troco de  + (Y)
	
print(round(mensagem,2))
-- ERROR:
File "XXXX", line 9
    mensagem = Troco de  + (Y)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 19:13:08) 
-- CODE:
preco = float(input("insira o preco: "))
pagamento = float(input("insira o valor a ser pago: "))

X = pagamento - preco
Y = preco - pagamento
if ( pagamento > preco):
	mensagem =  Falta + (X)
else:
	mensagem = Troco de + (Y)
	
print(round(mensagem,2))
-- ERROR:
File "XXXX", line 9
    mensagem = Troco de + (Y)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 19:13:46) 
-- CODE:
preco = float(input("insira o preco: "))
pagamento = float(input("insira o valor a ser pago: "))

X = pagamento - preco
Y = preco - pagamento
if ( pagamento > preco):
	mensagem =  Falta + X
else:
	mensagem = Troco de + Y
	
print(round(mensagem,2))
-- ERROR:
File "XXXX", line 9
    mensagem = Troco de + Y
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 19:14:14) 
-- CODE:
preco = float(input("insira o preco: "))
pagamento = float(input("insira o valor a ser pago: "))

X = pagamento - preco
Y = preco - pagamento
if ( pagamento > preco):
	mensagem =  Falta + X
else:
	mensagem = "Troco de" + Y
	
print(round(mensagem,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    mensagem = "Troco de" + Y
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 19:14:38) 
-- CODE:
preco = float(input("insira o preco: "))
pagamento = float(input("insira o valor a ser pago: "))

X = pagamento - preco
Y = preco - pagamento
if ( pagamento > preco):
	mensagem =  "Falta" + X
else:
	mensagem = "Troco de" + Y
	
print(round(mensagem,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    mensagem = "Troco de" + Y
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 19:18:15) 
-- CODE:
x = float(input("insira o preco: "))
y = float(input("insira o valor a ser pago: "))

X = x - y
Y = y - x
if ( x > y):
	mensagem =  "Falta" + X
else:
	mensagem = "Troco de" + Y
	
print(round(mensagem,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    mensagem =  "Falta" + X
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 19:18:44) 
-- CODE:
x = float(input("insira o preco: "))
y = float(input("insira o valor a ser pago: "))

X = x - y
Y = y - x

if ( x > y):
	mensagem =  "Falta " + X
else:
	mensagem = "Troco de " + Y
	
print(round(mensagem,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    mensagem =  "Falta " + X
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 19:21:55) 
-- CODE:
x = float(input("insira o preco: "))
y = float(input("insira o valor a ser pago: "))

X = x - y
Y = y - x

if ( x > y):
	mensagem =  "Falta " X
else:
	mensagem = "Troco de " Y
	
print(round(mensagem,2))
-- ERROR:
File "XXXX", line 8
    mensagem =  "Falta " X
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 19:22:17) 
-- CODE:
x = float(input("insira o preco: "))
y = float(input("insira o valor a ser pago: "))

X = x - y
Y = y - x

if ( x > y):
	mensagem =  "Falta " + X
else:
	mensagem = "Troco de " + Y
	
print(round(mensagem,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    mensagem =  "Falta " + X
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 19:55:17) 
-- CODE:
X = float(input("insira o preco: "))
Y = float(input("insira o valor a ser pago: "))



if ( X > Y):
	mensagem =  "Falta " + X
else:
	mensagem = "Troco de " + Y
	
print(round(mensagem,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    mensagem =  "Falta " + X
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 19:57:47) 
-- CODE:
x = float(input("insira o preco: "))
y = float(input("insira o pagamento: "))

X = x - y
Y = y -x
if ( x > y):
	mensagem =  "Falta " + X
else:
	mensagem = "Troco de " + Y
	
print(round(mensagem,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    mensagem =  "Falta " + X
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 19:58:15) 
-- CODE:
x = float(input("insira o preco: "))
y = float(input("insira o pagamento: "))

X = x - y
Y = y -x
if ( x > y):
	mensagem =  " Falta " + X
else:
	mensagem = " Troco de " + Y
	
print(round(mensagem,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    mensagem =  " Falta " + X
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 19:59:00) 
-- CODE:
x = float(input("insira o preco: "))
y = float(input("insira o pagamento: "))

X = x - y
Y = y -x
if ( x > y):
	mensagem =  " Falta " + (X)
else:
	mensagem = " Troco de " + (Y)
	
print(round(mensagem,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    mensagem =  " Falta " + (X)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 20:01:19) 
-- CODE:
x = float(input("insira o preco: "))
y = float(input("insira o pagamento: "))

X = x - y
Y = y - x

if ( x > y):
	mensagem =  " Falta " (X)
else:
	mensagem = " Troco de " (Y)
	
print(round(mensagem,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    mensagem =  " Falta " (X)
TypeError: 'str' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 20:03:10) 
-- CODE:
x = float(input("insira o preco: "))
y = float(input("insira o pagamento: "))

X = x - y
Y = y - x

if ( x > y):
	mensagem = X
	print("falta" + round(X,2))
else:
	mensagem = Y
	print("troco de" + round(Y,2))
	
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print("falta" + round(X,2))
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 20:04:06) 
-- CODE:
x = float(input("insira o preco: "))
y = float(input("insira o pagamento: "))

X = x - y
Y = y - x

if ( x > y):
	mensagem = X
	print("falta" + round(X,2))
else:
	mensagem = Y
	print("troco de" + round(Y,2))
	
	

-- EXECUTION TIME:
0.14811
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1637/2447/main.py", line 9, in <module>
    print("falta" + round(X,2))
TypeError: Can't convert 'float' object to str implicitly

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 20:04:08) 
-- CODE:
x = float(input("insira o preco: "))
y = float(input("insira o pagamento: "))

X = x - y
Y = y - x

if ( x > y):
	mensagem = X
	print("falta" + round(X,2))
else:
	mensagem = Y
	print("troco de" + round(Y,2))
	
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print("falta" + round(X,2))
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 20:04:42) 
-- CODE:
x = float(input("insira o preco: "))
y = float(input("insira o pagamento: "))

X = x - y
Y = y - x

if ( x > y):
	mensagem = X
	print("falta" + round(X,2))
else:
	mensagem = Y
	print("troco " + "de " + round(Y,2))
	
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print("falta" + round(X,2))
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 20:05:39) 
-- CODE:
x = float(input("insira o preco: "))
y = float(input("insira o pagamento: "))

X = x - y
Y = y - x

if ( x > y):
	mensagem = X
	print("falta" + round(X,2))
else:
	mensagem = Y
	print("troco de " + round(Y,2))
	
	

-- EXECUTION TIME:
0.238537
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1637/2447/main.py", line 9, in <module>
    print("falta" + round(X,2))
TypeError: Can't convert 'float' object to str implicitly

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 20:06:26) 
-- CODE:
x = float(input("insira o preco: "))
y = float(input("insira o pagamento: "))

X = x - y
Y = y - x

if ( x > y):
	mensagem = X
	print("falta") + print(round(X,2))
else:
	mensagem = Y
	print("troco de ") + print(round(Y,2))
	
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print("falta") + print(round(X,2))
TypeError: unsupported operand type(s) for +: 'NoneType' and 'NoneType'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 20:07:25) 
-- CODE:
x = float(input("insira o preco: "))
y = float(input("insira o pagamento: "))

X = x - y
Y = y - x

if ( x > y):
	mensagem = X
	print("falta", round(X,2))
else:
	mensagem = Y
	print("troco de ", round(Y,2))
	
	

-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 20:07:37) 
-- CODE:
x = float(input("insira o preco: "))
y = float(input("insira o pagamento: "))

X = x - y
Y = y - x

if ( x > y):
	mensagem = X
	print("falta", round(X,2))
else:
	mensagem = Y
	print("troco de ", round(Y,2))
	
	

-- EXECUTION TIME:
0.14933
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco de  28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco de  0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 20:08:01) 
-- CODE:
x = float(input("insira o preco: "))
y = float(input("insira o pagamento: "))

X = x - y
Y = y - x

if ( x > y):
	mensagem = X
	print("falta", round(X,2))
else:
	mensagem = Y
	print("troco de ", round(Y,2))
	
	

-- EXECUTION TIME:
0.168163
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco de  28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco de  0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 20:08:03) 
-- CODE:
x = float(input("insira o preco: "))
y = float(input("insira o pagamento: "))

X = x - y
Y = y - x

if ( x > y):
	mensagem = X
	print("falta", round(X,2))
else:
	mensagem = Y
	print("troco de ", round(Y,2))
	
	

-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 20:08:19) 
-- CODE:
x = float(input("insira o preco: "))
y = float(input("insira o pagamento: "))

X = x - y
Y = y - x

if ( x > y):
	mensagem = X
	print("Falta", round(X,2))
else:
	mensagem = Y
	print("Troco de ", round(Y,2))
	
	

-- EXECUTION TIME:
0.193499
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de  28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de  0.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
