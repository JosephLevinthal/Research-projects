== TEST (2019-04-09 10:32:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

a = int(input("Coordenada X: "))
b = int(input("Coordenada Y: "))

eq = 2*a + b

if (eq == 3):
	msg = "ponto pertence a reta"
else:
	msg = "ponto nao pertence a reta"

print(msg)	
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:32:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

a = int(input("Coordenada X: "))
b = int(input("Coordenada Y: "))

eq = 2*a + b

if (eq == 3):
	msg = "ponto pertence a reta"
else:
	msg = "ponto nao pertence a reta"

print(msg)	
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:32:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

a = int(input("Coordenada X: "))
b = int(input("Coordenada Y: "))

eq = 2*a + b

if (eq == 3):
	msg = "ponto pertence a reta"
else:
	msg = "ponto nao pertence a reta"

print(msg)	
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:32:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

a = int(input("Coordenada X: "))
b = int(input("Coordenada Y: "))

eq = 2*a + b

if (eq == 3):
	msg = "ponto pertence a reta"
else:
	msg = "ponto nao pertence a reta"

print(msg)	
-- EXECUTION TIME:
0.117189
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
