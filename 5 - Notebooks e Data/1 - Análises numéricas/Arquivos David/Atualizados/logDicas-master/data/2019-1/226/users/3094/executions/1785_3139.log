== TEST (2019-05-30 11:17:24) 
-- CODE:
from numpy import *

vetor = float(input("vetor: "))
print(vetor)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 11:17:51) 
-- CODE:
from numpy import *

vetor = array(eval((input("vetor: ")))
print(vetor)
-- ERROR:
File "XXXX", line 4
    print(vetor)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 11:18:12) 
-- CODE:
from numpy import *

vetor = array(eval(input("vetor: ")))
print(vetor)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 11:18:25) 
-- CODE:
from numpy import *

vetor = array(eval(input("vetor: ")))
print(vetor)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 11:21:51) 
-- CODE:
from numpy import *

vetor = array(eval(input("vetor: ")))
m = (sum(vetor)**(1/3) / size(vetor))**3
print(m)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 11:22:27) 
-- CODE:
from numpy import *

vetor = array(eval(input("vetor: ")))
m = (sum(vetor)**(1/3) / size(vetor))**3
print(m)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 11:23:40) 
-- CODE:
from numpy import *

vetor = array(eval(input("vetor: ")))



m = (sum**(1/3)(vetor) / size(vetor))**3
print(m)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 11:24:13) 
-- CODE:
from numpy import *

vetor = array(eval(input("vetor: ")))



m = (sum**(1/3)(vetor) / size(vetor))**3
print(m)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 11:31:16) 
-- CODE:
from numpy import *

vetor = array(eval(input("vetor: ")))
i = 0
c = 0

while(i < len(vetor)):
	m = ([i]**(1/3))
	i = i + 1
	c = m + m
	c = (m / size(vetor))**3
print(c)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 11:32:17) 
-- CODE:
from numpy import *

vetor = array(eval(input("vetor: ")))
i = 0
c = 0
vetor = (dtype=float)
while(i < len(vetor)):
	m = ([i]**(1/3))
	i = i + 1
	c = m + m
	c = (m / size(vetor))**3
print(c)



-- ERROR:
File "XXXX", line 6
    vetor = (dtype=float)
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 11:32:51) 
-- CODE:
from numpy import *

vetor1 = array(eval(input("vetor: ")))
i = 0
c = 0
vetor = (vetor1(dtype=float))
while(i < len(vetor)):
	m = ([i]**(1/3))
	i = i + 1
	c = m + m
	c = (m / size(vetor))**3
print(c)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 11:35:18) 
-- CODE:
from numpy import *

vetor1 = array(eval(input("vetor: ")))
i = 0
c = 0

while(i < len(vetor)):
	m = ([i]+0)
	i = i + 1
	c = m + m
	c = (m / size(vetor))**3
print(round(c,2))



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 11:35:30) 
-- CODE:
from numpy import *

vetor = array(eval(input("vetor: ")))
i = 0
c = 0

while(i < len(vetor)):
	m = ([i]+0)
	i = i + 1
	c = m + m
	c = (m / size(vetor))**3
print(round(c,2))



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 11:36:21) 
-- CODE:
from numpy import *

vetor = array(float(input("vetor: ")))
i = 0
c = 0

while(i < len(vetor)):
	m = ([i]+0)
	i = i + 1
	c = m + m
	c = (m / size(vetor))**3
print(round(c,2))



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 11:37:16) 
-- CODE:
from numpy import *

vetor = array(eval(input("vetor: ")))
i = 0
c = 0

while(i < len(vetor)):
string(dtype(vetor))
	m = ([i]+0)
	i = i + 1
	c = m + m
	c = (m / size(vetor))**3
print(round(c,2))



-- ERROR:
File "XXXX", line 8
    string(dtype(vetor))
         ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 11:37:41) 
-- CODE:
from numpy import *

vetor = array(eval(input("vetor: ")))
i = 0
c = 0

while(i < len(vetor)):
string(vetor.dtype=float)
	m = ([i]+0)
	i = i + 1
	c = m + m
	c = (m / size(vetor))**3
print(round(c,2))



-- ERROR:
File "XXXX", line 8
    string(vetor.dtype=float)
         ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 11:38:01) 
-- CODE:
from numpy import *

vetor = array(eval(input("vetor: ")))
i = 0
c = 0

while(i < len(vetor)):
vetor=(string.dtype=float)
	m = ([i]+0)
	i = i + 1
	c = m + m
	c = (m / size(vetor))**3
print(round(c,2))



-- ERROR:
File "XXXX", line 8
    vetor=(string.dtype=float)
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 11:41:27) 
-- CODE:
from numpy import *

vetor = array(eval(input("vetor: ")))
i = 0
c = 0

while(i < len(vetor)):

	m = ([i]**(1/3))
	i = i + 1
	c = m + m
	x = (c / size(vetor))**3
print(round(x,2))



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 11:48:43) 
-- CODE:
from numpy import *

vetor = array(eval(input("vetor: ")))
#i = 0
#c = 0

#while(i < len(vetor)):
	m = [0:]**(1/3)
	m1 = sum(m)
	m2 = (m1 / size(vetor))**3 
print(round(x,2))



-- ERROR:
File "XXXX", line 8
    m = [0:]**(1/3)
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 11:48:55) 
-- CODE:
from numpy import *

vetor = array(eval(input("vetor: ")))
#i = 0
#c = 0

#while(i < len(vetor)):
	m = vetor[0:]**(1/3)
	m1 = sum(m)
	m2 = (m1 / size(vetor))**3 
print(round(x,2))



-- ERROR:
File "XXXX", line 8
    m = vetor[0:]**(1/3)
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 11:49:07) 
-- CODE:
from numpy import *

vetor = array(eval(input("vetor: ")))
#i = 0
#c = 0

#while(i < len(vetor)):
	m = vetor([0:]**(1/3))
	m1 = sum(m)
	m2 = (m1 / size(vetor))**3 
print(round(x,2))



-- ERROR:
File "XXXX", line 8
    m = vetor([0:]**(1/3))
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 11:50:03) 
-- CODE:
from numpy import *
from math import *
vetor = array(eval(input("vetor: ")))
#i = 0
#c = 0

#while(i < len(vetor)):
	m = vetor([0:]**(1/3))
	m1 = sum(m)
	m2 = (m1 / size(vetor))**3 
print(round(x,2))



-- ERROR:
File "XXXX", line 8
    m = vetor([0:]**(1/3))
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 11:50:40) 
-- CODE:
from numpy import *
from math import *
vetor = array(eval(input("vetor: ")))
#i = 0
#c = 0

#while(i < len(vetor)):
	m = vetor(sqrt.[0:])
	m1 = sum(m)
	m2 = (m1 / size(vetor))**3 
print(round(x,2))



-- ERROR:
File "XXXX", line 8
    m = vetor(sqrt.[0:])
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 11:51:10) 
-- CODE:
from numpy import *
from math import *
vetor = array(eval(input("vetor: ")))
#i = 0
#c = 0

#while(i < len(vetor)):
	vetor = vetor [0:]**(1/3)
	m1 = sum(m)
	m2 = (m1 / size(vetor))**3 
print(round(x,2))



-- ERROR:
File "XXXX", line 8
    vetor = vetor [0:]**(1/3)
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 11:51:24) 
-- CODE:
from numpy import *
from math import *
vetor = array(eval(input("vetor: ")))
#i = 0
#c = 0

#while(i < len(vetor)):
	vetor = [0:]**(1/3)
	m1 = sum(m)
	m2 = (m1 / size(vetor))**3 
print(round(x,2))



-- ERROR:
File "XXXX", line 8
    vetor = [0:]**(1/3)
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 11:51:34) 
-- CODE:
from numpy import *
from math import *
vetor = array(eval(input("vetor: ")))
#i = 0
#c = 0

#while(i < len(vetor)):
	vetor = [:]**(1/3)
	m1 = sum(m)
	m2 = (m1 / size(vetor))**3 
print(round(x,2))



-- ERROR:
File "XXXX", line 8
    vetor = [:]**(1/3)
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 11:52:27) 
-- CODE:
from numpy import *
from math import *
vetor = array(eval(input("vetor: ")))
#i = 0
#c = 0

#while(i < len(vetor)):
	m = vetor
	m1 = sum(m[:]**(1/3))
	m2 = (m1 / size(vetor))**3 
print(round(x,2))



-- ERROR:
File "XXXX", line 8
    m = vetor
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 11:53:29) 
-- CODE:
from numpy import *
from math import *
vetor = array(eval(input("vetor: ")))
#i = 0
#c = 0

#while(i < len(vetor)):
	m = vetor[:]
	m1 = sum(m[:]**(1/3))
	m2 = (m1 / size(vetor))**3 
print(round(x,2))



-- ERROR:
File "XXXX", line 8
    m = vetor[:]
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 11:53:38) 
-- CODE:
from numpy import *
from math import *
vetor = array(eval(input("vetor: ")))
#i = 0
#c = 0

#while(i < len(vetor)):
	m = vetor[]
	m1 = sum(m[:]**(1/3))
	m2 = (m1 / size(vetor))**3 
print(round(x,2))



-- ERROR:
File "XXXX", line 8
    m = vetor[]
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
