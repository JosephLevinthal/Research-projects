== TEST (2019-04-25 10:59:48) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (c+b>a and a+c>b and b+a>c):
		if (a==b and b==c):
			print("Tipo de triangulo: equilatero")
	   elif ((a==b and c!=b) or (c==b and a!=b)):
		     print("Tipo de triangilo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")

	else:
		print("Area: invalida")
else:
	print("Area: invalida")


-- ERROR:
File "XXXX", line 18
    elif ((a==b and c!=b) or (c==b and a!=b)):
                                             ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:00:33) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (c+b>a and a+c>b and b+a>c):
		if (a==b and b==c):
			print("Tipo de triangulo: equilatero")
	   elif (a==b and c!=b or c==b and a!=b):
		     print("Tipo de triangilo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")

	else:
		print("Area: invalida")
else:
	print("Area: invalida")


-- ERROR:
File "XXXX", line 18
    elif (a==b and c!=b or c==b and a!=b):
                                         ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:02:03) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (c+b>a and a+c>b and b+a>c):
		if (a==b and b==c):
			print("Tipo de triangulo: equilatero")
	   elif ((a==b) and (c!=b) or (c==b) and (a!=b)):
		     print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")

	else:
		print("Area: invalida")
else:
	print("Area: invalida")


-- ERROR:
File "XXXX", line 18
    elif ((a==b) and (c!=b) or (c==b) and (a!=b)):
                                                 ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:02:33) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (c+b>a and a+c>b and b+a>c):
		if (a==b and b==c):
			print("Tipo de triangulo: equilatero")
	   elif ((a==b) and (c!=b)) or ((c==b) and (a!=b)):
		     print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")

	else:
		print("Area: invalida")
else:
	print("Area: invalida")


-- ERROR:
File "XXXX", line 18
    elif ((a==b) and (c!=b)) or ((c==b) and (a!=b)):
                                                   ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:04:32) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (c+b>a and a+c>b and b+a>c):
		if (a==b and b==c):
			print("Tipo de triangulo: equilatero")
	   elif (a==b) or (b==c) or (a==c):
		     print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")

	else:
		print("Area: invalida")
else:
	print("Tipo de troangilo: invalido")


-- ERROR:
File "XXXX", line 18
    elif (a==b) or (b==c) or (a==c):
                                   ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:05:30) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (c+b>a and a+c>b and b+a>c):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo: equilatero")
	   elif (a==b) or (b==c) or (a==c):
		     print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")

	else:
		print("Area: invalida")
else:
	print("Tipo de troangilo: invalido")


-- ERROR:
File "XXXX", line 18
    elif (a==b) or (b==c) or (a==c):
                                   ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:06:39) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (c+b>a and a+c>b and b+a>c):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo: equilatero")
	   elif ((a==b) or (b==c) or (a==c)):
		     print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")

	else:
		print("Area: invalida")
else:
	print("Tipo de troangilo: invalido")


-- ERROR:
File "XXXX", line 18
    elif ((a==b) or (b==c) or (a==c)):
                                     ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:08:47) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (c+b>a and a+c>b and b+a>c):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo: equilatero")
	   elif ((a==b) or (b==c)):
		     print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")

	else:
		print("Area: invalida")
else:
	print("Tipo de triangulo: invalido")


-- ERROR:
File "XXXX", line 18
    elif ((a==b) or (b==c)):
                           ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:11:40) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (c+b>a and a+c>b and b+a>c):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo: equilatero")
	   elif ((a==b) or (b==c)):
			
		   print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")

	else:
		print("Area: invalida")
else:
	print("Tipo de triangulo: invalido")


-- ERROR:
File "XXXX", line 18
    elif ((a==b) or (b==c)):
                           ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:11:58) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (c+b>a and a+c>b and b+a>c):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo: equilatero")
	   elif ((a==b) or (b==c)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")

	else:
		print("Area: invalida")
else:
	print("Tipo de triangulo: invalido")


-- ERROR:
File "XXXX", line 18
    elif ((a==b) or (b==c)):
                           ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:12:09) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (c+b>a and a+c>b and b+a>c):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo: equilatero")
	   elif ((a==b) or (b==c)):
		   print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")

	else:
		print("Area: invalida")
else:
	print("Tipo de triangulo: invalido")


-- ERROR:
File "XXXX", line 18
    elif ((a==b) or (b==c)):
                           ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:15:20) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (c+b>a and a+c>b and b+a>c):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo: equilatero") 
	   else:
			if((a==b) or (b==c)):
		   print("Tipo de triangulo: isosceles")
			else:
				print("Tipo de triangulo: escaleno")

	else:
		print("Area: invalida")
else:
	print("Tipo de triangulo: invalido")


-- ERROR:
File "XXXX", line 18
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:15:39) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (c+b>a and a+c>b and b+a>c):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo: equilatero") 
	   else:
			if((a==b) or (b==c)):
				print("Tipo de triangulo: isosceles")
			else:
				print("Tipo de triangulo: escaleno")

	else:
		print("Area: invalida")
else:
	print("Tipo de triangulo: invalido")


-- ERROR:
File "XXXX", line 18
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:18:38) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (c+b>a and a+c>b and b+a>c):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo: equilatero") 
	   else:
			if((a==b) or (b==c)):
				print("Tipo de triangulo: isosceles")
			else:
				print("Tipo de triangulo: escaleno")

	else:
		print("Area: invalida")
else:
	print("Tipo de triangulo: invalido")


-- ERROR:
File "XXXX", line 18
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:18:45) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (c+b>a and a+c>b and b+a>c):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo: equilatero") 
	   else:
			if((a==b) or (b==c)):
				print("Tipo de triangulo: isosceles")
			else:
				print("Tipo de triangulo: escaleno")

	else:
		print("Area: invalida")
else:
	print("Tipo de triangulo: invalido")


-- ERROR:
File "XXXX", line 18
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:19:22) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (c+b>a and a+c>b and b+a>c):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo: equilatero") 
	   else:
			if((a==b) or (b==c)):
				print("Tipo de triangulo: isosceles")
			else:
				print("Tipo de triangulo: escaleno")

	else:
		print("Area: invalida")
else:
	print("Tipo de triangulo: invalido")


-- ERROR:
File "XXXX", line 18
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:19:22) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (c+b>a and a+c>b and b+a>c):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo: equilatero") 
	   else:
			if((a==b) or (b==c)):
				print("Tipo de triangulo: isosceles")
			else:
				print("Tipo de triangulo: escaleno")

	else:
		print("Area: invalida")
else:
	print("Tipo de triangulo: invalido")


-- ERROR:
File "XXXX", line 18
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:19:24) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (c+b>a and a+c>b and b+a>c):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo: equilatero") 
	   else:
			if((a==b) or (b==c)):
				print("Tipo de triangulo: isosceles")
			else:
				print("Tipo de triangulo: escaleno")

	else:
		print("Area: invalida")
else:
	print("Tipo de triangulo: invalido")


-- ERROR:
File "XXXX", line 18
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:51:27) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (c+b>a and a+c>b and b+a>c):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo: equilatero") 
	   else:
			if((a==b) or (b==c)):
				print("Tipo de triangulo: isosceles")
			else:
				print("Tipo de triangulo: escaleno")

	else:
		print("Area: invalida")
else:
	print("Tipo de triangulo: invalido")


-- ERROR:
File "XXXX", line 18
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:51:30) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (c+b>a and a+c>b and b+a>c):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo: equilatero") 
	   else:
			if((a==b) or (b==c)):
				print("Tipo de triangulo: isosceles")
			else:
				print("Tipo de triangulo: escaleno")

	else:
		print("Area: invalida")
else:
	print("Tipo de triangulo: invalido")


-- ERROR:
File "XXXX", line 18
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:51:30) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (c+b>a and a+c>b and b+a>c):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo: equilatero") 
	   else:
			if((a==b) or (b==c)):
				print("Tipo de triangulo: isosceles")
			else:
				print("Tipo de triangulo: escaleno")

	else:
		print("Area: invalida")
else:
	print("Tipo de triangulo: invalido")


-- ERROR:
File "XXXX", line 18
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:52:04) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (c+b>a and a+c>b and b+a>c):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo: equilatero") 
	   elif((a==b) or (b==c)):
				print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")

	else:
		print("Area: invalida")
else:
	print("Tipo de triangulo: invalido")


-- ERROR:
File "XXXX", line 18
    elif((a==b) or (b==c)):
                          ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:52:51) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (c+b>a and a+c>b and b+a>c):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo: equilatero") 
	   elif ((a==b) or (b==c)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")

	else:
		print("Area: invalida")
else:
	print("Tipo de triangulo: invalido")


-- ERROR:
File "XXXX", line 18
    elif ((a==b) or (b==c)):
                           ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:52:53) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (c+b>a and a+c>b and b+a>c):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo: equilatero") 
	   elif ((a==b) or (b==c)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")

	else:
		print("Area: invalida")
else:
	print("Tipo de triangulo: invalido")


-- ERROR:
File "XXXX", line 18
    elif ((a==b) or (b==c)):
                           ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:54:22) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (c+b>a and a+c>b and b+a>c):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo: equilatero") 
	   elif ((a==b) and (b!=c)) or ((b==c) and (a!=c)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")

	else:
		print("Area: invalida")
else:
	print("Tipo de triangulo: invalido")


-- ERROR:
File "XXXX", line 18
    elif ((a==b) and (b!=c)) or ((b==c) and (a!=c)):
                                                   ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 10:42:25) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (c+b>a and a+c>b and b+a>c):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo: equilatero") 
	   elif ((a==b) and (b!=c)) or ((b==c) and (a!=c)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")

	else:
		print("Area: invalida")
else:
	print("Tipo de triangulo: invalido")


-- ERROR:
File "XXXX", line 18
    elif ((a==b) and (b!=c)) or ((b==c) and (a!=c)):
                                                   ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 10:43:10) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (c+b>a and a+c>b and b+a>c):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo: equilatero") 
	   elif ((a==b) or (b==c)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")

	else:
		print("Area: invalida")
else:
	print("Tipo de triangulo: invalido")


-- EXECUTION TIME:
0.192406
-- ERROR:
  File "/home/codebench/codes/1674/1099/main.py", line 18
    elif ((a==b) or (b==c)):
                           ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 10:43:12) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (c+b>a and a+c>b and b+a>c):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo: equilatero") 
	   elif ((a==b) or (b==c)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")

	else:
		print("Area: invalida")
else:
	print("Tipo de triangulo: invalido")


-- ERROR:
File "XXXX", line 18
    elif ((a==b) or (b==c)):
                           ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 10:44:19) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (c+b>a and a+c>b and b+a>c):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo: equilatero")
			
	   elif ((a==b) or (b==c)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")

	else:
		print("Area: invalida")
else:
	print("Tipo de triangulo: invalido")


-- ERROR:
File "XXXX", line 19
    elif ((a==b) or (b==c)):
                           ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 10:49:55) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (c+b>a and a+c>b and b+a>c):
		if (a==b) and (b==c):
			print("Tipo de triangulo: equilatero")
		elif (a==b or b==c):
			print("Tipo de triangulo: isosceles")
			else:
				print("Tipo de triangulo: escaleno")
   else:
		print("Area: invalida")
else:
	print("Tipo de triangulo: invalido")

-- ERROR:
File "XXXX", line 20
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 10:50:35) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (c+b>a and a+c>b and b+a>c):
		if (a==b) and (b==c):
			print("Tipo de triangulo: equilatero")
		elif (a==b or b==c):
			print("Tipo de triangulo: isosceles")
			
			else:
				print("Tipo de triangulo: escaleno")
   else:
		print("Area: invalida")
else:
	print("Tipo de triangulo: invalido")

-- ERROR:
File "XXXX", line 21
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 10:51:15) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (c+b>a and a+c>b and b+a>c):
		if (a==b and b==c):
			print("Tipo de triangulo: equilatero")
		elif (a==b or b==c):
			print("Tipo de triangulo: isosceles")
			
			else:
				print("Tipo de triangulo: escaleno")
   else:
		print("Area: invalida")
else:
	print("Tipo de triangulo: invalido")

-- ERROR:
File "XXXX", line 21
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 10:51:20) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (c+b>a and a+c>b and b+a>c):
		if (a==b and b==c):
			print("Tipo de triangulo: equilatero")
		elif (a==b or b==c):
			print("Tipo de triangulo: isosceles")
			
			else:
				print("Tipo de triangulo: escaleno")
   else:
		print("Area: invalida")
else:
	print("Tipo de triangulo: invalido")

-- ERROR:
File "XXXX", line 21
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 10:51:30) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (c+b>a and a+c>b and b+a>c):
		if (a==b and b==c):
			print("Tipo de triangulo: equilatero")
		elif (a==b or b==c):
			print("Tipo de triangulo: isosceles")
			
		else:
			print("Tipo de triangulo: escaleno")
   else:
		print("Area: invalida")
else:
	print("Tipo de triangulo: invalido")

-- ERROR:
File "XXXX", line 23
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 10:53:25) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (c+b>a and a+c>b and b+a>c):
		if (a==b and b==c):
			print("Tipo de triangulo: equilatero")
		elif (a==b or b==c):
			print("Tipo de triangulo: isosceles")
			
		   else:
			   print("Tipo de triangulo: escaleno")
   else:
		print("Area: invalida")
else:
	print("Tipo de triangulo: invalido")

-- ERROR:
File "XXXX", line 21
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 10:53:27) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (c+b>a and a+c>b and b+a>c):
		if (a==b and b==c):
			print("Tipo de triangulo: equilatero")
		elif (a==b or b==c):
			print("Tipo de triangulo: isosceles")
			
		   else:
			   print("Tipo de triangulo: escaleno")
   else:
		print("Area: invalida")
else:
	print("Tipo de triangulo: invalido")

-- ERROR:
File "XXXX", line 21
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 10:54:04) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (c+b>a and a+c>b and b+a>c):
		if (a==b and b==c):
			print("Tipo de triangulo: equilatero")
		elif (a==b or b==c):
			print("Tipo de triangulo: isosceles")
		 else:
			   print("Tipo de triangulo: escaleno")
   else:
		print("Area: invalida")
else:
	print("Tipo de triangulo: invalido")

-- ERROR:
File "XXXX", line 20
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 10:54:11) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (c+b>a and a+c>b and b+a>c):
		if (a==b and b==c):
			print("Tipo de triangulo: equilatero")
		elif (a==b or b==c):
			print("Tipo de triangulo: isosceles")
		   else:
			   print("Tipo de triangulo: escaleno")
   else:
		print("Area: invalida")
else:
	print("Tipo de triangulo: invalido")

-- ERROR:
File "XXXX", line 20
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 10:54:12) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (c+b>a and a+c>b and b+a>c):
		if (a==b and b==c):
			print("Tipo de triangulo: equilatero")
		elif (a==b or b==c):
			print("Tipo de triangulo: isosceles")
		   else:
			   print("Tipo de triangulo: escaleno")
   else:
		print("Area: invalida")
else:
	print("Tipo de triangulo: invalido")

-- ERROR:
File "XXXX", line 20
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 10:55:48) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (c+b>a and a+c>b and b+a>c):
		if (a==b and b==c):
			print("Tipo de triangulo: equilatero")
		else:
			if (a==b or b==c):
				print("Tipo de triangulo: isosceles")
		   else:
			   print("Tipo de triangulo: escaleno")
   else:
		print("Area: invalida")
else:
	print("Tipo de triangulo: invalido")

-- ERROR:
File "XXXX", line 21
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:07:20) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (c+b>a and a+c>b and b+a>c):
		if (a==b and b==c):
			print("Tipo de triangulo: equilatero")
		else:
			if (a==b and b!=c) or(b==c and c!=a):
				print("Tipo de triangulo: isosceles")
		   else:
			   print("Tipo de triangulo: escaleno")
   else:
		print("Area: invalida")
else:
	print("Tipo de triangulo: invalido")

-- EXECUTION TIME:
0.153745
-- ERROR:
  File "/home/codebench/codes/1674/1099/main.py", line 21
    else:
        ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:07:41) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (c+b>a and a+c>b and b+a>c):
		if (a==b and b==c):
			print("Tipo de triangulo: equilatero")
		else:
			if (a==b and b!=c) or (b==c and c!=a):
				print("Tipo de triangulo: isosceles")
		   else:
			   print("Tipo de triangulo: escaleno")
   else:
		print("Area: invalida")
else:
	print("Tipo de triangulo: invalido")

-- ERROR:
File "XXXX", line 21
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:18:59) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (c+b>a and a+c>b and b+a>c):
		if (a==b and b==c):
			print("Tipo de triangulo: equilatero")
		else:
			if (a==b and b!=c) or (b==c and c!=a):
				print("Tipo de triangulo: isosceles")
		   else:
			   print("Tipo de triangulo: escaleno")
   else:
		print("Area: invalida")
else:
	print("Tipo de triangulo: invalido")

-- ERROR:
File "XXXX", line 21
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:53:36) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (c+b>a and a+c>b and b+a>c):
		if (a==b and b==c):
			print("Tipo de triangulo: equilatero")
		elif (a==b and b!=c) or (b==c and c!=a):
				print("Tipo de triangulo: isosceles")
		elif:
			   print("Tipo de triangulo: escaleno")
   else:
		print("Area: invalida")
else:
	print("Tipo de triangulo: invalido")

-- ERROR:
File "XXXX", line 20
    elif:
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 11:15:32) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (c+b>a and a+c>b and b+a>c):
		if (a==b and b==c):
			print("Tipo de triangulo: equilatero")
		elif (a==b and b!=c) or (b==c and c!=a):
				print("Tipo de triangulo: isosceles")
		elif:
			   print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")

-- EXECUTION TIME:
0.15105
-- ERROR:
  File "/home/codebench/codes/1674/1099/main.py", line 20
    elif:
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:15:33) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (c+b>a and a+c>b and b+a>c):
		if (a==b and b==c):
			print("Tipo de triangulo: equilatero")
		elif (a==b and b!=c) or (b==c and c!=a):
				print("Tipo de triangulo: isosceles")
		elif:
			   print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")

-- ERROR:
File "XXXX", line 20
    elif:
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 19:24:57) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 

	# Testa se medidas correspondem aas de um triangulo
if (c+b>a and a+c>b and b+a>c):
	if (a==b and b==c):
		print("Tipo de triangulo: equilatero")
	elif (a==b and b!=c) or (b==c and c!=a):
				print("Tipo de triangulo: isosceles")
		elif:
			   print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")

-- ERROR:
File "XXXX", line 20
    elif:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 19:25:12) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 

	# Testa se medidas correspondem aas de um triangulo
if (c+b>a and a+c>b and b+a>c):
	if (a==b and b==c):
		print("Tipo de triangulo: equilatero")
	elif (a==b and b!=c) or (b==c and c!=a):
				print("Tipo de triangulo: isosceles")
	elif:
			   print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")

-- ERROR:
File "XXXX", line 20
    elif:
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 19:25:25) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 

	# Testa se medidas correspondem aas de um triangulo
if (c+b>a and a+c>b and b+a>c):
	if (a==b and b==c):
		print("Tipo de triangulo: equilatero")
	else (a==b and b!=c) or (b==c and c!=a):
				print("Tipo de triangulo: isosceles")
	elif:
			   print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")

-- ERROR:
File "XXXX", line 18
    else (a==b and b!=c) or (b==c and c!=a):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 19:25:50) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 

	# Testa se medidas correspondem aas de um triangulo
if (c+b>a and a+c>b and b+a>c):
	if (a==b and b==c):
		print("Tipo de triangulo: equilatero")
	else (a==b and b!=c) or (b==c and c!=a):
			print("Tipo de triangulo: isosceles")
	elif:
			   print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")

-- ERROR:
File "XXXX", line 18
    else (a==b and b!=c) or (b==c and c!=a):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 19:30:00) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)


if (c+b>a and a+c>b and b+a>c):
	if(a==b==c):
		print("Tipo de triangulo: equilatero")
	else:
		if(a==b and b!=c() or (b==c and c!=a):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
else:
			print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 17
    if(a==b and b!=c() or (b==c and c!=a):
                                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 19:30:43) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)


if (c+b>a and a+c>b and b+a>c):
	if(a==b==c):
		print("Tipo de triangulo: equilatero")
	else:
		if(a==b and b!=c() or (b==c and c!=a):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
else:
			print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 17
    if(a==b and b!=c() or (b==c and c!=a):
                                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 19:31:03) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)


if (c+b>a and a+c>b and b+a>c):
	if(a==b==c):
		print("Tipo de triangulo: equilatero")
	else:
		if(a==b and b=!c() or (b==c and c=!a):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
else:
			print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 17
    if(a==b and b=!c() or (b==c and c=!a):
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 19:31:13) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)


if (c+b>a and a+c>b and b+a>c):
	if(a==b==c):
		print("Tipo de triangulo: equilatero")
	else:
		if(a==b and b=!c) or (b==c and c=!a):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
else:
			print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 17
    if(a==b and b=!c) or (b==c and c=!a):
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 19:31:28) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)


if (c+b>a and a+c>b and b+a>c):
	if(a==b==c):
		print("Tipo de triangulo: equilatero")
	else:
		if(a==b and b!=c) or (b==c and c!=a):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
else:
			print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 19:31:37) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)


if (c+b>a and a+c>b and b+a>c):
	if(a==b==c):
		print("Tipo de triangulo: equilatero")
	else:
		if(a==b and b!=c) or (b==c and c!=a):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
else:
			print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.139926
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
