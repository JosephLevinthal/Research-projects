== TEST (2019-05-14 10:19:40) 
-- CODE:
n = int(input("Numero: "))
a = 1


while(a <= n):
	b = n%a
	a = a + 1
	if(b == 0):
		print(b)
	


-- OUTPUT:
0
0
0
0
0
0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:19:58) 
-- CODE:
n = int(input("Numero: "))
a = 1


while(a <= n):
	b = n%a
	a = a + 1
	if(b == 0):
		print(a)
	


-- OUTPUT:
2
3
4
5
7
13
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:20:42) 
-- CODE:
n = int(input("Numero: "))
a = 1


while(a <= n):
	b = n%a
	a = a + 1
	if(b == 0):
		print(a)
	


-- OUTPUT:
2
3
4
5
7
13
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:21:18) 
-- CODE:
n = int(input("Numero: "))
a = 1


while(a <= n):
	b = n%a
	if(b == 0):
		print(a)
	a = a + 1
	


-- OUTPUT:
1
2
3
4
6
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:21:30) 
-- CODE:
n = int(input("Numero: "))
a = 1


while(a <= n):
	b = n%a
	if(b == 0):
		print(a)
	a = a + 1
	


-- OUTPUT:
1
2
3
4
6
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:22:07) 
-- CODE:
n = int(input("Numero: "))
a = 1


while(a <= n):
	b = n%a
	if(b == 0):
		print(a)
	a = a + 1
	


-- OUTPUT:
1
2
3
4
6
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:23:19) 
-- CODE:
n = int(input("Numero: "))
a = 1
t = 0

while(a <= n):
	b = n%a
	if(b == 0):
		print(a)
		t = t + 1
	a = a + 1
	
print (t)

-- OUTPUT:
1
2
3
4
6
12
6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:24:32) 
-- CODE:
n = int(input("Numero: "))
a = 1
t = 0

while(a <= n):
	b = n%a
	if(b == 0):
		print(a)
		t = t + 1
	a = a + 1
	
if(t == 1):
	print(t,'divisor')
elif(t > 1):
	print(t,"divisores")

-- OUTPUT:
1
2
3
4
6
12
6 divisores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 10:24:39) 
-- CODE:
n = int(input("Numero: "))
a = 1
t = 0

while(a <= n):
	b = n%a
	if(b == 0):
		print(a)
		t = t + 1
	a = a + 1
	
if(t == 1):
	print(t,'divisor')
elif(t > 1):
	print(t,"divisores")

-- EXECUTION TIME:
0.14404
-- TEST CASE 1:
---- input:
12
---- correct output:
1
2
3
4
6
12
6 divisores
---- user output:
1
2
3
4
6
12
6 divisores
-- TEST CASE 2:
---- input:
49
---- correct output:
1
7
49
3 divisores
---- user output:
1
7
49
3 divisores
-- TEST CASE 3:
---- input:
30
---- correct output:
1
2
3
5
6
10
15
30
8 divisores
---- user output:
1
2
3
5
6
10
15
30
8 divisores
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
