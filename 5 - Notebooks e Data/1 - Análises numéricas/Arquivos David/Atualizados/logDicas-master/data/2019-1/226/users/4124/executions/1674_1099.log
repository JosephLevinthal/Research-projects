== TEST (2019-04-25 10:36:44) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

if ( a == b and b == c):
	x = "equilatero"
elif(a == b or b == c or c == a):
	print("isosceles")
elif(a != b and b != c):
	print("escaleno")
elif(a < 0 or b < 0 or c < 0 or a >= b + c or b >= a + c or c >= a + b):
	print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:36:49) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

if ( a == b and b == c):
	x = "equilatero"
elif(a == b or b == c or c == a):
	print("isosceles")
elif(a != b and b != c):
	print("escaleno")
elif(a < 0 or b < 0 or c < 0 or a >= b + c or b >= a + c or c >= a + b):
	print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:37:23) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

if ( a == b and b == c):
	print("equilatero")
elif(a == b or b == c or c == a):
	print("isosceles")
elif(a != b and b != c):
	print("escaleno")
elif(a < 0 or b < 0 or c < 0 or a >= b + c or b >= a + c or c >= a + b):
	print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:37:30) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

if ( a == b and b == c):
	print("equilatero")
elif(a == b or b == c or c == a):
	print("isosceles")
elif(a != b and b != c):
	print("escaleno")
elif(a < 0 or b < 0 or c < 0 or a >= b + c or b >= a + c or c >= a + b):
	print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:37:37) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

if ( a == b and b == c):
	print("equilatero")
elif(a == b or b == c or c == a):
	print("isosceles")
elif(a != b and b != c):
	print("escaleno")
elif(a < 0 or b < 0 or c < 0 or a >= b + c or b >= a + c or c >= a + b):
	print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:42:54) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if(a < b + c or b < a + c or c < a + b):
	if ( a == b and b == c):
		print("equilatero")
	elif(a == b or b == c or c == a):
		print("isosceles")
	elif(a != b and b != c):
		print("escaleno")
	elif(a < 0 or b < 0 or c < 0):
		print("invalido")
else:
	print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:43:01) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if(a < b + c or b < a + c or c < a + b):
	if ( a == b and b == c):
		print("equilatero")
	elif(a == b or b == c or c == a):
		print("isosceles")
	elif(a != b and b != c):
		print("escaleno")
	elif(a < 0 or b < 0 or c < 0):
		print("invalido")
else:
	print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:43:37) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if(a < b + c or b < a + c or c < a + b or a < 0 or b < 0 or c < 0):
	if ( a == b and b == c):
		print("equilatero")
	elif(a == b or b == c or c == a):
		print("isosceles")
	elif(a != b and b != c):
		print("escaleno")
else:
	print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:43:44) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if(a < b + c or b < a + c or c < a + b or a < 0 or b < 0 or c < 0):
	if ( a == b and b == c):
		print("equilatero")
	elif(a == b or b == c or c == a):
		print("isosceles")
	elif(a != b and b != c):
		print("escaleno")
else:
	print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:45:21) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if(a < b + c and b < a + c and c < a + b and a > 0 and b > 0 and c > 0):
	if ( a == b and b == c):
		print("equilatero")
	elif(a == b or b == c or c == a):
		print("isosceles")
	elif(a != b and b != c):
		print("escaleno")
else:
	print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:45:27) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if(a < b + c and b < a + c and c < a + b and a > 0 and b > 0 and c > 0):
	if ( a == b and b == c):
		print("equilatero")
	elif(a == b or b == c or c == a):
		print("isosceles")
	elif(a != b and b != c):
		print("escaleno")
else:
	print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:45:36) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if(a < b + c and b < a + c and c < a + b and a > 0 and b > 0 and c > 0):
	if ( a == b and b == c):
		print("equilatero")
	elif(a == b or b == c or c == a):
		print("isosceles")
	elif(a != b and b != c):
		print("escaleno")
else:
	print("invalido")
-- EXECUTION TIME:
0.149508
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:45:43) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if(a < b + c and b < a + c and c < a + b and a > 0 and b > 0 and c > 0):
	if ( a == b and b == c):
		print("equilatero")
	elif(a == b or b == c or c == a):
		print("isosceles")
	elif(a != b and b != c):
		print("escaleno")
else:
	print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:45:48) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if(a < b + c and b < a + c and c < a + b and a > 0 and b > 0 and c > 0):
	if ( a == b and b == c):
		print("equilatero")
	elif(a == b or b == c or c == a):
		print("isosceles")
	elif(a != b and b != c):
		print("escaleno")
else:
	print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:45:53) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if(a < b + c and b < a + c and c < a + b and a > 0 and b > 0 and c > 0):
	if ( a == b and b == c):
		print("equilatero")
	elif(a == b or b == c or c == a):
		print("isosceles")
	elif(a != b and b != c):
		print("escaleno")
else:
	print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:45:59) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if(a < b + c and b < a + c and c < a + b and a > 0 and b > 0 and c > 0):
	if ( a == b and b == c):
		print("equilatero")
	elif(a == b or b == c or c == a):
		print("isosceles")
	elif(a != b and b != c):
		print("escaleno")
else:
	print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:46:03) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if(a < b + c and b < a + c and c < a + b and a > 0 and b > 0 and c > 0):
	if ( a == b and b == c):
		print("equilatero")
	elif(a == b or b == c or c == a):
		print("isosceles")
	elif(a != b and b != c):
		print("escaleno")
else:
	print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:46:13) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if(a < b + c and b < a + c and c < a + b and a > 0 and b > 0 and c > 0):
	if ( a == b and b == c):
		print("equilatero")
	elif(a == b or b == c or c == a):
		print("isosceles")
	elif(a != b and b != c):
		print("escaleno")
else:
	print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:48:47) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if(a < b + c and b < a + c and c < a + b and a > 0 and b > 0 and c > 0):
	if ( a == b and b == c):
		x = equilatero
	elif(a == b or b == c or c == a):
		x = isosceles
	elif(a != b and b != c):
		x = escaleno
	print("Tipo do triangulo:", x,)
else:
	print("invalido")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    x = isosceles
NameError: name 'isosceles' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:49:04) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if(a < b + c and b < a + c and c < a + b and a > 0 and b > 0 and c > 0):
	if ( a == b and b == c):
		x = "equilatero"
	elif(a == b or b == c or c == a):
		x = "isosceles"
	elif(a != b and b != c):
		x = "escaleno"
	print("Tipo do triangulo:", x,)
else:
	print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo do triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:49:10) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if(a < b + c and b < a + c and c < a + b and a > 0 and b > 0 and c > 0):
	if ( a == b and b == c):
		x = "equilatero"
	elif(a == b or b == c or c == a):
		x = "isosceles"
	elif(a != b and b != c):
		x = "escaleno"
	print("Tipo do triangulo:", x,)
else:
	print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo do triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:49:14) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if(a < b + c and b < a + c and c < a + b and a > 0 and b > 0 and c > 0):
	if ( a == b and b == c):
		x = "equilatero"
	elif(a == b or b == c or c == a):
		x = "isosceles"
	elif(a != b and b != c):
		x = "escaleno"
	print("Tipo do triangulo:", x,)
else:
	print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo do triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:49:19) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if(a < b + c and b < a + c and c < a + b and a > 0 and b > 0 and c > 0):
	if ( a == b and b == c):
		x = "equilatero"
	elif(a == b or b == c or c == a):
		x = "isosceles"
	elif(a != b and b != c):
		x = "escaleno"
	print("Tipo do triangulo:", x,)
else:
	print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo do triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:49:29) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if(a < b + c and b < a + c and c < a + b and a > 0 and b > 0 and c > 0):
	if ( a == b and b == c):
		x = "equilatero"
	elif(a == b or b == c or c == a):
		x = "isosceles"
	elif(a != b and b != c):
		x = "escaleno"
	print("Tipo do triangulo:", x,)
else:
	print("invalido")
-- EXECUTION TIME:
0.164421
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo do triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo do triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:50:05) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if(a < b + c and b < a + c and c < a + b and a > 0 and b > 0 and c > 0):
	if ( a == b and b == c):
		x = "equilatero"
	elif(a == b or b == c or c == a):
		x = "isosceles"
	else:
		x = "escaleno"
	print("Tipo do triangulo:", x,)
else:
	print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo do triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:50:22) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if(a < b + c and b < a + c and c < a + b and a > 0 and b > 0 and c > 0):
	if ( a == b and b == c):
		x = "equilatero"
	elif(a == b or b == c or c == a):
		x = "isosceles"
	else:
		x = "escaleno"
	print("Tipo do triangulo:", x,)
else:
	print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo do triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:50:43) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if(a < b + c and b < a + c and c < a + b and a > 0 and b > 0 and c > 0):
	if ( a == b and b == c):
		x = "equilatero"
	elif(a == b or b == c or c == a):
		x = "isosceles"
	else:
		x = "escaleno"
	print("Tipo do triangulo:", x,)
else:
	print("Tipo do triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo do triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:50:48) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if(a < b + c and b < a + c and c < a + b and a > 0 and b > 0 and c > 0):
	if ( a == b and b == c):
		x = "equilatero"
	elif(a == b or b == c or c == a):
		x = "isosceles"
	else:
		x = "escaleno"
	print("Tipo do triangulo:", x,)
else:
	print("Tipo do triangulo: invalido")
-- EXECUTION TIME:
0.197742
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo do triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo do triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo do triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:52:21) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if(a < b + c and b < a + c and c < a + b and a > 0 and b > 0 and c > 0):
	if ( a == b and b == c):
		print("Tipo do triangulo: equilatero")
	elif(a == b or b == c or c == a):
		print("Tipo do triangulo: isosceles")
	else:
		print("Tipo do triangulo: escaleno")	
else:
	print("Tipo do triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo do triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:52:29) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if(a < b + c and b < a + c and c < a + b and a > 0 and b > 0 and c > 0):
	if ( a == b and b == c):
		print("Tipo do triangulo: equilatero")
	elif(a == b or b == c or c == a):
		print("Tipo do triangulo: isosceles")
	else:
		print("Tipo do triangulo: escaleno")	
else:
	print("Tipo do triangulo: invalido")
-- EXECUTION TIME:
0.159886
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo do triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo do triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo do triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:53:50) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if(a < b + c and b < a + c and c < a + b and a > 0 and b > 0 and c > 0):
	if ( a == b and b == c):
		print("Tipo do triangulo: equilatero")
	elif(a == b or b == c or c == a):
		print("Tipo do triangulo: isosceles")
	else:
		print("Tipo do triangulo: escaleno")	
else:
	print("Tipo do triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo do triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:53:54) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if(a < b + c and b < a + c and c < a + b and a > 0 and b > 0 and c > 0):
	if ( a == b and b == c):
		print("Tipo do triangulo: equilatero")
	elif(a == b or b == c or c == a):
		print("Tipo do triangulo: isosceles")
	else:
		print("Tipo do triangulo: escaleno")	
else:
	print("Tipo do triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo do triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:53:59) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if(a < b + c and b < a + c and c < a + b and a > 0 and b > 0 and c > 0):
	if ( a == b and b == c):
		print("Tipo do triangulo: equilatero")
	elif(a == b or b == c or c == a):
		print("Tipo do triangulo: isosceles")
	else:
		print("Tipo do triangulo: escaleno")	
else:
	print("Tipo do triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo do triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:54:03) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if(a < b + c and b < a + c and c < a + b and a > 0 and b > 0 and c > 0):
	if ( a == b and b == c):
		print("Tipo do triangulo: equilatero")
	elif(a == b or b == c or c == a):
		print("Tipo do triangulo: isosceles")
	else:
		print("Tipo do triangulo: escaleno")	
else:
	print("Tipo do triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo do triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:55:17) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if(a < b + c and b < a + c and c < a + b and a > 0 and b > 0 and c > 0):
	if ( a == b and b == c):
		print("Tipo do triangulo: equilatero")
	elif(a == b or b == c or c == a):
		print("Tipo do triangulo: isosceles")
	else:
		print("Tipo do triangulo: escaleno")	
else:
	print("Tipo do triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo do triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:55:36) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if(a < b + c and b < a + c and c < a + b and a > 0 and b > 0 and c > 0):
	if ( a == b and b == c):
		print("Tipo do triangulo: equilatero")
	elif(a == b or b == c or c == a):
		print("Tipo do triangulo: isosceles")
	else:
		print("Tipo do triangulo: escaleno")	
else:
	print("Tipo do triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo do triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:55:56) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a,",", b,",", c)
if(a < b + c and b < a + c and c < a + b and a > 0 and b > 0 and c > 0):
	if ( a == b and b == c):
		print("Tipo do triangulo: equilatero")
	elif(a == b or b == c or c == a):
		print("Tipo do triangulo: isosceles")
	else:
		print("Tipo do triangulo: escaleno")	
else:
	print("Tipo do triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo do triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:56:13) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a",", b,",", c)
if(a < b + c and b < a + c and c < a + b and a > 0 and b > 0 and c > 0):
	if ( a == b and b == c):
		print("Tipo do triangulo: equilatero")
	elif(a == b or b == c or c == a):
		print("Tipo do triangulo: isosceles")
	else:
		print("Tipo do triangulo: escaleno")	
else:
	print("Tipo do triangulo: invalido")
-- ERROR:
File "XXXX", line 7
    print("Entradas:", a",", b,",", c)
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:56:58) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a,",",b,",", c)
if(a < b + c and b < a + c and c < a + b and a > 0 and b > 0 and c > 0):
	if ( a == b and b == c):
		print("Tipo do triangulo: equilatero")
	elif(a == b or b == c or c == a):
		print("Tipo do triangulo: isosceles")
	else:
		print("Tipo do triangulo: escaleno")	
else:
	print("Tipo do triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo do triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:57:15) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:",a,",",b,",", c)
if(a < b + c and b < a + c and c < a + b and a > 0 and b > 0 and c > 0):
	if ( a == b and b == c):
		print("Tipo do triangulo: equilatero")
	elif(a == b or b == c or c == a):
		print("Tipo do triangulo: isosceles")
	else:
		print("Tipo do triangulo: escaleno")	
else:
	print("Tipo do triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo do triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:57:37) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:",a,",",b    ,",", c)
if(a < b + c and b < a + c and c < a + b and a > 0 and b > 0 and c > 0):
	if ( a == b and b == c):
		print("Tipo do triangulo: equilatero")
	elif(a == b or b == c or c == a):
		print("Tipo do triangulo: isosceles")
	else:
		print("Tipo do triangulo: escaleno")	
else:
	print("Tipo do triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo do triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:57:45) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:",a,",",    b    ,",", c)
if(a < b + c and b < a + c and c < a + b and a > 0 and b > 0 and c > 0):
	if ( a == b and b == c):
		print("Tipo do triangulo: equilatero")
	elif(a == b or b == c or c == a):
		print("Tipo do triangulo: isosceles")
	else:
		print("Tipo do triangulo: escaleno")	
else:
	print("Tipo do triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo do triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:58:57) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:",a, ",",b, ",",c)
if(a < b + c and b < a + c and c < a + b and a > 0 and b > 0 and c > 0):
	if ( a == b and b == c):
		print("Tipo do triangulo: equilatero")
	elif(a == b or b == c or c == a):
		print("Tipo do triangulo: isosceles")
	else:
		print("Tipo do triangulo: escaleno")	
else:
	print("Tipo do triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo do triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:59:07) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:",a, "  ,  ",b, ",",c)
if(a < b + c and b < a + c and c < a + b and a > 0 and b > 0 and c > 0):
	if ( a == b and b == c):
		print("Tipo do triangulo: equilatero")
	elif(a == b or b == c or c == a):
		print("Tipo do triangulo: isosceles")
	else:
		print("Tipo do triangulo: escaleno")	
else:
	print("Tipo do triangulo: invalido")
-- OUTPUT:
Entradas: 2.0   ,   4.0 , 4.0
Tipo do triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:59:45) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:",a, ","  ",b, ",",c)
if(a < b + c and b < a + c and c < a + b and a > 0 and b > 0 and c > 0):
	if ( a == b and b == c):
		print("Tipo do triangulo: equilatero")
	elif(a == b or b == c or c == a):
		print("Tipo do triangulo: isosceles")
	else:
		print("Tipo do triangulo: escaleno")	
else:
	print("Tipo do triangulo: invalido")
-- ERROR:
File "XXXX", line 7
    print("Entradas:",a, ","  ",b, ",",c)
                                        ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:03:09) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:",a, "," ,b, "," ,c)
if(a < b + c and b < a + c and c < a + b):
	if ( a == b and b == c):
		print("Tipo do triangulo: equilatero")
	elif(a == b or b == c or c == a):
		print("Tipo do triangulo: isosceles")
	else:
		print("Tipo do triangulo: escaleno")	
else:
	print("Tipo do triangulo: invalido")
-- EXECUTION TIME:
0.175845
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo do triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo do triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo do triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:04:30) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:",a, "," ,b, "," ,c)
if(a < b + c and b < a + c and c < a + b):
	if ( a == b and b == c):
		print("Tipo do triangulo: equilatero")
	elif(a == b or b == c or c == a):
		print("Tipo do triangulo: isosceles")
	else:
		print("Tipo do triangulo: escaleno")	
else:
	print("Tipo do triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo do triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:05:03) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:",a, "," ,b, "," ,c)
if(a < b + c and b < a + c and c < a + b):
	if ( a == b and b == c):
		print("Tipo de triangulo: equilatero")
	elif(a == b or b == c or c == a):
		print("Tipo de triangulo: isosceles")
	else:
		print("Tipo de triangulo: escaleno")	
else:
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.155479
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
