== TEST (2019-04-26 21:29:15) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
e=float(input("Informe as horas extras: "))
f=float(input("Informe as horas de falta: "))
if((e-(f/4))<=400):
	print(e,"extras e",f, "de falta")
	print("R$ 100")
elif((e-(f/4))>400):
	print(e,"extras e",f, "de falta")
	print("R$ 500")
-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 21:29:33) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
e=float(input("Informe as horas extras: "))
f=float(input("Informe as horas de falta: "))
if((e-(f/4))<=400):
	print(e,"extras e",f, "de falta")
	print("R$ 100")
elif((e-(f/4))>400):
	print(e,"extras e",f, "de falta")
	print("R$ 500")
-- EXECUTION TIME:
0.177151
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 100
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 100
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:32:03) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
e=float(input("Informe as horas extras: "))
f=float(input("Informe as horas de falta: "))
fd=f/4
if((e-fd <=400):
	print(e,"extras e",f, "de falta")
	print("R$ 100")
elif((e-(f/4))>400):
	print(e,"extras e",f, "de falta")
	print("R$ 500")
-- ERROR:
File "XXXX", line 5
    if((e-fd <=400):
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:32:16) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
e=float(input("Informe as horas extras: "))
f=float(input("Informe as horas de falta: "))
fd=(f/4)
if((e-fd <=400):
	print(e,"extras e",f, "de falta")
	print("R$ 100")
elif((e-(f/4))>400):
	print(e,"extras e",f, "de falta")
	print("R$ 500")
-- ERROR:
File "XXXX", line 5
    if((e-fd <=400):
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:32:27) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
e=float(input("Informe as horas extras: "))
f=float(input("Informe as horas de falta: "))
fd=(f/4)
if(e-fd <=400):
	print(e,"extras e",f, "de falta")
	print("R$ 100")
elif((e-(f/4))>400):
	print(e,"extras e",f, "de falta")
	print("R$ 500")
-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:32:53) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
e=float(input("Informe as horas extras: "))
f=float(input("Informe as horas de falta: "))
fd=(f/4)
if(e-fd <=400):
	print(e,"extras e",f, "de falta")
	print("R$ 100")
elif((e-(f/4))>400):
	print(e,"extras e",f, "de falta")
	print("R$ 500")
-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 21:33:13) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
e=float(input("Informe as horas extras: "))
f=float(input("Informe as horas de falta: "))
fd=(f/4)
if(e-fd <=400):
	print(e,"extras e",f, "de falta")
	print("R$ 100")
elif((e-(f/4))>400):
	print(e,"extras e",f, "de falta")
	print("R$ 500")
-- EXECUTION TIME:
0.198922
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 100
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 100
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 21:44:17) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
e=float(input("Informe as horas extras: "))
f=float(input("Informe as horas de falta: "))
fd=(f/4)
if(e-fd <=400):
	print(e,"extras e",f, "de falta")
	print("R$ 100")
elif(e-fd>400):
	print(e,"extras e",f, "de falta")
	print("R$ 500")
-- EXECUTION TIME:
0.158367
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 100
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 100
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 21:53:47) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
e=float(input("Informe as horas extras: "))
f=float(input("Informe as horas de falta: "))
h=e-(f/4)
if(h <= 400):
	print(e,"extras e",f, "de falta")
	print("R$ 100")
elif(h > 400):
	print(e,"extras e",f, "de falta")
	print("R$ 500")
-- EXECUTION TIME:
0.203125
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 100
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 100
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:53:49) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
e=float(input("Informe as horas extras: "))
f=float(input("Informe as horas de falta: "))
h=e-(f/4)
if(h <= 400):
	print(e,"extras e",f, "de falta")
	print("R$ 100")
elif(h > 400):
	print(e,"extras e",f, "de falta")
	print("R$ 500")
-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:55:41) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
e=float(input("Informe as horas extras: "))
f=float(input("Informe as horas de falta: "))
h=e- (1/4)*f
if(h <= 400):
	print(e,"extras e",f, "de falta")
	print("R$ 100")
elif(h > 400):
	print(e,"extras e",f, "de falta")
	print("R$ 500")
-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:51:37) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
e=float(input("Informe as horas extras: "))
f=float(input("Informe as horas de falta: "))
h=e-(1/4)*f
if(h <= 400):
	print(e,"extras e",f, "de falta")
	g=100.0
	print("R$",round(g,2))
elif(h > 400):
	print(e,"extras e",f, "de falta")
	g=500.0
	print("R$",(roundg,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    print("R$",(roundg,2))
NameError: name 'roundg' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 21:51:55) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
e=float(input("Informe as horas extras: "))
f=float(input("Informe as horas de falta: "))
h=e-(1/4)*f
if(h <= 400):
	print(e,"extras e",f, "de falta")
	g=100.0
	print("R$",round(g,2))
elif(h > 400):
	print(e,"extras e",f, "de falta")
	g=500.0
	print("R$",(roundg,2))
-- EXECUTION TIME:
0.250593
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1674/1879/main.py", line 12, in <module>
    print("R$",(roundg,2))
NameError: name 'roundg' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 21:53:54) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
e=float(input("Informe as horas extras: "))
f=float(input("Informe as horas de falta: "))
h=e-(1/4)*f
print(e,"extras e",f, "de falta")
if(h <= 400):
	g=100.0
	print("R$",round(g,2))
elif(h > 400):
	g=500.0
	print("R$",(roundg,2))
-- EXECUTION TIME:
0.178488
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1674/1879/main.py", line 11, in <module>
    print("R$",(roundg,2))
NameError: name 'roundg' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 21:55:09) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
e=float(input("Informe as horas extras: "))
f=float(input("Informe as horas de falta: "))
print(e,"extras e",f, "de falta")
h=e-(1/4*f)

if(h <= 400):
	g=100.0
	print("R$",round(g,2))
elif(h > 400):
	g=500.0
	print("R$",(roundg,2))
-- EXECUTION TIME:
0.138241
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1674/1879/main.py", line 12, in <module>
    print("R$",(roundg,2))
NameError: name 'roundg' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 21:56:15) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
e=float(input("Informe as horas extras: "))
f=float(input("Informe as horas de falta: "))
print(e,"extras e",f, "de falta")
h=e-(1/4*f)

if(h <= 400):
	g=100.0
	print("R$",round(g,2))
elif(h > 400):
	g=500.0
	print("R$",(round,2))
-- EXECUTION TIME:
0.161493
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ (<built-in function round>, 2)
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 100.0
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 100.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:56:17) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
e=float(input("Informe as horas extras: "))
f=float(input("Informe as horas de falta: "))
print(e,"extras e",f, "de falta")
h=e-(1/4*f)

if(h <= 400):
	g=100.0
	print("R$",round(g,2))
elif(h > 400):
	g=500.0
	print("R$",(round,2))
-- OUTPUT:
420.0 extras e 20.0 de falta
R$ (<built-in function round>, 2)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 21:58:06) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
e= float(input("Informe as horas extras: "))
f= float(input("Informe as horas de falta: "))
print(e," extras e ",f," de falta")
h= e - (1/4*f)

if(h <= 400):
	g=100.0
	print("R$",round(g,2))
elif(h > 400):
	g=500.0
	print("R$",round(g,2))
-- EXECUTION TIME:
0.151063
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0  extras e  20.0  de falta
R$ 500.0
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5  extras e  100.0  de falta
R$ 100.0
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0  extras e  44.0  de falta
R$ 100.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
