== TEST (2019-07-02 11:20:31) 
-- CODE:
from numpy import*
mt=array(input("insira a matriz quadrada: "))
prihnt(mt)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:20:35) 
-- CODE:
from numpy import*
mt=array(input("insira a matriz quadrada: "))
print(mt)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:21:11) 
-- CODE:
from numpy import*
mt=array(eval(input("insira a matriz quadrada: ")))
print(mt)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:24:31) 
-- CODE:
from numpy import*
mt=array(eval(input("insira a matriz quadrada: ")))
v=array(shape(mt)[0],int=dtype)
for i in range(shape(mt)[0]):
	for j in range(shape(mt)[0]):
		if i>j:
			v[i]=mt[i,j]
print(v)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:24:44) 
-- CODE:
from numpy import*
mt=array(eval(input("insira a matriz quadrada: ")))
v=array(shape(mt)[0],int=dtype)
print(v)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:25:11) 
-- CODE:
from numpy import*
mt=array(eval(input("insira a matriz quadrada: ")))
q=shape(mt)[0]

print(q)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:25:35) 
-- CODE:
from numpy import*
mt=array(eval(input("insira a matriz quadrada: ")))
q=shape(mt)[0]
v=array(q,dtype=int)
print(q,v)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:25:50) 
-- CODE:
from numpy import*
mt=array(eval(input("insira a matriz quadrada: ")))
q=shape(mt)[0]
v=array(q,dtype=int)
print(qv)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:25:53) 
-- CODE:
from numpy import*
mt=array(eval(input("insira a matriz quadrada: ")))
q=shape(mt)[0]
v=array(q,dtype=int)
print(v)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:26:05) 
-- CODE:
from numpy import*
mt=array(eval(input("insira a matriz quadrada: ")))
q=shape(mt)[0]
v=array((q),dtype=int)
print(v)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:26:51) 
-- CODE:
from numpy import*
mt=array(eval(input("insira a matriz quadrada: ")))
q=shape(mt)[0]
r=(q**2-q)//2
print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:28:33) 
-- CODE:
from numpy import*
mt=array(eval(input("insira a matriz quadrada: ")))
q=shape(mt)[0]
r=(q**2-q)//2
for i in range(q):
	for j in range(q):
		if i>j:
			print(mt[i,j])
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:28:44) 
-- CODE:
from numpy import*
mt=array(eval(input("insira a matriz quadrada: ")))
q=shape(mt)[0]
r=(q**2-q)//2
print(mt)
for i in range(q):
	for j in range(q):
		if i>j:
			print(mt[i,j])
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:30:05) 
-- CODE:
from numpy import*
mt=array(eval(input("insira a matriz quadrada: ")))
v=array((q,q),dtype=int)
q=shape(mt)[0]
r=(q**2-q)//2
print(mt)
for i in range(q):
	for j in range(q):
		if i>j:
			v[i]=mt[i,j]
			print(mt[i,j])
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:30:40) 
-- CODE:
from numpy import*
mt=array(eval(input("insira a matriz quadrada: ")))

q=shape(mt)[0]
v=array((q,q),dtype=int)
r=(q**2-q)//2
print(mt)
for i in range(q):
	for j in range(q):
		if i>j:
			v[i]=mt[i,j]
			print(mt[i,j])
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:31:15) 
-- CODE:
from numpy import*
mt=array(eval(input("insira a matriz quadrada: ")))

q=shape(mt)[0]
v=array((q,q),dtype=int)
r=(q**2-q)//2
print(mt)
for i in range(q):
	for j in range(q):
		if i>j:
			for k in range(v)
			v[i]=mt[i,j]
			print(mt[i,j])
-- ERROR:
File "XXXX", line 11
    for k in range(v)
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:31:22) 
-- CODE:
from numpy import*
mt=array(eval(input("insira a matriz quadrada: ")))

q=shape(mt)[0]
v=array((q,q),dtype=int)
r=(q**2-q)//2
print(mt)
for i in range(q):
	for j in range(q):
		if i>j:
			for k in range(v):
				v[i]=mt[i,j]
				print(mt[i,j])
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:31:31) 
-- CODE:
from numpy import*
mt=array(eval(input("insira a matriz quadrada: ")))

q=shape(mt)[0]
v=array((q,q),dtype=int)
r=(q**2-q)//2
print(mt)
for i in range(q):
	for j in range(q):
		if i>j:
			for k in range(q):
				v[i]=mt[i,j]
				print(mt[i,j])
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:31:36) 
-- CODE:
from numpy import*
mt=array(eval(input("insira a matriz quadrada: ")))

q=shape(mt)[0]
v=array((q,q),dtype=int)
r=(q**2-q)//2
print(mt)
for i in range(q):
	for j in range(q):
		if i>j:
			for k in range(q):
				v[k]=mt[i,j]
				print(mt[i,j])
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:31:54) 
-- CODE:
from numpy import*
mt=array(eval(input("insira a matriz quadrada: ")))

q=shape(mt)[0]
v=array((q,q),dtype=int)
r=(q**2-q)//2
print(v)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:32:44) 
-- CODE:
from numpy import*
mt=array(eval(input("insira a matriz quadrada: ")))

q=shape(mt)[0]
v=array(3,dtype=int)
r=(q**2-q)//2
print(v)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:33:29) 
-- CODE:
from numpy import*
mt=array(eval(input("insira a matriz quadrada: ")))

q=shape(mt)[0]
v=array([3],dtype=int)
r=(q**2-q)//2
print(v)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:33:51) 
-- CODE:
from numpy import*
mt=array(eval(input("insira a matriz quadrada: ")))

q=shape(mt)[0]
v=array((q,q),dtype=int)
r=(q**2-q)//2
print(v)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:34:42) 
-- CODE:
from numpy import*
mt=array(eval(input("insira a matriz quadrada: ")))

q=shape(mt)[0]
v=zeros(q,dtype=int)
r=(q**2-q)//2
print(v)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:34:50) 
-- CODE:
from numpy import*
mt=array(eval(input("insira a matriz quadrada: ")))

q=shape(mt)[0]
v=zeros(q,dtype=int)
r=(q**2-q)//2
print(v[0])
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:36:48) 
-- CODE:
from numpy import*
mt=array(eval(input("insira a matriz quadrada: ")))
q=shape(mt)[0]
r=(q**2-q)//2
v=zeros(r,dtype=int)
for i in range(q):
	for j in range(q):
		if i>j:
			for k in range(r):
				v[k]=mt[i,j]
				print(v)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:37:29) 
-- CODE:
from numpy import*
mt=array(eval(input("insira a matriz quadrada: ")))
q=shape(mt)[0]
r=(q**2-q)//2
v=zeros(r,dtype=int)
print(mt)
for i in range(q):
	for j in range(q):
		if i>j:
			for k in range(r):
				v[k]=mt[i,j]
				print(v)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:38:18) 
-- CODE:
from numpy import*
mt=array(eval(input("insira a matriz quadrada: ")))
q=shape(mt)[0]
r=(q**2-q)//2
v=zeros(r,dtype=int)
print(mt)
for i in range(q):
	for j in range(q):
		if i>j:
			v[i]=mt[i,j]
			print(v)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:38:43) 
-- CODE:
from numpy import*
mt=array(eval(input("insira a matriz quadrada: ")))
q=shape(mt)[0]
r=(q**2-q)//2
v=zeros(r,dtype=int)
print(mt)
for i in range(q):
	for j in range(q):
		if i>j:
			v[i]=mt[i,j]
			print(i,j)
			print(v)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:40:15) 
-- CODE:
from numpy import*
mt=array(eval(input("insira a matriz quadrada: ")))
q=shape(mt)[0]
r=(q**2-q)//2
v=zeros(r,dtype=int)
s=0
print(mt)
for i in range(q):
	for j in range(q):
		if i>j:
			v[s]=mt[i,j]
			s=s+1
			print(i,j)
			print(v)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:40:45) 
-- CODE:
from numpy import*
mt=array(eval(input("insira a matriz quadrada: ")))
q=shape(mt)[0]
r=(q**2-q)//2
v=zeros(r,dtype=int)
s=0
print(mt)
for i in range(q):
	for j in range(q):
		if i>j:
			v[s]=mt[i,j]
			s=s+1
print(min(v))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:40:55) 
-- CODE:
from numpy import*
mt=array(eval(input("insira a matriz quadrada: ")))
q=shape(mt)[0]
r=(q**2-q)//2
v=zeros(r,dtype=int)
s=0
for i in range(q):
	for j in range(q):
		if i>j:
			v[s]=mt[i,j]
			s=s+1
print(min(v))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:41:01) 
-- CODE:
from numpy import*
mt=array(eval(input("insira a matriz quadrada: ")))
q=shape(mt)[0]
r=(q**2-q)//2
v=zeros(r,dtype=int)
s=0
for i in range(q):
	for j in range(q):
		if i>j:
			v[s]=mt[i,j]
			s=s+1
print(min(v))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:41:10) 
-- CODE:
from numpy import*
mt=array(eval(input("insira a matriz quadrada: ")))
q=shape(mt)[0]
r=(q**2-q)//2
v=zeros(r,dtype=int)
s=0
for i in range(q):
	for j in range(q):
		if i>j:
			v[s]=mt[i,j]
			s=s+1
print(min(v))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:41:35) 
-- CODE:
from numpy import*
mt=array(eval(input("insira a matriz quadrada: ")))
q=shape(mt)[0]
r=(q**2-q)//2
v=zeros(r,dtype=int)
s=0
for i in range(q):
	for j in range(q):
		if i>j:
			v[s]=mt[i,j]
			print(mt[i,j])
			s=s+1
print(min(v))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:41:54) 
-- CODE:
from numpy import*
mt=array(eval(input("insira a matriz quadrada: ")))
q=shape(mt)[0]
r=(q**2-q)//2
v=zeros(r,dtype=float)
s=0
for i in range(q):
	for j in range(q):
		if i>j:
			v[s]=mt[i,j]
			print(mt[i,j])
			s=s+1
print(min(v))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:42:02) 
-- CODE:
from numpy import*
mt=array(eval(input("insira a matriz quadrada: ")))
q=shape(mt)[0]
r=(q**2-q)//2
v=zeros(r,dtype=float)
s=0
for i in range(q):
	for j in range(q):
		if i>j:
			v[s]=mt[i,j]
			s=s+1
print(min(v))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 11:42:14) 
-- CODE:
from numpy import*
mt=array(eval(input("insira a matriz quadrada: ")))
q=shape(mt)[0]
r=(q**2-q)//2
v=zeros(r,dtype=float)
s=0
for i in range(q):
	for j in range(q):
		if i>j:
			v[s]=mt[i,j]
			s=s+1
print(min(v))
-- EXECUTION TIME:
1.15536
-- TEST CASE 1:
---- input:
[[10,8,2],[20,16,4],[40,32,8]]
---- correct output:
20.0
---- user output:
20.0
-- TEST CASE 2:
---- input:
[[0.32,0.48,0.56],[0.12,0.54,0.34],[0.67,0.89,0.76]]
---- correct output:
0.12
---- user output:
0.12
-- TEST CASE 3:
---- input:
[[34.5,66.7,89.7,65.8,34.6],[77.8,65.7,89.7,23.4,45.9],[12.3,98.9,23.4,67.7,55.5],[33.3,44.4,56.8,91.3,51.9],[11.1,22.2,34.5,66.5,15.9]]
---- correct output:
11.1
---- user output:
11.1
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
