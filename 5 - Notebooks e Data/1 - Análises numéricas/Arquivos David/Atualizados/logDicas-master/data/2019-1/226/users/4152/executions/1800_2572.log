== TEST (2019-06-11 18:07:52) 
-- CODE:
from numpy import *
vet = array(eval(input("Vetor de metriculas: ")))
vet1 = zeros(8, dtype=int)
for i in range(vet):
	print(i)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 18:12:52) 
-- CODE:
from numpy import *
vet = array(eval(input("Vetor de metriculas: ")))
vet1 = zeros(8, dtype=int)
par = 0
impar = 0
for i in range(vet1):
	if ((vet[i] % 2) == 0):
		par = par + vet[i]
	elif ((vet[i] % 2) == 0):
		impar = impar + vet[i]
print(par)
print(impar)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 18:13:21) 
-- CODE:
from numpy import *
vet = array(eval(input("Vetor de metriculas: ")))
vet1 = zeros(8, dtype=int)
par = 0
impar = 0
for i in range(size(vet)):
	if ((vet[i] % 2) == 0):
		par = par + vet[i]
	elif ((vet[i] % 2) == 0):
		impar = impar + vet[i]
print(par)
print(impar)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 18:14:55) 
-- CODE:
from numpy import *
vet = array(eval(input("Vetor de metriculas: ")))
vet1 = zeros(8, dtype=int)
par = 0
impar = 0
for i in range(size(vet)):
	if ((vet[i] % 2) == 0):
		par = par + i
	elif ((vet[i] % 2) == 0):
		impar = impar + i
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 16:46:19) 
-- CODE:
from numpy import *
vet = array(eval(input("Vetor de metriculas: ")))
b = 0
for i in vet:
	if (i % 2 == 0):
		 = b + 1
p = zeros(b, dtype=int)
x = 0
g = 0
for r in a:
   if (r % 2 != 0):
      p[x] = a[g]
      x = x + 1
   g = g + 1
print(p)
	
-- EXECUTION TIME:
0.672995
-- ERROR:
  File "/home/codebench/codes/1800/2572/main.py", line 6
    = b + 1
    ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 16:47:05) 
-- CODE:
from numpy import *
vet = array(eval(input("Vetor de metriculas: ")))
b = 0
for i in vet:
	if (i % 2 == 0):
      b = b + 1
p = zeros(b, dtype=int)
x = 0
g = 0
for r in a:
   if (r % 2 != 0):
      p[x] = a[g]
      x = x + 1
   g = g + 1
print(p)
	
-- ERROR:
File "XXXX", line 6
    b = b + 1
            ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 16:47:44) 
-- CODE:
from numpy import *
vet = array(eval(input("Vetor de metriculas: ")))
b = 0
for i in vet:
	if (i % 2 == 0):
      b = b + 1
p = zeros(b, dtype=int)
x = 0
g = 0
for r in a:
   if (r % 2 != 0):
      p[x] = a[g]
      x = x + 1
   g = g + 1
print(p)
	
-- ERROR:
File "XXXX", line 6
    b = b + 1
            ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 16:48:20) 
-- CODE:
from numpy import *
vet = array(eval(input("Vetor de metriculas: ")))
b = 0
for i in vet:
	if (i % 2 == 0):
      b = b + 1
p = zeros(b, dtype=int)
x = 0
g = 0
for r in a:
   if (r % 2 != 0):
      p[x] = a[g]
      x = x + 1
   g = g + 1
print(p)
	
-- ERROR:
File "XXXX", line 6
    b = b + 1
            ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 16:49:26) 
-- CODE:
from numpy import *
vet = array(eval(input("Vetor de metriculas: ")))
b = 0
for i in vet:
	if (i % 2 == 0):
      b+=1
p = zeros(b, dtype=int)
x = 0
g = 0
for r in a:
   if (r % 2 != 0):
      p[x] = a[g]
      x+=1
   g+=1
print(p)
	
-- ERROR:
File "XXXX", line 6
    b+=1
       ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 16:50:20) 
-- CODE:
from numpy import *
vet = array(eval(input("Vetor de metriculas: ")))
b = 0
for i in vet:
	if (i % 2 == 0):
      b = b + 1
p = zeros(b, dtype=int)
x = 0
g = 0
for r in a:
   if (r % 2 != 0):
      p[x] = a[g]
      x = x + 1
   g = g + 1
print(p)
	
-- ERROR:
File "XXXX", line 6
    b = b + 1
            ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 19:09:55) 
-- CODE:
from numpy import *
vet = array(eval(input("Vetor de metriculas: ")))
b = 0
for i in vet:
	if (i % 2 == 0):
      b = b + 1
p = zeros(b, dtype=int)
x = 0
g = 0
for r in a:
   if (r % 2 != 0):
      p[x] = a[g]
      x = x + 1
   g = g + 1
print(p)
	
-- ERROR:
File "XXXX", line 6
    b = b + 1
            ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 19:10:36) 
-- CODE:
from numpy import *
vet = array(eval(input("Vetor de metriculas: ")))
b = 0
for i in vet:
	if (i % 2 == 0):
		b = b + 1
p = zeros(b, dtype=int)
x = 0
g = 0
for r in a:
   if (r % 2 != 0):
		p[x] = a[g]
		x = x + 1
	g = g + 1
print(p)
	
-- ERROR:
File "XXXX", line 12
    p[x] = a[g]
              ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 19:10:59) 
-- CODE:
from numpy import *
vet = array(eval(input("Vetor de metriculas: ")))
b = 0
for i in vet:
	if (i % 2 == 0):
		b = b + 1
p = zeros(b, dtype=int)
x = 0
g = 0
for r in a:
   if (r % 2 != 0):
		p[x] = a[g]
		x = x + 1
	g = g + 1
print(p)
	
-- ERROR:
File "XXXX", line 12
    p[x] = a[g]
              ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 19:11:12) 
-- CODE:
from numpy import *
vet = array(eval(input("Vetor de metriculas: ")))
b = 0
for i in vet:
	if (i % 2 == 0):
		b = b + 1
p = zeros(b, dtype=int)
x = 0
g = 0
for r in a:
   if (r % 2 != 0):
			p[x] = a[g]
			x = x + 1
	g = g + 1
print(p)
	
-- ERROR:
File "XXXX", line 12
    p[x] = a[g]
              ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 19:11:44) 
-- CODE:
from numpy import *
vet = array(eval(input("Vetor de metriculas: ")))
b = 0
for i in vet:
	if (i % 2 == 0):
		b = b + 1
p = zeros(b, dtype=int)
x = 0
g = 0
for r in a:
   if (r % 2 != 0):
	   p[x] = a[g]
		x = x + 1
	g = g + 1
print(p)
	
-- ERROR:
File "XXXX", line 13
    x = x + 1
            ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 19:11:55) 
-- CODE:
from numpy import *
vet = array(eval(input("Vetor de metriculas: ")))
b = 0
for i in vet:
	if (i % 2 == 0):
		b = b + 1
p = zeros(b, dtype=int)
x = 0
g = 0
for r in a:
   if (r % 2 != 0):
	   p[x] = a[g]
	   x = x + 1
	g = g + 1
print(p)
	
-- ERROR:
File "XXXX", line 14
    g = g + 1
            ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 19:12:11) 
-- CODE:
from numpy import *
vet = array(eval(input("Vetor de metriculas: ")))
b = 0
for i in vet:
	if (i % 2 == 0):
		b = b + 1
p = zeros(b, dtype=int)
x = 0
g = 0
for r in a:
   if (r % 2 != 0):
	   p[x] = a[g]
	   x = x + 1
   g = g + 1
print(p)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 19:12:54) 
-- CODE:
from numpy import *
vet = array(eval(input("Vetor de metriculas: ")))
b = 0
for i in vet:
	if (i % 2 == 0):
		b = b + 1
p = zeros(b, dtype=int)
x = 0
g = 0
for r in a:
   if (r % 2 != 0):
	   p[x] = r[g]
	   x = x + 1
   g = g + 1
print(p)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 19:13:18) 
-- CODE:
from numpy import *
vet = array(eval(input("Vetor de metriculas: ")))
b = 0
for i in vet:
	if (i % 2 == 0):
		b = b + 1
p = zeros(b, dtype=int)
x = 0
g = 0
for r in a:
   if (r % 2 != 0):
	   p[x] = r[g]
	   x = x + 1
   g = g + 1
print(p)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 19:13:51) 
-- CODE:
from numpy import *
vet = array(eval(input("Vetor de metriculas: ")))
b = 0
for i in vet:
	if (i % 2 == 0):
		b = b + 1
p = zeros(b, dtype=int)
x = 0
g = 0
for r in vet:
   if (r % 2 != 0):
	   p[x] = vet[g]
	   x = x + 1
   g = g + 1
print(p)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 19:14:13) 
-- CODE:
from numpy import *
vet = array(eval(input("Vetor de metriculas: ")))
b = 0
for i in vet:
	if (i % 2 == 0):
		b = b + 1
p = zeros(b, dtype=int)
x = 0
g = 0
for r in b:
   if (r % 2 != 0):
	   p[x] = b[g]
	   x = x + 1
   g = g + 1
print(p)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 19:14:43) 
-- CODE:
from numpy import *
vet = array(eval(input("Vetor de metriculas: ")))
b = 0
for i in vet:
	if (i % 2 == 0):
		b = b + 1
p = zeros(b, dtype=float)
x = 0
g = 0
for r in b:
   if (r % 2 != 0):
	   p[x] = b[g]
	   x = x + 1
   g = g + 1
print(p)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 19:15:23) 
-- CODE:
from numpy import *
vet = array(eval(input("Vetor de metriculas: ")))
b = 0
for i in vet:
	if (i % 2 == 0):
		b = b + 1
p = zeros(b, dtype=int)
x = 0
g = 0
for r in p:
   if (r % 2 != 0):
	   p[x] = p[g]
	   x = x + 1
   g = g + 1
print(p)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 19:18:01) 
-- CODE:
from numpy import *
vet = array(eval(input("Vetor de metriculas: ")))
b = 0
for i in vet:
	if (i % 2 == 0):
		b = b + 1
p = zeros(b, dtype=int)
x = 0
g = 0
for r in range(p):
   if (r % 2 != 0):
	   p[x] = p[g]
	   x = x + 1
   g = g + 1
print(p)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 19:19:04) 
-- CODE:
from numpy import *
vet = array(eval(input("Vetor de metriculas: ")))
b = 0
for i in vet:
	if (i % 2 == 0):
		b = b + 1
p = zeros(b, dtype=int)
x = 0
g = 0
for r in vet:
   if (r % 2 != 0):
	   p[x] = vet[g]
	   x = x + 1
   g = g + 1
print(vet)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 19:20:04) 
-- CODE:
from numpy import *
vet = array(eval(input("Vetor de metriculas: ")))
b = 0
for i in vet:
	if (i % 2 == 0):
		b = b + 1
p = zeros(b, dtype=int)
x = 0
g = 0
for r in vet:
   if (r % 2 != 0):
	   p[x] = vet[g]
	   x = x + 1
   g = g + 1
print(p)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 19:20:21) 
-- CODE:
from numpy import *
vet = array(eval(input("Vetor de metriculas: ")))
b = 0
for i in vet:
	if (i % 2 == 0):
		b = b + 1
p = zeros(b, dtype=int)
x = 0
g = 0
for r in vet:
   if (r % 2 != 0):
	   p[x] = vet[g]
	   x = x + 1
   g = g + 1
print(p)
	
-- EXECUTION TIME:
1.10032
-- TEST CASE 1:
---- input:
[75247561,76546316,75713658,97135671,70356874]
---- correct output:
[75247561 97135671]
---- user output:
[75247561 97135671        0]
-- TEST CASE 2:
---- input:
[13017594,57417542,85024758,12475981,75942785,91875987,29584192,85794217]
---- correct output:
[12475981 75942785 91875987 85794217]
---- user output:
[12475981 75942785 91875987 85794217]
-- TEST CASE 3:
---- input:
[31874903,74902746,23742046]
---- correct output:
[31874903]
---- user output:
[31874903        0]
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 19:20:47) 
-- CODE:
from numpy import *
vet = array(eval(input("Vetor de metriculas: ")))
b = 0
for i in vet:
	if (i % 2 == 0):
		b = b + 1
p = zeros(b, dtype=int)
x = 0
g = 0
for r in b:
   if (r % 2 != 0):
	   p[x] = b[g]
	   x = x + 1
   g = g + 1
print(p)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 19:21:04) 
-- CODE:
from numpy import *
vet = array(eval(input("Vetor de metriculas: ")))
b = 0
for i in vet:
	if (i % 2 == 0):
		b = b + 1
p = zeros(b, dtype=int)
x = 0
g = 0
for r in b:
   if (r % 2 != 0):
	   p[x] = vet[g]
	   x = x + 1
   g = g + 1
print(p)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 19:21:37) 
-- CODE:
from numpy import *
vet = array(eval(input("Vetor de metriculas: ")))
b = 0
for i in vet:
	if (i % 2 == 0):
		b = b + 1
p = zeros(b, dtype=int)
x = 0
g = 0
for r in vet:
   if (r % 2 != 0):
	   p[x] = vet[g]
	   x = x + 1
   g = g + 1
print(p - b)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 19:38:37) 
-- CODE:
from numpy import *
vet = array(eval(input("Vetor de metriculas: ")))
b = 0
for i in vet:
	if (i % 2 != 0):
		b = b + 1
p = zeros(b, dtype=int)
x = 0
g = 0
for r in vet:
   if (r % 2 != 0):
	   p[x] = vet[g]
	   x = x + 1
   g = g + 1
print(p)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 19:38:56) 
-- CODE:
from numpy import *
vet = array(eval(input("Vetor de metriculas: ")))
b = 0
for i in vet:
	if (i % 2 != 0):
		b = b + 1
p = zeros(b, dtype=int)
x = 0
g = 0
for r in vet:
   if (r % 2 != 0):
	   p[x] = vet[g]
	   x = x + 1
   g = g + 1
print(p)
	
-- EXECUTION TIME:
1.09138
-- TEST CASE 1:
---- input:
[75247561,76546316,75713658,97135671,70356874]
---- correct output:
[75247561 97135671]
---- user output:
[75247561 97135671]
-- TEST CASE 2:
---- input:
[13017594,57417542,85024758,12475981,75942785,91875987,29584192,85794217]
---- correct output:
[12475981 75942785 91875987 85794217]
---- user output:
[12475981 75942785 91875987 85794217]
-- TEST CASE 3:
---- input:
[31874903,74902746,23742046]
---- correct output:
[31874903]
---- user output:
[31874903]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
