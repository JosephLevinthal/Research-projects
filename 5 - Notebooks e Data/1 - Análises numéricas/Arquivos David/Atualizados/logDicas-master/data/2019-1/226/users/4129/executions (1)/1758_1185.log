== SUBMITION (2019-05-28 11:32:36) 
-- CODE:
from numpy import*
vet = array(eval(input("glicose: ")))

i = 0
cont = 0

while(i < size(vet)):
	if(vet[i] > 99):
		print(vet[i])
		cont = cont + 1
	i = i + 1

	
print(cont)
	
-- EXECUTION TIME:
0.374799
-- TEST CASE 1:
---- input:
[101,89,105,88,104,87]
---- correct output:
0
2
4
3
---- user output:
101
105
104
3
-- TEST CASE 2:
---- input:
[88,100,105,107,100,108,110,99,98,100]
---- correct output:
1
2
3
4
5
6
9
7
---- user output:
100
105
107
100
108
110
100
7
-- TEST CASE 3:
---- input:
[99,98,98,99,98,97]
---- correct output:
0
---- user output:
0
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-28 11:32:49) 
-- CODE:
from numpy import*
vet = array(eval(input("glicose: ")))

i = 0
cont = 0

while(i < size(vet)):
	if(vet[i] > 99):
		print(vet[i])
		cont = cont + 1
	i = i + 1

	
print(cont)
	
-- EXECUTION TIME:
0.344676
-- TEST CASE 1:
---- input:
[101,89,105,88,104,87]
---- correct output:
0
2
4
3
---- user output:
101
105
104
3
-- TEST CASE 2:
---- input:
[88,100,105,107,100,108,110,99,98,100]
---- correct output:
1
2
3
4
5
6
9
7
---- user output:
100
105
107
100
108
110
100
7
-- TEST CASE 3:
---- input:
[99,98,98,99,98,97]
---- correct output:
0
---- user output:
0
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 11:33:00) 
-- CODE:
from numpy import*
vet = array(eval(input("glicose: ")))

i = 0
cont = 0

while(i < size(vet)):
	if(vet[i] > 99):
		print(vet[i])
		cont = cont + 1
	i = i + 1

	
print(cont)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-28 11:33:43) 
-- CODE:
from numpy import*
vet = array(eval(input("glicose: ")))

i = 0
cont = 0

while(i < size(vet)):
	if(vet[i] > 99):
		print(i)
		cont = cont + 1
	i = i + 1

	
print(cont)
	
-- EXECUTION TIME:
0.397196
-- TEST CASE 1:
---- input:
[101,89,105,88,104,87]
---- correct output:
0
2
4
3
---- user output:
0
2
4
3
-- TEST CASE 2:
---- input:
[88,100,105,107,100,108,110,99,98,100]
---- correct output:
1
2
3
4
5
6
9
7
---- user output:
1
2
3
4
5
6
9
7
-- TEST CASE 3:
---- input:
[99,98,98,99,98,97]
---- correct output:
0
---- user output:
0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
