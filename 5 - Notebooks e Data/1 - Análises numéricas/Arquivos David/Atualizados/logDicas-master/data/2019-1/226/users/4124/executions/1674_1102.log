== TEST (2019-04-30 11:43:04) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Altura do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: "))
print("Entradas: ", H, h, r)
if(H > 0 and h > 0 and r > 0 and H > h and H > 2*r):
	if(h <= r):
		v = (pi/3) * (h ** 2) (3 * r - h)
		print("Volume: ",round(v * 1000, 3), "litros")
	elif(r < h and h <= a - r):
		v = ((4 * pi * (r ** 3))/ 6) + (pi * (r ** 2) * (h - r)
		print("Volume: ",round(v * 1000, 3), "litros")	
	elif(h > a - r):
		v = ((4 * pi * (r ** 3))/ 6) + (pi * (r ** 2) * (h - r)) * 2
		print("Volume: ",round(v * 1000, 3), "litros")											  
		
		
		
-- ERROR:
File "XXXX", line 17
    print("Volume: ",round(v * 1000, 3), "litros")	
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:44:03) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Altura do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: "))
print("Entradas: ", H, h, r)
if(H > 0 and h > 0 and r > 0 and H > h and H > 2*r):
	if(h <= r):
		v = (pi/3) * (h ** 2) * (3 * r - h)
		print("Volume: ",round(v * 1000, 3), "litros")
	elif(r < h and h <= a - r):
		v = ((4 * pi * (r ** 3))/ 6) + (pi * (r ** 2) * (h - r)
		print("Volume: ",round(v * 1000, 3), "litros")	
	elif(h > a - r):
		v = ((4 * pi * (r ** 3))/ 6) + (pi * (r ** 2) * (h - r)) * 2
		print("Volume: ",round(v * 1000, 3), "litros")											  
		
		
		
-- ERROR:
File "XXXX", line 17
    print("Volume: ",round(v * 1000, 3), "litros")	
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:44:28) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Altura do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: "))
print("Entradas: ", H, h, r)
if(H > 0 and h > 0 and r > 0 and H > h and H > 2*r):
	if(h <= r):
		v = (pi/3) * (h ** 2) * (3 * r - h)
		print("Volume: ",round(v * 1000, 3), "litros")
	elif(r < h and h <= a - r):
		v = ((4 * pi * (r ** 3))/ 6) + (pi * (r ** 2) * (h - r))
		print("Volume: ",round(v * 1000, 3), "litros")	
	elif(h > a - r):
		v = ((4 * pi * (r ** 3))/ 6) + (pi * (r ** 2) * (h - r)) * 2
		print("Volume: ",round(v * 1000, 3), "litros")											  
		
		
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 15, in <module>
    elif(r < h and h <= a - r):
NameError: name 'a' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:45:10) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Altura do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: "))
print("Entradas: ", H, h, r)
if(H > 0 and h > 0 and r > 0 and H > h and H > 2*r):
	if(h <= r):
		v = (pi/3) * (h ** 2) * (3 * r - h)
		print("Volume: ",round(v * 1000, 3), "litros")
	elif(r < h and h <= H - r):
		v = ((4 * pi * (r ** 3))/ 6) + (pi * (r ** 2) * (h - r))
		print("Volume: ",round(v * 1000, 3), "litros")	
	elif(h > a - r):
		v = ((4 * pi * (r ** 3))/ 6) + (pi * (r ** 2) * (h - r)) * 2
		print("Volume: ",round(v * 1000, 3), "litros")											  
		
		
		
-- OUTPUT:
Entradas:  11.3 5.7 2.3
Volume:  81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 11:45:25) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Altura do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: "))
print("Entradas: ", H, h, r)
if(H > 0 and h > 0 and r > 0 and H > h and H > 2*r):
	if(h <= r):
		v = (pi/3) * (h ** 2) * (3 * r - h)
		print("Volume: ",round(v * 1000, 3), "litros")
	elif(r < h and h <= H - r):
		v = ((4 * pi * (r ** 3))/ 6) + (pi * (r ** 2) * (h - r))
		print("Volume: ",round(v * 1000, 3), "litros")	
	elif(h > a - r):
		v = ((4 * pi * (r ** 3))/ 6) + (pi * (r ** 2) * (h - r)) * 2
		print("Volume: ",round(v * 1000, 3), "litros")											  
		
		
		
-- EXECUTION TIME:
0.228494
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas:  11.3 5.7 2.3
Volume:  81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas:  8.5 9.5 2.2
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas:  8.0 4.0 6.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:46:14) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Altura do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: "))
print("Entradas: ", H, h, r)
if(H > 0 and h > 0 and r > 0 and H > h and H > 2*r):
	if(h <= r):
		v = (pi/3) * (h ** 2) * (3 * r - h)
		print("Volume: ",round(v * 1000, 3), "litros")
	elif(r < h and h <= H - r):
		v = ((4 * pi * (r ** 3))/ 6) + ((pi/3) * (r ** 2) * (h - r))
		print("Volume: ",round(v * 1000, 3), "litros")	
	elif(h > a - r):
		v = ((4 * pi * (r ** 3))/ 6) + ((pi/3) * (r ** 2) * (h - r)) * 2
		print("Volume: ",round(v * 1000, 3), "litros")											  
		
		
		
-- OUTPUT:
Entradas:  11.3 5.7 2.3
Volume:  44317.4 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 11:46:16) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Altura do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: "))
print("Entradas: ", H, h, r)
if(H > 0 and h > 0 and r > 0 and H > h and H > 2*r):
	if(h <= r):
		v = (pi/3) * (h ** 2) * (3 * r - h)
		print("Volume: ",round(v * 1000, 3), "litros")
	elif(r < h and h <= H - r):
		v = ((4 * pi * (r ** 3))/ 6) + ((pi/3) * (r ** 2) * (h - r))
		print("Volume: ",round(v * 1000, 3), "litros")	
	elif(h > a - r):
		v = ((4 * pi * (r ** 3))/ 6) + ((pi/3) * (r ** 2) * (h - r)) * 2
		print("Volume: ",round(v * 1000, 3), "litros")											  
		
		
		
-- EXECUTION TIME:
0.136711
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas:  11.3 5.7 2.3
Volume:  44317.4 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas:  8.5 9.5 2.2
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas:  8.0 4.0 6.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:46:44) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Altura do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: "))
print("Entradas: ", H, h, r)
if(H > 0 and h > 0 and r > 0 and H > h and H > 2*r):
	if(h <= r):
		v = (pi/3) * (h ** 2) * (3 * r - h)
		print("Volume: ",round(v * 1000, 3), "litros")
	elif(r < h and h <= H - r):
		v = ((4 * pi * (r ** 3))/ 6) + ((pi/3) * (r ** 2) * (h - r))
		print("Volume: ",round(v * 1000, 3), "litros")	
	elif(h > a - r):
		v = ((4 * pi * (r ** 3))/ 6) + ((pi/3) * ((r ** 2) * (h - r)) * 2)
		print("Volume: ",round(v * 1000, 3), "litros")											  
		
		
		
-- OUTPUT:
Entradas:  11.3 5.7 2.3
Volume:  44317.4 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 11:46:46) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Altura do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: "))
print("Entradas: ", H, h, r)
if(H > 0 and h > 0 and r > 0 and H > h and H > 2*r):
	if(h <= r):
		v = (pi/3) * (h ** 2) * (3 * r - h)
		print("Volume: ",round(v * 1000, 3), "litros")
	elif(r < h and h <= H - r):
		v = ((4 * pi * (r ** 3))/ 6) + ((pi/3) * (r ** 2) * (h - r))
		print("Volume: ",round(v * 1000, 3), "litros")	
	elif(h > a - r):
		v = ((4 * pi * (r ** 3))/ 6) + ((pi/3) * ((r ** 2) * (h - r)) * 2)
		print("Volume: ",round(v * 1000, 3), "litros")											  
		
		
		
-- EXECUTION TIME:
0.124421
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas:  11.3 5.7 2.3
Volume:  44317.4 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas:  8.5 9.5 2.2
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas:  8.0 4.0 6.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 09:23:35) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Altura do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: "))
print("Entradas: ", H, h, r)
if(H > 0 and h > 0 and r > 0 and H > h and H > 2*r):
	if(h <= r):
		v = (pi/3) * (h ** 2) * (3 * r - h)
		print("Volume: ",round(v * 1000, 3), "litros")
	elif(r < h and h <= H - r):
		v = ((4 * pi * (r ** 3))/ 6) + ((pi/3) * (r ** 2) * (h - r))
		print("Volume: ",round(v * 1000, 3), "litros")	
	elif(h > a - r):
		v = ((4 * pi * (r ** 3))/ 6) + ((pi/3) * ((r ** 2) * (h - r)) * 2)
		print("Volume: ",round(v * 1000, 3), "litros")	
else:
	print("Entradas invalidas")
		
		
		
-- OUTPUT:
Entradas:  11.3 5.7 2.3
Volume:  44317.4 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 09:23:46) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Altura do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: "))
print("Entradas: ", H, h, r)
if(H > 0 and h > 0 and r > 0 and H > h and H > 2*r):
	if(h <= r):
		v = (pi/3) * (h ** 2) * (3 * r - h)
		print("Volume: ",round(v * 1000, 3), "litros")
	elif(r < h and h <= H - r):
		v = ((4 * pi * (r ** 3))/ 6) + ((pi/3) * (r ** 2) * (h - r))
		print("Volume: ",round(v * 1000, 3), "litros")	
	elif(h > a - r):
		v = ((4 * pi * (r ** 3))/ 6) + ((pi/3) * ((r ** 2) * (h - r)) * 2)
		print("Volume: ",round(v * 1000, 3), "litros")	
else:
	print("Entradas invalidas")
		
		
		
-- OUTPUT:
Entradas:  11.3 5.7 2.3
Volume:  44317.4 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 09:25:34) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Altura do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: "))
print("Entradas: ", H,"," h,"," r)
if(H > 0 and h > 0 and r > 0 and H > h and H > 2*r):
	if(h <= r):
		v = (pi/3) * (h ** 2) * (3 * r - h)
		print("Volume: ",round(v * 1000, 3), "litros")
	elif(r < h and h <= H - r):
		v = ((4 * pi * (r ** 3))/ 6) + ((pi/3) * (r ** 2) * (h - r))
		print("Volume: ",round(v * 1000, 3), "litros")	
	elif(h > a - r):
		v = ((4 * pi * (r ** 3))/ 6) + ((pi/3) * ((r ** 2) * (h - r)) * 2)
		print("Volume: ",round(v * 1000, 3), "litros")	
else:
	print("Entradas invalidas")
		
		
		
-- ERROR:
File "XXXX", line 10
    print("Entradas: ", H,"," h,"," r)
                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 09:26:01) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Altura do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: "))
print("Entradas: ", H,",", h,",", r)
if(H > 0 and h > 0 and r > 0 and H > h and H > 2*r):
	if(h <= r):
		v = (pi/3) * (h ** 2) * (3 * r - h)
		print("Volume: ",round(v * 1000, 3), "litros")
	elif(r < h and h <= H - r):
		v = ((4 * pi * (r ** 3))/ 6) + ((pi/3) * (r ** 2) * (h - r))
		print("Volume: ",round(v * 1000, 3), "litros")	
	elif(h > a - r):
		v = ((4 * pi * (r ** 3))/ 6) + ((pi/3) * ((r ** 2) * (h - r)) * 2)
		print("Volume: ",round(v * 1000, 3), "litros")	
else:
	print("Entradas invalidas")
		
		
		
-- OUTPUT:
Entradas:  11.3 , 5.7 , 2.3
Volume:  44317.4 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 09:31:32) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Altura do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: "))
print("Entradas: ", H,",", h,",", r)
if(H > 0 and h > 0 and r > 0 and H > h and H > 2*r):
	if(h <= r):
		v = (pi/3) * (h ** 2) * (3 * r - h)
		print("Volume: ",round(v * 1000, 3), "litros")
	elif(r < h and h <= H - r):
		v = ((pi * (r ** 2) * h) + (pi/3) * (h ** 2) * (3 * r - h)
		print("Volume: ",round(v * 1000, 3), "litros")	
	elif(h > a - r):
		v = ((4 * pi * (r ** 3))/ 6) + ((pi/3) * ((r ** 2) * (h - r)) * 2)
		print("Volume: ",round(v * 1000, 3), "litros")	
else:
	print("Entradas invalidas")
		
		
		
-- ERROR:
File "XXXX", line 17
    print("Volume: ",round(v * 1000, 3), "litros")	
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 09:32:00) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Altura do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: "))
print("Entradas: ", H,",", h,",", r)
if(H > 0 and h > 0 and r > 0 and H > h and H > 2*r):
	if(h <= r):
		v = (pi/3) * (h ** 2) * (3 * r - h)
		print("Volume: ",round(v * 1000, 3), "litros")
	elif(r < h and h <= H - r):
		v = ((pi * (r ** 2) * h) + ((pi/3) * (h ** 2) * (3 * r - h)))
		print("Volume: ",round(v * 1000, 3), "litros")	
	elif(h > a - r):
		v = ((4 * pi * (r ** 3))/ 6) + ((pi/3) * ((r ** 2) * (h - r)) * 2)
		print("Volume: ",round(v * 1000, 3), "litros")	
else:
	print("Entradas invalidas")
		
		
		
-- OUTPUT:
Entradas:  11.3 , 5.7 , 2.3
Volume:  135556.581 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 09:38:15) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Altura do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: "))
print("Entradas: ", H,",", h,",", r)
if(H > 0 and h > 0 and r > 0 and H > h and H > 2*r):
	if(h <= r):
		v = (pi/3) * (h ** 2) * (3 * r - h)
		print("Volume: ",round(v * 1000, 3), "litros")
	elif(r < h and h <= H - r):
		v = (pi * (r ** 2) * h) + ((8/3) * pi * r ** 3)
		print("Volume: ",round(v * 1000, 3), "litros")	
	elif(h > a - r):
		v = ((4 * pi * (r ** 3))/ 6) + ((pi/3) * ((r ** 2) * (h - r)) * 2)
		print("Volume: ",round(v * 1000, 3), "litros")	
else:
	print("Entradas invalidas")
		
		
		
-- OUTPUT:
Entradas:  11.3 , 5.7 , 2.3
Volume:  196658.464 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 09:38:38) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Altura do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: "))
print("Entradas: ", H,",", h,",", r)
if(H > 0 and h > 0 and r > 0 and H > h and H > 2*r):
	if(h <= r):
		v = (pi/3) * (h ** 2) * (3 * r - h)
		print("Volume: ",round(v * 1000, 3), "litros")
	elif(r < h and h <= H - r):
		v = (pi * (r ** 2) * h) + ((4/6) * pi * r ** 3)
		print("Volume: ",round(v * 1000, 3), "litros")	
	elif(h > a - r):
		v = ((4 * pi * (r ** 3))/ 6) + ((pi/3) * ((r ** 2) * (h - r)) * 2)
		print("Volume: ",round(v * 1000, 3), "litros")	
else:
	print("Entradas invalidas")
		
		
		
-- OUTPUT:
Entradas:  11.3 , 5.7 , 2.3
Volume:  120210.948 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 09:39:42) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Altura do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: "))
print("Entradas: ", H,",", h,",", r)
if(H > 0 and h > 0 and r > 0 and H > h and H > 2*r):
	if(h <= r):
		v = (pi/3) * (h ** 2) * (3 * r - h)
		print("Volume: ",round(v * 1000, 3), "litros")
	elif(r < h and h <= H - r):
		v = (pi * (r ** 2) * h) + (((4/3) * pi * r ** 3) / 2)
		print("Volume: ",round(v * 1000, 3), "litros")	
	elif(h > a - r):
		v = ((4 * pi * (r ** 3))/ 6) + ((pi/3) * ((r ** 2) * (h - r)) * 2)
		print("Volume: ",round(v * 1000, 3), "litros")	
else:
	print("Entradas invalidas")
		
		
		
-- OUTPUT:
Entradas:  11.3 , 5.7 , 2.3
Volume:  120210.948 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 14:31:27) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: "))

print("Entradas: ", H,",", h,",", r)
if(H > 0 and h > 0 and r > 0 and H > h and H > 2*r):
	if(h <= r):
		v = (pi/3) * (h ** 2) * (3 * r - h)
		print("Volume: ",round(v * 1000, 3), "litros")
	elif(r < h and h <= H - r):
		v = (pi * (r ** 2) * h) + (pi/3) * (h ** 2) * (3 * r - h)
		print("Volume: ",round(v * 1000, 3), "litros")	
	elif(h > H - r):
		v = ((4 * pi * (r ** 3))/ 6) + ((pi/3) * ((r ** 2) * (h - r)) * 2)
		print("Volume: ",round(v * 1000, 3), "litros")	
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas:  11.3 , 5.7 , 2.3
Volume:  135556.581 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 14:34:59) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: "))

print("Entradas: ", H,",", h,",", r)
if(H > 0 and h > 0 and r > 0 and H > h and H > 2*r):
	if(h <= r):
		v = (pi/3) * (h ** 2) * (3 * r - h)
		print("Volume: ",round(v * 1000, 3), "litros")
	elif(r < h and h <= H - r):
		v = (pi * (r ** 2) * h) + ((pi/3) * (h ** 2) * (3 * r - h))
		print("Volume: ",round(v * 1000, 3), "litros")	
	elif(h > H - r):
		v = ((4 * pi * (r ** 3))/ 6) + ((pi/3) * ((r ** 2) * (h - r)) * 2)
		print("Volume: ",round(v * 1000, 3), "litros")	
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas:  11.3 , 5.7 , 2.3
Volume:  135556.581 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 14:48:45) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: "))

print("Entradas: ", H,",", h,",", r)
if(H > 0 and h > 0 and r > 0 and H > h and H > 2*r):
	if(h <= r):
		v = (pi/3) * (h ** 2) * (3 * r - h)
		print("Volume: ",round(v * 1000, 3), "litros")
	elif(r < h and h <= H - r):
		#v = (pi * (r ** 2) * h) + ((pi/3) * (h ** 2) * (3 * r - h))
		v = (4 * pi * (r ** 3) / 6) + (pi * (r ** 2) * (h - r)
		print("Volume: ",round(v * 1000, 3), "litros")	
	elif(h > H - r):
		v = ((4 * pi * (r ** 3))/ 6) + ((pi/3) * ((r ** 2) * (h - r)) * 2)
		print("Volume: ",round(v * 1000, 3), "litros")	
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 20
    print("Volume: ",round(v * 1000, 3), "litros")	
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 14:48:55) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: "))

print("Entradas: ", H,",", h,",", r)
if(H > 0 and h > 0 and r > 0 and H > h and H > 2*r):
	if(h <= r):
		v = (pi/3) * (h ** 2) * (3 * r - h)
		print("Volume: ",round(v * 1000, 3), "litros")
	elif(r < h and h <= H - r):
		#v = (pi * (r ** 2) * h) + ((pi/3) * (h ** 2) * (3 * r - h))
		v = (4 * pi * (r ** 3) / 6) + (pi * (r ** 2) * (h - r))
		print("Volume: ",round(v * 1000, 3), "litros")	
	elif(h > H - r):
		v = ((4 * pi * (r ** 3))/ 6) + ((pi/3) * ((r ** 2) * (h - r)) * 2)
		print("Volume: ",round(v * 1000, 3), "litros")	
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas:  11.3 , 5.7 , 2.3
Volume:  81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 14:49:11) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

H = float(input("Altura do tanque: "))
h = float(input("Nivel de combustivel no tanque: "))
r = float(input("Raio: "))

print("Entradas: ", H,",", h,",", r)
if(H > 0 and h > 0 and r > 0 and H > h and H > 2*r):
	if(h <= r):
		v = (pi/3) * (h ** 2) * (3 * r - h)
		print("Volume: ",round(v * 1000, 3), "litros")
	elif(r < h and h <= H - r):
		#v = (pi * (r ** 2) * h) + ((pi/3) * (h ** 2) * (3 * r - h))
		v = (4 * pi * (r ** 3) / 6) + (pi * (r ** 2) * (h - r))
		print("Volume: ",round(v * 1000, 3), "litros")	
	elif(h > H - r):
		v = ((4 * pi * (r ** 3))/ 6) + ((pi/3) * ((r ** 2) * (h - r)) * 2)
		print("Volume: ",round(v * 1000, 3), "litros")	
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.209973
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas:  11.3 , 5.7 , 2.3
Volume:  81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas:  8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas:  8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
