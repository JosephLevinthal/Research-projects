== TEST (2019-04-30 11:02:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
#Intervalo 1
a = float(input("numero: "))
b = float(input("numero: "))
h = "Intervalo 1: "

#Intervalo 2
c = float(input("numero: "))
d = float(input("numero: "))
x = "Intervalo 2: "

if (b > a and d > c):
	if (b==d or a==c):
		print(h, a,",",b)
		print(x, a,",",b)
		print("Ha intersecao")
		
		
		
		
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:03:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
#Intervalo 1
a = float(input("numero: "))
b = float(input("numero: "))
h = "Intervalo 1: "

#Intervalo 2
c = float(input("numero: "))
d = float(input("numero: "))
x = "Intervalo 2: "

if (b > a and d > c):
	if (b==d or a==c):
		print(h,a,",",b)
		print(x,a,",",b)
		print("Ha intersecao")
		
		
		
		
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:03:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
#Intervalo 1
a = float(input("numero: "))
b = float(input("numero: "))
h = "Intervalo 1: "

#Intervalo 2
c = float(input("numero: "))
d = float(input("numero: "))
x = "Intervalo 2: "

if (b > a and d > c):
	if (b==d or a==c):
		print(h,a,",",b)
		print(x,a,",",b)
		print("Ha intersecao")
	else:
		print(h,a,",",b)
		print(x,a,",",b)
		print("Nao ha intersecao")
		
		
		
		
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  1.0 , 2.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:04:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
#Intervalo 1
a = float(input("numero: "))
b = float(input("numero: "))
h = "Intervalo 1: "

#Intervalo 2
c = float(input("numero: "))
d = float(input("numero: "))
x = "Intervalo 2: "

if (b > a and d > c):
	if (b==d or a==c):
		print(h,a,",",b)
		print(x,a,",",b)
		print("Ha intersecao")
	else:
		print(h,a,",",b)
		print(x,a,",",b)
		print("Nao ha intersecao")
		
		
		
		
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  1.0 , 2.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:04:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
#Intervalo 1
a = float(input("numero: "))
b = float(input("numero: "))
h = "Intervalo 1: "

#Intervalo 2
c = float(input("numero: "))
d = float(input("numero: "))
x = "Intervalo 2: "

if (b > a and d > c):
	if (b==d or a==c):
		print(h,a,",",b)
		print(x,c,",",d)
		print("Ha intersecao")
	else:
		print(h,a,",",b)
		print(x,c,",",d)
		print("Nao ha intersecao")
		
		
		
		
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:04:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
#Intervalo 1
a = float(input("numero: "))
b = float(input("numero: "))
h = "Intervalo 1: "

#Intervalo 2
c = float(input("numero: "))
d = float(input("numero: "))
x = "Intervalo 2: "

if (b > a and d > c):
	if (b==d or a==c):
		print(h,a,",",b)
		print(x,c,",",d)
		print("Ha intersecao")
	else:
		print(h,a,",",b)
		print(x,c,",",d)
		print("Nao ha intersecao")
		
		
		
		
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 11:05:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
#Intervalo 1
a = float(input("numero: "))
b = float(input("numero: "))
h = "Intervalo 1: "

#Intervalo 2
c = float(input("numero: "))
d = float(input("numero: "))
x = "Intervalo 2: "

if (b > a and d > c):
	if (b==d or a==c):
		print(h,a,",",b)
		print(x,c,",",d)
		print("Ha intersecao")
	else:
		print(h,a,",",b)
		print(x,c,",",d)
		print("Nao ha intersecao")
		
		
		
		
-- EXECUTION TIME:
0.130015
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1:  1.5 , 5.0
Intervalo 2:  2.5 , 3.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:06:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
#Intervalo 1
a = float(input("numero: "))
b = float(input("numero: "))
h = "Intervalo 1: "

#Intervalo 2
c = float(input("numero: "))
d = float(input("numero: "))
x = "Intervalo 2: "

if (b > a and d > c):
	if (b==d or a==c):
		print(h,a,",",b)
		print(x,c,",",d)
		print("Ha intersecao")
	else:
		print(h,a,",",b)
		print(x,c,",",d)
		print("Nao ha intersecao")
else:
	print(h,a,",",b)
	print(x,c,",",d)
	print("Entradas invalidas")
	
		
		
		
		
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:06:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
#Intervalo 1
a = float(input("numero: "))
b = float(input("numero: "))
h = "Intervalo 1: "

#Intervalo 2
c = float(input("numero: "))
d = float(input("numero: "))
x = "Intervalo 2: "

if (b > a and d > c):
	if (b==d or a==c):
		print(h,a,",",b)
		print(x,c,",",d)
		print("Ha intersecao")
	else:
		print(h,a,",",b)
		print(x,c,",",d)
		print("Nao ha intersecao")
else:
	print(h,a,",",b)
	print(x,c,",",d)
	print("Entradas invalidas")
	
		
		
		
		
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 11:06:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
#Intervalo 1
a = float(input("numero: "))
b = float(input("numero: "))
h = "Intervalo 1: "

#Intervalo 2
c = float(input("numero: "))
d = float(input("numero: "))
x = "Intervalo 2: "

if (b > a and d > c):
	if (b==d or a==c):
		print(h,a,",",b)
		print(x,c,",",d)
		print("Ha intersecao")
	else:
		print(h,a,",",b)
		print(x,c,",",d)
		print("Nao ha intersecao")
else:
	print(h,a,",",b)
	print(x,c,",",d)
	print("Entradas invalidas")
	
		
		
		
		
-- EXECUTION TIME:
0.13653
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1:  1.5 , 5.0
Intervalo 2:  2.5 , 3.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1:  -1.0 , -3.0
Intervalo 2:  1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:06:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
#Intervalo 1
a = float(input("numero: "))
b = float(input("numero: "))
h = "Intervalo 1: "

#Intervalo 2
c = float(input("numero: "))
d = float(input("numero: "))
x = "Intervalo 2: "

if (b > a and d > c):
	if (b==d or a==c):
		print(h,a,",",b)
		print(x,c,",",d)
		print("Ha intersecao")
	else:
		print(h,a,",",b)
		print(x,c,",",d)
		print("Nao ha intersecao")
else:
	print(h,a,",",b)
	print(x,c,",",d)
	print("Entradas invalidas")
	
		
		
		
		
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 11:06:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
#Intervalo 1
a = float(input("numero: "))
b = float(input("numero: "))
h = "Intervalo 1: "

#Intervalo 2
c = float(input("numero: "))
d = float(input("numero: "))
x = "Intervalo 2: "

if (b > a and d > c):
	if (b==d or a==c):
		print(h,a,",",b)
		print(x,c,",",d)
		print("Ha intersecao")
	else:
		print(h,a,",",b)
		print(x,c,",",d)
		print("Nao ha intersecao")
else:
	print(h,a,",",b)
	print(x,c,",",d)
	print("Entradas invalidas")
	
		
		
		
		
-- EXECUTION TIME:
0.209844
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1:  1.5 , 5.0
Intervalo 2:  2.5 , 3.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1:  -1.0 , -3.0
Intervalo 2:  1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:06:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
#Intervalo 1
a = float(input("numero: "))
b = float(input("numero: "))
h = "Intervalo 1: "

#Intervalo 2
c = float(input("numero: "))
d = float(input("numero: "))
x = "Intervalo 2: "

if (b > a and d > c):
	if (b==d or a==c):
		print(h,a,",",b)
		print(x,c,",",d)
		print("Ha intersecao")
	else:
		print(h,a,",",b)
		print(x,c,",",d)
		print("Nao ha intersecao")
else:
	print(h,a,",",b)
	print(x,c,",",d)
	print("Entradas invalidas")
	
		
		
		
		
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:08:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
#Intervalo 1
a = float(input("numero: "))
b = float(input("numero: "))
h = "Intervalo 1: "

#Intervalo 2
c = float(input("numero: "))
d = float(input("numero: "))
x = "Intervalo 2: "

if (b > a and d > c):
	if (b==d or a==c):
		print(h,a,",",b)
		print(x,c,",",d)
		print("Ha intersecao")
	else:
		print(h,a,",",b)
		print(x,c,",",d)
		print("Nao ha intersecao")
else:
	print(h,a,",",b)
	print(x,c,",",d)
	print("Entradas invalidas")
	
		
		
		
		
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:08:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
#Intervalo 1
a = float(input("numero: "))
b = float(input("numero: "))
h = "Intervalo 1: "

#Intervalo 2
c = float(input("numero: "))
d = float(input("numero: "))
x = "Intervalo 2: "

if (b > a and d > c):
	if (b==d or a==c):
		print(h,a,",",b)
		print(x,c,",",d)
		print("Ha intersecao")
	else:
		print(h,a,",",b)
		print(x,c,",",d)
		print("Nao ha intersecao")
else:
	print(h,a,",",b)
	print(x,c,",",d)
	print("Entradas invalidas")
	
		
		
		
		
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:09:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
#Intervalo 1
a = float(input("numero: "))
b = float(input("numero: "))
h = "Intervalo 1: "

#Intervalo 2
c = float(input("numero: "))
d = float(input("numero: "))
x = "Intervalo 2: "

if (b > a and d > c):
	if (b==d or a==c):
		print(h,a,",",b)
		print(x,c,",",d)
		print("Ha intersecao")
	else:
		print(h,a,",",b)
		print(x,c,",",d)
		print("Nao ha intersecao")
else:
	print(h,a,",",b)
	print(x,c,",",d)
	print("Entradas invalidas")
	
		
		
		
		
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:09:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
#Intervalo 1
a = float(input("numero: "))
b = float(input("numero: "))
h = "Intervalo 1: "

#Intervalo 2
c = float(input("numero: "))
d = float(input("numero: "))
x = "Intervalo 2: "

if (b > a and d > c):
	if (b==d or a==c):
		print(h,a,",",b)
		print(x,c,",",d)
		print("Ha intersecao")
	else:
		print(h,a,",",b)
		print(x,c,",",d)
		print("Nao ha intersecao")
else:
	print(h,a,",",b)
	print(x,c,",",d)
	print("Entradas invalidas")
	
		
		
		
		
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:10:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
#Intervalo 1
a = float(input("numero: "))
b = float(input("numero: "))
h = "Intervalo 1: "

#Intervalo 2
c = float(input("numero: "))
d = float(input("numero: "))
x = "Intervalo 2: "

if (b > a and d > c):
	if (b==d or a==c):
		print(h,a,",",b)
		print(x,c,",",d)
		print("Ha intersecao")
	else:
		print(h,a,",",b)
		print(x,c,",",d)
		print("Nao ha intersecao")
else:
	print(h,a,",",b)
	print(x,c,",",d)
	print("Entradas invalidas")
	
		
		
		
		
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:11:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
#Intervalo 1
a = float(input("numero: "))
b = float(input("numero: "))
h = "Intervalo 1: "

#Intervalo 2
c = float(input("numero: "))
d = float(input("numero: "))
x = "Intervalo 2: "

if (b > a and d > c):
	if (b>=d and b>=c):
		print(h,a,",",b)
		print(x,c,",",d)
		print("Ha intersecao")
	else:
		print(h,a,",",b)
		print(x,c,",",d)
		print("Nao ha intersecao")
else:
	print(h,a,",",b)
	print(x,c,",",d)
	print("Entradas invalidas")
	
		
		
		
		
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:12:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
#Intervalo 1
a = float(input("numero: "))
b = float(input("numero: "))
h = "Intervalo 1: "

#Intervalo 2
c = float(input("numero: "))
d = float(input("numero: "))
x = "Intervalo 2: "

if (b > a and d > c):
	if (b>=d and b>=c):
		print(h,a,",",b)
		print(x,c,",",d)
		print("Ha intersecao")
	else:
		print(h,a,",",b)
		print(x,c,",",d)
		print("Nao ha intersecao")
else:
	print(h,a,",",b)
	print(x,c,",",d)
	print("Entradas invalidas")
	
		
		
		
		
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:12:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
#Intervalo 1
a = float(input("numero: "))
b = float(input("numero: "))
h = "Intervalo 1: "

#Intervalo 2
c = float(input("numero: "))
d = float(input("numero: "))
x = "Intervalo 2: "

if (b > a and d > c):
	if (b>=d or b>=c):
		print(h,a,",",b)
		print(x,c,",",d)
		print("Ha intersecao")
	else:
		print(h,a,",",b)
		print(x,c,",",d)
		print("Nao ha intersecao")
else:
	print(h,a,",",b)
	print(x,c,",",d)
	print("Entradas invalidas")
	
		
		
		
		
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:12:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
#Intervalo 1
a = float(input("numero: "))
b = float(input("numero: "))
h = "Intervalo 1: "

#Intervalo 2
c = float(input("numero: "))
d = float(input("numero: "))
x = "Intervalo 2: "

if (b > a and d > c):
	if (b==d and b==c):
		print(h,a,",",b)
		print(x,c,",",d)
		print("Ha intersecao")
	else:
		print(h,a,",",b)
		print(x,c,",",d)
		print("Nao ha intersecao")
else:
	print(h,a,",",b)
	print(x,c,",",d)
	print("Entradas invalidas")
	
		
		
		
		
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 11:12:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
#Intervalo 1
a = float(input("numero: "))
b = float(input("numero: "))
h = "Intervalo 1: "

#Intervalo 2
c = float(input("numero: "))
d = float(input("numero: "))
x = "Intervalo 2: "

if (b > a and d > c):
	if (b==d and b==c):
		print(h,a,",",b)
		print(x,c,",",d)
		print("Ha intersecao")
	else:
		print(h,a,",",b)
		print(x,c,",",d)
		print("Nao ha intersecao")
else:
	print(h,a,",",b)
	print(x,c,",",d)
	print("Entradas invalidas")
	
		
		
		
		
-- EXECUTION TIME:
0.186905
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1:  1.5 , 5.0
Intervalo 2:  2.5 , 3.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1:  -1.0 , -3.0
Intervalo 2:  1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:13:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
#Intervalo 1
a = float(input("numero: "))
b = float(input("numero: "))
h = "Intervalo 1: "

#Intervalo 2
c = float(input("numero: "))
d = float(input("numero: "))
x = "Intervalo 2: "

if (b > a and d > c):
	if (b==d and b==c):
		print(h,a,",",b)
		print(x,c,",",d)
		print("Ha intersecao")
	else:
		print(h,a,",",b)
		print(x,c,",",d)
		print("Nao ha intersecao")
else:
	print(h,a,",",b)
	print(x,c,",",d)
	print("Entradas invalidas")
	
		
		
		
		
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:14:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
#Intervalo 1
a = float(input("numero: "))
b = float(input("numero: "))
h = "Intervalo 1: "

#Intervalo 2
c = float(input("numero: "))
d = float(input("numero: "))
x = "Intervalo 2: "

if (b > a and d > c):
	if (b==d and b==c):
		print(h,a,",",b)
		print(x,c,",",d)
		print("Ha intersecao")
	else:
		print(h,a,",",b)
		print(x,c,",",d)
		print("Nao ha intersecao")
else:
	print(h,a,",",b)
	print(x,c,",",d)
	print("Entradas invalidas")
	
		
		
		
		
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:15:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
#Intervalo 1
a = float(input("numero: "))
b = float(input("numero: "))
h = "Intervalo 1: "

#Intervalo 2
c = float(input("numero: "))
d = float(input("numero: "))
x = "Intervalo 2: "

if (b > a and d > c):
	if (b >=d and b>=c or a>=c and a>=d):
		print(h,a,",",b)
		print(x,c,",",d)
		print("Ha intersecao")
	else:
		print(h,a,",",b)
		print(x,c,",",d)
		print("Nao ha intersecao")
else:
	print(h,a,",",b)
	print(x,c,",",d)
	print("Entradas invalidas")
	
		
		
		
		
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:16:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
#Intervalo 1
a = float(input("numero: "))
b = float(input("numero: "))
h = "Intervalo 1: "

#Intervalo 2
c = float(input("numero: "))
d = float(input("numero: "))
x = "Intervalo 2: "

if (b > a and d > c):
	if (b >=d or b>=c and a>=c or a>=d):
		print(h,a,",",b)
		print(x,c,",",d)
		print("Ha intersecao")
	else:
		print(h,a,",",b)
		print(x,c,",",d)
		print("Nao ha intersecao")
else:
	print(h,a,",",b)
	print(x,c,",",d)
	print("Entradas invalidas")
	
		
		
		
		
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:20:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
#Intervalo 1
a = float(input("numero: "))
b = float(input("numero: "))
h = "Intervalo 1: "

#Intervalo 2
c = float(input("numero: "))
d = float(input("numero: "))
x = "Intervalo 2: "

if (b > a and d > c):
	if ((a<=c and b>=c) or b>=d and b>c and a<=c and a<=d)
		print(h,a,",",b)
		print(x,c,",",d)
		print("Ha intersecao")
	else:
		print(h,a,",",b)
		print(x,c,",",d)
		print("Nao ha intersecao")
else:
	print(h,a,",",b)
	print(x,c,",",d)
	print("Entradas invalidas")
	
		
		
		
		
-- ERROR:
File "XXXX", line 15
    if ((a<=c and b>=c) or b>=d and b>c and a<=c and a<=d)
                                                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:20:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
#Intervalo 1
a = float(input("numero: "))
b = float(input("numero: "))
h = "Intervalo 1: "

#Intervalo 2
c = float(input("numero: "))
d = float(input("numero: "))
x = "Intervalo 2: "

if (b > a and d > c):
	if ((a<=c and b>=c) or b>=d and b>c and a<=c and a<=d):
		print(h,a,",",b)
		print(x,c,",",d)
		print("Ha intersecao")
	else:
		print(h,a,",",b)
		print(x,c,",",d)
		print("Nao ha intersecao")
else:
	print(h,a,",",b)
	print(x,c,",",d)
	print("Entradas invalidas")
	
		
		
		
		
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 11:20:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
#Intervalo 1
a = float(input("numero: "))
b = float(input("numero: "))
h = "Intervalo 1: "

#Intervalo 2
c = float(input("numero: "))
d = float(input("numero: "))
x = "Intervalo 2: "

if (b > a and d > c):
	if ((a<=c and b>=c) or b>=d and b>c and a<=c and a<=d):
		print(h,a,",",b)
		print(x,c,",",d)
		print("Ha intersecao")
	else:
		print(h,a,",",b)
		print(x,c,",",d)
		print("Nao ha intersecao")
else:
	print(h,a,",",b)
	print(x,c,",",d)
	print("Entradas invalidas")
	
		
		
		
		
-- EXECUTION TIME:
0.238072
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1:  1.5 , 5.0
Intervalo 2:  2.5 , 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1:  -1.0 , -3.0
Intervalo 2:  1.0 , 3.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
