== TEST (2019-04-04 13:38:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("valor do raio: "))
x = float(input("altura da coluna de ar: "))
n = int(input("volume de ar (1) / volume de combustivel (2): "))
vt = 4*pi*(r**3)/3
vc = pi*(x**2)*(3*r - x)3
if(n == 1):
	print(vc)
else(n == 2):
	print(vt-vc)
	
-- ERROR:
File "XXXX", line 9
    vc = pi*(x**2)*(3*r - x)3
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 13:38:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("valor do raio: "))
x = float(input("altura da coluna de ar: "))
n = int(input("volume de ar (1) / volume de combustivel (2): "))
vt = 4*pi*(r**3)/3
vc = pi*(x**2)*(3*r - x)/3
if(n == 1):
	print(vc)
else(n == 2):
	print(vt-vc)
	
-- ERROR:
File "XXXX", line 12
    else(n == 2):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 13:39:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("valor do raio: "))
x = float(input("altura da coluna de ar: "))
n = int(input("volume de ar (1) / volume de combustivel (2): "))
vt = 4*pi*(r**3)/3
vc = pi*(x**2)*(3*r - x)/3
if(n == 1):
	print(vc)
else:
	print(vt-vc)
	
-- OUTPUT:
9.025664794069577
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 13:40:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("valor do raio: "))
x = float(input("altura da coluna de ar: "))
n = int(input("volume de ar (1) / volume de combustivel (2): "))
vt = 4*pi*(r**3)/3
vc = pi*(x**2)*(3*r - x)/3
if(n == 1):
	print(round(vc, 4))
else:
	print(round(vt-vc, 4))
	
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-04 13:40:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("valor do raio: "))
x = float(input("altura da coluna de ar: "))
n = int(input("volume de ar (1) / volume de combustivel (2): "))
vt = 4*pi*(r**3)/3
vc = pi*(x**2)*(3*r - x)/3
if(n == 1):
	print(round(vc, 4))
else:
	print(round(vt-vc, 4))
	
-- EXECUTION TIME:
0.132983
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:12:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("valor do raio: "))
x = float(input("altura da coluna de ar: "))
n = int(input("volume de ar (1) / volume de combustivel (2): "))
vt = 4*pi*(r**3)/3
vc = pi*(x**2)*(3*r - x)/3
if(n == 1):
	print(round(vc, 4))
else:
	print(round(vt-vc, 4))
	
-- EXECUTION TIME:
0.1915
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
