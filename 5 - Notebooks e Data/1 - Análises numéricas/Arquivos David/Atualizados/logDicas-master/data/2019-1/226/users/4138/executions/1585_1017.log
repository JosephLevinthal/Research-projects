== SUBMITION (2019-03-25 17:06:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("Longitude de P1: "))) 
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("Longitude de P2: ")))
R = float(input("Insira o raio: "))
A = sin(t1) * sin(t2)
B = cos(t1) * cos(t2)
C = cos(g1-g2)
D = A + B * C
E = acos(D)

d = R * E



-- EXECUTION TIME:
0.2007
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1585/1017/main.py", line 5, in <module>
    t1 = radians(float(input()))
NameError: name 'radians' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 17:06:37) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("Longitude de P1: "))) 
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("Longitude de P2: ")))
R = float(input("Insira o raio: "))
A = sin(t1) * sin(t2)
B = cos(t1) * cos(t2)
C = cos(g1-g2)
D = A + B * C
E = acos(D)

d = R * E
print(round(d, 2))



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    t1 = radians(float(input()))
NameError: name 'radians' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 17:07:13) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import radians
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("Longitude de P1: "))) 
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("Longitude de P2: ")))
R = float(input("Insira o raio: "))
A = sin(t1) * sin(t2)
B = cos(t1) * cos(t2)
C = cos(g1-g2)
D = A + B * C
E = acos(D)

d = R * E
print(round(d, 2))



-- EXECUTION TIME:
0.193276
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1585/1017/main.py", line 9, in <module>
    R = float(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 17:08:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import radians
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("Longitude de P1: "))) 
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("Longitude de P2: ")))
R = float(input("Insira o raio: "))
A = sin(t1) * sin(t2)
B = cos(t1) * cos(t2)
C = cos(g1-g2)
D = A + B * C
E = acos(D)

d = R * E
print(round(d, 2))



-- EXECUTION TIME:
0.108258
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1585/1017/main.py", line 9, in <module>
    R = float(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 17:08:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import radians
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("Longitude de P1: "))) 
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("Longitude de P2: ")))
R = float(input("Insira o raio: "))
A = sin(t1) * sin(t2)
B = cos(t1) * cos(t2)
C = cos(g1-g2)
D = A + B * C
E = acos(D)

d = R * E
print(round(d, 2))



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    R = float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 17:10:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import radians
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("Longitude de P1: "))) 
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("Longitude de P2: ")))
R = float(input("Insira o raio: "))
A = sin(t1) * sin(t2)
B = cos(t1) * cos(t2)
C = cos(g1-g2)
D = A + B * C
E = acos(D)

d = R * E
print(round(d, 2))



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    R = float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 17:10:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import radians
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("Longitude de P1: "))) 
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("Longitude de P2: ")))
R = float(input("Insira o raio: "))
A = sin(t1) * sin(t2)
B = cos(t1) * cos(t2)
C = cos(g1-g2)
D = A + B * C
E = acos(D)

d = R * E
print(round(d, 2))



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    R = float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 17:17:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import radians
from math import sin
from math import cos
from math import acos

t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("Longitude de P1: "))) 
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("Longitude de P2: ")))
R = float(input("Insira o raio: "))
A = ang(sin(t1) * sin(t2))
B = ang(cos(t1) * cos(t2))
C = ang(cos(g1-g2))
D = A + B * C
E = acos(D)

d = R * E
print(round(d, 2))



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    R = float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:00:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import radians
from math import sin
from math import cos
from math import acos

t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("Longitude de P1: "))) 
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("Longitude de P2: ")))
R = float(input("Insira o raio: "))
A = ang(sin(t1) * sin(t2))
B = ang(cos(t1) * cos(t2))
C = ang(cos(g1-g2))
D = A + B * C
E = acos(D)

d = R * E
print(round(d, 2))



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    R = float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:01:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import radians
from math import sin
from math import cos
from math import acos

t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("Longitude de P1: "))) 
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("Longitude de P2: ")))
R = float(input("Insira o raio: "))
A = ang(sin(t1) * sin(t2))
B = ang(cos(t1) * cos(t2))
C = ang(cos(g1-g2))
D = A + B * C
E = acos(D)

d = R * E
print(round(d, 2))



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    R = float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:08:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import radians
from math import sin
from math import cos
from math import acos

t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("Longitude de P1: "))) 
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("Longitude de P2: ")))
R =6371,01
A = ang(sin(t1) * sin(t2))
B = ang(cos(t1) * cos(t2))
C = ang(cos(g1-g2))
D = A + B * C
E = acos(D)

d = R * E
print(round(d, 2))



-- ERROR:
File "XXXX", line 13
    R =6371,01
             ^
SyntaxError: invalid token
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 10:08:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import radians
from math import sin
from math import cos
from math import acos

t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("Longitude de P1: "))) 
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("Longitude de P2: ")))
R =6371,01 km
A = ang(sin(t1) * sin(t2))
B = ang(cos(t1) * cos(t2))
C = ang(cos(g1-g2))
D = A + B * C
E = acos(D)

d = R * E
print(round(d, 2))



-- EXECUTION TIME:
0.199845
-- ERROR:
  File "/home/codebench/codes/1585/1017/main.py", line 13
    R =6371,01 km
             ^
SyntaxError: invalid token

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:08:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import radians
from math import sin
from math import cos
from math import acos

t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("Longitude de P1: "))) 
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("Longitude de P2: ")))
R =6371,01 km
A = ang(sin(t1) * sin(t2))
B = ang(cos(t1) * cos(t2))
C = ang(cos(g1-g2))
D = A + B * C
E = acos(D)

d = R * E
print(round(d, 2))



-- ERROR:
File "XXXX", line 13
    R =6371,01 km
             ^
SyntaxError: invalid token
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 10:09:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import radians
from math import sin
from math import cos
from math import acos

t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("Longitude de P1: "))) 
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("Longitude de P2: ")))
R =6371.01 km
A = ang(sin(t1) * sin(t2))
B = ang(cos(t1) * cos(t2))
C = ang(cos(g1-g2))
D = A + B * C
E = acos(D)

d = R * E
print(round(d, 2))



-- EXECUTION TIME:
0.219658
-- ERROR:
  File "/home/codebench/codes/1585/1017/main.py", line 13
    R =6371.01 km
                ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:09:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import radians
from math import sin
from math import cos
from math import acos

t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("Longitude de P1: "))) 
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("Longitude de P2: ")))
R =6371.01 km
A = ang(sin(t1) * sin(t2))
B = ang(cos(t1) * cos(t2))
C = ang(cos(g1-g2))
D = A + B * C
E = acos(D)

d = R * E
print(round(d, 2))



-- ERROR:
File "XXXX", line 13
    R =6371.01 km
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:09:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import radians
from math import sin
from math import cos
from math import acos

t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("Longitude de P1: "))) 
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("Longitude de P2: ")))
R =float(6371.01)
A = ang(sin(t1) * sin(t2))
B = ang(cos(t1) * cos(t2))
C = ang(cos(g1-g2))
D = A + B * C
E = acos(D)

d = R * E
print(round(d, 2))



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    A = ang(sin(t1) * sin(t2))
NameError: name 'ang' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 10:09:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import radians
from math import sin
from math import cos
from math import acos

t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("Longitude de P1: "))) 
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("Longitude de P2: ")))
R =float(6371.01)
A = ang(sin(t1) * sin(t2))
B = ang(cos(t1) * cos(t2))
C = ang(cos(g1-g2))
D = A + B * C
E = acos(D)

d = R * E
print(round(d, 2))



-- EXECUTION TIME:
0.142945
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1585/1017/main.py", line 14, in <module>
    A = ang(sin(t1) * sin(t2))
NameError: name 'ang' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:09:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import radians
from math import sin
from math import cos
from math import acos

t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("Longitude de P1: "))) 
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("Longitude de P2: ")))
R =float(6371.01)
A = ang(sin(t1) * sin(t2))
B = ang(cos(t1) * cos(t2))
C = ang(cos(g1-g2))
D = A + B * C
E = acos(D)

d = R * E
print(round(d, 2))



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    A = ang(sin(t1) * sin(t2))
NameError: name 'ang' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 10:10:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import radians
from math import sin
from math import cos
from math import acos

t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("Longitude de P1: "))) 
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("Longitude de P2: ")))
R =float(6371.01)
A = (sin(t1) * sin(t2))
B = (cos(t1) * cos(t2))
C = (cos(g1-g2))
D = A + B * C
E = acos(D)

d = R * E
print(round(d, 2))



-- EXECUTION TIME:
0.157408
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
50.44
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
