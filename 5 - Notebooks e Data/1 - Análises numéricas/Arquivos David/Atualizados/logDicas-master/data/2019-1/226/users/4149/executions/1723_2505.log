== SUBMITION (2019-05-15 19:41:57) 
-- CODE:
from math import*
a=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
i=0
j=n+1
while(i<j):
	soma=soma+((a**(2*i+1)/factorial(2*i+1))
	i=i+1
print(round(soma,10))
		  
-- EXECUTION TIME:
0.258941
-- ERROR:
  File "/home/codebench/codes/1723/2505/main.py", line 9
    i=i+1
    ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 19:42:01) 
-- CODE:
from math import*
a=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
i=0
j=n+1
while(i<j):
	soma=soma+((a**(2*i+1)/factorial(2*i+1))
	i=i+1
print(round(soma,10))
		  
-- ERROR:
File "XXXX", line 9
    i=i+1
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 19:42:36) 
-- CODE:
from math import*
a=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
i=0
j=n+1
while(i<j):
	soma=soma+((a**(2*i+1)/factorial(2*i+1))
	i=i+1
print(round(soma,10))
		  
-- ERROR:
File "XXXX", line 9
    i=i+1
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 19:42:44) 
-- CODE:
from math import*
a=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
i=0
j=n+1
while(i<j):
	soma=soma+((a**(2*i+1)/factorial(2*i+1))
	i =i+1
print(round(soma,10))
		  
-- ERROR:
File "XXXX", line 9
    i =i+1
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 19:42:47) 
-- CODE:
from math import*
a=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
i=0
j=n+1
while(i<j):
	soma=soma+((a**(2*i+1)/factorial(2*i+1))
	i = i+1
print(round(soma,10))
		  
-- ERROR:
File "XXXX", line 9
    i = i+1
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 19:42:53) 
-- CODE:
from math import*
a=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
i=0
j=n+1
while(i<j):
	soma=soma+((a**(2*i+1)/factorial(2*i+1))
	i= i+1
print(round(soma,10))
		  
-- ERROR:
File "XXXX", line 9
    i= i+1
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 19:43:02) 
-- CODE:
from math import*
a=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
i=0
j=n+1
while(i<j):
	soma=soma+((a**(2*i+1)/factorial(2*i+1))
	i= (i)+1
print(round(soma,10))
		  
-- ERROR:
File "XXXX", line 9
    i= (i)+1
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 19:43:21) 
-- CODE:
from math import*
a=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
i=0
j=n+1
while(i<j):
		soma=soma+((a**(2*i+1)/factorial(2*i+1))
		i= (i)+1
print(round(soma,10))
		  
-- ERROR:
File "XXXX", line 9
    i= (i)+1
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 19:43:48) 
-- CODE:
from math import*
a=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
i=0
j=n+1


while(i<j):
		soma=soma+((a**(2*i+1)/factorial(2*i+1))
		i=i + 1
print(round(soma,10))
		  
-- ERROR:
File "XXXX", line 11
    i=i + 1
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 19:47:00) 
-- CODE:
from math import*
a=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
	soma=0
	i = 0
	j=n+1


while(i<j):
		soma=soma+((-1)**i(a**(2*i+1)/factorial(2*i+1))
		i=i + 1
print(round(soma,10))
		  
-- ERROR:
File "XXXX", line 4
    soma=0
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 19:47:12) 
-- CODE:
from math import*
a=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
i = 0
j=n+1


while(i<j):
		soma=soma+((-1)**i(a**(2*i+1)/factorial(2*i+1))
		i=i + 1
print(round(soma,10))
		  
-- ERROR:
File "XXXX", line 11
    i=i + 1
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 19:47:55) 
-- CODE:
from math import*
a=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
i = 0
j=n+1


while(i<j):
		soma=soma+((-1)**i(a**(2*i+1)/factorial(2*i+1))
		i=1+i
print(round(soma,10))
		  
-- ERROR:
File "XXXX", line 11
    i=1+i
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 19:48:02) 
-- CODE:
from math import*
a=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
i = 0
j=n+1


while(i<j):
		soma=soma+((-1)**i(a**(2*i+1)/factorial(2*i+1))
		i=1+i
					  
print(round(soma,10))
		  
-- ERROR:
File "XXXX", line 11
    i=1+i
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 19:51:36) 
-- CODE:
from math import*
a=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
i = 0
j=n+1


while(i<=j):
		soma=soma+((-1)**i(a**(2*i+1)/factorial(2*i+1))
		i==i+1
					  
print(round(soma,10))
		  
-- ERROR:
File "XXXX", line 11
    i==i+1
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 19:51:42) 
-- CODE:
from math import*
a=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
i = 0
j=n+1


while(i<=j):
		soma=soma+((-1)**i(a**(2*i+1)/factorial(2*i+1))
		i=i+1
					  
print(round(soma,10))
		  
-- ERROR:
File "XXXX", line 11
    i=i+1
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 19:51:49) 
-- CODE:
from math import*
a=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
i = 0
j=n+1


while(i<=j):
		soma=soma+((-1)**i(a**(2*i+1)/factorial(2*i+1))
		i=a+1
					  
print(round(soma,10))
		  
-- ERROR:
File "XXXX", line 11
    i=a+1
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 19:51:58) 
-- CODE:
from math import*
a=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
i = 0
j=n+1


while(i<=j):
		soma=soma+((-1)**i(a**(2*i+1)/factorial(2*i+1))
		i=2+1
					  
print(round(soma,10))
		  
-- ERROR:
File "XXXX", line 11
    i=2+1
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 19:52:18) 
-- CODE:
i=0
from math import*
a=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0

j=n+1


while(i<=j):
		soma=soma+((-1)**i(a**(2*i+1)/factorial(2*i+1))
		i=2+1
					  
print(round(soma,10))
		  
-- ERROR:
File "XXXX", line 12
    i=2+1
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 19:52:31) 
-- CODE:
i==0
from math import*
a=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0

j=n+1


while(i<=j):
		soma=soma+((-1)**i(a**(2*i+1)/factorial(2*i+1))
		i=i+1
					  
print(round(soma,10))
		  
-- ERROR:
File "XXXX", line 12
    i=i+1
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 19:56:35) 
-- CODE:

from math import*
a=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
j=n+1
i=2-2

while(i<j):
		soma=soma+((-1)**i(a**(2*i+1)/factorial(2*i+1))
		i=i+1
					  
print(round(soma,10))
		  
-- ERROR:
File "XXXX", line 11
    i=i+1
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 19:56:43) 
-- CODE:

from math import*
a=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
j=n+1
i=0

while(i<j):
		soma=soma+((-1)**i(a**(2*i+1)/factorial(2*i+1))
		i=i+1
					  
print(round(soma,10))
		  
-- ERROR:
File "XXXX", line 11
    i=i+1
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:02:12) 
-- CODE:

from math import*
a=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
j=n+1
i=0

while(i<j):
		soma=soma+(((-1)**i)(a**(2**i+1)/factorial(2*i+1))
		i=i+1
					  
print(round(soma,10))
		  
-- ERROR:
File "XXXX", line 11
    i=i+1
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:03:23) 
-- CODE:

from math import*
a=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
j=n+1
i=0

while(i<j):
		soma=soma+((-1)**i)(a**(2*i+1)/factorial(2*i+1))
		i=i+1
					  
print(round(soma,10))
		  
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    soma=soma+((-1)**i)(a**(2*i+1)/factorial(2*i+1))
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:06:27) 
-- CODE:

from math import*
a=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
j=n+1
i=0

while(i<j):
		soma=soma+((-1)**i)(a**(2*i+1)/factorial(2*i+1))
		i=i+1
					  
print(round(soma,10))
		  
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    soma=soma+((-1)**i)(a**(2*i+1)/factorial(2*i+1))
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:06:46) 
-- CODE:

from math import*
a=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
j=n+1
i=0

while(i<j):
		soma=soma+((-1)**i)(a**(2*i+1)/factorial(2*i+1))
		i=i+1
					  
print(round(soma,10))
		  
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    soma=soma+((-1)**i)(a**(2*i+1)/factorial(2*i+1))
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:11:27) 
-- CODE:

from math import*
x=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
j=n+1
i=0

while(i<j):
		soma=soma+((-1)**i)(x**(2*i+1)/factorial(2*i+1))
		i=i+1
					  
		print(round(soma,10))
		  
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    soma=soma+((-1)**i)(x**(2*i+1)/factorial(2*i+1))
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:12:37) 
-- CODE:

from math import*
x=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
j=n+1
i=0

while(i<j):
		soma=soma+((-1)**i)*(x**((2*i)+1)/factorial((2*i)+1))
		i=i+1
					  
		print(round(soma,10))
		  
-- OUTPUT:
1.5707963268
0.9248322293
1.0045248555
0.9998431014
1.0000035426
0.9999999437
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 20:12:56) 
-- CODE:

from math import*
x=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
j=n+1
i=0

while(i<j):
		soma=soma+((-1)**i)*(x**((2*i)+1)/factorial((2*i)+1))
		i=i+1
					  
print(round(soma,10))
		  
-- EXECUTION TIME:
0.129076
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
0.9999999437
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-1.0000035426
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.8660212717
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:12:59) 
-- CODE:

from math import*
x=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
j=n+1
i=0

while(i<j):
		soma=soma+((-1)**i)*(x**((2*i)+1)/factorial((2*i)+1))
		i=i+1
					  
print(round(soma,10))
		  
-- OUTPUT:
0.9999999437
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:13:22) 
-- CODE:

from math import*
x=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
j=n+1
i=0

while(i<j):
		soma=soma+((-1)**i)*(x**((2*i)+1)/factorial((2*i)+1))
		i=i+1
					  
print(round(soma,10))
		  
-- OUTPUT:
0.9999999437
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:13:37) 
-- CODE:

from math import*
x=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
j=n-1
i=0

while(i<j):
		soma=soma+((-1)**i)*(x**((2*i)+1)/factorial((2*i)+1))
		i=i+1
					  
print(round(soma,10))
		  
-- OUTPUT:
0.9998431014
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:14:04) 
-- CODE:

from math import*
x=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
j=n-1
i=0

while(i<j):
		soma=soma+((-1)**i)*(x**((2*i)+1)/factorial((2*i)+1))
		i=i+1
					  
print(round(soma,10))
		  
-- OUTPUT:
0.9998431014
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:16:18) 
-- CODE:

from math import*
x=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
j=n-1
i=0

while(i<j):
		soma=soma +((-1)**i) *(x**((2*i)+1)/(factorial((2*i)+1)))
		i=i+1
					  
print(round(soma,10))
		  
-- OUTPUT:
0.9998431014
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:16:35) 
-- CODE:

from math import*
x=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
j=n+1
i=0

while(i<j):
		soma=soma +((-1)**i) *(x**((2*i)+1)/(factorial((2*i)+1)))
		i=i+1
					  
print(round(soma,10))
		  
-- OUTPUT:
0.9999999437
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:16:47) 
-- CODE:

from math import*
x=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
j=n+1
i=0

while(i<j):
		soma=soma +((-1)**i) *(x**((2*i)+1)/(factorial((2*i)+1)))
		i=i+1
					  
print(round(soma,10))
		  
-- OUTPUT:
0.9999999437
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 20:17:13) 
-- CODE:

from math import*
x=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
j=n+1
i=0

while(i<j):
		soma=soma +((-1)**i) *(x**((2*i)+1)/(factorial((2*i)+1)))
		i=i+1
					  
print(round(soma,10))
		  
-- EXECUTION TIME:
0.14569
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
0.9999999437
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-1.0000035426
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.8660212717
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:17:31) 
-- CODE:

from math import*
x=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
i=0
j=n+1

while(i<j):
		soma=soma +((-1)**i) *(x**((2*i)+1)/(factorial((2*i)+1)))
		i=i+1
					  
print(round(soma,10))
		  
-- OUTPUT:
0.9999999437
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:18:07) 
-- CODE:

from math import*
x=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
i=0
j=n+1

while(i<j):
		soma=soma + (x**((2*i)+1)/(factorial((2*i)+1)))
		i=i+1
					  
print(round(soma,10))
		  
-- OUTPUT:
2.3012988447
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:18:37) 
-- CODE:

from math import*
x=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
i=0
j=n+1

while(i<j):
		soma=soma + ((x**((2*i)+1)/(factorial((2*i)+1))))
		i=i+1
					  
print(round(soma,10))
		  
-- OUTPUT:
2.3012988447
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:18:52) 
-- CODE:

from math import*
x=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
i=0
j=n-1

while(i<j):
		soma=soma + ((x**((2*i)+1)/(factorial((2*i)+1))))
		i=i+1
					  
print(round(soma,10))
		  
-- OUTPUT:
2.3011348047
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:19:59) 
-- CODE:

from math import*
x=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
i=0
j=n-1

while(j>i):
		soma=soma + ((x**((2*i)+1)/(factorial((2*i)+1))))
		i=i+1
					  
print(round(soma,10))
		  
-- OUTPUT:
2.3011348047
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:20:17) 
-- CODE:

from math import*
x=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
i=0
j=n+1

while(j>i):
		soma=soma + ((x**((2*i)+1)/(factorial((2*i)+1))))
		i=i+1
					  
print(round(soma,10))
		  
-- OUTPUT:
2.3012988447
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:20:30) 
-- CODE:

from math import*
x=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
i=0
j=n-1

while(j>i):
		soma=soma + ((x**((2*i)+1)/(factorial((2*i)+1))))
		i=i+1
					  
print(round(soma,10))
		  
-- OUTPUT:
2.3011348047
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:22:35) 
-- CODE:

from math import*
x=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
i=0
j=n+1

while(i<j):
		soma=soma + ((x**((2*i)+1)/(factorial((2*i)+1))))
		i=i+1
					  
print(round(soma,10))
		  
-- OUTPUT:
2.3012988447
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 20:24:52) 
-- CODE:

from math import*
x=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
i=0
j=n+1

while(i<j):
	tg=x**(2*i+1)
	tg1=(factorial(2*i+1))
	soma=soma+((-1)**i *tg)/tg1
		i=i+1
					  
print(round(soma,10))
		  
-- EXECUTION TIME:
0.160122
-- ERROR:
  File "/home/codebench/codes/1723/2505/main.py", line 13
    i=i+1
    ^
IndentationError: unexpected indent

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:25:04) 
-- CODE:

from math import*
x=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
i=0
j=n-1

while(i<j):
	tg=x**(2*i+1)
	tg1=(factorial(2*i+1))
	soma=soma+((-1)**i *tg)/tg1
		i=i+1
					  
print(round(soma,10))
		  
-- ERROR:
File "XXXX", line 13
    i=i+1
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 20:25:05) 
-- CODE:

from math import*
x=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
i=0
j=n-1

while(i<j):
	tg=x**(2*i+1)
	tg1=(factorial(2*i+1))
	soma=soma+((-1)**i *tg)/tg1
		i=i+1
					  
print(round(soma,10))
		  
-- EXECUTION TIME:
0.149428
-- ERROR:
  File "/home/codebench/codes/1723/2505/main.py", line 13
    i=i+1
    ^
IndentationError: unexpected indent

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:25:16) 
-- CODE:

from math import*
x=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
i=0
j=n-1

while(i<j):
	tg=x**(2*i+1)
	tg1=(factorial(2*i+1))
	soma=soma+((-1)**i *tg)/tg1
		i=i+1
					  
print(round(soma,10))
		  
-- ERROR:
File "XXXX", line 13
    i=i+1
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:25:31) 
-- CODE:

from math import*
x=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
i=0
j=n-1

while(i<j):
	tg=x**(2*i+1)
	tg1=(factorial(2*i+1))
	soma=soma+((-1)**i * tg)/tg1
		i=i+1
					  
print(round(soma,10))
		  
-- ERROR:
File "XXXX", line 13
    i=i+1
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:25:57) 
-- CODE:

from math import*
x=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
i=0
j=n-1

while(i<j):
	tg=x**(2*i+1)
	tg1=(factorial(2*i+1))
	soma=soma+(((-1)**i) * (tg))/tg1
		i=i+1
					  
print(round(soma,10))
		  
-- ERROR:
File "XXXX", line 13
    i=i+1
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:26:11) 
-- CODE:

from math import*
x=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
i=0
j=n-1

while(i<j):
	tg=x**(2*i+1)
	tg1=(factorial(2*i+1))
	soma=soma+(((-1)**i) * (tg))/tg1
	i=i+1
					  
print(round(soma,10))
		  
-- OUTPUT:
0.9998431014
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:27:01) 
-- CODE:

from math import*
x=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
i=0
j=n-1

while(j>i):
	tg=x**(2*i+1)
	tg1=(factorial(2*i+1))
	soma=soma+(((-1)**i) * (tg))/tg1
	i=i+1
					  
print(round(soma,10))
		  
-- OUTPUT:
0.9998431014
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:27:58) 
-- CODE:

from math import*
x=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
i=1
j=n-1

while(j>i):
	tg=x**(2*i+1)
	tg1=(factorial(2*i+1))
	soma=soma+(((-1)**i) * (tg))/tg1
	i=i+1
					  
print(round(soma,10))
		  
-- OUTPUT:
-0.5709532254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 20:27:59) 
-- CODE:

from math import*
x=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
i=1
j=n-1

while(j>i):
	tg=x**(2*i+1)
	tg1=(factorial(2*i+1))
	soma=soma+(((-1)**i) * (tg))/tg1
	i=i+1
					  
print(round(soma,10))
		  
-- EXECUTION TIME:
0.167222
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
-0.5709532254
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
0.5662714713
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
-0.1913967696
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 20:28:02) 
-- CODE:

from math import*
x=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
i=1
j=n-1

while(j>i):
	tg=x**(2*i+1)
	tg1=(factorial(2*i+1))
	soma=soma+(((-1)**i) * (tg))/tg1
	i=i+1
					  
print(round(soma,10))
		  
-- EXECUTION TIME:
0.161507
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
-0.5709532254
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
0.5662714713
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
-0.1913967696
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 20:28:08) 
-- CODE:

from math import*
x=eval(input("Entre com o valor do angulo: "))
n=int(input("entre com os termos da serie: "))
soma=0
i=1
j=n-1

while(j>i):
	tg=x**(2*i+1)
	tg1=(factorial(2*i+1))
	soma=soma+(((-1)**i) * (tg))/tg1
	i=i+1
					  
print(round(soma,10))
		  
-- OUTPUT:
-0.5709532254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
