== TEST (2019-03-24 13:43:53) 
-- CODE:
r = input("valor do raio: ")
area = r**2 * from <pi>import *
-- ERROR:
File "XXXX", line 2
    area = r**2 * from <pi>import *
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 13:44:52) 
-- CODE:
r = input("valor do raio: ")
area = r**2 * float(input(3.14))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    area = r**2 * float(input(3.14))
TypeError: unsupported operand type(s) for ** or pow(): 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 13:45:18) 
-- CODE:
r = input("valor do raio: ")
area = r**2 * 3.14
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    area = r**2 * 3.14
TypeError: unsupported operand type(s) for ** or pow(): 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 13:45:48) 
-- CODE:
r = int(input("valor do raio: "))
area = r**2 * 3.14
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    r = int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 13:46:06) 
-- CODE:
r = int(input("valor do raio: "))
area = r**2 * 3.14
print(area)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    r = int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 13:51:50) 
-- CODE:
r = int(input("valor do raio: "))
area = r**2 * π
print(area) 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    r = int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 13:52:54) 
-- CODE:
r = int(input("valor do raio: "))
area = r**2 * π

round(area, 3)

print(round) 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    r = int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 13:53:54) 
-- CODE:
r = int(input("valor do raio: "))
area = r**2 * from <π> import

round(area, 3)

print(round) 
-- ERROR:
File "XXXX", line 2
    area = r**2 * from <π> import
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 13:54:04) 
-- CODE:
r = int(input("valor do raio: "))
area = r**2 * from <π> import *

round(area, 3)

print(round) 
-- ERROR:
File "XXXX", line 2
    area = r**2 * from <π> import *
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 13:56:34) 
-- CODE:
r = int(input("valor do raio: "))
area = r**2 * math.pi

round(area, 3)

print(round) 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    r = int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 13:57:51) 
-- CODE:
r = int(input("valor do raio: "))
area = r**2 * from <math.pi> import

round(area, 3)

print(round) 
-- ERROR:
File "XXXX", line 2
    area = r**2 * from <math.pi> import
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 13:57:59) 
-- CODE:
r = int(input("valor do raio: "))
area = r**2 * from <math.pi> import *

round(area, 3)

print(round) 
-- ERROR:
File "XXXX", line 2
    area = r**2 * from <math.pi> import *
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 13:58:49) 
-- CODE:
r = int(input("valor do raio: "))
area = r**2 * from <math.(pi)> import *

round(area, 3)

print(round) 
-- ERROR:
File "XXXX", line 2
    area = r**2 * from <math.(pi)> import *
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:03:00) 
-- CODE:
r = int(input("valor do raio: "))
area = r**2 * math.(pi)

round(area, 3)

print(round) 
-- ERROR:
File "XXXX", line 2
    area = r**2 * math.(pi)
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:03:32) 
-- CODE:
r = int(input("valor do raio: "))
area = math.pi * r ** 2

round(area, 3)

print(round) 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    r = int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:04:42) 
-- CODE:
r = int(input("valor do raio: "))
area = from <math.pi> import  * r ** 2

round(area, 3)

print(round) 
-- ERROR:
File "XXXX", line 2
    area = from <math.pi> import  * r ** 2
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:04:51) 
-- CODE:
r = int(input("valor do raio: "))
area = from <mathpi> import  * r ** 2

round(area, 3)

print(round) 
-- ERROR:
File "XXXX", line 2
    area = from <mathpi> import  * r ** 2
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:04:56) 
-- CODE:
r = int(input("valor do raio: "))
area = from <pi> import  * r ** 2

round(area, 3)

print(round) 
-- ERROR:
File "XXXX", line 2
    area = from <pi> import  * r ** 2
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:05:08) 
-- CODE:
r = int(input("valor do raio: "))
area = from <math.pi> import  * r ** 2

round(area, 3)

print(round) 
-- ERROR:
File "XXXX", line 2
    area = from <math.pi> import  * r ** 2
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:05:13) 
-- CODE:
r = int(input("valor do raio: "))
area = from <math. pi> import  * r ** 2

round(area, 3)

print(round) 
-- ERROR:
File "XXXX", line 2
    area = from <math. pi> import  * r ** 2
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:05:19) 
-- CODE:
r = int(input("valor do raio: "))
area = from <math .pi> import  * r ** 2

round(area, 3)

print(round) 
-- ERROR:
File "XXXX", line 2
    area = from <math .pi> import  * r ** 2
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:06:02) 
-- CODE:
r = int(input("valor do raio: "))
area =  math.pi * r ** 2

round(area, 3)

print(round) 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    r = int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:06:14) 
-- CODE:
r = int(input("valor do raio: "))
area =  .pi * r ** 2

round(area, 3)

print(round) 
-- ERROR:
File "XXXX", line 2
    area =  .pi * r ** 2
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:06:19) 
-- CODE:
r = int(input("valor do raio: "))
area = .pi * r ** 2

round(area, 3)

print(round) 
-- ERROR:
File "XXXX", line 2
    area = .pi * r ** 2
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:06:25) 
-- CODE:
r = int(input("valor do raio: "))
area = pi * r ** 2

round(area, 3)

print(round) 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    r = int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:06:31) 
-- CODE:
r = int(input("valor do raio: "))
area = pi * r ** 2

round(area, 3)

print(round) 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    r = int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:07:48) 
-- CODE:
r = int(input("valor do raio: "))
area = 3.1415926536 * r ** 2

round(area, 3)

print(round) 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    r = int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:08:03) 
-- CODE:
r = int(input("valor do raio: "))
area = 3.1415926536 * r ** 2

round(area, 3)

print(round) 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    r = int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:08:38) 
-- CODE:
r = int(input("valor do raio: "))
area = 3.1415926536 * (r ** 2)

round(area, 3)

print(round) 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    r = int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:09:57) 
-- CODE:
r = int(input("valor do raio: "))
area = math.hpi * (r ** 2)

round(area, 3)

print(round) 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    r = int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:10:20) 
-- CODE:
r = int(input("valor do raio: "))
area = .hpi * (r ** 2)

round(area, 3)

print(round) 
-- ERROR:
File "XXXX", line 2
    area = .hpi * (r ** 2)
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:10:27) 
-- CODE:
r = int(input("valor do raio: "))
area = .pi * (r ** 2)

round(area, 3)

print(round) 
-- ERROR:
File "XXXX", line 2
    area = .pi * (r ** 2)
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:11:43) 
-- CODE:
r = int(input("valor do raio: "))
area =  math.pi* (r ** 2)

round(area, 3)

print(round) 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    r = int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:11:49) 
-- CODE:
r = int(input("valor do raio: "))
area =  math.pi * (r ** 2)

round(area, 3)

print(round) 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    r = int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:14:32) 
-- CODE:
r = int(input("valor do raio: "))
area =  print (raio**2) * math.pi

round(area, 3)

print(round) 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    r = int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:14:49) 
-- CODE:
r = int(input("valor do raio: "))
area =  print (r**2) * math.pi

round(area, 3)

print(round) 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    r = int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:15:06) 
-- CODE:
r = int(input("valor do raio: "))
impor math
area =  print (r**2) * math.pi

round(area, 3)

print(round) 
-- ERROR:
File "XXXX", line 2
    impor math
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:15:17) 
-- CODE:
r = int(input("valor do raio: "))
#impor math
area =  print (r**2) * math.pi

round(area, 3)

print(round) 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    r = int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:15:51) 
-- CODE:
r = int(input("valor do raio: "))
##from math import math.pi
area =  print (r**2) * math.pi

round(area, 3)

print(round) 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    r = int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:17:01) 
-- CODE:
r = float(input("valor do raio: "))
##from math import math.pi
area =  print (r**2) * math.pi

round(area, 3)

print(round) 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    area =  print (r**2) * math.pi
NameError: name 'math' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:17:13) 
-- CODE:
r = float(input("valor do raio: "))
#from math import math.pi
area =  print (r**2) * math.pi

round(area, 3)

print(round) 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    area =  print (r**2) * math.pi
NameError: name 'math' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:17:49) 
-- CODE:
#from math import math.pi
r = float(input("valor do raio: "))
area =  print (r**2) * math.pi

round(area, 3)

print(round) 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    area =  print (r**2) * math.pi
NameError: name 'math' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:18:00) 
-- CODE:
#from math import math.pi
r = float(input("valor do raio: "))
area =  print (r**2) * math.pi

round(area, 3)

print(round) 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    area =  print (r**2) * math.pi
NameError: name 'math' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:22:14) 
-- CODE:
r = float(input("valor do raio: "))
π = 3.1415926536

area =  print (r**2) *  π

round(area, 3)

print(round) 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    area =  print (r**2) *  π
TypeError: unsupported operand type(s) for *: 'NoneType' and 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:23:04) 
-- CODE:
r = float(input("valor do raio: "))
π = 3.1415926536

area = float(print((r**2) *  π))

round(area, 3)

print(round) 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    area = float(print((r**2) *  π))
TypeError: float() argument must be a string or a number, not 'NoneType'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:23:37) 
-- CODE:
r = float(input("valor do raio: "))
π = 3.1415926536

area = float(print(("r**2) *  π"))

round(area, 3)

print(round) 
-- ERROR:
File "XXXX", line 6
    round(area, 3)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:24:00) 
-- CODE:
r = float(input("valor do raio: "))
π = 3.1415926536

area = float(print(("r**2) *  π"))

round("area, 3")

print(round) 
-- ERROR:
File "XXXX", line 6
    round("area, 3")
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:24:33) 
-- CODE:
r = float(input("valor do raio: "))
π = 3.1415926536

area = float(print(r**2 *  π))

round(area, 3)

print(round) 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    area = float(print(r**2 *  π))
TypeError: float() argument must be a string or a number, not 'NoneType'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:25:42) 
-- CODE:
r = float(input("valor do raio: "))
π = 3.1415926536

area = float(input(r**2 *  π))

round(area, 3)

print(round) 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    area = float(input(r**2 *  π))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:26:04) 
-- CODE:
r = float(input("valor do raio: "))
π = 3.1415926536

area = float(input(r**2 *  π))

round(area, 3)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    area = float(input(r**2 *  π))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:26:40) 
-- CODE:
r = float(input("valor do raio: "))
π = 3.1415926536

area = float(input(r**2 *  π))

round(area, 3)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    area = float(input(r**2 *  π))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:26:59) 
-- CODE:
r = float(input("valor do raio: "))
π = 3.1415926536

a = float(input(r**2 *  π))

round(a, 3)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    a = float(input(r**2 *  π))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:27:25) 
-- CODE:
r = float(input("valor do raio: "))
π = 3.1415926536

a = float(input(r**2 *  π))

round(a, 3)
print(round)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    a = float(input(r**2 *  π))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:28:37) 
-- CODE:
r = float(input("valor do raio: "))
π = 3.1415926536

a = float(input(r**2 *  π))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    a = float(input(r**2 *  π))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:29:21) 
-- CODE:
r = float(input("valor do raio: "))
π = 3.1415926536

a = float(input(r**2 *  π))
round(a, 3)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    a = float(input(r**2 *  π))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:29:38) 
-- CODE:
r = float(input("valor do raio: "))
π = 3.1415926536

a = float(input(r**2 *  π))
round(a, 1)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    a = float(input(r**2 *  π))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:30:00) 
-- CODE:
r = float(input("valor do raio: "))
π = 3.1415926536

a = float(input(r**2 *  π))
total = a



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    a = float(input(r**2 *  π))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:30:26) 
-- CODE:
r = float(input("valor do raio: "))
π = 3.1415926536

a = float(input(r**2 *  π))
total = a
round(total, 3)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    a = float(input(r**2 *  π))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 14:31:17) 
-- CODE:
r = float(input("valor do raio: "))
π = 3.1415926536

a = float(input(r**2 *  π))
print(roun(a, 3))



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    a = float(input(r**2 *  π))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:13:12) 
-- CODE:
r = float(input("valor do raio: "))
a = from <math> import *pi * r ** 2



-- ERROR:
File "XXXX", line 2
    a = from <math> import *pi * r ** 2
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:13:20) 
-- CODE:
r = float(input("valor do raio: "))
a = from <math> import pi * r ** 2



-- ERROR:
File "XXXX", line 2
    a = from <math> import pi * r ** 2
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:13:26) 
-- CODE:
r = float(input("valor do raio: "))
a = from <math> import  * r ** 2



-- ERROR:
File "XXXX", line 2
    a = from <math> import  * r ** 2
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:13:36) 
-- CODE:
r = float(input("valor do raio: "))
a = from <math> import pi r ** 2



-- ERROR:
File "XXXX", line 2
    a = from <math> import pi r ** 2
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:13:53) 
-- CODE:
r = float(input("valor do raio: "))
a = from math import pi * r ** 2



-- ERROR:
File "XXXX", line 2
    a = from math import pi * r ** 2
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:14:03) 
-- CODE:
r = float(input("valor do raio: "))
a = from math import * r ** 2



-- ERROR:
File "XXXX", line 2
    a = from math import * r ** 2
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:14:10) 
-- CODE:
r = float(input("valor do raio: "))
a = from math import r ** 2



-- ERROR:
File "XXXX", line 2
    a = from math import r ** 2
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:14:23) 
-- CODE:
r = float(input("valor do raio: "))
a = from math import * r ** 2



-- ERROR:
File "XXXX", line 2
    a = from math import * r ** 2
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:14:44) 
-- CODE:
r = float(input("valor do raio: "))
a = from math import * r ** 2



-- ERROR:
File "XXXX", line 2
    a = from math import * r ** 2
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:14:54) 
-- CODE:
r = float(input("valor do raio: "))
a = from math import  r ** 2



-- ERROR:
File "XXXX", line 2
    a = from math import  r ** 2
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:15:06) 
-- CODE:
r = float(input("valor do raio: "))
a = from math import r ** 2



-- ERROR:
File "XXXX", line 2
    a = from math import r ** 2
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:15:12) 
-- CODE:
r = float(input("valor do raio: "))
a = from math import * r ** 2



-- ERROR:
File "XXXX", line 2
    a = from math import * r ** 2
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:15:20) 
-- CODE:
r = float(input("valor do raio: "))
a = from math import  r ** 2



-- ERROR:
File "XXXX", line 2
    a = from math import  r ** 2
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:15:38) 
-- CODE:
r = float(input("valor do raio: "))
a = from math import  r ** 2



-- ERROR:
File "XXXX", line 2
    a = from math import  r ** 2
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:16:30) 
-- CODE:
from math import *

r = float(input("valor do raio: "))
a = from math import r ** 2



-- ERROR:
File "XXXX", line 4
    a = from math import r ** 2
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:16:50) 
-- CODE:
from math import *

r = float(input("valor do raio: "))
a = pi * r ** 2



-- ERROR:
File "XXXX", line 4
    a = from math import r ** 2
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:17:04) 
-- CODE:
from math import *

r = float(input("valor do raio: "))
a = pi * r ** 2
 print(a)


-- ERROR:
File "XXXX", line 5
    print(a)
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:17:11) 
-- CODE:
from math import *

r = float(input("valor do raio: "))
a = pi * r ** 2

print(a)


-- OUTPUT:
63.61725123519331
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:18:08) 
-- CODE:
from math import *

r = float(input("valor do raio: "))
a = pi * r ** 2
b = 4/3 * pi * r **3

print(a)
print(b)


-- OUTPUT:
63.61725123519331
381.7035074111598
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:18:40) 
-- CODE:
from math import *

r = float(input("valor do raio: "))
a = pi * r ** 2
b = 4/3 * pi * r **3

round(r, 3)

print(a)
print(b)


-- OUTPUT:
63.61725123519331
381.7035074111598
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:18:51) 
-- CODE:
from math import *

r = float(input("valor do raio: "))
a = pi * r ** 2
b = 4/3 * pi * r **3

round(a, 3)

print(a)
print(b)


-- OUTPUT:
63.61725123519331
381.7035074111598
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:19:18) 
-- CODE:
from math import *

r = float(input("valor do raio: "))
a = pi * r ** 2
b = 4/3 * pi * r **3

round(a, 3)
round(b, 3)

print(a)
print(b)


-- OUTPUT:
63.61725123519331
381.7035074111598
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:19:55) 
-- CODE:
from math import *

r = float(input("valor do raio: "))
a = pi * r ** 2
b = 4/3 * pi * r **3

c = round(a, 3)
d = round(b, 3)

print(c)
print(d)


-- OUTPUT:
63.617
381.704
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 10:20:02) 
-- CODE:
from math import *

r = float(input("valor do raio: "))
a = pi * r ** 2
b = 4/3 * pi * r **3

c = round(a, 3)
d = round(b, 3)

print(c)
print(d)


-- EXECUTION TIME:
0.190619
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.617
381.704
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.388
7871.076
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
