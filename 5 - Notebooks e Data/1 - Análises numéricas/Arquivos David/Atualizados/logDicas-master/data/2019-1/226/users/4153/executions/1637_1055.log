== TEST (2019-04-09 11:51:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Insira a velocidade inicial: "))
a = float(input("Insira o angulo: "))
D = float(input("Insira a distancia horizontal: "))
g = 9,8
A = radians(a)

R = ((vo**2) * sin(2*A))/g
tol = abs(D - R)
if(tol < 0.1):
	msg = "sim"
else:
	msg = "nao"
print(msg)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    R = ((vo**2) * sin(2*A))/g
TypeError: unsupported operand type(s) for /: 'float' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:54:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Insira a velocidade inicial: "))
a = float(input("Insira o angulo: "))
D = float(input("Insira a distancia horizontal: "))
g = 9,8
A = radians(2 * a)

R = (vo**2) * sin(A)/g
tol = abs(D - R)
if(tol < 0.1):
	msg = "sim"
else:
	msg = "nao"
print(msg)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    R = (vo**2) * sin(A)/g
TypeError: unsupported operand type(s) for /: 'float' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:54:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Insira a velocidade inicial: "))
a = float(input("Insira o angulo: "))
D = float(input("Insira a distancia horizontal: "))
g = 9,8
A = radians(2 * a)

R = ((vo**2) * sin(A))/g
tol = abs(D - R)
if(tol < 0.1):
	msg = "sim"
else:
	msg = "nao"
print(msg)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    R = ((vo**2) * sin(A))/g
TypeError: unsupported operand type(s) for /: 'float' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:07:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Insira a velocidade inicial: "))
a = float(input("Insira o angulo: "))
D = float(input("Insira a distancia horizontal: "))
g = 9,8
A = radians(2 * a)

R = ((vo ** 2) * sin(A))/g
tol = abs(D - R)
if(tol < 0.1):
	msg = "sim"
else:
	msg = "nao"
print(msg)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    R = ((vo ** 2) * sin(A))/g
TypeError: unsupported operand type(s) for /: 'float' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:11:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Insira a velocidade inicial: "))
a = float(input("Insira o angulo: "))
D = float(input("Insira a distancia horizontal: "))
g = 9,8
A = radians(2 * a)


s = sin(A)
R = ((vo ** 2) *A)/g
tol = abs(D - R)
if(tol < 0.1):
	msg = "sim"
else:
	msg = "nao"
print(msg)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    R = ((vo ** 2) *A)/g
TypeError: unsupported operand type(s) for /: 'float' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:11:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Insira a velocidade inicial: "))
a = float(input("Insira o angulo: "))
D = float(input("Insira a distancia horizontal: "))
g = 9,8
A = radians(2 * a)


s = sin(A)
R = ((vo ** 2) * s)/g
tol = abs(D - R)
if(tol < 0.1):
	msg = "sim"
else:
	msg = "nao"
print(msg)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    R = ((vo ** 2) * s)/g
TypeError: unsupported operand type(s) for /: 'float' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:15:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Insira a velocidade inicial: "))    #velocidade inicial
a = float(input("Insira o angulo: "))                 #angulo do vetor de lancamento
D = float(input("Insira a distancia horizontal: "))   #distancia horizontal
g = 9.8
A = radians(a)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    R = ((vo ** 2) * s)/g
TypeError: unsupported operand type(s) for /: 'float' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:20:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Insira a velocidade inicial: "))    #velocidade inicial
a = float(input("Insira o angulo: "))                 #angulo do vetor de lancamento
D = float(input("Insira a distancia horizontal: "))   #distancia horizontal
g = 9.8                                               #aceleracao da gravidade

A = radians(a)                                        #convercao para radianos
S = sin(2*A)                                          #calculo do seno
R = ((vo**2)*S)/g                                     #formula

tol = abs(D - R)


if(tol < 0.1):
	msg = "sim"
else:
	msg = "nao"
print(msg)
-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 10:20:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Insira a velocidade inicial: "))    #velocidade inicial
a = float(input("Insira o angulo: "))                 #angulo do vetor de lancamento
D = float(input("Insira a distancia horizontal: "))   #distancia horizontal
g = 9.8                                               #aceleracao da gravidade

A = radians(a)                                        #convercao para radianos
S = sin(2*A)                                          #calculo do seno
R = ((vo**2)*S)/g                                     #formula

tol = abs(D - R)


if(tol < 0.1):
	msg = "sim"
else:
	msg = "nao"
print(msg)
-- EXECUTION TIME:
0.173415
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
