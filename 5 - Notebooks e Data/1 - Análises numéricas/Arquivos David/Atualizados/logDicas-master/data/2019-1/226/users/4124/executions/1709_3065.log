== TEST (2019-05-02 11:12:05) 
-- CODE:
tipo = input("Tipo de ataque: ").upper()
n = int(input("Valor do dado: "))
trn = int(input("Numero de turnos: "))

if((tipo == "CAUDA" or tipo == "CUSPE" or tipo == "PATADA") and (n >= 1 and n <= 4):
	if(tipo == "CAUDA"):
		pv = n * trn
		print(pv)
	elif(tipo == "CUSPE"):
		pv = 2 * n * trn
		print(pv)
	elif(tipo == "PATADA"):
		pv = ((2 * n) - 5) * trn
else:
	print("Entrada invalida")
-- ERROR:
File "XXXX", line 5
    if((tipo == "CAUDA" or tipo == "CUSPE" or tipo == "PATADA") and (n >= 1 and n <= 4):
                                                                                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:12:16) 
-- CODE:
tipo = input("Tipo de ataque: ").upper()
n = int(input("Valor do dado: "))
trn = int(input("Numero de turnos: "))

if((tipo == "CAUDA" or tipo == "CUSPE" or tipo == "PATADA") and (n >= 1 and n <= 4)):
	if(tipo == "CAUDA"):
		pv = n * trn
		print(pv)
	elif(tipo == "CUSPE"):
		pv = 2 * n * trn
		print(pv)
	elif(tipo == "PATADA"):
		pv = ((2 * n) - 5) * trn
else:
	print("Entrada invalida")
-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:12:35) 
-- CODE:
tipo = input("Tipo de ataque: ").upper()
n = int(input("Valor do dado: "))
trn = int(input("Numero de turnos: "))

if((tipo == "CAUDA" or tipo == "CUSPE" or tipo == "PATADA") and (n >= 1 and n <= 4)):
	if(tipo == "CAUDA"):
		pv = n * trn
		print(pv)
	elif(tipo == "CUSPE"):
		pv = 2 * n * trn
		print(pv)
	elif(tipo == "PATADA"):
		pv = ((2 * n) - 5) * trn
else:
	print("Entrada invalida")
-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:13:07) 
-- CODE:
tipo = input("Tipo de ataque: ").upper()
n = int(input("Valor do dado: "))
trn = int(input("Numero de turnos: "))

if((tipo == "CAUDA" or tipo == "CUSPE" or tipo == "PATADA") and (n >= 1 and n <= 4)):
	if(tipo == "CAUDA"):
		pv = n * trn
		print(pv)
	elif(tipo == "CUSPE"):
		pv = 2 * n * trn
		print(pv)
	elif(tipo == "PATADA"):
		pv = ((2 * n) - 5) * trn
		print(pv)
else:
	print("Entrada invalida")
-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:13:18) 
-- CODE:
tipo = input("Tipo de ataque: ").upper()
n = int(input("Valor do dado: "))
trn = int(input("Numero de turnos: "))

if((tipo == "CAUDA" or tipo == "CUSPE" or tipo == "PATADA") and (n >= 1 and n <= 4)):
	if(tipo == "CAUDA"):
		pv = n * trn
		print(pv)
	elif(tipo == "CUSPE"):
		pv = 2 * n * trn
		print(pv)
	elif(tipo == "PATADA"):
		pv = ((2 * n) - 5) * trn
		print(pv)
else:
	print("Entrada invalida")
-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 11:13:28) 
-- CODE:
tipo = input("Tipo de ataque: ").upper()
n = int(input("Valor do dado: "))
trn = int(input("Numero de turnos: "))

if((tipo == "CAUDA" or tipo == "CUSPE" or tipo == "PATADA") and (n >= 1 and n <= 4)):
	if(tipo == "CAUDA"):
		pv = n * trn
		print(pv)
	elif(tipo == "CUSPE"):
		pv = 2 * n * trn
		print(pv)
	elif(tipo == "PATADA"):
		pv = ((2 * n) - 5) * trn
		print(pv)
else:
	print("Entrada invalida")
-- EXECUTION TIME:
0.206571
-- TEST CASE 1:
---- input:
CAUDA
2
6
---- correct output:
12
---- user output:
12
-- TEST CASE 2:
---- input:
PATADA
5
5
---- correct output:
Entrada invalida
---- user output:
Entrada invalida
-- TEST CASE 3:
---- input:
CUSPE
3
2
---- correct output:
12
---- user output:
12
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
