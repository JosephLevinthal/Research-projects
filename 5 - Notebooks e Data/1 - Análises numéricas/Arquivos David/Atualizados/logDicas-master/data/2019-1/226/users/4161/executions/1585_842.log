== TEST (2019-03-21 21:50:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite o numero: "))
x1 = n//1000
x2 = n//100 - x1%10
x3 = n//10 - (n/100)*10
x4 = n - n//10
print(x1, x2, x3, x4)
-- OUTPUT:
9 82 -0.3000000000000682 8256
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:51:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite o numero: "))
x1 = n//1000
x2 = n//100 - x1%10
x3 = 0
x4 = 0
print(x1, x2, x3, x4)
-- OUTPUT:
9 82 0 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:52:05) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite o numero: "))
x1 = n//1000
x2 = n//100 - x1%100
x3 = 0
x4 = 0
print(x1, x2, x3, x4)
-- OUTPUT:
9 82 0 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:52:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite o numero: "))
x1 = n//1000
x2 = n//100 - x1*10
x3 = 0
x4 = 0
print(x1, x2, x3, x4)
-- OUTPUT:
9 1 0 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:53:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite o numero: "))
x1 = n//1000
x2 = n//100 - x1*10
x3 = n//10 - (n//100)*10
x4 = 0
print(x1, x2, x3, x4)
-- OUTPUT:
9 1 7 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:54:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite o numero: "))
x1 = n//1000
x2 = n//100 - x1*10
x3 = n//10 - (n//100)*10
x4 = n - (n//10)*10
print(x1, x2, x3, x4)
-- OUTPUT:
9 1 7 3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:54:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite o numero: "))
x1 = n//1000
x2 = n//100 - x1*10
x3 = n//10 - (n//100)*10
x4 = n - (n//10)*10
print(x1 + x2 + x3 + x4)
-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 21:54:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite o numero: "))
x1 = n//1000
x2 = n//100 - x1*10
x3 = n//10 - (n//100)*10
x4 = n - (n//10)*10
print(x1 + x2 + x3 + x4)
-- EXECUTION TIME:
0.117352
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:21:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite o numero: "))
x1 = n//1000
x2 = n//100 - (n//1000)*10
x3 = n//10 - (n//100)*10
x4 = n - (n//10)*10
print(x1 + x2 + x3 + x4)
-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
