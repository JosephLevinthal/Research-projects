== TEST (2019-05-09 11:47:43) 
-- CODE:
from math import*
k = int(input("valor de k: "))

soma = 0
i = 0
fim = k-1

while (i<=fim):
	soma = soma + 1/factorial(i)
	i = i + 1
print(round(soma, 8))
-- OUTPUT:
2.71805556
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:47:47) 
-- CODE:
from math import*
k = int(input("valor de k: "))

soma = 0
i = 0
fim = k-1

while (i<=fim):
	soma = soma + 1/factorial(i)
	i = i + 1
print(round(soma, 8))
-- OUTPUT:
2.71805556
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:47:49) 
-- CODE:
from math import*
k = int(input("valor de k: "))

soma = 0
i = 0
fim = k-1

while (i<=fim):
	soma = soma + 1/factorial(i)
	i = i + 1
print(round(soma, 8))
-- OUTPUT:
2.71805556
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:47:50) 
-- CODE:
from math import*
k = int(input("valor de k: "))

soma = 0
i = 0
fim = k-1

while (i<=fim):
	soma = soma + 1/factorial(i)
	i = i + 1
print(round(soma, 8))
-- OUTPUT:
2.71805556
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:47:51) 
-- CODE:
from math import*
k = int(input("valor de k: "))

soma = 0
i = 0
fim = k-1

while (i<=fim):
	soma = soma + 1/factorial(i)
	i = i + 1
print(round(soma, 8))
-- OUTPUT:
2.71805556
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:47:53) 
-- CODE:
from math import*
k = int(input("valor de k: "))

soma = 0
i = 0
fim = k-1

while (i<=fim):
	soma = soma + 1/factorial(i)
	i = i + 1
print(round(soma, 8))
-- OUTPUT:
2.71805556
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:47:55) 
-- CODE:
from math import*
k = int(input("valor de k: "))

soma = 0
i = 0
fim = k-1

while (i<=fim):
	soma = soma + 1/factorial(i)
	i = i + 1
print(round(soma, 8))
-- OUTPUT:
2.71805556
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-09 11:48:45) 
-- CODE:
from math import*
k = int(input("valor de k: "))

soma = 0
i = 0
fim = k-1

while (i<=fim):
	soma = soma + 1/factorial(i)
	i = i + 1
print(round(soma, 8))
-- EXECUTION TIME:
0.205228
-- TEST CASE 1:
---- input:
7
---- correct output:
2.71805556
---- user output:
2.71805556
-- TEST CASE 2:
---- input:
15
---- correct output:
2.71828183
---- user output:
2.71828183
-- TEST CASE 3:
---- input:
6
---- correct output:
2.71666667
---- user output:
2.71666667
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
