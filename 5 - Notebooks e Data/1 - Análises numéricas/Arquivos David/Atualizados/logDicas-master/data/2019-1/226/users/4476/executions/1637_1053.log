== TEST (2019-04-09 10:33:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("nome do patrono: ")

if (patrono == cervo):
	print(patrono "cervo eh patrono do Harry Potter")
	
else (patrono != cervo):
	print(patrono "nao eh patrono do Harry Potter")
-- ERROR:
File "XXXX", line 7
    print(patrono "cervo eh patrono do Harry Potter")
                                                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:34:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("nome do patrono: ")

if (patrono == cervo):
	print(patrono + "cervo eh patrono do Harry Potter")
	
else (patrono != cervo):
	print(patrono "nao eh patrono do Harry Potter")
-- ERROR:
File "XXXX", line 9
    else (patrono != cervo):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:34:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("nome do patrono: ")

if (patrono == cervo):
	print(patrono + "cervo eh patrono do Harry Potter")
	
else (patrono != cervo):
	print(patrono + "nao eh patrono do Harry Potter")
-- ERROR:
File "XXXX", line 9
    else (patrono != cervo):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:34:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("nome do patrono: ")

if (patrono == cervo):
	print(patrono + "cervo eh patrono do Harry Potter")
	
else:
	print(patrono + "nao eh patrono do Harry Potter")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if (patrono == cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:37:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("nome do patrono: ")

if (patrono == cervo):
	print("cervo eh patrono do Harry Potter")
	
else:
	print(patrono + "nao eh patrono do Harry Potter")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if (patrono == cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:43:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("nome do patrono: ")

if (patrono == cervo):
	print("cervo eh patrono do Harry Potter")
	
else:
	print(patrono, "nao eh patrono do Harry Potter")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if (patrono == cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:55:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("nome do patrono: ")

if (patrono = cervo):
	print("cervo eh patrono do Harry Potter")
	
else:
	print(patrono, "nao eh patrono do Harry Potter")
-- ERROR:
File "XXXX", line 6
    if (patrono = cervo):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:55:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("nome do patrono: ")

if (patrono == cervo):
	print("cervo eh patrono do Harry Potter")
	
else:
	print(patrono, "nao eh patrono do Harry Potter")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if (patrono == cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:55:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("nome do patrono: ")
a = cervo
if (patrono == a):
	print("cervo eh patrono do Harry Potter")
	
else:
	print(patrono, "nao eh patrono do Harry Potter")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = cervo
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:08:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("nome do patrono: ")

if (patrono == "cervo"):
	print("cervo eh patrono do Harry Potter")
	
else:
	print(patrono, "nao eh patrono do Harry Potter")
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:08:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("nome do patrono: ")

if (patrono == "cervo"):
	print("cervo eh patrono do Harry Potter")
	
else:
	print(patrono, "nao eh patrono do Harry Potter")
-- EXECUTION TIME:
0.174249
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
