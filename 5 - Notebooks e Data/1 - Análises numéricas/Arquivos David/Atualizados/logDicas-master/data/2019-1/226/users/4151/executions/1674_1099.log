== TEST (2019-04-24 22:07:35) 
-- CODE:
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

if(a>=b+c)or(b>=a+c)or(c>=b+a):
	print("Tipo de triangulo: invalido")
else:
		if((a==b)and(b==c)):
			print("equilatero")
		else:
			if((a==b)or(a==c)or(c==b)):
				print("isoceles")
			else:
				print("escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 22:07:51) 
-- CODE:
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

if(a>=b+c)or(b>=a+c)or(c>=b+a):
	print("Tipo de triangulo: invalido")
else:
		if((a==b)and(b==c)):
			print("equilatero")
		else:
			if((a==b)or(a==c)or(c==b)):
				print("isoceles")
			else:
				print("escaleno")
-- EXECUTION TIME:
0.202512
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 22:08:48) 
-- CODE:
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

if(a>=b+c)or(b>=a+c)or(c>=b+a):
	print("Tipo de triangulo: invalido")
else:
		if((a==b)and(b==c)):
			print("equilatero")
		else:
			if((a==b)or(a==c)or(c==b)):
				print("isoceles")
			else:
				print("escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 22:10:04) 
-- CODE:
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

if((a>=b+c)or(b>=a+c)or(c>=b+a)):
	print("Tipo de triangulo: invalido")
else:
		if((a==b)and(b==c)):
			print("equilatero")
		else:
			if((a==b)or(a==c)or(c==b)):
				print("isoceles")
			else:
				print("escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 22:10:16) 
-- CODE:
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

if((a>=b+c)or(b>=a+c)or(c>=b+a)):
	print("Tipo de triangulo: invalido")
else:
		if((a==b)and(b==c)):
			print("equilatero")
		else:
			if((a==b)or(a==c)or(c==b)):
				print("isoceles")
			else:
				print("escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 22:10:27) 
-- CODE:
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

if((a>=b+c)or(b>=a+c)or(c>=b+a)):
	print("Tipo de triangulo: invalido")
else:
		if((a==b)and(b==c)):
			print("equilatero")
		else:
			if((a==b)or(a==c)or(c==b)):
				print("isoceles")
			else:
				print("escaleno")
-- EXECUTION TIME:
0.151537
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:15:10) 
-- CODE:
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
x = Tipo de triangulo:
if((a>=b+c)or(b>=a+c)or(c>=b+a)):
	print(x,"invalido")
else:
		if((a==b)and(b==c)):
			print(x,"equilatero")
		else:
			if((a==b)or(a==c)or(c==b)):
				print(x,"isoceles")
			else:
				print(x,"escaleno")
-- ERROR:
File "XXXX", line 6
    x = Tipo de triangulo:
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:21:22) 
-- CODE:
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
x = Tipo de triangulo:
	
print("Entradas:", a, ",", b, ",", c)

if((a>=b+c)and(b>=a+c)and(c>=b+a)):
	print(x,"invalido")
else:
		if((a==b)or(b==c)):
			print(x,"equilatero")
		else:
			if((a==b)or(a==c)or(c==b)):
				print(x,"isoceles")
			else:
				print(x,"escaleno")
-- ERROR:
File "XXXX", line 4
    x = Tipo de triangulo:
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:22:49) 
-- CODE:
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
x = "Tipo de triangulo:"
	
print("Entradas:", a, ",", b, ",", c)

if((a>=b+c)and(b>=a+c)and(c>=b+a)):
	print(x,"invalido")
else:
		if((a==b)or(b==c)):
			print(x,"equilatero")
		else:
			if((a==b)or(a==c)or(c==b)):
				print(x,"isoceles")
			else:
				print(x,"escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: equilatero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:23:46) 
-- CODE:
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
x = "Tipo de triangulo:"
	
print("Entradas:", a, ",", b, ",", c)

if((a>b+c)and(b>a+c)and(c>b+a)):
	print(x,"invalido")
else:
		if((a==b)or(b==c)):
			print(x,"equilatero")
		else:
			if((a==b)or(a==c)or(c==b)):
				print(x,"isoceles")
			else:
				print(x,"escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: equilatero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:28:13) 
-- CODE:
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
x = "Tipo de triangulo:"
	
print("Entradas:", a, ",", b, ",", c)

if((a>b+c)or(b>a+c)or(c>b+a)):
	print(x,"invalido")
else:
		if((a==b)and(b==c)):
			print(x,"equilatero")
		else:
			if((a==b)and(a==c)and(c==b)):
				print(x,"isoceles")
			else:
				print(x,"escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:32:00) 
-- CODE:
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
x = "Tipo de triangulo:"
	
print("Entradas:", a, ",", b, ",", c)
if(a<0 or b<0 or c<0):
	if((a>b+c)or(b>a+c)or(c>b+a)):
		print(x,"invalido")
	else:
		if((a==b)and(b==c)):
			print(x,"equilatero")
		else:
			if((a==b)and(a==c)and(c==b)):
				print(x,"isoceles")
			else:
				print(x,"escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:51:09) 
-- CODE:
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
x = "Tipo de triangulo:"
	
print("Entradas:", a, ",", b, ",", c)
if((a<0 and b<0 and c<0) or (a>=b+c and b>=c+a and c>=b+a)):
	print(x,"invalido")
else:
	if((a==b)and(b==c)):
		print(x,"equilatero")
	else:
		if((a==b)or(b==c)or(c==a)):
			print(x,"isoceles")
		else:
			print(x,"escaleno")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:55:37) 
-- CODE:
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
x = "Tipo de triangulo:"
	
print("Entradas:", a, ",", b, ",", c)
if((a<0 and b<0 and c<0) or (a>=b+c and b>=c+a and c>=b+a)):
	print(x,"invalido")
else:
	if((a==b)and(b==c)):
		print(x,"equilatero")
	elif((a==b)or(b==c)or(c==a)):
		print(x,"isoceles")
	else:
		print(x,"escaleno")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:57:34) 
-- CODE:
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
x = "Tipo de triangulo:"
	
print("Entradas:", a, ",", b, ",", c)
if((a<0 and b<0 and c<0) and (a>=b+c and b>=c+a and c>=b+a)):
	print(x,"invalido")
else:
	if((a==b)and(b==c)):
		print(x,"equilatero")
	elif((a==b)or(b==c)or(c==a)):
		print(x,"isoceles")
	else:
		print(x,"escaleno")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:04:01) 
-- CODE:
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
x = "Tipo de triangulo:"
	
print("Entradas:", a, ",", b, ",", c)
if((a>=b+c)or(b>=a+c)or(c>=a+b))
	print(x,"invalido")
else:
	if((a==b)and(b==c)):
		print(x,"equilatero")
	elif((a==b)or(b==c)or(c==a)):
		print(x,"isoceles")
	else:
		print(x,"escaleno")

-- ERROR:
File "XXXX", line 7
    if((a>=b+c)or(b>=a+c)or(c>=a+b))
                                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:04:08) 
-- CODE:
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
x = "Tipo de triangulo:"
	
print("Entradas:", a, ",", b, ",", c)
if((a>=b+c)or(b>=a+c)or(c>=a+b)):
	print(x,"invalido")
else:
	if((a==b)and(b==c)):
		print(x,"equilatero")
	elif((a==b)or(b==c)or(c==a)):
		print(x,"isoceles")
	else:
		print(x,"escaleno")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:04:19) 
-- CODE:
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
x = "Tipo de triangulo:"
	
print("Entradas:", a, ",", b, ",", c)
if((a>=b+c)or(b>=a+c)or(c>=a+b)):
	print(x,"invalido")
else:
	if((a==b)and(b==c)):
		print(x,"equilatero")
	elif((a==b)or(b==c)or(c==a)):
		print(x,"isoceles")
	else:
		print(x,"escaleno")

-- EXECUTION TIME:
0.164052
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:04:50) 
-- CODE:
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
x = "Tipo de triangulo:"
	
print("Entradas:", a, ",", b, ",", c)
if((a>=b+c)or(b>=a+c)or(c>=a+b)):
	print(x,"invalido")
else:
	if((a==b)and(b==c)):
		print(x,"equilatero")
	elif((a==b)or(b==c)or(c==a)):
		print(x,"isoceles")
	else:
		print(x,"escaleno")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:05:19) 
-- CODE:
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
x = "Tipo de triangulo:"
	
print("Entradas:", a, ",", b, ",", c)
if((a>=b+c)or(b>=a+c)or(c>=a+b)):
	print(x,"invalido")
else:
	if((a==b)and(b==c)):
		print(x,"equilatero")
	elif((a==b)or(b==c)or(c==a)):
		print(x,"isosceles")
	else:
		print(x,"escaleno")

-- EXECUTION TIME:
0.125509
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 18:10:27) 
-- CODE:
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
x = "Tipo de triangulo:"
	
print("Entradas:", a, ",", b, ",", c)
if((a>=b+c)or(b>=a+c)or(c>=a+b)):
	print(x,"invalido")
else:
	if((a==b)and(b==c)):
		print(x,"equilatero")
	elif((a==b)or(b==c)or(c==a)):
		print(x,"isosceles")
	else:
		print(x,"escaleno")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 18:11:07) 
-- CODE:
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
x = "Tipo de triangulo:"
	
print("Entradas:", a, ",", b, ",", c)
if((a>=b+c)or(b>=a+c)or(c>=a+b)):
	print(x,"invalido")
else:
	if((a==b)and(b==c)):
		print(x,"equilatero")
	elif((a==b)or(b==c)or(c==a)):
		print(x,"isosceles")
	else:
		print(x,"escaleno")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
