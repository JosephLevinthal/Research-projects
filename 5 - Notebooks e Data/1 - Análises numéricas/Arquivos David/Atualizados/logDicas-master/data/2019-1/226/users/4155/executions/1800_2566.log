== TEST (2019-06-10 14:42:07) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(size(v)):
	if v[i] == 2:
		vet[0] = vey[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = ve[5] + 1
print(vet)
		
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 14:42:26) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = ve[5] + 1
print(vet)
		
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:07:13) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = ve[5] + 1
for i in range(size(vet)):
	if vet[0]:
		vetor[0] = vet[0] * (size(v)/100)
	elif vet[1]:
		vetor[1] = vet[1] * (size(v)/100)
	elif vet[2]:
		vetor[2] = vet[2] * (size(v)/100)
	elif vet[3]:
		vetor[3] = vet[3] * (size(v)/100)
	elif vet[4]:
		vetor[4] = vet[4] * (size(v)/100)
	elif vet[5]:
		vetor[5] = vet[5] * (size(v)/100)
print(vetor)						

		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:08:04) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1
for i in range(size(vet)):
	if vet[0]:
		vetor[0] = vet[0] * (size(v)/100)
	elif vet[1]:
		vetor[1] = vet[1] * (size(v)/100)
	elif vet[2]:
		vetor[2] = vet[2] * (size(v)/100)
	elif vet[3]:
		vetor[3] = vet[3] * (size(v)/100)
	elif vet[4]:
		vetor[4] = vet[4] * (size(v)/100)
	elif vet[5]:
		vetor[5] = vet[5] * (size(v)/100)
print(vetor)						

		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:08:24) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1
for vetor in range(size(vet)):
	if vet[0]:
		vetor[0] = vet[0] * (size(v)/100)
	elif vet[1]:
		vetor[1] = vet[1] * (size(v)/100)
	elif vet[2]:
		vetor[2] = vet[2] * (size(v)/100)
	elif vet[3]:
		vetor[3] = vet[3] * (size(v)/100)
	elif vet[4]:
		vetor[4] = vet[4] * (size(v)/100)
	elif vet[5]:
		vetor[5] = vet[5] * (size(v)/100)
print(vetor)						

		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:08:35) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1
for vet in range(size(vet)):
	if vet[0]:
		vetor[0] = vet[0] * (size(v)/100)
	elif vet[1]:
		vetor[1] = vet[1] * (size(v)/100)
	elif vet[2]:
		vetor[2] = vet[2] * (size(v)/100)
	elif vet[3]:
		vetor[3] = vet[3] * (size(v)/100)
	elif vet[4]:
		vetor[4] = vet[4] * (size(v)/100)
	elif vet[5]:
		vetor[5] = vet[5] * (size(v)/100)
print(vetor)						

		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:09:40) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1
for i in range(size(vet)):
	if vet[i] == vet[0]:
		vetor[0] = vet[0] * (size(v)/100)
	elif vet[1]:
		vetor[1] = vet[1] * (size(v)/100)
	elif vet[2]:
		vetor[2] = vet[2] * (size(v)/100)
	elif vet[3]:
		vetor[3] = vet[3] * (size(v)/100)
	elif vet[4]:
		vetor[4] = vet[4] * (size(v)/100)
	elif vet[5]:
		vetor[5] = vet[5] * (size(v)/100)
print(vetor)						

		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:10:20) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)
vetor = zeros(6, dtype=int)
for i in range(size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1
for i in range(size(vet)):
	if vet[i] == vet[0]:
		vetor[0] = vet[0] * (size(v)/100)
	elif vet[1]:
		vetor[1] = vet[1] * (size(v)/100)
	elif vet[2]:
		vetor[2] = vet[2] * (size(v)/100)
	elif vet[3]:
		vetor[3] = vet[3] * (size(v)/100)
	elif vet[4]:
		vetor[4] = vet[4] * (size(v)/100)
	elif vet[5]:
		vetor[5] = vet[5] * (size(v)/100)
print(vetor)						

		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:10:45) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)
vetor = zeros(6, dtype=int)
for i in range(size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1
for i in range(size(vet)):
	if vet[i] == vet[0]:
		vetor[0] = vet[0] * (size(v)/100)
	elif vet[1]:
		vetor[1] = vet[1] * (size(v)/100)
	elif vet[2]:
		vetor[2] = vet[2] * (size(v)/100)
	elif vet[3]:
		vetor[3] = vet[3] * (size(v)/100)
	elif vet[4]:
		vetor[4] = vet[4] * (size(v)/100)
	elif vet[5]:
		vetor[5] = vet[5] * (size(v)/100)
	print(vetor)						

		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:11:11) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)
vetor = zeros(6, dtype=int)
for i in range(size(vet)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1
for i in range(size(vet)):
	if vet[i] == vet[0]:
		vetor[0] = vet[0] * (size(v)/100)
	elif vet[1]:
		vetor[1] = vet[1] * (size(v)/100)
	elif vet[2]:
		vetor[2] = vet[2] * (size(v)/100)
	elif vet[3]:
		vetor[3] = vet[3] * (size(v)/100)
	elif vet[4]:
		vetor[4] = vet[4] * (size(v)/100)
	elif vet[5]:
		vetor[5] = vet[5] * (size(v)/100)
print(vetor)						

		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:11:28) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)
vetor = zeros(6, dtype=int)
for i in range(size(vet)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1
for i in range(size(vet)):
	if vet[i] == vet[0]:
		vetor[0] = vet[0] * (size(v)/100)
	elif vet[1]:
		vetor[1] = vet[1] * (size(v)/100)
	elif vet[2]:
		vetor[2] = vet[2] * (size(v)/100)
	elif vet[3]:
		vetor[3] = vet[3] * (size(v)/100)
	elif vet[4]:
		vetor[4] = vet[4] * (size(v)/100)
	elif vet[5]:
		vetor[5] = vet[5] * (size(v)/100)
print(vet)						

		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:11:44) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)
vetor = zeros(6, dtype=int)
for i in range(size(vet)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1
for i in range(size(vet)):
	if vet[i] == vet[0]:
		vetor[0] = vet[0] * (size(v)/100)
	elif vet[1]:
		vetor[1] = vet[1] * (size(v)/100)
	elif vet[2]:
		vetor[2] = vet[2] * (size(v)/100)
	elif vet[3]:
		vetor[3] = vet[3] * (size(v)/100)
	elif vet[4]:
		vetor[4] = vet[4] * (size(v)/100)
	elif vet[5]:
		vetor[5] = vet[5] * (size(v)/100)
print(vet)						

		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:12:48) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(size(vet)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1
		
vetor = zeros(6, dtype=int)		
for i in range(size(vet)):
	if vet[i] == vet[0]:
		vetor[0] = vet[0] * (size(v)/100)
	elif vet[1]:
		vetor[1] = vet[1] * (size(v)/100)
	elif vet[2]:
		vetor[2] = vet[2] * (size(v)/100)
	elif vet[3]:
		vetor[3] = vet[3] * (size(v)/100)
	elif vet[4]:
		vetor[4] = vet[4] * (size(v)/100)
	elif vet[5]:
		vetor[5] = vet[5] * (size(v)/100)
print(vetor)						

		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:13:26) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(size(vet)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1		
for i in range(size(vet)):
	if vet[i] == vet[0]:
		vet[0] = vet[0] * (size(v)/100)
	elif vet[1]:
		vet[1] = vet[1] * (size(v)/100)
	elif vet[2]:
		vet[2] = vet[2] * (size(v)/100)
	elif vet[3]:
		vet[3] = vet[3] * (size(v)/100)
	elif vet[4]:
		vet[4] = vet[4] * (size(v)/100)
	elif vet[5]:
		vet[5] = vet[5] * (size(v)/100)
print(vet)						

		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:13:47) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(size(vet)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1		
for i in range(size(v)):
	if vet[i] == vet[0]:
		vet[0] = vet[0] * (size(v)/100)
	elif vet[1]:
		vet[1] = vet[1] * (size(v)/100)
	elif vet[2]:
		vet[2] = vet[2] * (size(v)/100)
	elif vet[3]:
		vet[3] = vet[3] * (size(v)/100)
	elif vet[4]:
		vet[4] = vet[4] * (size(v)/100)
	elif vet[5]:
		vet[5] = vet[5] * (size(v)/100)
print(vet)						

		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:16:42) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(size(vet)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1		
for i in range(size(v)):
	if vet[i] == vet[0]:
		vet[0] = vet[0] * (size(v)/100)
	elif vet[i] == vet[1]:
		vet[1] = vet[1] * (size(v)/100)
	elif vet[i] == vet[2]:
		vet[2] = vet[2] * (size(v)/100)
	elif vet[i] == vet[3]:
		vet[3] = vet[3] * (size(v)/100)
	elif vet[i] == vet[4]:
		vet[4] = vet[4] * (size(v)/100)
	elif vet[i] == vet[5]:
		vet[5] = vet[5] * (size(v)/100)
print(vet)						

		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:17:17) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(size(vet)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1		
for i in range(size(vet)):
	if vet[i] == vet[0]:
		vet[0] = vet[0] * (size(v)/100)
	elif vet[i] == vet[1]:
		vet[1] = vet[1] * (size(v)/100)
	elif vet[i] == vet[2]:
		vet[2] = vet[2] * (size(v)/100)
	elif vet[i] == vet[3]:
		vet[3] = vet[3] * (size(v)/100)
	elif vet[i] == vet[4]:
		vet[4] = vet[4] * (size(v)/100)
	elif vet[i] == vet[5]:
		vet[5] = vet[5] * (size(v)/100)
print(vet)						

		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:17:26) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(size(vet)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1		
for i in range(size(vet)):
	if vet[i] == vet[0]:
		vet[0] = vet[0] * (size(v)/100)
	elif vet[i] == vet[1]:
		vet[1] = vet[1] * (size(v)/100)
	elif vet[i] == vet[2]:
		vet[2] = vet[2] * (size(v)/100)
	elif vet[i] == vet[3]:
		vet[3] = vet[3] * (size(v)/100)
	elif vet[i] == vet[4]:
		vet[4] = vet[4] * (size(v)/100)
	elif vet[i] == vet[5]:
		vet[5] = vet[5] * (size(v)/100)
print(vet)						

		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:18:14) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(size(vet)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1		
for i in vet:
	if vet[i] == vet[0]:
		vet[0] = vet[0] * (size(v)/100)
	elif vet[i] == vet[1]:
		vet[1] = vet[1] * (size(v)/100)
	elif vet[i] == vet[2]:
		vet[2] = vet[2] * (size(v)/100)
	elif vet[i] == vet[3]:
		vet[3] = vet[3] * (size(v)/100)
	elif vet[i] == vet[4]:
		vet[4] = vet[4] * (size(v)/100)
	elif vet[i] == vet[5]:
		vet[5] = vet[5] * (size(v)/100)
print(vet)						

		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:21:49) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(size(vet)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1		
for i in range(size(vet))
	if v[i] == 2:
		vet[0] = vet[0] * (size(v)/100)
	elif v[i] == 3:
		vet[1] = vet[1] * (size(v)/100)
	elif v[i] == 4:
		vet[2] = vet[2] * (size(v)/100)
	elif vet[i] == 4:
		vet[3] = vet[3] * (size(v)/100)
	elif v[i] == 5:
		vet[4] = vet[4] * (size(v)/100)
	elif v[i] == 6:
		vet[5] = vet[5] * (size(v)/100)
print(vet)						

		
			
		
		
	

-- ERROR:
File "XXXX", line 19
    for i in range(size(vet))
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:22:12) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(size(vet)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1		
for i in range(size(vet)):
	if v[i] == 2:
		vet[0] = vet[0] * (size(v)/100)
	elif v[i] == 3:
		vet[1] = vet[1] * (size(v)/100)
	elif v[i] == 4:
		vet[2] = vet[2] * (size(v)/100)
	elif vet[i] == 4:
		vet[3] = vet[3] * (size(v)/100)
	elif v[i] == 5:
		vet[4] = vet[4] * (size(v)/100)
	elif v[i] == 6:
		vet[5] = vet[5] * (size(v)/100)
print(vet)						

		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:24:57) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)
vetor = zeros(6, dtype=int)

for i in range(size(vet)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1		
for i in range(size(vetor)):
	if v[i] == 2:
		vetor[0] = vet[0] * (size(v)/100)
	elif v[i] == 3:
		vetor[1] = vet[1] * (size(v)/100)
	elif v[i] == 4:
		vetor[2] = vet[2] * (size(v)/100)
	elif vet[i] == 4:
		vetor[3] = vet[3] * (size(v)/100)
	elif v[i] == 5:
		vetor[4] = vet[4] * (size(v)/100)
	elif v[i] == 6:
		vetor[5] = vet[5] * (size(v)/100)
print(vetor)						

		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:25:17) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)
vetor = zeros(6, dtype=int)

for i in range(size(vet)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1		
for i in range(size(vetor)):
	if v[i] == 2:
		vetor[0] = vet[0] * (size(v)/100)
	elif v[i] == 3:
		vetor[1] = vet[1] * (size(v)/100)
	elif v[i] == 4:
		vetor[2] = vet[2] * (size(v)/100)
	elif vet[i] == 4:
		vetor[3] = vet[3] * (size(v)/100)
	elif v[i] == 5:
		vetor[4] = vet[4] * (size(v)/100)
	elif v[i] == 6:
		vetor[5] = vet[5] * (size(v)/100)
	print(vetor)						

		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:32:56) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)
vetor = zeros(6, dtype=int)

for i in range(size(vet)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1		
for i in range(size(vet)):
	if v[i] == vet[0:
		vetor[0] = vet[0] * (size(v)/100)
	elif v[i] == 3:
		vetor[1] = vet[1] * (size(v)/100)
	elif v[i] == 4:
		vetor[2] = vet[2] * (size(v)/100)
	elif vet[i] == 4:
		vetor[3] = vet[3] * (size(v)/100)
	elif v[i] == 5:
		vetor[4] = vet[4] * (size(v)/100)
	elif v[i] == 6:
		vetor[5] = vet[5] * (size(v)/100)							

		
			
		
		
	

-- ERROR:
File "XXXX", line 22
    vetor[0] = vet[0] * (size(v)/100)
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:33:16) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)
vetor = zeros(6, dtype=int)

for i in range(size(vet)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1		
for i in range(size(vet)):
	if v[i] == vet[0]:
		vetor[0] = vet[0] * (size(v)/100)
	elif v[i] == 3:
		vetor[1] = vet[1] * (size(v)/100)
	elif v[i] == 4:
		vetor[2] = vet[2] * (size(v)/100)
	elif vet[i] == 4:
		vetor[3] = vet[3] * (size(v)/100)
	elif v[i] == 5:
		vetor[4] = vet[4] * (size(v)/100)
	elif v[i] == 6:
		vetor[5] = vet[5] * (size(v)/100)							

		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:33:36) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)
vetor = zeros(6, dtype=int)

for i in range(size(vet)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1		
for i in range(size(vet)):
	if v[i] == vet[0]:
		vetor[0] = vet[0] * (size(v)/100)
	elif v[i] == 3:
		vetor[1] = vet[1] * (size(v)/100)
	elif v[i] == 4:
		vetor[2] = vet[2] * (size(v)/100)
	elif vet[i] == 4:
		vetor[3] = vet[3] * (size(v)/100)
	elif v[i] == 5:
		vetor[4] = vet[4] * (size(v)/100)
	elif v[i] == 6:
		vetor[5] = vet[5] * (size(v)/100)							
print(vetor)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:33:50) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)
vetor = zeros(6, dtype=int)

for i in range(size(vet)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1		
for i in range(size(vet)):
	if v[i] == vet[0]:
		vetor[0] = vet[0] * (size(v)/100)
	elif v[i] == 3:
		vetor[1] = vet[1] * (size(v)/100)
	elif v[i] == 4:
		vetor[2] = vet[2] * (size(v)/100)
	elif vet[i] == 4:
		vetor[3] = vet[3] * (size(v)/100)
	elif v[i] == 5:
		vetor[4] = vet[4] * (size(v)/100)
	elif v[i] == 6:
		vetor[5] = vet[5] * (size(v)/100)							
print(vet)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:37:27) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(size(vet)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1		
	for i in range(size(vet)):
		if v[i] == vet[0]:
			vetor[0] = vet[0] * (size(v)/100)
		elif v[i] == 3:
			vetor[1] = vet[1] * (size(v)/100)
		elif v[i] == 4:
			vetor[2] = vet[2] * (size(v)/100)
		elif vet[i] == 4:
			vetor[3] = vet[3] * (size(v)/100)
		elif v[i] == 5:
			vetor[4] = vet[4] * (size(v)/100)
		elif v[i] == 6:
			vetor[5] = vet[5] * (size(v)/100)							
print(vet)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:38:09) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)
vetor = zeros(6,dtype=int)

for i in range(size(vet)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1		
	for i in range(size(vet)):
		if v[i] == vet[0]:
			vetor[0] = vet[0] * (size(v)/100)
		elif v[i] == 3:
			vetor[1] = vet[1] * (size(v)/100)
		elif v[i] == 4:
			vetor[2] = vet[2] * (size(v)/100)
		elif vet[i] == 4:
			vetor[3] = vet[3] * (size(v)/100)
		elif v[i] == 5:
			vetor[4] = vet[4] * (size(v)/100)
		elif v[i] == 6:
			vetor[5] = vet[5] * (size(v)/100)							
print(vet)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:38:35) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)
vetor = zeros(6,dtype=int)

for i in range(size(vet)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1		
	for i in range(size(vet)):
		if v[i] == vet[0]:
			vetor[0] = vet[0] * (size(v)/100)
		elif v[i] == 3:
			vetor[1] = vet[1] * (size(v)/100)
		elif v[i] == 4:
			vetor[2] = vet[2] * (size(v)/100)
		elif vet[i] == 4:
			vetor[3] = vet[3] * (size(v)/100)
		elif v[i] == 5:
			vetor[4] = vet[4] * (size(v)/100)
		elif v[i] == 6:
			vetor[5] = vet[5] * (size(v)/100)							
print(vet)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:40:14) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)
vetor = zeros(6,dtype=int)

for i in range(size(vet)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1		
								
print(vet)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:41:09) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(size(vet)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1		
								
print(vet)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:41:20) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(size(vet)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1		
								
print(vet)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:41:45) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(size(vet)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1		
								
print(vet)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:42:35) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(0, size(vet)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1		
								
print(vet)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:43:20) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1		
								
print(vet)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:44:15) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in range(0, size(vet)):
		if v[i] == vet[0]:
			vetor[0] = vet[0] * (size(v)/100)
		elif v[i] == 3:
			vetor[1] = vet[1] * (size(v)/100)
		elif v[i] == 4:
			vetor[2] = vet[2] * (size(v)/100)
		elif vet[i] == 4:
			vetor[3] = vet[3] * (size(v)/100)
		elif v[i] == 5:
			vetor[4] = vet[4] * (size(v)/100)
		elif v[i] == 6:
			vetor[5] = vet[5] * (size(v)/100)		
								
print(vet)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:44:53) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)
vetor = zeros(6, dtype=int)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in range(0, size(vet)):
		if v[i] == vet[0]:
			vetor[0] = vet[0] * (size(v)/100)
		elif v[i] == 3:
			vetor[1] = vet[1] * (size(v)/100)
		elif v[i] == 4:
			vetor[2] = vet[2] * (size(v)/100)
		elif vet[i] == 4:
			vetor[3] = vet[3] * (size(v)/100)
		elif v[i] == 5:
			vetor[4] = vet[4] * (size(v)/100)
		elif v[i] == 6:
			vetor[5] = vet[5] * (size(v)/100)		
								
print(vet)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:45:18) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)
vetor = zeros(6, dtype=int)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
	for i in range(0, size(vet)):
			if v[i] == vet[0]:
				vetor[0] = vet[0] * (size(v)/100)
			elif v[i] == 3:
				vetor[1] = vet[1] * (size(v)/100)
			elif v[i] == 4:
				vetor[2] = vet[2] * (size(v)/100)
			elif vet[i] == 4:
				vetor[3] = vet[3] * (size(v)/100)
			elif v[i] == 5:
				vetor[4] = vet[4] * (size(v)/100)
			elif v[i] == 6:
				vetor[5] = vet[5] * (size(v)/100)		

	print(vet)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:45:36) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)
vetor = zeros(6, dtype=int)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
	for i in range(0, size(vet)):
			if v[i] == vet[0]:
				vetor[0] = vet[0] * (size(v)/100)
			elif v[i] == 3:
				vetor[1] = vet[1] * (size(v)/100)
			elif v[i] == 4:
				vetor[2] = vet[2] * (size(v)/100)
			elif vet[i] == 4:
				vetor[3] = vet[3] * (size(v)/100)
			elif v[i] == 5:
				vetor[4] = vet[4] * (size(v)/100)
			elif v[i] == 6:
				vetor[5] = vet[5] * (size(v)/100)		

			print(vet)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:45:50) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)
vetor = zeros(6, dtype=int)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
	for i in range(0, size(vet)):
			if v[i] == vet[0]:
				vetor[0] = vet[0] * (size(v)/100)
			elif v[i] == 3:
				vetor[1] = vet[1] * (size(v)/100)
			elif v[i] == 4:
				vetor[2] = vet[2] * (size(v)/100)
			elif vet[i] == 4:
				vetor[3] = vet[3] * (size(v)/100)
			elif v[i] == 5:
				vetor[4] = vet[4] * (size(v)/100)
			elif v[i] == 6:
				vetor[5] = vet[5] * (size(v)/100)		

			print(vetor)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:46:03) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)
vetor = zeros(6, dtype=int)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
	for i in range(0, size(vet)):
			if v[i] == vet[0]:
				vetor[0] = vet[0] * (size(v)/100)
			elif v[i] == 3:
				vetor[1] = vet[1] * (size(v)/100)
			elif v[i] == 4:
				vetor[2] = vet[2] * (size(v)/100)
			elif vet[i] == 4:
				vetor[3] = vet[3] * (size(v)/100)
			elif v[i] == 5:
				vetor[4] = vet[4] * (size(v)/100)
			elif v[i] == 6:
				vetor[5] = vet[5] * (size(v)/100)		
print(vetor)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:46:12) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)
vetor = zeros(6, dtype=int)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
	for i in range(0, size(vet)):
			if v[i] == vet[0]:
				vetor[0] = vet[0] * (size(v)/100)
			elif v[i] == 3:
				vetor[1] = vet[1] * (size(v)/100)
			elif v[i] == 4:
				vetor[2] = vet[2] * (size(v)/100)
			elif vet[i] == 4:
				vetor[3] = vet[3] * (size(v)/100)
			elif v[i] == 5:
				vetor[4] = vet[4] * (size(v)/100)
			elif v[i] == 6:
				vetor[5] = vet[5] * (size(v)/100)		
	print(vetor)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:59:45) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)
vetor = zeros(6, dtype=int)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in range(0, size(vet)):
	vet[i] = round(vet[i]/size(v)*100, 1)
print(vet)
			
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-10 16:00:41) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)
vetor = zeros(6, dtype=int)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in range(0, size(vet)):
	vet[i] = round(vet[i]/size(v) * 100, 1)
print(vet)
			
		
			
		
		
	

-- EXECUTION TIME:
1.23093
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[18  0  0 18 25 37]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[ 4  8 16 20 20 32]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[15  7 23  7 15 30]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 16:01:18) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in range(0, size(vet)):
	vet[i] = round(vet[i]/size(v) * 100, 1)
print(vet)
			
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 16:02:45) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in range(0, size(vet)):
	vet[i] = round(vet[i]/size(v) * 100, 1)
print(vet)
			
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 16:02:59) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in range(0, size(vet)):
	vet[i] = round(vet[i]/size(v) * 100, 1)
print(vet)
			
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 16:08:49) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in range(0, size(vet)):
	if vet[i] == vet[0]:
		v[0] = vet[0]/(size(v)*100)
	elif vet[i] == vet[1]:
		v[1] = vet[1]/(size(v)*100)
	if vet[i] == vet[2]:
		vet[2] = vet[2]/(size(v)*100)
	if vet[i] == vet[3]:
		v[3] = vet[3]/(size(v)*100)
	if vet[i] == vet[4]:
		v[4] = vet[4]/(size(v)*100)
	if vet[i] == vet[5]:
		v[5] = vet[5]/(size(v)*100)
print(v)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 16:10:32) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in range(0, size(vet)):
	vet = round(vet[i]/(size(v)*100), 1)
print(vet)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 16:11:12) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in range(0, size(vet)):
	vet[i] = round(vet[i]/(size(v)*100), 1)
print(vet)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 16:12:32) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in range(0, size(vet)):
	vet[i] = round(vet[i]/size(v)*100, 1)
print(vet)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 16:12:44) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in range(0, size(vet)):
	vet[i] = round(vet[i]/size(v)*100, 1)
print(vet)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-10 16:13:05) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in range(0, size(vet)):
	vet[i] = round(vet[i]/size(v)*100, 1)
print(vet)
		
			
		
		
	

-- EXECUTION TIME:
0.985062
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[18  0  0 18 25 37]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[ 4  8 16 20 20 32]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[15  7 23  7 15 30]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 16:13:16) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in range(0, size(vet)):
	vet[i] = round(vet[i]/size(v)*100, 1)
print(vet)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 16:13:52) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in range(0, size(vet)):
	vet[i] = round(vet[i]/size(v)*100, 1)
print(vet)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 16:14:05) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in range(0, size(vet)):
	vet[i] = round(vet[i]/size(v)*100, 1)
print(vet)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-10 16:15:07) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in range(0, size(vet)):
	vet[i] = round(vet[i]/size(v)*100, 1)
print(vet)
		
			
		
		
	

-- EXECUTION TIME:
1.27234
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[18  0  0 18 25 37]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[ 4  8 16 20 20 32]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[15  7 23  7 15 30]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 16:15:15) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in v:
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in range(0, size(vet)):
	vet[i] = round(vet[i]/size(v)*100, 1)
print(vet)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-10 16:15:20) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in v:
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in range(0, size(vet)):
	vet[i] = round(vet[i]/size(v)*100, 1)
print(vet)
		
			
		
		
	

-- EXECUTION TIME:
0.937778
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[18  0  0 18 62  0]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[ 0  4 64 32  0  0]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[ 0 15 38 15 30  0]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 16:16:22) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in range(0, size(vet)):
	vet[i] = round(vet[i]/size(v)*100, 1)
print(vet)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 16:16:32) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in range(0, size(vet)):
	vet[i] = round(vet[i]/size(v)*100, 1)
print(vet)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-10 16:16:38) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in range(0, size(vet)):
	vet[i] = round(vet[i]/size(v)*100, 1)
print(vet)
		
			
		
		
	

-- EXECUTION TIME:
1.03176
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[18  0  0 18 25 37]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[ 4  8 16 20 20 32]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[15  7 23  7 15 30]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 16:17:36) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in v:
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in range(0, size(vet)):
	vet[i] = round(vet[i]/size(v)*100, 1)
print(vet)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 16:18:27) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in range(0, size(vet)):
	vet[i] = round(vet[i]/size(v)*100, 1)
print(vet)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 16:18:36) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in range(0, size(vet)):
	vet[i] = round(vet[i]/size(v)*100, 1)
print(vet)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 16:19:52) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in range(0, size(vet)):
	vet[i] = round(vet[i]/size(v)*100, 1)
print(vet)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-10 16:19:59) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in range(0, size(vet)):
	vet[i] = round(vet[i]/size(v)*100, 1)
print(vet)
		
			
		
		
	

-- EXECUTION TIME:
1.09988
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[18  0  0 18 25 37]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[ 4  8 16 20 20 32]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[15  7 23  7 15 30]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 16:20:43) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in range(0, size(vet)):
	vet[i] = round(vet[i]/size(v)*1000, 1)
print(vet)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 16:21:00) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in range(0, size(vet)):
	vet[i] = round(vet[i]/size(v)*100.0, 1)
print(vet)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 16:22:29) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in range(0, size(vet)):
	vet[i] = vet[i]/size(v)*100
print(vet)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 16:27:03) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in range(0, size(vet)):
	vet = vet[i]/size(v) * 100
print(vet)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-10 16:27:11) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in range(0, size(vet)):
	vet = vet[i]/size(v) * 100
print(vet)
		
			
		
		
	

-- EXECUTION TIME:
1.09046
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1800/2566/main.py", line 20, in <module>
    vet = vet[i]/size(v) * 100
IndexError: invalid index to scalar variable.

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-10 16:27:26) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in range(0, size(vet)):
	vet = vet[i]/size(v) * 100
print(vet)
		
			
		
		
	

-- EXECUTION TIME:
1.23557
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1800/2566/main.py", line 20, in <module>
    vet = vet[i]/size(v) * 100
IndexError: invalid index to scalar variable.

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 16:27:28) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in range(0, size(vet)):
	vet = vet[i]/size(v) * 100
print(vet)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 16:28:10) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in range(0, size(vet)):
	vet = vet[i]/size(v) * 100
print(vet)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 16:28:41) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in range(0, size(vet)):
	vet[i] = vet[i]/size(v) * 100
	i = i + 1
print(vet)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-10 16:28:57) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in range(0, size(vet)):
	vet[i] = vet[i]/size(v) * 100
	i = i + 1
print(vet)
		
			
		
		
	

-- EXECUTION TIME:
1.09738
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[18  0  0 18 25 37]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[ 4  8 16 20 20 32]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[15  7 23  7 15 30]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 16:29:08) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in range(0, size(vet)):
	vet[i] = vet[i]/size(v) * 100
	i = i + 1
print(vet)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 16:29:23) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in range(0, size(vet)):
	vet[i] = vet[i]/size(v) * 100
	i = i + 1
print(vet)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 16:29:49) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in range(0, size(vet)):
	vet[i] = vet[i]/size(v) * 100
print(vet)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 16:30:12) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in range(size(vet)):
	vet[i] = vet[i]/size(v) * 100
print(vet)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 16:30:29) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in vet
	vet[i] = vet[i]/size(v) * 100
print(vet)
		
			
		
		
	

-- ERROR:
File "XXXX", line 19
    for i in vet
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 16:30:34) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in vet:
	vet[i] = vet[i]/size(v) * 100
print(vet)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 16:30:52) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in vet[i]:
	vet[i] = vet[i]/size(v) * 100
print(vet)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 16:31:22) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in range(0, size(vet)):
	vet[i] = vet[i]/size(v) * 100
print(vet)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 16:34:43) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6, dtype=int)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in range(0, size(vet)):
	vet[i] = v[i]/size(v) * 100
print(vet)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 16:35:04) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6,)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in range(0, size(vet)):
	vet[i] = v[i]/size(v) * 100
print(vet)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 16:35:12) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6,)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in range(0, size(vet)):
	vet[i] = vet[i]/size(v) * 100
print(vet)
		
			
		
		
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-10 16:35:39) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6,)

for i in range(0, size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in range(0, size(vet)):
	vet[i] = round(vet[i]/size(v) * 100, 1)
print(vet)
		
			
		
		
	

-- EXECUTION TIME:
1.04316
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[18.8  0.   0.  18.8 25.  37.5]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[ 4.  8. 16. 20. 20. 32.]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[15.4  7.7 23.1  7.7 15.4 30.8]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 00:33:18) 
-- CODE:
from numpy import*
v = array(eval(input("v: ")))

vet = zeros(6,)

for i in range(size(v)):
	if v[i] == 2:
		vet[0] = vet[0] + 1
	elif v[i] == 3:
		vet[1] = vet[1] + 1
	elif v[i] == 4:
		vet[2] = vet[2] +1
	elif v[i] == 5:
		vet[3] = vet[3] + 1
	elif v[i] == 6:
		vet[4] = vet[4] + 1
	elif v[i] == 7:
		vet[5] = vet[5] + 1	
for i in range(0, size(vet)):
	vet[i] = round(vet[i]/size(v) * 100, 1)
print(vet)
		
			
		
		
	

-- EXECUTION TIME:
1.27877
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[18.8  0.   0.  18.8 25.  37.5]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[ 4.  8. 16. 20. 20. 32.]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[15.4  7.7 23.1  7.7 15.4 30.8]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
