== SUBMITION (2019-05-01 22:34:22) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
print("Entradas:",H,",",h,",",r)
if(H > 0 and h>0 and r>0 and H>h and H > 2*r):
	if(h <=r):
		v = (pi/3)*( h**2)*(3*r-h)
		print("Volume:",round(v*1000,3),"litros")
	elif(r<h and h<=H-r)
	   #v = (pi*(r**2)*h)+((pi/3)*(h**2)*(3*r-h))
		v = (4*pi*(r**3)/6)+(pi*(r**2)*(h-r))
		print("Volume:",round(v*1000,3),"litros")
	elif(h>H-r):
		v=((4*pi*(r**3))/6)+((pi/3)*((r**2)*(h-r))*2)
		print("Volume:",round(v*1000,3),"litros")
else:
	print("Entradas invalidas")
	 
-- EXECUTION TIME:
0.179594
-- ERROR:
  File "/home/codebench/codes/1674/1102/main.py", line 11
    elif(r<h and h<=H-r)
                       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:35:11) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
print("Entradas:",H,",",h,",",r)
if(H > 0 and h>0 and r>0 and H>h and H > 2*r):
	if(h <=r):
		v = (pi/3)*( h**2)*(3*r-h)
		print("Volume:",round(v*1000,3),"litros")
	elif(r<h and h<=H-r)
	   #v = (pi*(r**2)*h)+((pi/3)*(h**2)*(3*r-h))
		v = (4*pi*(r**3)/6)+(pi*(r**2)*(h-r))
		print("Volume:",round(v*1000,3),"litros")
	elif(h>H-r):
		v=((4*pi*(r**3))/6)+((pi/3)*((r**2)*(h-r))*2)
		print("Volume:",round(v*1000,3),"litros")
else:
	print("Entradas invalidas")
	 
-- ERROR:
File "XXXX", line 11
    elif(r<h and h<=H-r)
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:35:24) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
print("Entradas:",H,",",h,",",r)
if(H > 0 and h>0 and r>0 and H>h and H > 2*r):
	if(h <=r):
		v = (pi/3)*( h**2)*(3*r-h)
		print("Volume:",round(v*1000,3),"litros")
	elif(r<h and h<=H-r):
	   #v = (pi*(r**2)*h)+((pi/3)*(h**2)*(3*r-h))
		v = (4*pi*(r**3)/6)+(pi*(r**2)*(h-r))
		print("Volume:",round(v*1000,3),"litros")
	elif(h>H-r):
		v=((4*pi*(r**3))/6)+((pi/3)*((r**2)*(h-r))*2)
		print("Volume:",round(v*1000,3),"litros")
else:
	print("Entradas invalidas")
	 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print("Entradas:",H,",",h,",",r)
NameError: name 'H' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:58:17) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("vai:"))
h = float(input("vv:"))
r = float(input("gg:"))
print("Entradas:",H,",",h,",",r)
if(H > 0 and h>0 and r>0 and H>h and H > 2*r):
	if(h <=r):
		v = (pi/3)*( h**2)*(3*r-h)
		print("Volume:",round(v*1000,3),"litros")
	elif(r<h and h<=H-r):
	   #v = (pi*(r**2)*h)+((pi/3)*(h**2)*(3*r-h))
		v = (4*pi*(r**3)/6)+(pi*(r**2)*(h-r))
		print("Volume:",round(v*1000,3),"litros")
	elif(h>H-r):
		v=((4*pi*(r**3))/6)+((pi/3)*((r**2)*(h-r))*2)
		print("Volume:",round(v*1000,3),"litros")
else:
	print("Entradas invalidas")
	 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 16, in <module>
    v = (4*pi*(r**3)/6)+(pi*(r**2)*(h-r))
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:58:45) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("vai:"))
h = float(input("vv:"))
r = float(input("gg:"))
print("Entradas:",H,",",h,",",r)
if(H > 0 and h>0 and r>0 and H>h and H > 2*r):
	if(h <=r):
		v = (pi/3)*( h**2)*(3*r-h)
		print("Volume:",round(v*1000,3),"litros")
	elif(r<h and h<=H-r):
	   #v = (pi*(r**2)*h)+((pi/3)*(h**2)*(3*r-h))
		v = (4*pi*(r**3)/6)+(pi*(r**2)*(h-r))
		print("Volume:",round(v*1000,3),"litros")
	elif(h>H-r):
		v=((4*pi*(r**3))/6)+((pi/3)*((r**2)*(h-r))*2)
		print("Volume:",round(v*1000,3),"litros")
else:
	print("Entradas invalidas")
	 
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 22:58:57) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("vai:"))
h = float(input("vv:"))
r = float(input("gg:"))
print("Entradas:",H,",",h,",",r)
if(H > 0 and h>0 and r>0 and H>h and H > 2*r):
	if(h <=r):
		v = (pi/3)*( h**2)*(3*r-h)
		print("Volume:",round(v*1000,3),"litros")
	elif(r<h and h<=H-r):
	   #v = (pi*(r**2)*h)+((pi/3)*(h**2)*(3*r-h))
		v = (4*pi*(r**3)/6)+(pi*(r**2)*(h-r))
		print("Volume:",round(v*1000,3),"litros")
	elif(h>H-r):
		v=((4*pi*(r**3))/6)+((pi/3)*((r**2)*(h-r))*2)
		print("Volume:",round(v*1000,3),"litros")
else:
	print("Entradas invalidas")
	 
-- EXECUTION TIME:
0.188265
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
