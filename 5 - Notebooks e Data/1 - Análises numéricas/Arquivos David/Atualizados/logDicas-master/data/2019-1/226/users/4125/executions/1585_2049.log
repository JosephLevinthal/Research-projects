== TEST (2019-03-21 21:41:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = 2
y = 3
expressao1 = int(x/y)
expressao2 = int(x//y)
expressao3 = int(x%y)
-- OUTPUT:
8.0
5.0
1.0
3.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 21:41:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = 2
y = 3
expressao1 = int(x/y)
expressao2 = int(x//y)
expressao3 = int(x%y)
-- EXECUTION TIME:
0.151624
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:

-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:

-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:42:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = 2
y = 3
print(x)
print(y)
expressao2 = int(x//y)
expressao3 = int(x%y)
print(expressao2)
print(expressao3)

-- OUTPUT:
2
3
0
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 21:42:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = 2
y = 3
print(x)
print(y)
expressao2 = int(x//y)
expressao3 = int(x%y)
print(expressao2)
print(expressao3)

-- EXECUTION TIME:
0.20145
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
2
3
0
2
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
2
3
0
2
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
2
3
0
2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:43:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = 8
y = 3
print(x)
print(y)
expressao2 = int(x//y)
expressao3 = int(x%y)
print(expressao2)
print(expressao3)

-- OUTPUT:
8
3
2
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 21:43:27) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = 8
y = 3
print(x)
print(y)
expressao2 = int(x//y)
expressao3 = int(x%y)
print(expressao2)
print(expressao3)

-- EXECUTION TIME:
0.235578
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
8
3
2
2
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
8
3
2
2
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
8
3
2
2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:43:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = 8
y = 3
print(x)
print(y)
expressao2 = int(x/y)
expressao3 = int(x%y)
print(expressao2)
print(expressao3)

-- OUTPUT:
8
3
2
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:44:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = 8
y = 3
print(x)
print(y)
expressao2 = int(x/y)
expressao3 = int(x%y)
print(expressao2)
print(expressao3)

-- OUTPUT:
8
3
2
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 21:44:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = 8
y = 3
print(x)
print(y)
expressao2 = int(x/y)
expressao3 = int(x%y)
print(expressao2)
print(expressao3)

-- EXECUTION TIME:
0.234571
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
8
3
2
2
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
8
3
2
2
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
8
3
2
2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:45:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
X = 8
Y = 3
print(x)
print(y)
expressao2 = int(x/y)
expressao3 = int(x%y)
print(expressao2)
print(expressao3)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(x)
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:45:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
X = 8
Y = 3
print(X)
print(Y)
expressao2 = int(X//Y)
expressao3 = int(X%Y)
print(expressao2)
print(expressao3)

-- OUTPUT:
8
3
2
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 21:45:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
X = 8
Y = 3
print(X)
print(Y)
expressao2 = int(X//Y)
expressao3 = int(X%Y)
print(expressao2)
print(expressao3)

-- EXECUTION TIME:
0.143816
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
8
3
2
2
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
8
3
2
2
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
8
3
2
2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:46:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
X = 8
Y = 3
print(X)
print(Y)
print("expressao2" = int(X//Y))
expressao3 = int(X%Y)
print(expressao2)
print(expressao3)

-- ERROR:
File "XXXX", line 8
    print("expressao2" = int(X//Y))
         ^
SyntaxError: keyword can't be an expression
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:46:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
X = 8
Y = 3
print(X)
print(Y)
print(expressao2  int(X//Y))
expressao3 = int(X%Y)
print(expressao2)
print(expressao3)

-- ERROR:
File "XXXX", line 8
    print(expressao2  int(X//Y))
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:47:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
X = 8
Y = 3
print(X)
print(Y)
expressao2 = X//Y
expressao3 = int(X%Y)
print(expressao2)
print(expressao3)

-- OUTPUT:
8
3
2
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:48:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
X = 9
Y = 4
print(X)
print(Y)
expressao2 = X//Y
expressao3 = int(X%Y)
print(expressao2)
print(expressao3)

-- OUTPUT:
9
4
2
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 21:48:05) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
X = 9
Y = 4
print(X)
print(Y)
expressao2 = X//Y
expressao3 = int(X%Y)
print(expressao2)
print(expressao3)

-- EXECUTION TIME:
0.159938
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
9
4
2
1
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
9
4
2
1
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
9
4
2
1
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:28:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input("digite um numero: "))
Y = int(input("digite um numero: "))
print(X)
print(Y)
expressao2 = X // Y
expressao3 = int(X%Y)
print(expressao2)
print(expressao3)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(X)
NameError: name 'X' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:29:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input("digite um numero: "))
Y = int(input("digite um numero: "))
print(X)
print(Y)
expressao2 = X // Y
expressao3 = int(X%Y)
print(expressao2)
print(expressao3)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(X)
NameError: name 'X' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:29:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input("digite um numero: "))
y = int(input("digite um numero: "))
print(x)
print(y)
expressao2 = x // y
expressao3 = int(x%y)
print(expressao2)
print(expressao3)

-- OUTPUT:
8
5
1
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 12:30:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input("digite um numero: "))
y = int(input("digite um numero: "))
print(x)
print(y)
expressao2 = x // y
expressao3 = int(x%y)
print(expressao2)
print(expressao3)

-- EXECUTION TIME:
0.157237
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
8
5
1
3
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
14
2
7
0
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
347
2
173
1
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
