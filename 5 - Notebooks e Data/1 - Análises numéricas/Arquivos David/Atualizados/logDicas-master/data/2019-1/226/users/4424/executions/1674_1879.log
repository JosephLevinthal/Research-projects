== TEST (2019-04-25 10:42:53) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
e=float(input("extra"))
f=float(input("falta"))

h=e-(1/4*f)
if(h>400):
	g=round(500, 2)
else:
	g=round(100, 2)
	
print(g)
-- OUTPUT:
500
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:42:58) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
e=float(input("extra"))
f=float(input("falta"))

h=e-(1/4*f)
if(h>400):
	g=round(500, 2)
else:
	g=round(100, 2)
	
print(g)
-- OUTPUT:
500
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:43:10) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
e=float(input("extra"))
f=float(input("falta"))

h=e-(1/4*f)
if(h>400):
	g=round(500, 2)
else:
	g=round(100, 2)
	
print(g)
-- OUTPUT:
500
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:43:16) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
e=float(input("extra"))
f=float(input("falta"))

h=e-(1/4*f)
if(h>400):
	g=round(500, 2)
else:
	g=round(100, 2)
	
print(g)
-- OUTPUT:
500
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:43:31) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
e=float(input("extra"))
f=float(input("falta"))

h=e-(1/4*f)
if(h>400):
	g=round(500, 2)
else:
	g=round(100, 2)
	
print(g)
-- EXECUTION TIME:
0.144261
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
500
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
100
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
100
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:52:37) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
e=float(input("extra"))
f=float(input("falta"))

h=e-(1/4*f)
if(h>400):
	g=round(500, 2)
else:
	g=round(100, 2)
	
print(e, "extras e", f, "de faltas")
print("R$, g)
-- ERROR:
File "XXXX", line 12
    print("R$, g)
                ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:52:46) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
e=float(input("extra"))
f=float(input("falta"))

h=e-(1/4*f)
if(h>400):
	g=round(500, 2)
else:
	g=round(100, 2)
	
print(e, "extras e", f, "de faltas")
print("R$", g)
-- OUTPUT:
420.0 extras e 20.0 de faltas
R$ 500
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:53:04) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
e=float(input("extra"))
f=float(input("falta"))

h=e-(1/4*f)
if(h>400):
	g=round(500, 2)
else:
	g=round(100, 2)
	
print(e, "extras e", f, "de faltas")
print("R$", g)
-- EXECUTION TIME:
0.184125
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de faltas
R$ 500
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de faltas
R$ 100
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de faltas
R$ 100
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:53:24) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
e=float(input("extra"))
f=float(input("falta"))

h=e-(1/4*f)
if(h>400):
	g=round(500, 2)
else:
	g=round(100, 2)
	
print(e, "extras e", f, "de faltas")
print("R$", g)
-- OUTPUT:
420.0 extras e 20.0 de faltas
R$ 500
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:53:47) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
e=float(input("extra"))
f=float(input("falta"))

h=e-(1/4*f)
if(h>400):
	g=round(500, 2)
else:
	g=round(100, 2)
	
print(e, "extras e", f, "de faltas")
print("R$", g)
-- EXECUTION TIME:
0.209797
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de faltas
R$ 500
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de faltas
R$ 100
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de faltas
R$ 100
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:54:31) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
e=float(input("extra"))
f=float(input("falta"))

h=e-(1/4*f)
if(h>400):
	g=round(500.00, 2)
else:
	g=round(100.00, 2)
	
print(e, "extras e", f, "de faltas")
print("R$", g)
-- EXECUTION TIME:
0.150932
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de faltas
R$ 500.0
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de faltas
R$ 100.0
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de faltas
R$ 100.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:54:53) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
e=float(input("extra"))
f=float(input("falta"))

h=e-(1/4*f)
if(h>400):
	g=round(500.00, 2)
else:
	g=round(100.00, 2)
	
print(e, "extras e", f, "de faltas")
print("R$", g)
-- EXECUTION TIME:
0.217826
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de faltas
R$ 500.0
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de faltas
R$ 100.0
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de faltas
R$ 100.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:55:53) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
e=float(input("extra"))
f=float(input("falta"))

h=e-(1/4*f)
if(h>400):
	g=round(500, 2)
else:
	g=round(100, 2)
	
print(e, "extras e", f, "de faltas")
print("R$", g)
-- OUTPUT:
420.0 extras e 20.0 de faltas
R$ 500
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:56:18) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
e=float(input("extra"))
f=float(input("falta"))

h=e-(1/4*f)
if(h>400):
	g=round(500, 2)
else:
	g=round(100, 2)
	
print(e, "extras e", f, "de faltas")
print("R$", g)
-- EXECUTION TIME:
0.164661
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de faltas
R$ 500
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de faltas
R$ 100
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de faltas
R$ 100
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:56:41) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
e=float(input("extra"))
f=float(input("falta"))

h=e-((1/4)*f)
if(h>400):
	g=round(500, 2)
else:
	g=round(100, 2)
	
print(e, "extras e", f, "de faltas")
print("R$", g)
-- EXECUTION TIME:
0.169342
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de faltas
R$ 500
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de faltas
R$ 100
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de faltas
R$ 100
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:57:34) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
e=float(input("extra"))
f=float(input("falta"))

h=e-((1/4)*f)
if(h>400):
	g=round(500, 2)
else:
	g=round(100, 2)
	
print(e, "extras e", f, "de faltas")
print("R$", g)
-- EXECUTION TIME:
0.120865
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de faltas
R$ 500
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de faltas
R$ 100
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de faltas
R$ 100
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 15:02:01) 
-- CODE:
E= float(input("horas extras:"))
F= float(input("horas faltando:"))
H= E-((1/4)*F)
if(H>400):
	G=round(500.00, 2)
else:
	G= round(100.00, 2)
print(E,"extras e", F, "de falta")
print("R$", G)
-- EXECUTION TIME:
0.187847
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500.0
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 100.0
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 100.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
