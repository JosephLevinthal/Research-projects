== TEST (2019-03-26 10:44:47) 
-- CODE:
A = input("nome do objeto: ")
B = input("numero de repeticoes: ")

print('abra' + A + B)
-- OUTPUT:
abralivro8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 10:45:00) 
-- CODE:
A = input("nome do objeto: ")
B = input("numero de repeticoes: ")

print('abra' + A + B)
-- EXECUTION TIME:
0.15627
-- TEST CASE 1:
---- input:
livro
8
---- correct output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
---- user output:
abralivro8
-- TEST CASE 2:
---- input:
carro
2
---- correct output:
Abra carro Abra carro
---- user output:
abracarro2
-- TEST CASE 3:
---- input:
caixa
1
---- correct output:
Abra caixa
---- user output:
abracaixa1
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 10:45:24) 
-- CODE:
A = input("nome do objeto: ")
B = input("numero de repeticoes: ")

print('abra' + A * B)
-- EXECUTION TIME:
0.196382
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1593/1801/main.py", line 4, in <module>
    print('abra' + A * B)
TypeError: can't multiply sequence by non-int of type 'str'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:45:27) 
-- CODE:
A = input("nome do objeto: ")
B = input("numero de repeticoes: ")

print('abra' + A * B)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print('abra' + A * B)
TypeError: can't multiply sequence by non-int of type 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:46:26) 
-- CODE:
A = input("nome do objeto: ")
B = input("numero de repeticoes: ")

print(B * 'abra' + A)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(B * 'abra' + A)
TypeError: can't multiply sequence by non-int of type 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:48:13) 
-- CODE:
A = input("nome do objeto: ")
B = input("numero de repeticoes: ")

print('abra' + '_ A_' * B)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print('abra' + '_ A_' * B)
TypeError: can't multiply sequence by non-int of type 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 10:48:52) 
-- CODE:
A = input("nome do objeto: ")
B = input("numero de repeticoes: ")

print('abra' + "_ A_" * B)
-- EXECUTION TIME:
0.183939
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1593/1801/main.py", line 4, in <module>
    print('abra' + "_ A_" * B)
TypeError: can't multiply sequence by non-int of type 'str'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:49:13) 
-- CODE:
A = input("nome do objeto: ")
B = input("numero de repeticoes: ")

print("'abra' + _ A_" * B)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print("'abra' + _ A_" * B)
TypeError: can't multiply sequence by non-int of type 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:50:38) 
-- CODE:
A = input("nome do objeto: ")
B = input("numero de repeticoes: ")

print("Abra + _A_ * B")
-- OUTPUT:
Abra + _A_ * B
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:50:59) 
-- CODE:
A = input("nome do objeto: ")
B = input("numero de repeticoes: ")

print("Abra + _A_" * B)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print("Abra + _A_" * B)
TypeError: can't multiply sequence by non-int of type 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 10:51:41) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))

print("Abra + _A_" * B)
-- EXECUTION TIME:
0.223728
-- TEST CASE 1:
---- input:
livro
8
---- correct output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
---- user output:
Abra + _A_Abra + _A_Abra + _A_Abra + _A_Abra + _A_Abra + _A_Abra + _A_Abra + _A_
-- TEST CASE 2:
---- input:
carro
2
---- correct output:
Abra carro Abra carro
---- user output:
Abra + _A_Abra + _A_
-- TEST CASE 3:
---- input:
caixa
1
---- correct output:
Abra caixa
---- user output:
Abra + _A_
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:51:42) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))

print("Abra + _A_" * B)
-- OUTPUT:
Abra + _A_Abra + _A_Abra + _A_Abra + _A_Abra + _A_Abra + _A_Abra + _A_Abra + _A_
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:52:35) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))

print("Abra" + "_A_" * B)
-- OUTPUT:
Abra_A__A__A__A__A__A__A__A_
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:53:02) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))

print("Abra + A " * B)
-- OUTPUT:
Abra + A Abra + A Abra + A Abra + A Abra + A Abra + A Abra + A Abra + A
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:53:20) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))

print("Abra" + A  * B)
-- OUTPUT:
Abralivrolivrolivrolivrolivrolivrolivrolivro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 10:53:31) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))

print("Abra" + A  * B)
-- EXECUTION TIME:
0.210413
-- TEST CASE 1:
---- input:
livro
8
---- correct output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
---- user output:
Abralivrolivrolivrolivrolivrolivrolivrolivro
-- TEST CASE 2:
---- input:
carro
2
---- correct output:
Abra carro Abra carro
---- user output:
Abracarrocarro
-- TEST CASE 3:
---- input:
caixa
1
---- correct output:
Abra caixa
---- user output:
Abracaixa
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:53:50) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))

print("Abra" + _A_  * B)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print("Abra" + _A_  * B)
NameError: name '_A_' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:54:38) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))

print("Abra" + _A_ * B)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print("Abra" + _A_ * B)
NameError: name '_A_' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:54:50) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))

print("Abra" + '_A_' * B)
-- OUTPUT:
Abra_A__A__A__A__A__A__A__A_
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:56:18) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))

print(("Abra" + A) * B)
-- OUTPUT:
AbralivroAbralivroAbralivroAbralivroAbralivroAbralivroAbralivroAbralivro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:56:25) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))

print(("Abra" + A) * B)
-- OUTPUT:
AbralivroAbralivroAbralivroAbralivroAbralivroAbralivroAbralivroAbralivro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 10:56:28) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))

print(("Abra" + A) * B)
-- EXECUTION TIME:
0.272671
-- TEST CASE 1:
---- input:
livro
8
---- correct output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
---- user output:
AbralivroAbralivroAbralivroAbralivroAbralivroAbralivroAbralivroAbralivro
-- TEST CASE 2:
---- input:
carro
2
---- correct output:
Abra carro Abra carro
---- user output:
AbracarroAbracarro
-- TEST CASE 3:
---- input:
caixa
1
---- correct output:
Abra caixa
---- user output:
Abracaixa
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:56:39) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))

print(("Abra" +_ A) * B)
-- ERROR:
File "XXXX", line 4
    print(("Abra" +_ A) * B)
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:56:54) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))

print(("Abra" +'_ A_') * B)
-- OUTPUT:
Abra_ A_Abra_ A_Abra_ A_Abra_ A_Abra_ A_Abra_ A_Abra_ A_Abra_ A_
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 10:57:16) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))

print(("Abra" +'_' A) * B)
-- EXECUTION TIME:
0.205668
-- ERROR:
  File "/home/codebench/codes/1593/1801/main.py", line 4
    print(("Abra" +'_' A) * B)
                       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:57:18) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))

print(("Abra" +'_' A) * B)
-- ERROR:
File "XXXX", line 4
    print(("Abra" +'_' A) * B)
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:57:31) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))

print(("Abra" + '_' A) * B)
-- ERROR:
File "XXXX", line 4
    print(("Abra" + '_' A) * B)
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:57:49) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))

print(("Abra" + _ A) * B)
-- ERROR:
File "XXXX", line 4
    print(("Abra" + _ A) * B)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:57:58) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))

print(("Abra" + A) * B)
-- OUTPUT:
AbralivroAbralivroAbralivroAbralivroAbralivroAbralivroAbralivroAbralivro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:58:36) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))

print(("Abra" + "_" + A) * B)
-- OUTPUT:
Abra_livroAbra_livroAbra_livroAbra_livroAbra_livroAbra_livroAbra_livroAbra_livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 10:58:46) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))

print(("Abra" + "_" + A) * B)
-- EXECUTION TIME:
0.143519
-- TEST CASE 1:
---- input:
livro
8
---- correct output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
---- user output:
Abra_livroAbra_livroAbra_livroAbra_livroAbra_livroAbra_livroAbra_livroAbra_livro
-- TEST CASE 2:
---- input:
carro
2
---- correct output:
Abra carro Abra carro
---- user output:
Abra_carroAbra_carro
-- TEST CASE 3:
---- input:
caixa
1
---- correct output:
Abra caixa
---- user output:
Abra_caixa
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:59:37) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))

print(("Abra" + A "_") * B)
-- ERROR:
File "XXXX", line 4
    print(("Abra" + A "_") * B)
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:59:45) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))

print(("Abra" + A + "_") * B)
-- OUTPUT:
Abralivro_Abralivro_Abralivro_Abralivro_Abralivro_Abralivro_Abralivro_Abralivro_
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:00:35) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))

print(("Abra" + _ + A) * B)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(("Abra" + _ + A) * B)
NameError: name '_' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:01:04) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))
E = _
print(("Abra" + E + A) * B)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    E = _
NameError: name '_' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:01:58) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))
E = input('_')
print(("Abra" + A + E) * B)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    E = input()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:02:20) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))
E = '_'
print(("Abra" + A + E) * B)
-- OUTPUT:
Abralivro_Abralivro_Abralivro_Abralivro_Abralivro_Abralivro_Abralivro_Abralivro_
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:03:04) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))
E = '_'
print(("Abra" + E + A) * B)
-- OUTPUT:
Abra_livroAbra_livroAbra_livroAbra_livroAbra_livroAbra_livroAbra_livroAbra_livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:05:13) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))
E = _
print(("Abra" + E A + "_") * B)
-- ERROR:
File "XXXX", line 4
    print(("Abra" + E A + "_") * B)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:05:29) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))

print(("Abra" + A + "_") * B)
-- OUTPUT:
Abralivro_Abralivro_Abralivro_Abralivro_Abralivro_Abralivro_Abralivro_Abralivro_
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:06:23) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))

print(("Abra"+ _ + A ) * B)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(("Abra"+ _ + A ) * B)
NameError: name '_' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:06:38) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))

print(("Abra" + _ + A ) * B)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(("Abra" + _ + A ) * B)
NameError: name '_' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:06:44) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))

print(("Abra" + _ + A ) * B)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(("Abra" + _ + A ) * B)
NameError: name '_' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:07:28) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))

print(("Abra" + "_" + A + "_") * B)
-- OUTPUT:
Abra_livro_Abra_livro_Abra_livro_Abra_livro_Abra_livro_Abra_livro_Abra_livro_Abra_livro_
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 11:07:38) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))

print(("Abra" + "_" + A + "_") * B)
-- EXECUTION TIME:
0.164797
-- TEST CASE 1:
---- input:
livro
8
---- correct output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
---- user output:
Abra_livro_Abra_livro_Abra_livro_Abra_livro_Abra_livro_Abra_livro_Abra_livro_Abra_livro_
-- TEST CASE 2:
---- input:
carro
2
---- correct output:
Abra carro Abra carro
---- user output:
Abra_carro_Abra_carro_
-- TEST CASE 3:
---- input:
caixa
1
---- correct output:
Abra caixa
---- user output:
Abra_caixa_
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:08:29) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))

print(("Abra"  + A + "_") * B)
-- OUTPUT:
Abralivro_Abralivro_Abralivro_Abralivro_Abralivro_Abralivro_Abralivro_Abralivro_
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:10:35) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))

print(("Abra" + "_" + A + "_") * B)
-- OUTPUT:
Abra_livro_Abra_livro_Abra_livro_Abra_livro_Abra_livro_Abra_livro_Abra_livro_Abra_livro_
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:11:23) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))

print((("Abra" +  + A +)"_" )* B)
-- ERROR:
File "XXXX", line 4
    print((("Abra" +  + A +)"_" )* B)
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:12:27) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))

print(("Abra" + "_ + A + _") * B)
-- OUTPUT:
Abra_ + A + _Abra_ + A + _Abra_ + A + _Abra_ + A + _Abra_ + A + _Abra_ + A + _Abra_ + A + _Abra_ + A + _
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:13:08) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))

print(("Abra" + _ + A + "_") * B)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(("Abra" + _ + A + "_") * B)
NameError: name '_' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 11:13:27) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))

print(("Abra" + A + "_") * B)
-- EXECUTION TIME:
0.171795
-- TEST CASE 1:
---- input:
livro
8
---- correct output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
---- user output:
Abralivro_Abralivro_Abralivro_Abralivro_Abralivro_Abralivro_Abralivro_Abralivro_
-- TEST CASE 2:
---- input:
carro
2
---- correct output:
Abra carro Abra carro
---- user output:
Abracarro_Abracarro_
-- TEST CASE 3:
---- input:
caixa
1
---- correct output:
Abra caixa
---- user output:
Abracaixa_
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:13:28) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))

print(("Abra" + A + "_") * B)
-- OUTPUT:
Abralivro_Abralivro_Abralivro_Abralivro_Abralivro_Abralivro_Abralivro_Abralivro_
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:15:42) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))

print(("Abra" + A ) * B)
-- OUTPUT:
AbralivroAbralivroAbralivroAbralivroAbralivroAbralivroAbralivroAbralivro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:16:16) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))

print(("Abra" + "" + A + "") * B)
-- OUTPUT:
AbralivroAbralivroAbralivroAbralivroAbralivroAbralivroAbralivroAbralivro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:16:36) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))

print(("Abra" + "_" + A + "_") * B)
-- OUTPUT:
Abra_livro_Abra_livro_Abra_livro_Abra_livro_Abra_livro_Abra_livro_Abra_livro_Abra_livro_
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:17:27) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))

print(("Abra" + '_' + A + '_') * B)
-- OUTPUT:
Abra_livro_Abra_livro_Abra_livro_Abra_livro_Abra_livro_Abra_livro_Abra_livro_Abra_livro_
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:18:43) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))
p = '_'
print(("Abra" + p + A + p) * B)
-- OUTPUT:
Abra_livro_Abra_livro_Abra_livro_Abra_livro_Abra_livro_Abra_livro_Abra_livro_Abra_livro_
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 11:20:07) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))

print((" Abra"+ A) * B)
-- EXECUTION TIME:
0.263003
-- TEST CASE 1:
---- input:
livro
8
---- correct output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
---- user output:
Abralivro Abralivro Abralivro Abralivro Abralivro Abralivro Abralivro Abralivro
-- TEST CASE 2:
---- input:
carro
2
---- correct output:
Abra carro Abra carro
---- user output:
Abracarro Abracarro
-- TEST CASE 3:
---- input:
caixa
1
---- correct output:
Abra caixa
---- user output:
Abracaixa
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:20:10) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))

print((" Abra"+ A) * B)
-- OUTPUT:
Abralivro Abralivro Abralivro Abralivro Abralivro Abralivro Abralivro Abralivro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:21:37) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))
X = " Abra" + A
print((X) * B)
-- OUTPUT:
Abralivro Abralivro Abralivro Abralivro Abralivro Abralivro Abralivro Abralivro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:21:51) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))
X = " Abra" + A
print((X) * B)
-- OUTPUT:
Abralivro Abralivro Abralivro Abralivro Abralivro Abralivro Abralivro Abralivro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:22:13) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))
X = " Abra" + A
print((X) * B)
-- OUTPUT:
Abralivro Abralivro Abralivro Abralivro Abralivro Abralivro Abralivro Abralivro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 11:22:30) 
-- CODE:
A = input("nome do objeto: ")
B = int(input("numero de repeticoes: "))
X = " Abra " + A
print((X) * B)
-- EXECUTION TIME:
0.118392
-- TEST CASE 1:
---- input:
livro
8
---- correct output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
---- user output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
-- TEST CASE 2:
---- input:
carro
2
---- correct output:
Abra carro Abra carro
---- user output:
Abra carro Abra carro
-- TEST CASE 3:
---- input:
caixa
1
---- correct output:
Abra caixa
---- user output:
Abra caixa
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
