== TEST (2019-05-09 11:17:08) 
-- CODE:
n = input()
r = lens(n)
n = int(n)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    r = lens(n)
NameError: name 'lens' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:17:29) 
-- CODE:
n = input()
r = len(n)
n = int(n)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    r = lens(n)
NameError: name 'lens' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:17:37) 
-- CODE:
n = input()
r = len(n)
n = int(n)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    r = lens(n)
NameError: name 'lens' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:26:02) 
-- CODE:


i = s = 0

while 1:
	n = input()
	r = len(n)
	i = 0
	for i in n:
		s = int(n[i])**r
	if s == int(n):
		print("ARMSTRONG")
	else:
		print("NAO ARMSTRONG")
	if int(n)>=0:
		break

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    s = int(n[i])**r
TypeError: string indices must be integers
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:26:35) 
-- CODE:


i = s = 0

while 1:
	n = input()
	r = len(n)
	i = 0
	for i in n:
		s = int(n[int(i)])**r
	if s == int(n):
		print("ARMSTRONG")
	else:
		print("NAO ARMSTRONG")
	if int(n)>=0:
		break

-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:27:27) 
-- CODE:


i = s = 0

while 1:
	n = input()
	r = len(n)
	i = 0
	for i in range(0,r+1):
		s = int(n[int(i)])**r
	if s == int(n):
		print("ARMSTRONG")
	else:
		print("NAO ARMSTRONG")
	if int(n)>=0:
		break

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    s = int(n[int(i)])**r
IndexError: string index out of range
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:27:45) 
-- CODE:


i = s = 0

while 1:
	n = input()
	r = len(n)
	i = 0
	for i in range(0,r):
		s = int(n[int(i)])**r
	if s == int(n):
		print("ARMSTRONG")
	else:
		print("NAO ARMSTRONG")
	if int(n)>=0:
		break

-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:28:23) 
-- CODE:


i = s = 0

while 1:
	n = input()
	r = len(n)
	i = 0
	for i in range(0,r):
		s += int(n[int(i)])**r
	if s == int(n):
		print("ARMSTRONG")
	else:
		print("NAO ARMSTRONG")
	s = 0
	if int(n)>=0:
		break

-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:28:36) 
-- CODE:


i = s = 0

while 1:
	n = input()
	r = len(n)
	i = 0
	for i in range(0,r):
		s += int(n[int(i)])**r
	if s == int(n):
		print("ARMSTRONG")
	else:
		print("NAO ARMSTRONG")
	s = 0
	if int(n)<=0:
		break

-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:28:42) 
-- CODE:


i = s = 0

while 1:
	n = input()
	r = len(n)
	i = 0
	for i in range(0,r):
		s += int(n[int(i)])**r
	if s == int(n):
		print("ARMSTRONG")
	else:
		print("NAO ARMSTRONG")
	s = 0
	if int(n)<=0:
		break

-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:30:14) 
-- CODE:


i = s = 0

while 1:
	n = input()
	r = len(n)
	i = 0
	if int(n)<=0:
		break
	for i in range(0,r):
		s += int(n[int(i)])**r
	if s == int(n):
		print("ARMSTRONG")
	else:
		print("NAO ARMSTRONG")
	s = 0

-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-09 11:30:31) 
-- CODE:


i = s = 0

while 1:
	n = input()
	r = len(n)
	i = 0
	if int(n)<=0:
		break
	for i in range(0,r):
		s += int(n[int(i)])**r
	if s == int(n):
		print("ARMSTRONG")
	else:
		print("NAO ARMSTRONG")
	s = 0

-- EXECUTION TIME:
0.193495
-- TEST CASE 1:
---- input:
0
1
153
-1
---- correct output:
ARMSTRONG
ARMSTRONG
ARMSTRONG
---- user output:

-- TEST CASE 2:
---- input:
100
101
102
103
-1
---- correct output:
NAO ARMSTRONG
NAO ARMSTRONG
NAO ARMSTRONG
NAO ARMSTRONG
---- user output:
NAO ARMSTRONG
NAO ARMSTRONG
NAO ARMSTRONG
NAO ARMSTRONG
-- TEST CASE 3:
---- input:
1634
1635
8208
8209
-1
---- correct output:
ARMSTRONG
NAO ARMSTRONG
ARMSTRONG
NAO ARMSTRONG
---- user output:
ARMSTRONG
NAO ARMSTRONG
ARMSTRONG
NAO ARMSTRONG
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:30:58) 
-- CODE:


i = s = 0

while 1:
	n = input()
	r = len(n)
	i = 0
	if int(n)<=0:
		break
	for i in range(0,r):
		s += int(n[int(i)])**r
	if s == int(n):
		print("ARMSTRONG")
	else:
		print("NAO ARMSTRONG")
	s = 0

-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:31:21) 
-- CODE:


i = s = 0

while 1:
	n = input()
	r = len(n)
	i = 0
	if int(n)<=0:
		break
	for i in range(0,r):
		s += int(n[int(i)])**r
	if s == int(n):
		print("ARMSTRONG")
	else:
		print("NAO ARMSTRONG")
	s = 0

-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:32:27) 
-- CODE:


i = s = 0

while 1:
	n = input()
	r = len(n)
	i = s = 0
	if int(n)<=0:
		break
	for i in range(0,r):
		s += int(n[int(i)])**r
	if s == int(n):
		print("ARMSTRONG")
	else:
		print("NAO ARMSTRONG")

-- OUTPUT:
ARMSTRONG
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-09 11:32:49) 
-- CODE:


i = s = 0

while 1:
	n = input()
	r = len(n)
	i = s = 0
	if int(n)<0:
		break
	for i in range(0,r):
		s += int(n[int(i)])**r
	if s == int(n):
		print("ARMSTRONG")
	else:
		print("NAO ARMSTRONG")

-- EXECUTION TIME:
0.132628
-- TEST CASE 1:
---- input:
0
1
153
-1
---- correct output:
ARMSTRONG
ARMSTRONG
ARMSTRONG
---- user output:
ARMSTRONG
ARMSTRONG
ARMSTRONG
-- TEST CASE 2:
---- input:
100
101
102
103
-1
---- correct output:
NAO ARMSTRONG
NAO ARMSTRONG
NAO ARMSTRONG
NAO ARMSTRONG
---- user output:
NAO ARMSTRONG
NAO ARMSTRONG
NAO ARMSTRONG
NAO ARMSTRONG
-- TEST CASE 3:
---- input:
1634
1635
8208
8209
-1
---- correct output:
ARMSTRONG
NAO ARMSTRONG
ARMSTRONG
NAO ARMSTRONG
---- user output:
ARMSTRONG
NAO ARMSTRONG
ARMSTRONG
NAO ARMSTRONG
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
