== TEST (2019-03-22 18:49:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
X = input("Dividendo: ")

Y = input("Divisor: ")

dividendo = X

divisor = Y

quociente = X // Y

resto = X % Y

print(dividendo)
print(divisor)
print(quociente)
print(resto)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    quociente = X // Y
TypeError: unsupported operand type(s) for //: 'str' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 18:50:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
X = int(input("Dividendo: "))

Y = int(input("Divisor: "))

dividendo = X

divisor = Y

quociente = X // Y

resto = X % Y

print(dividendo)
print(divisor)
print(quociente)
print(resto)
-- OUTPUT:
8
5
1
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 18:51:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
X = int(input("Dividendo: "))

Y = int(input("Divisor: "))

dividendo = X

divisor = Y

quociente = X // Y

resto = X % Y

print(dividendo)
print(divisor)
print(quociente)
print(resto)
-- EXECUTION TIME:
0.183937
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
8
5
1
3
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
14
2
7
0
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
347
2
173
1
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
