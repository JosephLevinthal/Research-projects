== TEST (2019-04-09 19:21:55) 
-- CODE:
valor = float(input("Valor disponivel: "))
tick_q = int(input("Quantidade de tickets: "))
tick_v = float(input("Valor dos tickets: "))
passe_q = int(input("Quantidade de passes: "))
passe_v = float(input("Valor do passe: "))

if(valor >= (tick_q*tick_v)+(passe_q*passe_v)):
	print("suficiente".upper())
else:
	print("insufuciente".upper())
-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 19:22:28) 
-- CODE:
valor = float(input("Valor disponivel: "))
tick_q = int(input("Quantidade de tickets: "))
tick_v = float(input("Valor dos tickets: "))
passe_q = int(input("Quantidade de passes: "))
passe_v = float(input("Valor do passe: "))

if(valor >= (tick_q*tick_v)+(passe_q*passe_v)):
	print("suficiente".upper())
else:
	print("insufuciente".upper())
-- EXECUTION TIME:
0.165678
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
INSUFUCIENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:23:06) 
-- CODE:
valor = float(input("Valor disponivel: "))
tick_q = int(input("Quantidade de tickets: "))
tick_v = float(input("Valor dos tickets: "))
passe_q = int(input("Quantidade de passes: "))
passe_v = float(input("Valor do passe: "))

if(valor >= (tick_q*tick_v)+(passe_q*passe_v)):
	print("SUFICIENTE")
else:
	print("iNSUFICIENTE")
-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:23:20) 
-- CODE:
valor = int(input("Valor disponivel: "))
tick_q = int(input("Quantidade de tickets: "))
tick_v = float(input("Valor dos tickets: "))
passe_q = int(input("Quantidade de passes: "))
passe_v = float(input("Valor do passe: "))

if(valor >= (tick_q*tick_v)+(passe_q*passe_v)):
	print("SUFICIENTE")
else:
	print("iNSUFICIENTE")
-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 19:23:45) 
-- CODE:
valor = int(input("Valor disponivel: "))
tick_q = int(input("Quantidade de tickets: "))
tick_v = float(input("Valor dos tickets: "))
passe_q = int(input("Quantidade de passes: "))
passe_v = float(input("Valor do passe: "))

if(valor >= (tick_q*tick_v)+(passe_q*passe_v)):
	print("SUFICIENTE")
else:
	print("iNSUFICIENTE")
-- EXECUTION TIME:
0.145166
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
iNSUFICIENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:24:24) 
-- CODE:
valor = int(input("Valor disponivel: "))
tick_q = int(input("Quantidade de tickets: "))
tick_v = float(input("Valor dos tickets: "))
passe_q = int(input("Quantidade de passes: "))
passe_v = float(input("Valor do passe: "))

if(valor >= (tick_q*tick_v)+(passe_q*passe_v)):
	print("SUFICIENTE")
else:
	print("iNSUFICIENTE")
-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 19:24:27) 
-- CODE:
valor = int(input("Valor disponivel: "))
tick_q = int(input("Quantidade de tickets: "))
tick_v = float(input("Valor dos tickets: "))
passe_q = int(input("Quantidade de passes: "))
passe_v = float(input("Valor do passe: "))

if(valor >= (tick_q*tick_v)+(passe_q*passe_v)):
	print("SUFICIENTE")
else:
	print("iNSUFICIENTE")
-- EXECUTION TIME:
0.159351
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
iNSUFICIENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 19:24:57) 
-- CODE:
valor = int(input("Valor disponivel: "))
tick_q = int(input("Quantidade de tickets: "))
tick_v = float(input("Valor dos tickets: "))
passe_q = int(input("Quantidade de passes: "))
passe_v = float(input("Valor do passe: "))

if(valor >= (tick_q*tick_v)+(passe_q*passe_v)):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- EXECUTION TIME:
0.19343
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
INSUFICIENTE
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
