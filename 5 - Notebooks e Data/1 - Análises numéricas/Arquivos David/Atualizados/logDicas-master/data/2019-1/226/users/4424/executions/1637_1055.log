== SUBMITION (2019-04-11 11:28:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v0 = float(input("Digite um numero: "))
a=float(input("Digite um numero: "))
d=float(input("Digite um numero: "))
a=(radians(a))
r=(v0**2*(sin(2*a))/9.8
d=abs(r-c)
if(d<0.1):
	print("sim")
else:
	print("nao")

print()
-- EXECUTION TIME:
0.178106
-- ERROR:
  File "/home/codebench/codes/1637/1055/main.py", line 10
    d=abs(r-c)
    ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 11:29:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v0 = float(input("Digite um numero: "))
a=float(input("Digite um numero: "))
d=float(input("Digite um numero: "))
a=(radians(a))
r=(((v0)**2)*sin(2*a))/9.8
d=abs(r-c)
if(d<0.1):
	print("sim")
else:
	print("nao")

print()
-- EXECUTION TIME:
0.260575
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1637/1055/main.py", line 10, in <module>
    d=abs(r-c)
NameError: name 'c' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 11:29:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v0 = float(input("Digite um numero: "))
a=float(input("Digite um numero: "))
d=float(input("Digite um numero: "))
a=(radians(a))
r=(((v0)**2)*sin(2*a))/9.8
d=abs(r-c)
if(d<0.1):
	print("sim")
else:
	print("nao")

print()
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    d=abs(r-c)
NameError: name 'c' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 11:29:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v0 = float(input("Digite um numero: "))
a=float(input("Digite um numero: "))
d=float(input("Digite um numero: "))
a=(radians(a))
r=(((v0)**2)*sin(2*a))/9.8
d=abs(r-d)
if(d<0.1):
	print("sim")
else:
	print("nao")

print()
-- EXECUTION TIME:
0.279962
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
