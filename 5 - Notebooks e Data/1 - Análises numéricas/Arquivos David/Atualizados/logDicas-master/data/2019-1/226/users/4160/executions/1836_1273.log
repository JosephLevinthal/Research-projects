== TEST (2019-06-25 11:25:31) 
-- CODE:
from numpy import*
from numpy.linalg import*

saida = array([50, -120, 350, 870])
saida = saida.T # transformar linha em coluna - opercaoa matricial

eq = array([          #indices - na frente de x1, x2, x3,x4
	[1,-1,0,0]
	[0,1,-1,0]
	[0,0,1,0]
	[1,0,0,1]])
saida = dot(inv(eq),saida)
print(saida)
	


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 11:25:47) 
-- CODE:
from numpy import*
from numpy.linalg import*

saida = array([50, -120, 350, 870])
saida = saida.T # transformar linha em coluna - opercaoa matricial

eq = array([          #indices - na frente de x1, x2, x3,x4
	[1,-1,0,0],
	[0,1,-1,0],
	[0,0,1,0],
	[1,0,0,1]])
saida = dot(inv(eq),saida)
print(saida)
	


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 11:26:16) 
-- CODE:
from numpy import*
from numpy.linalg import*

saida = array([50, -120, 350, 870])
saida = saida.T # transformar linha em coluna - opercaoa matricial

eq = array([          #indices - na frente de x1, x2, x3,x4
	[1,-1,0,0],
	[0,1,-1,0],
	[0,0,1,0],
	[1,0,0,1]])
saida = dot(inv(eq),saida)
print(saida)
	


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-25 11:26:20) 
-- CODE:
from numpy import*
from numpy.linalg import*

saida = array([50, -120, 350, 870])
saida = saida.T # transformar linha em coluna - opercaoa matricial

eq = array([          #indices - na frente de x1, x2, x3,x4
	[1,-1,0,0],
	[0,1,-1,0],
	[0,0,1,0],
	[1,0,0,1]])
saida = dot(inv(eq),saida)
print(saida)
	


-- EXECUTION TIME:
1.08712
-- TEST CASE 1:
---- input:
Não_há
---- correct output:
[280. 230. 350. 590.]
---- user output:
[280. 230. 350. 590.]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
