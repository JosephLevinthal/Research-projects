== TEST (2019-04-09 11:49:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import radians(x)
from math import sin
g = 9.8
vel = float(input("digite a velocidade inicial v0 (em m/s): "))
ang = float(input("digite o angulo: "))
D = float(input("digite a distancia entre o passaro e o porco: "))
R = ((vel)**2 sin(2 * ang)) / g
if abs(D - R <=0.1)
	print(sim)
else:
	else(nao)
-- ERROR:
File "XXXX", line 4
    from math import radians(x)
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:49:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import radians
from math import sin
g = 9.8
vel = float(input("digite a velocidade inicial v0 (em m/s): "))
ang = float(input("digite o angulo: "))
D = float(input("digite a distancia entre o passaro e o porco: "))
R = ((vel)**2 sin(2 * ang)) / g
if abs(D - R <=0.1)
	print(sim)
else:
	else(nao)
-- ERROR:
File "XXXX", line 10
    R = ((vel)**2 sin(2 * ang)) / g
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:49:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import radians
from math import sin
g = 9.8
vel = float(input("digite a velocidade inicial v0 (em m/s): "))
ang = float(input("digite o angulo: "))
D = float(input("digite a distancia entre o passaro e o porco: "))
R = ((vel)**2 * sin(2 * ang)) / g
if abs(D - R <=0.1)
	print(sim)
else:
	else(nao)
-- ERROR:
File "XXXX", line 11
    if abs(D - R <=0.1)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:49:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import radians
from math import sin
g = 9.8
vel = float(input("digite a velocidade inicial v0 (em m/s): "))
ang = float(input("digite o angulo: "))
D = float(input("digite a distancia entre o passaro e o porco: "))
R = ((vel)**2 * sin(2 * ang)) / g
if abs(D - R <= 0.1)
	print(sim)
else:
	else(nao)
-- ERROR:
File "XXXX", line 11
    if abs(D - R <= 0.1)
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:50:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import radians
from math import sin
g = 9.8
vel = float(input("digite a velocidade inicial v0 (em m/s): "))
ang = float(input("digite o angulo: "))
D = float(input("digite a distancia entre o passaro e o porco: "))
R = ((vel)**2 * sin(2 * ang)) / g
if abs(D - R < 0.1)
	print(sim)
else:
	else(nao)
-- ERROR:
File "XXXX", line 11
    if abs(D - R < 0.1)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:54:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import radians
g = 9.8
vel = float(input("digite a velocidade inicial v0 (em m/s): "))
ang = float(input("digite o angulo: "))
D = float(input("digite a distancia entre o passaro e o porco: "))
ang = radians(ang)
R = ((vel)**2 * sin(2 * ang)) / g
if abs(D - R < 0.1)
	print(sim)
else:
	else(nao)
-- ERROR:
File "XXXX", line 11
    if abs(D - R < 0.1)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:55:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
g = 9.8
vel = float(input("digite a velocidade inicial v0 (em m/s): "))
ang = float(input("digite o angulo: "))
D = float(input("digite a distancia entre o passaro e o porco: "))
ang = radians(ang)
R = ((vel)**2 * sin(2 * ang)) / g
if abs(D - R < 0.1)
	print(sim)
else:
	else(nao)
-- ERROR:
File "XXXX", line 11
    if abs(D - R < 0.1)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:55:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
g = 9.8
vel = float(input("digite a velocidade inicial v0 (em m/s): "))
ang = float(input("digite o angulo: "))
D = float(input("digite a distancia entre o passaro e o porco: "))
ang = radians(ang)
R = ((vel)**2 * sin(2 * ang)) / g
if abs(D - R < 0.1)
	print(sim)
else:
	else(nao)
-- ERROR:
File "XXXX", line 11
    if abs(D - R < 0.1)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:57:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
g = 9.8
vel = float(input("digite a velocidade inicial v0 (em m/s): "))
ang = float(input("digite o angulo: "))
D = float(input("digite a distancia entre o passaro e o porco: "))
ang = radians(ang)
R = ((vel)**2 * sin(2 * ang)) / g
if abs(D - R) < 0.1:
	print(sim)
else:
	print(nao)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    print(sim)
NameError: name 'sim' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:57:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
g = 9.8
vel = float(input("digite a velocidade inicial v0 (em m/s): "))
ang = float(input("digite o angulo: "))
D = float(input("digite a distancia entre o passaro e o porco: "))
ang = radians(ang)
R = ((vel)**2 * sin(2 * ang)) / g
if abs(D - R) < 0.1:
	print(sim)
else:
	print(nao)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    print(sim)
NameError: name 'sim' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:57:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
g = 9.8
vel = float(input("digite a velocidade inicial v0 (em m/s): "))
ang = float(input("digite o angulo: "))
D = float(input("digite a distancia entre o passaro e o porco: "))
ang = radians(ang)
R = ((vel)**2 * sin(2 * ang)) / g
if abs(D - R) < 0.1:
	print(sim)
else:
	print(nao)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    print(sim)
NameError: name 'sim' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:58:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
g = 9.8
vel = float(input("digite a velocidade inicial v0 (em m/s): "))
ang = float(input("digite o angulo: "))
D = float(input("digite a distancia entre o passaro e o porco: "))
ang = radians(ang)
R = ((vel)**2 * sin(2 * ang)) / g
if abs(D - R) < 0.1:
	print("sim")
else:
	print("nao")
-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:58:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
g = 9.8
vel = float(input("digite a velocidade inicial v0 (em m/s): "))
ang = float(input("digite o angulo: "))
D = float(input("digite a distancia entre o passaro e o porco: "))
ang = radians(ang)
R = ((vel)**2 * sin(2 * ang)) / g
if abs(D - R) < 0.1:
	print("sim")
else:
	print("nao")
-- EXECUTION TIME:
0.143251
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
