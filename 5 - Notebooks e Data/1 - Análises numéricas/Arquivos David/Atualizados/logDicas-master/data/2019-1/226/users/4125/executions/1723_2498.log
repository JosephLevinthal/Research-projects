== TEST (2019-05-09 11:27:16) 
-- CODE:
a = int(input("digite o numero de habitantes a: "))
b = int(input("digite o numero de habitantes b: "))
a1 = int(input("digite o percentual de cresc a: "))
b1 = int(input("digite o percentual de cresc b: "))

a1 = a1/100
b1 = b1/100

anos = 0
while(a<b):
	a = a +(a*a1)
	b = b+ (b*b1)
	ano = ano +1
print(ano)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    a1 = int(input())
ValueError: invalid literal for int() with base 10: '35.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:27:41) 
-- CODE:
a = int(input("digite o numero de habitantes a: "))
b = int(input("digite o numero de habitantes b: "))
a1 = int(input("digite o percentual de cresc a: "))
b1 = int(input("digite o percentual de cresc b: "))

a1 = a1/100
b1 = b1/100

anos = 0
while(a<b):
	a = a +(a*a1)
	b = b+ (b*b1)
	anos = anos +1
print(anos)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    a1 = int(input())
ValueError: invalid literal for int() with base 10: '35.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:27:56) 
-- CODE:
a = int(input("digite o numero de habitantes a: "))
b = int(input("digite o numero de habitantes b: "))
a1 = int(input("digite o percentual de cresc a: "))
b1 = int(input("digite o percentual de cresc b: "))

a1 = a1/100
b1 = b1/100

anos = 0
while(a<b):
	a = a +(a*a1)
	b = b+ (b*b1)
	anos = anos +1
print(anos)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    a1 = int(input())
ValueError: invalid literal for int() with base 10: '35.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:28:04) 
-- CODE:
a = int(input("digite o numero de habitantes a: "))
b = int(input("digite o numero de habitantes b: "))
a1 = int(input("digite o percentual de cresc a: "))
b1 = int(input("digite o percentual de cresc b: "))

a1 = a1/100
b1 = b1/100

anos = 0
while(a<b):
	a = a +(a*a1)
	b = b+ (b*b1)
	anos = anos +1
print(anos)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    a1 = int(input())
ValueError: invalid literal for int() with base 10: '35.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-09 11:29:30) 
-- CODE:
a = int(input("digite o numero de habitantes a: "))
b = int(input("digite o numero de habitantes b: "))
a1 = int(input("digite o percentual de cresc a: "))
b1 = int(input("digite o percentual de cresc b: "))

a1 = a1/100
b1 = b1/100

anos = 0
while(a<b):
	a = a +(a*a1)
	b = b+ (b*b1)
	anos = anos +1
print(anos)
	
-- EXECUTION TIME:
0.154937
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1723/2498/main.py", line 3, in <module>
    a1 = int(input())
ValueError: invalid literal for int() with base 10: '35.5'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:30:59) 
-- CODE:
a = int(input("digite o numero de habitantes a: "))
b = int(input("digite o numero de habitantes b: "))
a1 = int(input("digite o percentual de cresc a: "))
b1 = int(input("digite o percentual de cresc b: "))

anos = 0
while(a<b):
	a = a +(a*(a1/100))
	b = b + (b*(b1/100))
	anos = anos + 1
print(anos)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    a1 = int(input())
ValueError: invalid literal for int() with base 10: '35.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:31:09) 
-- CODE:
a = int(input("digite o numero de habitantes a: "))
b = int(input("digite o numero de habitantes b: "))
a1 = int(input("digite o percentual de cresc a: "))
b1 = int(input("digite o percentual de cresc b: "))

anos = 0
while(a<b):
	a = a +(a*(a1/100))
	b = b + (b*(b1/100))
	anos = anos + 1
print(anos)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    a1 = int(input())
ValueError: invalid literal for int() with base 10: '35.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-09 11:31:18) 
-- CODE:
a = int(input("digite o numero de habitantes a: "))
b = int(input("digite o numero de habitantes b: "))
a1 = int(input("digite o percentual de cresc a: "))
b1 = int(input("digite o percentual de cresc b: "))

anos = 0
while(a<b):
	a = a +(a*(a1/100))
	b = b + (b*(b1/100))
	anos = anos + 1
print(anos)
	
-- EXECUTION TIME:
0.226583
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1723/2498/main.py", line 3, in <module>
    a1 = int(input())
ValueError: invalid literal for int() with base 10: '35.5'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:31:41) 
-- CODE:
a = int(input("digite o numero de habitantes a: "))
b = int(input("digite o numero de habitantes b: "))
a1 = float(input("digite o percentual de cresc a: "))
b1 = float(input("digite o percentual de cresc b: "))

anos = 0
while(a<b):
	a = a +(a*(a1/100))
	b = b + (b*(b1/100))
	anos = anos + 1
print(anos)
	
-- OUTPUT:
5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-09 11:31:50) 
-- CODE:
a = int(input("digite o numero de habitantes a: "))
b = int(input("digite o numero de habitantes b: "))
a1 = float(input("digite o percentual de cresc a: "))
b1 = float(input("digite o percentual de cresc b: "))

anos = 0
while(a<b):
	a = a +(a*(a1/100))
	b = b + (b*(b1/100))
	anos = anos + 1
print(anos)
	
-- EXECUTION TIME:
0.131837
-- TEST CASE 1:
---- input:
250150
580000
35.5
10.5
---- correct output:
5
---- user output:
5
-- TEST CASE 2:
---- input:
180250
1200000
10.25
5.7
---- correct output:
45
---- user output:
45
-- TEST CASE 3:
---- input:
1000000
1650000
12.75
3.2
---- correct output:
6
---- user output:
6
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 22:03:22) 
-- CODE:
nA = int(input("numero de habitantes na cidade a: "))
nB = int(input("numero de habitantes na cidade b: "))
pA = float(input("digite o percentual de crescimento na cidade a: "))/100
pB = float(input("digite o percentual de crescimento na cidade b: "))/100

soma1 = 0
soma2 = 0
anos = 0
while(soma1<soma2):
	soma1 = soma1 + (pA*nA)
	soma2 = soma2 + (pB*nB)
	anos = anos + 1
print(anos)
-- OUTPUT:
5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 22:04:24) 
-- CODE:
nA = int(input("numero de habitantes na cidade a: "))
nB = int(input("numero de habitantes na cidade b: "))
pA = float(input("digite o percentual de crescimento na cidade a: "))/100
pB = float(input("digite o percentual de crescimento na cidade b: "))/100

soma1 = 0
soma2 = 0
anos = 0
while(soma1<=soma2):
	soma1 = soma1 + (pA*nA)
	soma2 = soma2 + (pB*nB)
	anos = anos + 1
print(anos)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 22:05:19) 
-- CODE:
nA = int(input("numero de habitantes na cidade a: "))
nB = int(input("numero de habitantes na cidade b: "))
pA = float(input("digite o percentual de crescimento na cidade a: "))/100
pB = float(input("digite o percentual de crescimento na cidade b: "))/100

soma1 = 0
soma2 = 0
anos = 0
while(<=soma2):
	nA = soma1 + (pA*nA)
	nB = soma2 + (pB*nB)
	anos = anos + 1
print(anos)
-- ERROR:
File "XXXX", line 9
    while(<=soma2):
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 22:05:29) 
-- CODE:
nA = int(input("numero de habitantes na cidade a: "))
nB = int(input("numero de habitantes na cidade b: "))
pA = float(input("digite o percentual de crescimento na cidade a: "))/100
pB = float(input("digite o percentual de crescimento na cidade b: "))/100

soma1 = 0
soma2 = 0
anos = 0
while(nA<nB):
	nA = soma1 + (pA*nA)
	nB = soma2 + (pB*nB)
	anos = anos + 1
print(anos)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 22:05:43) 
-- CODE:
nA = int(input("numero de habitantes na cidade a: "))
nB = int(input("numero de habitantes na cidade b: "))
pA = float(input("digite o percentual de crescimento na cidade a: "))/100
pB = float(input("digite o percentual de crescimento na cidade b: "))/100

soma1 = 0
soma2 = 0
anos = 0
while(nA<nB):
	nA = soma1 + (pA*nA)
	nB = soma2 + (pB*nB)
	anos = anos + 1
print(anos)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 22:06:34) 
-- CODE:
nA = int(input("numero de habitantes na cidade a: "))
nB = int(input("numero de habitantes na cidade b: "))
pA = float(input("digite o percentual de crescimento na cidade a: "))/100
pB = float(input("digite o percentual de crescimento na cidade b: "))/100

soma1 = 0
soma2 = 0
anos = 0
while(nA<=nB):
	nA = soma1 + (pA*nA)
	nB = soma2 + (pB*nB)
	anos = anos + 1
print(anos)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 22:06:52) 
-- CODE:
nA = int(input("numero de habitantes na cidade a: "))
nB = int(input("numero de habitantes na cidade b: "))
pA = float(input("digite o percentual de crescimento na cidade a: "))/100
pB = float(input("digite o percentual de crescimento na cidade b: "))/100

soma1 = 0
soma2 = 0
anos = 0
while(nA<=nB):
	nA = soma1 + (pA*nA)
	nB = soma2 + (pB*nB)
	anos = anos + 1
print(anos)
-- EXECUTION TIME:
0.224281
-- TEST CASE 1:
---- input:
250150
580000
35.5
10.5
---- correct output:
5
---- user output:
1
-- TEST CASE 2:
---- input:
180250
1200000
10.25
5.7
---- correct output:
45
---- user output:
4
-- TEST CASE 3:
---- input:
1000000
1650000
12.75
3.2
---- correct output:
6
---- user output:
1
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 22:07:57) 
-- CODE:
nA = int(input("numero de habitantes na cidade a: "))
nB = int(input("numero de habitantes na cidade b: "))
pA = float(input("digite o percentual de crescimento na cidade a: "))/100
pB = float(input("digite o percentual de crescimento na cidade b: "))/100

soma1 = 0
soma2 = 0
anos = 0
while(nA<=nB):
	nA = soma1 + (pA*nA)
	nB = soma2 + (pB*nB)
	anos = anos + 1
print(anos)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 22:10:11) 
-- CODE:
nA = int(input("numero de habitantes na cidade a: "))
nB = int(input("numero de habitantes na cidade b: "))
pA = float(input("digite o percentual de crescimento na cidade a: "))/100
pB = float(input("digite o percentual de crescimento na cidade b: "))/100

soma1 = 0
soma2 = 0
anos = 0
while(nA<nB)and(pA<pB):
	soma = soma1 + (pA*nA)
	soma = soma2 + (pB*nB)
	anos = anos + 1
print(anos)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 22:10:24) 
-- CODE:
nA = int(input("numero de habitantes na cidade a: "))
nB = int(input("numero de habitantes na cidade b: "))
pA = float(input("digite o percentual de crescimento na cidade a: "))/100
pB = float(input("digite o percentual de crescimento na cidade b: "))/100

soma1 = 0
soma2 = 0
anos = 0
while(nA<nB)and(pA<pB):
	soma1 = soma1 + (pA*nA)
	soma2 = soma2 + (pB*nB)
	anos = anos + 1
print(anos)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 22:11:54) 
-- CODE:
nA = int(input("numero de habitantes na cidade a: "))
nB = int(input("numero de habitantes na cidade b: "))
pA = float(input("digite o percentual de crescimento na cidade a: "))/100
pB = float(input("digite o percentual de crescimento na cidade b: "))/100

soma1 = 0
soma2 = 0
anos = 0
while(soma1<soma2)and(pA<pB):
	soma1 = nA + (pA*nA)
	soma2 = soma2 + (pB*nB)
	anos = anos + 1
print(anos)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 22:13:07) 
-- CODE:
nA = int(input("numero de habitantes na cidade a: "))
nB = int(input("numero de habitantes na cidade b: "))
pA = float(input("digite o percentual de crescimento na cidade a: "))/100
pB = float(input("digite o percentual de crescimento na cidade b: "))/100

soma1 = 0
soma2 = 0
anos = 0
while(soma1<soma2)and(pA<pB):
	soma1 = nA + (pA*nA) + nA
	soma2 = soma2 + (nB) + (nB*pB)
	anos = anos + 1
print(anos)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 22:13:37) 
-- CODE:
nA = int(input("numero de habitantes na cidade a: "))
nB = int(input("numero de habitantes na cidade b: "))
pA = float(input("digite o percentual de crescimento na cidade a: "))/100
pB = float(input("digite o percentual de crescimento na cidade b: "))/100

soma1 = 0
soma2 = 0
anos = 0
while(soma1<soma2)and(pA<pB):
	soma1 = soma1 + (pA*nA) + nA
	soma2 = soma2 + (nB) + (nB*pB)
	anos = anos + 1
print(anos)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 22:21:58) 
-- CODE:
nA = int(input("numero de habitantes na cidade a: "))
nB = int(input("numero de habitantes na cidade b: "))
pA = float(input("digite o percentual de crescimento na cidade a: "))/100
pB = float(input("digite o percentual de crescimento na cidade b: "))/100

soma1 = 0
soma2 = 0
anos = 0
while(soma1<soma2)and(pA<pB):
	x = nA*pA
	soma1 = soma1 + x
	y = nB*pB
	soma2 = soma2 + y
	anos = anos + 1
print(anos)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 22:22:06) 
-- CODE:
nA = int(input("numero de habitantes na cidade a: "))
nB = int(input("numero de habitantes na cidade b: "))
pA = float(input("digite o percentual de crescimento na cidade a: "))/100
pB = float(input("digite o percentual de crescimento na cidade b: "))/100

soma1 = 0
soma2 = 0
anos = 0
while(soma1<soma2)and(pA<pB):
	x = nA*pA
	soma1 = soma1 + x
	y = nB*pB
	soma2 = soma2 + y
	anos = anos + 1
print(anos)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 22:22:26) 
-- CODE:
nA = int(input("numero de habitantes na cidade a: "))
nB = int(input("numero de habitantes na cidade b: "))
pA = float(input("digite o percentual de crescimento na cidade a: "))/100
pB = float(input("digite o percentual de crescimento na cidade b: "))/100

soma1 = 0
soma2 = 0
anos = 0
while(soma1<=soma2)and(pA<pB):
	x = nA*pA
	soma1 = soma1 + x
	y = nB*pB
	soma2 = soma2 + y
	anos = anos + 1
print(anos)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 22:22:49) 
-- CODE:
nA = int(input("numero de habitantes na cidade a: "))
nB = int(input("numero de habitantes na cidade b: "))
pA = float(input("digite o percentual de crescimento na cidade a: "))/100
pB = float(input("digite o percentual de crescimento na cidade b: "))/100

soma1 = 0
soma2 = 0
anos = 0
while(soma1<=soma2)and(pA>pB):
	x = nA*pA
	soma1 = soma1 + x
	y = nB*pB
	soma2 = soma2 + y
	anos = anos + 1
print(anos)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 22:23:54) 
-- CODE:
nA = int(input("numero de habitantes na cidade a: "))
nB = int(input("numero de habitantes na cidade b: "))
pA = float(input("digite o percentual de crescimento na cidade a: "))/100
pB = float(input("digite o percentual de crescimento na cidade b: "))/100

soma1 = 0
soma2 = 0
anos = 0
while(nA<=nB)and(pA>pB):
	x = nA*pA
	soma1 = soma1 + x
	y = nB*pB
	soma2 = soma2 + y
	anos = anos + 1
print(anos)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 22:25:15) 
-- CODE:
nA = int(input("numero de habitantes na cidade a: "))
nB = int(input("numero de habitantes na cidade b: "))
pA = float(input("digite o percentual de crescimento na cidade a: "))/100
pB = float(input("digite o percentual de crescimento na cidade b: "))/100

y = 0
x = 0
anos = 0
while(nA<nB):
	x = nA + nA*pA
	y = nB*pB
	anos = anos + 1
print(anos)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 22:26:14) 
-- CODE:
nA = int(input("numero de habitantes na cidade a: "))
nB = int(input("numero de habitantes na cidade b: "))
pA = float(input("digite o percentual de crescimento na cidade a: "))/100
pB = float(input("digite o percentual de crescimento na cidade b: "))/100

anos = 0
while(nA<nB):
	nA = nA + nA*pA
	nB = nB + nB*pB
	anos = anos + 1
print(anos)
-- OUTPUT:
5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 22:26:25) 
-- CODE:
nA = int(input("numero de habitantes na cidade a: "))
nB = int(input("numero de habitantes na cidade b: "))
pA = float(input("digite o percentual de crescimento na cidade a: "))/100
pB = float(input("digite o percentual de crescimento na cidade b: "))/100

anos = 0
while(nA<nB):
	nA = nA + nA*pA
	nB = nB + nB*pB
	anos = anos + 1
print(anos)
-- EXECUTION TIME:
0.136312
-- TEST CASE 1:
---- input:
250150
580000
35.5
10.5
---- correct output:
5
---- user output:
5
-- TEST CASE 2:
---- input:
180250
1200000
10.25
5.7
---- correct output:
45
---- user output:
45
-- TEST CASE 3:
---- input:
1000000
1650000
12.75
3.2
---- correct output:
6
---- user output:
6
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
