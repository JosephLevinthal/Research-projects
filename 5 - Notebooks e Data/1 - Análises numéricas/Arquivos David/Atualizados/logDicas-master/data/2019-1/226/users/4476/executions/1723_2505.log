== TEST (2019-05-13 22:01:16) 
-- CODE:
from math import*
x = eval(input("valor de x: "))
k = int(input("valor de k: "))

soma=0
i=3

while (i<=k):
	soma = soma + x**i/factorial(i)
	i = i + 2
print(round(soma, 10))

-- OUTPUT:
0.7256567238
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 22:02:15) 
-- CODE:
from math import*
x = eval(input("valor de x: "))
k = int(input("valor de k: "))

soma=0
i=0

while (i<=k):
	soma = soma + x**i/factorial(i)
	i = i + 2
print(round(soma, 10))

-- OUTPUT:
2.487370058
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 22:03:40) 
-- CODE:
from math import*
x = eval(input("valor de x: "))
k = int(input("valor de k: "))

soma=0
i=0

while (i<=k):
	soma = soma + x**(i+2)/factorial(i+2)
	i = i + 1
print(round(soma, 10))

-- OUTPUT:
2.2385720167
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 22:06:43) 
-- CODE:
from math import*
x = eval(input("valor de x: "))
k = int(input("valor de k: "))

soma=0
i=0

while (i<k):
	soma = soma + x**(i)/factorial(i)
	i = i + 1
print(round(soma, 10))

-- OUTPUT:
4.7041304823
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 22:06:57) 
-- CODE:
from math import*
x = eval(input("valor de x: "))
k = int(input("valor de k: "))

soma=0
i=0

while (i<k):
	soma = soma + x**(i)/factorial(i)
	i = i + 2
print(round(soma, 10))

-- OUTPUT:
2.487370058
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 22:07:42) 
-- CODE:
from math import*
x = eval(input("valor de x: "))
k = int(input("valor de k: "))

soma=0
i=0

while (i<=(k-1):
	soma = soma + x**(i)/factorial(i)
	i = i + 2
print(round(soma, 10))

-- ERROR:
File "XXXX", line 8
    while (i<=(k-1):
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 22:07:49) 
-- CODE:
from math import*
x = eval(input("valor de x: "))
k = int(input("valor de k: "))

soma=0
i=0

while (i<=(k-1)):
	soma = soma + x**(i)/factorial(i)
	i = i + 2
print(round(soma, 10))

-- OUTPUT:
2.487370058
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 22:09:25) 
-- CODE:
from math import*
x = eval(input("valor de x: "))
k = int(input("valor de k: "))

soma=0
i=0

while (i<=k-1):
	soma = soma + x**(i)/factorial(i)
	i = i + 2
print(round(soma, 10))

-- OUTPUT:
2.487370058
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 22:12:20) 
-- CODE:
from math import*
x = eval(input("valor de x: "))
k = int(input("valor de k: "))

soma=0
i=0

while (i<=k-1):
	soma = soma + x**(i)/factorial(3+i)
	i = i + 2
print(round(soma, 10))

-- OUTPUT:
0.1884362925
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 22:12:36) 
-- CODE:
from math import*
x = eval(input("valor de x: "))
k = int(input("valor de k: "))

soma=0
i=0

while (i<=k-1):
	soma = soma + x**(i)/factorial(3+i)
	i = i + 1
print(round(soma, 10))

-- OUTPUT:
0.2592691736
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 22:14:42) 
-- CODE:
from math import*
x = eval(input("valor de x: "))
k = int(input("valor de k: "))

soma=0
i=3

while (i<=k-1):
	soma = soma + x**(i)/factorial(i)
	i = i + 2
print(round(soma, 10))

-- OUTPUT:
0.6459640975
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 22:15:05) 
-- CODE:
from math import*
x = eval(input("valor de x: "))
k = int(input("valor de k: "))

soma=0
i=0

while (i<=k-1):
	soma = soma + x**(i)/factorial(i)
	i = i + 2
print(round(soma, 10))

-- OUTPUT:
2.487370058
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 22:17:04) 
-- CODE:
from math import*
x = eval(input("valor de x: "))
k = int(input("valor de k: "))

soma=0
i=0

while (i<=k-1):
	soma = soma + x**(3+i)/factorial(3+i)
	i = i + 2
print(round(soma, 10))

-- OUTPUT:
0.7303384779
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 22:19:20) 
-- CODE:
from math import*
x = eval(input("valor de x: "))
k = int(input("valor de k: "))

soma=0
i=0

while (i<=k-1):
	soma = soma + x**(i)/factorial(2*i+1)
	i = i + 2
print(round(soma, 10))

-- OUTPUT:
1.0205784529
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 22:21:58) 
-- CODE:
from math import*
x = eval(input("valor de x: "))
k = int(input("valor de k: "))

soma=0
i=0

while (i<=k-1):
	soma = soma + (-1)**i * (x**(2*i+1))/factorial(2*i+1)
	i = i + 2
print(round(soma, 10))

-- OUTPUT:
1.6506493942
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 22:22:35) 
-- CODE:
from math import*
x = eval(input("valor de x: "))
k = int(input("valor de k: "))

soma=0
i=0

while (i<=k-1):
	soma = soma + (-1)**i * (x**(2*i+1))/factorial(2*i+1)
	i = i + 1
print(round(soma, 10))

-- OUTPUT:
1.0000035426
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 22:22:50) 
-- CODE:
from math import*
x = eval(input("valor de x: "))
k = int(input("valor de k: "))

soma=0
i=0

while (i<=k-1):
	soma = soma + (-1)**i * (x**(2*i+1))/factorial(2*i+1)
	i = i + 1
print(round(soma, 10))

-- OUTPUT:
1.0000035426
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 22:24:10) 
-- CODE:
from math import*
x = eval(input("valor de x: "))
k = int(input("valor de k: "))

soma=0
i=0

while (i<=k-1):
	soma = soma + (-1)**i * (x**(2*i+1))/factorial(2*i+1)
	i = i + 1
print(round(soma, 10))

-- OUTPUT:
1.0000035426
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 22:24:23) 
-- CODE:
from math import*
x = eval(input("valor de x: "))
k = int(input("valor de k: "))

soma=0
i=0

while (i<=k-1):
	soma = soma + (-1)**i * (x**(2*i+1))/factorial(2*i+1)
	i = i + 1
print(round(soma, 10))

-- OUTPUT:
1.0000035426
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 22:24:36) 
-- CODE:
from math import*
x = eval(input("valor de x: "))
k = int(input("valor de k: "))

soma=0
i=0

while (i<=k-1):
	soma = soma + (-1)**i * (x**(2*i+1))/factorial(2*i+1)
	i = i + 1
print(round(soma, 10))

-- EXECUTION TIME:
0.11386
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
1.0000035426
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-0.9998431014
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.8662952838
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
