== TEST (2019-04-25 19:38:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a > x and x > b or b > x and x > a):
	print (x, "pertence ao intervalo ", a ,"," b)
	
-- ERROR:
File "XXXX", line 9
    print (x, "pertence ao intervalo ", a ,"," b)
                                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:39:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a > x and x > b or b > x and x > a):
	print (x, "pertence ao intervalo ", a "," b)
	
-- ERROR:
File "XXXX", line 9
    print (x, "pertence ao intervalo ", a "," b)
                                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:39:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a > x and x > b or b > x and x > a):
	print (x, "pertence ao intervalo ", a ,",", b)
	
-- ERROR:
File "XXXX", line 9
    print (x, "pertence ao intervalo ", a "," b)
                                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:42:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a > x and x > b or b > x and x > a):
	print (x, "pertence ao intervalo ", a ,",", b)
elif (b<=a):
	print ("Entrada", a ,",",b "invalidas")
else: 
	print (x,"nao pertence ao intervalo", a ,",", b)
	
-- ERROR:
File "XXXX", line 11
    print ("Entrada", a ,",",b "invalidas")
                                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:42:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a > x and x > b or b > x and x > a):
	print (x, "pertence ao intervalo ", a ,",", b)
elif (b<=a):
	print ("Entrada", a ,",",b ,"invalidas")
else: 
	print (x,"nao pertence ao intervalo", a ,",", b)
	
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 19:42:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a > x and x > b or b > x and x > a):
	print (x, "pertence ao intervalo ", a ,",", b)
elif (b<=a):
	print ("Entrada", a ,",",b ,"invalidas")
else: 
	print (x,"nao pertence ao intervalo", a ,",", b)
	
-- EXECUTION TIME:
0.143656
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 pertence ao intervalo  6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo  1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:42:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a > x and x > b or b > x and x > a):
	print (x, "pertence ao intervalo ", a ,",", b)
elif (b<=a):
	print ("Entrada", a ,",",b ,"invalidas")
else: 
	print (x,"nao pertence ao intervalo", a ,",", b)
	
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:44:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a > x and x > b or b > x and x > a):
	print (x, "pertence ao intervalo ", a ,",", b)
elif (b<=a):
	print ("Entrada", a ,",",b ,"invalidas")
else: 
	print (x,"nao pertence ao intervalo", a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:44:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a > x and x > b or b > x and x > a):
	print (x, "pertence ao intervalo ", a ,",", b)
elif (b<=a):
	print ("Entrada", a ,",",b ,"invalidas")
else: 
	print (x,"nao pertence ao intervalo", a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:45:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a > x and x > b or b > x and x > a):
	print (x, "pertence ao intervalo ", a ,",", b)
elif (b<=a):
	print ("Entrada", a ,",",b ,"invalidas")
else: 
	print (x,"nao pertence ao intervalo", a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 21:01:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a > x and x > b or b > x and x > a):
	print (x, "pertence ao intervalo ", a ,",", b)
elif (b<=a):
	print ("Entrada", a ,",",b ,"invalidas")
else: 
	print (x,"nao pertence ao intervalo", a ,",", b)

-- EXECUTION TIME:
0.193565
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 pertence ao intervalo  6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo  1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:01:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a > x and x > b or b > x and x > a):
	print (x, "pertence ao intervalo ", a ,",", b)
elif (b<=a):
	print ("Entrada", a ,",",b ,"invalidas")
else: 
	print (x,"nao pertence ao intervalo", a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:01:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a >= x and x >= b or b >= x and x >= a):
	print (x, "pertence ao intervalo ", a ,",", b)
elif (b<=a):
	print ("Entrada", a ,",",b ,"invalidas")
else: 
	print (x,"nao pertence ao intervalo", a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 21:02:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a >= x and x >= b or b >= x and x >= a):
	print (x, "pertence ao intervalo ", a ,",", b)
elif (b<=a):
	print ("Entrada", a ,",",b ,"invalidas")
else: 
	print (x,"nao pertence ao intervalo", a ,",", b)

-- EXECUTION TIME:
0.127816
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 pertence ao intervalo  6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo  1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:02:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a >= x and x >= b or b >= x and x >= a):
	print (x, "pertence ao intervalo ", a ,",", b)
elif (b<=a):
	print ("Entrada", a ,",",b ,"invalidas")
else: 
	print (x,"nao pertence ao intervalo", a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:03:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a >= x and x >= b or b >= x and x >= a):
	print (x, "pertence ao intervalo ", a ,",", b)
elif (b<=a):
	print ("Entrada", a ,",",b ,"invalidas")
else: 
	print (x,"nao pertence ao intervalo", a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:04:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a >= x and x >= b or b >= x and x >= a):
	print (x, "pertence ao intervalo", a ,",", b)
elif (b<=a):
	print ("Entrada", a ,",",b ,"invalidas")
else: 
	print (x,"nao pertence ao intervalo", a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:04:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a >= x and x >= b or b >= x and x >= a):
	print (x, "pertence ao intervalo", a ,",", b)
elif (b<=a):
	print ("Entrada", a ,",",b ,"invalidas")
else: 
	print (x,"nao pertence ao intervalo", a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:04:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a >= x and x >= b or b >= x and x >= a):
	print (x, "pertence ao intervalo", a ,",", b)
elif (b<=a):
	print ("Entrada", a ,",",b ,"invalidas")
else: 
	print (x,"nao pertence ao intervalo", a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 21:05:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a >= x and x >= b or b >= x and x >= a):
	print (x, "pertence ao intervalo", a ,",", b)
elif (b<=a):
	print ("Entrada", a ,",",b ,"invalidas")
else: 
	print (x,"nao pertence ao intervalo", a ,",", b)

-- EXECUTION TIME:
0.130027
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:05:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a >= x and x >= b or b >= x and x >= a):
	print (x, "pertence ao intervalo", a ,",", b)
elif (b<=a):
	print ("Entrada", a ,",",b ,"invalidas")
else: 
	print (x,"nao pertence ao intervalo", a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:05:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a >= x or x >= b or b >= x or x >= a):
	print (x, "pertence ao intervalo", a ,",", b)
elif (b<=a):
	print ("Entrada", a ,",",b ,"invalidas")
else: 
	print (x,"nao pertence ao intervalo", a ,",", b)

-- OUTPUT:
2.0 pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 21:06:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a >= x or x >= b or b >= x or x >= a):
	print (x, "pertence ao intervalo", a ,",", b)
elif (b<=a):
	print ("Entrada", a ,",",b ,"invalidas")
else: 
	print (x,"nao pertence ao intervalo", a ,",", b)

-- EXECUTION TIME:
0.189457
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:06:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a >= x or x >= b and b >= x or x >= a):
	print (x, "pertence ao intervalo", a ,",", b)
elif (b<=a):
	print ("Entrada", a ,",",b ,"invalidas")
else: 
	print (x,"nao pertence ao intervalo", a ,",", b)

-- OUTPUT:
2.0 pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 21:06:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a >= x or x >= b and b >= x or x >= a):
	print (x, "pertence ao intervalo", a ,",", b)
elif (b<=a):
	print ("Entrada", a ,",",b ,"invalidas")
else: 
	print (x,"nao pertence ao intervalo", a ,",", b)

-- EXECUTION TIME:
0.138607
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:06:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a >= x or x >= b and b >= x or x >= a):
	print (x, "pertence ao intervalo", a ,",", b)
elif (b<=a):
	print ("Entrada", a ,",",b ,"invalidas")
else: 
	print (x,"nao pertence ao intervalo", a ,",", b)

-- OUTPUT:
2.0 pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:06:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a >= x and x >= b or b >= x and x >= a):
	print (x, "pertence ao intervalo", a ,",", b)
elif (b<=a):
	print ("Entrada", a ,",",b ,"invalidas")
else: 
	print (x,"nao pertence ao intervalo", a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:07:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a >= x and x >= b or b >= x and x >= a):
	print (x, "pertence ao intervalo", a ,",", b)
elif (b<=a):
	print ("Entrada", a ,",",b ,"invalidas")
else: 
	print (x,"nao pertence ao intervalo", a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:07:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a >= x and x >= b or b >= x and x >= a):
	print (x, "pertence ao intervalo", a ,"e", b)
elif (b<=a):
	print ("Entrada", a ,",",b ,"invalidas")
else: 
	print (x,"nao pertence ao intervalo", a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:07:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a >= x and x >= b or b >= x and x >= a):
	print (x, "pertence ao intervalo", a ,"e", b)
elif (b<=a):
	print ("Entrada", a ,",",b ,"invalidas")
else: 
	print (x,"nao pertence ao intervalo", a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:08:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a >= x and x >= b or b >= x and x >= a):
	print (x, "pertence ao intervalo", a ,",", b)
elif (b<=a):
	print ("Entrada", a ,"e",b ,"invalidas")
else: 
	print (x,"nao pertence ao intervalo", a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 21:08:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a >= x and x >= b or b >= x and x >= a):
	print (x, "pertence ao intervalo", a ,",", b)
elif (b<=a):
	print ("Entrada", a ,"e",b ,"invalidas")
else: 
	print (x,"nao pertence ao intervalo", a ,",", b)

-- EXECUTION TIME:
0.190112
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:09:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a >= x and x >= b or b >= x and x >= a):
	print (x, "pertence ao intervalo", a ,",", b)
elif (b<=a):
	print ("Entrada", a ,"e",b ,"invalidas")
else: 
	print (x,"nao pertence ao intervalo", a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:10:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a >= x and x >= b or b >= x and x >= a):
	print (x, "pertence ao intervalo", a ,",", b)
elif (b<=a):
	print ("Entrada", a ,"e",b ,"invalidas")
else: 
	print (x,"nao pertence ao intervalo", a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:11:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a >= x and x >= b or b >= x and x >= a):
	print (x, "pertence ao intervalo", a ,",", b)
elif (b<=a):
	print ("Entrada", a ,"e",b ,"invalidas")
else: 
	print (x,"nao pertence ao intervalo", a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 21:11:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a >= x and x >= b or b >= x and x >= a):
	print (x, "pertence ao intervalo", a ,",", b)
elif (b<=a):
	print ("Entrada", a ,"e",b ,"invalidas")
else: 
	print (x,"nao pertence ao intervalo", a ,",", b)

-- EXECUTION TIME:
0.182457
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:12:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x and x <= b or b <= x and x <= a):
	print (x, "pertence ao intervalo", a ,",", b)
elif (b<=a):
	print ("Entrada", a ,"e",b ,"invalidas")
else: 
	print (x,"nao pertence ao intervalo", a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 21:12:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x and x <= b or b <= x and x <= a):
	print (x, "pertence ao intervalo", a ,",", b)
elif (b<=a):
	print ("Entrada", a ,"e",b ,"invalidas")
else: 
	print (x,"nao pertence ao intervalo", a ,",", b)

-- EXECUTION TIME:
0.134458
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:12:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x and x <= b or b <= x and x <= a):
	print (x, "pertence ao intervalo", a ,",", b)
elif (b <= a):
	print ("Entrada", a ,"e",b ,"invalidas")
else: 
	print (x,"nao pertence ao intervalo", a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:13:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x and x <= b or b <= x and x <= a):
	print (x, "pertence ao intervalo", a ,",", b)
elif (b <= a):
	print ("Entrada", a ,"e", b ,"invalidas")
else: 
	print (x,"nao pertence ao intervalo", a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:14:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x and x <= b or b <= x and x <= a):
	print (x,"pertence ao intervalo", a ,",", b)
elif (b <= a):
	print ("Entrada", a ,"e", b ,"invalidas")
else: 
	print (x,"nao pertence ao intervalo", a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:14:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x and x <= b or b <= x and x <= a):
	print (x,"pertence ao intervalo", a ,",", b)
elif (b <= a):
	print ("Entrada", a ,"e", b ,"invalidas")
else: 
	print (x,"nao pertence ao intervalo", a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 21:15:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x and x <= b or b <= x and x <= a):
	print (x,"pertence ao intervalo", a ,",", b)
elif (b <= a):
	print ("Entrada", a ,"e", b ,"invalidas")
else: 
	print (x,"nao pertence ao intervalo", a ,",", b)

-- EXECUTION TIME:
0.209592
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:15:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x and x <= b or b <= x and x <= a):
	print (x,"pertence ao intervalo", a ,",", b)
elif (b <= a):
	print ("Entrada", a ,"e", b ,"invalidas")
else: 
	print (x,"nao pertence ao intervalo", a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 21:15:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x and x <= b or b <= x and x <= a):
	print (x,"pertence ao intervalo", a ,",", b)
elif (b <= a):
	print ("Entradas", a ,"e", b ,"invalidas")
else: 
	print (x,"nao pertence ao intervalo", a ,",", b)

-- EXECUTION TIME:
0.25926
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:15:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x and x <= b or b <= x and x <= a):
	print (x,"pertence ao intervalo", a ,",", b)
elif (b <= a):
	print ("Entradas", a ,"e", b ,"invalidas")
else: 
	print (x,"nao pertence ao intervalo", a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 21:15:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x and x <= b or b <= x and x <= a):
	print (x,"pertence ao intervalo", a ,",", b)
elif (b <= a):
	print ("Entradas", a ,"e", b ,"invalidas")
else: 
	print (x,"nao pertence ao intervalo", a ,",", b)

-- EXECUTION TIME:
0.199091
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:16:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x and x <= b or b <= x and x <= a):
	print (x,"pertence ao intervalo", a ,",", b)
elif (b <= a):
	print ("Entradas", a ,"e", b ,"invalidas")
elif (a >= x and x >= b or b >= x and x >= a):
	print (x,"nao pertence ao intervalo", a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 21:17:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x and x <= b or b <= x and x <= a):
	print (x,"pertence ao intervalo", a ,",", b)
elif (b <= a):
	print ("Entradas", a ,"e", b ,"invalidas")
elif (a >= x and x >= b or b >= x and x >= a):
	print (x,"nao pertence ao intervalo", a ,",", b)

-- EXECUTION TIME:
0.194616
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:

-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:17:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x and x <= b or b <= x and x <= a):
	print (x,"pertence ao intervalo", a ,",", b)
elif (b <= a):
	print ("Entradas", a ,"e", b ,"invalidas")
else:
	print (x,"nao pertence ao intervalo", a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 21:17:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x and x <= b or b <= x and x <= a):
	print (x,"pertence ao intervalo", a ,",", b)
elif (b <= a):
	print ("Entradas", a ,"e", b ,"invalidas")
else:
	print (x,"nao pertence ao intervalo", a ,",", b)

-- EXECUTION TIME:
0.1299
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:18:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x and x <= b or b <= x and x <= a):
	print (x,"pertence ao intervalo", a ,",", b)
elif (b <= a):
	print ("Entradas", a ,"e", b ,"invalidas")
else:
	print (x,"nao pertence ao intervalo", a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:19:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a < x and x < b or b < x and x < a):
	print (x,"pertence ao intervalo", a ,",", b)
elif (b <= a):
	print ("Entradas", a ,"e", b ,"invalidas")
else:
	print (x,"nao pertence ao intervalo", a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 21:19:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a < x and x < b or b < x and x < a):
	print (x,"pertence ao intervalo", a ,",", b)
elif (b <= a):
	print ("Entradas", a ,"e", b ,"invalidas")
else:
	print (x,"nao pertence ao intervalo", a ,",", b)

-- EXECUTION TIME:
0.146526
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:46:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x and x < b or b < x and x < a):
	print (x,"pertence ao intervalo", a ,",", b)
elif (b <= a):
	print ("Entradas", a ,"e", b ,"invalidas")
else:
	print (x,"nao pertence ao intervalo", a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:46:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x and x <= b or b <= x and x <= a):
	print (x,"pertence ao intervalo", a ,",", b)
elif (b <= a):
	print ("Entradas", a ,"e", b ,"invalidas")
else:
	print (x,"nao pertence ao intervalo", a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:46:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x and x <= b or b <= x and x <= a):
	print (x,"pertence ao intervalo", a ,",", b)
elif (b <= a):
	print ("Entradas", a ,"e", b ,"invalidas")
else:
	print (x,"nao pertence ao intervalo", a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:47:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x and x <= b or b <= x and x <= a):
	print (x,"pertence ao intervalo", a ,",", b)
elif (b <= a):
	print ("Entradas", a ,"e", b ,"invalidas")
else:
	print (x,"nao pertence ao intervalo", a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:47:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x and x <= b or b <= x and x <= a):
	print (x,"pertence ao intervalo", a ,",", b)
elif (b <= a):
	print ("Entradas", a ,"e", b ,"invalidas")
else:
	print (x,"nao pertence ao intervalo", a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:47:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x and x <= b or b <= x and x <= a):
	print (x,"pertence ao intervalo", a ,",", b)
elif (b <= a):
	print ("Entradas", a ,"e", b ,"invalidas")
else:
	print (x,"nao pertence ao intervalo", a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:47:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x and x <= b or b <= x and x <= a):
	print (x,"pertence ao intervalo", a ,",", b)
elif (b <= a):
	print ("Entradas", a ,"e", b ,"invalidas")
else:
	print (x,"nao pertence ao intervalo", a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:51:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a < x and x < b or b < x and x < a):
	print (x,"pertence ao intervalo", a ,",", b)
elif (b <= a):
	print ("Entradas", a ,"e", b ,"invalidas")
else:
	print (x,"nao pertence ao intervalo", a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 21:51:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a < x and x < b or b < x and x < a):
	print (x,"pertence ao intervalo", a ,",", b)
elif (b <= a):
	print ("Entradas", a ,"e", b ,"invalidas")
else:
	print (x,"nao pertence ao intervalo", a ,",", b)

-- EXECUTION TIME:
0.141485
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 17:29:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a < x and x < b or b < x and x < a):
	print (x,"pertence ao intervalo", a ,",", b)
elif (b <= a):
	print ("Entradas", a ,"e", b ,"invalidas")
else:
	print (x,"nao pertence ao intervalo", a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 17:29:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a < x and x < b or b < x and x < a):
	print (x,"pertence ao intervalo", a ,",", b)
elif (b <= a):
	print ("Entradas", a ,"e", b ,"invalidas")
else:
	print (x,"nao pertence ao intervalo", a ,",", b)

-- EXECUTION TIME:
0.207613
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:22:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x and x <= b or b <= x and x <= a):
	print (x,"pertence ao intervalo", a ,",", b)
elif (b <= a):
	print ("Entradas", a ,"e", b ,"invalidas")
else:
	print (x,"nao pertence ao intervalo", a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:23:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x and x <= b or b <= x and x <= a):
	print (x,"pertence ao intervalo", a ,",", b)
elif (b <= a):
	print ("Entradas", a ,"e", b ,"invalidas")
else:
	print (x,"nao pertence ao intervalo", a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:23:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x and x <= b or b <= x and x <= a):
	print (x,"pertence ao intervalo", a ,",", b)
elif (b <= a):
	print ("Entradas", a ,"e", b ,"invalidas")
else:
	print (x,"nao pertence ao intervalo", a ,",", b)

-- EXECUTION TIME:
0.21899
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:38:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x <=b):
	if (x < a and x < b):
		print (x , "pertence ao intervalo", a "," ,b)
	elif (b <= a):
		print(x ,"nao pertence ao intervalo", a "," ,b)
else:
	print ("Entradas", a ",",b "invalidas")
-- ERROR:
File "XXXX", line 10
    print (x , "pertence ao intervalo", a "," ,b)
                                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:38:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x <=b):
	if (x < a and x < b):
		print (x , "pertence ao intervalo", a ",",b)
	elif (b <= a):
		print(x ,"nao pertence ao intervalo", a "," ,b)
else:
	print ("Entradas", a ",",b "invalidas")
-- ERROR:
File "XXXX", line 10
    print (x , "pertence ao intervalo", a ",",b)
                                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:39:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x <=b):
	if (x < a and x < b):
		print (x, "pertence ao intervalo", a ",",b)
	elif (b <= a):
		print(x ,"nao pertence ao intervalo", a "," ,b)
else:
	print ("Entradas", a ",",b "invalidas")
-- ERROR:
File "XXXX", line 10
    print (x, "pertence ao intervalo", a ",",b)
                                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:39:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x <=b):
	if (x < a and x < b):
		print (x, "pertence ao intervalo", a ,",",b)
	elif (b <= a):
		print(x ,"nao pertence ao intervalo", a "," ,b)
else:
	print ("Entradas", a ",",b "invalidas")
-- ERROR:
File "XXXX", line 12
    print(x ,"nao pertence ao intervalo", a "," ,b)
                                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:39:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x <=b):
	if (x < a and x < b):
		print (x, "pertence ao intervalo", a ,",",b)
	elif (b <= a):
		print(x ,"nao pertence ao intervalo", a , "," ,b)
else:
	print ("Entradas", a ,",",b "invalidas")
-- ERROR:
File "XXXX", line 14
    print ("Entradas", a ,",",b "invalidas")
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:39:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x <=b):
	if (x < a and x < b):
		print (x, "pertence ao intervalo", a ,",",b)
	elif (b <= a):
		print(x ,"nao pertence ao intervalo", a , "," ,b)
else:
	print ("Entradas", a ,",",b "invalidas")
-- ERROR:
File "XXXX", line 14
    print ("Entradas", a ,",",b "invalidas")
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:40:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x <=b):
	if (x < a and x < b):
		print (x, "pertence ao intervalo", a ,",",b)
	elif (b <= a):
		print(x ,"nao pertence ao intervalo", a , "," ,b)
else:
	print ("Entradas", a ,",",b ,"invalidas")
-- OUTPUT:
Entradas 3.0 , 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:40:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x <=b):
	if (x < a and x < b):
		print (x, "pertence ao intervalo", a ,",",b)
	elif (b <= a):
		print(x ,"nao pertence ao intervalo", a , "," ,b)
else:
	print ("Entradas", a ,",",b ,"invalidas")
-- OUTPUT:
Entradas 3.0 , 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:40:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x <=b):
	if (x < a and x < b):
		print (x, "pertence ao intervalo", a ,",",b)
	elif (b <= a):
		print(x ,"nao pertence ao intervalo", a , "," ,b)
else:
	print ("Entradas", a ,",",b ,"invalidas")
-- EXECUTION TIME:
0.160191
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
Entradas 3.0 , 4.0 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 , 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:40:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x <=b):
	if (x < a and x < b):
		print (x, "pertence ao intervalo", a ,",",b)
	elif (b <= a):
		print(x ,"nao pertence ao intervalo", a , "," ,b)
else:
	print ("Entradas", a ,",",b ,"invalidas")
-- OUTPUT:
Entradas 3.0 , 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:41:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x <=b):
	if (x < a and x < b):
		print (x, "pertence ao intervalo", a ,",",b)
	elif (b <= a):
		print(x ,"nao pertence ao intervalo", a , "," ,b)
else:
	print ("Entradas", a ,",",b ,"invalidas")
-- OUTPUT:
Entradas 3.0 , 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:41:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x <=b):
	if (x < a and x < b):
		print (x, "pertence ao intervalo", a ,",",b)
	elif (b <= a):
		print(x ,"nao pertence ao intervalo", a , "," ,b)
else:
	print ("Entradas", a ,",",b ,"invalidas")
-- OUTPUT:
Entradas 3.0 , 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:41:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x <=b):
	if (x < a or x < b):
		print (x, "pertence ao intervalo", a ,",",b)
	elif (b <= a):
		print(x ,"nao pertence ao intervalo", a , "," ,b)
else:
	print ("Entradas", a ,",",b ,"invalidas")
-- OUTPUT:
Entradas 3.0 , 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:41:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x <=b):
	if (x < a or x < b):
		print (x, "pertence ao intervalo", a ,",",b)
	elif (b <= a):
		print(x ,"nao pertence ao intervalo", a , "," ,b)
else:
	print ("Entradas", a ,",",b ,"invalidas")
-- OUTPUT:
Entradas 3.0 , 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:41:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x <=b):
	if (x < a or x < b):
		print (x, "pertence ao intervalo", a ,",",b)
	elif (b <= a):
		print(x ,"nao pertence ao intervalo", a , "," ,b)
else:
	print ("Entradas", a ,",",b ,"invalidas")
-- EXECUTION TIME:
0.181863
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
Entradas 3.0 , 4.0 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 , 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:41:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x <=b):
	if (x < a or x < b):
		print (x, "pertence ao intervalo", a ,",",b)
	elif (b <= a):
		print(x ,"nao pertence ao intervalo", a , "," ,b)
else:
	print ("Entradas", a ,",",b ,"invalidas")
-- OUTPUT:
Entradas 3.0 , 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:43:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x <=b):
	if (x < a or x < b):
		print (x, "pertence ao intervalo", a ,",",b)
	elif (b <= a):
		print(x ,"nao pertence ao intervalo", a , "," ,b)
else:
	print ("Entradas", a ,",",b ,"invalidas")
-- OUTPUT:
Entradas 3.0 , 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:43:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x <=b):
	if (x < a or x < b):
		print (x, "pertence ao intervalo", a ,",",b)
	elif (b <= a):
		print(x ,"nao pertence ao intervalo", a , "," ,b)
else:
	print ("Entradas", a ,",",b ,"invalidas")
-- OUTPUT:
Entradas 3.0 , 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:43:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x <=b):
	if (x < a or x < b):
		print (x, "pertence ao intervalo", a ,",",b)
	elif (b < a):
		print(x ,"nao pertence ao intervalo", a , "," ,b)
else:
	print ("Entradas", a ,",",b ,"invalidas")
-- OUTPUT:
Entradas 3.0 , 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:43:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x <=b):
	if (x < a or x < b):
		print (x, "pertence ao intervalo", a ,",",b)
	elif (b == a):
		print(x ,"nao pertence ao intervalo", a , "," ,b)
else:
	print ("Entradas", a ,",",b ,"invalidas")
-- OUTPUT:
Entradas 3.0 , 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:44:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x <=b):
	if (x < a or x < b):
		print (x, "pertence ao intervalo", a ,",",b)
	elif (b == a):
		print(x ,"nao pertence ao intervalo", a , "," ,b)
else:
	print ("Entradas", a ,",",b ,"invalidas")
-- OUTPUT:
Entradas 3.0 , 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:44:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (a <= x <=b):
	if (x < a or x < b):
		print (x, "pertence ao intervalo", a ,",",b)
	elif (b == a):
		print(x ,"nao pertence ao intervalo", a , "," ,b)
else:
	print ("Entradas", a ,",",b ,"invalidas")
-- OUTPUT:
Entradas 3.0 , 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:45:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (b > a):
	if (x >= a or x <= b):
		print (x, "pertence ao intervalo", a ,",",b)
	elif (b == a):
		print(x ,"nao pertence ao intervalo", a , "," ,b)
else:
	print ("Entradas", a ,",",b ,"invalidas")
-- OUTPUT:
2.0 pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:45:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (b > a):
	if (x >= a or x <= b):
		print (x, "pertence ao intervalo", a ,",",b)
	elif (b == a):
		print(x ,"nao pertence ao intervalo", a , "," ,b)
else:
	print ("Entradas", a ,",",b ,"invalidas")
-- OUTPUT:
2.0 pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:45:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (b > a):
	if (x >= a or x <= b):
		print (x, "pertence ao intervalo", a ,",",b)
	elif (b == a):
		print(x ,"nao pertence ao intervalo", a , "," ,b)
else:
	print ("Entradas", a ,",",b ,"invalidas")
-- EXECUTION TIME:
0.151708
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 , 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:45:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (b > a):
	if (x >= a or x <= b):
		print (x, "pertence ao intervalo", a ,",",b)
	elif (b <= a):
		print(x ,"nao pertence ao intervalo", a , "," ,b)
else:
	print ("Entradas", a ,",",b ,"invalidas")
-- OUTPUT:
2.0 pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:45:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (b > a):
	if (x >= a or x <= b):
		print (x, "pertence ao intervalo", a ,",",b)
	elif (b <= a):
		print(x ,"nao pertence ao intervalo", a , "," ,b)
else:
	print ("Entradas", a ,",",b ,"invalidas")
-- EXECUTION TIME:
0.205739
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 , 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:46:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (b > a):
	if (x >= a and x <= b):
		print (x, "pertence ao intervalo", a ,",",b)
	elif (b <= a):
		print(x ,"nao pertence ao intervalo", a , "," ,b)
else:
	print ("Entradas", a ,",",b ,"invalidas")
-- OUTPUT:
2.0 pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:47:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (b > a):
	if (x >= a and x <= b):
		print (x, "pertence ao intervalo", a ,",",b)
	else:
		print(x ,"nao pertence ao intervalo", a , "," ,b)
else:
	print ("Entradas", a ,",",b ,"invalidas")
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:47:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (b > a):
	if (x >= a and x <= b):
		print (x, "pertence ao intervalo", a ,",",b)
	else:
		print(x ,"nao pertence ao intervalo", a , "," ,b)
else:
	print ("Entradas", a ,",",b ,"invalidas")
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:47:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (b > a):
	if (x >= a and x <= b):
		print (x, "pertence ao intervalo", a ,",",b)
	else:
		print(x ,"nao pertence ao intervalo", a , "," ,b)
else:
	print ("Entradas", a ,",",b ,"invalidas")
-- EXECUTION TIME:
0.142126
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 , 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:47:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (b > a):
	if (x >= a) and (x <= b):
		print (x, "pertence ao intervalo", a ,",",b)
	else:
		print(x ,"nao pertence ao intervalo", a , "," ,b)
else:
	print ("Entradas", a ,",",b ,"invalidas")
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:47:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (b > a):
	if (x >= a) and (x <= b):
		print (x, "pertence ao intervalo", a ,",",b)
	else:
		print(x ,"nao pertence ao intervalo", a , "," ,b)
else:
	print ("Entradas", a ,",",b ,"invalidas")
-- EXECUTION TIME:
0.187529
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 , 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:48:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (b > a):
	if (x >= a) and (x <= b):
		print (x, "pertence ao intervalo", a ,",",b)
	else:
		print(x ,"nao pertence ao intervalo", a , "," ,b)
else:
	print ("Entradas", a ,",",b ,"invalidas")
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:48:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (b > a):
	if (x >= a) and (x <= b):
		print (x, "pertence ao intervalo", a ,",",b)
	else:
		print(x ,"nao pertence ao intervalo", a , "," ,b)
else:
	print ("Entradas", a ,",",b ,"invalidas")
-- EXECUTION TIME:
0.304963
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 , 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:48:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (b > a):
	if (x >= a) and (x <= b):
		print (x, "pertence ao intervalo", a ,",",b)
	else:
		print(x ,"nao pertence ao intervalo", a , "," ,b)
else:
	print ("Entradas", a ,",",b ,"invalidas")
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:49:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (b > a):
	if (x >= a) and (x <= b):
		print (x, "pertence ao intervalo", a ,",",b)
	else:
		print(x ,"nao pertence ao intervalo", a , "," ,b)
else:
	print ("Entradas", a ,",",b ,"invalidas")
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:49:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (b > a):
	if (x >= a) and (x <= b):
		print (x, "pertence ao intervalo", a ,",",b)
	else:
		print(x ,"nao pertence ao intervalo", a , "," ,b)
else:
	print ("Entradas", a ,",",b ,"invalidas")
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:49:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (b > a):
	if (x >= a) and (x <= b):
		print (x, "pertence ao intervalo", a ,",",b)
	else:
		print(x ,"nao pertence ao intervalo", a , "," ,b)
else:
	print ("Entradas", a ,",",b ,"invalidas")
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:49:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (b > a):
	if (x >= a) and (x <= b):
		print (x, "pertence ao intervalo", a ,",",b)
	else:
		print(x ,"nao pertence ao intervalo", a , "," ,b)
else:
	print ("Entradas", a ,",",b ,"invalidas")
-- EXECUTION TIME:
0.21983
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 , 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:50:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (b > a):
	if (x >= a) and (x <= b):
		print (x, "pertence ao intervalo", a ,",",b)
	else:
		print(x ,"nao pertence ao intervalo", a , "," ,b)
else:
	print ("Entradas", a ,",",b ,"invalidas")
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:51:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (b > a):
	if (x >= a) and (x <= b):
		print (x, "pertence ao intervalo", a ,",",b)
	else:
		print(x ,"nao pertence ao intervalo", a , "," ,b)
else:
	print ("Entradas", a ,",",b ,"invalidas")
-- EXECUTION TIME:
0.169847
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 , 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:51:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (b > a):
	if (x >= a) and (x <= b):
		print (x, "pertence ao intervalo", a ,",",b)
	else:
		print(x, "nao pertence ao intervalo", a , "," ,b)
else:
	print ("Entradas", a ,",",b ,"invalidas")
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:51:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (b > a):
	if (x >= a) and (x <= b):
		print (x, "pertence ao intervalo", a ,",",b)
	else:
		print(x, "nao pertence ao intervalo", a , "," ,b)
else:
	print ("Entradas", a ,",",b ,"invalidas")
-- EXECUTION TIME:
0.199323
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 , 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:51:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (b > a):
	if (x >= a) and (x <= b):
		print (x,"pertence ao intervalo", a ,",",b)
	else:
		print(x,"nao pertence ao intervalo", a , "," ,b)
else:
	print ("Entradas", a ,",",b ,"invalidas")
-- EXECUTION TIME:
0.127821
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 , 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:51:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (b > a):
	if (x >= a) or (x <= b):
		print (x,"pertence ao intervalo", a ,",",b)
	else:
		print(x,"nao pertence ao intervalo", a , "," ,b)
else:
	print ("Entradas", a ,",",b ,"invalidas")
-- EXECUTION TIME:
0.199179
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 , 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:51:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (b > a):
	if (x >= a) and (x <= b):
		print (x,"pertence ao intervalo", a ,",",b)
	else:
		print(x,"nao pertence ao intervalo", a , "," ,b)
else:
	print ("Entradas", a ,",",b ,"invalidas")
-- EXECUTION TIME:
0.203895
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 , 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:54:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (b > a):
	if (x >= a) and (x <= b):
		print (x,"pertence ao intervalo", a ,",",b)
	else:
		print(x,"nao pertence ao intervalo", a , "," ,b)
else:
	print ("Entradas", a ,",",b ,"invalidas")
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:54:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (b > a):
	if (x >= a) and (x <= b):
		print (x,"pertence ao intervalo", a ,",",b)
	else:
		print(x,"nao pertence ao intervalo", a , "," ,b)
else:
	print ("Entradas", a ,",",b ,"invalidas")
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:55:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (b > a):
	if (x >= a) and (x <= b):
		print (x,"pertence ao intervalo", a ,",",b)
	else:
		print(x,"nao pertence ao intervalo", a , "," ,b)
else:
	print ("Entradas", a ,"e",b ,"invalidas")
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:55:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigiro.
x = float(input("Digite x: "))
a = float(input("Digite a: ")) 
b = float(input("Digite b: ")) 

if (b > a):
	if (x >= a) and (x <= b):
		print (x,"pertence ao intervalo", a ,",",b)
	else:
		print(x,"nao pertence ao intervalo", a , "," ,b)
else:
	print ("Entradas", a ,"e",b ,"invalidas")
-- EXECUTION TIME:
0.125341
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
