== TEST (2019-04-25 10:43:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))
if (a<=x<=b):
	print("oi")
-- OUTPUT:
Entrada:  100
Animal: Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:49:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))
if (b<=a):
	print("Entradas a e b invalidas")
elif (a<=x<=b):
	print("x pertence ao intervalo a, b")
elif (a<=b<=x) or (x<=a<=b):
	print("x nao pertence ao intervalo a, b")
-- OUTPUT:
x nao pertence ao intervalo a, b
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:50:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))
if (b<=a):
	print("Entradas a e b invalidas")
elif (a<=x<=b):
	print("x pertence ao intervalo a, b")
elif (a<=b<=x) or (x<=a<=b):
	print("x nao pertence ao intervalo a, b")
-- EXECUTION TIME:
0.140007
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
x nao pertence ao intervalo a, b
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas a e b invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
x pertence ao intervalo a, b
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:50:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))
if (b<=a):
	print("Entradas a e b invalidas")
elif (a<=x<=b):
	print("x pertence ao intervalo a, b")
elif (a<=b<=x) or (x<=a<=b):
	print("x nao pertence ao intervalo a, b")
-- OUTPUT:
x nao pertence ao intervalo a, b
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:50:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))
if (b<=a):
	print("Entradas a e b invalidas")
elif (a<=x<=b):
	print("x pertence ao intervalo a, b")
elif (a<=b<=x) or (x<=a<=b):
	print("x nao pertence ao intervalo a, b")
-- OUTPUT:
x nao pertence ao intervalo a, b
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:50:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))
if (b<a):
	print("Entradas a e b invalidas")
elif (a<=x<=b):
	print("x pertence ao intervalo a, b")
elif (a<=b<=x) or (x<=a<=b):
	print("x nao pertence ao intervalo a, b")
-- OUTPUT:
x nao pertence ao intervalo a, b
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:50:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))
if (b<a):
	print("Entradas a e b invalidas")
elif (a<=x<=b):
	print("x pertence ao intervalo a, b")
elif (a<=b<=x) or (x<=a<=b):
	print("x nao pertence ao intervalo a, b")
-- EXECUTION TIME:
0.188954
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
x nao pertence ao intervalo a, b
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas a e b invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
x pertence ao intervalo a, b
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:50:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))
if (b<a):
	print("Entradas a e b invalidas")
elif (a<x<b):
	print("x pertence ao intervalo a, b")
elif (a<b<x) or (x<a<b):
	print("x nao pertence ao intervalo a, b")
-- EXECUTION TIME:
0.199343
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
x nao pertence ao intervalo a, b
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas a e b invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
x pertence ao intervalo a, b
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:50:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))
if (b<a):
	print("Entradas a e b invalidas")
elif (a<x<b):
	print("x pertence ao intervalo a, b")
elif (a<b<x) or (x<a<b):
	print("x nao pertence ao intervalo a, b")
-- OUTPUT:
x nao pertence ao intervalo a, b
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:51:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))
if (b<=a):
	print("Entradas a e b invalidas")
elif (a<=x<=b):
	print("x pertence ao intervalo a, b")
elif (a<=b<=x) or (x<=a<=b):
	print("x nao pertence ao intervalo a, b")
-- OUTPUT:
x nao pertence ao intervalo a, b
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:52:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))
if (b<a):
	print("Entradas a e b invalidas")
elif (a<=x<=b):
	print("x pertence ao intervalo a, b")
elif (a<=b<=x) or (x<=a<=b):
	print("x nao pertence ao intervalo a, b")
-- OUTPUT:
x nao pertence ao intervalo a, b
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:53:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))
if (b<a):
	print("Entradas a e b invalidas")
elif (a<=x<=b):
	print("x pertence ao intervalo a, b")
else:
	print("x nao pertence ao intervalo a, b")
-- OUTPUT:
x nao pertence ao intervalo a, b
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:53:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))
if (b<a):
	print("Entradas a e b invalidas")
elif (a<=x<=b):
	print("x pertence ao intervalo a, b")
else:
	print("x nao pertence ao intervalo a, b")
-- OUTPUT:
x nao pertence ao intervalo a, b
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:54:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))
if (b<a):
	print("Entradas", a, "e", b, "invalidas")
elif (a<=x<=b):
	print("x pertence ao intervalo", "a", "b")
else:
	print("x nao pertence ao intervalo", "a", "b")
-- OUTPUT:
x nao pertence ao intervalo a b
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:55:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))
if (b<a):
	print("Entradas", a, "e", b, "invalidas")
elif (a<=x<=b):
	print("x pertence ao intervalo", a, b)
else:
	print("x nao pertence ao intervalo", a, b)
-- OUTPUT:
x nao pertence ao intervalo 3.0 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:55:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))
if (b<a):
	print("Entradas", a, "e", b, "invalidas")
elif (a<=x<=b):
	print("x pertence ao intervalo", a, b)
else:
	print("x nao pertence ao intervalo", a, b)
-- OUTPUT:
x nao pertence ao intervalo 3.0 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:55:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))
if (b<a):
	print("Entradas", a, "e", b, "invalidas")
elif (a<=x<=b):
	print("x pertence ao intervalo", a, b)
else:
	print("x nao pertence ao intervalo", a, b)
-- EXECUTION TIME:
0.130475
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
x nao pertence ao intervalo 3.0 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
x pertence ao intervalo 1.1 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:55:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))
if (b<=a):
	print("Entradas", a, "e", b, "invalidas")
elif (a<=x<=b):
	print("x pertence ao intervalo", a, b)
else:
	print("x nao pertence ao intervalo", a, b)
-- EXECUTION TIME:
0.170771
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
x nao pertence ao intervalo 3.0 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
x pertence ao intervalo 1.1 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:55:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))
if (b<=a):
	print("Entradas", a, "e", b, "invalidas")
elif (a<=x<=b):
	print("x pertence ao intervalo", a, b)
else:
	print("x nao pertence ao intervalo", a, b)
-- OUTPUT:
x nao pertence ao intervalo 3.0 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:56:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))
if (b<=a):
	print("Entradas", a, "e", b, "invalidas")
elif (a<=x<=b):
	print("x pertence ao intervalo", a,",", b)
else:
	print("x nao pertence ao intervalo", a,",", b)
-- OUTPUT:
x nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:57:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))
if (b<=a):
	print("Entradas", a, "e", b, "invalidas")
elif (a<=x<=b):
	print(x, "pertence ao intervalo", a,",", b)
else:
	print(x, "nao pertence ao intervalo", a,",", b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:57:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))
if (b<=a):
	print("Entradas", a, "e", b, "invalidas")
elif (a<=x<=b):
	print(x, "pertence ao intervalo", a,",", b)
else:
	print(x, "nao pertence ao intervalo", a,",", b)
-- EXECUTION TIME:
0.168063
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
