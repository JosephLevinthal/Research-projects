== TEST (2019-05-28 11:21:55) 
-- CODE:
from numpy import *
vet = array(eval(input("Leituras de glicose: ")))
i = 0
o = 0
while(i <= size(vet)):
	if(vet[i] > 99):
		print(i)
		o = o + 1
	i = i + 1
print(o)
	


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 11:24:42) 
-- CODE:
from numpy import *
vet = array(eval(input("Leituras de glicose: ")))
i = 0
o = 0
while(i <= size(vet)):
	if(vet[i] > 99):
		print(i)
		o = o + 1
	i = i + 1
print(o)
	


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 11:25:29) 
-- CODE:
from numpy import *
vet = array(eval(input("Leituras de glicose: ")))
i = 0
o = 0
while(i < size(vet)):
	if(vet[i] > 99):
		print(i)
		o = o + 1
	i = i + 1
print(o)
	


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 11:26:03) 
-- CODE:
from numpy import *
vet = array(eval(input("Leituras de glicose: ")))
i = 0
o = 0
while(i < size(vet)):
	if(vet[i] > 99):
		print(i)
		o = o + 1
	i = i + 1
print(o)
	


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-28 11:26:37) 
-- CODE:
from numpy import *
vet = array(eval(input("Leituras de glicose: ")))
i = 0
o = 0
while(i < size(vet)):
	if(vet[i] > 99):
		print(i)
		o = o + 1
	i = i + 1
print(o)
	


-- EXECUTION TIME:
0.350173
-- TEST CASE 1:
---- input:
[101,89,105,88,104,87]
---- correct output:
0
2
4
3
---- user output:
0
2
4
3
-- TEST CASE 2:
---- input:
[88,100,105,107,100,108,110,99,98,100]
---- correct output:
1
2
3
4
5
6
9
7
---- user output:
1
2
3
4
5
6
9
7
-- TEST CASE 3:
---- input:
[99,98,98,99,98,97]
---- correct output:
0
---- user output:
0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
