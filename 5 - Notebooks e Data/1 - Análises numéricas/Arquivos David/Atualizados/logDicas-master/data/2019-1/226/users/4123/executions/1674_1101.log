== TEST (2019-04-25 11:18:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input())
t   = input()

def prt (x):
	print("Entradas: ",con," kWh e tipo ",t)
	print("Valor total: R$ ", x)

if t == "R" and con>0:
	x = con*.44 if con<=500 else x = con*.65
	prt (x)
elif t == "C" and con>0:
	x = con*.55 if con<=1000 else x = con*.60
	prt (x)
elif t == "I" and con>0:
	x = con*.55 if con<=5000 else x = con*.60
	prt()
else:
	print("Entradas: ",con," kWh e tipo ",t)
	print("Dados invalidos")


	

-- ERROR:
File "XXXX", line 18
    x = con*.55 if con<=5000 else x = con*.60
       ^
SyntaxError: can't assign to conditional expression
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:18:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input())
t   = input()

def prt (x):
	print("Entradas: ",con," kWh e tipo ",t)
	print("Valor total: R$ ", x)

if t == "R" and con>0:
	x = con*.44 if con<=500 else con*.65
	prt (x)
elif t == "C" and con>0:
	x = con*.55 if con<=1000 else con*.60
	prt (x)
elif t == "I" and con>0:
	x = con*.55 if con<=5000 else con*.60
	prt()
else:
	print("Entradas: ",con," kWh e tipo ",t)
	print("Dados invalidos")


	

-- OUTPUT:
Entradas:  -56.0  kWh e tipo  I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:19:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input())
t   = input()

def prt (x):
	print("Entradas: ",round(con,2)," kWh e tipo ",t)
	print("Valor total: R$ ", x)

if t == "R" and con>0:
	x = con*.44 if con<=500 else con*.65
	prt (x)
elif t == "C" and con>0:
	x = con*.55 if con<=1000 else con*.60
	prt (x)
elif t == "I" and con>0:
	x = con*.55 if con<=5000 else con*.60
	prt()
else:
	print("Entradas: ",con," kWh e tipo ",t)
	print("Dados invalidos")


	

-- OUTPUT:
Entradas:  -56.0  kWh e tipo  I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:20:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input())
t   = input()

def prt (x):
	print("Entradas: ",com," kWh e tipo ",t)
	print("Valor total: R$ ",round(x,2))

if t == "R" and con>0:
	x = con*.44 if con<=500 else con*.65
	prt (x)
elif t == "C" and con>0:
	x = con*.55 if con<=1000 else con*.60
	prt (x)
elif t == "I" and con>0:
	x = con*.55 if con<=5000 else con*.60
	prt()
else:
	print("Entradas: ",con," kWh e tipo ",t)
	print("Dados invalidos")


	

-- OUTPUT:
Entradas:  -56.0  kWh e tipo  I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:20:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input())
t   = input()

def prt (x):
	print("Entradas: ",con," kWh e tipo ",t)
	print("Valor total: R$ ",round(x,2))

if t == "R" and con>0:
	x = con*.44 if con<=500 else con*.65
	prt (x)
elif t == "C" and con>0:
	x = con*.55 if con<=1000 else con*.60
	prt (x)
elif t == "I" and con>0:
	x = con*.55 if con<=5000 else con*.60
	prt()
else:
	print("Entradas: ",con," kWh e tipo ",t)
	print("Dados invalidos")


	

-- OUTPUT:
Entradas:  -56.0  kWh e tipo  I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:20:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input())
t   = input()

def prt (x):
	print("Entradas: ",con," kWh e tipo ",t)
	print("Valor total: R$ ",round(x,2))

if t == "R" and con>0:
	x = con*.44 if con<=500 else con*.65
	prt (x)
elif t == "C" and con>0:
	x = con*.55 if con<=1000 else con*.60
	prt (x)
elif t == "I" and con>0:
	x = con*.55 if con<=5000 else con*.60
	prt()
else:
	print("Entradas: ",con," kWh e tipo ",t)
	print("Dados invalidos")


	

-- OUTPUT:
Entradas:  -56.0  kWh e tipo  I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:20:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input())
t   = input()

def prt (x):
	print("Entradas: ",con," kWh e tipo ",t)
	print("Valor total: R$ ",round(x,2))

if t == "R" and con>0:
	x = con*.44 if con<=500 else con*.65
	prt (x)
elif t == "C" and con>0:
	x = con*.55 if con<=1000 else con*.60
	prt (x)
elif t == "I" and con>0:
	x = con*.55 if con<=5000 else con*.60
	prt()
else:
	print("Entradas: ",con," kWh e tipo ",t)
	print("Dados invalidos")


	

-- OUTPUT:
Entradas:  -56.0  kWh e tipo  I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:21:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input())
t   = input()

def prt (x):
	print("Entradas: ",con," kWh e tipo ",t)
	print("Valor total: R$ ",round(x,2))

if t == "R" and con>0:
	x = con*.44 if con<=500 else con*.65
	prt (x)
elif t == "C" and con>0:
	x = con*.55 if con<=1000 else con*.60
	prt (x)
elif t == "I" and con>0:
	x = con*.55 if con<=5000 else con*.60
	prt()
else:
	print("Entradas: ",con," kWh e tipo ",t)
	print("Dados invalidos")


	

-- EXECUTION TIME:
0.16996
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0  kWh e tipo  I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5  kWh e tipo  R
Valor total: R$  621.08
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
