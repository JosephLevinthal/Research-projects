== TEST (2019-04-30 10:15:39) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("Digite aqui a coordenada x: "))
y = float(input("Digite aqui a coordenada y: "))
if ((x != 0) and (y != 0)):
	if ((x > 0) and (y > 0)):
		msg = "Q1"
	elif ((x < 0) and (y < 0)):
		msg = "Q3"
	elif ((x > 0) and (y < 0)):
		msg = "Q4"
	else;
	msg = "Q2"
elif ((x == 0) and (y == 0)):
	msg = "Origem"
else:
	if (x = 0):
		msg = "Eixo Y"
	else:
		msg = "Eixo X"
	
-- ERROR:
File "XXXX", line 11
    else;
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:15:50) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("Digite aqui a coordenada x: "))
y = float(input("Digite aqui a coordenada y: "))
if ((x != 0) and (y != 0)):
	if ((x > 0) and (y > 0)):
		msg = "Q1"
	elif ((x < 0) and (y < 0)):
		msg = "Q3"
	elif ((x > 0) and (y < 0)):
		msg = "Q4"
	else:
	msg = "Q2"
elif ((x == 0) and (y == 0)):
	msg = "Origem"
else:
	if (x = 0):
		msg = "Eixo Y"
	else:
		msg = "Eixo X"
	
-- ERROR:
File "XXXX", line 12
    msg = "Q2"
      ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:16:26) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("Digite aqui a coordenada x: "))
y = float(input("Digite aqui a coordenada y: "))
if ((x != 0) and (y != 0)):
	if ((x > 0) and (y > 0)):
		msg = "Q1"
	elif ((x < 0) and (y < 0)):
		msg = "Q3"
	elif ((x > 0) and (y < 0)):
		msg = "Q4"
	else:
	   msg = "Q2"
elif ((x == 0) and (y == 0)):
	msg = "Origem"
else:
	if (x = 0):
		msg = "Eixo Y"
	else:
		msg = "Eixo X"
	
-- ERROR:
File "XXXX", line 16
    if (x = 0):
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:19:36) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("Digite aqui a coordenada x: "))
y = float(input("Digite aqui a coordenada y: "))
if ((x != 0) and (y != 0)):
	if ((x > 0) and (y > 0)):
		msg = "Q1"
	elif ((x < 0) and (y < 0)):
		msg = "Q3"
	elif ((x > 0) and (y < 0)):
		msg = "Q4"
	else:
	   msg = "Q2"
elif (((x == 0) and (y != 0)) or ((y == 0) and (x != 0)):
	if (x == 0):
		msg = "Eixo Y"
	else:
		msg = "Eixo X"
else:
		msg = "Origem"
	
-- ERROR:
File "XXXX", line 13
    elif (((x == 0) and (y != 0)) or ((y == 0) and (x != 0)):
                                                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:19:56) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("Digite aqui a coordenada x: "))
y = float(input("Digite aqui a coordenada y: "))
if ((x != 0) and (y != 0)):
	if ((x > 0) and (y > 0)):
		msg = "Q1"
	elif ((x < 0) and (y < 0)):
		msg = "Q3"
	elif ((x > 0) and (y < 0)):
		msg = "Q4"
	else:
	   msg = "Q2"
elif (((x == 0) and (y != 0)) or ((y == 0) and (x != 0))):
	if (x == 0):
		msg = "Eixo Y"
	else:
		msg = "Eixo X"
else:
		msg = "Origem"
	
-- ERROR:
File "XXXX", line 13
    elif (((x == 0) and (y != 0)) or ((y == 0) and (x != 0)):
                                                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:21:58) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("Digite aqui a coordenada x: "))
y = float(input("Digite aqui a coordenada y: "))
if ((x != 0) and (y != 0)):
	if ((x > 0) and (y > 0)):
		msg = "Q1"
	elif ((x < 0) and (y < 0)):
		msg = "Q3"
	elif ((x > 0) and (y < 0)):
		msg = "Q4"
	else:
	   msg = "Q2"
elif (((x == 0) and (y != 0)) or ((y == 0) and (x != 0))):
	if (x == 0):
		msg = "Eixo Y"
	else:
		msg = "Eixo X"
else:
		msg = "Origem"
print(msg)
-- OUTPUT:
Q4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:22:17) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("Digite aqui a coordenada x: "))
y = float(input("Digite aqui a coordenada y: "))
if ((x != 0) and (y != 0)):
	if ((x > 0) and (y > 0)):
		msg = "Q1"
	elif ((x < 0) and (y < 0)):
		msg = "Q3"
	elif ((x > 0) and (y < 0)):
		msg = "Q4"
	else:
	   msg = "Q2"
elif (((x == 0) and (y != 0)) or ((y == 0) and (x != 0))):
	if (x == 0):
		msg = "Eixo Y"
	else:
		msg = "Eixo X"
else:
		msg = "Origem"
print(msg)
-- OUTPUT:
Q4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:22:24) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("Digite aqui a coordenada x: "))
y = float(input("Digite aqui a coordenada y: "))
if ((x != 0) and (y != 0)):
	if ((x > 0) and (y > 0)):
		msg = "Q1"
	elif ((x < 0) and (y < 0)):
		msg = "Q3"
	elif ((x > 0) and (y < 0)):
		msg = "Q4"
	else:
	   msg = "Q2"
elif (((x == 0) and (y != 0)) or ((y == 0) and (x != 0))):
	if (x == 0):
		msg = "Eixo Y"
	else:
		msg = "Eixo X"
else:
		msg = "Origem"
print(msg)
-- OUTPUT:
Q4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:22:36) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("Digite aqui a coordenada x: "))
y = float(input("Digite aqui a coordenada y: "))
if ((x != 0) and (y != 0)):
	if ((x > 0) and (y > 0)):
		msg = "Q1"
	elif ((x < 0) and (y < 0)):
		msg = "Q3"
	elif ((x > 0) and (y < 0)):
		msg = "Q4"
	else:
	   msg = "Q2"
elif (((x == 0) and (y != 0)) or ((y == 0) and (x != 0))):
	if (x == 0):
		msg = "Eixo Y"
	else:
		msg = "Eixo X"
else:
		msg = "Origem"
print(msg)
-- OUTPUT:
Q4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:22:49) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("Digite aqui a coordenada x: "))
y = float(input("Digite aqui a coordenada y: "))
if ((x != 0) and (y != 0)):
	if ((x > 0) and (y > 0)):
		msg = "Q1"
	elif ((x < 0) and (y < 0)):
		msg = "Q3"
	elif ((x > 0) and (y < 0)):
		msg = "Q4"
	else:
	   msg = "Q2"
elif (((x == 0) and (y != 0)) or ((y == 0) and (x != 0))):
	if (x == 0):
		msg = "Eixo Y"
	else:
		msg = "Eixo X"
else:
		msg = "Origem"
print(msg)
-- OUTPUT:
Q4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:22:59) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("Digite aqui a coordenada x: "))
y = float(input("Digite aqui a coordenada y: "))
if ((x != 0) and (y != 0)):
	if ((x > 0) and (y > 0)):
		msg = "Q1"
	elif ((x < 0) and (y < 0)):
		msg = "Q3"
	elif ((x > 0) and (y < 0)):
		msg = "Q4"
	else:
	   msg = "Q2"
elif (((x == 0) and (y != 0)) or ((y == 0) and (x != 0))):
	if (x == 0):
		msg = "Eixo Y"
	else:
		msg = "Eixo X"
else:
		msg = "Origem"
print(msg)
-- OUTPUT:
Q4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:23:11) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("Digite aqui a coordenada x: "))
y = float(input("Digite aqui a coordenada y: "))
if ((x != 0) and (y != 0)):
	if ((x > 0) and (y > 0)):
		msg = "Q1"
	elif ((x < 0) and (y < 0)):
		msg = "Q3"
	elif ((x > 0) and (y < 0)):
		msg = "Q4"
	else:
	   msg = "Q2"
elif (((x == 0) and (y != 0)) or ((y == 0) and (x != 0))):
	if (x == 0):
		msg = "Eixo Y"
	else:
		msg = "Eixo X"
else:
		msg = "Origem"
print(msg)
-- OUTPUT:
Q4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:23:28) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("Digite aqui a coordenada x: "))
y = float(input("Digite aqui a coordenada y: "))
if ((x != 0) and (y != 0)):
	if ((x > 0) and (y > 0)):
		msg = "Q1"
	elif ((x < 0) and (y < 0)):
		msg = "Q3"
	elif ((x > 0) and (y < 0)):
		msg = "Q4"
	else:
	   msg = "Q2"
elif (((x == 0) and (y != 0)) or ((y == 0) and (x != 0))):
	if (x == 0):
		msg = "Eixo Y"
	else:
		msg = "Eixo X"
else:
		msg = "Origem"
print(msg)
-- EXECUTION TIME:
0.219486
-- TEST CASE 1:
---- input:
4.5
-2.2
---- correct output:
Q4
---- user output:
Q4
-- TEST CASE 2:
---- input:
0.1
0
---- correct output:
Eixo X
---- user output:
Eixo X
-- TEST CASE 3:
---- input:
0.0
0.0
---- correct output:
Origem
---- user output:
Origem
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
