== TEST (2019-03-19 16:59:12) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia." 
print(frase.upper(Ada Lovelace foi a primeira programadora da historia.))
-- ERROR:
File "XXXX", line 2
    print(frase.upper(Ada Lovelace foi a primeira programadora da historia.))
                                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 16:59:40) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia." 
print(.upper"Ada Lovelace foi a primeira programadora da historia.")
-- ERROR:
File "XXXX", line 2
    print(.upper"Ada Lovelace foi a primeira programadora da historia.")
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 17:05:44) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia." 
print(.upper(frase))
-- ERROR:
File "XXXX", line 2
    print(.upper(frase))
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-19 17:05:48) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia." 
print(.upper(frase))
-- EXECUTION TIME:
0.210157
-- ERROR:
  File "/home/codebench/codes/1575/1559/main.py", line 2
    print(.upper(frase))
          ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 17:06:25) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia." 
print(.upper("Ada Lovelace foi a primeira programadora da historia."))
-- ERROR:
File "XXXX", line 2
    print(.upper("Ada Lovelace foi a primeira programadora da historia."))
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 07:35:13) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia." 
print(upper("Ada Lovelace foi a primeira programadora da historia."))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    print(upper("Ada Lovelace foi a primeira programadora da historia."))
NameError: name 'upper' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 07:35:40) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia." 
print(frase.upper("Ada Lovelace foi a primeira programadora da historia."))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    print(frase.upper("Ada Lovelace foi a primeira programadora da historia."))
TypeError: upper() takes no arguments (1 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 07:35:43) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia." 
print(frase.upper("Ada Lovelace foi a primeira programadora da historia."))
-- EXECUTION TIME:
0.181192
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1575/1559/main.py", line 2, in <module>
    print(frase.upper("Ada Lovelace foi a primeira programadora da historia."))
TypeError: upper() takes no arguments (1 given)

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 07:37:43) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia." 
print(frase.upper("Ada Lovelace foi a primeira programadora da historia."))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    print(frase.upper("Ada Lovelace foi a primeira programadora da historia."))
TypeError: upper() takes no arguments (1 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 07:38:23) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia." 
print(.upper(frase))
-- ERROR:
File "XXXX", line 2
    print(.upper(frase))
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 07:39:30) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia." 
print(.upper("frase"))
-- ERROR:
File "XXXX", line 2
    print(.upper("frase"))
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 07:39:58) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia." 
print(.upper('frase'))
-- ERROR:
File "XXXX", line 2
    print(.upper('frase'))
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 07:40:19) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia." 
print(.upper('Ada Lovelace foi a primeira programadora da historia.'))
-- ERROR:
File "XXXX", line 2
    print(.upper('Ada Lovelace foi a primeira programadora da historia.'))
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 07:41:39) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia." 
print("ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA")
-- OUTPUT:
ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 07:41:42) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia." 
print("ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA")
-- EXECUTION TIME:
0.157659
-- TEST CASE 1:
---- input:
nonono
---- correct output:
ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA.
---- user output:
ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 07:41:45) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia." 
print("ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA")
-- OUTPUT:
ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 07:44:07) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia."
print("Ada Lovelace foi a primeira programadora da historia.".upper())
-- OUTPUT:
ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 07:44:10) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia."
print("Ada Lovelace foi a primeira programadora da historia.".upper())
-- EXECUTION TIME:
0.19061
-- TEST CASE 1:
---- input:
nonono
---- correct output:
ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA.
---- user output:
ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA.
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
