== TEST (2019-04-25 11:23:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
c = int(input"valor: ")
x = "Animal: "
print("Entrada: ", c)
if(c != 2 or c!=5 or c!=10 or c!=20 or c!=50 or c!=100 ):
	print("Animal: Invalido")
elif(c == 2):
	print(x, "Tartaruga")
elif(c == 5):
	print(x, "Garça")
elif(c == 10):
	print(x, "Arara")
elif(c == 20):
	print(x, "Mico-leão-dourado" )
elif(c == 50):
	print(x, "Onça-pintada")
elif(c == 100):
	print(x, "Garoupa")
-- ERROR:
File "XXXX", line 4
    c = int(input"valor: ")
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:24:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
c = int(input("valor: "))
x = "Animal: "
print("Entrada: ", c)
if(c != 2 or c!=5 or c!=10 or c!=20 or c!=50 or c!=100 ):
	print("Animal: Invalido")
elif(c == 2):
	print(x, "Tartaruga")
elif(c == 5):
	print(x, "Garça")
elif(c == 10):
	print(x, "Arara")
elif(c == 20):
	print(x, "Mico-leão-dourado" )
elif(c == 50):
	print(x, "Onça-pintada")
elif(c == 100):
	print(x, "Garoupa")
-- OUTPUT:
Entrada:  100
Animal: Invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:25:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
c = int(input("valor: "))
x = "Animal: "
print("Entrada: ", c)

elif(c == 2):
	print(x, "Tartaruga")
elif(c == 5):
	print(x, "Garça")
elif(c == 10):
	print(x, "Arara")
elif(c == 20):
	print(x, "Mico-leão-dourado" )
elif(c == 50):
	print(x, "Onça-pintada")
elif(c == 100):
	print(x, "Garoupa")
else:
	print(x, "Invalido")
-- ERROR:
File "XXXX", line 8
    elif(c == 2):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:25:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
c = int(input("valor: "))
x = "Animal: "
print("Entrada: ", c)

if(c == 2):
	print(x, "Tartaruga")
elif(c == 5):
	print(x, "Garça")
elif(c == 10):
	print(x, "Arara")
elif(c == 20):
	print(x, "Mico-leão-dourado" )
elif(c == 50):
	print(x, "Onça-pintada")
elif(c == 100):
	print(x, "Garoupa")
else:
	print(x, "Invalido")
-- OUTPUT:
Entrada:  100
Animal:  Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:26:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
c = int(input("valor: "))
x = "Animal: "
print("Entrada: ", c)

if(c == 2):
	print(x, "Tartaruga")
elif(c == 5):
	print(x, "Garça")
elif(c == 10):
	print(x, "Arara")
elif(c == 20):
	print(x, "Mico-leão-dourado" )
elif(c == 50):
	print(x, "Onça-pintada")
elif(c == 100):
	print(x, "Garoupa")
else:
	print(x, "Invalido")
-- OUTPUT:
Entrada:  100
Animal:  Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:27:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
c = int(input("valor: "))
x = "Animal: "
print("Entrada: ", c)

if(c == 2):
	print(x, "Tartaruga")
elif(c == 5):
	print(x, "Garça")
elif(c == 10):
	print(x, "Arara")
elif(c == 20):
	print(x, "Mico-leão-dourado" )
elif(c == 50):
	print(x, "Onça-pintada")
elif(c == 100):
	print(x, "Garoupa")
else:
	print(x, "Invalido")
-- OUTPUT:
Entrada:  100
Animal:  Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:31:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
c = int(input("valor: "))
x = "Animal: "
print("Entrada: ", c)

if(c == 2):
	y = Tartaruga
elif(c == 5):
	y = Garca
elif(c == 10):
	y = Arara
elif(c == 20):
	y = Mico-leão-dourado
elif(c == 50):
	y = Onca-pintada
elif(c == 100):
	y = Garoupa
else:
	y = Invalido
print("Animal:", y)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 19, in <module>
    y = Garoupa
NameError: name 'Garoupa' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:32:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
c = int(input("valor: "))
x = "Animal: "
print("Entrada: ", c)

if(c == 2):
	y = Tartaruga
elif(c == 5):
	y = Garca
elif(c == 10):
	y = Arara
elif(c == 20):
	y = Mico-leao-dourado
elif(c == 50):
	y = Onca-pintada
elif(c == 100):
	y = Garoupa
else:
	y = Invalido
print("Animal:", y)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 19, in <module>
    y = Garoupa
NameError: name 'Garoupa' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:33:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
c = int(input("valor: "))
x = "Animal: "
print("Entrada: ", c)

if(c == 2):
	y = Tartaruga
elif(c == 5):
	y = Garca
elif(c == 10):
	y = Arara
elif(c == 20):
	y = "Mico-leao-dourado"
elif(c == 50):
	y = "Onca-pintada'
elif(c == 100):
	y = 'Garoupa'
else:
	y = 'Invalido'
print("Animal:", y)
-- ERROR:
File "XXXX", line 17
    y = "Onca-pintada'
                     ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:34:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
c = int(input("valor: "))
x = "Animal: "
print("Entrada: ", c)

if(c == 2):
	y = Tartaruga
elif(c == 5):
	y = Garca
elif(c == 10):
	y = Arara
elif(c == 20):
	y = "Mico-leao-dourado"
elif(c == 50):
	y = "Onca-pintada"
elif(c == 100):
	y = "Garoupa"
else:
	y = "Invalido"
print("Animal:", y)
-- OUTPUT:
Entrada:  100
Animal: Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:34:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
c = int(input("valor: "))
x = "Animal: "
print("Entrada: ", c)

if(c == 2):
	y = Tartaruga
elif(c == 5):
	y = Garca
elif(c == 10):
	y = Arara
elif(c == 20):
	y = "Mico-leao-dourado"
elif(c == 50):
	y = "Onca-pintada"
elif(c == 100):
	y = "Garoupa"
else:
	y = "Invalido"
print("Animal:", y)
-- OUTPUT:
Entrada:  100
Animal: Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:34:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
c = int(input("valor: "))
x = "Animal: "
print("Entrada: ", c)

if(c == 2):
	y = Tartaruga
elif(c == 5):
	y = Garca
elif(c == 10):
	y = Arara
elif(c == 20):
	y = "Mico-leao-dourado"
elif(c == 50):
	y = "Onca-pintada"
elif(c == 100):
	y = "Garoupa"
else:
	y = "Invalido"
print("Animal:", y)
-- OUTPUT:
Entrada:  100
Animal: Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:34:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
c = int(input("valor: "))
x = "Animal: "
print("Entrada: ", c)

if(c == 2):
	y = Tartaruga
elif(c == 5):
	y = Garca
elif(c == 10):
	y = Arara
elif(c == 20):
	y = "Mico-leao-dourado"
elif(c == 50):
	y = "Onca-pintada"
elif(c == 100):
	y = "Garoupa"
else:
	y = "Invalido"
print("Animal:", y)
-- EXECUTION TIME:
0.143989
-- TEST CASE 1:
---- input:
100
---- correct output:
Entrada: 100
Animal: Garoupa
---- user output:
Entrada:  100
Animal: Garoupa
-- TEST CASE 2:
---- input:
7
---- correct output:
Entrada: 7
Animal: Invalido
---- user output:
Entrada:  7
Animal: Invalido
-- TEST CASE 3:
---- input:
50
---- correct output:
Entrada: 50
Animal: Onca-pintada
---- user output:
Entrada:  50
Animal: Onca-pintada
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
