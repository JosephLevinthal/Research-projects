== TEST (2019-04-09 10:12:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = input("Patrono: ")

if (num == cervo ):
	mensagem = "eh patrono do Harry Potter"
else:
	mensagem = "nao eh patrono do Harry Potter"

print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if (num == cervo ):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:12:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = input("Patrono: ")

if (num == cervo ):
	mensagem = "eh patrono do Harry Potter"
else:
	mensagem = "nao eh patrono do Harry Potter"

print(mensagem)
-- EXECUTION TIME:
0.139601
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1637/1053/main.py", line 7, in <module>
    if (num == cervo ):
NameError: name 'cervo' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:12:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = input("Patrono: ")

if (num = cervo ):
	mensagem = "eh patrono do Harry Potter"
else:
	mensagem = "nao eh patrono do Harry Potter"

print(mensagem)
-- ERROR:
File "XXXX", line 7
    if (num = cervo ):
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:12:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = input("Patrono: ")

if (num == cervo ):
	mensagem = "eh patrono do Harry Potter"
else:
	mensagem = "nao eh patrono do Harry Potter"

print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if (num == cervo ):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:14:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

ent = input("Patrono: ")

if (ent.lower() == cervo ):
	mensagem = ent + "eh patrono do Harry Potter"
else:
	mensagem = ent + "nao eh patrono do Harry Potter"

print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if (ent.lower() == cervo ):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:15:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

ent = input("Patrono: ")

if (ent.lower() == "cervo" ):
	mensagem = ent + "eh patrono do Harry Potter"
else:
	mensagem = ent + "nao eh patrono do Harry Potter"

print(mensagem)
-- OUTPUT:
cervoeh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:15:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

ent = input("Patrono: ")

if (ent.lower() == "cervo" ):
	mensagem = ent + "eh patrono do Harry Potter"
else:
	mensagem = ent + " nao eh patrono do Harry Potter"

print(mensagem)
-- OUTPUT:
cervoeh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:15:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

ent = input("Patrono: ")

if (ent.lower() == "cervo" ):
	mensagem = ent + " eh patrono do Harry Potter"
else:
	mensagem = ent + " nao eh patrono do Harry Potter"

print(mensagem)
-- EXECUTION TIME:
0.13064
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
