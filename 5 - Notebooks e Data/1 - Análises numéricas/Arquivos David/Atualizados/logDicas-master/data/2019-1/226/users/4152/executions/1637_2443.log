== TEST (2019-04-09 11:36:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

r = int(input("Digite aqui o raio do tanque: "))

x = int(input("Digite aqui a altura na parte superior: "))

num = input("Digite aqui o numero da opcao desejada: ")

cal2 = (4 * pi * (r ** 2)) / 3

cal1 = (pi * (x ** 2) * (3 * r - x)) / 3

if (num == 1):
	cal = cal1
else:
	cal = cal2
	
print(round(cal, 4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    r = int(input())
ValueError: invalid literal for int() with base 10: '3.50'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:38:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

r = int(input("Digite aqui o raio do tanque: "))

x = float(input("Digite aqui a altura na parte superior: "))

num = input("Digite aqui o numero da opcao desejada: ")

cal2 = (4 * pi * (r ** 2)) / 3

cal1 = (pi * (x ** 2) * (3 * r - x)) / 3

if (num == 1):
	cal = cal1
else:
	cal = cal2
	
print(round(cal, 4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    r = int(input())
ValueError: invalid literal for int() with base 10: '3.50'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:38:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

r = int(input("Digite aqui o raio do tanque: "))

x = float(input("Digite aqui a altura na parte superior: "))

num = input("Digite aqui o numero da opcao desejada: ")

cal2 = (4 * pi * (r ** 2)) / 3

cal1 = (pi * (x ** 2) * (3 * r - x)) / 3

if (num == 1):
	cal = cal2
else:
	cal = cal1
	
print(round(cal, 4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    r = int(input())
ValueError: invalid literal for int() with base 10: '3.50'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:39:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

r = int(input("Digite aqui o raio do tanque: "))

x = float(input("Digite aqui a altura na parte superior: "))

num = input("Digite aqui o numero da opcao desejada: ")

cal2 = (4 * pi * (r ** 2)) / 3

cal1 = (pi * (x ** 2) * (3 * r - x)) / 3

if (num == 1):
	cal = cal1
else:
	cal = cal2
	
print(round(cal, 4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    r = int(input())
ValueError: invalid literal for int() with base 10: '3.50'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:43:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

r = int(input("Digite aqui o raio do tanque: "))

x = float(input("Digite aqui a altura na parte superior: "))

num = input("Digite aqui o numero da opcao desejada: ")

cal2 = (4 * pi * (r ** 2)) / 3

cal1 = ((pi * x ** 2) * (3 * r) + (pi * x ** 2) * (- x)) / 3

if (num == 1):
	cal = cal1
else:
	cal = cal2
	
print(round(cal, 4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    r = int(input())
ValueError: invalid literal for int() with base 10: '3.50'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:45:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

r = int(input("Digite aqui o raio do tanque: "))

x = float(input("Digite aqui a altura na parte superior: "))

num = input("Digite aqui o numero da opcao desejada: ")

cal2 = (4 * pi * (r ** 3)) / 3

cal1 = (pi * x ** 2) * (3 * r - x) / 3

if (num == 1):
	cal = cal1
else:
	cal = cal2
	
print(round(cal, 4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    r = int(input())
ValueError: invalid literal for int() with base 10: '3.50'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:45:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

r = int(input("Digite aqui o raio do tanque: "))

x = float(input("Digite aqui a altura na parte superior: "))

num = input("Digite aqui o numero da opcao desejada: ")

cal2 = (4 * pi * (r ** 3)) / 3

cal1 = (pi * x ** 2) * (3 * r - x) / 3

if (num == 1):
	cal = cal1
else:
	cal = cal2
	
print(round(cal, 4))
-- EXECUTION TIME:
0.223515
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1637/2443/main.py", line 6, in <module>
    r = int(input())
ValueError: invalid literal for int() with base 10: '3.50'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:46:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

r = int(input("Digite aqui o raio do tanque: "))

x = float(input("Digite aqui a altura na parte superior: "))

num = input("Digite aqui o numero da opcao desejada: ")

cal2 = (4 * pi * (r ** 3)) / 3

cal1 = ((pi * x ** 2) * (3 * r) + (pi * x ** 2) * (- x)) / 3

if (num == 1):
	cal = cal1
else:
	cal = cal2
	
print(round(cal, 4))
-- EXECUTION TIME:
0.189528
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1637/2443/main.py", line 6, in <module>
    r = int(input())
ValueError: invalid literal for int() with base 10: '3.50'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:46:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

r = int(input("Digite aqui o raio do tanque: "))

x = float(input("Digite aqui a altura na parte superior: "))

num = input("Digite aqui o numero da opcao desejada: ")

cal2 = (4 * pi * (r ** 3)) / 3

cal1 = ((pi * x ** 2) * (3 * r) + (pi * x ** 2) * (- x)) / 3

if (num == 1):
	cal = cal1
else:
	cal = cal2
	
print(round(cal, 4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    r = int(input())
ValueError: invalid literal for int() with base 10: '3.50'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 13:02:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

r = float(input("Digite aqui o raio do tanque: "))

x = float(input("Digite aqui a altura na parte superior: "))

num = int(input("Digite aqui o numero da opcao desejada: "))

cal2 = (4 * pi * (r ** 3)) / 3

cal1 = ((pi * x ** 2) * (3 * r - x) / 3

if (num == 1):
	cal = cal1
else:
	cal = cal2 - cal1
	
print(round(cal, 4))
-- ERROR:
File "XXXX", line 16
    if (num == 1):
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 13:02:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

r = float(input("Digite aqui o raio do tanque: "))

x = float(input("Digite aqui a altura na parte superior: "))

num = int(input("Digite aqui o numero da opcao desejada: "))

cal2 = (4 * pi * (r ** 3)) / 3

cal1 = ((pi * x ** 2) * (3 * r - x) / 3

if(num == 1):
	cal = cal1
else:
	cal = cal2 - cal1
	
print(round(cal, 4))
-- ERROR:
File "XXXX", line 16
    if(num == 1):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 13:02:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

r = float(input("Digite aqui o raio do tanque: "))

x = float(input("Digite aqui a altura na parte superior: "))

num = int(input("Digite aqui o numero da opcao desejada: "))

cal2 = (4 * pi * (r ** 3)) / 3

cal1 = ((pi * x ** 2) * (3 * r - x) / 3

if (num == 1):
	cal = cal1
else:
	cal = cal2
	
print(round(cal, 4))
-- ERROR:
File "XXXX", line 16
    if (num == 1):
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 13:03:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

r = float(input("Digite aqui o raio do tanque: "))

x = float(input("Digite aqui a altura na parte superior: "))

num = int(input("Digite aqui o numero da opcao desejada: "))

cal2 = (4 * pi * (r ** 3)) / 3

cal1 = ((pi * x ** 2) * (3 * r - x) / 3

if (num == 1):
	cal = cal1
else:
	cal = cal2
	
print(round(cal, 4))
-- ERROR:
File "XXXX", line 16
    if (num == 1):
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 13:03:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

r = float(input("Digite aqui o raio do tanque: "))

x = float(input("Digite aqui a altura na parte superior: "))

num = int(input("Digite aqui o numero da opcao desejada: "))

cal2 = (4 * pi * (r ** 3)) / 3

cal1 = ((pi * x ** 2) * (3 * r - x) / 3

if (num == 1):
	cal = cal1
else:
	cal = cal2
	
print(round(cal, 4))
-- ERROR:
File "XXXX", line 16
    if (num == 1):
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:21:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

r = float(input("Digite aqui o raio do tanque: "))

x = float(input("Digite aqui a altura na parte superior: "))

num = int(input("Digite aqui o numero da opcao desejada: "))

cal2 = (4 * pi * (r ** 3)) / 3

cal1 = ((pi * x ** 2) * (3 * r - x) / 3

if (num == 1):
	cal = cal1
else:
	cal = cal2
	
print(round(cal, 4))
-- ERROR:
File "XXXX", line 16
    if (num == 1):
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:22:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

r = float(input("Digite aqui o raio do tanque: "))

x = float(input("Digite aqui a altura na parte superior: "))

num = (input("Digite aqui o numero da opcao desejada: "))

cal2 = (4 * pi * (r ** 3)) / 3

cal1 = ((pi * x ** 2) * (3 * r - x) / 3

if (num == 1):
	cal = cal1
else:
	cal = cal2
	
print(round(cal, 4))
-- ERROR:
File "XXXX", line 16
    if (num == 1):
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:23:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

r = float(input("Digite aqui o raio do tanque: "))

x = float(input("Digite aqui a altura na parte superior: "))

num = (input("Digite aqui o numero da opcao desejada: "))

cal2 = (4 * pi * (r ** 3)) / 3

cal1 = ((pi * x ** 2) * (3 * r - x) / 3

if (num == "1"):
	cal = cal1
else:
	cal = cal2
	
print(round(cal, 4))
-- ERROR:
File "XXXX", line 16
    if (num == "1"):
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:23:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

r = float(input("Digite aqui o raio do tanque: "))

x = float(input("Digite aqui a altura na parte superior: "))

num = (input("Digite aqui o numero da opcao desejada: "))

cal2 = (4 * pi * (r ** 3)) / 3

cal1 = ((pi * x ** 2) * (3 * r - x) / 3

if(num == "1"):
	cal = cal1
else:
	cal = cal2
	
print(round(cal, 4))
-- ERROR:
File "XXXX", line 16
    if(num == "1"):
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:41:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

r = float(input("Digite aqui o raio do tanque: "))

x = float(input("Digite aqui a altura na parte superior: "))

num = input("Digite aqui o numero da opcao desejada: ")

cal2 = (4 * pi * (r ** 3)) / 3

cal1 = ((pi * x ** 2) * (3 * r - x) / 3

if (num == "1"):
	cal = cal1
else:
	cal = cal2
	
print(round(cal, 4))
-- ERROR:
File "XXXX", line 16
    if (num == "1"):
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:42:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

r = float(input("Digite aqui o raio do tanque: "))

x = float(input("Digite aqui a altura na parte superior: "))

num = input("Digite aqui o numero da opcao desejada: ")

cal2 = (4 * pi * (r ** 3)) / 3

cal1 = ((pi * x ** 2) * (3 * r - x)) / 3

if (num == "1"):
	cal = cal1
else:
	cal = cal2
	
print(round(cal, 4))
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:43:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

r = float(input("Digite aqui o raio do tanque: "))

x = float(input("Digite aqui a altura na parte superior: "))

num = input("Digite aqui o numero da opcao desejada: ")

cal2 = (4 * pi * (r ** 3)) / 3

cal1 = ((pi * x ** 2) * (3 * r - x)) / 3

if (num == "1"):
	cal = cal1
else:
	cal = cal2 - cal1
	
print(round(cal, 4))
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 10:44:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

r = float(input("Digite aqui o raio do tanque: "))

x = float(input("Digite aqui a altura na parte superior: "))

num = input("Digite aqui o numero da opcao desejada: ")

cal2 = (4 * pi * (r ** 3)) / 3

cal1 = ((pi * x ** 2) * (3 * r - x)) / 3

if (num == "1"):
	cal = cal1
else:
	cal = cal2 - cal1
	
print(round(cal, 4))
-- EXECUTION TIME:
0.144154
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
