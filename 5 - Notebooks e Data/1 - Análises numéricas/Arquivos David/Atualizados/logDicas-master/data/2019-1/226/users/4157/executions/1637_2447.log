== TEST (2019-04-09 00:33:07) 
-- CODE:
p = float(input("preÃ§o:"))
pg = float(input("pagamento:"))
if(p > pg):
	cal = p-g
	mens = "falta", cal
else:
	cal = pg-p
	mens ="troco de", cal
	
print(round(mens, 2))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    cal = p-g
NameError: name 'g' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 00:33:21) 
-- CODE:
p = float(input("preco:"))
pg = float(input("pagamento:"))
if(p > pg):
	cal = p-g
	mens = "falta", cal
else:
	cal = pg-p
	mens ="troco de", cal
	
print(round(mens, 2))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    cal = p-g
NameError: name 'g' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 00:51:19) 
-- CODE:
p = float(input("preco:"))
pg = float(input("pagamento:"))
if(p > pg):
	cal = p-g
	mens = "falta", cal
else:
	cal = pg-p
	mens = "troco de", cal
	
print(mens)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    cal = p-g
NameError: name 'g' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 00:52:45) 
-- CODE:
p = float(input("preco:"))
pg = float(input("pagamento:"))
if(p > pg):
	cal = p-g
	mens = "falta" + cal
else:
	cal = pg-p
	mens = "troco de" + cal
	
print(mens)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    cal = p-g
NameError: name 'g' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 00:53:22) 
-- CODE:
p = float(input("preco:"))
pg = float(input("pagamento:"))
if(p > pg):
	cal = p-g
	mens = ("falta" + cal)
else:
	cal = pg-p
	mens = ("troco de" + cal)
	
print(mens)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    cal = p-g
NameError: name 'g' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 00:54:41) 
-- CODE:
p = float(input("preco:"))
pg = float(input("pagamento:"))
if(p > pg):
	cal = float(p-g)
	mens = ("falta" + cal)
else:
	cal = float(pg-p)
	mens = ("troco de" + cal)
	
print(mens)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    cal = float(p-g)
NameError: name 'g' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 00:55:22) 
-- CODE:
p = float(input("preco:"))
pg = float(input("pagamento:"))
if(p > pg):
	cal = float(p-g)
	mens = float("falta" + cal)
else:
	cal = float(pg-p)
	mens = float("troco de" + cal)
	
print(mens)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    cal = float(p-g)
NameError: name 'g' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:02:08) 
-- CODE:
p = float(input("preco:"))
pg = float(input("pagamento:"))
if(p > pg):
	cal = float(p-g)
	mens = float("falta" + cal)
else:
	cal = float(pg-p)
	mens = float("troco de" + cal)
	
print(mens)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    cal = float(p-g)
NameError: name 'g' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:02:52) 
-- CODE:
p = float(input("preco:"))
pg = float(input("pagamento:"))
if(p > pg):
	cal = float(p-g)
	mens ="falta", cal
else:
	cal = float(pg-p)
	mens = "troco de", cal
	
print(mens)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    cal = float(p-g)
NameError: name 'g' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:05:41) 
-- CODE:
p = float(input("preco:"))
pg = float(input("pagamento:"))
if(p > pg):
	cal = (p-g)
print("falta", cal)
else:
	cal =(pg-p)
print("troco de", cal)
	

	
-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:06:03) 
-- CODE:
p = float(input("preco:"))
pg = float(input("pagamento:"))
if(p > pg):
	cal = (p-g)
   print("falta", cal)
else:
	cal =(pg-p)
   print("troco de", cal)
	

	
-- ERROR:
File "XXXX", line 5
    print("falta", cal)
                      ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:24:32) 
-- CODE:
p = float(input("preco:"))
pg = float(input("pagamento:"))
if(p > pg):
	cal = (p-g)
   print("falta", cal)
else:
	cal =(pg-p)
   print("troco de", cal)
	

	
-- ERROR:
File "XXXX", line 5
    print("falta", cal)
                      ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:40:03) 
-- CODE:
p = float(input("preco:"))
pg = float(input("pagamento:"))
if(p > pg):
   print("falta", p-pg)
else:
   print("troco de", pg-p )
	

	
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:40:18) 
-- CODE:
p = float(input("preco:"))
pg = float(input("pagamento:"))
if(p > pg):
   print("falta", p-pg)
else:
   print("troco de", pg-p )
	

	
-- EXECUTION TIME:
0.140151
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:40:22) 
-- CODE:
p = float(input("preco:"))
pg = float(input("pagamento:"))
if(p > pg):
   print("falta", p-pg)
else:
   print("troco de", pg-p )
	

	
-- EXECUTION TIME:
0.207894
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:40:22) 
-- CODE:
p = float(input("preco:"))
pg = float(input("pagamento:"))
if(p > pg):
   print("falta", p-pg)
else:
   print("troco de", pg-p )
	

	
-- EXECUTION TIME:
0.21636
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
falta 26.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:40:23) 
-- CODE:
p = float(input("preco:"))
pg = float(input("pagamento:"))
if(p > pg):
   print("falta", p-pg)
else:
   print("troco de", pg-p )
	

	
-- EXECUTION TIME:
0.140649
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:41:51) 
-- CODE:
p = float(input("preco:"))
pg = float(input("pagamento:"))
if(p > pg):
   print("falta", round(p-pg, 2))
else:
   print("troco de",round(pg-p, 2))
	

	
-- EXECUTION TIME:
0.192735
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:41:53) 
-- CODE:
p = float(input("preco:"))
pg = float(input("pagamento:"))
if(p > pg):
   print("falta", round(p-pg, 2))
else:
   print("troco de",round(pg-p, 2))
	

	
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:43:02) 
-- CODE:
p = float(input("preco:"))
pg = float(input("pagamento:"))
if(p > pg):
   print("falta",round(p-pg, 2))
else:
   print("troco de",round(pg-p, 2))
	

	
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:43:53) 
-- CODE:
p = float(input("preco:"))
pg = float(input("pagamento:"))
if(p > pg):
   print("falta",round(p-pg, 2))
else:
   print("Troco de",round(pg-p, 2))
	

	
-- EXECUTION TIME:
0.178269
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:44:00) 
-- CODE:
p = float(input("preco:"))
pg = float(input("pagamento:"))
if(p > pg):
   print("Falta",round(p-pg, 2))
else:
   print("Troco de",round(pg-p, 2))
	

	
-- EXECUTION TIME:
0.132996
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
