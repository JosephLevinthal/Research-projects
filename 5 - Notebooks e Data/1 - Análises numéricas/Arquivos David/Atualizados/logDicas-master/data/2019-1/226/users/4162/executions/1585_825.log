== TEST (2019-03-24 11:34:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r=int(input("insira o raio:  "))
from math import *
valor= pi
print(pi)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    r=int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 11:36:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r=int(input("insira o raio:  "))
from math import *
valor= pi
a= valor*(r**2)
v=(4/3)*valor*(r**2)
print(round(a,3))
print(round(v,3))



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    r=int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 11:37:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r=int(input("insira o raio:  "))
from math import *
valor= pi
a= valor*(r**2)
v=(4/3)*valor*(r**2)
print(round(a,3))
print(round(v,3))



-- EXECUTION TIME:
0.205838
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1585/825/main.py", line 4, in <module>
    r=int(input())
ValueError: invalid literal for int() with base 10: '4.5'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 11:46:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r=int(input("insira o raio:  "))
from math import *
valor= pi
a= valor*(r**2)
v=(4/3)*valor*(r**2)
print(round(a,3))
print(round(v,3))



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    r=int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 11:46:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r=int(input("insira o raio:  "))
from math import *
valor= pi
a= valor*(r**2)
v=(4/3)*valor*(r**3)
print(round(a,3))
print(round(v,3))



-- EXECUTION TIME:
0.179965
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1585/825/main.py", line 4, in <module>
    r=int(input())
ValueError: invalid literal for int() with base 10: '4.5'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 11:46:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r=int(input("insira o raio:  "))
from math import *
valor= pi
a= valor*(r**2)
v=(4/3)*valor*(r**3)
print(round(a,3))
print(round(v,3))



-- EXECUTION TIME:
0.132045
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1585/825/main.py", line 4, in <module>
    r=int(input())
ValueError: invalid literal for int() with base 10: '4.5'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 11:46:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r=int(input("insira o raio:  "))
from math import *
valor= pi
a= valor*(r**2)
v=(4/3)*valor*(r**3)
print(round(a,3))
print(round(v,3))



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    r=int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 11:49:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r=int(input("insira o raio:  "))
from math import *
valor= pi
a= valor*(r**2)
v=(4/3)*valor*(r**3)
print(round(a,3))
print(v)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    r=int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 11:49:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r=int(input("insira o raio:  "))
from math import *
valor= pi
a= valor*(r**2)
v=(4/3)*valor*(r**3)
print(round(a,3))
print(round(v,4))



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    r=int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 11:50:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r=int(input("insira o raio:  "))
from math import *
valor= pi
a= valor*(r**2)
v=(4/3)*valor*(r**3)
print(round(a,3))
print(round(v,3))



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    r=int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 11:50:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r=int(input("insira o raio:  "))
from math import *
valor= pi
a= valor*(r**2)
v=(4/3)*valor*(r**3)
print(round(a,3))
print(round(v,3))



-- EXECUTION TIME:
0.164237
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1585/825/main.py", line 4, in <module>
    r=int(input())
ValueError: invalid literal for int() with base 10: '4.5'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 11:50:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r=int(input("insira o raio:  "))
from math import *
valor= pi
a= valor*(r**2)
v=(4/3)*valor*(r**3)
print(round(a,3))
print(round(v,3))



-- EXECUTION TIME:
0.124929
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1585/825/main.py", line 4, in <module>
    r=int(input())
ValueError: invalid literal for int() with base 10: '4.5'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 11:51:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r=int(input("insira o raio:  "))
from math import *
valor= pi
a= valor*(r**2)
v=(4/3)*valor*(r**3)
print(round(a,3))
print(round(v,3))



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    r=int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 11:51:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r=int(input("insira o raio:  "))
from math import *
valor= pi
a= valor*(r**2)
v=(4/3)*valor*(r**3)
print(round(a,3))
print(round(v,3))



-- EXECUTION TIME:
0.174123
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1585/825/main.py", line 4, in <module>
    r=int(input())
ValueError: invalid literal for int() with base 10: '4.5'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 11:52:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r=int(input("insira o raio:  "))
from math import *
val= pi
a= val*(r**2)
v=(4/3)*val*(r**3)
print(round(a,3))
print(round(v,3))



-- EXECUTION TIME:
0.19559
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1585/825/main.py", line 4, in <module>
    r=int(input())
ValueError: invalid literal for int() with base 10: '4.5'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 11:52:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r=float(input("insira o raio:  "))
from math import *
val= pi
a= val*(r**2)
v=(4/3)*val*(r**3)
print(round(a,3))
print(round(v,3))



-- EXECUTION TIME:
0.206868
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.617
381.704
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.388
7871.076
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
