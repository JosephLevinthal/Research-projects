== TEST (2019-04-25 11:27:50) 
-- CODE:
ce= float(input("insira o consumo de energia (em kWh): "))
ti= float(input("tipo de instalacao (R para residências, I para indústrias, e C para comércios): ")).upper()
print("Entradas:",X "kWh","e tipo" Y)

-- ERROR:
File "XXXX", line 3
    print("Entradas:",X "kWh","e tipo" Y)
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:28:11) 
-- CODE:
ce= float(input("insira o consumo de energia (em kWh): "))
ti= float(input("tipo de instalacao (R para residências, I para indústrias, e C para comércios): ")).upper()
print("Entradas:",X,"kWh","e tipo" Y)

-- ERROR:
File "XXXX", line 3
    print("Entradas:",X,"kWh","e tipo" Y)
                                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:28:29) 
-- CODE:
ce= float(input("insira o consumo de energia (em kWh): "))
ti= float(input("tipo de instalacao (R para residências, I para indústrias, e C para comércios): ")).upper()
print("Entradas:",ce,"kWh","e tipo" ti)

-- ERROR:
File "XXXX", line 3
    print("Entradas:",ce,"kWh","e tipo" ti)
                                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:30:20) 
-- CODE:
ce= float(input("insira o consumo de energia (em kWh): "))
ti= float(input("tipo de instalacao (R para residências, I para indústrias, e C para comércios): ")).upper()
print("Entradas:",ce,"kWh","e tipo",ti)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    ti= float(input()).upper()
ValueError: could not convert string to float: 'I'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:31:50) 
-- CODE:
ce= float(input("insira o consumo de energia (em kWh): "))
ti= float(input("tipo de instalacao (R para residencias, I para industrias, e C para comercios): ")).upper()
print("Entradas:",ce,"kWh","e tipo",ti)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    ti= float(input()).upper()
ValueError: could not convert string to float: 'I'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:32:05) 
-- CODE:
ce= float(input("insira o consumo de energia (em kWh): "))
ti= input("tipo de instalacao (R para residencias, I para industrias, e C para comercios): ")).upper()
print("Entradas:",ce,"kWh","e tipo",ti)

-- ERROR:
File "XXXX", line 2
    ti= input()).upper()
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:32:12) 
-- CODE:
ce= float(input("insira o consumo de energia (em kWh): "))
ti= input("tipo de instalacao (R para residencias, I para industrias, e C para comercios): ").upper()
print("Entradas:",ce,"kWh","e tipo",ti)

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:33:33) 
-- CODE:
ce= float(input("insira o consumo de energia (em kWh): "))
ti= input("tipo de instalacao (R para residencias, I para industrias, e C para comercios): ").upper()
print("Entradas:",ce,"kWh","e tipo",ti)
if (ce>0) and ((ti=="R")or(ti=="I")or(ti=="C")):
	if (ce<=500)and(ti=="R")
		print("Valor total: R$",(0.44*ce))
-- ERROR:
File "XXXX", line 5
    if (ce<=500)and(ti=="R")
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:33:45) 
-- CODE:
ce= float(input("insira o consumo de energia (em kWh): "))
ti= input("tipo de instalacao (R para residencias, I para industrias, e C para comercios): ").upper()
print("Entradas:",ce,"kWh","e tipo",ti)
if (ce>0) and ((ti=="R")or(ti=="I")or(ti=="C")):
	if (ce<=500)and(ti=="R"):
		print("Valor total: R$",(0.44*ce))
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:38:53) 
-- CODE:
ce= float(input("insira o consumo de energia (em kWh): "))
ti= input("tipo de instalacao (R para residencias, I para industrias, e C para comercios): ").upper()
print("Entradas:",ce,"kWh","e tipo",ti)
if (ce>0) and ((ti=="R")or(ti=="I")or(ti=="C")):
	if (ce<=500)and(ti=="R"):
		print("Valor total: R$",(0.44*ce))
	elif (ce>500)and(ti=="R"):
		print("Valor total: R$",(0.65*ce))
	elif (ce<=1000)and(ti=="C"):
		print("Valor total: R$",(0.55*ce))
	elif (ce>1000)and(ti=="C"):
		print("Valor total: R$",(0.60*ce))
	elif (ce<=5000)and(ti=="I"):
		print("Valor total: R$",(0.55*ce))
	elif (ce>5000)and(ti=="I"):
		print("Valor total: R$",(0.60*ce))
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:39:36) 
-- CODE:
ce= float(input("insira o consumo de energia (em kWh): "))
ti= input("tipo de instalacao (R para residencias, I para industrias, e C para comercios): ").upper()
print("Entradas:",ce,"kWh","e tipo",ti)
if (ce>0) and ((ti=="R")or(ti=="I")or(ti=="C")):
	if (ce<=500)and(ti=="R"):
		print("Valor total: R$",(0.44*ce))
	elif (ce>500)and(ti=="R"):
		print("Valor total: R$",(0.65*ce))
	elif (ce<=1000)and(ti=="C"):
		print("Valor total: R$",(0.55*ce))
	elif (ce>1000)and(ti=="C"):
		print("Valor total: R$",(0.60*ce))
	elif (ce<=5000)and(ti=="I"):
		print("Valor total: R$",(0.55*ce))
	elif (ce>5000)and(ti=="I"):
		print("Valor total: R$",(0.60*ce))
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:39:50) 
-- CODE:
ce= float(input("insira o consumo de energia (em kWh): "))
ti= input("tipo de instalacao (R para residencias, I para industrias, e C para comercios): ").upper()
print("Entradas:",ce,"kWh","e tipo",ti)
if (ce>0) and ((ti=="R")or(ti=="I")or(ti=="C")):
	if (ce<=500)and(ti=="R"):
		print("Valor total: R$",(0.44*ce))
	elif (ce>500)and(ti=="R"):
		print("Valor total: R$",(0.65*ce))
	elif (ce<=1000)and(ti=="C"):
		print("Valor total: R$",(0.55*ce))
	elif (ce>1000)and(ti=="C"):
		print("Valor total: R$",(0.60*ce))
	elif (ce<=5000)and(ti=="I"):
		print("Valor total: R$",(0.55*ce))
	elif (ce>5000)and(ti=="I"):
		print("Valor total: R$",(0.60*ce))
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:39:51) 
-- CODE:
ce= float(input("insira o consumo de energia (em kWh): "))
ti= input("tipo de instalacao (R para residencias, I para industrias, e C para comercios): ").upper()
print("Entradas:",ce,"kWh","e tipo",ti)
if (ce>0) and ((ti=="R")or(ti=="I")or(ti=="C")):
	if (ce<=500)and(ti=="R"):
		print("Valor total: R$",(0.44*ce))
	elif (ce>500)and(ti=="R"):
		print("Valor total: R$",(0.65*ce))
	elif (ce<=1000)and(ti=="C"):
		print("Valor total: R$",(0.55*ce))
	elif (ce>1000)and(ti=="C"):
		print("Valor total: R$",(0.60*ce))
	elif (ce<=5000)and(ti=="I"):
		print("Valor total: R$",(0.55*ce))
	elif (ce>5000)and(ti=="I"):
		print("Valor total: R$",(0.60*ce))
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.176755
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
insira o consumo de energia (em kWh): tipo de instalacao (R para residencias, I para industrias, e C para comercios): Entradas: -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
insira o consumo de energia (em kWh): tipo de instalacao (R para residencias, I para industrias, e C para comercios): Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:39:52) 
-- CODE:
ce= float(input("insira o consumo de energia (em kWh): "))
ti= input("tipo de instalacao (R para residencias, I para industrias, e C para comercios): ").upper()
print("Entradas:",ce,"kWh","e tipo",ti)
if (ce>0) and ((ti=="R")or(ti=="I")or(ti=="C")):
	if (ce<=500)and(ti=="R"):
		print("Valor total: R$",(0.44*ce))
	elif (ce>500)and(ti=="R"):
		print("Valor total: R$",(0.65*ce))
	elif (ce<=1000)and(ti=="C"):
		print("Valor total: R$",(0.55*ce))
	elif (ce>1000)and(ti=="C"):
		print("Valor total: R$",(0.60*ce))
	elif (ce<=5000)and(ti=="I"):
		print("Valor total: R$",(0.55*ce))
	elif (ce>5000)and(ti=="I"):
		print("Valor total: R$",(0.60*ce))
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.142498
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:39:57) 
-- CODE:
ce= float(input("insira o consumo de energia (em kWh): "))
ti= input("tipo de instalacao (R para residencias, I para industrias, e C para comercios): ").upper()
print("Entradas:",ce,"kWh","e tipo",ti)
if (ce>0) and ((ti=="R")or(ti=="I")or(ti=="C")):
	if (ce<=500)and(ti=="R"):
		print("Valor total: R$",(0.44*ce))
	elif (ce>500)and(ti=="R"):
		print("Valor total: R$",(0.65*ce))
	elif (ce<=1000)and(ti=="C"):
		print("Valor total: R$",(0.55*ce))
	elif (ce>1000)and(ti=="C"):
		print("Valor total: R$",(0.60*ce))
	elif (ce<=5000)and(ti=="I"):
		print("Valor total: R$",(0.55*ce))
	elif (ce>5000)and(ti=="I"):
		print("Valor total: R$",(0.60*ce))
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:41:09) 
-- CODE:
ce= float(input("insira o consumo de energia (em kWh): "))
ti= input("tipo de instalacao (R para residencias, I para industrias, e C para comercios): ").upper()
print("Entradas:",ce,"kWh","e tipo",ti)
if (ce>0) and ((ti=="R")or(ti=="I")or(ti=="C")):
	if (ce<=500)and(ti=="R"):
		print("Valor total: R$",(0.44*ce))
	elif (ce>500)and(ti=="R"):
		print("Valor total: R$",(0.65*ce))
	elif (ce<=1000)and(ti=="C"):
		print("Valor total: R$",(0.55*ce))
	elif (ce>1000)and(ti=="C"):
		print("Valor total: R$",(0.60*ce))
	elif (ce<=5000)and(ti=="I"):
		print("Valor total: R$",(0.55*ce))
	elif (ce>5000)and(ti=="I"):
		print("Valor total: R$",(0.60*ce))
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:41:59) 
-- CODE:
ce= float(input("insira o consumo de energia (em kWh): "))
ti= input("tipo de instalacao (R para residencias, I para industrias, e C para comercios): ").upper()
print("Entradas:",ce,"kWh","e tipo",ti)
if (ce>0) and ((ti=="R")or(ti=="I")or(ti=="C")):
	if (ce<=500)and(ti=="R"):
		print("Valor total: R$",(0.44*ce))
	elif (ce>500)and(ti=="R"):
		print("Valor total: R$",(0.65*ce))
	elif (ce<=1000)and(ti=="C"):
		print("Valor total: R$",(0.55*ce))
	elif (ce>1000)and(ti=="C"):
		print("Valor total: R$",(0.60*ce))
	elif (ce<=5000)and(ti=="I"):
		print("Valor total: R$",(0.55*ce))
	elif (ce>5000)and(ti=="I"):
		print("Valor total: R$",(0.60*ce))
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.195459
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:43:14) 
-- CODE:
ce= float(input("insira o consumo de energia (em kWh): "))
ti= input("tipo de instalacao (R para residencias, I para industrias, e C para comercios): ").upper()
print("Entradas:",ce,"kWh","e tipo",ti)
if (ce>0) and ((ti=="R")or(ti=="I")or(ti=="C")):
	if (ce<=500)and(ti=="R"):
		print("Valor total: R$",round((0.44*ce),2))
	elif (ce>500)and(ti=="R"):
		print("Valor total: R$",round((0.65*ce),2))
	elif (ce<=1000)and(ti=="C"):
		print("Valor total: R$",round((0.55*ce),2))
	elif (ce>1000)and(ti=="C"):
		print("Valor total: R$",round((0.60*ce),2))
	elif (ce<=5000)and(ti=="I"):
		print("Valor total: R$",(0.55*ce))
	elif (ce>5000)and(ti=="I"):
		print("Valor total: R$",(0.60*ce))
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:43:39) 
-- CODE:
ce= float(input("insira o consumo de energia (em kWh): "))
ti= input("tipo de instalacao (R para residencias, I para industrias, e C para comercios): ").upper()
print("Entradas:",ce,"kWh","e tipo",ti)
if (ce>0) and ((ti=="R")or(ti=="I")or(ti=="C")):
	if (ce<=500)and(ti=="R"):
		print("Valor total: R$",round((0.44*ce),2))
	elif (ce>500)and(ti=="R"):
		print("Valor total: R$",round((0.65*ce),2))
	elif (ce<=1000)and(ti=="C"):
		print("Valor total: R$",round((0.55*ce),2))
	elif (ce>1000)and(ti=="C"):
		print("Valor total: R$",round((0.60*ce),2))
	elif (ce<=5000)and(ti=="I"):
		print("Valor total: R$",(0.55*ce))
	elif (ce>5000)and(ti=="I"):
		print("Valor total: R$",(0.60*ce))
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.161935
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 22:20:03) 
-- CODE:
ce= float(input("insira o consumo de energia (em kWh): "))
ti= input("tipo de instalacao (R para residencias, I para industrias, e C para comercios): ").upper()
print("Entradas:",ce,"kWh","e tipo",ti)
if (ce>0) and ((ti=="R")or(ti=="I")or(ti=="C")):
	if (ce<=500)and(ti=="R"):
		print("Valor total: R$",round((0.44*ce),2))
	elif (ce>500)and(ti=="R"):
		print("Valor total: R$",round((0.65*ce),2))
	elif (ce<=1000)and(ti=="C"):
		print("Valor total: R$",round((0.55*ce),2))
	elif (ce>1000)and(ti=="C"):
		print("Valor total: R$",round((0.60*ce),2))
	elif (ce<=5000)and(ti=="I"):
		print("Valor total: R$",(0.55*ce))
	elif (ce>5000)and(ti=="I"):
		print("Valor total: R$",(0.60*ce))
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 15:49:36) 
-- CODE:
ce= float(input("insira o consumo de energia (em kWh): "))
ti= input("tipo de instalacao (R para residencias, I para industrias, e C para comercios): ").upper()
print("Entradas:",ce,"kWh","e tipo",ti)
if (ce>0) and ((ti=="R")or(ti=="I")or(ti=="C")):
	if (ce<=500)and(ti=="R"):
		print("Valor total: R$",round((0.44*ce),2))
	elif (ce>500)and(ti=="R"):
		print("Valor total: R$",round((0.65*ce),2))
	elif (ce<=1000)and(ti=="C"):
		print("Valor total: R$",round((0.55*ce),2))
	elif (ce>1000)and(ti=="C"):
		print("Valor total: R$",round((0.60*ce),2))
	elif (ce<=5000)and(ti=="I"):
		print("Valor total: R$",(0.55*ce))
	elif (ce>5000)and(ti=="I"):
		print("Valor total: R$",(0.60*ce))
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.175125
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:58:11) 
-- CODE:
ce= float(input("insira o consumo de energia (em kWh): "))
ti= input("tipo de instalacao (R para residencias, I para industrias, e C para comercios): ").upper()
print("Entradas:",ce,"kWh","e tipo",ti)
if (ce>0) and ((ti=="R")or(ti=="I")or(ti=="C")):
	if (ce<=500)and(ti=="R"):
		print("Valor total: R$",round((0.44*ce),2))
	elif (ce>500)and(ti=="R"):
		print("Valor total: R$",round((0.65*ce),2))
	elif (ce<=1000)and(ti=="C"):
		print("Valor total: R$",round((0.55*ce),2))
	elif (ce>1000)and(ti=="C"):
		print("Valor total: R$",round((0.60*ce),2))
	elif (ce<=5000)and(ti=="I"):
		print("Valor total: R$",(0.55*ce))
	elif (ce>5000)and(ti=="I"):
		print("Valor total: R$",(0.60*ce))
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
