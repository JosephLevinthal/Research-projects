== TEST (2019-04-28 12:17:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if( (b > a) or (x >= a) and (x <= b) ):
	if(( x >= a ) and ( x <= b)):
		print( x, "pertence ao intervalo ", a,"," b )
		

-- ERROR:
File "XXXX", line 10
    print( x, "pertence ao intervalo ", a,"," b )
                                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 12:17:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if( (b > a) or (x >= a) and (x <= b) ):
	if(( x >= a ) and ( x <= b)):
		print( x,"pertence ao intervalo ", a,"," b )
		

-- ERROR:
File "XXXX", line 10
    print( x,"pertence ao intervalo ", a,"," b )
                                             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 12:17:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if( (b > a) or (x >= a) and (x <= b) ):
	if(( x >= a ) and ( x <= b)):
		print( x, "pertence ao intervalo ", a"," b )
		

-- ERROR:
File "XXXX", line 10
    print( x, "pertence ao intervalo ", a"," b )
                                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 12:18:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if( (b > a) or (x >= a) and (x <= b) ):
	if(( x >= a ) and ( x <= b)):
		print( x, "pertence ao intervalo ", a,"," b )
		

-- ERROR:
File "XXXX", line 10
    print( x, "pertence ao intervalo ", a,"," b )
                                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 12:18:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if( (b > a) or (x >= a) and (x <= b) ):
	if(( x >= a ) and ( x <= b)):
		print( x, "pertence ao intervalo ", a, "," b )
		

-- ERROR:
File "XXXX", line 10
    print( x, "pertence ao intervalo ", a, "," b )
                                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 12:18:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if( (b > a) or (x >= a) and (x <= b) ):
	if(( x >= a ) and ( x <= b)):
		print( x, "pertence ao intervalo ", a, ",", b )
		

-- ERROR:
File "XXXX", line 10
    print( x, "pertence ao intervalo ", a, "," b )
                                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 12:23:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if( (b > a) or (x >= a) and (x <= b) ):
	if(( x >= a ) and ( x <= b)):
		print( x, "pertence ao intervalo ", a, ",", b )
	elif( (x != a) and (x < a) or (x != b) and (x > b)):
		print(x, "nao pertence ao intervalo ", a, ",", b)

else:
	print("Entradas ", a, "e", b, "invalidas")
		

-- OUTPUT:
2.0 nao pertence ao intervalo  3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 12:23:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if( (b > a) or (x >= a) and (x <= b) ):
	if(( x >= a ) and ( x <= b)):
		print( x, "pertence ao intervalo ", a, ",", b )
	elif( (x != a) and (x < a) or (x != b) and (x > b)):
		print(x, "nao pertence ao intervalo ", a, ",", b)

else:
	print("Entradas ", a, "e", b, "invalidas")
		

-- OUTPUT:
2.0 nao pertence ao intervalo  3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 12:23:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if( (b > a) or (x >= a) and (x <= b) ):
	if(( x >= a ) and ( x <= b)):
		print( x, "pertence ao intervalo ", a, ",", b )
	elif( (x != a) and (x < a) or (x != b) and (x > b)):
		print(x, "nao pertence ao intervalo ", a, ",", b)

else:
	print("Entradas ", a, "e", b, "invalidas")
		

-- EXECUTION TIME:
0.205872
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo  3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas  6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo  1.1 , 22.2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
