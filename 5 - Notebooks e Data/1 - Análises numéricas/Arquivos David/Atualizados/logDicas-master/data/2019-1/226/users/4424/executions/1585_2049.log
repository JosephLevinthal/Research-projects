== TEST (2019-03-28 10:03:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
X=int(input("dividendo"))
Y=int(input("divisor"))

total=dividendo//divisor

print()
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    total=dividendo//divisor
NameError: name 'dividendo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:08:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
X=int(input("dividendo"))
Y=int(input("divisor"))

total=X//Y

print()
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    total=dividendo//divisor
NameError: name 'dividendo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:08:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
X=int(input("dividendo"))
Y=int(input("divisor"))

total=X//Y

print(total)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:10:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
X=int(input("dividendo"))
Y=int(input("divisor"))

total=(X//Y,X%Y)

print(total)
-- OUTPUT:
(1, 3)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 10:10:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
X=int(input("dividendo"))
Y=int(input("divisor"))

total=(X//Y,X%Y)

print(total)
-- EXECUTION TIME:
0.123303
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
(1, 3)
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
(7, 0)
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
(173, 1)
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 10:11:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
X=int(input("dividendo"))
Y=int(input("divisor"))

total=(X//Y,X%Y)

print(total)
-- EXECUTION TIME:
0.145469
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
(1, 3)
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
(7, 0)
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
(173, 1)
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:14:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
X=int(input("dividendo"))
Y=int(input("divisor"))

dividendo=X
divisor=Y
quociente=X//Y
resto=X%Y

print(dividendo, divisor,quociente,resto)
-- OUTPUT:
8 5 1 3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 10:14:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
X=int(input("dividendo"))
Y=int(input("divisor"))

dividendo=X
divisor=Y
quociente=X//Y
resto=X%Y

print(dividendo, divisor,quociente,resto)
-- EXECUTION TIME:
0.187824
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
8 5 1 3
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
14 2 7 0
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
347 2 173 1
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
