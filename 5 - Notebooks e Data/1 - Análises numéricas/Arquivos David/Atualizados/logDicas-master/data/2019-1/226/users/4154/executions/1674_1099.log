== TEST (2019-05-01 15:14:41) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input('diga um numero: '))
b = float(input('diga um numero: '))
c = float(input('diga um numero: '))

print('Entradas: ',a,', ',b ',',c)

if (a>0) and (b>0) and (c>0) and (a<b+c) and (b<c+a) and (c<b+a):
	if (a == b) and (b == c):
		print('Tipo de triangulo: equilatero')
	elif (a == b) or (b == c) or ( a == c):
		print('Tipo de triangulo: isosceles')
	else:
		print('Tipo de triangulo: eescaleno')
else:
		print('Tipo de triangulo: invalido')
	
-- ERROR:
File "XXXX", line 7
    print('Entradas: ',a,', ',b ',',c)
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:15:14) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input('diga um numero: '))
b = float(input('diga um numero: '))
c = float(input('diga um numero: '))

print('Entradas: ',a,', ',b, ',',c)

if (a>0) and (b>0) and (c>0) and (a<b+c) and (b<c+a) and (c<b+a):
	if (a == b) and (b == c):
		print('Tipo de triangulo: equilatero')
	elif (a == b) or (b == c) or ( a == c):
		print('Tipo de triangulo: isosceles')
	else:
		print('Tipo de triangulo: eescaleno')
else:
		print('Tipo de triangulo: invalido')
	
-- OUTPUT:
Entradas:  2.0 ,  4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:15:36) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input('diga um numero: '))
b = float(input('diga um numero: '))
c = float(input('diga um numero: '))

print('Entradas: ',a,', ',b, ',',c)

if (a>0) and (b>0) and (c>0) and (a<b+c) and (b<c+a) and (c<b+a):
	if (a == b) and (b == c):
		print('Tipo de triangulo: equilatero')
	elif (a == b) or (b == c) or ( a == c):
		print('Tipo de triangulo: isosceles')
	else:
		print('Tipo de triangulo: eescaleno')
else:
		print('Tipo de triangulo: invalido')
	
-- OUTPUT:
Entradas:  2.0 ,  4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:15:49) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input('diga um numero: '))
b = float(input('diga um numero: '))
c = float(input('diga um numero: '))

print('Entradas: ',a,', ',b, ',',c)

if (a>0) and (b>0) and (c>0) and (a<b+c) and (b<c+a) and (c<b+a):
	if (a == b) and (b == c):
		print('Tipo de triangulo: equilatero')
	elif (a == b) or (b == c) or ( a == c):
		print('Tipo de triangulo: isosceles')
	else:
		print('Tipo de triangulo: eescaleno')
else:
		print('Tipo de triangulo: invalido')
	
-- OUTPUT:
Entradas:  2.0 ,  4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:16:30) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input('diga um numero: '))
b = float(input('diga um numero: '))
c = float(input('diga um numero: '))

print('Entradas: ',a,', ',b, ',',c)

if (a>0) and (b>0) and (c>0) and (a<b+c) and (b<c+a) and (c<b+a):
	if (a == b) and (b == c):
		print('Tipo de triangulo: equilatero')
	elif (a == b) or (b == c) or ( a == c):
		print('Tipo de triangulo: isosceles')
	else:
		print('Tipo de triangulo: eescaleno')
else:
		print('Tipo de triangulo: invalido')
	
-- OUTPUT:
Entradas:  2.0 ,  4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 15:16:49) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input('diga um numero: '))
b = float(input('diga um numero: '))
c = float(input('diga um numero: '))

print('Entradas: ',a,', ',b, ',',c)

if (a>0) and (b>0) and (c>0) and (a<b+c) and (b<c+a) and (c<b+a):
	if (a == b) and (b == c):
		print('Tipo de triangulo: equilatero')
	elif (a == b) or (b == c) or ( a == c):
		print('Tipo de triangulo: isosceles')
	else:
		print('Tipo de triangulo: escaleno')
else:
		print('Tipo de triangulo: invalido')
	
-- EXECUTION TIME:
0.190846
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 ,  4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 ,  4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 ,  2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
