== TEST (2019-05-09 11:08:21) 
-- CODE:
from math import*
a=radians(eval(input("insira o angulo: ")))
nt= int(input("insira o numero k de termos: "))
b=3
s=0
f=(a+((a**b)/factorial(b)))
while (s<nt):
	f+=(a+((a**b)/factorial(s)))
	s+=1
print(round(f,10))
	
-- OUTPUT:
0.1645526487
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:08:28) 
-- CODE:
from math import*
a=radians(eval(input("insira o angulo: ")))
nt= int(input("insira o numero k de termos: "))
b=3
s=0
f=(a+((a**b)/factorial(b)))
while (s<nt):
	f+=(a+((a**b)/factorial(s)))
	s+=1
print(round(f,10))
	
-- OUTPUT:
0.1645526487
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:08:57) 
-- CODE:
from math import*
a=radians(eval(input("insira o angulo: ")))
nt= int(input("insira o numero k de termos: "))
b=3
s=0
f=(a+((a**b)/factorial(b)))
while (s<nt):
	f+=(a+((a**b)/factorial(s)))
	s+=1
print(round(f,10))
	
-- OUTPUT:
0.1645526487
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:09:32) 
-- CODE:
from math import*
a=radians(eval(input("insira o angulo: ")))
nt= int(input("insira o numero k de termos: "))
b=3
s=0
f=(a-((a**b)/factorial(b)))
while (s<nt):
	f+=(a+((a**b)/factorial(s)))
	s+=1
	b+=2
print(round(f,10))
	
-- OUTPUT:
0.1645105938
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:12:29) 
-- CODE:
from math import*
a=radians(eval(input("insira o angulo: ")))
nt= int(input("insira o numero k de termos: "))
b=3
s=0
f=(a-((a**b)/factorial(b)))
while (s<nt):
	f+=f+((a**(b+2))/factorial(b+2))
	s+=1
	b+=2
print(round(f,10))
	
-- OUTPUT:
0.8771882729
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:12:38) 
-- CODE:
from math import*
a=radians(eval(input("insira o angulo: ")))
nt= int(input("insira o numero k de termos: "))
b=3
s=0
f=(a-((a**b)/factorial(b)))
while (s<nt):
	f+=f+((a**(b+2))/factorial(b+2))
	s+=1
	b+=2
print(round(f,10))
	
-- OUTPUT:
0.8771882729
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:12:42) 
-- CODE:
from math import*
a=radians(eval(input("insira o angulo: ")))
nt= int(input("insira o numero k de termos: "))
b=3
s=0
f=(a-((a**b)/factorial(b)))
while (s<nt):
	f+=f+((a**(b+2))/factorial(b+2))
	s+=1
	b+=2
print(round(f,10))
	
-- OUTPUT:
0.8771882729
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:13:58) 
-- CODE:
from math import*
a=radians(eval(input("insira o angulo: ")))
nt= int(input("insira o numero k de termos: "))
b=3
s=0
f=(a-((a**b)/factorial(b)))
while (s<nt):
	f+=(a-((a**b)/factorial(s)))
	s+=1
	b+=2
print(round(f,10))
	
-- OUTPUT:
0.164469351
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:14:06) 
-- CODE:
from math import*
a=radians(eval(input("insira o angulo: ")))
nt= int(input("insira o numero k de termos: "))
b=3
s=0
f=(a-((a**b)/factorial(b)))
while (s<nt):
	f+=(a-((a**b)/factorial(s)))
	s+=1
	b+=2
print(round(f,10))
	
-- OUTPUT:
0.164469351
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:16:39) 
-- CODE:
from math import*
a=radians(eval(input("insira o angulo: ")))
nt= int(input("insira o numero k de termos: "))
b=3
s=0
f=(a-((a**b)/factorial(b)))
while (s<nt):
	f+=(a-((a**b)/factorial(b)))
	s+=1
	b+=2
print(round(f,10))
	
-- OUTPUT:
0.1644865379
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:21:47) 
-- CODE:
from math import*
a=radians(eval(input("insira o angulo: ")))
nt= int(input("insira o numero k de termos: "))
b=1
s=0
f=((a**b)/factorial(b))
while (s<nt):
	f+=f
	s+=1
	b+=2
print(round(f,10))
	
-- OUTPUT:
0.877298169
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:25:25) 
-- CODE:
from math import*
a=radians(eval(input("insira o angulo: ")))
nt= int(input("insira o numero k de termos: "))
b=1
s=0
f=((a**b)/factorial(b))
while (s<nt):
	s+=1
	b+=2
	f=f-((a**b)/factorial(b))
	ft=f+((a**b)/factorial(b))
print(round(ft,10))
	
-- OUTPUT:
0.0274121333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:35:53) 
-- CODE:
from math import*
a=radians(eval(input("insira o angulo: ")))
nt= int(input("insira o numero k de termos: "))
b=0
i=0
f=((a**b)/factorial(b))
while (i<nt):
s+=((-a)**i)**b / factorial((2 * i + 1))
i = i + 1
b+=2
print(round(s,10))
	
-- ERROR:
File "XXXX", line 8
    s+=((-a)**i)**b / factorial((2 * i + 1))
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:36:24) 
-- CODE:
from math import*
a=radians(eval(input("insira o angulo: ")))
nt= int(input("insira o numero k de termos: "))
b=0
i=0
s=((-a)**i)**b / factorial((2 * i + 1))
while (i<nt):
s+= ((-a)**i)**b / factorial((2 * i + 1))
i = i + 1
b+=2
print(round(s,10))
	
-- ERROR:
File "XXXX", line 8
    s+= ((-a)**i)**b / factorial((2 * i + 1))
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:36:25) 
-- CODE:
from math import*
a=radians(eval(input("insira o angulo: ")))
nt= int(input("insira o numero k de termos: "))
b=0
i=0
s=((-a)**i)**b / factorial((2 * i + 1))
while (i<nt):
s+= ((-a)**i)**b / factorial((2 * i + 1))
i = i + 1
b+=2
print(round(s,10))
	
-- ERROR:
File "XXXX", line 8
    s+= ((-a)**i)**b / factorial((2 * i + 1))
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:36:27) 
-- CODE:
from math import*
a=radians(eval(input("insira o angulo: ")))
nt= int(input("insira o numero k de termos: "))
b=0
i=0
s=((-a)**i)**b / factorial((2 * i + 1))
while (i<nt):
s+= ((-a)**i)**b / factorial((2 * i + 1))
i = i + 1
b+=2
print(round(s,10))
	
-- ERROR:
File "XXXX", line 8
    s+= ((-a)**i)**b / factorial((2 * i + 1))
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:36:32) 
-- CODE:
from math import*
a=radians(eval(input("insira o angulo: ")))
nt= int(input("insira o numero k de termos: "))
b=0
i=0
s=((-a)**i)**b / factorial((2 * i + 1))
while (i<nt):
s+=((-a)**i)**b / factorial((2 * i + 1))
i = i + 1
b+=2
print(round(s,10))
	
-- ERROR:
File "XXXX", line 8
    s+=((-a)**i)**b / factorial((2 * i + 1))
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:36:33) 
-- CODE:
from math import*
a=radians(eval(input("insira o angulo: ")))
nt= int(input("insira o numero k de termos: "))
b=0
i=0
s=((-a)**i)**b / factorial((2 * i + 1))
while (i<nt):
s+=((-a)**i)**b / factorial((2 * i + 1))
i = i + 1
b+=2
print(round(s,10))
	
-- ERROR:
File "XXXX", line 8
    s+=((-a)**i)**b / factorial((2 * i + 1))
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:36:41) 
-- CODE:
from math import*
a=radians(eval(input("insira o angulo: ")))
nt= int(input("insira o numero k de termos: "))
b=0
i=0
s=((-a)**i)**b / factorial((2 * i + 1))
while (i<nt):
s=s+ ((-a)**i)**b / factorial((2 * i + 1))
i = i + 1
b+=2
print(round(s,10))
	
-- ERROR:
File "XXXX", line 8
    s=s+ ((-a)**i)**b / factorial((2 * i + 1))
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:36:50) 
-- CODE:
from math import*
a=radians(eval(input("insira o angulo: ")))
nt= int(input("insira o numero k de termos: "))
b=0
i=0
s=((-a)**i)**b / factorial((2 * i + 1))
while (i<nt):
	s=s+ ((-a)**i)**b / factorial((2 * i + 1))
	i = i + 1
	b+=2
print(round(s,10))
	
-- OUTPUT:
2.0001252689
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:37:48) 
-- CODE:
from math import*
a=radians(eval(input("insira o angulo: ")))
nt= int(input("insira o numero k de termos: "))
b=0
i=0
s=((-a)**i)**b / factorial((2 * i + 1))
while (i<nt):
	s=s+ (((-a)**i)**(2 * i + 1)) / factorial((2 * i + 1))
	i = i + 1
	b+=2
print(round(s,10))
	
-- OUTPUT:
1.9999965657
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:39:03) 
-- CODE:
from math import*
a=radians(eval(input("insira o angulo: ")))
nt= int(input("insira o numero k de termos: "))
b=0
i=0
s=(((-a)**i)**(2 * i + 1))/ factorial((2 * i + 1))
while (i<nt):
	s=s+ (((-a)**i)**(2 * i + 1)) / factorial((2 * i + 1))
	i = i + 1
	b+=2
print(round(s,10))
	
-- OUTPUT:
1.9999965657
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:46:17) 
-- CODE:
from math import*
a=radians(eval(input("insira o angulo: ")))
nt= int(input("insira o numero k de termos: "))
s=0
i=0
b=1
while (i<nt):
	s=s+((-1**i)*((a**b)/factorial((2*i+1)**3)))
	i = i + 1
	b = b+2
	
print(round(s,10))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    s=s+((-1**i)*((a**b)/factorial((2*i+1)**3)))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:47:35) 
-- CODE:
from math import*
a=radians(eval(input("insira o angulo: ")))
nt= int(input("insira o numero k de termos: "))
s=0
i=0
b=1
while (i<nt):
	s=x+((-1**i)*((a**b)/factorial((2*i+1)**3)))
	i = i + 1
	b = b+2
	
print(round(s,10))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    s=x+((-1**i)*((a**b)/factorial((2*i+1)**3)))
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:47:48) 
-- CODE:
from math import*
a=radians(eval(input("insira o angulo: ")))
nt= int(input("insira o numero k de termos: "))
s=0
i=0
b=1
while (i<nt):
	s=a+((-1**i)*((a**b)/factorial((2*i+1)**3)))
	i = i + 1
	b = b+2
	
print(round(s,10))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    s=a+((-1**i)*((a**b)/factorial((2*i+1)**3)))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:49:20) 
-- CODE:
from math import*
a=radians(eval(input("insira o angulo: ")))
nt= int(input("insira o numero k de termos: "))
s=0
i=0
b=1
while (i<nt):
	s=a+((-1**i)**((a**b)/factorial((2*i+1)**3)))
	i = i + 1
	b = b+2
	
print(round(s,10))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    s=a+((-1**i)**((a**b)/factorial((2*i+1)**3)))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:50:34) 
-- CODE:
from math import*
a=radians(eval(input("insira o angulo: ")))
nt= int(input("insira o numero k de termos: "))
s=0
i=0
b=1
while (i<nt):
	s=a+(((-1**i)**(a**b))/factorial((2*i+1)**3))
	i = i + 1
	b = b+2
	
print(round(s,10))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    s=a+(((-1**i)**(a**b))/factorial((2*i+1)**3))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:50:57) 
-- CODE:
from math import*
a=radians(eval(input("insira o angulo: ")))
nt= int(input("insira o numero k de termos: "))
s=0
i=0
b=1
while (i<nt):
	s=a+(((-1**i)**(a**b))/factorial((2*i+1)**3))
	i = i + 1
	b = b+2
	
print(round(s,10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    s=a+(((-1**i)**(a**b))/factorial((2*i+1)**3))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 12:52:52) 
-- CODE:
from math import*
x=radians(eval(input("insira o angulo: ")))
k= int(input("insira o numero k de termos: "))
s=0
i=1
snl=+1
while i<k:
	s=s+(snl*(x**i))/factorial(i)
	i=i+2
	snl=-snl*snl
print(s)	
-- OUTPUT:
0.027412133462982647
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 12:53:30) 
-- CODE:
from math import*
x=radians(eval(input("insira o angulo: ")))
k= int(input("insira o numero k de termos: "))
s=0
i=1
snl=+1
while i<k:
	s=s+(snl*(x**i))/factorial(i)
	i=i+2
	snl=-snl*snl
print(round(s,10))
-- OUTPUT:
0.0274121335
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 12:53:41) 
-- CODE:
from math import*
x=radians(eval(input("insira o angulo: ")))
k= int(input("insira o numero k de termos: "))
s=0
i=1
snl=+1
while i<k:
	s=s+(snl*(x**i))/factorial(i)
	i=i+2
	snl=-snl*snl
print(round(s,10))
-- OUTPUT:
0.0274121335
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 12:54:08) 
-- CODE:
from math import*
x=radians(eval(input("insira o angulo: ")))
k= int(input("insira o numero k de termos: "))
s=0
i=1
snl=+1
while i<k:
	s=s+(snl*(x**i))/factorial(i)
	i=i+2
	snl=-snl*snl
s1=s*10
print(round(s1,10))
-- OUTPUT:
0.2741213346
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 12:54:20) 
-- CODE:
from math import*
x=radians(eval(input("insira o angulo: ")))
k= int(input("insira o numero k de termos: "))
s=0
i=1
snl=+1
while i<k:
	s=s+(snl*(x**i))/factorial(i)
	i=i+2
	snl=-snl*snl
s1=s*10
print(round(s1,10))
-- OUTPUT:
0.2741213346
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 12:54:46) 
-- CODE:
from math import*
x=radians(eval(input("insira o angulo: ")))
k= int(input("insira o numero k de termos: "))
s=0
i=1
snl=+1
while i<k:
	s=s+(snl*(x**i))/factorial(i)
	i=i+2
	snl=-snl*snl
	print(s)
print(round(s1,10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    print(round(s1,10))
NameError: name 's1' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 12:55:02) 
-- CODE:
from math import*
x=radians(eval(input("insira o angulo: ")))
k= int(input("insira o numero k de termos: "))
s=0
i=1
snl=+1
while i<k:
	s=s+(snl*(x**i))/factorial(i)
	i=i+2
	snl=-snl*snl
	print(s)
print(round(s,10))
-- OUTPUT:
0.027415567780803774
0.027412133462982647
0.0274121335
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 12:55:26) 
-- CODE:
from math import*
x=radians(eval(input("insira o angulo: ")))
k= int(input("insira o numero k de termos: "))
s=0
i=1
snl=+1
while i<=k:
	s=s+(snl*(x**i))/factorial(i)
	i=i+2
	snl=-snl*snl
	print(s)
print(round(s,10))
-- OUTPUT:
0.027415567780803774
0.027412133462982647
0.02741213333391869
0.0274121333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 12:55:46) 
-- CODE:
from math import*
x=radians(eval(input("insira o angulo: ")))
k= int(input("insira o numero k de termos: "))
s=0
i=1
snl=+1
while i<k-1:
	s=s+(snl*(x**i))/factorial(i)
	i=i+2
	snl=-snl*snl
	print(s)
print(round(s,10))
-- OUTPUT:
0.027415567780803774
0.027412133462982647
0.0274121335
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 12:58:01) 
-- CODE:
from math import*
x=radians(eval(input("insira o angulo: ")))
k= int(input("insira o numero k de termos: "))
s=0
i=1
snl=+1
while i<k:
	s=s+(snl*(x**i))/factorial(i)
	i=i+2
	snl=-1*snl
	print(s)
print(round(s,10))
-- OUTPUT:
0.027415567780803774
0.027412133462982647
0.0274121335
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 13:00:38) 
-- CODE:
from math import*
x=radians(eval(input("insira o angulo: ")))
k= int(input("insira o numero k de termos: "))
s=0
i=1
snl=+1
while i<k:
	s=s+snl*((x**i)/factorial(i))
	i=i+2
	snl=-1*snl
print(round(s,10))
-- OUTPUT:
0.0274121335
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 13:05:01) 
-- CODE:
from math import*
x=radians(eval(input("insira o angulo: ")))
k= int(input("insira o numero k de termos: "))
s=0
i=1
snl=+1
prin(x)
while i<k:
	s=s+snl*((x**i)/factorial(i))
	i=i+2
	snl=-1*snl
print(round(s,10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    prin(x)
NameError: name 'prin' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 13:05:14) 
-- CODE:
from math import*
x=radians(eval(input("insira o angulo: ")))
k= int(input("insira o numero k de termos: "))
s=0
i=1
snl=+1
print(x)
while i<k:
	s=s+snl*((x**i)/factorial(i))
	i=i+2
	snl=-1*snl
print(round(s,10))
-- OUTPUT:
0.027415567780803774
0.0274121335
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 13:06:38) 
-- CODE:
from math import*
x=radians(eval(input("insira o angulo: ")))
k= int(input("insira o numero k de termos: "))
s=0
i=1
h=0
snl=+1
print(x)
while h<k:
	s=s+snl*((x**i)/factorial(i))
	i=i+2
	h=h+1
	snl=-1*snl
print(round(s,10))
-- OUTPUT:
0.027415567780803774
0.0274121336
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 13:09:20) 
-- CODE:
from math import*
x=radians(eval(input("insira o angulo: ")))
k= int(input("insira o numero k de termos: "))
s=0
i=1
h=0
snl=+1
print(x)
s=snl*((x**i)/factorial(i))
while h<k:
	s=s+snl*((x**i)/factorial(i))
	i=i+2
	h=h+1
	snl=-1*snl
print(round(s,10))
-- OUTPUT:
0.027415567780803774
0.0548277014
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 13:11:02) 
-- CODE:
from math import*
x=radians(eval(input("insira o angulo: ")))
k= int(input("insira o numero k de termos: "))
s=0
i=1
h=0
snl=+1
print(x)
s=snl*((x**i)/factorial(i))
while h<=k:
	s=s+snl*((x**i)/factorial(i))
	i=i+2
	h=h+1
	snl=-1*snl
print(round(s,10))
-- OUTPUT:
0.027415567780803774
0.0548277014
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 13:12:26) 
-- CODE:
from math import*
x=radians(eval(input("insira o angulo: ")))
k= int(input("insira o numero k de termos: "))
s=0
i=1
h=0
snl=+1
print(x)
while h<k:
	s=s+snl*((x**i)/factorial(i))
	i=i+2
	h=h+1
	snl=-1*snl
print(round(s,10))
-- OUTPUT:
0.027415567780803774
0.0274121336
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 13:12:38) 
-- CODE:
from math import*
x=radians(eval(input("insira o angulo: ")))
k= int(input("insira o numero k de termos: "))
s=0
i=1
h=0
snl=+1
print(x)
while h<k:
	s=s+snl*((x**i)/factorial(i))
	i=i+2
	h=h+1
	snl=-1*snl
print(round(s,10))
-- OUTPUT:
0.027415567780803774
0.0274121336
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 13:13:22) 
-- CODE:
from math import*
x=eval(input("insira o angulo: "))
k= int(input("insira o numero k de termos: "))
s=0
i=1
h=0
snl=+1
print(x)
while h<k:
	s=s+snl*((x**i)/factorial(i))
	i=i+2
	h=h+1
	snl=-1*snl
print(round(s,10))
-- OUTPUT:
1.5707963267948966
1.0000035426
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 13:13:53) 
-- CODE:
from math import*
x=eval(input("insira o angulo: "))
k= int(input("insira o numero k de termos: "))
s=0
i=1
h=0
snl=+1
while h<k:
	s=s+snl*((x**i)/factorial(i))
	i=i+2
	h=h+1
	snl=-1*snl
print(round(s,10))
-- OUTPUT:
1.0000035426
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 13:14:03) 
-- CODE:
from math import*
x=eval(input("insira o angulo: "))
k= int(input("insira o numero k de termos: "))
s=0
i=1
h=0
snl=+1
while h<k:
	s=s+snl*((x**i)/factorial(i))
	i=i+2
	h=h+1
	snl=-1*snl
print(round(s,10))
-- OUTPUT:
1.0000035426
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-09 13:14:11) 
-- CODE:
from math import*
x=eval(input("insira o angulo: "))
k= int(input("insira o numero k de termos: "))
s=0
i=1
h=0
snl=+1
while h<k:
	s=s+snl*((x**i)/factorial(i))
	i=i+2
	h=h+1
	snl=-1*snl
print(round(s,10))
-- EXECUTION TIME:
0.143249
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
1.0000035426
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-0.9998431014
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.8662952838
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 13:39:31) 
-- CODE:
from math import*
x=eval(input("insira o angulo: "))
k= int(input("insira o numero k de termos: "))
s=0
i=1
h=0
snl=+1
while h<k:
	s=s+snl*((x**i)/factorial(i))
	i=i+2
	h=h+1
	snl=-1*snl
print(round(s,10))
-- OUTPUT:
1.0000035426
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
