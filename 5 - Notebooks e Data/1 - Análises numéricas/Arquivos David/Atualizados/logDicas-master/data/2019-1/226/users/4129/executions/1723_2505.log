== TEST (2019-05-09 11:18:16) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0

while(s < k):
	ang = (-1*(x**(m+2))/(factorial(o+2))
	sen = sin(ang)
	s = s + 1
print(sen)
	
-- ERROR:
File "XXXX", line 12
    sen = sin(ang)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:18:26) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0

while(s < k):
	ang = (-1*(x**(m+2))/(factorial(o+2))
	seno = sin(ang)
	s = s + 1
print(sen)
	
-- ERROR:
File "XXXX", line 12
    seno = sin(ang)
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:18:41) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0

while(s < k):
	ang = (-1*(x**(m+2))/(factorial(o+2))
	
	s = s + 1
print(sen)
	
-- ERROR:
File "XXXX", line 13
    s = s + 1
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:18:52) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0

while(s < k):
	
	seno = sin(ang)
	s = s + 1
print(sen)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    seno = sin(ang)
NameError: name 'ang' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:19:03) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0

while(s < k):
	ang = (-1*(x**(m+2))/factorial(o+2)
	seno = sin(ang)
	s = s + 1
print(sen)
	
-- ERROR:
File "XXXX", line 12
    seno = sin(ang)
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:19:12) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0

while(s < k):
	ang = (x**(m+2)/factorial(o+2)
	seno = sin(ang)
	s = s + 1
print(sen)
	
-- ERROR:
File "XXXX", line 12
    seno = sin(ang)
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:19:22) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0

while(s < k):
	angulo = (x**(m+2)/factorial(o+2)
	seno = sin(angulo)
	s = s + 1
print(sen)
	
-- ERROR:
File "XXXX", line 12
    seno = sin(angulo)
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:19:40) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0

while(s < k):
	angulo = x
	seno = sin(angulo)
	s = s + 1
print(sen)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    print(sen)
NameError: name 'sen' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:19:50) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0

while(s < k):
	angulo = x**m+2
	seno = sin(angulo)
	s = s + 1
print(sen)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    print(sen)
NameError: name 'sen' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:20:11) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0

while(s < k):
	angulo = x**m+2/factorial(o+2)
	seno = sin(angulo)
	s = s + 1
print(sen)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    print(sen)
NameError: name 'sen' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:20:19) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0

while(s < k):
	angulo = (x**m+2)/factorial(o+2)
	seno = sin(angulo)
	s = s + 1
print(sen)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    print(sen)
NameError: name 'sen' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:20:35) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0

while(s < k):
	angulo = (x**m+2)/factorial(o+2)
	seno = sin(angulo)
	s = s + 1
print(sen0)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    print(sen0)
NameError: name 'sen0' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:20:50) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0

while(s < k):
	angulo = (x**m+2)/factorial(o+2)
	seno = sin(angulo)
	s = s + 1
print(seno)
	
-- OUTPUT:
0.5606186623683989
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:21:13) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0

while(s < k):
	angulo = -1*(x**m+2)/factorial(o+2)
	seno = sin(angulo)
	s = s + 1
print(seno)
	
-- OUTPUT:
-0.5606186623683989
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:21:18) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0

while(s < k):
	angulo = (-1*(x**m+2))/factorial(o+2)
	seno = sin(angulo)
	s = s + 1
print(seno)
	
-- OUTPUT:
-0.5606186623683989
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:21:55) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0

while(s < k):
	angulo = (x**m+2)/factorial(o+2)
	seno = sin(angulo)*(-1)
	s = s + 1
print(seno)
	
-- OUTPUT:
-0.5606186623683989
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:22:32) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0

while(s < k):
	angulo = (x**m+2)/factorial(o+2)
	angulo = angulo *(-1)
	seno = sin(angulo)
	s = s + 1
print(seno)
	
-- OUTPUT:
-0.5606186623683989
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:22:41) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0

while(s < k):
	angulo = (x**m+2)/factorial(o+2)
	angulo = angulo *(-1)
	seno = sin(angulo)
	s = s + 1
print(seno)
	
-- OUTPUT:
-0.5606186623683989
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:22:59) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0

while(s <= k):
	angulo = (x**m+2)/factorial(o+2)
	angulo = angulo 
	seno = sin(angulo)
	s = s + 1
print(seno)
	
-- OUTPUT:
0.5606186623683989
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:23:14) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 1

while(s < k):
	angulo = (x**m+2)/factorial(o+2)
	angulo = angulo 
	seno = sin(angulo)
	s = s + 1
print(seno)
	
-- OUTPUT:
0.5606186623683989
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:23:35) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 1

while(s < k):
	angulo = (x**m+2)/factorial(o+2)
	angulo = angulo 
	seno = sin(angulo)
	s = s + 1
print(seno)
	
-- OUTPUT:
0.5606186623683989
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:23:44) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 1

while(s < k):
	angulo = (x**m+2)/factorial(o+2)
	angulo = angulo 
	seno = sin(angulo)
	s = s + 1
print(seno)
	
-- OUTPUT:
0.5606186623683989
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:27:12) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 1

while(s < k):
	angulo = (-x**m+2)/factorial(o+2)
	angulo = angulo 
	seno = sin(angulo)
	s = s + 1
print(seno)
	
-- OUTPUT:
0.07147295335205016
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:27:26) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 1

while(s < k):
	angulo = (x**m+2)/factorial(o+2)
	angulo = angulo 
	seno = sin(angulo)
	s = s + 1
print(seno)
	
-- OUTPUT:
0.5606186623683989
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:27:58) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 1

while(s <= k):
	angulo = (x**m+2)/factorial(o+2)
	angulo = angulo 
	seno = sin(angulo)
	s = s + 1
print(seno)
	
-- OUTPUT:
0.5606186623683989
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:28:43) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 1

while(s <= k):
	angulo = (x**m+2)/factorial(o+2)
	angulo = angulo 
	
	s = s + 1
print(angulo)
	
-- OUTPUT:
0.5951327211324827
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:29:49) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0

while(s <= k):
	angulo = (x**m+2)/factorial(o+2)
	angulo = angulo 
	
	s = s + 1
print(angulo)
	
-- OUTPUT:
0.5951327211324827
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:31:01) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0

while(s < k):
	angulo = (x**m+2)/factorial(o+2)
	angulo = angulo 
	seno = sin(angulo)
	s = s + 1
print(seno)
	
-- OUTPUT:
0.5606186623683989
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:31:20) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0

while(s < k-1):
	angulo = (x**m+2)/factorial(o+2)
	angulo = angulo 
	seno = sin(angulo)
	s = s + 1
print(seno)
	
-- OUTPUT:
0.5606186623683989
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:32:01) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0

while(s < k):
	angulo = x-(x**m+2)/factorial(o+2)
	angulo = angulo 
	seno = sin(angulo)
	s = s + 1
print(seno)
	
-- OUTPUT:
0.8280741001892687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:32:08) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0

while(s < k):
	angulo = x-((x**m+2)/factorial(o+2))
	angulo = angulo 
	seno = sin(angulo)
	s = s + 1
print(seno)
	
-- OUTPUT:
0.8280741001892687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:32:22) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0

while(s < k):
	angulo = (x**m+2)/factorial(o+2)
	angulo = angulo 
	seno = sin(angulo)
	s = s + 1
print(seno)
	
-- OUTPUT:
0.5606186623683989
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:32:43) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0

while(s < k):
	angulo = (-1)*(x**m+2)/factorial(o+2)
	angulo = angulo 
	seno = sin(angulo)
	s = s + 1
print(seno)
	
-- OUTPUT:
-0.5606186623683989
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:33:32) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0

while(s < k):
	angulo = (-1)*(x**m+2)/factorial(o+2)
	angulo = angulo 
	
	s = s + 1
print(seno)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 15, in <module>
    print(seno)
NameError: name 'seno' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:33:47) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0

while(s < k):
	angulo = (-1)*(x**m+2)/factorial(o+2)
	angulo = angulo 
	
	s = s + 1
print(angulo)
	
-- OUTPUT:
-0.5951327211324827
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:34:06) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0

while(s < k):
	angulo = (-1)*(x**m+2)/factorial(o+2)
	angulo = angulo * -1
	
	s = s + 1
print(angulo)
	
-- OUTPUT:
0.5951327211324827
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:34:41) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0

while(s < k):
	angulo = (-1)*(x**m+2)/factorial(o+2)
	angulo = angulo * (-1)
	
	s = s + 1
print(angulo)
	
-- OUTPUT:
0.5951327211324827
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:35:42) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0

while(s < k):
	angulo = (x**m+2)/factorial(o+2)
	angulo = angulo * (-1)
	
	s = s + 1
print(angulo)
	
-- OUTPUT:
-0.5951327211324827
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:36:40) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0

while(s < k):
	angulo = (x**m)/factorial(o)
	angulo = angulo * (-1)
	m = m + 2
	o = o + 2
	s = s + 1
print(angulo)
	
-- OUTPUT:
-0.00016044118478735975
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:38:01) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0

while(s < k):
	angulo = ((x**m)/factorial(o)) * sinal
	angulo = angulo
	sinal = -sinal
	m = m + 2
	o = o + 2
	s = s + 1
print(angulo)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    angulo = ((x**m)/factorial(o)) * sinal
NameError: name 'sinal' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:38:19) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0
sinal = 1
while(s < k):
	angulo = ((x**m)/factorial(o)) * sinal
	angulo = angulo
	sinal = -sinal
	m = m + 2
	o = o + 2
	s = s + 1
print(angulo)
	
-- OUTPUT:
0.00016044118478735975
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:38:25) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0
sinal = 1
while(s < k):
	angulo = ((x**m)/factorial(o)) * sinal
	angulo = angulo
	sinal = -sinal
	m = m + 2
	o = o + 2
	s = s + 1
print(angulo)
	
-- OUTPUT:
0.00016044118478735975
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:38:30) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0
sinal = 1
while(s < k):
	angulo = ((x**m)/factorial(o)) * sinal
	angulo = angulo
	sinal = -sinal
	m = m + 2
	o = o + 2
	s = s + 1
print(angulo)
	
-- OUTPUT:
0.00016044118478735975
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:38:37) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0
sinal = 1
while(s < k):
	angulo = ((x**m)/factorial(o)) * sinal
	angulo = angulo
	sinal = -sinal
	m = m + 2
	o = o + 2
	s = s + 1
print(angulo)
	
-- OUTPUT:
0.00016044118478735975
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:38:42) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0
sinal = 1
while(s < k):
	angulo = ((x**m)/factorial(o)) * sinal
	angulo = angulo
	sinal = -sinal
	m = m + 2
	o = o + 2
	s = s + 1
print(angulo)
	
-- OUTPUT:
0.00016044118478735975
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:39:22) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0
sinal = 1
while(s < k):
	angulo = ((x**m)/factorial(o)) * sinal
	sinal = -sinal
	sen = sin(angulo)
	m = m + 2
	o = o + 2
	s = s + 1
print(sen)
	
-- OUTPUT:
0.00016044118409903034
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:39:53) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0
sinal = 1
while(s < k):
	angulo = ((x**m)/factorial(o)) * sinal
	sinal = -sinal
	sen = sin(angulo)
	m = m + 2
	o = o + 2
	s = s + 1
print(round(sen, 10)
	
-- ERROR:
File "XXXX", line 19
    
     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:39:56) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0
sinal = 1
while(s < k):
	angulo = ((x**m)/factorial(o)) * sinal
	sinal = -sinal
	sen = sin(angulo)
	m = m + 2
	o = o + 2
	s = s + 1
print(round(sen, 10))
	
-- OUTPUT:
0.0001604412
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-09 11:40:27) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0
sinal = 1

while(s < k):
	angulo = ((x**m)/factorial(o)) * sinal
	sinal = -sinal
	sen = sin(angulo)
	m = m + 2
	o = o + 2
	s = s + 1
print(round(sen, 10))
	
-- EXECUTION TIME:
0.143148
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
0.0001604412
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
0.004681737
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.0104943096
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:40:33) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0
sinal = 1

while(s < k):
	angulo = ((x**m)/factorial(o)) * sinal
	sinal = -sinal
	sen = sin(angulo)
	m = m + 2
	o = o + 2
	s = s + 1
print(round(sen, 10))
	
-- OUTPUT:
0.0001604412
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:41:30) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0
sinal = 1

while(s < k):
	angulo = ((x**m)/factorial(o))
	angulo = angulo + angulo
	sinal = -sinal
	sen = sin(angulo)
	m = m + 2
	o = o + 2
	s = s + 1
print(round(sen, 10))
	
-- OUTPUT:
0.0003208824
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:41:44) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0
sinal = 1

while(s < k):
	angulo = ((x**m)/factorial(o))
	angulo = angulo + angulo *sinal
	sinal = -sinal
	sen = sin(angulo)
	m = m + 2
	o = o + 2
	s = s + 1
print(round(sen, 10))
	
-- OUTPUT:
0.0003208824
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:42:07) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0
sinal = 1

while(s < k):
	angulo = ((x**m)/factorial(o))* sinal
	sinal = -sinal
	sen = sin(angulo)
	m = m + 2
	o = o + 2
	s = s + 1
print(round(sen, 10))
	
-- OUTPUT:
0.0001604412
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:42:28) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0
sinal = 1

while(s < k):
	angulo = ((x**m)/factorial(o))* sinal
	sinal = -sinal
	sen = sin(angulo)
	m = m + 2
	o = o + 2
	s = s + 1
print(round(sen, 10))
	
-- OUTPUT:
0.0001604412
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:42:43) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1
o = 1
s = 0
sinal = 1

while(s < k):
	angulo = ((x**m)/factorial(o))* sinal
	sinal = -sinal
	sen = sin(angulo)
	m = m + 2
	o = o + 2
	s = s + 1
print(round(sen, 10))
	
-- OUTPUT:
0.0001604412
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:47:32) 
-- CODE:
from math import*

x = eval(radians(input("Angulo em radianos:")))
k = int(input("Termos:"))

m = 1    #Potenciação
o = 1    #numero fatorado
s = 0  	#Termos
sinal = 1

while(s < k):
	angulo = ((x**m)/factorial(o))* sinal
	sinal = -sinal			
	sen = sin(angulo)
	m = m + 2
	o = o + 2
	s = s + 1
print(round(sen, 10))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    x = eval(radians(input()))
TypeError: must be real number, not str
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:47:55) 
-- CODE:
from math import*

x = radians(eval(input("Angulo em radianos:")))
k = int(input("Termos:"))

m = 1    #Potenciação
o = 1    #numero fatorado
s = 0  	#Termos
sinal = 1

while(s < k):
	angulo = ((x**m)/factorial(o))* sinal
	sinal = -sinal			
	sen = sin(angulo)
	m = m + 2
	o = o + 2
	s = s + 1
print(round(sen, 10))
	
-- OUTPUT:
0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 12:17:49) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1    #Potenciação
o = 1    #numero fatorado
s = 0  	#Termos
sinal = 1

while(s < k):
	angulo = ((x**m)/factorial(o))* sinal
	sinal = -1*sinal			
	sen = sin(angulo)
	m = m + 2
	o = o + 2
	s = s + 1
print(round(sen, 10))
	
-- OUTPUT:
0.0001604412
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 12:19:47) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1    #Potenciação
o = 1    #numero fatorado
s = 0  	#Termos
sinal = 1

while(s < k):
	angulo = ((x**m)/factorial(o))* sinal
	sinal = -1*sinal				
	m = m + 2
	o = o + 2
	s = s + 1
print(round(angulo, 10))
	
-- OUTPUT:
0.0001604412
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 12:20:39) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1    #Potenciação
o = 1    #numero fatorado
s = 1  	#Termos
sinal = 1

while(s < k):
	angulo = ((x**m)/factorial(o))* sinal
	sinal = -1*sinal			
	sen = sin(angulo)
	m = m + 2
	o = o + 2
	s = s + 1
print(round(sen, 10))
	
-- OUTPUT:
-0.004681737
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 12:20:49) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1    #Potenciação
o = 1    #numero fatorado
s = 1  	#Termos
sinal = 1

while(s < k):
	angulo = ((x**m)/factorial(o))* sinal
	sinal = -1*sinal			
	sen = sin(angulo)
	m = m + 2
	o = o + 2
	s = s + 1
print(round(sen, 10))
	
-- OUTPUT:
-0.004681737
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 12:21:07) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1    #Potenciação
o = 1    #numero fatorado
s = 0  	#Termos
sinal = 1

while(s < k):
	angulo = ((x**m)/factorial(o))* sinal
	sinal = -1*sinal			
	sen = sin(angulo)
	m = m + 2
	o = o + 2
	s = s + 1
print(round(sen, 10))
	
-- OUTPUT:
0.0001604412
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 12:21:25) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1    #Potenciação
o = 1    #numero fatorado
s = 0  	#Termos
sinal = 1

while(s < k):
	angulo = ((x**m)/factorial(o))* sinal
	sinal = -1*sinal			
	sen = sin(angulo)
	m = m + 2
	o = o + 2
	s = s + 1
	print(round(sen, 10))
	
-- OUTPUT:
1.0
-0.6019685691
0.0796082995
-0.004681737
0.0001604412
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 12:22:16) 
-- CODE:
from math import*

x = int(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1    #Potenciação
o = 1    #numero fatorado
s = 0  	#Termos
sinal = 1

while(s < k):
	angulo = ((x**m)/factorial(o))* sinal
	sinal = -1*sinal			
	sen = sin(angulo)
	m = m + 2
	o = o + 2
	s = s + 1
print(round(sen, 10))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    x = int(input())
ValueError: invalid literal for int() with base 10: 'pi/2'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 12:22:36) 
-- CODE:
from math import*

x = int(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1    #Potenciação
o = 1    #numero fatorado
s = 0  	#Termos
sinal = 1

while(s < k):
	angulo = ((x**m)/factorial(o))* sinal
	sinal = -1*sinal			
	sen = sin(angulo)
	m = m + 2
	o = o + 2
	s = s + 1
	print(round(sen, 10))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    x = int(input())
ValueError: invalid literal for int() with base 10: 'pi/2'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 12:22:46) 
-- CODE:
from math import*

x = int(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1    #Potenciação
o = 1    #numero fatorado
s = 0  	#Termos
sinal = 1

while(s < k):
	angulo = ((x**m)/factorial(o))* sinal
	sinal = -1*sinal			
	sen = sin(angulo)
	m = m + 2
	o = o + 2
	s = s + 1
	print(round(angulo, 10))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    x = int(input())
ValueError: invalid literal for int() with base 10: 'pi/2'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 12:26:11) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1    #Potenciação
o = 1    #numero fatorado
s = 0  	#Termos
sinal = 1
angulo = 0
while(s < k):
	angulo = angulo + (((x**m)/factorial(o))* sinal)
	sinal = -1*sinal			
	sen = sin(angulo)
	m = m + 2
	o = o + 2
	s = s + 1
	print(round(sen, 10))
	
-- OUTPUT:
1.0
0.7985197817
0.8439071521
0.8413862018
0.8414728989
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 12:27:29) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1    #Potenciação
o = 1    #numero fatorado
s = 0  	#Termos
sinal = 1
angulo = 0
while(s < k):
	angulo = (((x**m)/factorial(o))* sinal)
	angulo = angulo + angulo
	sinal = -1*sinal			
	sen = sin(angulo)
	m = m + 2
	o = o + 2
	s = s + 1
	print(round(sen, 10))
	
-- OUTPUT:
0.0
-0.9613676208
0.158711281
-0.0093633714
0.0003208824
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 12:27:43) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1    #Potenciação
o = 1    #numero fatorado
s = 0  	#Termos
sinal = 1
angulo = 0
while(s < k):
	angulo = (((x**m)/factorial(o))* sinal)
	sinal = -1*sinal			
	sen = sin(angulo)
	m = m + 2
	o = o + 2
	s = s + 1
	print(round(sen, 10))
	
-- OUTPUT:
1.0
-0.6019685691
0.0796082995
-0.004681737
0.0001604412
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 12:29:26) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1    #Potenciação
o = 1    #numero fatorado
s = 0  	#Termos
sinal = 1
angulo = 0
while(s < k):
	angulo = (((x**m)/factorial(o))* sinal) + angulo
	sinal = -1*sinal			
	sen = sin(angulo)
	m = m + 2
	o = o + 2
	s = s + 1
	print(round(sen, 10))
	
-- OUTPUT:
1.0
0.7985197817
0.8439071521
0.8413862018
0.8414728989
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 12:31:12) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1    #Potenciação
o = 1    #numero fatorado
s = 0  	#Termos
sinal = 1
angulo = 0

while(s < k):
	angulo = (((x**m)/factorial(o))* (-1)) + angulo
	sinal = 	
	sen = sin(angulo)
	m = m + 2
	o = o + 2
	s = s + 1
	print(round(sen, 10))
	
-- ERROR:
File "XXXX", line 14
    sinal = 	
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 12:31:17) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1    #Potenciação
o = 1    #numero fatorado
s = 0  	#Termos
sinal = 1
angulo = 0

while(s < k):
	angulo = (((x**m)/factorial(o))* (-1)) + angulo
	sen = sin(angulo)
	m = m + 2
	o = o + 2
	s = s + 1
	print(round(sen, 10))
	
-- OUTPUT:
-1.0
-0.7985197817
-0.7480637638
-0.744948639
-0.7448415956
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 12:31:51) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1    #Potenciação
o = 1    #numero fatorado
s = 0  	#Termos
sinal = 1
angulo = 0
n = 1
while(s < k):
	angulo = (((x**m)/factorial(o))* (-1)**n) + angulo
	sen = sin(angulo)
	m = m + 2
	o = o + 2
	s = s + 1
	n = n + 1
	print(round(sen, 10))
	
-- OUTPUT:
-1.0
-0.7985197817
-0.8439071521
-0.8413862018
-0.8414728989
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 12:32:22) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1    #Potenciação
o = 1    #numero fatorado
s = 0  	#Termos
sinal = 1
angulo = 0
n = 2
while(s < k):
	angulo = (((x**m)/factorial(o))* (-1)**n) + angulo
	sen = sin(angulo)
	m = m + 2
	o = o + 2
	s = s + 1
	n = n + 1
	print(round(sen, 10))
	
-- OUTPUT:
1.0
0.7985197817
0.8439071521
0.8413862018
0.8414728989
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 12:32:37) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1    #Potenciação
o = 1    #numero fatorado
s = 0  	#Termos
sinal = 1
angulo = 0
n = 2
while(s < k):
	angulo = (((x**m)/factorial(o))* (-1)**n) + angulo
	sen = sin(angulo)
	m = m + 2
	o = o + 2
	s = s + 1
	n = n + 1
	print(round(sen, 10))
	
-- EXECUTION TIME:
0.162049
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
1.0
0.7985197817
0.8439071521
0.8413862018
0.8414728989
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-1.0
-0.7985197817
-0.8439071521
-0.8413862018
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.8660254038
0.7550961618
0.761934798
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 12:35:24) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1    #Potenciação
o = 1    #numero fatorado
s = 0  	#Termos
sinal = 1
angulo = 0
n = 2

while(s < k):
	angulo = (((x**m)/factorial(o))* (-1)**n) + angulo
	sen = sin(angulo)
	m = m + 2
	o = o + 2
	s = s + 1
	n = n + 1
	print(round(factorial(o), 10))
	
-- OUTPUT:
6
120
5040
362880
39916800
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 12:37:25) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1    #Potenciação
o = 1    #numero fatorado
s = 0  	#Termos
sinal = 1
angulo = 0
n = 2

while(s < k):
	angulo = (((x**m)/factorial(m))* (-1)**n) + angulo
	sen = sin(angulo)
	m = m + 2
	o = o + 2
	s = s + 1
	n = n + 1
	print(round(factorial(o), 10))
	
-- OUTPUT:
6
120
5040
362880
39916800
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 12:37:29) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1    #Potenciação
o = 1    #numero fatorado
s = 0  	#Termos
sinal = 1
angulo = 0
n = 2

while(s < k):
	angulo = (((x**m)/factorial(m))* (-1)**n) + angulo
	sen = sin(angulo)
	m = m + 2
	o = o + 2
	s = s + 1
	n = n + 1
	print(round(factorial(m), 10))
	
-- OUTPUT:
6
120
5040
362880
39916800
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 12:38:49) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1    #Potenciação
o = 1    #numero fatorado
s = 0  	#Termos
sinal = 1
angulo = 0
n = 2

while(s < k):
	angulo = (((x**m)/factorial(m))* (-1)**n) + angulo
	sen = sin(angulo)
	m = m + 2
	o = o + 2
	s = s + 1
	n = n + 1
	print(round(angulo, 10))
	
-- OUTPUT:
1.5707963268
0.9248322293
1.0045248555
0.9998431014
1.0000035426
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 12:39:12) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1    #Potenciação
o = 1    #numero fatorado
s = 0  	#Termos
sinal = 1
angulo = 0
n = 2

while(s < k):
	angulo = (((x**m)/factorial(m))* (-1)**n) + angulo
	sen = sin(angulo)
	m = m + 2
	o = o + 2
	s = s + 1
	n = n + 1
	print(round(angulo, 10))
	
-- OUTPUT:
1.5707963268
0.9248322293
1.0045248555
0.9998431014
1.0000035426
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 12:39:47) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1    #Potenciação
o = 1    #numero fatorado
s = 0  	#Termos
sinal = 1
angulo = 0
n = 2

while(s < k):
	angulo = (((x**m)/factorial(m))* (-1)**n) + angulo
	sen = sin(angulo)
	m = m + 2
	o = o + 2
	s = s + 1
	n = n + 1
	print(round(angulo, 10))
	
-- EXECUTION TIME:
0.138719
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
1.5707963268
0.9248322293
1.0045248555
0.9998431014
1.0000035426
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-1.5707963268
-0.9248322293
-1.0045248555
-0.9998431014
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
1.0471975512
0.8558007816
0.8662952838
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 12:39:54) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1    #Potenciação
o = 1    #numero fatorado
s = 0  	#Termos
sinal = 1
angulo = 0
n = 2

while(s < k):
	angulo = (((x**m)/factorial(m))* (-1)**n) + angulo
	sen = sin(angulo)
	m = m + 2
	o = o + 2
	s = s + 1
	n = n + 1
print(round(angulo, 10))
	
-- EXECUTION TIME:
0.185631
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
1.0000035426
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-0.9998431014
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.8662952838
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 12:40:18) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1    #Potenciação
o = 1    #numero fatorado
s = 0  	#Termos
sinal = 1
angulo = 0
n = 2

while(s < k):
	angulo = (((x**m)/factorial(o))* (-1)**n) + angulo
	sen = sin(angulo)
	m = m + 2
	o = o + 2
	s = s + 1
	n = n + 1
print(round(angulo, 10))
	
-- OUTPUT:
1.0000035426
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 12:47:59) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1    #Potenciação
s = 0  	#Termos
angulo = 0
n = 2

while(s < k):
	angulo = angulo + (((x**m)/factorial(m))* (-1)**n)
	sen = sin(angulo)
	m = m + 2
	s = s + 1
	n = n + 1
print(round(angulo, 10))
	
-- OUTPUT:
1.0000035426
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 12:48:05) 
-- CODE:
from math import*

x = eval(input("Angulo em radianos:"))
k = int(input("Termos:"))

m = 1    #Potenciação
s = 0  	#Termos
angulo = 0
n = 2

while(s < k):
	angulo = angulo + (((x**m)/factorial(m))* (-1)**n)
	sen = sin(angulo)
	m = m + 2
	s = s + 1
	n = n + 1
print(round(angulo, 10))
	
-- OUTPUT:
1.0000035426
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
