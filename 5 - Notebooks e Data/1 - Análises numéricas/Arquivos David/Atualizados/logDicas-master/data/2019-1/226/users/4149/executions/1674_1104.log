== TEST (2019-05-01 15:21:12) 
-- CODE:
a=float(input("valor a "))
b=float(input("valor b   "))
c=float(input("valor c "))
d=float(input("valor d  "))
print("intervalo 1:",a",",b)
print("intervalo 2:",c",",d)
if((b>a)or(d>c)):
	print("Entradas invalidas")
elif(((a>c)and(a<d))or((b>c)and(b<d))):
	print("Ha intersecao")
else:
	print("Nao ha intersecao")

-- ERROR:
File "XXXX", line 5
    print("intervalo 1:",a",",b)
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:21:52) 
-- CODE:
a=float(input("valor a "))
b=float(input("valor b   "))
c=float(input("valor c "))
d=float(input("valor d  "))
print("intervalo 1:"a",",b)
print("intervalo 2:",c",",d)
if((b>a)or(d>c)):
	print("Entradas invalidas")
elif(((a>c)and(a<d))or((b>c)and(b<d))):
	print("Ha intersecao")
else:
	print("Nao ha intersecao")

-- ERROR:
File "XXXX", line 5
    print("intervalo 1:"a",",b)
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:22:14) 
-- CODE:
a=float(input("valor a "))
b=float(input("valor b   "))
c=float(input("valor c "))
d=float(input("valor d  "))
print("intervalo 1:",a,",",b)
print("intervalo 2:",c",",d)
if((b>a)or(d>c)):
	print("Entradas invalidas")
elif(((a>c)and(a<d))or((b>c)and(b<d))):
	print("Ha intersecao")
else:
	print("Nao ha intersecao")

-- ERROR:
File "XXXX", line 6
    print("intervalo 2:",c",",d)
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:22:20) 
-- CODE:
a=float(input("valor a "))
b=float(input("valor b   "))
c=float(input("valor c "))
d=float(input("valor d  "))
print("intervalo 1:",a,",",b)
print("intervalo 2:",c,",",d)
if((b>a)or(d>c)):
	print("Entradas invalidas")
elif(((a>c)and(a<d))or((b>c)and(b<d))):
	print("Ha intersecao")
else:
	print("Nao ha intersecao")

-- OUTPUT:
intervalo 1: 1.0 , 2.0
intervalo 2: 4.0 , 5.0
Entradas invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:23:02) 
-- CODE:
a=float(input("valor a "))
b=float(input("valor b   "))
c=float(input("valor c "))
d=float(input("valor d  "))
print("intervalo 1:",a,",",b)
print("intervalo 2:",c,",",d)
if((b>a)or(d>c)):
	print("Entradas invalidas")
elif(((a>c)and(a<d))or((b>c)and(b<d))):
	print("Ha intersecao")
else:
	print("Nao ha intersecao")

-- OUTPUT:
intervalo 1: 1.0 , 2.0
intervalo 2: 4.0 , 5.0
Entradas invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:25:14) 
-- CODE:
a=float(input("valor a "))
b=float(input("valor b   "))
c=float(input("valor c "))
d=float(input("valor d  "))
print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)
if((b<a)and(d<c)):
	print("Entradas invalidas")
elif(((a>c)and(a<d))or((b>c)and(b<d))):
	print("Ha intersecao")
else:
	print("Nao ha intersecao")

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 15:25:39) 
-- CODE:
a=float(input("valor a "))
b=float(input("valor b   "))
c=float(input("valor c "))
d=float(input("valor d  "))
print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)
if((b<a)and(d<c)):
	print("Entradas invalidas")
elif(((a>c)and(a<d))or((b>c)and(b<d))):
	print("Ha intersecao")
else:
	print("Nao ha intersecao")

-- EXECUTION TIME:
0.169748
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Nao ha intersecao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:26:48) 
-- CODE:
a=float(input("valor a "))
b=float(input("valor b   "))
c=float(input("valor c "))
d=float(input("valor d  "))
print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)
if((b<a)and(d<c)):
	print("Entradas invalidas")
elif(((a>c)and(a<d))or((b>c)and(b<d))):
	print("Ha intersecao")
else:
	print("Nao ha intersecao")

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:27:18) 
-- CODE:
a=float(input("valor a "))
b=float(input("valor b   "))
c=float(input("valor c "))
d=float(input("valor d  "))
print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)
if((b<a)and(d<c)):
	print("Entradas invalidas")
elif(((a>c)and(a<d))or((b>c)and(b<d))):
	print("Ha intersecao")
else:
	print("Nao ha intersecao")

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 15:27:50) 
-- CODE:
a=float(input("valor a "))
b=float(input("valor b   "))
c=float(input("valor c "))
d=float(input("valor d  "))
print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)
if((b<a)and(d<c)):
	print("Entradas invalidas")
elif(((a>=c)and(a<=d))or((b>=c)and(b<=d))):
	print("Ha intersecao")
else:
	print("Nao ha intersecao")

-- EXECUTION TIME:
0.118064
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Nao ha intersecao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:27:53) 
-- CODE:
a=float(input("valor a "))
b=float(input("valor b   "))
c=float(input("valor c "))
d=float(input("valor d  "))
print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)
if((b<a)and(d<c)):
	print("Entradas invalidas")
elif(((a>=c)and(a<=d))or((b>=c)and(b<=d))):
	print("Ha intersecao")
else:
	print("Nao ha intersecao")

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:28:16) 
-- CODE:
a=float(input("valor a "))
b=float(input("valor b   "))
c=float(input("valor c "))
d=float(input("valor d  "))
print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)
if((b<a)and(d<c)):
	print("Entradas invalidas")
elif(((a>=c)and(a<=d))or((b>=c)and(b<=d))):
	print("Ha intersecao")
else:
	print("Nao ha intersecao")

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:28:49) 
-- CODE:
a=float(input("valor a "))
b=float(input("valor b   "))
c=float(input("valor c "))
d=float(input("valor d  "))
print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)
if((b<a)and(d<c)):
	print("Entradas invalidas")
elif(((a>=c)and(a<=d))or((b>=c)and(b<=d))):
	print("Ha intersecao")
else:
	print("Nao ha intersecao")

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:26:21) 
-- CODE:
a=float(input("valor a "))
b=float(input("valor b   "))
c=float(input("valor c "))
d=float(input("valor d  "))
print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)
if((b<a)and(d<c)):
	print("Entradas invalidas")
elif(((a>=c)and(a<=d))or((b>=c)and(b<=d))):
	print("Ha intersecao")
elif((a>d)and(b>d))or(c>b)and(d>b):
	print("Nao ha intersecao")

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 17:26:44) 
-- CODE:
a=float(input("valor a "))
b=float(input("valor b   "))
c=float(input("valor c "))
d=float(input("valor d  "))
print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)
if((b<a)and(d<c)):
	print("Entradas invalidas")
elif(((a>=c)and(a<=d))or((b>=c)and(b<=d))):
	print("Ha intersecao")
elif((a>d)and(b>d))or(c>b)and(d>b):
	print("Nao ha intersecao")

-- EXECUTION TIME:
0.154526
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Nao ha intersecao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:26:51) 
-- CODE:
a=float(input("valor a "))
b=float(input("valor b   "))
c=float(input("valor c "))
d=float(input("valor d  "))
print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)
if((b<a)and(d<c)):
	print("Entradas invalidas")
elif(((a>=c)and(a<=d))or((b>=c)and(b<=d))):
	print("Ha intersecao")
elif((a>d)and(b>d))or(c>b)and(d>b):
	print("Nao ha intersecao")

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:28:39) 
-- CODE:
a=float(input("valor a "))
b=float(input("valor b   "))
c=float(input("valor c "))
d=float(input("valor d  "))
print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)
if((b<a)or(d<c)):
	print("Entradas invalidas")
elif(((a>=c)and(a<=d))or((b>=c)and(b<=d))):
	print("Ha intersecao")
elif((a>d)and(b>d))or(c>b)and(d>b):
	print("Nao ha intersecao")

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 17:28:57) 
-- CODE:
a=float(input("valor a "))
b=float(input("valor b   "))
c=float(input("valor c "))
d=float(input("valor d  "))
print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)
if((b<a)or(d<c)):
	print("Entradas invalidas")
elif(((a>=c)and(a<=d))or((b>=c)and(b<=d))):
	print("Ha intersecao")
elif((a>d)and(b>d))or(c>b)and(d>b):
	print("Nao ha intersecao")

-- EXECUTION TIME:
0.135166
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 17:29:19) 
-- CODE:
a=float(input("valor a "))
b=float(input("valor b   "))
c=float(input("valor c "))
d=float(input("valor d  "))
print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)
if((b<a)or(d<c)):
	print("Entradas invalidas")
elif(((a>=c)and(a<=d))or((b>=c)and(b<=d))):
	print("Ha intersecao")
else:
	print("Nao ha intersecao")

-- EXECUTION TIME:
0.133187
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:29:41) 
-- CODE:
a=float(input("valor a "))
b=float(input("valor b   "))
c=float(input("valor c "))
d=float(input("valor d  "))
print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)
if((b<a)or(d<c)):
	print("Entradas invalidas")
elif(((a>=c)and(a<=d))or((b>=c)and(b<=d))):
	print("Ha intersecao")
elif((a>d)and(b>d))or(c>b)and(d>b):
	print("Nao ha intersecao")

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:30:40) 
-- CODE:
a=float(input("valor a "))
b=float(input("valor b   "))
c=float(input("valor c "))
d=float(input("valor d  "))
print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)
if((b<a)or(d<c)):
	print("Entradas invalidas")
elif(((a>=c)and(a<=d))or((b>=c)and(b<=d))):
	print("Ha intersecao")
elif((a>d)and(b>d))or(c>b)and(d>b):
	print("Nao ha intersecao")

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:31:10) 
-- CODE:
a=float(input("valor a "))
b=float(input("valor b   "))
c=float(input("valor c "))
d=float(input("valor d  "))
print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)
if((b<a)or(d<c)):
	print("Entradas invalidas")
elif(((a>=c)and(a<=d))or((b>=c)and(b<=d))):
	print("Ha intersecao")
elif((a>d)and(b>d))or(c>b)and(d>b):
	print("Nao ha intersecao")

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:31:19) 
-- CODE:
a=float(input("valor a "))
b=float(input("valor b   "))
c=float(input("valor c "))
d=float(input("valor d  "))
print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)
if((b<a)or(d<c)):
	print("Entradas invalidas")
elif(((a>=c)and(a<=d))or((b>=c)and(b<=d))):
	print("Ha intersecao")
elif((a>d)and(b>d))or(c>b)and(d>b):
	print("Nao ha intersecao")

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 18:02:58) 
-- CODE:
a=float(input("valor a "))
b=float(input("valor b   "))
c=float(input("valor c "))
d=float(input("valor d  "))
print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)
if((b<a)or(d<c)):
	print("Entradas invalidas")
elif(((a>=c)and(a<=d))or((b>=c)and(b<=d))):
	print("Ha intersecao")
elif((a>d)and(b>d))or(c>b)and(d>b):
	print("Nao ha intersecao")

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 18:46:15) 
-- CODE:
a=float(input("valor a "))
b=float(input("valor b   "))
c=float(input("valor c "))
d=float(input("valor d  "))
print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)
if((b>a)and(d>c)):
	if c>=a and c<=b:
	print("Ha intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
	


-- EXECUTION TIME:
0.161293
-- ERROR:
  File "/home/codebench/codes/1674/1104/main.py", line 9
    print("Ha intersecao")
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 18:46:47) 
-- CODE:
a=float(input("valor a "))
b=float(input("valor b   "))
c=float(input("valor c "))
d=float(input("valor d  "))
print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)
if((b>a)and(d>c)):
	if c>-a and c<-b:
	print("Ha intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
	


-- EXECUTION TIME:
0.212655
-- ERROR:
  File "/home/codebench/codes/1674/1104/main.py", line 9
    print("Ha intersecao")
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 18:46:51) 
-- CODE:
a=float(input("valor a "))
b=float(input("valor b   "))
c=float(input("valor c "))
d=float(input("valor d  "))
print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)
if((b>a)and(d>c)):
	if c>-a and c<-b:
	print("Ha intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
	


-- EXECUTION TIME:
0.140164
-- ERROR:
  File "/home/codebench/codes/1674/1104/main.py", line 9
    print("Ha intersecao")
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 18:47:15) 
-- CODE:
a=float(input("valor a "))
b=float(input("valor b   "))
c=float(input("valor c "))
d=float(input("valor d  "))
print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)
if((b>a)and(d>c)):
	if c>=a and c<=b:
	print("Ha intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
	


-- ERROR:
File "XXXX", line 9
    print("Ha intersecao")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 18:47:25) 
-- CODE:
a=float(input("valor a "))
b=float(input("valor b   "))
c=float(input("valor c "))
d=float(input("valor d  "))
print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)
if((b>a)and(d>c)):
	if c>=a and c<=b:
		print("Ha intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
	


-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 18:47:40) 
-- CODE:
a=float(input("valor a "))
b=float(input("valor b   "))
c=float(input("valor c "))
d=float(input("valor d  "))
print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)
if((b>a)and(d>c)):
	if c>=a and c<=b:
		print("Ha intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
	


-- EXECUTION TIME:
0.197154
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
