== TEST (2019-04-13 21:47:46) 
-- CODE:
x=float(input("percurso: "))
y=input("carro A ou B: ")

if(y.upper=="A"):
	print(x*8)
else:
	print(x*12)
-- OUTPUT:
780.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:49:29) 
-- CODE:
x=float(input("percurso: "))
y=input("carro A ou B: ")

if(y.upper=="A"):
	print(round(x*8,2)
else:
	print(round(x*12,2)
-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:49:43) 
-- CODE:
x=float(input("percurso: "))
y=input("carro A ou B: ")

if(y.upper=="A"):
	print(round(x*8,2))
else:
	print(round(x*12,2))
-- OUTPUT:
780.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:50:06) 
-- CODE:
x=float(input("percurso: "))
y=input("carro A ou B: ")

if(y.upper=="A"):
	print(round(x/8,2))
else:
	print(round(x/12,2))
-- OUTPUT:
5.42
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:51:24) 
-- CODE:
x=float(input("percurso: "))
y=input("carro A ou B: ")

if(y.upper=="A"):
	print(round(8*x/x,2))
else:
	print(round(12*x/x,2))
-- OUTPUT:
12.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:52:12) 
-- CODE:
x=float(input("percurso: "))
y=input("carro A ou B: ")

if(y.upper=="A"):
	print(round(8*x/8,2))
else:
	print(round(12*x/12,2))
-- OUTPUT:
65.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:52:45) 
-- CODE:
x=float(input("percurso: "))
y=input("carro A ou B: ")

if(y.upper=="A"):
	print(round(8*x/x,2))
else:
	print(round(12*x/x,2))
-- OUTPUT:
12.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:53:18) 
-- CODE:
x=float(input("percurso: "))
y=input("carro A ou B: ")

if(y.upper=="A"):
	print(round((8*x/x),2))
else:
	print(round((12*x/x),2))
-- OUTPUT:
12.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:56:23) 
-- CODE:
x=float(input("percurso: "))
y=input("carro A ou B: ")

if(y.upper=="A"):
	print(round((x/8),2))
else:
	print(round((x/12),2))
-- OUTPUT:
5.42
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:57:00) 
-- CODE:
x=float(input("percurso: "))
y=input("carro A ou B: ")

if(y.upper=="A"):
	print(round(x/8,2))
else:
	print(round(x/12,2))
-- OUTPUT:
5.42
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:57:41) 
-- CODE:
x=float(input("percurso: "))
y=input("carro A ou B: ")

if(y.upper=="A"):
	print(round(x/8,2))
else:
	print(round(x/12,2))
-- OUTPUT:
5.42
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:58:49) 
-- CODE:
x=float(input("percurso: "))
y=input("carro A ou B: ")

if(y.upper=="A"):
	print(round(x/8,2))
else:
	print(round(x/12,2))
-- OUTPUT:
5.42
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 22:00:56) 
-- CODE:
x=float(input("percurso: "))
y=input("carro A ou B: ")

if(y.upper=="A"):
	print(round(x*8-x,2))
else:
	print(round(x*12-x,2))
-- OUTPUT:
715.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 22:01:23) 
-- CODE:
x=float(input("percurso: "))
y=input("carro A ou B: ")

if(y.upper=="A"):
	print(round((x*8)-x,2))
else:
	print(round((x*12)-x,2))
-- OUTPUT:
715.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 22:04:19) 
-- CODE:
x=float(input("percurso: "))
y=input("carro A ou B: ")

if(y.upper=="A"):
	print(round(x/8,2))
else:
	print(round(x/12,2))
-- OUTPUT:
5.42
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 22:06:07) 
-- CODE:
x=float(input("percurso: "))
y=input("carro A ou B: ")

if(y.upper=="A"):
	print(round(8*x/x,2))
else:
	print(round(12*x/12,2))
-- OUTPUT:
65.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 22:08:53) 
-- CODE:
x=float(input("percurso: "))
y=input("carro A ou B: ")

if(y.upper=="A"):
	print(round(x/8,2))
else:
	print(round(x/12,2))
-- OUTPUT:
5.42
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 22:09:27) 
-- CODE:
x=float(input("percurso: "))
y=input("carro A ou B: ")

if(y.upper=="A"):
	print(round(x/8,2))
else:
	print(round(x/12,2))
-- OUTPUT:
5.42
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 22:11:00) 
-- CODE:
x=float(input("percurso: "))
y=input("carro A ou B: ")

if(y.upper=="B"):
	print(round(x/12,2))

else:
	print(round(x/8,2))
	
-- OUTPUT:
8.12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 22:11:27) 
-- CODE:
x=float(input("percurso: "))
y=input("carro A ou B: ")

if(y.upper=="B"):
	print(round(x/12,2))

else:
	print(round(x/8,2))
	
-- EXECUTION TIME:
0.155796
-- TEST CASE 1:
---- input:
65
B

---- correct output:
5.42
---- user output:
8.12
-- TEST CASE 2:
---- input:
65
A
---- correct output:
8.12
---- user output:
8.12
-- TEST CASE 3:
---- input:
200
A
---- correct output:
25.0
---- user output:
25.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 22:12:38) 
-- CODE:
x=float(input("percurso: "))
y=float(input("carro A ou B: "))

if(y.upper=="B"):
	print(round(x/12,2))

else:
	print(round(x/8,2))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    y=float(input())
ValueError: could not convert string to float: 'B'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 22:13:15) 
-- CODE:
x=float(input("percurso: "))
y=input("carro A ou B: ")

if(y.upper=="B"):
	print(round(x/12,2))

else:
	print(round(x/8,2))
	
-- OUTPUT:
8.12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 22:13:54) 
-- CODE:
x=float(input("percurso: "))
y=input("carro A ou B: ")

if(y=="B"):
	print(round(x/12,2))

else:
	print(round(x/8,2))
	
-- OUTPUT:
5.42
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 22:14:07) 
-- CODE:
x=float(input("percurso: "))
y=input("carro A ou B: ")

if(y=="B"):
	print(round(x/12,2))

else:
	print(round(x/8,2))
	
-- EXECUTION TIME:
0.176554
-- TEST CASE 1:
---- input:
65
B

---- correct output:
5.42
---- user output:
5.42
-- TEST CASE 2:
---- input:
65
A
---- correct output:
8.12
---- user output:
8.12
-- TEST CASE 3:
---- input:
200
A
---- correct output:
25.0
---- user output:
25.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
