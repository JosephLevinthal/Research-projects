== TEST (2019-05-12 11:08:50) 
-- CODE:
n = int(input("insira o numero:"))
i = 1

while(n >= i and n % i):
	i = i + 1
	if( n >= i):
		print(i)
if(n < i):
	print()
	
-- OUTPUT:
t =  0
h =  36.0
t =  1
h =  31.1
t =  2
h =  16.4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 11:08:59) 
-- CODE:
n = int(input("insira o numero:"))
i = 1

while(n >= i and n % i):
	i = i + 1
	if( n >= i):
		print(i)

-- OUTPUT:
t =  0
h =  36.0
t =  1
h =  31.1
t =  2
h =  16.4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 11:09:13) 
-- CODE:
n = int(input("insira o numero:"))
i = 1

while(n >= i and n % i):
	i = i + 1
	if( n >= i):
		print(i)

-- OUTPUT:
t =  0
h =  36.0
t =  1
h =  31.1
t =  2
h =  16.4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 11:12:20) 
-- CODE:
n = int(input("insira o numero:"))
i = 1

while(n > i and n % i != 0):
	i = i + 1
	if( n <= i):
		print(i,"divisores")

-- OUTPUT:
t =  0
h =  36.0
t =  1
h =  31.1
t =  2
h =  16.4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 11:12:39) 
-- CODE:
n = int(input("insira o numero:"))
i = 1

while(n > i and n % i != 0):
	i = i + 1
if( n <= i):
	print(i,"divisores")

-- OUTPUT:
t =  0
h =  36.0
t =  1
h =  31.1
t =  2
h =  16.4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 11:49:18) 
-- CODE:
n = int(input("insira o numero:"))
y = 0
d = 0

while(y > 0 and y < n):
	y = y + 1
	if(n % y == 0):
		print(y)
		d = d + 1
if(d == 1):
	print("1 divisor")
else:
	print(d, "divisores")
		
	

-- OUTPUT:
0 divisores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 11:52:32) 
-- CODE:
n = int(input("insira o numero:"))
y = 0
d = 0

while(y < n):
	y = y + 1
	if(n % y == 0):
		print(y)
		d = d + 1
if(d == 1):
	print("1 divisor")
else:
	print(d, "divisores")
		
	

-- EXECUTION TIME:
0.129046
-- TEST CASE 1:
---- input:
12
---- correct output:
1
2
3
4
6
12
6 divisores
---- user output:
1
2
3
4
6
12
6 divisores
-- TEST CASE 2:
---- input:
49
---- correct output:
1
7
49
3 divisores
---- user output:
1
7
49
3 divisores
-- TEST CASE 3:
---- input:
30
---- correct output:
1
2
3
5
6
10
15
30
8 divisores
---- user output:
1
2
3
5
6
10
15
30
8 divisores
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
