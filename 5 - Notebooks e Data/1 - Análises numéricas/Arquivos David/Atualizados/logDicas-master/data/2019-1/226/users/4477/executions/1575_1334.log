== TEST (2019-03-29 00:34:55) 
-- CODE:
print("Adicao: ", 5 + 3)

print("Subtracao: ", 10 - 2)

print("Multiplicacao: ", 2 * 4)

print("Divisao: ", 64 / 8)

print("Resto: ", )

print("Potenciacao: ", 8 % 64)
-- OUTPUT:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto: 
Potenciacao:  8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:35:07) 
-- CODE:
print("Adicao: ", 5 + 3)

print("Subtracao: ", 10 - 2)

print("Multiplicacao: ", 2 * 4)

print("Divisao: ", 64 / 8)

print("Resto: ", 16 / 2 )

print("Potenciacao: ", 8 % 64)
-- OUTPUT:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto:  8.0
Potenciacao:  8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:35:33) 
-- CODE:
print("Adicao: ", 5 + 3)

print("Subtracao: ", 10 - 2)

print("Multiplicacao: ", 2 * 4)

print("Divisao: ", 64 / 8)

print("Resto: ", 8 )

print("Potenciacao: ", 8 % 64)
-- OUTPUT:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto:  8
Potenciacao:  8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 00:35:37) 
-- CODE:
print("Adicao: ", 5 + 3)

print("Subtracao: ", 10 - 2)

print("Multiplicacao: ", 2 * 4)

print("Divisao: ", 64 / 8)

print("Resto: ", 8 )

print("Potenciacao: ", 8 % 64)
-- EXECUTION TIME:
0.17658
-- TEST CASE 1:
---- input:
xxx
---- correct output:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto:  8
Potenciacao:  8
---- user output:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto:  8
Potenciacao:  8
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 02:10:51) 
-- CODE:
print("Adicao: ", 5 + 3)

print("Subtracao: ", 10 - 2)

print("Multiplicacao: ", 2 * 4)

print("Divisao: ", 64 / 8)

print("Resto: ", 8 )

print("Potenciacao: ", 8 % 64)
-- EXECUTION TIME:
0.159289
-- TEST CASE 1:
---- input:
xxx
---- correct output:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto:  8
Potenciacao:  8
---- user output:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto:  8
Potenciacao:  8
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-27 17:21:15) 
-- CODE:
# Variavel
adic  =  5 + 3               # Adição 
subt  =  16 - 8              # Subtração
mult  =  (4 * 8) / 4         # Multiplicação
divi  =  16 / 2              # Divisão
rest  =  8                   # Resto
pote  =  64**0.5             # Potenciação

# Saidas
print(adic)
print(subt)
print(mult)
print(divi)
print(rest)
print(pote)
-- OUTPUT:
8
8
8.0
8.0
8
8.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-27 17:21:52) 
-- CODE:
# Variavel
adic  =  5 + 3               # Adição 
subt  =  16 - 8              # Subtração
mult  =  (4 * 8) / 4         # Multiplicação
divi  =  16 / 2              # Divisão
rest  =  8                   # Resto
pote  =  64**0.5             # Potenciação

# Saidas
print(adic)
print(subt)
print(int(mult)
print(int(divi)
print(rest)
print(int(pote)
-- ERROR:
File "XXXX", line 13
    print(int(divi)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-27 17:22:29) 
-- CODE:
# Variavel
adic  =  5 + 3               # Adição 
subt  =  16 - 8              # Subtração
mult  =  (4 * 8) / 4         # Multiplicação
divi  =  16 / 2              # Divisão
rest  =  8                   # Resto
pote  =  64**0.5             # Potenciação

# Saidas
print(adic)
print(subt)
print(int(mult))
print(divi)
print(rest)
print(int(pote))
-- OUTPUT:
8
8
8
8.0
8
8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-27 17:22:32) 
-- CODE:
# Variavel
adic  =  5 + 3               # Adição 
subt  =  16 - 8              # Subtração
mult  =  (4 * 8) / 4         # Multiplicação
divi  =  16 / 2              # Divisão
rest  =  8                   # Resto
pote  =  64**0.5             # Potenciação

# Saidas
print(adic)
print(subt)
print(int(mult))
print(divi)
print(rest)
print(int(pote))
-- EXECUTION TIME:
0.139159
-- TEST CASE 1:
---- input:
xxx
---- correct output:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto:  8
Potenciacao:  8
---- user output:
8
8
8
8.0
8
8
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-27 17:22:37) 
-- CODE:
# Variavel
adic  =  5 + 3               # Adição 
subt  =  16 - 8              # Subtração
mult  =  (4 * 8) / 4         # Multiplicação
divi  =  16 / 2              # Divisão
rest  =  8                   # Resto
pote  =  64**0.5             # Potenciação

# Saidas
print(adic)
print(subt)
print(int(mult))
print(divi)
print(rest)
print(int(pote))
-- OUTPUT:
8
8
8
8.0
8
8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-27 17:22:47) 
-- CODE:
# Variavel
adic  =  5 + 3               # Adição 
subt  =  16 - 8              # Subtração
mult  =  (4 * 8) / 4         # Multiplicação
divi  =  16 / 2              # Divisão
rest  =  8                   # Resto
pote  =  64**0.5             # Potenciação

# Saidas
print(adic)
print(subt)
print(int(mult))
print(divi)
print(rest)
print(int(pote))
-- EXECUTION TIME:
0.202737
-- TEST CASE 1:
---- input:
xxx
---- correct output:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto:  8
Potenciacao:  8
---- user output:
8
8
8
8.0
8
8
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-27 17:23:37) 
-- CODE:
# Variavel
adic  =  5 + 3               # Adição 
subt  =  16 - 8              # Subtração
mult  =  2 * 4               # Multiplicação
divi  =  16 / 2              # Divisão
rest  =  8                   # Resto
pote  =  64**0.5             # Potenciação

# Saidas
print(adic)
print(subt)
print(int(mult))
print(divi)
print(rest)
print(int(pote))

print("Adicao: ", 5 + 3)

print("Subtracao: ", 10 - 2)

print("Multiplicacao: ", 2 * 4)

print("Divisao: ", 64 / 8)

print("Resto: ", 8 )

print("Potenciacao: ", 8 % 64)
-- OUTPUT:
8
8
8
8.0
8
8
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto:  8
Potenciacao:  8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-27 17:24:55) 
-- CODE:
# Variavel
adic  =  5 + 3               # Adição 
subt  =  16 - 8              # Subtração
mult  =  2 * 4               # Multiplicação
divi  =  16 / 2              # Divisão
rest  =  8                   # Resto
pote  =  64**0.5             # Potenciação

# Saidas
print("Adicao: ", adic)
print("Subtracao: ", subt)
print(int("Multiplicacao: ", mult))
print("Divisao: ", divi)
print("Resto: ", rest)
print(int("Potenciacao: ", pote))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    print(int("Multiplicacao: ", mult))
ValueError: invalid literal for int() with base 8: 'Multiplicacao: '
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-27 17:25:57) 
-- CODE:
# Variavel
adic  =  5 + 3               # Adição 
subt  =  16 - 8              # Subtração
mult  =  2 * 4               # Multiplicação
divi  =  16 / 2              # Divisão
rest  =  8                   # Resto
pote  =  64**0.5             # Potenciação

# Saidas
print("Adicao: ", adic)
print("Subtracao: ", subt)
print("Multiplicacao: ", (int(mult)))
print("Divisao: ", divi)
print("Resto: ", rest)
print(int("Potenciacao: ", pote))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 15, in <module>
    print(int("Potenciacao: ", pote))
TypeError: 'float' object cannot be interpreted as an integer
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-27 17:26:23) 
-- CODE:
# Variavel
adic  =  5 + 3               # Adição 
subt  =  16 - 8              # Subtração
mult  =  2 * 4               # Multiplicação
divi  =  16 / 2              # Divisão
rest  =  8                   # Resto
pote  =  64**0.5             # Potenciação

# Saidas
print("Adicao: ", adic)
print("Subtracao: ", subt)
print("Multiplicacao: ", (int(mult)))
print("Divisao: ", divi)
print("Resto: ", rest)
print("Potenciacao: ", (int(pote)))
-- OUTPUT:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto:  8
Potenciacao:  8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-27 17:26:30) 
-- CODE:
# Variavel
adic  =  5 + 3               # Adição 
subt  =  16 - 8              # Subtração
mult  =  2 * 4               # Multiplicação
divi  =  16 / 2              # Divisão
rest  =  8                   # Resto
pote  =  64**0.5             # Potenciação

# Saidas
print("Adicao: ", adic)
print("Subtracao: ", subt)
print("Multiplicacao: ", (int(mult)))
print("Divisao: ", divi)
print("Resto: ", rest)
print("Potenciacao: ", (int(pote)))
-- EXECUTION TIME:
0.247219
-- TEST CASE 1:
---- input:
xxx
---- correct output:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto:  8
Potenciacao:  8
---- user output:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto:  8
Potenciacao:  8
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
