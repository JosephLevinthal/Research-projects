== TEST (2019-04-07 09:47:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial:"))
an = float(input("Angulo de inclinacao:"))
dis = float(input("Distancia ate o porco:"))

r = (((vo)**2) * sin(2*radians(an))) /9.8

if (dis - 0.1 <r> dis + 0.1):
	msg = "Acerto mizeravi"
else:
	msg = "erooooooooou"
print(msg)
-- OUTPUT:
erooooooooou
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 09:47:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial:"))
an = float(input("Angulo de inclinacao:"))
dis = float(input("Distancia ate o porco:"))

r = (((vo)**2) * sin(2*radians(an))) /9.8

if (dis - 0.1 <r> dis + 0.1):
	msg = "Acerto mizeravi"
else:
	msg = "erooooooooou"
print(msg)
-- OUTPUT:
erooooooooou
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 09:48:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial:"))
an = float(input("Angulo de inclinacao:"))
dis = float(input("Distancia ate o porco:"))

r = (((vo)**2) * sin(2*radians(an))) /9.8

if (dis - 0.1 <r> dis + 0.1):
	msg = "Acerto mizeravi"
else:
	msg = "erooooooooou"
print(msg)
-- OUTPUT:
erooooooooou
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 09:48:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial:"))
an = float(input("Angulo de inclinacao:"))
dis = float(input("Distancia ate o porco:"))

r = (((vo)**2) * sin(2*radians(an))) /9.8

if (dis - 0.1 <r> dis + 0.1):
	msg = "Acerto mizeravi"
else:
	msg = "erooooooooou"
print(msg)
-- OUTPUT:
erooooooooou
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 09:49:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial:"))
an = float(input("Angulo de inclinacao:"))
dis = float(input("Distancia ate o porco:"))

r = (((vo)**2) * sin(2*radians(an))) /9.8

if (dis - 0.1 <r> dis + 0.1):
	msg = "Acerto mizeravi"
else:
	msg = "erooooooooou"
print(msg)
-- OUTPUT:
erooooooooou
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 09:49:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial:"))
an = float(input("Angulo de inclinacao:"))
dis = float(input("Distancia ate o porco:"))

r = (((vo)**2) * sin(2*radians(an))) /9.8

if (dis - 0.1 <r> dis + 0.1):
	msg = "Acerto mizeravi"
else:
	msg = "erooooooooou"
print(msg)
-- EXECUTION TIME:
0.112827
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
erooooooooou
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
erooooooooou
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 09:49:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial:"))
an = float(input("Angulo de inclinacao:"))
dis = float(input("Distancia ate o porco:"))

r = (((vo)**2) * sin(2*radians(an))) /9.8

if (dis - 0.1 <r> dis + 0.1):
	msg = "Acerto mizeravi"
else:
	msg = "erooooooooou"
print(msg)
-- EXECUTION TIME:
0.18655
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
erooooooooou
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
erooooooooou
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 09:52:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial:"))
an = float(input("Angulo de inclinacao:"))
dis = float(input("Distancia ate o porco:"))

r = (((vo)**2) * sin(2*radians(an))) /9.8

if (dis - 0.1 <abs(dis - r)> dis + 0.1)
	msg = "Acerto mizeravi"
else:
	msg = "erooooooooou"
print(msg)
-- ERROR:
File "XXXX", line 11
    if (dis - 0.1 <abs(dis - r)> dis + 0.1)
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 09:54:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial:"))
an = float(input("Angulo de inclinacao:"))
dis = float(input("Distancia ate o porco:"))

r = (((vo)**2) * sin(2*radians(an))) /9.8

if (abs(dis - r) <= 0.1)
	msg = "Acerto mizeravi"
else:
	msg = "erooooooooou"
print(msg)
-- ERROR:
File "XXXX", line 11
    if (abs(dis - r) <= 0.1)
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 09:54:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial:"))
an = float(input("Angulo de inclinacao:"))
dis = float(input("Distancia ate o porco:"))

r = (((vo)**2) * sin(2*radians(an))) /9.8

if (abs(dis - r) <= 0.1):
	msg = "Acerto mizeravi"
else:
	msg = "erooooooooou"
print(msg)
-- OUTPUT:
Acerto mizeravi
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 09:54:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial:"))
an = float(input("Angulo de inclinacao:"))
dis = float(input("Distancia ate o porco:"))

r = (((vo)**2) * sin(2*radians(an))) /9.8

if (abs(dis - r) <= 0.1):
	msg = "Acerto mizeravi"
else:
	msg = "erooooooooou"
print(msg)
-- EXECUTION TIME:
0.162475
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
Acerto mizeravi
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
erooooooooou
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 09:54:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial:"))
an = float(input("Angulo de inclinacao:"))
dis = float(input("Distancia ate o porco:"))

r = (((vo)**2) * sin(2*radians(an))) /9.8

if (abs(dis - r) <= 0.1):
	msg = "Acerto mizeravi"
else:
	msg = "erooooooooou"
print(msg)
-- EXECUTION TIME:
0.131787
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
Acerto mizeravi
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
erooooooooou
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 09:54:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial:"))
an = float(input("Angulo de inclinacao:"))
dis = float(input("Distancia ate o porco:"))

r = (((vo)**2) * sin(2*radians(an))) /9.8

if (abs(dis - r) <= 0.1):
	msg = "Acerto mizeravi"
else:
	msg = "erooooooooou"
print(msg)
-- EXECUTION TIME:
0.166217
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
Acerto mizeravi
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
Acerto mizeravi
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 09:54:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial:"))
an = float(input("Angulo de inclinacao:"))
dis = float(input("Distancia ate o porco:"))

r = (((vo)**2) * sin(2*radians(an))) /9.8

if (abs(dis - r) <= 0.1):
	msg = "Acerto mizeravi"
else:
	msg = "erooooooooou"
print(msg)
-- EXECUTION TIME:
0.121532
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
Acerto mizeravi
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
erooooooooou
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 09:55:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial:"))
an = float(input("Angulo de inclinacao:"))
dis = float(input("Distancia ate o porco:"))

r = (((vo)**2) * sin(2*radians(an))) /9.8

if (abs(dis - r) <= 0.1):
	msg = "sim"
else:
	msg = "nao"
print(msg)
-- EXECUTION TIME:
0.117701
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 09:56:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial:"))
an = float(input("Angulo de inclinacao:"))
dis = float(input("Distancia ate o porco:"))

r = (((vo)**2) * sin(2*radians(an))) /9.8

if (abs(dis - r) <= 0.1):
	msg = "sim"
else:
	msg = "nao"
print(msg)
-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 09:56:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial:"))
an = float(input("Angulo de inclinacao:"))
dis = float(input("Distancia ate o porco:"))

r = (((vo)**2) * sin(2*radians(an))) /9.8

if (abs(dis - r) <= 0.1):
	msg = "sim"
else:
	msg = "nao"
print(msg)
-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 09:57:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial:"))
an = float(input("Angulo de inclinacao:"))
dis = float(input("Distancia ate o porco:"))

r = (((vo)**2) * sin(2*radians(an))) /9.8

if (abs(dis - r) <= 0.1):
	msg = "sim"
else:
	msg = "nao"
print(msg)
-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 09:57:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial:"))
an = float(input("Angulo de inclinacao:"))
dis = float(input("Distancia ate o porco:"))

r = (((vo)**2) * sin(2*radians(an))) /9.8

if (abs(dis - r) <= 0.1):
	msg = "sim"
else:
	msg = "nao"
print(msg)
-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 09:57:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial:"))
an = float(input("Angulo de inclinacao:"))
dis = float(input("Distancia ate o porco:"))

r = (((vo)**2) * sin(2*radians(an))) /9.8

if (abs(dis - r) <= 0.1):
	msg = "sim"
else:
	msg = "nao"
print(msg)
-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
