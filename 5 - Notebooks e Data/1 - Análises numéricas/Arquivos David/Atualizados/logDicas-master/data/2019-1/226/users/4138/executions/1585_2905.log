== TEST (2019-03-25 16:21:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import sqrt() from math
a = int(input("insira o lado do triângulo: "))
b = int(input("insira o lado do triângulo: "))
c = int(input("insira o lado do triângulo: "))

s= (a+b+c)/2
-- ERROR:
File "XXXX", line 4
    import sqrt() from math
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:22:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = int(input("insira o lado do triângulo: "))
b = int(input("insira o lado do triângulo: "))
c = int(input("insira o lado do triângulo: "))

s= (a+b+c)/2
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:22:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = int(input("insira o lado do triangulo: "))
b = int(input("insira o lado do triangulo: "))
c = int(input("insira o lado do triangulo: "))

s= (a+b+c)/2
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:24:13) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = int(input("insira o lado do triangulo: "))
b = int(input("insira o lado do triangulo: "))
c = int(input("insira o lado do triangulo: "))

s= (a+b+c)/2
A= sqrt(s * (s-a) * (s-b) * (s-c))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:24:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import sqrt() from math
a = int(input("insira o lado do triangulo: "))
b = int(input("insira o lado do triangulo: "))
c = int(input("insira o lado do triangulo: "))

s= (a+b+c)/2
A= sqrt(s * (s-a) * (s-b) * (s-c))
-- ERROR:
File "XXXX", line 4
    import sqrt() from math
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:25:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import sqrt from math
a = int(input("insira o lado do triangulo: "))
b = int(input("insira o lado do triangulo: "))
c = int(input("insira o lado do triangulo: "))

s= (a+b+c)/2
A= sqrt(s * (s-a) * (s-b) * (s-c))
-- ERROR:
File "XXXX", line 4
    import sqrt from math
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:25:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import sqrt()
a = int(input("insira o lado do triangulo: "))
b = int(input("insira o lado do triangulo: "))
c = int(input("insira o lado do triangulo: "))

s= (a+b+c)/2
A= sqrt(s * (s-a) * (s-b) * (s-c))
-- ERROR:
File "XXXX", line 4
    from math import sqrt()
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:25:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import sqrt
a = int(input("insira o lado do triangulo: "))
b = int(input("insira o lado do triangulo: "))
c = int(input("insira o lado do triangulo: "))

s= (a+b+c)/2
A= sqrt(s * (s-a) * (s-b) * (s-c))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:26:37) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import sqrt
a = int(input("insira o lado do triangulo: "))
b = int(input("insira o lado do triangulo: "))
c = int(input("insira o lado do triangulo: "))

s= (a+b+c)/2
A= sqrt(s * (s-a) * (s-b) * (s-c))

print(A)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 16:26:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import sqrt
a = int(input("insira o lado do triangulo: "))
b = int(input("insira o lado do triangulo: "))
c = int(input("insira o lado do triangulo: "))

s= (a+b+c)/2
A= sqrt(s * (s-a) * (s-b) * (s-c))

print(A)
-- EXECUTION TIME:
0.17186
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1585/2905/main.py", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:27:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import sqrt
a = int(input("insira o lado do triangulo: "))
b = int(input("insira o lado do triangulo: "))
c = int(input("insira o lado do triangulo: "))

s= (a+b+c)/2

A= sqrt(s * (s-a) * (s-b) * (s-c))

print(A)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:28:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import sqrt
a = int(input("insira o lado do triangulo: "))
b = int(input("insira o lado do triangulo: "))
c = int(input("insira o lado do triangulo: "))

s= (a+b+c)/2

A= sqrt(s * (s-a) * (s-b) * (s-c))

print(round(A, 5)
-- ERROR:
File "XXXX", line 14
    
                     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:29:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import sqrt
a = int(input("insira o lado do triangulo: "))
b = int(input("insira o lado do triangulo: "))
c = int(input("insira o lado do triangulo: "))

s= (a+b+c)/2

A= sqrt(s * (s-a) * (s-b) * (s-c))

print(round(A, 5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:29:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import sqrt
a = int(input("insira o lado do triangulo: "))
b = int(input("insira o lado do triangulo: "))
c = int(input("insira o lado do triangulo: "))

s= (a+b+c)/2

sqrt(s * (s-a) * (s-b) * (s-c))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:30:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import sqrt
a = int(input("insira o lado do triangulo: "))
b = int(input("insira o lado do triangulo: "))
c = int(input("insira o lado do triangulo: "))

s = (a+b+c)/2

A = sqrt(s * (s-a) * (s-b) * (s-c))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:30:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import sqrt
a = int(input("insira o lado do triangulo: "))
b = int(input("insira o lado do triangulo: "))
c = int(input("insira o lado do triangulo: "))

s = (a+b+c)/2

A = sqrt(s * (s-a) * (s-b) * (s-c))

print(A)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:32:24) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import sqrt
a = int(input("insira o lado do triangulo: "))
b = int(input("insira o lado do triangulo: "))
c = int(input("insira o lado do triangulo: "))

s = (a+b+c)/2

A1 = (s* (s-a) * (s-b) * (s-c))
A = sqrt(A1)

print(A)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:34:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import sqrt
a = int(input("insira o lado do triangulo: "))
b = int(input("insira o lado do triangulo: "))
c = int(input("insira o lado do triangulo: "))

s = (a+b+c)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:34:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import sqrt
a = int(input("insira o lado do triangulo: "))
b = int(input("insira o lado do triangulo: "))
c = int(input("insira o lado do triangulo: "))

s = (a+b+c)/2
print(s)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:35:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import sqrt
a = int(input("insira o lado do triangulo: "))
b = int(input("insira o lado do triangulo: "))
c = int(input("insira o lado do triangulo: "))

s = (a+b+c)/2

A = sqrt(s * (s-a))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:36:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import sqrt
a = int(input("insira o lado do triangulo: "))
b = int(input("insira o lado do triangulo: "))
c = int(input("insira o lado do triangulo: "))

s = (a+b+c)/2

sqrt= (s * (s-a))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:38:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import sqrt
a = int(input("insira o lado do triangulo: "))
b = int(input("insira o lado do triangulo: "))
c = int(input("insira o lado do triangulo: "))

s = (a+b+c)/2
s1 = (s-a)
s2 = (s-b)
s3 = (s-3)
A = (s * s1 * s2 * s3)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:39:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import sqrt
a = int(input("insira o lado do triangulo: "))
b = int(input("insira o lado do triangulo: "))
c = int(input("insira o lado do triangulo: "))

s = (a+b+c)/2
s1 = (s-a)
s2 = (s-b)
s3 = (s-3)
A = (s * s1 * s2 * s3)

print(A)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:40:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import sqrt
a = int(input("insira o lado do triangulo: "))
b = int(input("insira o lado do triangulo: "))
c = int(input("insira o lado do triangulo: "))

s = (a+b+c)/2
s1 = (s-a)
s2 = (s-b)
s3 = (s-3)
A = float(sqrt(s * s1 * s2 * s3))

print(A)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 16:40:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import sqrt
a = int(input("insira o lado do triangulo: "))
b = int(input("insira o lado do triangulo: "))
c = int(input("insira o lado do triangulo: "))

s = (a+b+c)/2
s1 = (s-a)
s2 = (s-b)
s3 = (s-3)
A = float(sqrt(s * s1 * s2 * s3))

print(round(A, 5)

-- EXECUTION TIME:
0.194303
-- ERROR:
  File "/home/codebench/codes/1585/2905/main.py", line 16
    
                     ^
SyntaxError: unexpected EOF while parsing

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:40:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import sqrt
a = int(input("insira o lado do triangulo: "))
b = int(input("insira o lado do triangulo: "))
c = int(input("insira o lado do triangulo: "))

s = (a+b+c)/2
s1 = (s-a)
s2 = (s-b)
s3 = (s-3)
A = float(sqrt(s * s1 * s2 * s3))

print(round(A, 5)

-- ERROR:
File "XXXX", line 16
    
                     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 16:40:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import sqrt
a = int(input("insira o lado do triangulo: "))
b = int(input("insira o lado do triangulo: "))
c = int(input("insira o lado do triangulo: "))

s = (a+b+c)/2
s1 = (s-a)
s2 = (s-b)
s3 = (s-3)
A = float(sqrt(s * s1 * s2 * s3))

print(round(A, 5))

-- EXECUTION TIME:
0.218441
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1585/2905/main.py", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:41:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import sqrt
a = int(input("insira o lado do triangulo: "))
b = int(input("insira o lado do triangulo: "))
c = int(input("insira o lado do triangulo: "))

s = (a+b+c)/2
s1 = (s-a)
s2 = (s-b)
s3 = (s-3)
A = float(sqrt(s * s1 * s2 * s3))

print(round(A, 5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 16:41:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import sqrt
a = int(input("insira o lado do triangulo: "))
b = int(input("insira o lado do triangulo: "))
c = int(input("insira o lado do triangulo: "))

s = (a+b+c)/2
s1 = (s-a)
s2 = (s-b)
s3 = (s-3)
A = float(sqrt(s * s1 * s2 * s3))

print(round(A , 5))

-- EXECUTION TIME:
0.114652
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1585/2905/main.py", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:41:40) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import sqrt
a = int(input("insira o lado do triangulo: "))
b = int(input("insira o lado do triangulo: "))
c = int(input("insira o lado do triangulo: "))

s = (a+b+c)/2
s1 = (s-a)
s2 = (s-b)
s3 = (s-3)
A = float(sqrt(s * s1 * s2 * s3))

print(round( A , 5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 16:42:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import sqrt
a = int(input("insira o lado do triangulo: "))
b = int(input("insira o lado do triangulo: "))
c = int(input("insira o lado do triangulo: "))

s = (a+b+c)/2
s1 = (s-a)
s2 = (s-b)
s3 = (s-3)
A = float(sqrt(s * s1 * s2 * s3))

print(round( A , 6))

-- EXECUTION TIME:
0.178354
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1585/2905/main.py", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:42:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import sqrt
a = int(input("insira o lado do triangulo: "))
b = int(input("insira o lado do triangulo: "))
c = int(input("insira o lado do triangulo: "))

s = (a+b+c)/2
s1 = (s-a)
s2 = (s-b)
s3 = (s-3)
A = float(sqrt(s * s1 * s2 * s3))

print(round(A , 5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:43:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import sqrt
a = int(input("insira o lado do triangulo: "))
b = int(input("insira o lado do triangulo: "))
c = int(input("insira o lado do triangulo: "))

s = (a+b+c)/2
s1 = (s-a)
s2 = (s-b)
s3 = (s-c)
A = float(sqrt(s * s1 * s2 * s3))

print(round(A , 5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:43:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import sqrt
a = int(input("insira o lado do triangulo: "))
b = int(input("insira o lado do triangulo: "))
c = int(input("insira o lado do triangulo: "))

s = (a+b+c)/2
s1 = (s-a)
s2 = (s-b)
s3 = (s-c)
A = float(sqrt(s * s1 * s2 * s3))

print(round(A , 5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 16:43:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import sqrt
a = int(input("insira o lado do triangulo: "))
b = int(input("insira o lado do triangulo: "))
c = int(input("insira o lado do triangulo: "))

s = (a+b+c)/2
s1 = (s-a)
s2 = (s-b)
s3 = (s-c)
A = float(sqrt(s * s1 * s2 * s3))

print(round(A , 5))

-- EXECUTION TIME:
0.181088
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1585/2905/main.py", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:44:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import sqrt
a = int(input("insira o lado do triangulo: "))
b = int(input("insira o lado do triangulo: "))
c = int(input("insira o lado do triangulo: "))

s = (a+b+c)/2
s1 = (s-a)
s2 = (s-b)
s3 = (s-c)
A = float((s * s1 * s2 * s3)sqrt())

print(round(A , 5))

-- ERROR:
File "XXXX", line 13
    A = float((s * s1 * s2 * s3)sqrt())
                                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:44:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import sqrt
a = int(input("insira o lado do triangulo: "))
b = int(input("insira o lado do triangulo: "))
c = int(input("insira o lado do triangulo: "))

s = (a+b+c)/2
s1 = (s-a)
s2 = (s-b)
s3 = (s-c)
A = float(sqrt(s * s1 * s2 * s3))

print(round(A , 5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:45:27) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import sqrt()
a = int(input("insira o lado do triangulo: "))
b = int(input("insira o lado do triangulo: "))
c = int(input("insira o lado do triangulo: "))

s = (a+b+c)/2
s1 = (s-a)
s2 = (s-b)
s3 = (s-c)
A = float(sqrt(s * s1 * s2 * s3))

print(round(A , 5))

-- ERROR:
File "XXXX", line 4
    from math import sqrt()
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 16:45:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import sqrt
a = int(input("insira o lado do triangulo: "))
b = int(input("insira o lado do triangulo: "))
c = int(input("insira o lado do triangulo: "))

s = (a+b+c)/2
s1 = (s-a)
s2 = (s-b)
s3 = (s-c)
A = float(sqrt(s * s1 * s2 * s3))

print(round(A , 5))

-- EXECUTION TIME:
0.133128
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1585/2905/main.py", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:46:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import sqrt
a = int(input("insira o lado do triangulo: "))
b = int(input("insira o lado do triangulo: "))
c = int(input("insira o lado do triangulo: "))

s = (a+b+c)/2
s1 = (s - a)
s2 = (s - b)
s3 = (s - c)
A = float(sqrt(s * s1 * s2 * s3))

print(round(A , 5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:46:37) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import sqrt
a = int(input("insira o lado do triangulo: "))
b = int(input("insira o lado do triangulo: "))
c = int(input("insira o lado do triangulo: "))

s = (a+b+c)/2
s1 = (s - a)
s2 = (s - b)
s3 = (s - c)

A = float(sqrt(s * s1 * s2 * s3))

print(round(A , 5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:47:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import sqrt
a = float(input("insira o lado do triangulo: "))
b = float(input("insira o lado do triangulo: "))
c = float(input("insira o lado do triangulo: "))

s = (a+b+c)/2
s1 = (s - a)
s2 = (s - b)
s3 = (s - c)

A = float(sqrt(s * s1 * s2 * s3))

print(round(A , 5))

-- OUTPUT:
69.41967
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 16:47:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import sqrt
a = float(input("insira o lado do triangulo: "))
b = float(input("insira o lado do triangulo: "))
c = float(input("insira o lado do triangulo: "))

s = (a+b+c)/2
s1 = (s - a)
s2 = (s - b)
s3 = (s - c)

A = float(sqrt(s * s1 * s2 * s3))

print(round(A , 5))

-- EXECUTION TIME:
0.144623
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.41967
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709.16654
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
