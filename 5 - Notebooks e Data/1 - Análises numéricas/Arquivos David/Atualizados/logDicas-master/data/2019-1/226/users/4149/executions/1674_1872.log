== TEST (2019-05-01 19:33:02) 
-- CODE:
x=float(int("Entre com o cvalo de x "))
y=float(int("Entre com o cvalo de y "))
 
if(x==0)and(y==0):
	print("origem")
elif(x==0):
	print("Eixo Y")
elif(y==0):
	print("Eixo X")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    x=float(int("Entre com o cvalo de x "))
ValueError: invalid literal for int() with base 10: 'Entre com o cvalo de x '
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 19:33:32) 
-- CODE:
x=float(input("Entre com o cvalo de x "))
y=float(input("Entre com o cvalo de y "))
 
if(x==0)and(y==0):
	print("origem")
elif(x==0):
	print("Eixo Y")
elif(y==0):
	print("Eixo X")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    x=float(int("Entre com o cvalo de x "))
ValueError: invalid literal for int() with base 10: 'Entre com o cvalo de x '
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 19:33:50) 
-- CODE:
x=float(input("Entre com o cvalo de x "))
y=float(input("Entre com o cvalo de y "))
 
if(x==0)and(y==0):
	print("origem")
elif(x==0):
	print("Eixo Y")
elif(y==0):
	print("Eixo X")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    x=float(int("Entre com o cvalo de x "))
ValueError: invalid literal for int() with base 10: 'Entre com o cvalo de x '
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 19:36:35) 
-- CODE:
x=float(input("Entre com o cvalo de x "))
y=float(input("Entre com o cvalo de y "))
 
if(x==0)and(y==0):
	print("origem")
elif(x==0):
	print("Eixo Y")
elif(y==0):
	print("Eixo X")
	
if(x>0 and y>0):
	print("Q1")
elif(x<0 and y>0):
	print("Q2")
elif()
-- ERROR:
File "XXXX", line 15
    elif()
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 19:36:43) 
-- CODE:
x=float(input("Entre com o cvalo de x "))
y=float(input("Entre com o cvalo de y "))
 
if(x==0)and(y==0):
	print("origem")
elif(x==0):
	print("Eixo Y")
elif(y==0):
	print("Eixo X")
	
if(x>0 and y>0):
	print("Q1")
elif(x<0 and y>0):
	print("Q2")

-- ERROR:
File "XXXX", line 15
    elif()
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 19:38:38) 
-- CODE:
x=float(input("Entre com o cvalo de x "))
y=float(input("Entre com o cvalo de y "))
 
if(x==0)and(y==0):
	print("origem")
elif(x==0):
	print("Eixo Y")
elif(y==0):
	print("Eixo X")
	
if(x>0 and y>0):
	print("Q1")
elif(x<0 and y>0):
	print("Q2")
elif(x<0 and y<0):
	print("Q3")
elif(x>0 and y<0):
	print("Q4")
-- EXECUTION TIME:
0.178439
-- TEST CASE 1:
---- input:
4.5
-2.2
---- correct output:
Q4
---- user output:
Q4
-- TEST CASE 2:
---- input:
0.1
0
---- correct output:
Eixo X
---- user output:
Eixo X
-- TEST CASE 3:
---- input:
0.0
0.0
---- correct output:
Origem
---- user output:
origem
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 19:38:42) 
-- CODE:
x=float(input("Entre com o cvalo de x "))
y=float(input("Entre com o cvalo de y "))
 
if(x==0)and(y==0):
	print("origem")
elif(x==0):
	print("Eixo Y")
elif(y==0):
	print("Eixo X")
	
if(x>0 and y>0):
	print("Q1")
elif(x<0 and y>0):
	print("Q2")
elif(x<0 and y<0):
	print("Q3")
elif(x>0 and y<0):
	print("Q4")
-- OUTPUT:
Q4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 19:39:29) 
-- CODE:
x=float(input("Entre com o cvalo de x "))
y=float(input("Entre com o cvalo de y "))
 
if(x==0)and(y==0):
	print("origem")
elif(x==0):
	print("Eixo Y")
elif(y==0):
	print("Eixo X")
	
if(x>0 and y>0):
	print("Q1")
elif(x<0 and y>0):
	print("Q2")
elif(x<0 and y<0):
	print("Q3")
elif(x>0 and y<0):
	print("Q4")
-- OUTPUT:
Q4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 19:39:55) 
-- CODE:
x=float(input("Entre com o cvalo de x "))
y=float(input("Entre com o cvalo de y "))
 
if(x==0)and(y==0):
	print("Origem")
elif(x==0):
	print("Eixo Y")
elif(y==0):
	print("Eixo X")
	
if(x>0 and y>0):
	print("Q1")
elif(x<0 and y>0):
	print("Q2")
elif(x<0 and y<0):
	print("Q3")
elif(x>0 and y<0):
	print("Q4")
-- EXECUTION TIME:
0.217908
-- TEST CASE 1:
---- input:
4.5
-2.2
---- correct output:
Q4
---- user output:
Q4
-- TEST CASE 2:
---- input:
0.1
0
---- correct output:
Eixo X
---- user output:
Eixo X
-- TEST CASE 3:
---- input:
0.0
0.0
---- correct output:
Origem
---- user output:
Origem
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
