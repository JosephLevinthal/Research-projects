== TEST (2019-04-24 21:40:13) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Digite o lado a: ")
b = float(input("Digite o lado b: ")
c = float(input("Digite o lado c: ")

if(a > 0 and b>0 and c>0):
	if((a<b+c) and (b<a+c) and (c<a+b)):
		if(a==b and b==c):
			print("Tipo de triangulo: equilatero")
		else:
			if(a==b or b==c or a==c):
			 	print("Tipo de triangulo: isosceles")
			else:
				print("Tipo de triangulo: escaleno")
   else:
		print("Tipo de triangulo: invalido")
else:
		print("Tipo de triangulo: invalido")	
		
-- ERROR:
File "XXXX", line 4
    b = float(input()
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 21:40:50) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Digite o lado a: ")
b = float(input("Digite o lado b: ")
c = float(input("Digite o lado c: ")

if(a > 0 and b>0 and c>0):
	if((a<b+c) and (b<a+c) and (c<a+b)):
		if(a==b and b==c):
			print("Tipo de triangulo: equilatero")
		else:
			if(a==b or b==c or a==c):
			 	print("Tipo de triangulo: isosceles")
			else:
				print("Tipo de triangulo: escaleno")
   else:
		print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")	
		
-- ERROR:
File "XXXX", line 4
    b = float(input()
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 21:42:16) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Digite o lado a: ")
b = float(input("Digite o lado b: ")
c = float(input("Digite o lado c: ")

if(a > 0 and b>0 and c>0):
	if((a<b+c) and (b<a+c) and (c<a+b)):
		if(a==b and b==c):
			print("Tipo de triangulo: equilatero")
		else:
			if(a==b or b==c or a==c):
			 	print("Tipo de triangulo: isosceles")
			else:
				print("Tipo de triangulo: escaleno")
   else:
		print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")	
		
-- ERROR:
File "XXXX", line 4
    b = float(input()
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 21:44:45) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Digite o lado a: ")
b = float(input("Digite o lado b: ")
c = float(input("Digite o lado c: ")

if(a > 0 and b>0 and c>0):
	if((a<b+c) and (b<a+c) and (c<a+b)):
		if(a==b and b==c):
			print("Tipo de triangulo: equilatero")
		else:
			if(a==b or b==c or a==c):
			 	print("Tipo de triangulo: isosceles")
			else:
				print("Tipo de triangulo: escaleno")
   else:
		print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")	
		
-- ERROR:
File "XXXX", line 4
    b = float(input()
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 21:45:01) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Digite o lado a: "))
b = float(input("Digite o lado b: "))
c = float(input("Digite o lado c: "))

if(a > 0 and b>0 and c>0):
	if((a<b+c) and (b<a+c) and (c<a+b)):
		if(a==b and b==c):
			print("Tipo de triangulo: equilatero")
		else:
			if(a==b or b==c or a==c):
			 	print("Tipo de triangulo: isosceles")
			else:
				print("Tipo de triangulo: escaleno")
   else:
		print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")	
		
-- ERROR:
File "XXXX", line 16
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 21:45:54) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Digite o lado a: "))
b = float(input("Digite o lado b: "))
c = float(input("Digite o lado c: "))


		
-- ERROR:
File "XXXX", line 16
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 21:56:09) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Digite o lado a: "))
b = float(input("Digite o lado b: "))
c = float(input("Digite o lado c: "))

if(a < 0 and b < 0 and c < 0):
	print("Tipo de triangulo: invalido")
elif(a>b+c or b>a+c or c>a+b):
	print("Tipo de triangulo: invlido")
elif(a==b and a==c):
	print("Tipo de triangulo: equilatero")
elif:(a==b or a==c or b==c):
	print("Tipo de triangulo: isosceles")
else:
	print("Tipo de triangulo: escaleno")

		
-- ERROR:
File "XXXX", line 13
    elif:(a==b or a==c or b==c):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 21:56:26) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Digite o lado a: "))
b = float(input("Digite o lado b: "))
c = float(input("Digite o lado c: "))

if(a < 0 and b < 0 and c < 0):
	print("Tipo de triangulo: invalido")
elif(a>b+c or b>a+c or c>a+b):
	print("Tipo de triangulo: invlido")
elif(a==b and a==c):
	print("Tipo de triangulo: equilatero")
elif(a==b or a==c or b==c):
	print("Tipo de triangulo: isosceles")
else:
	print("Tipo de triangulo: escaleno")

		
-- OUTPUT:
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 21:58:02) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Digite o lado a: "))
b = float(input("Digite o lado b: "))
c = float(input("Digite o lado c: "))

if(a < 0 and b < 0 and c < 0):
	print("Tipo de triangulo: invalido")
elif(a>b+c or b>a+c or c>a+b):
	print("Tipo de triangulo: invalido")
elif(a==b and a==c):
	print("Tipo de triangulo: equilatero")
elif(a==b or a==c or b==c):
	print("Tipo de triangulo: isosceles")
else:
	print("Tipo de triangulo: escaleno")

		
-- OUTPUT:
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 21:58:18) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Digite o lado a: "))
b = float(input("Digite o lado b: "))
c = float(input("Digite o lado c: "))

if(a < 0 and b < 0 and c < 0):
	print("Tipo de triangulo: invalido")
elif(a>b+c or b>a+c or c>a+b):
	print("Tipo de triangulo: invalido")
elif(a==b and a==c):
	print("Tipo de triangulo: equilatero")
elif(a==b or a==c or b==c):
	print("Tipo de triangulo: isosceles")
else:
	print("Tipo de triangulo: escaleno")

		
-- EXECUTION TIME:
0.134156
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 21:58:23) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Digite o lado a: "))
b = float(input("Digite o lado b: "))
c = float(input("Digite o lado c: "))

if(a < 0 and b < 0 and c < 0):
	print("Tipo de triangulo: invalido")
elif(a>b+c or b>a+c or c>a+b):
	print("Tipo de triangulo: invalido")
elif(a==b and a==c):
	print("Tipo de triangulo: equilatero")
elif(a==b or a==c or b==c):
	print("Tipo de triangulo: isosceles")
else:
	print("Tipo de triangulo: escaleno")

		
-- OUTPUT:
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 22:09:28) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Digite o lado a: "))
b = float(input("Digite o lado b: "))
c = float(input("Digite o lado c: "))

if(a < 0 and b < 0 and c < 0):
	print("Entradas:", a, b, c)
	print("Tipo de triangulo: invalido")
elif(a>b+c or b>a+c or c>a+b):
	print("Entradas:", a, b, c)
	print("Tipo de triangulo: invalido")
elif(a==b and a==c):
	print("Entradas:", a, b, c)
	print("Tipo de triangulo: equilatero")
elif(a==b or a==c or b==c):
	print("Entradas:", a, b, c)
	print("Tipo de triangulo: isosceles")
else:
	print("Entradas:", a, b, c)
	print("Tipo de triangulo: escaleno")

		
-- OUTPUT:
Entradas: 2.0 4.0 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 22:13:33) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Digite o lado a: "))
b = float(input("Digite o lado b: "))
c = float(input("Digite o lado c: "))

if(a < 0 and b < 0 and c < 0):
	print("Entradas:", a, b, c)
	print("Tipo de triangulo: invalido")
elif((a>=b+c) or (b>=a+c) or (c>=a+b):
	print("Entradas:", a, b, c)
	print("Tipo de triangulo: invalido")
elif(a==b and a==c):
	print("Entradas:", a, b, c)
	print("Tipo de triangulo: equilatero")
elif(a==b or a==c or b==c):
	print("Entradas:", a, b, c)
	print("Tipo de triangulo: isosceles")
else:
	print("Entradas:", a, b, c)
	print("Tipo de triangulo: escaleno")

		
-- ERROR:
File "XXXX", line 10
    elif((a>=b+c) or (b>=a+c) or (c>=a+b):
                                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 22:13:46) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Digite o lado a: "))
b = float(input("Digite o lado b: "))
c = float(input("Digite o lado c: "))

if(a < 0 and b < 0 and c < 0):
	print("Entradas:", a, b, c)
	print("Tipo de triangulo: invalido")
elif((a>=b+c) or (b>=a+c) or (c>=a+b)):
	print("Entradas:", a, b, c)
	print("Tipo de triangulo: invalido")
elif(a==b and a==c):
	print("Entradas:", a, b, c)
	print("Tipo de triangulo: equilatero")
elif(a==b or a==c or b==c):
	print("Entradas:", a, b, c)
	print("Tipo de triangulo: isosceles")
else:
	print("Entradas:", a, b, c)
	print("Tipo de triangulo: escaleno")

		
-- OUTPUT:
Entradas: 2.0 4.0 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 22:13:53) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Digite o lado a: "))
b = float(input("Digite o lado b: "))
c = float(input("Digite o lado c: "))

if(a < 0 and b < 0 and c < 0):
	print("Entradas:", a, b, c)
	print("Tipo de triangulo: invalido")
elif((a>=b+c) or (b>=a+c) or (c>=a+b)):
	print("Entradas:", a, b, c)
	print("Tipo de triangulo: invalido")
elif(a==b and a==c):
	print("Entradas:", a, b, c)
	print("Tipo de triangulo: equilatero")
elif(a==b or a==c or b==c):
	print("Entradas:", a, b, c)
	print("Tipo de triangulo: isosceles")
else:
	print("Entradas:", a, b, c)
	print("Tipo de triangulo: escaleno")

		
-- EXECUTION TIME:
0.237432
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 4.0 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 4.4 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 2.0 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 22:14:06) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Digite o lado a: "))
b = float(input("Digite o lado b: "))
c = float(input("Digite o lado c: "))

if(a < 0 and b < 0 and c < 0):
	print("Entradas:", a, b, c)
	print("Tipo de triangulo: invalido")
elif((a>=b+c) or (b>=a+c) or (c>=a+b)):
	print("Entradas:", a, b, c)
	print("Tipo de triangulo: invalido")
elif(a==b and a==c):
	print("Entradas:", a, b, c)
	print("Tipo de triangulo: equilatero")
elif(a==b or a==c or b==c):
	print("Entradas:", a, b, c)
	print("Tipo de triangulo: isosceles")
else:
	print("Entradas:", a, b, c)
	print("Tipo de triangulo: escaleno")

		
-- OUTPUT:
Entradas: 2.0 4.0 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 22:16:04) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Digite o lado a: "))
b = float(input("Digite o lado b: "))
c = float(input("Digite o lado c: "))

if(a < 0 and b < 0 and c < 0):
	print("Entradas:", a,"," ,b,",", c)
	print("Tipo de triangulo: invalido")
elif((a>=b+c) or (b>=a+c) or (c>=a+b)):

	print("Tipo de triangulo: invalido")
elif(a==b and a==c):
	
	print("Tipo de triangulo: equilatero")
elif(a==b or a==c or b==c):
	
	print("Tipo de triangulo: isosceles")
else:
	
	print("Tipo de triangulo: escaleno")

		
-- OUTPUT:
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 22:17:12) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Digite o lado a: "))
b = float(input("Digite o lado b: "))
c = float(input("Digite o lado c: "))

if(a < 0 or b < 0 or c < 0):
	print("Entradas:", a,"," ,b,",", c)
	print("Tipo de triangulo: invalido")
elif((a>=b+c) or (b>=a+c) or (c>=a+b)):

	print("Tipo de triangulo: invalido")
elif(a==b and a==c):
	
	print("Tipo de triangulo: equilatero")
elif(a==b or a==c or b==c):
	
	print("Tipo de triangulo: isosceles")
else:
	
	print("Tipo de triangulo: escaleno")

		
-- OUTPUT:
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 22:17:52) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("Digite o lado a: "))
b = float(input("Digite o lado b: "))
c = float(input("Digite o lado c: "))

if(a < 0 or b < 0 or c < 0):
	print("Entradas:", a,"," ,b,",", c)
	print("Tipo de triangulo: invalido")
elif((a>=b+c) or (b>=a+c) or (c>=a+b)):
	print("Entradas:", a,"," ,b,",", c)
	print("Tipo de triangulo: invalido")
elif(a==b and a==c):
	print("Entradas:", a,"," ,b,",", c)
	print("Tipo de triangulo: equilatero")
elif(a==b or a==c or b==c):
	print("Entradas:", a,"," ,b,",", c)
	print("Tipo de triangulo: isosceles")
else:
	print("Entradas:", a,"," ,b,",", c)
	print("Tipo de triangulo: escaleno")

		
-- EXECUTION TIME:
0.166311
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
