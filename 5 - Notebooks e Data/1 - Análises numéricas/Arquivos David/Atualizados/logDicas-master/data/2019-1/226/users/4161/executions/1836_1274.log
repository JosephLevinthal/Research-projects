== TEST (2019-06-25 10:43:12) 
-- CODE:
from numpy import*
from numpy.linalg import*
n = int(input("n: "))
m = zeros((n,n),dtype=int)

for x in range(n):
	for y in range(n):
		if (x<y):
			m[x,y] = y + 1
print(m)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 10:43:35) 
-- CODE:
from numpy import*
from numpy.linalg import*
n = int(input("n: "))
m = ones((n,n),dtype=int)

for x in range(n):
	for y in range(n):
		if (x<y):
			m[x,y] = y + 1
print(m)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 10:44:37) 
-- CODE:
from numpy import*
from numpy.linalg import*
n = int(input("n: "))
m = ones((n,n),dtype=int)

for x in range(n):
	for y in range(n):
		if (x<y):
			m[x,y] = y + 1
		elif x == y:
			m[x,y] = y + 1
print(m)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 10:45:19) 
-- CODE:
from numpy import*
from numpy.linalg import*
n = int(input("n: "))
m = ones((n,n),dtype=int)

for x in range(n):
	for y in range(n):
		if (x<y):
			m[x,y] = y + 1
		elif x == y:
			m[x,y] = y + 1
		elif x>y:
			m[y,x] = y + 1
			
print(m)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 10:45:38) 
-- CODE:
from numpy import*
from numpy.linalg import*
n = int(input("n: "))
m = ones((n,n),dtype=int)

for x in range(n):
	for y in range(n):
		if (x<y):
			m[x,y] = y + 1
		elif x == y:
			m[x,y] = y + 1	
print(m)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 10:46:25) 
-- CODE:
from numpy import*
from numpy.linalg import*
n = int(input("n: "))
m = ones((n,n),dtype=int)

for x in range(n):
	for y in range(n):
		if (x<y):
			m[x,y] = y + 1
print(m)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 10:47:33) 
-- CODE:
from numpy import*
from numpy.linalg import*
n = int(input("n: "))
m = ones((n,n),dtype=int)

for x in range(n):
	for y in range(n):
		if (x<y):
			m[x,y] = y + 1
print(m.T)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 10:49:26) 
-- CODE:
from numpy import*
from numpy.linalg import*
n = int(input("n: "))
m = ones((n,n),dtype=int)

for x in range(n):
	for y in range(n):
		if (x>y):
			m[x,y] = y + 1
		elif x>y:
			m[x,y] = y + 1
		else:
			m[x,y] = y + 1
			
print(m)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 10:49:39) 
-- CODE:
from numpy import*
from numpy.linalg import*
n = int(input("n: "))
m = ones((n,n),dtype=int)

for x in range(n):
	for y in range(n):
		if (x>y):
			m[x,y] = y + 1
		elif x<y:
			m[x,y] = y + 1
		else:
			m[x,y] = y + 1
			
print(m)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 10:49:49) 
-- CODE:
from numpy import*
from numpy.linalg import*
n = int(input("n: "))
m = ones((n,n),dtype=int)

for x in range(n):
	for y in range(n):
		if (x<y):
			m[x,y] = y + 1
		elif x>y:
			m[x,y] = y + 1
		else:
			m[x,y] = y + 1
			
print(m)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 10:50:01) 
-- CODE:
from numpy import*
from numpy.linalg import*
n = int(input("n: "))
m = ones((n,n),dtype=int)

for x in range(n):
	for y in range(n):
		if (x<y):
			m[x,y] = y + 1
		elif x>y:
			m[x,y] = y + 1
		else:
			m[x,y] = y + 1
			
print(m)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 10:50:08) 
-- CODE:
from numpy import*
from numpy.linalg import*
n = int(input("n: "))
m = ones((n,n),dtype=int)

for x in range(n):
	for y in range(n):
		if (x<y):
			m[x,y] = y + 1
		elif x>y:
			m[x,y] = y - 1
		else:
			m[x,y] = y + 1
			
print(m)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 10:50:22) 
-- CODE:
from numpy import*
from numpy.linalg import*
n = int(input("n: "))
m = ones((n,n),dtype=int)

for x in range(n):
	for y in range(n):
		if (x<y):
			m[x,y] = y + 1
		elif x>y:
			m[x,y] = y + 1
		else:
			m[x,y] = y - 1
			
print(m)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 10:50:27) 
-- CODE:
from numpy import*
from numpy.linalg import*
n = int(input("n: "))
m = ones((n,n),dtype=int)

for x in range(n):
	for y in range(n):
		if (x<y):
			m[x,y] = y + 1
		elif x>y:
			m[x,y] = y + 1
		else:
			m[x,y] = y - 1
			
print(m)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 10:51:08) 
-- CODE:
from numpy import*
from numpy.linalg import*
n = int(input("n: "))
m = ones((n,n),dtype=int)

for x in range(n):
	for y in range(n):
		if (x>y):
			m[x,y] = x + 1
		elif (x>y):
			m[x,y] = y + 1
		else:
			m[x,y] = y + 1	
print(m)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 10:51:31) 
-- CODE:
from numpy import*
from numpy.linalg import*
n = int(input("n: "))
m = ones((n,n),dtype=int)

for x in range(n):
	for y in range(n):
		if (x>y):
			m[x,y] = x + 1
		elif (y>x):
			m[x,y] = y + 1
		else:
			m[x,y] = y + 1	
print(m)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 10:51:46) 
-- CODE:
from numpy import*
from numpy.linalg import*
n = int(input("n: "))
m = ones((n,n),dtype=int)

for x in range(n):
	for y in range(n):
		if (x<y):
			m[x,y] = x + 1
		elif (y>x):
			m[x,y] = y + 1
		else:
			m[x,y] = y + 1	
print(m)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-25 10:51:53) 
-- CODE:
from numpy import*
from numpy.linalg import*
n = int(input("n: "))
m = ones((n,n),dtype=int)

for x in range(n):
	for y in range(n):
		if (x<y):
			m[x,y] = x + 1
		elif (y>x):
			m[x,y] = y + 1
		else:
			m[x,y] = y + 1	
print(m)
-- EXECUTION TIME:
1.01967
-- TEST CASE 1:
---- input:
3
---- correct output:
[[1 1 1]
 [1 2 2]
 [1 2 3]]
---- user output:
[[1 1 1]
 [1 2 2]
 [1 2 3]]
-- TEST CASE 2:
---- input:
8
---- correct output:
[[1 1 1 1 1 1 1 1]
 [1 2 2 2 2 2 2 2]
 [1 2 3 3 3 3 3 3]
 [1 2 3 4 4 4 4 4]
 [1 2 3 4 5 5 5 5]
 [1 2 3 4 5 6 6 6]
 [1 2 3 4 5 6 7 7]
 [1 2 3 4 5 6 7 8]]
---- user output:
[[1 1 1 1 1 1 1 1]
 [1 2 2 2 2 2 2 2]
 [1 2 3 3 3 3 3 3]
 [1 2 3 4 4 4 4 4]
 [1 2 3 4 5 5 5 5]
 [1 2 3 4 5 6 6 6]
 [1 2 3 4 5 6 7 7]
 [1 2 3 4 5 6 7 8]]
-- TEST CASE 3:
---- input:
1
---- correct output:
[[1]]
---- user output:
[[1]]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
