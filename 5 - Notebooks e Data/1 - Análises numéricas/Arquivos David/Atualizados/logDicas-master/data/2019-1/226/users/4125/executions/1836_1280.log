== TEST (2019-06-27 11:28:16) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ").upper()

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
	if x == 'A':
		xtab = xtab - 1
    # Move personagem para DIREITA 
	elif x == 'D':
		xtab = xtab + 1 
    # Move personagem para CIMA
	elif x == 'W':
		ytab = ytab - 1
    # Move personagem para BAIXO
	elif x == 'S':
		ytab = ytab + 1

    # Trata evento
    # Moeda
	if tabuleiro[ytab,xtab] == 11:
		moeda = moeda + 1
		tabuleiro[ytab,xtab]= 0
    # Zumbi
	elif tabuleiro[ytab,xtab] == 22:
		life = life - 5

print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 11:28:37) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ").upper()

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
	if x == 'A':
		xtab = xtab - 1
    # Move personagem para DIREITA 
	elif x == 'D':
		xtab = xtab + 1 
    # Move personagem para CIMA
	elif x == 'W':
		ytab = ytab - 1
    # Move personagem para BAIXO
	elif x == 'S':
		ytab = ytab + 1

    # Trata evento
    # Moeda
	if tabuleiro[ytab,xtab] == 11:
		moeda = moeda + 1
		tabuleiro[ytab,xtab]= 0
    # Zumbi
	elif tabuleiro[ytab,xtab] == 22:
		life = life - 5

print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 11:29:18) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ").upper()

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
	if x == 'A':
		xtab = xtab - 1
    # Move personagem para DIREITA 
	elif x == 'D':
		xtab = xtab + 1 
    # Move personagem para CIMA
	elif x == 'W':
		ytab = ytab - 1
    # Move personagem para BAIXO
	elif x == 'S':
		ytab = ytab + 1

    # Trata evento
    # Moeda
	if tabuleiro[ytab,xtab] == 11:
		moeda = moeda + 1
		tabuleiro[ytab,xtab]= 0
    # Zumbi
	elif tabuleiro[ytab,xtab] == 22:
		life = life - 5

print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 11:34:58) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ").upper()

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100
if tabuleiro[ytab,xtab] == 33
# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
	if x == 'A':
		if tabuleiro[ytab,xtab] == 33
		xtab = xtab - 1
    # Move personagem para DIREITA 
	elif x == 'D':
		xtab = xtab + 1
		if tabuleiro[ytab,xtab] == 33
		xtab = xtab -1
    # Move personagem para CIMA
	elif x == 'W':
		ytab = ytab - 1
		if tabuleiro[ytab,xtab] == 33:
			ytab = ytab + 1
    # Move personagem para BAIXO
	elif x == 'S':
		ytab = ytab + 1
		if tabuleiro[ytab,xtab] == 33:
			ytab = ytab -1

    # Trata evento
    # Moeda
	if tabuleiro[ytab,xtab] == 11:
		moeda = moeda + 1
		tabuleiro[ytab,xtab]= 0
    # Zumbi
	elif tabuleiro[ytab,xtab] == 22:
		life = life - 5

print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
-- ERROR:
File "XXXX", line 16
    if tabuleiro[ytab,xtab] == 33
                                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 11:36:01) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ").upper()

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100
if tabuleiro[ytab,xtab] == 33
# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
	if x == 'A':
		xtab = xtab - 1
		if tabuleiro[ytab,xtab] == 33:
			xtab = xtab + 1
    # Move personagem para DIREITA 
	elif x == 'D':
		xtab = xtab + 1
		if tabuleiro[ytab,xtab] == 33:
		xtab = xtab -1
    # Move personagem para CIMA
	elif x == 'W':
		ytab = ytab - 1
		if tabuleiro[ytab,xtab] == 33:
			ytab = ytab + 1
    # Move personagem para BAIXO
	elif x == 'S':
		ytab = ytab + 1
		if tabuleiro[ytab,xtab] == 33:
			ytab = ytab -1

    # Trata evento
    # Moeda
	if tabuleiro[ytab,xtab] == 11:
		moeda = moeda + 1
		tabuleiro[ytab,xtab]= 0
    # Zumbi
	elif tabuleiro[ytab,xtab] == 22:
		life = life - 5

print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
-- ERROR:
File "XXXX", line 16
    if tabuleiro[ytab,xtab] == 33
                                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-27 11:36:03) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ").upper()

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100
if tabuleiro[ytab,xtab] == 33
# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
	if x == 'A':
		xtab = xtab - 1
		if tabuleiro[ytab,xtab] == 33:
			xtab = xtab + 1
    # Move personagem para DIREITA 
	elif x == 'D':
		xtab = xtab + 1
		if tabuleiro[ytab,xtab] == 33:
		xtab = xtab -1
    # Move personagem para CIMA
	elif x == 'W':
		ytab = ytab - 1
		if tabuleiro[ytab,xtab] == 33:
			ytab = ytab + 1
    # Move personagem para BAIXO
	elif x == 'S':
		ytab = ytab + 1
		if tabuleiro[ytab,xtab] == 33:
			ytab = ytab -1

    # Trata evento
    # Moeda
	if tabuleiro[ytab,xtab] == 11:
		moeda = moeda + 1
		tabuleiro[ytab,xtab]= 0
    # Zumbi
	elif tabuleiro[ytab,xtab] == 22:
		life = life - 5

print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
-- EXECUTION TIME:
0.52758
-- ERROR:
  File "/home/codebench/codes/1836/1280/main.py", line 16
    if tabuleiro[ytab,xtab] == 33
                                ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-27 11:36:08) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ").upper()

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100
if tabuleiro[ytab,xtab] == 33
# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
	if x == 'A':
		xtab = xtab - 1
		if tabuleiro[ytab,xtab] == 33:
			xtab = xtab + 1
    # Move personagem para DIREITA 
	elif x == 'D':
		xtab = xtab + 1
		if tabuleiro[ytab,xtab] == 33:
		xtab = xtab -1
    # Move personagem para CIMA
	elif x == 'W':
		ytab = ytab - 1
		if tabuleiro[ytab,xtab] == 33:
			ytab = ytab + 1
    # Move personagem para BAIXO
	elif x == 'S':
		ytab = ytab + 1
		if tabuleiro[ytab,xtab] == 33:
			ytab = ytab -1

    # Trata evento
    # Moeda
	if tabuleiro[ytab,xtab] == 11:
		moeda = moeda + 1
		tabuleiro[ytab,xtab]= 0
    # Zumbi
	elif tabuleiro[ytab,xtab] == 22:
		life = life - 5

print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
-- EXECUTION TIME:
0.738671
-- ERROR:
  File "/home/codebench/codes/1836/1280/main.py", line 16
    if tabuleiro[ytab,xtab] == 33
                                ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 11:37:38) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ").upper()

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100
if tabuleiro[ytab,xtab] == 33
# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
	if x == 'A':
		xtab = xtab - 1
		if tabuleiro[ytab,xtab] == 33:
			xtab = xtab + 1
    # Move personagem para DIREITA 
	elif x == 'D':
		xtab = xtab + 1
		if tabuleiro[ytab,xtab] == 33:
		xtab = xtab -1
    # Move personagem para CIMA
	elif x == 'W':
		ytab = ytab - 1
		if tabuleiro[ytab,xtab] == 33:
			ytab = ytab + 1
    # Move personagem para BAIXO
	elif x == 'S':
		ytab = ytab + 1
		if tabuleiro[ytab,xtab] == 33:
			ytab = ytab -1

    # Trata evento
    # Moeda
	if tabuleiro[ytab,xtab] == 11:
		moeda = moeda + 1
		tabuleiro[ytab,xtab]= 0
    # Zumbi
	elif tabuleiro[ytab,xtab] == 22:
		life = life - 5

print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
-- ERROR:
File "XXXX", line 16
    if tabuleiro[ytab,xtab] == 33
                                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 11:37:56) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ").upper()

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100
# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
	if x == 'A':
		xtab = xtab - 1
		if tabuleiro[ytab,xtab] == 33:
			xtab = xtab + 1
    # Move personagem para DIREITA 
	elif x == 'D':
		xtab = xtab + 1
		if tabuleiro[ytab,xtab] == 33:
		xtab = xtab -1
    # Move personagem para CIMA
	elif x == 'W':
		ytab = ytab - 1
		if tabuleiro[ytab,xtab] == 33:
			ytab = ytab + 1
    # Move personagem para BAIXO
	elif x == 'S':
		ytab = ytab + 1
		if tabuleiro[ytab,xtab] == 33:
			ytab = ytab -1

    # Trata evento
    # Moeda
	if tabuleiro[ytab,xtab] == 11:
		moeda = moeda + 1
		tabuleiro[ytab,xtab]= 0
    # Zumbi
	elif tabuleiro[ytab,xtab] == 22:
		life = life - 5

print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
-- ERROR:
File "XXXX", line 27
    xtab = xtab -1
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 11:38:10) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ").upper()

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100
# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
	if x == 'A':
		xtab = xtab - 1
		if tabuleiro[ytab,xtab] == 33:
			xtab = xtab + 1
    # Move personagem para DIREITA 
	elif x == 'D':
		xtab = xtab + 1
		if tabuleiro[ytab,xtab] == 33:
		xtab = xtab -1
    # Move personagem para CIMA
	elif x == 'W':
		ytab = ytab - 1
		if tabuleiro[ytab,xtab] == 33:
			ytab = ytab + 1
    # Move personagem para BAIXO
	elif x == 'S':
		ytab = ytab + 1
		if tabuleiro[ytab,xtab] == 33:
			ytab = ytab -1

    # Trata evento
    # Moeda
	if tabuleiro[ytab,xtab] == 11:
		moeda = moeda + 1
		tabuleiro[ytab,xtab]= 0
    # Zumbi
	elif tabuleiro[ytab,xtab] == 22:
		life = life - 5

print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
-- ERROR:
File "XXXX", line 27
    xtab = xtab -1
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 11:38:19) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ").upper()

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100
# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
	if x == 'A':
		xtab = xtab - 1
		if tabuleiro[ytab,xtab] == 33:
			xtab = xtab + 1
    # Move personagem para DIREITA 
	elif x == 'D':
		xtab = xtab + 1
		if tabuleiro[ytab,xtab] == 33:
			xtab = xtab -1
    # Move personagem para CIMA
	elif x == 'W':
		ytab = ytab - 1
		if tabuleiro[ytab,xtab] == 33:
			ytab = ytab + 1
    # Move personagem para BAIXO
	elif x == 'S':
		ytab = ytab + 1
		if tabuleiro[ytab,xtab] == 33:
			ytab = ytab -1

    # Trata evento
    # Moeda
	if tabuleiro[ytab,xtab] == 11:
		moeda = moeda + 1
		tabuleiro[ytab,xtab]= 0
    # Zumbi
	elif tabuleiro[ytab,xtab] == 22:
		life = life - 5

print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 11:39:34) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ").upper()

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100
# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
	if x == 'A':
		xtab = xtab - 1
		if tabuleiro[ytab,xtab] == 33:
			xtab = xtab + 1
    # Move personagem para DIREITA 
	elif x == 'D':
		xtab = xtab + 1
		if tabuleiro[ytab,xtab] == 33:
			xtab = xtab -1
    # Move personagem para CIMA
	elif x == 'W':
		ytab = ytab - 1
		if tabuleiro[ytab,xtab] == 33:
			ytab = ytab + 1
    # Move personagem para BAIXO
	elif x == 'S':
		ytab = ytab + 1
		if tabuleiro[ytab,xtab] == 33:
			ytab = ytab -1

    # Trata evento
    # Moeda
	if tabuleiro[ytab,xtab] == 11:
		moeda = moeda + 1
		tabuleiro[ytab,xtab]= 0
    # Zumbi
	elif tabuleiro[ytab,xtab] == 22:
		life = life - 5

print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 11:40:03) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ").upper()

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100
# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
	if x == 'A':
		xtab = xtab - 1
		if tabuleiro[ytab,xtab] == 33:
			xtab = xtab + 1
    # Move personagem para DIREITA 
	elif x == 'D':
		xtab = xtab + 1
		if tabuleiro[ytab,xtab] == 33:
			xtab = xtab -1
    # Move personagem para CIMA
	elif x == 'W':
		ytab = ytab - 1
		if tabuleiro[ytab,xtab] == 33:
			ytab = ytab + 1
    # Move personagem para BAIXO
	elif x == 'S':
		ytab = ytab + 1
		if tabuleiro[ytab,xtab] == 33:
			ytab = ytab -1

    # Trata evento
    # Moeda
	if tabuleiro[ytab,xtab] == 11:
		moeda = moeda + 1
		tabuleiro[ytab,xtab]= 0
    # Zumbi
	elif tabuleiro[ytab,xtab] == 22:
		life = life - 5

print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 11:40:13) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ").upper()

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100
# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
	if x == 'A':
		xtab = xtab - 1
		if tabuleiro[ytab,xtab] == 33:
			xtab = xtab + 1
    # Move personagem para DIREITA 
	elif x == 'D':
		xtab = xtab + 1
		if tabuleiro[ytab,xtab] == 33:
			xtab = xtab -1
    # Move personagem para CIMA
	elif x == 'W':
		ytab = ytab - 1
		if tabuleiro[ytab,xtab] == 33:
			ytab = ytab + 1
    # Move personagem para BAIXO
	elif x == 'S':
		ytab = ytab + 1
		if tabuleiro[ytab,xtab] == 33:
			ytab = ytab -1

    # Trata evento
    # Moeda
	if tabuleiro[ytab,xtab] == 11:
		moeda = moeda + 1
		tabuleiro[ytab,xtab]= 0
    # Zumbi
	elif tabuleiro[ytab,xtab] == 22:
		life = life - 5

print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 11:40:25) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ").upper()

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100
# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
	if x == 'A':
		xtab = xtab - 1
		if tabuleiro[ytab,xtab] == 33:
			xtab = xtab + 1
    # Move personagem para DIREITA 
	elif x == 'D':
		xtab = xtab + 1
		if tabuleiro[ytab,xtab] == 33:
			xtab = xtab -1
    # Move personagem para CIMA
	elif x == 'W':
		ytab = ytab - 1
		if tabuleiro[ytab,xtab] == 33:
			ytab = ytab + 1
    # Move personagem para BAIXO
	elif x == 'S':
		ytab = ytab + 1
		if tabuleiro[ytab,xtab] == 33:
			ytab = ytab -1

    # Trata evento
    # Moeda
	if tabuleiro[ytab,xtab] == 11:
		moeda = moeda + 1
		tabuleiro[ytab,xtab]= 0
    # Zumbi
	elif tabuleiro[ytab,xtab] == 22:
		life = life - 5

print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 08:38:57) 
-- CODE:
from numpy import *
from numpy.linalg import*
tabuleiro = array(eval(input("tabuleiro: ")))
mov = input("movimentos: ")
xtab = int(0)
ytab = int(0)
moeda = 0
life = 100
a = shape(tabuleiro)[1] - 1
b = shape(tabuleiro)[0] - 1
for x in mov:
	
	if x == "A":
		xtab = xtab - 1
		if xtab<0:
			xtab = xtab + 1
		if tabuleiro[ytab,xtab] ==33:
			xtab = xtab + 1
			
			
	elif x == "D":
		xtab = xtab + 1
		if xtab>a:
			xtab = xtab - 1
		if tabuleiro[ytab,xtab] ==33:
			xtab= xtab - 1
			
			
	elif x == "W":
		ytab =ytab - 1
		if ytab<0:
			ytab = ytab + 1
		if tabuleiro[ytab,xtab] ==33:
			ytab = ytab + 1
			
			
	elif x == "S":
		ytab= ytab + 1
		if ytab>b:
			ytab=ytab - 1
		if tabuleiro[ytab,xtab] ==33:
			ytab = ytab - 1
			
			
	if tabuleiro[ytab,xtab] ==11:
		moeda = moeda + 1
		tabuleiro[ytab,xtab] = 0
	elif tabuleiro[ytab,xtab] == 22:
		life = life - 5
	
	
		
print("posicao x: ",xtab)
print("posicao y: ",ytab)
print("moedas: ", moeda)
print("life: ", life)
-- EXECUTION TIME:
1.15999
-- TEST CASE 1:
---- input:
[[0,11,0,33,0,33,22,0,11,0,11,0,11],[11,0,22,11,0,11,33,0,11,0,0,0,22],[11,22,22,33,0,11,11,0,22,0,11,11,22],[22,33,0,11,0,11,11,0,22,0,0,0,0],[22,11,11,11,0,11,22,0,11,0,22,0,22],[11,11,22,33,0,0,11,0,22,0,0,22,11],[0,11,0,33,0,11,22,0,22,0,22,0,11],[0,11,33,11,0,11,22,0,11,0,0,11,11],[11,11,33,11,0,0,11,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,22,0,0,0,11],[0,11,22,11,0,0,11,0,22,0,11,0,11]]
DDDDDWWWWSSSSDDDWSWDSDWDDDDDDDDDSSSSSSSSSSSDDDDWSADSWASADSWASD
---- correct output:
posicao x:  11
posicao y:  10
moedas:  13
life:  75
---- user output:
posicao x:  11
posicao y:  10
moedas:  13
life:  75
-- TEST CASE 2:
---- input:
[[0,11,0,33,0,33,22,0,11,0,11,0,11],[11,0,22,11,0,11,33,0,11,0,0,0,22],[11,22,22,33,0,11,11,0,22,0,11,11,22],[22,33,0,11,0,11,11,0,22,0,0,0,0],[22,11,11,11,0,11,22,0,11,0,22,0,22],[11,11,22,33,0,0,11,0,22,0,0,22,11],[0,11,0,33,0,11,22,0,22,0,22,0,11],[0,11,33,11,0,11,22,0,11,0,0,11,11],[11,11,33,11,0,0,11,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,22,0,0,0,11],[0,11,22,11,0,0,11,0,22,0,11,0,11]]
SAWSDADDDDDDDDDDSSSSSSSSSSSDDDDDDDWWWWWWWWAAAAAAAAAAWSDAASDSWADSAWSWD
---- correct output:
posicao x:  5
posicao y:  3
moedas:  20
life:  75
---- user output:
tabuleiro: movimentos: posicao x:  5
posicao y:  3
moedas:  20
life:  75
-- TEST CASE 3:
---- input:
[[0,11,0,33,0,33,22,0,11,0,11,0,11],[11,0,22,11,0,11,33,0,11,0,0,0,22],[11,22,22,33,0,11,11,0,22,0,11,11,22],[22,33,0,11,0,11,11,0,22,0,0,0,0],[22,11,11,11,0,11,22,0,11,0,22,0,22],[11,11,22,33,0,0,11,0,22,0,0,22,11],[0,11,0,33,0,11,22,0,22,0,22,0,11],[0,11,33,11,0,11,22,0,11,0,0,11,11],[11,11,33,11,0,0,11,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,22,0,0,0,11],[0,11,22,11,0,0,11,0,22,0,11,0,11]]
AWSWDSSDSDSDSDSAWAWAWASDSDSSASASASWDWDWDWDWASWDAWSWDAWSDWSADSWASDWSAWWDSADWSAWSWDSAWSW
---- correct output:
posicao x:  6
posicao y:  2
moedas:  13
life:  55
---- user output:
tabuleiro: movimentos: posicao x:  6
posicao y:  2
moedas:  13
life:  55
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 08:39:42) 
-- CODE:
from numpy import *
from numpy import*
tabuleiro = array(eval(input("tabuleiro: ")))
mov = input("movimentos: ")
xtab = int(0)
ytab = int(0)
moeda = 0
life = 100
a = shape(tabuleiro)[1] - 1
b = shape(tabuleiro)[0] - 1
for x in mov:
	
	if x == "A":
		xtab = xtab - 1
		if xtab<0:
			xtab = xtab + 1
		if tabuleiro[ytab,xtab] ==33:
			xtab = xtab + 1
			
			
	elif x == "D":
		xtab = xtab + 1
		if xtab>a:
			xtab = xtab - 1
		if tabuleiro[ytab,xtab] ==33:
			xtab= xtab - 1
			
			
	elif x == "W":
		ytab =ytab - 1
		if ytab<0:
			ytab = ytab + 1
		if tabuleiro[ytab,xtab] ==33:
			ytab = ytab + 1
			
			
	elif x == "S":
		ytab= ytab + 1
		if ytab>b:
			ytab=ytab - 1
		if tabuleiro[ytab,xtab] ==33:
			ytab = ytab - 1
			
			
	if tabuleiro[ytab,xtab] ==11:
		moeda = moeda + 1
		tabuleiro[ytab,xtab] = 0
	elif tabuleiro[ytab,xtab] == 22:
		life = life - 5
	
	
		
print("posicao x: ",xtab)
print("posicao y: ",ytab)
print("moedas: ", moeda)
print("life: ", life)
-- EXECUTION TIME:
1.18732
-- TEST CASE 1:
---- input:
[[0,11,0,33,0,33,22,0,11,0,11,0,11],[11,0,22,11,0,11,33,0,11,0,0,0,22],[11,22,22,33,0,11,11,0,22,0,11,11,22],[22,33,0,11,0,11,11,0,22,0,0,0,0],[22,11,11,11,0,11,22,0,11,0,22,0,22],[11,11,22,33,0,0,11,0,22,0,0,22,11],[0,11,0,33,0,11,22,0,22,0,22,0,11],[0,11,33,11,0,11,22,0,11,0,0,11,11],[11,11,33,11,0,0,11,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,22,0,0,0,11],[0,11,22,11,0,0,11,0,22,0,11,0,11]]
DDDDDWWWWSSSSDDDWSWDSDWDDDDDDDDDSSSSSSSSSSSDDDDWSADSWASADSWASD
---- correct output:
posicao x:  11
posicao y:  10
moedas:  13
life:  75
---- user output:
posicao x:  11
posicao y:  10
moedas:  13
life:  75
-- TEST CASE 2:
---- input:
[[0,11,0,33,0,33,22,0,11,0,11,0,11],[11,0,22,11,0,11,33,0,11,0,0,0,22],[11,22,22,33,0,11,11,0,22,0,11,11,22],[22,33,0,11,0,11,11,0,22,0,0,0,0],[22,11,11,11,0,11,22,0,11,0,22,0,22],[11,11,22,33,0,0,11,0,22,0,0,22,11],[0,11,0,33,0,11,22,0,22,0,22,0,11],[0,11,33,11,0,11,22,0,11,0,0,11,11],[11,11,33,11,0,0,11,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,22,0,0,0,11],[0,11,22,11,0,0,11,0,22,0,11,0,11]]
SAWSDADDDDDDDDDDSSSSSSSSSSSDDDDDDDWWWWWWWWAAAAAAAAAAWSDAASDSWADSAWSWD
---- correct output:
posicao x:  5
posicao y:  3
moedas:  20
life:  75
---- user output:
posicao x:  5
posicao y:  3
moedas:  20
life:  75
-- TEST CASE 3:
---- input:
[[0,11,0,33,0,33,22,0,11,0,11,0,11],[11,0,22,11,0,11,33,0,11,0,0,0,22],[11,22,22,33,0,11,11,0,22,0,11,11,22],[22,33,0,11,0,11,11,0,22,0,0,0,0],[22,11,11,11,0,11,22,0,11,0,22,0,22],[11,11,22,33,0,0,11,0,22,0,0,22,11],[0,11,0,33,0,11,22,0,22,0,22,0,11],[0,11,33,11,0,11,22,0,11,0,0,11,11],[11,11,33,11,0,0,11,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,22,0,0,0,11],[0,11,22,11,0,0,11,0,22,0,11,0,11]]
AWSWDSSDSDSDSDSAWAWAWASDSDSSASASASWDWDWDWDWASWDAWSWDAWSDWSADSWASDWSAWWDSADWSAWSWDSAWSW
---- correct output:
posicao x:  6
posicao y:  2
moedas:  13
life:  55
---- user output:
posicao x:  6
posicao y:  2
moedas:  13
life:  55
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 08:39:57) 
-- CODE:
from numpy import *
from numpy import*
tabuleiro = array(eval(input("tabuleiro: ")))
mov = input("movimentos: ")
xtab = int(0)
ytab = int(0)
moeda = 0
life = 100
a = shape(tabuleiro)[1] - 1
b = shape(tabuleiro)[0] - 1
for x in mov:
	
	if x == "A":
		xtab = xtab - 1
		if xtab<0:
			xtab = xtab + 1
		if tabuleiro[ytab,xtab] ==33:
			xtab = xtab + 1
			
			
	elif x == "D":
		xtab = xtab + 1
		if xtab>a:
			xtab = xtab - 1
		if tabuleiro[ytab,xtab] ==33:
			xtab= xtab - 1
			
			
	elif x == "W":
		ytab =ytab - 1
		if ytab<0:
			ytab = ytab + 1
		if tabuleiro[ytab,xtab] ==33:
			ytab = ytab + 1
			
			
	elif x == "S":
		ytab= ytab + 1
		if ytab>b:
			ytab=ytab - 1
		if tabuleiro[ytab,xtab] ==33:
			ytab = ytab - 1
			
			
	if tabuleiro[ytab,xtab] ==11:
		moeda = moeda + 1
		tabuleiro[ytab,xtab] = 0
	elif tabuleiro[ytab,xtab] == 22:
		life = life - 5
	
	
		
print("posicao x: ",xtab)
print("posicao y: ",ytab)
print("moedas: ", moeda)
print("life: ", life)
-- EXECUTION TIME:
1.11109
-- TEST CASE 1:
---- input:
[[0,11,0,33,0,33,22,0,11,0,11,0,11],[11,0,22,11,0,11,33,0,11,0,0,0,22],[11,22,22,33,0,11,11,0,22,0,11,11,22],[22,33,0,11,0,11,11,0,22,0,0,0,0],[22,11,11,11,0,11,22,0,11,0,22,0,22],[11,11,22,33,0,0,11,0,22,0,0,22,11],[0,11,0,33,0,11,22,0,22,0,22,0,11],[0,11,33,11,0,11,22,0,11,0,0,11,11],[11,11,33,11,0,0,11,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,22,0,0,0,11],[0,11,22,11,0,0,11,0,22,0,11,0,11]]
DDDDDWWWWSSSSDDDWSWDSDWDDDDDDDDDSSSSSSSSSSSDDDDWSADSWASADSWASD
---- correct output:
posicao x:  11
posicao y:  10
moedas:  13
life:  75
---- user output:
posicao x:  11
posicao y:  10
moedas:  13
life:  75
-- TEST CASE 2:
---- input:
[[0,11,0,33,0,33,22,0,11,0,11,0,11],[11,0,22,11,0,11,33,0,11,0,0,0,22],[11,22,22,33,0,11,11,0,22,0,11,11,22],[22,33,0,11,0,11,11,0,22,0,0,0,0],[22,11,11,11,0,11,22,0,11,0,22,0,22],[11,11,22,33,0,0,11,0,22,0,0,22,11],[0,11,0,33,0,11,22,0,22,0,22,0,11],[0,11,33,11,0,11,22,0,11,0,0,11,11],[11,11,33,11,0,0,11,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,22,0,0,0,11],[0,11,22,11,0,0,11,0,22,0,11,0,11]]
SAWSDADDDDDDDDDDSSSSSSSSSSSDDDDDDDWWWWWWWWAAAAAAAAAAWSDAASDSWADSAWSWD
---- correct output:
posicao x:  5
posicao y:  3
moedas:  20
life:  75
---- user output:
posicao x:  5
posicao y:  3
moedas:  20
life:  75
-- TEST CASE 3:
---- input:
[[0,11,0,33,0,33,22,0,11,0,11,0,11],[11,0,22,11,0,11,33,0,11,0,0,0,22],[11,22,22,33,0,11,11,0,22,0,11,11,22],[22,33,0,11,0,11,11,0,22,0,0,0,0],[22,11,11,11,0,11,22,0,11,0,22,0,22],[11,11,22,33,0,0,11,0,22,0,0,22,11],[0,11,0,33,0,11,22,0,22,0,22,0,11],[0,11,33,11,0,11,22,0,11,0,0,11,11],[11,11,33,11,0,0,11,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,22,0,0,0,11],[0,11,22,11,0,0,11,0,22,0,11,0,11]]
AWSWDSSDSDSDSDSAWAWAWASDSDSSASASASWDWDWDWDWASWDAWSWDAWSDWSADSWASDWSAWWDSADWSAWSWDSAWSW
---- correct output:
posicao x:  6
posicao y:  2
moedas:  13
life:  55
---- user output:
posicao x:  6
posicao y:  2
moedas:  13
life:  55
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 08:39:59) 
-- CODE:
from numpy import *
from numpy import*
tabuleiro = array(eval(input("tabuleiro: ")))
mov = input("movimentos: ")
xtab = int(0)
ytab = int(0)
moeda = 0
life = 100
a = shape(tabuleiro)[1] - 1
b = shape(tabuleiro)[0] - 1
for x in mov:
	
	if x == "A":
		xtab = xtab - 1
		if xtab<0:
			xtab = xtab + 1
		if tabuleiro[ytab,xtab] ==33:
			xtab = xtab + 1
			
			
	elif x == "D":
		xtab = xtab + 1
		if xtab>a:
			xtab = xtab - 1
		if tabuleiro[ytab,xtab] ==33:
			xtab= xtab - 1
			
			
	elif x == "W":
		ytab =ytab - 1
		if ytab<0:
			ytab = ytab + 1
		if tabuleiro[ytab,xtab] ==33:
			ytab = ytab + 1
			
			
	elif x == "S":
		ytab= ytab + 1
		if ytab>b:
			ytab=ytab - 1
		if tabuleiro[ytab,xtab] ==33:
			ytab = ytab - 1
			
			
	if tabuleiro[ytab,xtab] ==11:
		moeda = moeda + 1
		tabuleiro[ytab,xtab] = 0
	elif tabuleiro[ytab,xtab] == 22:
		life = life - 5
	
	
		
print("posicao x: ",xtab)
print("posicao y: ",ytab)
print("moedas: ", moeda)
print("life: ", life)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 08:40:19) 
-- CODE:
from numpy import *
from numpy import*
tabuleiro = array(eval(input("tabuleiro: ")))
mov = input("movimentos: ")
xtab = int(0)
ytab = int(0)
moeda = 0
life = 100
a = shape(tabuleiro)[1] - 1
b = shape(tabuleiro)[0] - 1
for x in mov:
	
	if x == "A":
		xtab = xtab - 1
		if xtab<0:
			xtab = xtab + 1
		if tabuleiro[ytab,xtab] ==33:
			xtab = xtab + 1
			
			
	elif x == "D":
		xtab = xtab + 1
		if xtab>a:
			xtab = xtab - 1
		if tabuleiro[ytab,xtab] ==33:
			xtab= xtab - 1
			
			
	elif x == "W":
		ytab =ytab - 1
		if ytab<0:
			ytab = ytab + 1
		if tabuleiro[ytab,xtab] ==33:
			ytab = ytab + 1
			
			
	elif x == "S":
		ytab= ytab + 1
		if ytab>b:
			ytab=ytab - 1
		if tabuleiro[ytab,xtab] ==33:
			ytab = ytab - 1		
	
	if tabuleiro[ytab,xtab] ==11:
		moeda = moeda + 1
		tabuleiro[ytab,xtab] = 0
	
	elif tabuleiro[ytab,xtab] == 22:
		life = life - 5
	
	
		
print("posicao x: ",xtab)
print("posicao y: ",ytab)
print("moedas: ", moeda)
print("life: ", life)
-- EXECUTION TIME:
0.81708
-- TEST CASE 1:
---- input:
[[0,11,0,33,0,33,22,0,11,0,11,0,11],[11,0,22,11,0,11,33,0,11,0,0,0,22],[11,22,22,33,0,11,11,0,22,0,11,11,22],[22,33,0,11,0,11,11,0,22,0,0,0,0],[22,11,11,11,0,11,22,0,11,0,22,0,22],[11,11,22,33,0,0,11,0,22,0,0,22,11],[0,11,0,33,0,11,22,0,22,0,22,0,11],[0,11,33,11,0,11,22,0,11,0,0,11,11],[11,11,33,11,0,0,11,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,22,0,0,0,11],[0,11,22,11,0,0,11,0,22,0,11,0,11]]
DDDDDWWWWSSSSDDDWSWDSDWDDDDDDDDDSSSSSSSSSSSDDDDWSADSWASADSWASD
---- correct output:
posicao x:  11
posicao y:  10
moedas:  13
life:  75
---- user output:
posicao x:  11
posicao y:  10
moedas:  13
life:  75
-- TEST CASE 2:
---- input:
[[0,11,0,33,0,33,22,0,11,0,11,0,11],[11,0,22,11,0,11,33,0,11,0,0,0,22],[11,22,22,33,0,11,11,0,22,0,11,11,22],[22,33,0,11,0,11,11,0,22,0,0,0,0],[22,11,11,11,0,11,22,0,11,0,22,0,22],[11,11,22,33,0,0,11,0,22,0,0,22,11],[0,11,0,33,0,11,22,0,22,0,22,0,11],[0,11,33,11,0,11,22,0,11,0,0,11,11],[11,11,33,11,0,0,11,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,22,0,0,0,11],[0,11,22,11,0,0,11,0,22,0,11,0,11]]
SAWSDADDDDDDDDDDSSSSSSSSSSSDDDDDDDWWWWWWWWAAAAAAAAAAWSDAASDSWADSAWSWD
---- correct output:
posicao x:  5
posicao y:  3
moedas:  20
life:  75
---- user output:
posicao x:  5
posicao y:  3
moedas:  20
life:  75
-- TEST CASE 3:
---- input:
[[0,11,0,33,0,33,22,0,11,0,11,0,11],[11,0,22,11,0,11,33,0,11,0,0,0,22],[11,22,22,33,0,11,11,0,22,0,11,11,22],[22,33,0,11,0,11,11,0,22,0,0,0,0],[22,11,11,11,0,11,22,0,11,0,22,0,22],[11,11,22,33,0,0,11,0,22,0,0,22,11],[0,11,0,33,0,11,22,0,22,0,22,0,11],[0,11,33,11,0,11,22,0,11,0,0,11,11],[11,11,33,11,0,0,11,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,22,0,0,0,11],[0,11,22,11,0,0,11,0,22,0,11,0,11]]
AWSWDSSDSDSDSDSAWAWAWASDSDSSASASASWDWDWDWDWASWDAWSWDAWSDWSADSWASDWSAWWDSADWSAWSWDSAWSW
---- correct output:
posicao x:  6
posicao y:  2
moedas:  13
life:  55
---- user output:
posicao x:  6
posicao y:  2
moedas:  13
life:  55
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 08:40:40) 
-- CODE:
from numpy import *
from numpy import*


tabuleiro = array(eval(input("tabuleiro: ")))

mov = input("movimentos: ")

xtab = int(0)

ytab = int(0)

moeda = 0

life = 100
a = shape(tabuleiro)[1] - 1
b = shape(tabuleiro)[0] - 1
for x in mov:
	
	if x == "A":
		xtab = xtab - 1
		if xtab<0:
			xtab = xtab + 1
		if tabuleiro[ytab,xtab] ==33:
			xtab = xtab + 1
			
			
	elif x == "D":
		xtab = xtab + 1
		if xtab>a:
			xtab = xtab - 1
		if tabuleiro[ytab,xtab] ==33:
			xtab= xtab - 1
			
			
	elif x == "W":
		ytab =ytab - 1
		if ytab<0:
			ytab = ytab + 1
		if tabuleiro[ytab,xtab] ==33:
			ytab = ytab + 1
			
			
	elif x == "S":
		ytab= ytab + 1
		if ytab>b:
			ytab=ytab - 1
		if tabuleiro[ytab,xtab] ==33:
			ytab = ytab - 1		
	
	if tabuleiro[ytab,xtab] ==11:
		moeda = moeda + 1
		tabuleiro[ytab,xtab] = 0
	
	elif tabuleiro[ytab,xtab] == 22:
		life = life - 5
	
	
		
print("posicao x: ",xtab)
print("posicao y: ",ytab)
print("moedas: ", moeda)
print("life: ", life)
-- EXECUTION TIME:
1.02948
-- TEST CASE 1:
---- input:
[[0,11,0,33,0,33,22,0,11,0,11,0,11],[11,0,22,11,0,11,33,0,11,0,0,0,22],[11,22,22,33,0,11,11,0,22,0,11,11,22],[22,33,0,11,0,11,11,0,22,0,0,0,0],[22,11,11,11,0,11,22,0,11,0,22,0,22],[11,11,22,33,0,0,11,0,22,0,0,22,11],[0,11,0,33,0,11,22,0,22,0,22,0,11],[0,11,33,11,0,11,22,0,11,0,0,11,11],[11,11,33,11,0,0,11,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,22,0,0,0,11],[0,11,22,11,0,0,11,0,22,0,11,0,11]]
DDDDDWWWWSSSSDDDWSWDSDWDDDDDDDDDSSSSSSSSSSSDDDDWSADSWASADSWASD
---- correct output:
posicao x:  11
posicao y:  10
moedas:  13
life:  75
---- user output:
posicao x:  11
posicao y:  10
moedas:  13
life:  75
-- TEST CASE 2:
---- input:
[[0,11,0,33,0,33,22,0,11,0,11,0,11],[11,0,22,11,0,11,33,0,11,0,0,0,22],[11,22,22,33,0,11,11,0,22,0,11,11,22],[22,33,0,11,0,11,11,0,22,0,0,0,0],[22,11,11,11,0,11,22,0,11,0,22,0,22],[11,11,22,33,0,0,11,0,22,0,0,22,11],[0,11,0,33,0,11,22,0,22,0,22,0,11],[0,11,33,11,0,11,22,0,11,0,0,11,11],[11,11,33,11,0,0,11,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,22,0,0,0,11],[0,11,22,11,0,0,11,0,22,0,11,0,11]]
SAWSDADDDDDDDDDDSSSSSSSSSSSDDDDDDDWWWWWWWWAAAAAAAAAAWSDAASDSWADSAWSWD
---- correct output:
posicao x:  5
posicao y:  3
moedas:  20
life:  75
---- user output:
posicao x:  5
posicao y:  3
moedas:  20
life:  75
-- TEST CASE 3:
---- input:
[[0,11,0,33,0,33,22,0,11,0,11,0,11],[11,0,22,11,0,11,33,0,11,0,0,0,22],[11,22,22,33,0,11,11,0,22,0,11,11,22],[22,33,0,11,0,11,11,0,22,0,0,0,0],[22,11,11,11,0,11,22,0,11,0,22,0,22],[11,11,22,33,0,0,11,0,22,0,0,22,11],[0,11,0,33,0,11,22,0,22,0,22,0,11],[0,11,33,11,0,11,22,0,11,0,0,11,11],[11,11,33,11,0,0,11,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,22,0,0,0,11],[0,11,22,11,0,0,11,0,22,0,11,0,11]]
AWSWDSSDSDSDSDSAWAWAWASDSDSSASASASWDWDWDWDWASWDAWSWDAWSDWSADSWASDWSAWWDSADWSAWSWDSAWSW
---- correct output:
posicao x:  6
posicao y:  2
moedas:  13
life:  55
---- user output:
posicao x:  6
posicao y:  2
moedas:  13
life:  55
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
