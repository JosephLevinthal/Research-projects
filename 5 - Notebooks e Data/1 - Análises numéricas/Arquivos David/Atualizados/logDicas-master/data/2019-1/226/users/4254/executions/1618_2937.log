== TEST (2019-04-02 11:05:20) 
-- CODE:
n = float(input("valor do nº de mols: "))
v = float(input("valor do volume: "))
t = float(input("valor da temp.: "))

p = (n*0.082057*t)/v

print(p)
-- OUTPUT:
0.0051285625
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 11:06:08) 
-- CODE:
n = float(input("valor do nº de mols: "))
v = float(input("valor do volume: "))
t = float(input("valor da temp.: "))

p = ((n * 0.082057 * t)/v)

print(p)
-- OUTPUT:
0.0051285625
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 11:06:37) 
-- CODE:
n = int(input("valor do nº de mols: "))
v = float(input("valor do volume: "))
t = float(input("valor da temp.: "))

p = ((n * 0.082057 * t)/v)

print(p)
-- OUTPUT:
0.0051285625
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 11:07:18) 
-- CODE:
n = float(input("valor do nº de mols: "))
v = float(input("valor do volume: "))
t = float(input("valor da temp.: "))

p = n * 0.082057 * t / v

print(p)
-- OUTPUT:
0.0051285625
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 11:08:33) 
-- CODE:
n = float(input("valor do nº de mols: "))
v = float(input("valor do volume: "))
t = float(input("valor da temp.: "))

p = n * 0.082057 * t / v

print(n*v*t)
-- OUTPUT:
6400.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 11:09:17) 
-- CODE:
n = float(input("valor do nº de mols: "))
v = float(input("valor do volume: "))
t = float(input("valor da temp.: "))
r = 0.082057
p = n * r * t / v

print(n*v*t)
-- OUTPUT:
6400.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 11:09:34) 
-- CODE:
n = float(input("valor do nº de mols: "))
v = float(input("valor do volume: "))
t = float(input("valor da temp.: "))
r = 0.082057

p = n * r * t / v

print(p)
-- EXECUTION TIME:
0.186044
-- TEST CASE 1:
---- input:
1
320.0
20.0
---- correct output:
0.07515908343750001
---- user output:
0.0051285625
-- TEST CASE 2:
---- input:
5
155.8
80.0
---- correct output:
0.9298564409499358
---- user output:
0.2106726572528883
-- TEST CASE 3:
---- input:
12
1220.0
30.0
---- correct output:
0.244637475737705
---- user output:
0.02421354098360656
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 11:09:38) 
-- CODE:
n = float(input("valor do nº de mols: "))
v = float(input("valor do volume: "))
t = float(input("valor da temp.: "))
r = 0.082057

p = n * r * t / v

print(p)
-- OUTPUT:
0.0051285625
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 11:10:58) 
-- CODE:
n = float(input("valor do nº de mols: "))
v = float(input("valor do volume: "))
t = float(input("valor da temp.: "))
tf = t + 273,1
r = 0.082057

p = n * r * tf / v

print(p)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    p = n * r * tf / v
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 11:11:02) 
-- CODE:
n = float(input("valor do nº de mols: "))
v = float(input("valor do volume: "))
t = float(input("valor da temp.: "))
tf = t + 273,1
r = 0.082057

p = n * r * tf / v

print(p)
-- EXECUTION TIME:
0.174192
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1618/2937/main.py", line 7, in <module>
    p = n * r * tf / v
TypeError: can't multiply sequence by non-int of type 'float'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 11:11:47) 
-- CODE:
n = float(input("valor do nº de mols: "))
v = float(input("valor do volume: "))
t = float(input("valor da temp.: "))
tf = t + 273,1
r = 0.082057

pressão = n * r * tf / v

print(pressão)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    pressão = n * r * tf / v
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 11:12:01) 
-- CODE:
n = float(input("valor do n de mols: "))
v = float(input("valor do volume: "))
t = float(input("valor da temp.: "))
tf = t + 273,1
r = 0.082057

pressão = n * r * tf / v

print(pressão)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    pressão = n * r * tf / v
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 11:12:35) 
-- CODE:
n = float(input("valor do n de mols: "))
v = float(input("valor do volume: "))
t = float(input("valor da temp.: "))
tf = t + 273,1
r = 0.082057

pressão = (n * r * tf) / v

print(pressão)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    pressão = (n * r * tf) / v
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 11:13:37) 
-- CODE:
n = float(input("valor do n de mols: "))
v = float(input("valor do volume: "))
t = float(input("valor da temp.: "))
tf = t + 273,1
r = 0.082057

pressão = (n * r * tf) / v

print(float(pressão))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    pressão = (n * r * tf) / v
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 11:14:18) 
-- CODE:
n = float(input("valor do n de mols: "))
v = float(input("valor do volume: "))
t = float(input("valor da temp.: "))
tf = t + 273,1
r = 0.082057

pressão = ((n * r * tf) / v)

print(pressão)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    pressão = ((n * r * tf) / v)
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 11:14:57) 
-- CODE:
n = int(input("valor do n de mols: "))
v = float(input("valor do volume: "))
t = float(input("valor da temp.: "))
tf = t + 273,1
r = 0.082057

pressão = ((n * r * tf) / v)

print(pressão)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    pressão = ((n * r * tf) / v)
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 11:15:15) 
-- CODE:
n = int(input("valor do n de mols: "))
v = float(input("valor do volume: "))
t = float(input("valor da temp.: "))
tf = t + 273,1
r = 0.082057

pressão = ((n * r * tf) / v)

print(pressão)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    pressão = ((n * r * tf) / v)
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 11:15:33) 
-- CODE:
n = int(input("valor do n de mols: "))
v = float(input("valor do volume: "))
t = float(input("valor da temp.: "))
tf = t + 273,1
r = 0.082057

pressão = ((n * r * tf) / v)

print(pressão)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    pressão = ((n * r * tf) / v)
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 11:16:58) 
-- CODE:
n = int(input("valor do n de mols: "))
v = float(input("valor do volume: "))
t = float(input("valor da temp.: "))
tf = t + 273,1
r = 0.082057

p = (n * r * tf)

print(p)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    p = (n * r * tf)
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 11:17:14) 
-- CODE:
n = int(input("valor do n de mols: "))
v = float(input("valor do volume: "))
t = float(input("valor da temp.: "))
t1 = t + 273,1
r = 0.082057

p = (n * r * t1)

print(p)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    p = (n * r * t1)
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 11:18:02) 
-- CODE:
n = float(input("valor do n de mols: "))
v = float(input("valor do volume: "))
t = float(input("valor da temp.: "))
t1 = t + 273,1
r = 0.082057

p = ((n * r * t1)/v)

print(p)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    p = ((n * r * t1)/v)
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 11:18:32) 
-- CODE:
n = float(input("valor do n de mols: "))
v = float(input("valor do volume: "))
t = float(input("valor da temp.: "))
t1 = t + 273,1
r = 0.082057

p = ((n * r * t1)/v)

print(p)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    p = ((n * r * t1)/v)
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 11:19:10) 
-- CODE:
n = float(input("valor do n de mols: "))
v = float(input("valor do volume: "))
t = float(input("valor da temp.: "))
t1 = t + 273,1
r = 0.082057

p = ((n * r * t1)/v)

print(p)
-- EXECUTION TIME:
0.188061
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1618/2937/main.py", line 7, in <module>
    p = ((n * r * t1)/v)
TypeError: can't multiply sequence by non-int of type 'float'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 11:19:33) 
-- CODE:
n = float(input("valor do n de mols: "))
v = float(input("valor do volume: "))
t = float(input("valor da temp.: "))
t1 = t + 273,1
r = 0.082057

p = ((n * r * t1)/v)

print(n)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    p = ((n * r * t1)/v)
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 11:21:24) 
-- CODE:
n = float(input("valor do n de mols: "))
v = float(input("valor do volume: "))
t = float(input("valor da temp.: "))
t1 = t + 273.1
r = 0.082057

p = ((n*r*t1)/v)

print(p)
-- OUTPUT:
0.07515908343750001
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 11:21:36) 
-- CODE:
n = float(input("valor do n de mols: "))
v = float(input("valor do volume: "))
t = float(input("valor da temp.: "))
t1 = t + 273.1
r = 0.082057

p = ((n*r*t1)/v)

print(p)
-- EXECUTION TIME:
0.129515
-- TEST CASE 1:
---- input:
1
320.0
20.0
---- correct output:
0.07515908343750001
---- user output:
0.07515908343750001
-- TEST CASE 2:
---- input:
5
155.8
80.0
---- correct output:
0.9298564409499358
---- user output:
0.9298564409499358
-- TEST CASE 3:
---- input:
12
1220.0
30.0
---- correct output:
0.244637475737705
---- user output:
0.244637475737705
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
