== TEST (2019-04-09 11:38:26) 
-- CODE:
preco = int(input("preco :")
pagamento = int(input("pagamento: "))

falta = preco - pagamento 
troco = pagamento - preco 

if (preco > pagamento):
	a = "Falta "+falta
	print(round(a, 2)
else : 
	(pagamento > preco)
	b = "Troco "+troco
	print(round(b ,2))
	
		

-- ERROR:
File "XXXX", line 2
    pagamento = int(input())
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:39:23) 
-- CODE:
preco = int(input("qual o preco :")
pagamento = int(input("valor do pagamento: "))

falta = preco - pagamento 
troco = pagamento - preco 

if (preco > pagamento):
	a = "Falta "+falta
	print(round(a, 2)
else : 
	(pagamento > preco)
	b = "Troco "+troco
	print(round(b ,2))
	
		

-- ERROR:
File "XXXX", line 2
    pagamento = int(input())
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:39:39) 
-- CODE:
preco = int(input("qual o preco :"))
pagamento = int(input("valor do pagamento: "))

falta = preco - pagamento 
troco = pagamento - preco 

if (preco > pagamento):
	a = "Falta "+falta
	print(round(a, 2)
else : 
	(pagamento > preco)
	b = "Troco "+troco
	print(round(b ,2))
	
		

-- ERROR:
File "XXXX", line 10
    else : 
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:42:24) 
-- CODE:
preco = int(input("qual o preco :"))
pagamento = int(input("valor do pagamento: "))

falta = preco - pagamento 
troco = pagamento - preco 

if (preco > pagamento):
	a = "Falta "+falta
	print(round(a, 2)
else : 
	b = "Troco "+troco
	print(round(b ,2))
	
		

-- ERROR:
File "XXXX", line 10
    else : 
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:42:35) 
-- CODE:
preco = int(input("qual o preco :"))
pagamento = int(input("valor do pagamento: "))

falta = preco - pagamento 
troco = pagamento - preco 

if (preco > pagamento):
	a = "Falta "+falta
	print(round(a, 2)
else: 
	b = "Troco "+troco
	print(round(b ,2))
	
		

-- ERROR:
File "XXXX", line 10
    else: 
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:43:39) 
-- CODE:
preco = int(input("qual o preco :"))
pagamento = int(input("valor do pagamento: "))

falta = preco - pagamento 
troco = pagamento - preco 

if (preco > pagamento):
	a = "Falta " +falta
	print(round(a, 2)
else : 
	b = "Troco de " +troco
	print(round(b ,2))
	
		

-- ERROR:
File "XXXX", line 10
    else : 
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:46:53) 
-- CODE:
preco = int(input("qual o preco :"))
pagamento = int(input("valor do pagamento: "))

falta = preco - pagamento 
troco = pagamento - preco 

if (preco > pagamento):
	a = falta
	c = (round(a, 2))
	print("Falta " + c)
else : 
	b = troco
	x = (round(b, 2))
	print("Troco de " x)
		

-- ERROR:
File "XXXX", line 14
    print("Troco de " x)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:47:21) 
-- CODE:
preco = int(input("qual o preco :"))
pagamento = int(input("valor do pagamento: "))

falta = preco - pagamento 
troco = pagamento - preco 

if (preco > pagamento):
	a = falta
	c = (round(a, 2))
	print("Falta " + c)
else : 
	b = troco
	d = (round(b, 2))
	print("Troco de " d)
		

-- ERROR:
File "XXXX", line 14
    print("Troco de " d)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:47:35) 
-- CODE:
preco = int(input("qual o preco :"))
pagamento = int(input("valor do pagamento: "))

falta = preco - pagamento 
troco = pagamento - preco 

if (preco > pagamento):
	a = falta
	c = (round(a, 2))
	print("Falta " + c)
else : 
	b = troco
	d = (round(b, 2))
	print("Troco de " + d)
		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    preco = int(input())
ValueError: invalid literal for int() with base 10: '38.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:56:45) 
-- CODE:
preco = int(input("qual o preco :"))
pagamento = int(input("valor do pagamento: "))

falta = preco - pagamento 
troco = pagamento - preco 

if (preco > pagamento):
	a = falta
	c = (round(a, 2))
	mensagem = "Falta "
	print(mensagem, c)
else : 
	b = troco
	d = (round(b, 2))
	mensagem = "Troco de "
	print(mensagem, d)

		

-- EXECUTION TIME:
0.162111
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1637/2447/main.py", line 1, in <module>
    preco = int(input())
ValueError: invalid literal for int() with base 10: '38.0'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 21:17:35) 
-- CODE:
preco = int(input("qual o preco :"))
pagamento = int(input("valor do pagamento: "))

falta = preco - pagamento 
troco = pagamento - preco 

if (preco > pagamento):
	c = (round(falta, 2))
	mensagem = "Falta "
	print(mensagem + c)
	
	
else : 
	d = (round(troco, 2))
	mensagem = "Troco de "
	print(mensagem, d)

		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    preco = int(input())
ValueError: invalid literal for int() with base 10: '38.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 21:18:05) 
-- CODE:
preco = float(input("qual o preco :"))
pagamento = float(input("valor do pagamento: "))

falta = preco - pagamento 
troco = pagamento - preco 

if (preco > pagamento):
	c = (round(falta, 2))
	mensagem = "Falta "
	print(mensagem + c)
	
	
else : 
	d = (round(troco, 2))
	mensagem = "Troco de "
	print(mensagem, d)

		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(mensagem + c)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 21:18:19) 
-- CODE:
preco = float(input("qual o preco :"))
pagamento = float(input("valor do pagamento: "))

falta = preco - pagamento 
troco = pagamento - preco 

if (preco > pagamento):
	c = (round(falta, 2))
	mensagem = "Falta"
	print(mensagem + c)
	
	
else : 
	d = (round(troco, 2))
	mensagem = "Troco de"
	print(mensagem, d)

		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(mensagem + c)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 21:18:31) 
-- CODE:
preco = float(input("qual o preco :"))
pagamento = float(input("valor do pagamento: "))

falta = preco - pagamento 
troco = pagamento - preco 

if (preco > pagamento):
	c = (round(falta, 2))
	mensagem = "Falta"
	print(mensagem + c)
	
	
else : 
	d = (round(troco, 2))
	mensagem = "Troco de"
	print(mensagem, d)

		

-- EXECUTION TIME:
0.126441
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1637/2447/main.py", line 10, in <module>
    print(mensagem + c)
TypeError: Can't convert 'float' object to str implicitly

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 21:18:51) 
-- CODE:
preco = float(input("qual o preco :"))
pagamento = float(input("valor do pagamento: "))

falta = preco - pagamento 
troco = pagamento - preco 

if (preco > pagamento):
	c = (round(falta, 2))
	mensagem = "Falta"
	print(mensagem + c)
	
	
else : 
	d = (round(troco, 2))
	mensagem = "Troco de"
	print(mensagem, d)

		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(mensagem + c)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 21:19:13) 
-- CODE:
preco = float(input("qual o preco :"))
pagamento = float(input("valor do pagamento: "))

falta = preco - pagamento 
troco = pagamento - preco 

if (preco > pagamento):
	c = (round(falta, 2))
	mensagem = "Falta"
	print(mensagem + c)
	
else : 
	d = (round(troco, 2))
	mensagem = "Troco de"
	print(mensagem, d)

		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(mensagem + c)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 21:19:28) 
-- CODE:
preco = float(input("qual o preco :"))
pagamento = float(input("valor do pagamento: "))

falta = preco - pagamento 
troco = pagamento - preco 

if (preco > pagamento):
	c = (round(falta, 2))
	mensagem = "Falta"
	print(mensagem + c)
	
else : 
	d = (round(troco, 2))
	mensagem = "Troco de"
	print(mensagem, d)

		

-- EXECUTION TIME:
0.198114
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1637/2447/main.py", line 10, in <module>
    print(mensagem + c)
TypeError: Can't convert 'float' object to str implicitly

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 21:19:43) 
-- CODE:
preco = float(input("qual o preco :"))
pagamento = float(input("valor do pagamento: "))

falta = preco - pagamento 
troco = pagamento - preco 

if (preco > pagamento):
	c = (round(falta, 2))
	mensagem = "Falta"
	print(mensagem + c)
	
else : 
	d = (round(troco, 2))
	mensagem = "Troco de"
	print(mensagem, d)

		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(mensagem + c)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 21:20:21) 
-- CODE:
preco = float(input("qual o preco :"))
pagamento = float(input("valor do pagamento: "))

falta = preco - pagamento 
troco = pagamento - preco 

if (preco > pagamento):
	c = (round(falta, 2))
	mensagem = "Falta"
	print(mensagem + c)
	
else : 
	d = (round(troco, 2))
	mensagem = "Troco de"
	print(mensagem, d)

		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(mensagem + c)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 21:21:55) 
-- CODE:
preco = float(input("qual o preco :"))
pagamento = float(input("valor do pagamento: "))

falta = preco - pagamento 
troco = pagamento - preco 

if (preco > pagamento):
	c = (round(falta, 2))
	mensagem = "Falta"
	print(mensagem + c)
	
else : 
	d = (round(troco, 2))
	mensagem = "Troco de"
	print(mensagem, d)

		

-- EXECUTION TIME:
0.134669
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1637/2447/main.py", line 10, in <module>
    print(mensagem + c)
TypeError: Can't convert 'float' object to str implicitly

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 21:22:32) 
-- CODE:
preco = float(input("qual o preco : "))
pagamento = float(input("valor do pagamento: "))

falta = preco - pagamento 
troco = pagamento - preco 

if (preco > pagamento):
	c = (round(falta, 2))
	mensagem = "Falta"
	print(mensagem + c)
	
else : 
	d = (round(troco, 2))
	mensagem = "Troco de"
	print(mensagem, d)

		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(mensagem + c)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 21:23:13) 
-- CODE:
preco = float(input("qual o preco : "))
pagamento = float(input("valor do pagamento: "))

falta = preco - pagamento 
troco = pagamento - preco 

if (preco > pagamento):
	x = (round(falta, 2))
	mensagem = "Falta"
	print(mensagem + x)
	
else : 
	y = (round(troco, 2))
	mensagem = "Troco de"
	print(mensagem, y)

		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(mensagem + x)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 21:23:20) 
-- CODE:
preco = float(input("qual o preco : "))
pagamento = float(input("valor do pagamento: "))

falta = preco - pagamento 
troco = pagamento - preco 

if (preco > pagamento):
	x = (round(falta, 2))
	mensagem = "Falta"
	print(mensagem + x)
	
else : 
	y = (round(troco, 2))
	mensagem = "Troco de"
	print(mensagem, y)

		

-- EXECUTION TIME:
0.162256
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1637/2447/main.py", line 10, in <module>
    print(mensagem + x)
TypeError: Can't convert 'float' object to str implicitly

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 21:24:20) 
-- CODE:
preco = float(input("qual o preco : "))
pagamento = float(input("valor do pagamento: ")) 

if (preco > pagamento):
	falta = preco - pagamento
	x = (round(falta, 2))
	mensagem = "Falta"
	print(mensagem + x)
	
else :
	troco = pagamento - preco 
	y = (round(troco, 2))
	mensagem = "Troco de"
	print(mensagem, y)

		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(mensagem + x)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 21:24:31) 
-- CODE:
preco = float(input("qual o preco : "))
pagamento = float(input("valor do pagamento: ")) 

if (preco > pagamento):
	falta = preco - pagamento
	x = (round(falta, 2))
	mensagem = "Falta"
	print(mensagem + x)
	
else :
	troco = pagamento - preco 
	y = (round(troco, 2))
	mensagem = "Troco de"
	print(mensagem, y)

		

-- EXECUTION TIME:
0.150478
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1637/2447/main.py", line 8, in <module>
    print(mensagem + x)
TypeError: Can't convert 'float' object to str implicitly

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 21:24:53) 
-- CODE:
preco = float(input("qual o preco : "))
pagamento = float(input("valor do pagamento: ")) 

if (preco > pagamento):
	falta = preco - pagamento
	x = (round(falta, 2))
	mensagem = "Falta"
	print(mensagem + x)
	
else :
	troco = pagamento - preco 
	y = (round(troco, 2))
	mensagem = "Troco de"
	print(mensagem, y)

		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(mensagem + x)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 21:25:40) 
-- CODE:
preco = float(input("qual o preco : "))
pagamento = float(input("valor do pagamento: ")) 

falta = preco - pagamento
troco = pagamento - preco 

if (preco > pagamento):
	x = (round(falta, 2))
	mensagem = "Falta"
	print(mensagem, x)
	
else :
	y = (round(troco, 2))
	mensagem = "Troco de"
	print(mensagem, y)

		

-- EXECUTION TIME:
0.137065
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
