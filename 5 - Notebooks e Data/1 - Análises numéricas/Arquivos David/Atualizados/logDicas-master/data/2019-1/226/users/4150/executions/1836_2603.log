== SUBMITION (2019-07-02 00:28:59) 
-- CODE:
from numpy import*
from numpy.linalg import*

m = array(eval(input("digite: ")))

v = zeros(shape(m)[1], dtype=int)

for i in range(4):
	for j in range(4):
		v[j]= m[j,i]
	v = sorted(v, reverse=true)
	for k in range(4):
		m[k,i]=v[k]
print(m)

-- EXECUTION TIME:
0.910004
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1836/2603/main.py", line 11, in <module>
    v = sorted(v, reverse=true)
NameError: name 'true' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 00:29:01) 
-- CODE:
from numpy import*
from numpy.linalg import*

m = array(eval(input("digite: ")))

v = zeros(shape(m)[1], dtype=int)

for i in range(4):
	for j in range(4):
		v[j]= m[j,i]
	v = sorted(v, reverse=true)
	for k in range(4):
		m[k,i]=v[k]
print(m)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 00:29:07) 
-- CODE:
from numpy import*
from numpy.linalg import*

m = array(eval(input("digite: ")))

v = zeros(shape(m)[1], dtype=int)

for i in range(4):
	for j in range(4):
		v[j]= m[j,i]
	v = sorted(v, reverse=true)
	for k in range(4):
		m[k,i]=v[k]
print(m)

-- EXECUTION TIME:
0.90225
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1836/2603/main.py", line 11, in <module>
    v = sorted(v, reverse=true)
NameError: name 'true' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 00:29:19) 
-- CODE:
from numpy import*
from numpy.linalg import*

m = array(eval(input("digite: ")))

v = zeros(shape(m)[1], dtype=int)

for i in range(4):
	for j in range(4):
		v[j]= m[j,i]
	v = sorted(v, reverse=True)
	for k in range(4):
		m[k,i]=v[k]
print(m)

-- EXECUTION TIME:
1.10059
-- TEST CASE 1:
---- input:
[[1,1,1,1],[2,2,2,2],[3,3,3,3],[4,4,4,4]]
---- correct output:
[[4 4 4 4]
[3 3 3 3]
[2 2 2 2]
[1 1 1 1]]
---- user output:
[[4 4 4 4]
 [3 3 3 3]
 [2 2 2 2]
 [1 1 1 1]]
-- TEST CASE 2:
---- input:
[[4,1,1,3],[3,2,2,3],[2,3,3,3],[1,4,4,3]]
---- correct output:
[[4 4 4 3]
[3 3 3 3]
[2 2 2 3]
[1 1 1 3]]
---- user output:
[[4 4 4 3]
 [3 3 3 3]
 [2 2 2 3]
 [1 1 1 3]]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
