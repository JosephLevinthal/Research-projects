== TEST (2019-05-13 22:34:56) 
-- CODE:
n = int(input("numero perfeito: "))

i=1
a=0
while:(i<n)
	p = n % i
	i = i + 1
	if(p == 0):
		print(p)
		a = a + p
	
	else:
		c = a+i

if(a == p):
	print("PERFEITO")
else:
	print("NAO PERFEITO")
-- ERROR:
File "XXXX", line 5
    while:(i<n)
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 22:35:07) 
-- CODE:
n = int(input("numero perfeito: "))

i=1
a=0
while(i<n):
	p = n % i
	i = i + 1
	if(p == 0):
		print(p)
		a = a + p
	
	else:
		c = a+i

if(a == p):
	print("PERFEITO")
else:
	print("NAO PERFEITO")
-- OUTPUT:
0
0
0
0
0
0
0
0
0
NAO PERFEITO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 22:35:36) 
-- CODE:
n = int(input("numero perfeito: "))

i=1
a=0
while(i<n):
	p = n % i
	i = i + 1
	if(p == 0):
		print(i)
		a = a + p
	
	else:
		c = a+i

if(a == p):
	print("PERFEITO")
else:
	print("NAO PERFEITO")
-- OUTPUT:
2
3
5
9
17
32
63
125
249
NAO PERFEITO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 22:37:03) 
-- CODE:
n = int(input("numero perfeito: "))

i=1
a=0
while(i<n):
	p = n % i
	i = i + 1
	if(p == 0):
		print(i-1)
		a = a + (i-1)
	
	else:
		c = a+i

if(a == n):
	print("PERFEITO")
else:
	print("NAO PERFEITO")
-- OUTPUT:
1
2
4
8
16
31
62
124
248
PERFEITO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 22:37:21) 
-- CODE:
n = int(input("numero perfeito: "))

i=1
a=0
while(i<n):
	p = n % i
	i = i + 1
	if(p == 0):
		print(i-1)
		a = a + (i-1)
	
	else:
		c = a+i

if(a == n):
	print("PERFEITO")
else:
	print("NAO PERFEITO")
-- OUTPUT:
1
2
4
8
16
31
62
124
248
PERFEITO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 22:37:41) 
-- CODE:
n = int(input("numero perfeito: "))

i=1
a=0
while(i<n):
	p = n % i
	i = i + 1
	if(p == 0):
		print(i-1)
		a = a + (i-1)
	
	else:
		c = a+i

if(a == n):
	print("PERFEITO")
else:
	print("NAO PERFEITO")
-- EXECUTION TIME:
0.172105
-- TEST CASE 1:
---- input:
496
---- correct output:
1
2
4
8
16
31
62
124
248
PERFEITO
---- user output:
1
2
4
8
16
31
62
124
248
PERFEITO
-- TEST CASE 2:
---- input:
8128
---- correct output:
1
2
4
8
16
32
64
127
254
508
1016
2032
4064
PERFEITO
---- user output:
1
2
4
8
16
32
64
127
254
508
1016
2032
4064
PERFEITO
-- TEST CASE 3:
---- input:
20
---- correct output:
1
2
4
5
10
NAO PERFEITO
---- user output:
1
2
4
5
10
NAO PERFEITO
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
