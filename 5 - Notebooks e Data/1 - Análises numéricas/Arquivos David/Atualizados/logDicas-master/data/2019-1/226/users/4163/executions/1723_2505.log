== TEST (2019-05-14 10:42:03) 
-- CODE:
from math import*
x = eval(input("angulo de x: "))
k = int(input(""))

soma =0
i=0
fim = k-1

while (i<=fim)::
		soma = (x (**2*i+1))/ factorial(x*2*i+1)
		i = i + 1

print(soma)
		
		
	
-- ERROR:
File "XXXX", line 9
    while (i<=fim)::
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:42:09) 
-- CODE:
from math import*
x = eval(input("angulo de x: "))
k = int(input(""))

soma =0
i=0
fim = k-1

while (i<=fim):
		soma = (x (**2*i+1))/ factorial(x*2*i+1)
		i = i + 1

print(soma)
		
		
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    soma = (x (**2*i+1))/ factorial(x*2*i+1)
TypeError: float object argument after ** must be a mapping, not int
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:42:38) 
-- CODE:
from math import*
x = eval(input("angulo de x: "))
k = int(input(""))

soma =0
i=0
fim = k-1

while (i<=fim):
		soma = (x**2*i+1)/ factorial(x*2*i+1)
		i = i + 1

print(soma)
		
		
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    soma = (x**2*i+1)/ factorial(x*2*i+1)
ValueError: factorial() only accepts integral values
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:44:29) 
-- CODE:
from math import*
x = eval(input("angulo de x: "))
k = int(input(""))

soma =0
i=0
fim = k-1

while (i<=fim):
		soma = (x**(2*i+1)/ factorial(x*2*i+1)
		i = i + 1

print(soma)
		
		
	
-- ERROR:
File "XXXX", line 11
    i = i + 1
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:44:45) 
-- CODE:
from math import*
x = eval(input("angulo de x: "))
k = int(input(""))

soma =0
i=0
fim = k-1

while (i<=fim):
	soma = (x**(2*i+1)/ factorial(x*2*i+1)
	i = i + 1

print(soma)
		
		
	
-- ERROR:
File "XXXX", line 11
    i = i + 1
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:45:08) 
-- CODE:
from math import*
x = eval(input("angulo de x: "))
k = int(input(""))

soma =0
i = 0
fim = k-1

while (i<=fim):
	soma = (x**(2*i+1)/ factorial(x*2*i+1)
	i = i + 1

print(soma)
		
		
	
-- ERROR:
File "XXXX", line 11
    i = i + 1
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:46:12) 
-- CODE:
from math import*
x = eval(input("angulo de x: "))
k = int(input(""))

soma =0
i = 0
fim = k-1

while (i<=fim):
	soma = soma + (x**(2*i+1)/ factorial(x*2*i+1)
	i = i + 1

print(soma)
		
		
	
-- ERROR:
File "XXXX", line 11
    i = i + 1
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:47:04) 
-- CODE:
from math import*
x = eval(input("angulo de x: "))
k = int(input(""))

soma =0
i = 0
fim = k-1

while (i<fim):
	soma = soma + (x**(2*i+1)/ factorial(x*2*i+1)
	i = i + 1

print(soma)
		
		
	
-- ERROR:
File "XXXX", line 11
    i = i + 1
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:47:56) 
-- CODE:
from math import*
x = eval(input("angulo de x: "))
k = int(input(""))

soma =0
i = 0
fim = k-1

while (i<fim):
	soma = soma + (x**(2*i+1))/ factorial(x*2*i+1)
	i = i + 1

print(soma)
		
		
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    soma = soma + (x**(2*i+1))/ factorial(x*2*i+1)
ValueError: factorial() only accepts integral values
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:49:31) 
-- CODE:
from math import*
x = eval(input("angulo de x: "))
k = int(input(""))

soma =0
i = 0
fim = k-1

while (i<=fim):
	soma = soma + (-1)**i *(x**(2*i+1))/ factorial(x*2*i+1)
	i = i + 1

print(soma)
		
		
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    soma = soma + (-1)**i *(x**(2*i+1))/ factorial(x*2*i+1)
ValueError: factorial() only accepts integral values
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:51:02) 
-- CODE:
from math import*
x = eval(input("angulo de x: "))
k = int(input(""))

soma =0
i = 0
fim = k-1

while (i<=fim):
	soma = soma + (-1)**i *(x**(2*i+1))/ factorial(2*i+1)
	i = i + 1

print(soma)
		
		
	
-- OUTPUT:
1.0000035425842861
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:52:00) 
-- CODE:
from math import*
x = eval(input("angulo de x: "))
k = int(input(""))

soma =0
i = 0
fim = k-1

while (i<=fim):
	soma = soma + (-1)**i *(x**(2*i+1))/ factorial(2*i+1)
	i = i + 1

print(round(soma, 10))
		
		
	
-- OUTPUT:
1.0000035426
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 10:52:10) 
-- CODE:
from math import*
x = eval(input("angulo de x: "))
k = int(input(""))

soma =0
i = 0
fim = k-1

while (i<=fim):
	soma = soma + (-1)**i *(x**(2*i+1))/ factorial(2*i+1)
	i = i + 1

print(round(soma, 10))
		
		
	
-- EXECUTION TIME:
0.17114
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
1.0000035426
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-0.9998431014
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.8662952838
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
