== TEST (2019-04-27 13:15:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo:").upper()
print("Entradas:", x, "e tipo",y)
if(x >0 and x <=500):
	print(A * 0.44)
elif(x > 500):
	print(A * 0.65)
elif(x > 500 and x <= 1000):
	print(A * 0.55)
elif(x > 1000):
	print(x * 0.60)
elif(x > 1000 and x <= 5000):
	print(x * 0.55)
elif(x > 5000):
	print(x * 0.60)
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:16:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo:").upper()
print("Entradas:", x, "e tipo",y)
if(x >0 and x <=500):
	print(A * 0.44)
elif(x > 500):
	print(A * 0.65)
elif(x > 500 and x <= 1000):
	print(A * 0.55)
elif(x > 1000):
	print(x * 0.60)
elif(x > 1000 and x <= 5000):
	print(x * 0.55)
elif(x > 5000):
	print(x * 0.60)
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:16:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo:").upper()
print("Entradas:", x, "e tipo",y)
if(x >0 and x <=500):
	print(A * 0.44)
elif(x > 500):
	print(A * 0.65)
elif(x > 500 and x <= 1000):
	print(A * 0.55)
elif(x > 1000):
	print(x * 0.60)
elif(x > 1000 and x <= 5000):
	print(x * 0.55)
elif(x > 5000):
	print(x * 0.60)
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:16:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo:").upper()
print("Entradas:", x, "e tipo",y)
if(x >0 and x <=500):
	print(x * 0.44)
elif(x > 500):
	print(A * 0.65)
elif(x > 500 and x <= 1000):
	print(A * 0.55)
elif(x > 1000):
	print(x * 0.60)
elif(x > 1000 and x <= 5000):
	print(x * 0.55)
elif(x > 5000):
	print(x * 0.60)
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 13:20:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo:").upper()
print("Entradas:", x ,"kwh", "e tipo",y)
if(x >0 and x <=500):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor toral:"x * 0.65,"R$")
elif("Valor total:"x > 500 and x <= 1000,"R$"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total;" x * 0.60, "R$")
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.147535
-- ERROR:
  File "/home/codebench/codes/1674/1101/main.py", line 10
    print("Valor toral:"x * 0.65,"R$")
                        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:20:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo:").upper()
print("Entradas:", x ,"kwh", "e tipo",y)
if(x >0 and x <=500):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor toral:"x * 0.65,"R$")
elif("Valor total:"x > 500 and x <= 1000,"R$"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total;" x * 0.60, "R$")
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 10
    print("Valor toral:"x * 0.65,"R$")
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:21:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo:").upper()
print("Entradas:", x ,"kwh", "e tipo",y)
if(x >0 and x <=500):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:", x * 0.65,"R$")
elif("Valor total:"x > 500 and x <= 1000,"R$"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total;" x * 0.60, "R$")
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 11
    elif("Valor total:"x > 500 and x <= 1000,"R$"):
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:21:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo:").upper()
print("Entradas:", x ,"kwh", "e tipo",y)
if(x >0 and x <=500):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:",x * 0.65,"R$")
elif(x > 500 and x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total;" x * 0.60, "R$")
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 18
    print("Valor total;" x * 0.60, "R$")
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:21:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo:").upper()
print("Entradas:", x ,"kwh", "e tipo",y)
if(x >0 and x <=500):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:",x * 0.65,"R$")
elif(x > 500 and x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total;", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 13:21:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo:").upper()
print("Entradas:", x ,"kwh", "e tipo",y)
if(x >0 and x <=500):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:",x * 0.65,"R$")
elif(x > 500 and x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total;", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.1597
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: 621.075 R$
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 13:22:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo:").upper()
print("Entradas:", x ,"kwh", "e tipo",y)
if(x >0 and x <=500):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:",x * 0.65,"R$")
elif(x > 500 and x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total;", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.135782
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: 621.075 R$
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:22:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo:").upper()
print("Entradas:", x ,"kwh", "e tipo",y)
if(x >0 and x <=500):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:",x * 0.65,"R$")
elif(x > 500 and x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total;", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 13:23:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo:").upper()
print("Entradas:", x ,"kwh", "e tipo",y)
if(x >0 and x <=500):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:",x * 0.65,"R$")
elif(x > 500 and x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.123943
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: 621.075 R$
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 13:23:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo:").upper()
print("Entradas:", x ,"kwh", "e tipo",y)
if(x >0 and x <=500):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:",x * 0.65,"R$")
elif(x > 500 and x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.196622
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: 621.075 R$
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 13:23:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo:").upper()
print("Entradas:", x ,"kwh", "e tipo",y)
if(x >0 and x <=500):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:",x * 0.65,"R$")
elif(x > 500 and x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.129338
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: 621.075 R$
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:23:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo:").upper()
print("Entradas:", x ,"kwh", "e tipo",y)
if(x >0 and x <=500):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:",x * 0.65,"R$")
elif(x > 500 and x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:23:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo:").upper()
print("Entradas:", x ,"kwh", "e tipo",y)
if(x >0 and x <=500):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:",x * 0.65,"R$")
elif(x > 500 and x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:23:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo:").upper()
print("Entradas:", x ,"kwh", "e tipo",y)
if(x >0 and x <=500):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:",x * 0.65,"R$")
elif(x > 500 and x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 13:23:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo:").upper()
print("Entradas:", x ,"kwh", "e tipo",y)
if(x >0 and x <=500):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:",x * 0.65,"R$")
elif(x > 500 and x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.157921
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: 621.075 R$
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:23:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo:").upper()
print("Entradas:", x ,"kwh", "e tipo",y)
if(x >0 and x <=500):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:",x * 0.65,"R$")
elif(x > 500 and x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:24:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo:").upper()
print("Entradas:", x ,"kwh", "e tipo",y)
if(x >0 and x <=500):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:",x * 0.65,"R$")
elif(x > 500 and x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:24:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo:").upper()
print("Entradas:", x ,"kwh", "e tipo",y)
if(x >0 and x <=500):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:",x * 0.65,"R$")
elif(x > 500 and x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:25:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)
if(x >0 and x <=500):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:",x * 0.65,"R$")
elif(x > 500 and x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:28:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)
if(y == "R" or y == "I" or y == "C")
elif(x >0 and x <=500):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:",x * 0.65,"R$")
elif(x > 500 and x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 7
    if(y == "R" or y == "I" or y == "C")
                                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 13:28:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)
if(y == "R" or y == "I" or y == "C"):
elif(x >0 and x <=500):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:",x * 0.65,"R$")
elif(x > 500 and x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.152238
-- ERROR:
  File "/home/codebench/codes/1674/1101/main.py", line 8
    elif(x >0 and x <=500):
       ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:28:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)
if(y == "R" or y == "I" or y == "C"):
elif(x >0 and x <=500):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:",x * 0.65,"R$")
elif(x > 500 and x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 8
    elif(x >0 and x <=500):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:29:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)
if(y == "R" or y == "I" or y == "C"):
elif(x >0 and x <=500):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:",x * 0.65,"R$")
elif(x > 500 and x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 8
    elif(x >0 and x <=500):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:29:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)
if(y == "R" or y == "I" or y == "C"):
	elif(x >0 and x <=500):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:",x * 0.65,"R$")
elif(x > 500 and x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 8
    elif(x >0 and x <=500):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:30:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)
if(y == "R" or y == "I" or y == "C"):
elif(x >0 and x <=500):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:",x * 0.65,"R$")
elif(x > 500 and x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 8
    elif(x >0 and x <=500):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:30:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)
if(y == "R" or y == "I" or y == "C"):
elif(x >0 and x <=500):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:",x * 0.65,"R$")
elif(x > 500 and x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 8
    elif(x >0 and x <=500):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:30:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)
if(y == "R" or y == "I" or y == "C"):
	elif(x >0 and x <=500):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:",x * 0.65,"R$")
elif(x > 500 and x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 8
    elif(x >0 and x <=500):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:31:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)

if(y == "R" or y == "I" or y == "C"):
	elif(x >0 and x <=500):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:",x * 0.65,"R$")
elif(x > 500 and x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 9
    elif(x >0 and x <=500):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:31:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)

if(y == "R" or y == "I" or y == "C"):
	
elif(x >0 and x <=500):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:",x * 0.65,"R$")
elif(x > 500 and x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 10
    elif(x >0 and x <=500):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:32:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)

if(y == "R" or y == "I" or y == "C"):
	
elif (x >0 and x <=500):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:",x * 0.65,"R$")
elif(x > 500 and x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 10
    elif (x >0 and x <=500):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:32:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)

if(y == "R" or y == "I" or y == "C"):
	
	elif(x >0 and x <=500):
		print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:",x * 0.65,"R$")
elif(x > 500 and x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 10
    elif(x >0 and x <=500):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:32:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)

if(y == "R" or y == "I" or y == "C"):
	
elif(x > 0 and x <=500):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:",x * 0.65,"R$")
elif(x > 500 and x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 10
    elif(x > 0 and x <=500):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:33:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)

if(y == "R" or y == "I" or y == "C"):
	
elif(x > 0 and x <=500):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:",x * 0.65,"R$")
elif(x > 500 and x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 10
    elif(x > 0 and x <=500):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:33:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)

if(y == "R" or y == "I" or y == "C"):
	
else:(x > 0 and x <=500):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:",x * 0.65,"R$")
elif(x > 500 and x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 10
    else:(x > 0 and x <=500):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:33:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)

if(y == "R" or y == "I" or y == "C"):
	
elif(x > 0 and x <=500):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:",x * 0.65,"R$")
elif(x > 500 and x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 10
    elif(x > 0 and x <=500):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:34:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)

if(y == "R" or y == "I" or y == "C")
	
elif(x > 0 and x <=500):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:",x * 0.65,"R$")
elif(x > 500 and x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 8
    if(y == "R" or y == "I" or y == "C")
                                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:34:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)

if(y == "R" or y == "I" or y == "C"):
	
elif(x > 0 and x <=500):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:",x * 0.65,"R$")
elif(x > 500 and x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 10
    elif(x > 0 and x <=500):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:35:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)

if(y == "R" or y == "I" or y == "C"):
elif(x > 0 and x <=500):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:",x * 0.65,"R$")
elif(x > 500 and x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 9
    elif(x > 0 and x <=500):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:35:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)

if(y == "R" or y == "I" or y == "C"):
elif(x > 0 and x <=500):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:",x * 0.65,"R$")
elif(x > 500 and x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 9
    elif(x > 0 and x <=500):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:36:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)

if(y == "R" or y == "I" or y == "C"):
	elif(x > 0 and x <=500):
		print("Valor total:",x * 0.44, "R$")
	elif(x > 500):
		print("Valor total:",x * 0.65,"R$")
	elif(x > 500 and x <= 1000):
		print("Valor total:",x * 0.55, "R$")
	elif(x > 1000):
		print("Valor total:", x * 0.60, "R$")
	elif(x > 1000 and x <= 5000):
		print("Valor total:",x * 0.55, "R$")
	elif(x > 5000):
		print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 9
    elif(x > 0 and x <=500):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:37:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)

if(y == "R" or y == "I" or y == "C"):
elif(x > 0 and x <=500):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:",x * 0.65,"R$")
elif(x > 500 and x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 9
    elif(x > 0 and x <=500):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:37:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)

if(y == "R" or y == "I" or y == "C"):
if(x > 0 and x <=500):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:",x * 0.65,"R$")
elif(x > 500 and x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 9
    if(x > 0 and x <=500):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:37:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)

if(y == "R" or y == "I" or y == "C"):
	if(x > 0 and x <=500):
		print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:",x * 0.65,"R$")
elif(x > 500 and x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:38:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)

if(y == "R" or y == "I" or y == "C"):
	if(x > 0 and x <=500):
		print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:",x * 0.65,"R$")
elif(x > 500 and x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 13:38:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)

if(y == "R" or y == "I" or y == "C"):
	if(x > 0 and x <=500):
		print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:",x * 0.65,"R$")
elif(x > 500 and x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.194979
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:38:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)

if(y == "R" or y == "I" or y == "C"):
	if(x > 0 and x <=500):
		print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:",x * 0.65,"R$")
elif(x > 500 and x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:38:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)

if(y == "R" or y == "I" or y == "C"):
	if(x > 0 and x <=500):
		print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:",x * 0.65,"R$")
elif(x > 500 and x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:39:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)

if(y == "R" or y == "I" or y == "C"):
	if(x > 0 and x <=500):
		print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:",x * 0.65,"R$")
elif(x > 500 and x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:40:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)

if(y == "R" or y == "I" or y == "C"):
	if(x > 0 and x <=500):
		print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:",x * 0.65,"R$")
elif(x > 500 and x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:41:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)

if(y == "R" or y == "I" or y == "C"):
	if(x > 0 and x <=500):
		print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:",x * 0.65,"R$")
elif( x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:41:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)

if(y == "R" or y == "I" or y == "C"):
	if(x > 0 and x <=500):
		print("Valor total:",x * 0.44, "R$")
elif(x > 500):
	print("Valor total:",x * 0.65,"R$")
elif( x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:42:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)

if(y == "R" or y == "I" or y == "C"):
	if(x > 0 and x <=500):
		print("Valor total:",x * 0.44, "R$")
elif(x >= 501):
	print("Valor total:",x * 0.65,"R$")
elif( x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:45:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)

if(y == "R" or y == "I" or y == "C"):
	if(x > 0 and x <=500):
		print("Valor total:",x * 0.44, "R$")
elif(x >= 501 and x <=999):
	print("Valor total:",x * 0.65,"R$")
elif( x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:47:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)

if(y == "R" or y == "I" or y == "C"):
	if(x > 0 and x <=500):
		print("Valor total:",x * 0.44, "R$")
elif(x >= 501 and x <=999):
	print("Valor total:",x * 0.65,"R$")
elif( x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:48:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)

if(y == "R" or y == "I" or y == "C"):
	if(x > 0 and x <=500):
		print("Valor total:",x * 0.44, "R$")
elif(x >= 501 and x <=999):
	print("Valor total:",x * 0.65,"R$")
elif( x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:49:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)


if((x > 0 and x <=500) and y =="R"):
		print("Valor total:",x * 0.44, "R$")
elif((x >= 501 and x <=999) and y == "R"):
	print("Valor total:",x * 0.65,"R$")
elif( x <= 1000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: -30.800000000000004 R$
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:50:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)


if((x > 0 and x <=500) and y =="R"):
		print("Valor total:",x * 0.44, "R$")
elif((x >= 501 and x <=999) and y == "R"):
	print("Valor total:",x * 0.65,"R$")
elif( x <= 1000 and y == "C"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000 and Y == "C"):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:50:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)


if((x > 0 and x <=500) and y =="R"):
		print("Valor total:",x * 0.44, "R$")
elif((x >= 501 and x <=999) and y == "R"):
	print("Valor total:",x * 0.65,"R$")
elif( x <= 1000 and y == "C"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000 and Y == "C"):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:51:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)


if((x > 0 and x <=500) and y =="R"):
		print("Valor total:",x * 0.44, "R$")
elif((x >= 501 and x <=999) and y == "R"):
	print("Valor total:",x * 0.65,"R$")
elif( x <= 1000 and y == "C"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000 and y == "C"):
	print("Valor total:", x * 0.60, "R$")
elif(x > 1000 and x <= 5000):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:53:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)


if((x > 0 and x <=500) and y =="R"):
		print("Valor total:",x * 0.44, "R$")
elif((x >= 501 and x <=999) and y == "R"):
	print("Valor total:",x * 0.65,"R$")
elif( x = 1000 and y == "C"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000 and y == "C"):
	print("Valor total:", x * 0.60, "R$")
elif((x > 1000 and x <= 5000) and y == "I"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000 and "I"):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 13
    elif( x = 1000 and y == "C"):
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:53:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)


if((x > 0 and x <=500) and y =="R"):
		print("Valor total:",x * 0.44, "R$")
elif((x >= 501 and x <=999) and y == "R"):
	print("Valor total:",x * 0.65,"R$")
elif( x == 1000 and y == "C"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000 and y == "C"):
	print("Valor total:", x * 0.60, "R$")
elif((x > 1000 and x <= 5000) and y == "I"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000 and "I"):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 13:53:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)


if((x > 0 and x <=500) and y =="R"):
		print("Valor total:",x * 0.44, "R$")
elif((x >= 501 and x <=999) and y == "R"):
	print("Valor total:",x * 0.65,"R$")
elif( x == 1000 and y == "C"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000 and y == "C"):
	print("Valor total:", x * 0.60, "R$")
elif((x > 1000 and x <= 5000) and y == "I"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000 and "I"):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.138142
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: 621.075 R$
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:56:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)


if((x > 0 and x <=500) and y =="R"):
		print("Valor total:",x * 0.44, "R$")
elif((x > 500 and y == "R"):
	print("Valor total:",x * 0.65,"R$")
elif( x <= 1000 and y == "C"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000 and y == "C"):
	print("Valor total:", x * 0.60, "R$")
elif((x <= 5000) and y == "I"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000 and "I"):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 11
    elif((x > 500 and y == "R"):
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:56:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)


if((x > 0 and x <=500) and y =="R"):
	print("Valor total:",x * 0.44, "R$")
elif((x > 500 and y == "R"):
	print("Valor total:",x * 0.65,"R$")
elif( x <= 1000 and y == "C"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000 and y == "C"):
	print("Valor total:", x * 0.60, "R$")
elif((x <= 5000) and y == "I"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000 and "I"):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 11
    elif((x > 500 and y == "R"):
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:56:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)


if((x > 0 and x <=500) and y =="R"):
	print("Valor total:",x * 0.44, "R$")
elif((x > 500 and y == "R")
	print("Valor total:",x * 0.65,"R$")
elif( x <= 1000 and y == "C"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000 and y == "C"):
	print("Valor total:", x * 0.60, "R$")
elif((x <= 5000) and y == "I"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000 and "I"):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 12
    print("Valor total:",x * 0.65,"R$")
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:56:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)


if((x > 0 and x <=500) and y =="R"):
	print("Valor total:",x * 0.44, "R$")
elif((x > 500 and y == "R"):
	print("Valor total:",x * 0.65,"R$")
elif( x <= 1000 and y == "C"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000 and y == "C"):
	print("Valor total:", x * 0.60, "R$")
elif((x <= 5000) and y == "I"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000 and "I"):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 11
    elif((x > 500 and y == "R"):
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:57:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)


if((x > 0 and x <=500) and y =="R"):
	print("Valor total:",x * 0.44, "R$")
	elif((x > 500 and y == "R"):
		print("Valor total:",x * 0.65,"R$")
elif( x <= 1000 and y == "C"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000 and y == "C"):
	print("Valor total:", x * 0.60, "R$")
elif((x <= 5000) and y == "I"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000 and "I"):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 11
    elif((x > 500 and y == "R"):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:57:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)


if((x > 0 and x <=500) and y =="R"):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500 and y == "R"):
	print("Valor total:",x * 0.65,"R$")
elif( x <= 1000 and y == "C"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000 and y == "C"):
	print("Valor total:", x * 0.60, "R$")
elif((x <= 5000) and y == "I"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000 and "I"):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: -30.800000000000004 R$
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 13:57:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)


if((x > 0 and x <=500) and y =="R"):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500 and y == "R"):
	print("Valor total:",x * 0.65,"R$")
elif( x <= 1000 and y == "C"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000 and y == "C"):
	print("Valor total:", x * 0.60, "R$")
elif((x <= 5000) and y == "I"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000 and "I"):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.202835
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Valor total: -30.800000000000004 R$
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: 621.075 R$
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:57:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)


if((x > 0 and x <=500) and y =="R"):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500 and y == "R"):
	print("Valor total:",x * 0.65,"R$")
elif( x <= 1000 and y == "C"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000 and y == "C"):
	print("Valor total:", x * 0.60, "R$")
elif((x <= 5000) and y == "I"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000 and "I"):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: -30.800000000000004 R$
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:58:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)


if((x > 0 and x <=500) and y =="R"):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500 and y == "R"):
	print("Valor total:",x * 0.65,"R$")
elif( x <= 1000 and y == "C"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000 and y == "C"):
	print("Valor total:", x * 0.60, "R$")
elif((x <= 5000) and y == "I"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000 and "I"):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: -30.800000000000004 R$
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:58:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)


if((x > 0 and x <=500) and y =="R"):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500 and y == "R"):
	print("Valor total:",x * 0.65,"R$")
elif( x <= 1000 and y == "C"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000 and y == "C"):
	print("Valor total:", x * 0.60, "R$")
elif((x <= 5000) and y == "I"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000 and "I"):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: -30.800000000000004 R$
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:58:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)


if((x > 0 and x <=500) and y =="R"):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500 and y == "R"):
	print("Valor total:",x * 0.65,"R$")
elif( x <= 1000 and y == "C"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000 and y == "C"):
	print("Valor total:", x * 0.60, "R$")
elif((x <= 5000) and y == "I"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000 and "I"):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: -30.800000000000004 R$
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:59:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)


if((x > 0 and x <=500) and y =="R"):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500 and y == "R"):
	print("Valor total:",x * 0.65,"R$")
elif( x <= 1000 and y == "C"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000 and y == "C"):
	print("Valor total:", x * 0.60, "R$")
elif((x <= 5000) and y == "I"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000 and "I"):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: -30.800000000000004 R$
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 13:59:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)


if((x > 0 and x <=500) and y =="R"):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500 and y == "R"):
	print("Valor total:",x * 0.65,"R$")
elif( x <= 1000 and y == "C"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000 and y == "C"):
	print("Valor total:", x * 0.60, "R$")
elif((x <= 5000) and y == "I"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000 and "I"):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: -30.800000000000004 R$
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 14:00:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)


if((x > 0 and x <=500) and y =="R"):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500 and y == "R"):
	print("Valor total:",x * 0.65,"R$")
elif( x <= 1000 and y == "C"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000 and y == "C"):
	print("Valor total:", x * 0.60, "R$")
elif((x <= 5000) and y == "I"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000 and "I"):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: -30.800000000000004 R$
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 14:00:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)


if((x > 0 and x <=500) and y =="R"):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500 and y == "R"):
	print("Valor total:",x * 0.65,"R$")
elif( x <= 1000 and y == "C"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000 and y == "C"):
	print("Valor total:", x * 0.60, "R$")
elif((x <= 5000) and y == "I"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000 and "I"):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: -30.800000000000004 R$
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 14:00:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)


if((x > 0 and x <=500) and y =="R"):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500 and y == "R"):
	print("Valor total:",x * 0.65,"R$")
elif( x <= 1000 and y == "C"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000 and y == "C"):
	print("Valor total:", x * 0.60, "R$")
elif((x <= 5000) and y == "I"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000 and "I"):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: -30.800000000000004 R$
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 14:01:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)


if((x > 0 and x <=500) and y =="R"):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500 and y == "R"):
	print("Valor total:",x * 0.65,"R$")
elif( x <= 1000 and y == "C"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000 and y == "C"):
	print("Valor total:", x * 0.60, "R$")
elif((x <= 5000) and y == "I"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000 and "I"):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: -30.800000000000004 R$
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 14:01:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)


if((x > 0 and x <=500) and y =="R"):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500 and y == "R"):
	print("Valor total:",x * 0.65,"R$")
elif( x <= 1000 and y == "C"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000 and y == "C"):
	print("Valor total:", x * 0.60, "R$")
elif((x <= 5000) and y == "I"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000 and "I"):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: -30.800000000000004 R$
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 14:01:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)


if((x > 0 and x <=500) and y =="R"):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500 and y == "R"):
	print("Valor total:",x * 0.65,"R$")
elif( x <= 1000 and y == "C"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000 and y == "C"):
	print("Valor total:", x * 0.60, "R$")
elif((x <= 5000) and y == "I"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000 and "I"):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: -30.800000000000004 R$
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 14:02:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)


if((x > 0 and x <=500) and y =="R"):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500 and y == "R"):
	print("Valor total:",x * 0.65,"R$")
elif( x <= 1000 and y == "C"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000 and y == "C"):
	print("Valor total:", x * 0.60, "R$")
elif((x <= 5000) and y == "I"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000 and "I"):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: -30.800000000000004 R$
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 14:02:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)


if((x > 0 and x <=500) and y =="R"):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500 and y == "R"):
	print("Valor total:",x * 0.65,"R$")
elif( x <= 1000 and y == "C"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000 and y == "C"):
	print("Valor total:", x * 0.60, "R$")
elif((x <= 5000) and y == "I"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000 and "I"):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: -30.800000000000004 R$
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 14:02:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)


if((x > 0 and x <=500) and y =="R"):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500 and y == "R"):
	print("Valor total:",x * 0.65,"R$")
elif( x <= 1000 and y == "C"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000 and y == "C"):
	print("Valor total:", x * 0.60, "R$")
elif((x <= 5000) and y == "I"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000 and "I"):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: -30.800000000000004 R$
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 14:02:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)


if((x > 0 and x <=500) and y =="R"):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500 and y == "R"):
	print("Valor total:",x * 0.65,"R$")
elif( x <= 1000 and y == "C"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000 and y == "C"):
	print("Valor total:", x * 0.60, "R$")
elif((x <= 5000) and y == "I"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000 and "I"):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: -30.800000000000004 R$
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 14:02:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("insira o consumo:"))
y = input("insira o tipo: (R/I/C)").upper()
print("Entradas:", x ,"kwh", "e tipo",y)


if((x > 0 and x <=500) and y =="R"):
	print("Valor total:",x * 0.44, "R$")
elif(x > 500 and y == "R"):
	print("Valor total:",x * 0.65,"R$")
elif( x <= 1000 and y == "C"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 1000 and y == "C"):
	print("Valor total:", x * 0.60, "R$")
elif((x <= 5000) and y == "I"):
	print("Valor total:",x * 0.55, "R$")
elif(x > 5000 and "I"):
	print("Valor total:", x * 0.60, "R$")
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.123717
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Valor total: -30.800000000000004 R$
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: 621.075 R$
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 18:54:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x = float(input("consumo:"))
y = input("insira o tipo de instalacao: (R/I/C)").upper

print("Entradas:", x,"e tipo",y)
-- OUTPUT:
Entradas: -56.0 e tipo <built-in method upper of str object at 0x7f07b9b18650>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 18:54:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x = float(input("consumo:"))
y = input("insira o tipo de instalacao: (R/I/C)").upper

print("Entradas:", x,"e tipo",y)
-- OUTPUT:
Entradas: -56.0 e tipo <built-in method upper of str object at 0x7f8eaadd2650>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 18:54:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x = float(input("consumo:"))
y = input("insira o tipo de instalacao: (R/I/C)").upper

print("Entradas:", x,"e tipo",y)
-- OUTPUT:
Entradas: -56.0 e tipo <built-in method upper of str object at 0x7fd586d22650>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 18:54:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x = float(input("consumo:"))
y = input("insira o tipo de instalacao: (R/I/C)").upper

print("Entradas:", x,"e tipo",y)
-- OUTPUT:
Entradas: -56.0 e tipo <built-in method upper of str object at 0x7f97f9153650>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 18:54:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x = float(input("consumo:"))
y = input("insira o tipo de instalacao: (R/I/C)").upper

print("Entradas:", x,"e tipo",y)
-- OUTPUT:
Entradas: -56.0 e tipo <built-in method upper of str object at 0x7f3f20848650>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 18:54:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x = float(input("consumo:"))
y = input("insira o tipo de instalacao: (R/I/C)").upper

print("Entradas:", x,"e tipo",y)
-- OUTPUT:
Entradas: -56.0 e tipo <built-in method upper of str object at 0x7fcb7cd9a650>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 18:54:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x = float(input("consumo:"))
y = input("insira o tipo de instalacao: (R/I/C)").upper

print("Entradas:", x,"e tipo",y)
-- OUTPUT:
Entradas: -56.0 e tipo <built-in method upper of str object at 0x7f48ede6d650>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 18:54:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x = float(input("consumo:"))
y = input("insira o tipo de instalacao: (R/I/C)").upper

print("Entradas:", x,"e tipo",y)
-- OUTPUT:
Entradas: -56.0 e tipo <built-in method upper of str object at 0x7f5c952cd650>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 18:54:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x = float(input("consumo:"))
y = input("insira o tipo de instalacao: (R/I/C)").upper

print("Entradas:", x,"e tipo",y)
-- OUTPUT:
Entradas: -56.0 e tipo <built-in method upper of str object at 0x7f54ab51f650>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 18:54:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x = float(input("consumo:"))
y = input("insira o tipo de instalacao: (R/I/C)").upper

print("Entradas:", x,"e tipo",y)
-- OUTPUT:
Entradas: -56.0 e tipo <built-in method upper of str object at 0x7f3d6eabd650>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 18:54:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x = float(input("consumo:"))
y = input("insira o tipo de instalacao: (R/I/C)").upper

print("Entradas:", x,"e tipo",y)
-- OUTPUT:
Entradas: -56.0 e tipo <built-in method upper of str object at 0x7f40026ff650>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 18:54:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x = float(input("consumo:"))
y = input("insira o tipo de instalacao: (R/I/C)").upper

print("Entradas:", x,"e tipo",y)
-- OUTPUT:
Entradas: -56.0 e tipo <built-in method upper of str object at 0x7fb95bc18650>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 18:54:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x = float(input("consumo:"))
y = input("insira o tipo de instalacao: (R/I/C)").upper

print("Entradas:", x,"e tipo",y)
-- OUTPUT:
Entradas: -56.0 e tipo <built-in method upper of str object at 0x7fc5ee878650>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 18:54:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x = float(input("consumo:"))
y = input("insira o tipo de instalacao: (R/I/C)").upper

print("Entradas:", x,"e tipo",y)
-- OUTPUT:
Entradas: -56.0 e tipo <built-in method upper of str object at 0x7f5936be3650>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 18:54:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x = float(input("consumo:"))
y = input("insira o tipo de instalacao: (R/I/C)").upper

print("Entradas:", x,"e tipo",y)
-- OUTPUT:
Entradas: -56.0 e tipo <built-in method upper of str object at 0x7fac6e3ba650>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 18:57:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x = float(input("consumo:"))
y = input("insira o tipo de instalacao: (R/I/C)").upper

print("Entradas:", x,"kwh e tipo",y)
if((y == "R") or (y == "I") or (y == "C")):
	if(x > 0 and x <= 500):
		print(x * 0.44)
-- OUTPUT:
Entradas: -56.0 kwh e tipo <built-in method upper of str object at 0x7f75d55cd5a8>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 18:58:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x = float(input("consumo:"))
y = input("insira o tipo de instalacao: (R/I/C)").upper()

print("Entradas:", x,"kwh e tipo",y)
if((y == "R") or (y == "I") or (y == "C")):
	if(x > 0 and x <= 500):
		print(x * 0.44)
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:00:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x = float(input("consumo:"))
y = input("insira o tipo de instalacao: (R/I/C)").upper()

print("Entradas:", x,"kwh e tipo",y)
if((y == "R") or (y == "I") or (y == "C")):
	if(x > 0 and x <= 500):
		print(x * 0.44)
	elif(x > 500):
		print(x * 0.65)
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:01:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x = float(input("consumo:"))
y = input("insira o tipo de instalacao: (R/I/C)").upper()

print("Entradas:", round(x,2),"kwh e tipo",y)
if((y == "R") or (y == "I") or (y == "C")):
	if(x > 0 and x <= 500):
		print(x * 0.44)
	elif(x > 500):
		print(x * 0.65)
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:01:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x = float(input("consumo:"))
y = input("insira o tipo de instalacao: (R/I/C)").upper()

print("Entradas:", x,"kwh e tipo",y)
if((y == "R") or (y == "I") or (y == "C")):
	if(x > 0 and x <= 500):
		print(x * 0.44)
	elif(x > 500):
		print(round(x,2) * 0.65)
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:02:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x = float(input("consumo:"))
y = input("insira o tipo de instalacao: (R/I/C)").upper()

print("Entradas:", x,"kwh e tipo",y)
if((y == "R") or (y == "I") or (y == "C")):
	if(x > 0 and x <= 500):
		print(x * 0.44)
	elif(x > 500):
		print(round(x * 0.65 ,2)
-- ERROR:
File "XXXX", line 13
    
                              ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:03:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x = float(input("consumo:"))
y = input("insira o tipo de instalacao: (R/I/C)").upper()

print("Entradas:", x,"kwh e tipo",y)
if((y == "R") or (y == "I") or (y == "C")):
	if(x > 0 and x <= 500):
		print(x * 0.44)
	elif(x > 500):
		print(round(x * 0.65),2)
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:03:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x = float(input("consumo:"))
y = input("insira o tipo de instalacao: (R/I/C)").upper()

print("Entradas:", x,"kwh e tipo",y)
if((y == "R") or (y == "I") or (y == "C")):
	if(x > 0 and x <= 500):
		print(x * 0.44)
	elif(x > 500):
		print(round(x * 0.65),2)
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:03:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x = float(input("consumo:"))
y = input("insira o tipo de instalacao: (R/I/C)").upper()

print("Entradas:", x,"kwh e tipo",y)
if((y == "R") or (y == "I") or (y == "C")):
	if(x > 0 and x <= 500):
		print(x * 0.44)
	elif(x > 500):
		print(round(x * 0.65))
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:04:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x = float(input("consumo:"))
y = input("insira o tipo de instalacao: (R/I/C)").upper()

print("Entradas:", x,"kwh e tipo",y)
if((y == "R") or (y == "I") or (y == "C")):
	if(x > 0 and x <= 500):
		print(x * 0.44)
	elif(x > 500):
		print(x * 0.65)
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:06:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x = float(input("consumo:"))
y = input("insira o tipo de instalacao: (R/I/C)").upper()

print("Entradas:", x,"kwh e tipo",y)
if((y == "R") or (y == "I") or (y == "C")):
	if(x > 0 and x <= 500):
		print("Valor total: R$",x * 0.44)
	elif(x > 500):
		print(x * 0.65)
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:06:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x = float(input("consumo:"))
y = input("insira o tipo de instalacao: (R/I/C)").upper()

print("Entradas:", x,"kwh e tipo",y)
if((y == "R") or (y == "I") or (y == "C")):
	if(x > 0 and x <= 500):
		print("Valor total: R$",x * 0.44)
	elif(x > 500):
		print("Valor total:",x * 0.65)
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:10:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()

print("Entradas:", X,"kwh e tipo",Y)
if((Y == "R") or (Y == "I") or (Y == "C")):
	if(X > 0 and X <= 500):
		Z = X * 0.44
		print("Valor total: R$",round(Z,2))
	elif(x > 500):
		print("Valor total:",x * 0.65)
	elif(X <= 1000)
-- ERROR:
File "XXXX", line 14
    elif(X <= 1000)
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:10:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()

print("Entradas:", X,"kwh e tipo",Y)
if((Y == "R") or (Y == "I") or (Y == "C")):
	if(X > 0 and X <= 500):
		Z = X * 0.44
		print("Valor total: R$",round(Z,2))
	elif(x > 500):
		print("Valor total:",x * 0.65)
	elif(X <= 1000):
-- ERROR:
File "XXXX", line 15
    
                     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:17:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()

print("Entradas:", X,"kwh e tipo",Y)

if((Y == "R") or (Y == "I") or (Y == "C")):
	
	if(X > 0 and X <= 500):
		Z = X * 0.44
		print("Valor total: R$",round(Z,2))
		
		elif(x > 500):
		Z = X * 0.65
		print("Valor total: R$",round(Z,2))
				
		elif(X <= 1000):
		Z = 0 * 55
		print("Valor total: R$",round(Z,2))
		
		elif(X >1000):
		Z = X * 0.60
		print("Valor total: R$",round(Z,2))
		
		elif(X <= 5000):
		Z = X * 0.55
		print("Valor total: R$",round(Z,2))
		
		elif(X > 5000):
		Z = X * 0.60
		print("Valor total: R$",round(Z,2))
else:
	print("Dados invalidos")
			
-- ERROR:
File "XXXX", line 15
    elif(x > 500):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:17:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()

print("Entradas:", X,"kwh e tipo",Y)

if((Y == "R") or (Y == "I") or (Y == "C")):
	
	if(X > 0 and X <= 500):
		Z = X * 0.44
		print("Valor total: R$",round(Z,2))
		
		elif(x > 500):
		Z = X * 0.65
		print("Valor total: R$",round(Z,2))
				
		elif(X <= 1000):
		Z = 0 * 55
		print("Valor total: R$",round(Z,2))
		
		elif(X >1000):
		Z = X * 0.60
		print("Valor total: R$",round(Z,2))
		
		elif(X <= 5000):
		Z = X * 0.55
		print("Valor total: R$",round(Z,2))
		
		elif(X > 5000):
		Z = X * 0.60
		print("Valor total: R$",round(Z,2))
else:
	print("Dados invalidos")
			
-- ERROR:
File "XXXX", line 15
    elif(x > 500):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:17:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()

print("Entradas:", X,"kwh e tipo",Y)

if((Y == "R") or (Y == "I") or (Y == "C")):
	
	if(X > 0 and X <= 500):
		Z = X * 0.44
		print("Valor total: R$",round(Z,2))
		
		elif(x > 500):
		Z = X * 0.65
		print("Valor total: R$",round(Z,2))
				
		elif(X <= 1000):
		Z = 0 * 55
		print("Valor total: R$",round(Z,2))
		
		elif(X >1000):
		Z = X * 0.60
		print("Valor total: R$",round(Z,2))
		
		elif(X <= 5000):
		Z = X * 0.55
		print("Valor total: R$",round(Z,2))
		
		elif(X > 5000):
		Z = X * 0.60
		print("Valor total: R$",round(Z,2))
else:
	print("Dados invalidos")
			
-- ERROR:
File "XXXX", line 15
    elif(x > 500):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:18:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()

print("Entradas:", X,"kwh e tipo",Y)

if((Y == "R") or (Y == "I") or (Y == "C")):
	
	if(X > 0 and X <= 500):
		Z = X * 0.44
		print("Valor total: R$",round(Z,2)
		
		elif(x > 500):
		Z = X * 0.65
		print("Valor total: R$",round(Z,2))
				
		elif(X <= 1000):
		Z = 0 * 55
		print("Valor total: R$",round(Z,2))
		
		elif(X >1000):
		Z = X * 0.60
		print("Valor total: R$",round(Z,2))
		
		elif(X <= 5000):
		Z = X * 0.55
		print("Valor total: R$",round(Z,2))
		
		elif(X > 5000):
		Z = X * 0.60
		print("Valor total: R$",round(Z,2))
else:
	print("Dados invalidos")
			
-- ERROR:
File "XXXX", line 15
    elif(x > 500):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:18:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()

print("Entradas:", X,"kwh e tipo",Y)

if((Y == "R") or (Y == "I") or (Y == "C")):
	
	if(X > 0 and X <= 500):
		Z = X * 0.44
		print("Valor total: R$",round(Z,2)
		
		elif(x > 500):
		Z = X * 0.65
		print("Valor total: R$",round(Z,2))
				
		elif(X <= 1000):
		Z = 0 * 55
		print("Valor total: R$",round(Z,2))
		
		elif(X >1000):
		Z = X * 0.60
		print("Valor total: R$",round(Z,2))
		
		elif(X <= 5000):
		Z = X * 0.55
		print("Valor total: R$",round(Z,2))
		
		elif(X > 5000):
		Z = X * 0.60
		print("Valor total: R$",round(Z,2))
else:
	print("Dados invalidos")
			
-- ERROR:
File "XXXX", line 15
    elif(x > 500):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:18:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()

print("Entradas:", X,"kwh e tipo",Y)

if((Y == "R") or (Y == "I") or (Y == "C")):
	
	if(X > 0 and X <= 500):
		Z = X * 0.44
		print("Valor total: R$",round(Z,2))
		
		elif(x > 500):
		Z = X * 0.65
		print("Valor total: R$",round(Z,2))
				
		elif(X <= 1000):
		Z = 0 * 55
		print("Valor total: R$",round(Z,2))
		
		elif(X >1000):
		Z = X * 0.60
		print("Valor total: R$",round(Z,2))
		
		elif(X <= 5000):
		Z = X * 0.55
		print("Valor total: R$",round(Z,2))
		
		elif(X > 5000):
		Z = X * 0.60
		print("Valor total: R$",round(Z,2))
else:
	print("Dados invalidos")
			
-- ERROR:
File "XXXX", line 15
    elif(x > 500):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:18:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()

print("Entradas:", X,"kwh e tipo",Y)

if((Y == "R") or (Y == "I") or (Y == "C")):
	
	if(X > 0 and X <= 500):
		Z = X * 0.44
		print("Valor total: R$",round(Z,2))
		
		if(x > 500):
		Z = X * 0.65
		print("Valor total: R$",round(Z,2))
				
		elif(X <= 1000):
		Z = 0 * 55
		print("Valor total: R$",round(Z,2))
		
		elif(X >1000):
		Z = X * 0.60
		print("Valor total: R$",round(Z,2))
		
		elif(X <= 5000):
		Z = X * 0.55
		print("Valor total: R$",round(Z,2))
		
		elif(X > 5000):
		Z = X * 0.60
		print("Valor total: R$",round(Z,2))
else:
	print("Dados invalidos")
			
-- ERROR:
File "XXXX", line 16
    Z = X * 0.65
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:19:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()

print("Entradas:", X,"kwh e tipo",Y)

if((Y == "R") or (Y == "I") or (Y == "C")):
	
	if(X > 0 and X <= 500):
		Z = X * 0.44
		print("Valor total: R$",round(Z,2))
		
		if(x > 500):
			Z = X * 0.65
			print("Valor total: R$",round(Z,2))
				
		elif(X <= 1000):
		Z = 0 * 55
		print("Valor total: R$",round(Z,2))
		
		elif(X >1000):
		Z = X * 0.60
		print("Valor total: R$",round(Z,2))
		
		elif(X <= 5000):
		Z = X * 0.55
		print("Valor total: R$",round(Z,2))
		
		elif(X > 5000):
		Z = X * 0.60
		print("Valor total: R$",round(Z,2))
else:
	print("Dados invalidos")
			
-- ERROR:
File "XXXX", line 20
    Z = 0 * 55
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:19:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()

print("Entradas:", X,"kwh e tipo",Y)

if((Y == "R") or (Y == "I") or (Y == "C")):
	
	if(X > 0 and X <= 500):
		Z = X * 0.44
		print("Valor total: R$",round(Z,2))
		
		if(x > 500):
			Z = X * 0.65
			print("Valor total: R$",round(Z,2))
				
		elif(X <= 1000):
			Z = 0 * 55
			print("Valor total: R$",round(Z,2))
		
		elif(X >1000):
			Z = X * 0.60
			print("Valor total: R$",round(Z,2))
		
		elif(X <= 5000):
			Z = X * 0.55
			print("Valor total: R$",round(Z,2))
		
		elif(X > 5000):
			Z = X * 0.60
			print("Valor total: R$",round(Z,2))
else:
	print("Dados invalidos")
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print("Entradas:", X,"kwh e tipo",Y)
NameError: name 'X' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:19:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()

print("Entradas:", X,"kwh e tipo",Y)

if((Y == "R") or (Y == "I") or (Y == "C")):
	
	if(X > 0 and X <= 500):
		Z = X * 0.44
		print("Valor total: R$",round(Z,2))
		
		if(x > 500):
			Z = X * 0.65
			print("Valor total: R$",round(Z,2))
				
		elif(X <= 1000):
			Z = 0 * 55
			print("Valor total: R$",round(Z,2))
		
		elif(X >1000):
			Z = X * 0.60
			print("Valor total: R$",round(Z,2))
		
		elif(X <= 5000):
			Z = X * 0.55
			print("Valor total: R$",round(Z,2))
		
		elif(X > 5000):
			Z = X * 0.60
			print("Valor total: R$",round(Z,2))
else:
	print("Dados invalidos")
			
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:20:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()

print("Entradas:", X,"kwh e tipo",Y)

if((Y == "R") or (Y == "I") or (Y == "C")):
	
	if(X > 0 and X <= 500):
		Z = X * 0.44
		print("Valor total: R$",round(Z,2))
		
		if(X > 500):
			Z = X * 0.65
			print("Valor total: R$",round(Z,2))
				
		elif(X <= 1000):
			Z = 0 * 55
			print("Valor total: R$",round(Z,2))
		
		elif(X >1000):
			Z = X * 0.60
			print("Valor total: R$",round(Z,2))
		
		elif(X <= 5000):
			Z = X * 0.55
			print("Valor total: R$",round(Z,2))
		
		elif(X > 5000):
			Z = X * 0.60
			print("Valor total: R$",round(Z,2))
else:
	print("Dados invalidos")
			
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:20:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()

print("Entradas:", X,"kwh e tipo",Y)

if((Y == "R") or (Y == "I") or (Y == "C")):
	
	if(X > 0 and X <= 500):
		Z = X * 0.44
		print("Valor total: R$",round(Z,2))
		
		if(X > 500):
			Z = X * 0.65
			print("Valor total: R$",round(Z,2))
				
		elif(X <= 1000):
			Z = 0 * 55
			print("Valor total: R$",round(Z,2))
		
		elif(X >1000):
			Z = X * 0.60
			print("Valor total: R$",round(Z,2))
		
		elif(X <= 5000):
			Z = X * 0.55
			print("Valor total: R$",round(Z,2))
		
		elif(X > 5000):
			Z = X * 0.60
			print("Valor total: R$",round(Z,2))
else:
	print("Dados invalidos")
			
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:25:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if((Y == "R") or (Y == "I") or (Y == "C")):
	
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$",round(Z,2))
		
		if(X > 500):
			Z = X * 0.65
			print("Valor total: R$",round(Z,2))
				
		elif(X <= 1000):
			Z = 0 * 55
			print("Valor total: R$",round(Z,2))
		
		elif(X >1000):
			Z = X * 0.60
			print("Valor total: R$",round(Z,2))
		
		elif(X <= 5000):
			Z = X * 0.55
			print("Valor total: R$",round(Z,2))
		
		elif(X > 5000):
			Z = X * 0.60
			print("Valor total: R$",round(Z,2))
else:
	print("Dados invalidos")
			
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:37:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
		if(Y == "I"):
			if(X <= 1000):
				print("Valor total: R$", X * c)
				
			elif(X > 1000):
				print("Valor total: R$", X * d)
					if(y == "C"):
						if(X <= 5000):
							print("Valor total: R$", X * c)
						elif(X > 5000):
							print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 25
    if(y == "C"):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:37:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
		if(Y == "I"):
			if(X <= 1000):
				print("Valor total: R$", X * c)
				
			elif(X > 1000):
				print("Valor total: R$", X * d)
						if(y == "C"):
						if(X <= 5000):
							print("Valor total: R$", X * c)
						elif(X > 5000):
							print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 25
    if(y == "C"):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:37:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
		if(Y == "I"):
			if(X <= 1000):
				print("Valor total: R$", X * c)
				
			elif(X > 1000):
			print("Valor total: R$", X * d)
						if(y == "C"):
						if(X <= 5000):
							print("Valor total: R$", X * c)
						elif(X > 5000):
							print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 24
    print("Valor total: R$", X * d)
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:37:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
		if(Y == "I"):
			if(X <= 1000):
				print("Valor total: R$", X * c)
				
			elif(X > 1000):
				print("Valor total: R$", X * d)
						if(y == "C"):
						if(X <= 5000):
							print("Valor total: R$", X * c)
						elif(X > 5000):
							print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 25
    if(y == "C"):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:38:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
		if(Y == "I"):
			if(X <= 1000):
				print("Valor total: R$", X * c)
				
			elif(X > 1000):
				print("Valor total: R$", X * d)
					if(y == "C"):
						if(X <= 5000):
							print("Valor total: R$", X * c)
						elif(X > 5000):
							print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 25
    if(y == "C"):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:38:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
		if(Y == "I"):
			if(X <= 1000):
				print("Valor total: R$", X * c)
				
			elif(X > 1000):
				print("Valor total: R$", X * d)
				if(y == "C"):
						if(X <= 5000):
							print("Valor total: R$", X * c)
						elif(X > 5000):
							print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 19:38:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
		if(Y == "I"):
			if(X <= 1000):
				print("Valor total: R$", X * c)
				
			elif(X > 1000):
				print("Valor total: R$", X * d)
				if(y == "C"):
						if(X <= 5000):
							print("Valor total: R$", X * c)
						elif(X > 5000):
							print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- EXECUTION TIME:
0.160328
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R$ 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:38:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
		if(Y == "I"):
			if(X <= 1000):
				print("Valor total: R$", X * c)
				
			elif(X > 1000):
				print("Valor total: R$", X * d)
				if(y == "C"):
						if(X <= 5000):
							print("Valor total: R$", X * c)
						elif(X > 5000):
							print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:38:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
		if(Y == "I"):
			if(X <= 1000):
				print("Valor total: R$", X * c)
				
			elif(X > 1000):
				print("Valor total: R$", X * d)
				if(y == "C"):
						if(X <= 5000):
							print("Valor total: R$", X * c)
						elif(X > 5000):
							print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:38:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
		if(Y == "I"):
			if(X <= 1000):
				print("Valor total: R$", X * c)
				
			elif(X > 1000):
				print("Valor total: R$", X * d)
				if(y == "C"):
						if(X <= 5000):
							print("Valor total: R$", X * c)
						elif(X > 5000):
							print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:38:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
		if(Y == "I"):
			if(X <= 1000):
				print("Valor total: R$", X * c)
				
			elif(X > 1000):
				print("Valor total: R$", X * d)
				if(y == "C"):
						if(X <= 5000):
							print("Valor total: R$", X * c)
						elif(X > 5000):
							print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:38:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
		if(Y == "I"):
			if(X <= 1000):
				print("Valor total: R$", X * c)
				
			elif(X > 1000):
				print("Valor total: R$", X * d)
				if(y == "C"):
						if(X <= 5000):
							print("Valor total: R$", X * c)
						elif(X > 5000):
							print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:38:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
		if(Y == "I"):
			if(X <= 1000):
				print("Valor total: R$", X * c)
				
			elif(X > 1000):
				print("Valor total: R$", X * d)
				if(y == "C"):
						if(X <= 5000):
							print("Valor total: R$", X * c)
						elif(X > 5000):
							print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:38:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
		if(Y == "I"):
			if(X <= 1000):
				print("Valor total: R$", X * c)
				
			elif(X > 1000):
				print("Valor total: R$", X * d)
				if(y == "C"):
						if(X <= 5000):
							print("Valor total: R$", X * c)
						elif(X > 5000):
							print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:38:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
		if(Y == "I"):
			if(X <= 1000):
				print("Valor total: R$", X * c)
				
			elif(X > 1000):
				print("Valor total: R$", X * d)
				if(y == "C"):
						if(X <= 5000):
							print("Valor total: R$", X * c)
						elif(X > 5000):
							print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:38:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
		if(Y == "I"):
			if(X <= 1000):
				print("Valor total: R$", X * c)
				
			elif(X > 1000):
				print("Valor total: R$", X * d)
				if(y == "C"):
						if(X <= 5000):
							print("Valor total: R$", X * c)
						elif(X > 5000):
							print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:38:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
		if(Y == "I"):
			if(X <= 1000):
				print("Valor total: R$", X * c)
				
			elif(X > 1000):
				print("Valor total: R$", X * d)
				if(y == "C"):
						if(X <= 5000):
							print("Valor total: R$", X * c)
						elif(X > 5000):
							print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:39:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
		if(Y == "C"):
			if(X <= 1000):
				print("Valor total: R$", X * c)
				
			elif(X > 1000):
				print("Valor total: R$", X * d)
				if(y == "I"):
						if(X <= 5000):
							print("Valor total: R$", X * c)
						elif(X > 5000):
							print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:40:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
		if(Y == "C"):
			if(X <= 1000):
				print("Valor total: R$", X * c)
				
			elif(X > 1000):
				print("Valor total: R$", X * d)
				if(y == "I"):
						if(X <= 5000):
							print("Valor total: R$", X * c)
						elif(X > 5000):
							print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:40:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
		if(Y == "C"):
			if(X <= 1000):
				print("Valor total: R$", X * c)
				
			elif(X > 1000):
				print("Valor total: R$", X * d)
				if(y == "I"):
						if(X <= 5000):
							print("Valor total: R$", X * c)
						elif(X > 5000):
							print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:41:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
		if(Y == "C"):
			if(X <= 1000):
				print("Valor total: R$", X * c)
				
			elif(X > 1000):
				print("Valor total: R$", X * d)
				if(y == "I"):
						if(X <= 5000):
							print("Valor total: R$", X * c)
						elif(X > 5000):
							print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:42:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
		elif(Y == "C"):
			elif(X <= 1000):
				print("Valor total: R$", X * c)
				
			elif(X > 1000):
				print("Valor total: R$", X * d)
				elif(y == "I"):
						elf(X <= 5000):
							print("Valor total: R$", X * c)
						elif(X > 5000):
							print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 19
    elif(Y == "C"):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:42:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
		if(Y == "C"):
			elif(X <= 1000):
				print("Valor total: R$", X * c)
				
			elif(X > 1000):
				print("Valor total: R$", X * d)
				elif(y == "I"):
						elif(X <= 5000):
							print("Valor total: R$", X * c)
						elif(X > 5000):
							print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 20
    elif(X <= 1000):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:42:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
		if(Y == "C"):
			elif(X <= 1000):
				print("Valor total: R$", X * c)
				
			elif(X > 1000):
				print("Valor total: R$", X * d)
				elif(y == "I"):
						elif(X <= 5000):
							print("Valor total: R$", X * c)
						elif(X > 5000):
							print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 20
    elif(X <= 1000):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:42:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
		if(Y == "C"):
			if(X <= 1000):
				print("Valor total: R$", X * c)
				
			elif(X > 1000):
				print("Valor total: R$", X * d)
				elif(y == "I"):
						elif(X <= 5000):
							print("Valor total: R$", X * c)
						elif(X > 5000):
							print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 25
    elif(y == "I"):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:42:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
		if(Y == "C"):
			if(X <= 1000):
				print("Valor total: R$", X * c)
				
			elif(X > 1000):
				print("Valor total: R$", X * d)
				if(y == "I"):
						elif(X <= 5000):
							print("Valor total: R$", X * c)
						elif(X > 5000):
							print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 26
    elif(X <= 5000):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:43:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
		if(Y == "C"):
			if(X <= 1000):
				print("Valor total: R$", X * c)
				
			elif(X > 1000):
				print("Valor total: R$", X * d)
				if(y == "I"):
						if(X <= 5000):
							print("Valor total: R$", X * c)
						elif(X > 5000):
							print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:44:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
		if(Y == "C"):
				if(X <= 1000):
					print("Valor total: R$", X * c)
				
				elif(X > 1000):
					print("Valor total: R$", X * d)
				if(y == "I"):
						if(X <= 5000):
							print("Valor total: R$", X * c)
						elif(X > 5000):
							print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:44:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
		if(Y == "C"):
				if(X <= 1000):
					print("Valor total: R$", X * c)
				
				elif(X > 1000):
					print("Valor total: R$", X * d)
				if(y == "I"):
						if(X <= 5000):
							print("Valor total: R$", X * c)
						elif(X > 5000):
							print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:45:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
		else(Y == "C"):
				if(X <= 1000):
					print("Valor total: R$", X * c)
				
				elif(X > 1000):
					print("Valor total: R$", X * d)
				if(y == "I"):
						if(X <= 5000):
							print("Valor total: R$", X * c)
						elif(X > 5000):
							print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 19
    else(Y == "C"):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:45:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
		elif(Y == "C"):
				if(X <= 1000):
					print("Valor total: R$", X * c)
				
				elif(X > 1000):
					print("Valor total: R$", X * d)
				if(y == "I"):
						if(X <= 5000):
							print("Valor total: R$", X * c)
						elif(X > 5000):
							print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 19
    elif(Y == "C"):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:45:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
		if(Y == "C"):
				if(X <= 1000):
					print("Valor total: R$", X * c)
				
				elif(X > 1000):
					print("Valor total: R$", X * d)
				if(y == "I"):
						if(X <= 5000):
							print("Valor total: R$", X * c)
						elif(X > 5000):
							print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:46:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
		if(Y == "C"):
			if(X <= 1000):
				print("Valor total: R$", X * c)
				
			elif(X > 1000):
				print("Valor total: R$", X * d)
				if(y == "I"):
						if(X <= 5000):
							print("Valor total: R$", X * c)
						elif(X > 5000):
							print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:49:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R" and ((X > 0 and X <= 500)):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
		if(Y == "C"):
			if(X <= 1000):
				print("Valor total: R$", X * c)
				
			elif(X > 1000):
				print("Valor total: R$", X * d)
				if(y == "I"):
						if(X <= 5000):
							print("Valor total: R$", X * c)
						elif(X > 5000):
							print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 12
    if(Y == "R" and ((X > 0 and X <= 500)):
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:49:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R" and ((X > 0 and X <= 500)):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
		if(Y == "C"):
			if(X <= 1000):
				print("Valor total: R$", X * c)
				
			elif(X > 1000):
				print("Valor total: R$", X * d)
				if(y == "I"):
						if(X <= 5000):
							print("Valor total: R$", X * c)
						elif(X > 5000):
							print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 12
    if(Y == "R" and ((X > 0 and X <= 500)):
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:49:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if((Y == "R") and ((X > 0 and X <= 500)):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
		if(Y == "C"):
			if(X <= 1000):
				print("Valor total: R$", X * c)
				
			elif(X > 1000):
				print("Valor total: R$", X * d)
				if(y == "I"):
						if(X <= 5000):
							print("Valor total: R$", X * c)
						elif(X > 5000):
							print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 12
    if((Y == "R") and ((X > 0 and X <= 500)):
                                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:49:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if((Y == "R") and ((X > 0 and X <= 500))
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
		if(Y == "C"):
			if(X <= 1000):
				print("Valor total: R$", X * c)
				
			elif(X > 1000):
				print("Valor total: R$", X * d)
				if(y == "I"):
						if(X <= 5000):
							print("Valor total: R$", X * c)
						elif(X > 5000):
							print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 13
    print("Valor total: R$", X * a)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:50:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if((Y == "R") and ((X > 0 and X <= 500)):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
		if(Y == "C"):
			if(X <= 1000):
				print("Valor total: R$", X * c)
				
			elif(X > 1000):
				print("Valor total: R$", X * d)
				if(y == "I"):
						if(X <= 5000):
							print("Valor total: R$", X * c)
						elif(X > 5000):
							print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 12
    if((Y == "R") and ((X > 0 and X <= 500)):
                                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:51:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R" and ()):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
		else(Y == "C"):
			elif(X <= 1000):
				print("Valor total: R$", X * c)
				
			elif(X > 1000):
				print("Valor total: R$", X * d)
				if(y == "I"):
						if(X <= 5000):
							print("Valor total: R$", X * c)
						elif(X > 5000):
							print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 19
    else(Y == "C"):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:51:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R" and ()):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
		else(Y == "C"):
			elif(X <= 1000):
				print("Valor total: R$", X * c)
				
			elif(X > 1000):
				print("Valor total: R$", X * d)
				if(y == "I"):
						if(X <= 5000):
							print("Valor total: R$", X * c)
						elif(X > 5000):
							print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 19
    else(Y == "C"):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:51:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R" and ()):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
		elif(Y == "C"):
			elif(X <= 1000):
				print("Valor total: R$", X * c)
				
			elif(X > 1000):
				print("Valor total: R$", X * d)
				if(y == "I"):
						if(X <= 5000):
							print("Valor total: R$", X * c)
						elif(X > 5000):
							print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 19
    elif(Y == "C"):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:51:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R" and ()):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
		if(Y == "C"):
			elif(X <= 1000):
				print("Valor total: R$", X * c)
				
			elif(X > 1000):
				print("Valor total: R$", X * d)
				if(y == "I"):
						if(X <= 5000):
							print("Valor total: R$", X * c)
						elif(X > 5000):
							print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 20
    elif(X <= 1000):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:51:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R" and ()):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
		if(Y == "C"):
			if(X <= 1000):
				print("Valor total: R$", X * c)
				
			elif(X > 1000):
				print("Valor total: R$", X * d)
				if(y == "I"):
						if(X <= 5000):
							print("Valor total: R$", X * c)
						elif(X > 5000):
							print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:52:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R" and ()):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
if(Y == "C"):
			if(X <= 1000):
				print("Valor total: R$", X * c)
				
			elif(X > 1000):
				print("Valor total: R$", X * d)
				if(y == "I"):
						if(X <= 5000):
							print("Valor total: R$", X * c)
						elif(X > 5000):
							print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:52:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R" and ()):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
if(Y == "C"):
	if(X <= 1000):
		print("Valor total: R$", X * c)
				
		elif(X > 1000):
			print("Valor total: R$", X * d)
if(y == "I"):
	if(X <= 5000):
			print("Valor total: R$", X * c)
		elif(X > 5000):
			print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 23
    elif(X > 1000):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:52:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R" and ()):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
if(Y == "C"):
	if(X <= 1000):
		print("Valor total: R$", X * c)
				
	elif(X > 1000):
			print("Valor total: R$", X * d)
if(y == "I"):
	if(X <= 5000):
			print("Valor total: R$", X * c)
		elif(X > 5000):
			print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 28
    elif(X > 5000):
                  ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:52:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R" and ()):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
if(Y == "C"):
	if(X <= 1000):
		print("Valor total: R$", X * c)
				
	elif(X > 1000):
			print("Valor total: R$", X * d)
if(y == "I"):
	if(X <= 5000):
			print("Valor total: R$", X * c)
		elif(X > 5000):
			print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 28
    elif(X > 5000):
                  ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:53:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R" and ()):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
if(Y == "C"):
	if(X <= 1000):
		print("Valor total: R$", X * c)
				
	elif(X > 1000):
			print("Valor total: R$", X * d)
if(y == "I"):
	if(X <= 5000):
			print("Valor total: R$", X * c)
	elif(X > 5000):
			print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 25, in <module>
    if(y == "I"):
NameError: name 'y' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:53:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R" and ()):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
if(Y == "C"):
	if(X <= 1000):
		print("Valor total: R$", X * c)
				
	elif(X > 1000):
			print("Valor total: R$", X * d)
if(Y == "I"):
	if(X <= 5000):
			print("Valor total: R$", X * c)
	elif(X > 5000):
			print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.800000000000004
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:53:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R" and ()):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
if(Y == "C"):
	if(X <= 1000):
		print("Valor total: R$", X * c)
				
	elif(X > 1000):
			print("Valor total: R$", X * d)
if(Y == "I"):
	if(X <= 5000):
			print("Valor total: R$", X * c)
	elif(X > 5000):
			print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.800000000000004
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:54:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R" and ()):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
if(Y == "C"):
	if(X <= 1000):
		print("Valor total: R$", X * c)
				
	elif(X > 1000):
			print("Valor total: R$", X * d)
if(Y == "I"):
	if(X <= 5000):
			print("Valor total: R$", X * c)
	elif(X > 5000):
			print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.800000000000004
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 19:54:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R" and ()):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
if(Y == "C"):
	if(X <= 1000):
		print("Valor total: R$", X * c)
				
	elif(X > 1000):
			print("Valor total: R$", X * d)
if(Y == "I"):
	if(X <= 5000):
			print("Valor total: R$", X * c)
	elif(X > 5000):
			print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- EXECUTION TIME:
0.152853
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.800000000000004
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Dados invalidos
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:55:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R" and ()):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
if(Y == "C"):
	if(X <= 1000):
		print("Valor total: R$", X * c)
				
	elif(X > 1000):
			print("Valor total: R$", X * d)
if(Y == "I"):
	if(X <= 5000):
			print("Valor total: R$", X * c)
	elif(X > 5000):
			print("Valor total: R$", X * d)
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.800000000000004
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:56:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R" and ()):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
if(Y == "C"):
	if(X <= 1000):
		print("Valor total: R$", X * c)
				
	elif(X > 1000):
			print("Valor total: R$", X * d)
if(Y == "I"):
	if(X <= 5000):
			print("Valor total: R$", X * c1)
	elif(X > 5000):
			print("Valor total: R$", X * d1)
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.800000000000004
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:56:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R" and ()):
	if(X > 0 and X <= 500):
		print("Valor total: R$", X * a)
	
	elif(X > 500):
		print("Valor total: R$", X * b)
		
if(Y == "C"):
	if(X <= 1000):
		print("Valor total: R$", X * c)
				
	elif(X > 1000):
			print("Valor total: R$", X * d)
if(Y == "I"):
	if(X <= 5000):
			print("Valor total: R$", X * c1)
	elif(X > 5000):
			print("Valor total: R$", X * d1)
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.800000000000004
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 20:52:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R" and ()):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y == "C"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
			print("Valor total: R$", round(Z,2))
if(Y == "I"):
	if(X <= 5000):
		Z = X * c1
			print("Valor total: R$", round(Z,2))
	elif(X > 5000):
		Z = X * d1
			print("Valor total: R$",  round(Z,2))
else:
	print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 30
    print("Valor total: R$", round(Z,2))
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 20:52:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R" and ()):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y == "C"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
if(Y == "I"):
	if(X <= 5000):
		Z = X * c1
			print("Valor total: R$", round(Z,2))
	elif(X > 5000):
		Z = X * d1
			print("Valor total: R$",  round(Z,2))
else:
	print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 34
    print("Valor total: R$", round(Z,2))
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 20:52:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R" and ()):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y == "C"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
if(Y == "I"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
	elif(X > 5000):
		Z = X * d1
			print("Valor total: R$",  round(Z,2))
else:
	print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 37
    print("Valor total: R$",  round(Z,2))
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 20:52:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R" and ()):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y == "C"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
if(Y == "I"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 20:52:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R" and ()):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y == "C"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
if(Y == "I"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 20:53:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R" and ()):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y == "C"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
if(Y == "I"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 20:53:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R" and ()):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y == "C"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
if(Y == "I"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- EXECUTION TIME:
0.16678
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 20:53:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R" and ()):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y == "C"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
if(Y == "I"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 20:53:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R" and ()):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y == "C"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
if(Y == "I"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 20:55:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y == "C"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
if(Y == "I"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 20:55:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y == "C"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
if(Y == "I"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
else:
	print("Dados invalidos")
				
-- EXECUTION TIME:
0.15366
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R$ 621.08
Dados invalidos
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 20:56:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y == "C"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
		
if(Y == "I"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
		
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 20:57:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
	if(Y == "C"):
		if(X <= 1000):
			Z = X * c
			print("Valor total: R$", round(Z,2))
				
		elif(X > 1000):
			Z = X * d
			print("Valor total: R$", round(Z,2))
		
		if(Y == "I"):
		if(X <= 5000):
			Z = X * c1
			print("Valor total: R$", round(Z,2))
		
		elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
else:
	print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 33
    if(X <= 5000):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 20:57:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
	if(Y == "C"):
		if(X <= 1000):
			Z = X * c
			print("Valor total: R$", round(Z,2))
				
		elif(X > 1000):
			Z = X * d
			print("Valor total: R$", round(Z,2))
		
		if(Y == "I"):
			if(X <= 5000):
				Z = X * c1
				print("Valor total: R$", round(Z,2))
		
			elif(X > 5000):
			Z = X * d1
			print("Valor total: R$",  round(Z,2))
else:
	print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 38
    Z = X * d1
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 20:57:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
	if(Y == "C"):
		if(X <= 1000):
			Z = X * c
			print("Valor total: R$", round(Z,2))
				
		elif(X > 1000):
			Z = X * d
			print("Valor total: R$", round(Z,2))
		
		if(Y == "I"):
			if(X <= 5000):
				Z = X * c1
				print("Valor total: R$", round(Z,2))
		
			elif(X > 5000):
				Z = X * d1
				print("Valor total: R$",  round(Z,2))
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 20:57:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
	if(Y == "C"):
		if(X <= 1000):
			Z = X * c
			print("Valor total: R$", round(Z,2))
				
		elif(X > 1000):
			Z = X * d
			print("Valor total: R$", round(Z,2))
		
		if(Y == "I"):
			if(X <= 5000):
				Z = X * c1
				print("Valor total: R$", round(Z,2))
		
			elif(X > 5000):
				Z = X * d1
				print("Valor total: R$",  round(Z,2))
			else:
			print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 41
    print("Dados invalidos")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 20:58:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
	if(Y == "C"):
		if(X <= 1000):
			Z = X * c
			print("Valor total: R$", round(Z,2))
				
		elif(X > 1000):
			Z = X * d
			print("Valor total: R$", round(Z,2))
		
		if(Y == "I"):
			if(X <= 5000):
				Z = X * c1
				print("Valor total: R$", round(Z,2))
		
			elif(X > 5000):
				Z = X * d1
				print("Valor total: R$",  round(Z,2))
			else:
				print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 20:58:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
	if(Y == "C"):
		if(X <= 1000):
			Z = X * c
			print("Valor total: R$", round(Z,2))
				
		elif(X > 1000):
			Z = X * d
			print("Valor total: R$", round(Z,2))
		
		if(Y == "I"):
			if(X <= 5000):
				Z = X * c1
				print("Valor total: R$", round(Z,2))
		
			elif(X > 5000):
				Z = X * d1
				print("Valor total: R$",  round(Z,2))
			else:
				print("Dados invalidos")
				
-- EXECUTION TIME:
0.240507
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 20:58:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
	if(Y == "C"):
		if(X <= 1000):
			Z = X * c
			print("Valor total: R$", round(Z,2))
				
		elif(X > 1000):
			Z = X * d
			print("Valor total: R$", round(Z,2))
		
		if(Y == "I"):
			if(X <= 5000):
				Z = X * c1
				print("Valor total: R$", round(Z,2))
		
			elif(X > 5000):
				Z = X * d1
				print("Valor total: R$",  round(Z,2))
			else:
				print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 20:58:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
	if(Y == "C"):
		if(X <= 1000):
			Z = X * c
			print("Valor total: R$", round(Z,2))
				
		elif(X > 1000):
			Z = X * d
			print("Valor total: R$", round(Z,2))
		
		if(Y == "I"):
			if(X <= 5000):
				Z = X * c1
				print("Valor total: R$", round(Z,2))
		
			elif(X > 5000):
				Z = X * d1
				print("Valor total: R$",  round(Z,2))
			else:
				print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 20:58:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
	if(Y == "C"):
		if(X <= 1000):
			Z = X * c
			print("Valor total: R$", round(Z,2))
				
		elif(X > 1000):
			Z = X * d
			print("Valor total: R$", round(Z,2))
		
		if(Y == "I"):
			if(X <= 5000):
				Z = X * c1
				print("Valor total: R$", round(Z,2))
		
			elif(X > 5000):
				Z = X * d1
				print("Valor total: R$",  round(Z,2))
			else:
				print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 20:59:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
	if(Y == "C"):
		if(X <= 1000):
			Z = X * c
			print("Valor total: R$", round(Z,2))
				
		elif(X > 1000):
			Z = X * d
			print("Valor total: R$", round(Z,2))
		
		if(Y == "I"):
			if(X <= 5000):
				Z = X * c1
				print("Valor total: R$", round(Z,2))
		
			elif(X > 5000):
				Z = X * d1
				print("Valor total: R$",  round(Z,2))
			else:
				print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 20:59:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
	if(Y == "C"):
		if(X <= 1000):
			Z = X * c
			print("Valor total: R$", round(Z,2))
				
		elif(X > 1000):
			Z = X * d
			print("Valor total: R$", round(Z,2))
		
		if(Y == "I"):
			if(X <= 5000):
				Z = X * c1
				print("Valor total: R$", round(Z,2))
		
			elif(X > 5000):
				Z = X * d1
				print("Valor total: R$",  round(Z,2))
		else:
			print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 20:59:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
	if(Y == "C"):
		if(X <= 1000):
			Z = X * c
			print("Valor total: R$", round(Z,2))
				
		elif(X > 1000):
			Z = X * d
			print("Valor total: R$", round(Z,2))
		
		if(Y == "I"):
			if(X <= 5000):
				Z = X * c1
				print("Valor total: R$", round(Z,2))
		
			elif(X > 5000):
				Z = X * d1
				print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 20:59:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
	if(Y == "C"):
		if(X <= 1000):
			Z = X * c
			print("Valor total: R$", round(Z,2))
				
		elif(X > 1000):
			Z = X * d
			print("Valor total: R$", round(Z,2))
		
		if(Y == "I"):
			if(X <= 5000):
				Z = X * c1
				print("Valor total: R$", round(Z,2))
		
			elif(X > 5000):
				Z = X * d1
				print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- EXECUTION TIME:
0.199071
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R$ 621.08
Dados invalidos
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:00:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
	if(Y == "C"):
		if(X <= 1000):
			Z = X * c
			print("Valor total: R$", round(Z,2))
				
		elif(X > 1000):
			Z = X * d
			print("Valor total: R$", round(Z,2))
		
		if(Y == "I"):
			if(X <= 5000):
				Z = X * c1
				print("Valor total: R$", round(Z,2))
		
			elif(X > 5000):
				Z = X * d1
				print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:01:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
		elif(X > 500):
			Z = X * b
			print("Valor total: R$", round(Z,2))
		
		if(Y == "C"):
			if(X <= 1000):
				Z = X * c
				print("Valor total: R$", round(Z,2))
				
			elif(X > 1000):
				Z = X * d
				print("Valor total: R$", round(Z,2))
		
			if(Y == "I"):
				if(X <= 5000):
					Z = X * c1
					print("Valor total: R$", round(Z,2))
		
				elif(X > 5000):
					Z = X * d1
					print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 19
    elif(X > 500):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:01:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
			elif(X > 500):
				Z = X * b
				print("Valor total: R$", round(Z,2))
		
		if(Y == "C"):
			if(X <= 1000):
				Z = X * c
				print("Valor total: R$", round(Z,2))
				
			elif(X > 1000):
				Z = X * d
				print("Valor total: R$", round(Z,2))
		
			if(Y == "I"):
				if(X <= 5000):
					Z = X * c1
					print("Valor total: R$", round(Z,2))
		
				elif(X > 5000):
					Z = X * d1
					print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 19
    elif(X > 500):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:02:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
		elif(X > 500):
				Z = X * b
				print("Valor total: R$", round(Z,2))
		
		if(Y == "C"):
			if(X <= 1000):
				Z = X * c
				print("Valor total: R$", round(Z,2))
				
			elif(X > 1000):
				Z = X * d
				print("Valor total: R$", round(Z,2))
		
			if(Y == "I"):
				if(X <= 5000):
					Z = X * c1
					print("Valor total: R$", round(Z,2))
		
				elif(X > 5000):
					Z = X * d1
					print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 19
    elif(X > 500):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:02:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
		elif(X > 500):
				Z = X * b
				print("Valor total: R$", round(Z,2))
		
		if(Y == "C"):
			if(X <= 1000):
				Z = X * c
				print("Valor total: R$", round(Z,2))
				
			elif(X > 1000):
				Z = X * d
				print("Valor total: R$", round(Z,2))
		
			if(Y == "I"):
				if(X <= 5000):
					Z = X * c1
					print("Valor total: R$", round(Z,2))
		
				elif(X > 5000):
					Z = X * d1
					print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 19
    elif(X > 500):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:02:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
		elif(X > 500):
				Z = X * b
				print("Valor total: R$", round(Z,2))
		
		if(Y == "C"):
			if(X <= 1000):
				Z = X * c
				print("Valor total: R$", round(Z,2))
				
			elif(X > 1000):
				Z = X * d
				print("Valor total: R$", round(Z,2))
		
			if(Y == "I"):
				if(X <= 5000):
					Z = X * c1
					print("Valor total: R$", round(Z,2))
		
				elif(X > 5000):
					Z = X * d1
					print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 19
    elif(X > 500):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:02:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
			Z = X * b
			print("Valor total: R$", round(Z,2))
		
		if(Y == "C"):
			if(X <= 1000):
				Z = X * c
				print("Valor total: R$", round(Z,2))
				
			elif(X > 1000):
				Z = X * d
				print("Valor total: R$", round(Z,2))
		
			if(Y == "I"):
				if(X <= 5000):
					Z = X * c1
					print("Valor total: R$", round(Z,2))
		
				elif(X > 5000):
					Z = X * d1
					print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 23
    if(Y == "C"):
                ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:02:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
			Z = X * b
			print("Valor total: R$", round(Z,2))
		
		if(Y == "C"):
			if(X <= 1000):
				Z = X * c
				print("Valor total: R$", round(Z,2))
				
			elif(X > 1000):
				Z = X * d
				print("Valor total: R$", round(Z,2))
		
			if(Y == "I"):
				if(X <= 5000):
					Z = X * c1
					print("Valor total: R$", round(Z,2))
		
				elif(X > 5000):
					Z = X * d1
					print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 23
    if(Y == "C"):
                ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:02:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
			Z = X * b
			print("Valor total: R$", round(Z,2))
		
		if(Y == "C"):
			if(X <= 1000):
				Z = X * c
				print("Valor total: R$", round(Z,2))
				
			elif(X > 1000):
				Z = X * d
				print("Valor total: R$", round(Z,2))
		
			if(Y == "I"):
				if(X <= 5000):
					Z = X * c1
					print("Valor total: R$", round(Z,2))
		
				elif(X > 5000):
					Z = X * d1
					print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 23
    if(Y == "C"):
                ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:02:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
		if(Y == "C"):
			if(X <= 1000):
				Z = X * c
				print("Valor total: R$", round(Z,2))
				
			elif(X > 1000):
				Z = X * d
				print("Valor total: R$", round(Z,2))
		
			if(Y == "I"):
				if(X <= 5000):
					Z = X * c1
					print("Valor total: R$", round(Z,2))
		
				elif(X > 5000):
					Z = X * d1
					print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:03:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
		if(Y == "C"):
			if(X <= 1000):
				Z = X * c
				print("Valor total: R$", round(Z,2))
				
			elif(X > 1000):
				Z = X * d
				print("Valor total: R$", round(Z,2))
		
			if(Y == "I"):
				if(X <= 5000):
					Z = X * c1
					print("Valor total: R$", round(Z,2))
		
				elif(X > 5000):
					Z = X * d1
					print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:03:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
		if(Y == "C"):
			if(X <= 1000):
				Z = X * c
				print("Valor total: R$", round(Z,2))
				
			elif(X > 1000):
				Z = X * d
				print("Valor total: R$", round(Z,2))
		
			if(Y == "I"):
				if(X <= 5000):
					Z = X * c1
					print("Valor total: R$", round(Z,2))
		
				elif(X > 5000):
					Z = X * d1
					print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:03:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
		if(Y == "C"):
			if(X <= 1000):
				Z = X * c
				print("Valor total: R$", round(Z,2))
				
			elif(X > 1000):
				Z = X * d
				print("Valor total: R$", round(Z,2))
		
			if(Y == "I"):
				if(X <= 5000):
					Z = X * c1
					print("Valor total: R$", round(Z,2))
		
				elif(X > 5000):
					Z = X * d1
					print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:03:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
		if(Y == "C"):
			if(X <= 1000):
				Z = X * c
				print("Valor total: R$", round(Z,2))
				
			elif(X > 1000):
				Z = X * d
				print("Valor total: R$", round(Z,2))
		
			if(Y == "I"):
				if(X <= 5000):
					Z = X * c1
					print("Valor total: R$", round(Z,2))
		
				elif(X > 5000):
					Z = X * d1
					print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:03:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
		if(Y == "C"):
			if(X <= 1000):
				Z = X * c
				print("Valor total: R$", round(Z,2))
				
			elif(X > 1000):
				Z = X * d
				print("Valor total: R$", round(Z,2))
		
			if(Y == "I"):
				if(X <= 5000):
					Z = X * c1
					print("Valor total: R$", round(Z,2))
		
				elif(X > 5000):
					Z = X * d1
					print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:04:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
		if(Y == "C"):
				if(X <= 1000):
					Z = X * c
					print("Valor total: R$", round(Z,2))
				
				elif(X > 1000):
				Z = X * d
				print("Valor total: R$", round(Z,2))
		
			if(Y == "I"):
				if(X <= 5000):
					Z = X * c1
					print("Valor total: R$", round(Z,2))
		
				elif(X > 5000):
					Z = X * d1
					print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 29
    Z = X * d
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:04:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
		if(Y == "C"):
				if(X <= 1000):
						Z = X * c
						print("Valor total: R$", round(Z,2))
				
				elif(X > 1000):
				Z = X * d
				print("Valor total: R$", round(Z,2))
		
			if(Y == "I"):
				if(X <= 5000):
					Z = X * c1
					print("Valor total: R$", round(Z,2))
		
				elif(X > 5000):
					Z = X * d1
					print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 29
    Z = X * d
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:04:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
		if(Y == "C"):
				if(X <= 1000):
					Z = X * c
					print("Valor total: R$", round(Z,2))
				
				elif(X > 1000):
					Z = X * d
					print("Valor total: R$", round(Z,2))
		
			if(Y == "I"):
				if(X <= 5000):
					Z = X * c1
					print("Valor total: R$", round(Z,2))
		
				elif(X > 5000):
					Z = X * d1
					print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 32
    if(Y == "I"):
                ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:05:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
		if(Y == "C"):
				if(X <= 1000):
					Z = X * c
					print("Valor total: R$", round(Z,2))
				
				elif(X > 1000):
					Z = X * d
					print("Valor total: R$", round(Z,2))
		
					if(Y == "I"):
						if(X <= 5000):
							Z = X * c1
							print("Valor total: R$", round(Z,2))
		
					elif(X > 5000):
							Z = X * d1
							print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:05:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
		if(Y == "C"):
				if(X <= 1000):
					Z = X * c
					print("Valor total: R$", round(Z,2))
				
				elif(X > 1000):
					Z = X * d
					print("Valor total: R$", round(Z,2))
		
					if(Y == "I"):
						if(X <= 5000):
							Z = X * c1
							print("Valor total: R$", round(Z,2))
		
					elif(X > 5000):
							Z = X * d1
							print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:05:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
		if(Y == "C"):
				if(X <= 1000):
					Z = X * c
					print("Valor total: R$", round(Z,2))
				
				elif(X > 1000):
					Z = X * d
					print("Valor total: R$", round(Z,2))
		
					if(Y == "I"):
						if(X <= 5000):
							Z = X * c1
							print("Valor total: R$", round(Z,2))
		
					elif(X > 5000):
							Z = X * d1
							print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:05:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
			if(Y == "C"):
				if(X <= 1000):
					Z = X * c
					print("Valor total: R$", round(Z,2))
				
				elif(X > 1000):
					Z = X * d
					print("Valor total: R$", round(Z,2))
		
					if(Y == "I"):
						if(X <= 5000):
							Z = X * c1
							print("Valor total: R$", round(Z,2))
		
					elif(X > 5000):
							Z = X * d1
							print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 23
    if(Y == "C"):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:06:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
			if(Y == "C"):
					if(X <= 1000):
						Z = X * c
						print("Valor total: R$", round(Z,2))
				
				elif(X > 1000):
					Z = X * d
					print("Valor total: R$", round(Z,2))
		
					if(Y == "I"):
						if(X <= 5000):
							Z = X * c1
							print("Valor total: R$", round(Z,2))
		
					elif(X > 5000):
							Z = X * d1
							print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 23
    if(Y == "C"):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:06:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
		if(Y == "C"):
					if(X <= 1000):
						Z = X * c
						print("Valor total: R$", round(Z,2))
				
				elif(X > 1000):
					Z = X * d
					print("Valor total: R$", round(Z,2))
		
					if(Y == "I"):
						if(X <= 5000):
							Z = X * c1
							print("Valor total: R$", round(Z,2))
		
					elif(X > 5000):
							Z = X * d1
							print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 28
    elif(X > 1000):
                  ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:06:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
	if(Y == "C"):
					if(X <= 1000):
						Z = X * c
						print("Valor total: R$", round(Z,2))
				
				elif(X > 1000):
					Z = X * d
					print("Valor total: R$", round(Z,2))
		
					if(Y == "I"):
						if(X <= 5000):
							Z = X * c1
							print("Valor total: R$", round(Z,2))
		
					elif(X > 5000):
							Z = X * d1
							print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 28
    elif(X > 1000):
                  ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:07:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
		if(Y == "C"):
			if(X <= 1000):
				Z = X * c
				print("Valor total: R$", round(Z,2))
				
				elif(X > 1000):
					Z = X * d
					print("Valor total: R$", round(Z,2))
		
					if(Y == "I"):
						if(X <= 5000):
							Z = X * c1
							print("Valor total: R$", round(Z,2))
		
					elif(X > 5000):
							Z = X * d1
							print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 28
    elif(X > 1000):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:07:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
		if(Y == "C"):
			if(X <= 1000):
				Z = X * c
				print("Valor total: R$", round(Z,2))
				
			elif(X > 1000):
					Z = X * d
					print("Valor total: R$", round(Z,2))
		
					if(Y == "I"):
						if(X <= 5000):
							Z = X * c1
							print("Valor total: R$", round(Z,2))
		
					elif(X > 5000):
							Z = X * d1
							print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:07:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
		if(Y == "C"):
				if(X <= 1000):
					Z = X * c
					print("Valor total: R$", round(Z,2))
				
			elif(X > 1000):
					Z = X * d
					print("Valor total: R$", round(Z,2))
		
					if(Y == "I"):
						if(X <= 5000):
							Z = X * c1
							print("Valor total: R$", round(Z,2))
		
					elif(X > 5000):
							Z = X * d1
							print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 28
    elif(X > 1000):
                  ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:08:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
		if(Y == "C"):
				if(X <= 1000):
					Z = X * c
					print("Valor total: R$", round(Z,2))
				
				elif(X > 1000):
					Z = X * d
					print("Valor total: R$", round(Z,2))
		
					if(Y == "I"):
						if(X <= 5000):
							Z = X * c1
							print("Valor total: R$", round(Z,2))
		
					elif(X > 5000):
							Z = X * d1
							print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:08:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
		if(Y == "C"):
			if(X <= 1000):
				Z = X * c
				print("Valor total: R$", round(Z,2))
				
			elif(X > 1000):
				Z = X * d
				print("Valor total: R$", round(Z,2))
		
					if(Y == "I"):
						if(X <= 5000):
							Z = X * c1
							print("Valor total: R$", round(Z,2))
		
					elif(X > 5000):
							Z = X * d1
							print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 32
    if(Y == "I"):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:08:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
		if(Y == "C"):
			if(X <= 1000):
				Z = X * c
				print("Valor total: R$", round(Z,2))
				
			elif(X > 1000):
				Z = X * d
				print("Valor total: R$", round(Z,2))
		
				if(Y == "I"):
					if(X <= 5000):
							Z = X * c1
							print("Valor total: R$", round(Z,2))
		
					elif(X > 5000):
							Z = X * d1
							print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:08:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
		if(Y == "C"):
			if(X <= 1000):
				Z = X * c
				print("Valor total: R$", round(Z,2))
				
			elif(X > 1000):
				Z = X * d
				print("Valor total: R$", round(Z,2))
		
				if(Y == "I"):
					if(X <= 5000):
							Z = X * c1
							print("Valor total: R$", round(Z,2))
		
					elif(X > 5000):
							Z = X * d1
							print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:10:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
	if(Y == "C"):
		if(X <= 1000):
			Z = X * c
			print("Valor total: R$", round(Z,2))
				
		elif(X > 1000):
			Z = X * d
			print("Valor total: R$", round(Z,2))
		
		if(Y == "I"):
			if(X <= 5000):
				Z = X * c1
				print("Valor total: R$", round(Z,2))
		
			elif(X > 5000):
				Z = X * d1
				print("Valor total: R$",  round(Z,2))
			else:
				print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:11:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
	if(Y == "C"):
		if(X <= 1000):
			Z = X * c
			print("Valor total: R$", round(Z,2))
				
		elif(X > 1000):
			Z = X * d
			print("Valor total: R$", round(Z,2))
		
		if(Y == "I"):
			if(X <= 5000):
				Z = X * c1
				print("Valor total: R$", round(Z,2))
		
			elif(X > 5000):
				Z = X * d1
				print("Valor total: R$",  round(Z,2))
			else:
				print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:12:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y == "C"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
		
if(Y == "I"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
		
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
			else:
				print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 40
    else:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:12:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y == "C"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
		
if(Y == "I"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
		
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
	else:
			print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:12:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y == "C"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
		
if(Y == "I"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
		
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
	else:
			print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:12:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y == "C"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
		
if(Y == "I"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
		
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
	else:
			print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:13:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y == "C"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
		
if(Y == "I"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
		
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
	else:
			print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:14:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
	if(Y == "C"):
		if(X <= 1000):
			Z = X * c
			print("Valor total: R$", round(Z,2))
				
		elif(X > 1000):
			Z = X * d
			print("Valor total: R$", round(Z,2))
		
		if(Y == "I"):
			if(X <= 5000):
			Z = X * c1
			print("Valor total: R$", round(Z,2))
		
			elif(X > 5000):
			Z = X * d1
			print("Valor total: R$",  round(Z,2))
else:
		print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 34
    Z = X * c1
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:14:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
	if(Y == "C"):
		if(X <= 1000):
			Z = X * c
			print("Valor total: R$", round(Z,2))
				
		elif(X > 1000):
			Z = X * d
			print("Valor total: R$", round(Z,2))
		
		if(Y == "I"):
			if(X <= 5000):
				Z = X * c1
				print("Valor total: R$", round(Z,2))
		
				elif(X > 5000):
				Z = X * d1
				print("Valor total: R$",  round(Z,2))
else:
		print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 37
    elif(X > 5000):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:15:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
	if(Y == "C"):
		if(X <= 1000):
			Z = X * c
			print("Valor total: R$", round(Z,2))
				
		elif(X > 1000):
			Z = X * d
			print("Valor total: R$", round(Z,2))
		
		if(Y == "I"):
			if(X <= 5000):
				Z = X * c1
				print("Valor total: R$", round(Z,2))
		
				elif(X > 5000):
				Z = X * d1
				print("Valor total: R$",  round(Z,2))
else:
		print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 37
    elif(X > 5000):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:15:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
	if(Y == "C"):
		if(X <= 1000):
			Z = X * c
			print("Valor total: R$", round(Z,2))
				
		elif(X > 1000):
			Z = X * d
			print("Valor total: R$", round(Z,2))
		
		if(Y == "I"):
			if(X <= 5000):
				Z = X * c1
				print("Valor total: R$", round(Z,2))
		
				elif(X > 5000):
					Z = X * d1
					print("Valor total: R$",  round(Z,2))
else:
		print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 37
    elif(X > 5000):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:15:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
	if(Y == "C"):
		if(X <= 1000):
			Z = X * c
			print("Valor total: R$", round(Z,2))
				
		elif(X > 1000):
			Z = X * d
			print("Valor total: R$", round(Z,2))
		
		if(Y == "I"):
			if(X <= 5000):
				Z = X * c1
				print("Valor total: R$", round(Z,2))
		
			elif(X > 5000):
				Z = X * d1
				print("Valor total: R$",  round(Z,2))
else:
		print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:15:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
	if(Y == "C"):
		if(X <= 1000):
			Z = X * c
			print("Valor total: R$", round(Z,2))
				
		elif(X > 1000):
			Z = X * d
			print("Valor total: R$", round(Z,2))
		
		if(Y == "I"):
			if(X <= 5000):
				Z = X * c1
				print("Valor total: R$", round(Z,2))
		
			elif(X > 5000):
				Z = X * d1
				print("Valor total: R$",  round(Z,2))
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:17:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R" or Y == "C" or Y == "I"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
	if(Y == "C"):
		if(X <= 1000):
			Z = X * c
			print("Valor total: R$", round(Z,2))
				
		elif(X > 1000):
			Z = X * d
			print("Valor total: R$", round(Z,2))
		
		if(Y == "I"):
			if(X <= 5000):
				Z = X * c1
				print("Valor total: R$", round(Z,2))
		
			elif(X > 5000):
				Z = X * d1
				print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:17:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R" or Y == "C" or Y == "I"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
	if(Y == "C"):
		if(X <= 1000):
			Z = X * c
			print("Valor total: R$", round(Z,2))
				
		elif(X > 1000):
			Z = X * d
			print("Valor total: R$", round(Z,2))
		
		if(Y == "I"):
			if(X <= 5000):
				Z = X * c1
				print("Valor total: R$", round(Z,2))
		
			elif(X > 5000):
				Z = X * d1
				print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:18:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R" or Y == "C" or Y == "I"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
	if(Y == "C"):
		if(X <= 1000):
			Z = X * c
			print("Valor total: R$", round(Z,2))
				
		elif(X > 1000):
			Z = X * d
			print("Valor total: R$", round(Z,2))
		
		if(Y == "I"):
			if(X <= 5000):
				Z = X * c1
				print("Valor total: R$", round(Z,2))
		
			elif(X > 5000):
				Z = X * d1
				print("Valor total: R$",  round(Z,2))
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:19:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R" or Y == "C" or Y == "I"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
		if(Y == "C"):
			if(X <= 1000):
				Z = X * c
				print("Valor total: R$", round(Z,2))
				
			elif(X > 1000):
				Z = X * d
				print("Valor total: R$", round(Z,2))
		
				if(Y == "I"):
					if(X <= 5000):
						Z = X * c1
						print("Valor total: R$", round(Z,2))
		
					elif(X > 5000):
						Z = X * d1
						print("Valor total: R$",  round(Z,2))
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:20:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
		if(Y == "C"):
			if(X <= 1000):
				Z = X * c
				print("Valor total: R$", round(Z,2))
				
			elif(X > 1000):
				Z = X * d
				print("Valor total: R$", round(Z,2))
		
				if(Y == "I"):
					if(X <= 5000):
						Z = X * c1
						print("Valor total: R$", round(Z,2))
		
					elif(X > 5000):
						Z = X * d1
						print("Valor total: R$",  round(Z,2))
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:20:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
		if(Y == "C"):
			if(X <= 1000):
				Z = X * c
				print("Valor total: R$", round(Z,2))
				
			elif(X > 1000):
				Z = X * d
				print("Valor total: R$", round(Z,2))
		
				if(Y == "I"):
					if(X <= 5000):
						Z = X * c1
						print("Valor total: R$", round(Z,2))
		
					elif(X > 5000):
						Z = X * d1
						print("Valor total: R$",  round(Z,2))
					else:
					print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 41
    print("Dados invalidos")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:20:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
		if(Y == "C"):
			if(X <= 1000):
				Z = X * c
				print("Valor total: R$", round(Z,2))
				
			elif(X > 1000):
				Z = X * d
				print("Valor total: R$", round(Z,2))
		
				if(Y == "I"):
					if(X <= 5000):
						Z = X * c1
						print("Valor total: R$", round(Z,2))
		
					elif(X > 5000):
						Z = X * d1
						print("Valor total: R$",  round(Z,2))
					else:
							print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:21:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
		if(Y == "C"):
			if(X <= 1000):
				Z = X * c
				print("Valor total: R$", round(Z,2))
				
			elif(X > 1000):
				Z = X * d
				print("Valor total: R$", round(Z,2))
		
				if(Y == "I"):
					if(X <= 5000):
						Z = X * c1
						print("Valor total: R$", round(Z,2))
		
					elif(X > 5000):
						Z = X * d1
						print("Valor total: R$",  round(Z,2))
					else:
							print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:21:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
		if(Y == "C"):
			if(X <= 1000):
				Z = X * c
				print("Valor total: R$", round(Z,2))
				
			elif(X > 1000):
				Z = X * d
				print("Valor total: R$", round(Z,2))
		
				if(Y == "I"):
					if(X <= 5000):
						Z = X * c1
						print("Valor total: R$", round(Z,2))
		
					elif(X > 5000):
						Z = X * d1
						print("Valor total: R$",  round(Z,2))
					else:
							print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:22:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
			if(Y == "C"):
				if(X <= 1000):
					Z = X * c
					print("Valor total: R$", round(Z,2))
				
				elif(X > 1000):
					Z = X * d
					print("Valor total: R$", round(Z,2))
		
						if(Y == "I"):
							if(X <= 5000):
								Z = X * c1
								print("Valor total: R$", round(Z,2))
		
							elif(X > 5000):
								Z = X * d1
								print("Valor total: R$",  round(Z,2))
								else:
										print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 23
    if(Y == "C"):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:22:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
		if(Y == "C"):
				if(X <= 1000):
					Z = X * c
					print("Valor total: R$", round(Z,2))
				
				elif(X > 1000):
					Z = X * d
					print("Valor total: R$", round(Z,2))
		
						if(Y == "I"):
							if(X <= 5000):
								Z = X * c1
								print("Valor total: R$", round(Z,2))
		
							elif(X > 5000):
								Z = X * d1
								print("Valor total: R$",  round(Z,2))
								else:
										print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 32
    if(Y == "I"):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:22:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
		if(Y == "C"):
				if(X <= 1000):
					Z = X * c
					print("Valor total: R$", round(Z,2))
				
				elif(X > 1000):
					Z = X * d
					print("Valor total: R$", round(Z,2))
		
					if(Y == "I"):
							if(X <= 5000):
								Z = X * c1
								print("Valor total: R$", round(Z,2))
		
							elif(X > 5000):
								Z = X * d1
								print("Valor total: R$",  round(Z,2))
								else:
										print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 40
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:23:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
		if(Y == "C"):
				if(X <= 1000):
					Z = X * c
					print("Valor total: R$", round(Z,2))
				
				elif(X > 1000):
					Z = X * d
					print("Valor total: R$", round(Z,2))
		
					if(Y == "I"):
							if(X <= 5000):
								Z = X * c1
								print("Valor total: R$", round(Z,2))
		
							elif(X > 5000):
								Z = X * d1
								print("Valor total: R$",  round(Z,2))
					else:
							print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:24:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
	if(Y == "C"):
			if(X <= 1000):
				Z = X * c
				print("Valor total: R$", round(Z,2))
				
			elif(X > 1000):
				Z = X * d
				print("Valor total: R$", round(Z,2))
		
	if(Y == "I"):
		if(X <= 5000):
				Z = X * c1
				print("Valor total: R$", round(Z,2))
		
		elif(X > 5000):
				Z = X * d1
			   print("Valor total: R$",  round(Z,2))
					else:
							print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 39
    print("Valor total: R$",  round(Z,2))
                                        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:24:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
	if(Y == "C"):
			if(X <= 1000):
				Z = X * c
				print("Valor total: R$", round(Z,2))
				
			elif(X > 1000):
				Z = X * d
				print("Valor total: R$", round(Z,2))
		
	if(Y == "I"):
		if(X <= 5000):
				Z = X * c1
				print("Valor total: R$", round(Z,2))
		
		elif(X > 5000):
				Z = X * d1
			   	print("Valor total: R$",  round(Z,2))
					else:
							print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 39
    print("Valor total: R$",  round(Z,2))
                                        ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:25:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
	if(Y == "C"):
			if(X <= 1000):
				Z = X * c
				print("Valor total: R$", round(Z,2))
				
			elif(X > 1000):
				Z = X * d
				print("Valor total: R$", round(Z,2))
		
	if(Y == "I"):
		if(X <= 5000):
				Z = X * c1
				print("Valor total: R$", round(Z,2))
		
		elif(X > 5000):
				Z = X * d1
				print("Valor total: R$",  round(Z,2))
					else:
							print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 40
    else:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:25:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
	if(Y == "C"):
			if(X <= 1000):
				Z = X * c
				print("Valor total: R$", round(Z,2))
				
			elif(X > 1000):
				Z = X * d
				print("Valor total: R$", round(Z,2))
		
	if(Y == "I"):
		if(X <= 5000):
				Z = X * c1
				print("Valor total: R$", round(Z,2))
		
		elif(X > 5000):
				Z = X * d1
				print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:25:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
	if(Y == "C"):
			if(X <= 1000):
				Z = X * c
				print("Valor total: R$", round(Z,2))
				
			elif(X > 1000):
				Z = X * d
				print("Valor total: R$", round(Z,2))
		
	if(Y == "I"):
		if(X <= 5000):
				Z = X * c1
				print("Valor total: R$", round(Z,2))
		
		elif(X > 5000):
				Z = X * d1
				print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:27:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y == "C"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
		
if(Y == "I"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
		
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 21:27:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y == "C"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
		
if(Y == "I"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
		
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
else:
	print("Dados invalidos")
				
-- EXECUTION TIME:
0.155574
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R$ 621.08
Dados invalidos
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:28:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y == "C"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
		
if(Y == "I"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
		
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:28:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y == "C"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
		
if(Y == "I"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
		
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:28:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y == "C"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
		
if(Y == "I"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
		
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:28:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y == "C"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
		
if(Y == "I"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
		
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:28:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y == "C"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
		
if(Y == "I"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
		
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:28:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y == "C"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
		
if(Y == "I"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
		
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:28:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y == "C"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
		
if(Y == "I"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
		
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:29:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y == "C"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
		
if(Y == "I"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
		
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:30:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y == "C"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
		
if(Y == "I"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
		
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:30:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y == "C"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
		
if(Y == "I"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
		
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:34:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y =! "C" and Y =! "I"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y =! "R" and Y =! "I"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
		
if(Y =! "R" and Y =! "C"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
		
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 14
    if(Y =! "C" and Y =! "I"):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:35:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y =! "C" and Y =! "I"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y != "R" and Y != "I"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
		
if(Y != "R" and Y != "C"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
		
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 14
    if(Y =! "C" and Y =! "I"):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:35:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y =! "C" and Y =! "I"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y != "R" and Y != "I"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
		
if(Y != "R" and Y != "C"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
		
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 14
    if(Y =! "C" and Y =! "I"):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:35:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y =! "C" and Y =! "I"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y != "R" and Y != "I"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
		
if(Y != "R" and Y != "C"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
		
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 14
    if(Y =! "C" and Y =! "I"):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:35:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y =! "C" and Y =! "I"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y != "R" and Y != "I"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
		
if(Y != "R" and Y != "C"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
		
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 14
    if(Y =! "C" and Y =! "I"):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:35:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y =! "C" and Y =! "I"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y != "R" and Y != "I"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
		
if(Y != "R" and Y != "C"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
		
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- ERROR:
File "XXXX", line 14
    if(Y =! "C" and Y =! "I"):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:35:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y != "C" and Y != "I"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y != "R" and Y != "I"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
		
if(Y != "R" and Y != "C"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
		
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
	else:
		print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:36:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y != "C" and Y != "I"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y != "R" and Y != "I"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
		
if(Y != "R" and Y != "C"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
		
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:36:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y != "C" and Y != "I"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y != "R" and Y != "I"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
		
if(Y != "R" and Y != "C"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
		
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:37:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y != "C" and Y != "I"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y != "R" and Y != "I"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
		
if(Y != "R" and Y != "C"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
		
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
else:
	print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 21:38:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y == "C"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
		
if(Y == "I"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
		
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
else:
	print("Dados invalidos")
				
-- EXECUTION TIME:
0.141128
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R$ 621.08
Dados invalidos
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 21:38:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y == "C"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
		
if(Y == "I"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
		
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
else:
	print("Dados invalidos")
				
-- EXECUTION TIME:
0.11287
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.8
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 21:38:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y == "C"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
		
if(Y == "I"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
		
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
else:
	print("Dados invalidos")
				
-- EXECUTION TIME:
0.153412
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R$ 621.08
Dados invalidos
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 21:38:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y == "C"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
		
if(Y == "I"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
		
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
else:
	print("Dados invalidos")
				
-- EXECUTION TIME:
0.10515
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R$ 621.08
Dados invalidos
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 21:38:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y == "C"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
		
if(Y == "I"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
		
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
else:
	print("Dados invalidos")
				
-- EXECUTION TIME:
0.153684
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.8
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 21:38:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y == "C"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
		
if(Y == "I"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
		
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
else:
	print("Dados invalidos")
				
-- EXECUTION TIME:
0.168255
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R$ 621.08
Dados invalidos
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 21:38:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y == "C"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
		
if(Y == "I"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
		
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
else:
	print("Dados invalidos")
				
-- EXECUTION TIME:
0.316324
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.8
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 21:38:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y == "C"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
		
if(Y == "I"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
		
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
else:
	print("Dados invalidos")
				
-- EXECUTION TIME:
0.291694
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1674/1101/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 21:38:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y == "C"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
		
if(Y == "I"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
		
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
else:
	print("Dados invalidos")
				
-- EXECUTION TIME:
0.333227
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R$ 621.08
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 21:38:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y == "C"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
		
if(Y == "I"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
		
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
else:
	print("Dados invalidos")
				
-- EXECUTION TIME:
0.32158
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R$ 621.08
Dados invalidos
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 21:38:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y == "C"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
		
if(Y == "I"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
		
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
else:
	print("Dados invalidos")
				
-- EXECUTION TIME:
0.324382
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R$ 621.08
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R$ 621.08
Dados invalidos
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 21:38:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y == "C"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
		
if(Y == "I0"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
		
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
else:
	print("Dados invalidos")
				
-- EXECUTION TIME:
0.256976
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 21:38:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y == "C"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
		
if(Y == "I0"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
		
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
else:
	print("Dados invalidos")
				
-- EXECUTION TIME:
0.463228
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1674/1101/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 21:38:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
if(Y == "C"):
	if(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
		
if(Y == "I0"):
	if(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
		
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))
else:
	print("Dados invalidos")
				
-- EXECUTION TIME:
0.41401
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1674/1101/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:41:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
	if(Y == "C"):
		if(X <= 1000):
			Z = X * c
			print("Valor total: R$", round(Z,2))
				
		elif(X > 1000):
			Z = X * d
			print("Valor total: R$", round(Z,2))
		
			if(Y == "I"):
				if(X <= 5000):
					Z = X * c1
					print("Valor total: R$", round(Z,2))
		
				elif(X > 5000):
					Z = X * d1
					print("Valor total: R$",  round(Z,2))
				else:
					print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:42:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
		if(Y == "C"):
			if(X <= 1000):
				Z = X * c
				print("Valor total: R$", round(Z,2))
				
			elif(X > 1000):
				Z = X * d
				print("Valor total: R$", round(Z,2))
		
				if(Y == "I"):
					if(X <= 5000):
						Z = X * c1
						print("Valor total: R$", round(Z,2))
		
					elif(X > 5000):
						Z = X * d1
						print("Valor total: R$",  round(Z,2))
	else:
					print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:42:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y == "R"):
	if(X > 0 and X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
		if(Y == "C"):
			if(X <= 1000):
				Z = X * c
				print("Valor total: R$", round(Z,2))
				
			elif(X > 1000):
				Z = X * d
				print("Valor total: R$", round(Z,2))
		
				if(Y == "I"):
					if(X <= 5000):
						Z = X * c1
						print("Valor total: R$", round(Z,2))
		
					elif(X > 5000):
						Z = X * d1
						print("Valor total: R$",  round(Z,2))
else:
		print("Dados invalidos")
				
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:08:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y != "R" and Y == != "I" and Y != "C" or Y < 0):
	print("Dados invalidos")
	elif(X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
	elif(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
		
	elif(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
		
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))

-- ERROR:
File "XXXX", line 14
    if(Y != "R" and Y == != "I" and Y != "C" or Y < 0):
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:08:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y != "R" and Y == != "I" and Y != "C" or Y < 0):
	print("Dados invalidos")
	elif(X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
	elif(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
		
	elif(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
		
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))

-- ERROR:
File "XXXX", line 14
    if(Y != "R" and Y == != "I" and Y != "C" or Y < 0):
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:08:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y != "R" and Y != "I" and Y != "C" or Y < 0):
	print("Dados invalidos")
	elif(X <= 500):
		Z = X * a
		print("Valor total: R$", round(Z,2))
	
	elif(X > 500):
		Z = X * b
		print("Valor total: R$", round(Z,2))
		
	elif(X <= 1000):
		Z = X * c
		print("Valor total: R$", round(Z,2))
				
	elif(X > 1000):
		Z = X * d
		print("Valor total: R$", round(Z,2))
		
	elif(X <= 5000):
		Z = X * c1
		print("Valor total: R$", round(Z,2))
		
	elif(X > 5000):
		Z = X * d1
		print("Valor total: R$",  round(Z,2))

-- ERROR:
File "XXXX", line 16
    elif(X <= 500):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:09:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y != "R" and Y != "I" and Y != "C" or Y < 0):
	print("Dados invalidos")
		elif(X <= 500):
				Z = X * a
				print("Valor total: R$", round(Z,2))
	
		elif(X > 500):
				Z = X * b
				print("Valor total: R$", round(Z,2))
			
			elif(X <= 1000):
				Z = X * c
				print("Valor total: R$", round(Z,2))
				
			elif(X > 1000):
			Z = X * d
			print("Valor total: R$", round(Z,2))
		
			elif(X <= 5000):
				Z = X * c1
				print("Valor total: R$", round(Z,2))
			
			elif(X > 5000):
				Z = X * d1
				print("Valor total: R$",  round(Z,2))

-- ERROR:
File "XXXX", line 16
    elif(X <= 500):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:10:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y != "R" and Y != "I" and Y != "C" or Y < 0):
	print("Dados invalidos")
	
elif(X <= 500):
	Z = X * a
	print("Valor total: R$", round(Z,2))
	
elif(X > 500):
	Z = X * b
	print("Valor total: R$", round(Z,2))
			
elif(X <= 1000):
	Z = X * c
	print("Valor total: R$", round(Z,2))
				
elif(X > 1000):
	Z = X * d
	print("Valor total: R$", round(Z,2))
		
elif(X <= 5000):
	Z = X * c1
	print("Valor total: R$", round(Z,2))
			
elif(X > 5000):
				Z = X * d1
				print("Valor total: R$",  round(Z,2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    if(Y != "R" and Y != "I" and Y != "C" or Y < 0):
TypeError: '<' not supported between instances of 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:10:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y != "R" and Y != "I" and Y != "C" or Y < 0):
	print("Dados invalidos")
	
elif(X <= 500):
	Z = X * a
	print("Valor total: R$", round(Z,2))
	
elif(X > 500):
	Z = X * b
	print("Valor total: R$", round(Z,2))
			
elif(X <= 1000):
	Z = X * c
	print("Valor total: R$", round(Z,2))
				
elif(X > 1000):
	Z = X * d
	print("Valor total: R$", round(Z,2))
		
elif(X <= 5000):
	Z = X * c1
	print("Valor total: R$", round(Z,2))
			
elif(X > 5000):
				Z = X * d1
				print("Valor total: R$",  round(Z,2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    if(Y != "R" and Y != "I" and Y != "C" or Y < 0):
TypeError: '<' not supported between instances of 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:10:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y != "R" and Y != "I" and Y != "C" or Y < 0):
	print("Dados invalidos")
	
elif(X <= 500):
	Z = X * a
	print("Valor total: R$", round(Z,2))
	
elif(X > 500):
	Z = X * b
	print("Valor total: R$", round(Z,2))
			
elif(X <= 1000):
	Z = X * c
	print("Valor total: R$", round(Z,2))
				
elif(X > 1000):
	Z = X * d
	print("Valor total: R$", round(Z,2))
		
elif(X <= 5000):
	Z = X * c1
	print("Valor total: R$", round(Z,2))
			
elif(X > 5000):
	Z = X * d1
	print("Valor total: R$",  round(Z,2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    if(Y != "R" and Y != "I" and Y != "C" or Y < 0):
TypeError: '<' not supported between instances of 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:10:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y != "R" and Y != "I" and Y != "C" or Y < 0):
	print("Dados invalidos")
	
elif(X <= 500):
	Z = X * a
	print("Valor total: R$", round(Z,2))
	
elif(X > 500):
	Z = X * b
	print("Valor total: R$", round(Z,2))
			
elif(X <= 1000):
	Z = X * c
	print("Valor total: R$", round(Z,2))
				
elif(X > 1000):
	Z = X * d
	print("Valor total: R$", round(Z,2))
		
elif(X <= 5000):
	Z = X * c1
	print("Valor total: R$", round(Z,2))
			
elif(X > 5000):
	Z = X * d1
	print("Valor total: R$",  round(Z,2))

-- EXECUTION TIME:
0.157535
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1674/1101/main.py", line 14, in <module>
    if(Y != "R" and Y != "I" and Y != "C" or Y < 0):
TypeError: unorderable types: str() < int()

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:11:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y != "R" and Y != "I" and Y != "C" or Y < 0):
	print("Dados invalidos")
	
elif(X <= 500):
	Z = X * a
	print("Valor total: R$", round(Z,2))
	
elif(X > 500):
	Z = X * b
	print("Valor total: R$", round(Z,2))
			
elif(X <= 1000):
	Z = X * c
	print("Valor total: R$", round(Z,2))
				
elif(X > 1000):
	Z = X * d
	print("Valor total: R$", round(Z,2))
		
elif(X <= 5000):
	Z = X * c1
	print("Valor total: R$", round(Z,2))
			
elif(X > 5000):
	Z = X * d1
	print("Valor total: R$",  round(Z,2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    if(Y != "R" and Y != "I" and Y != "C" or Y < 0):
TypeError: '<' not supported between instances of 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:11:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y != "R" and Y != "I" and Y != "C" or Y < 0):
	print("Dados invalidos")
	
elif(X <= 500):
	Z = X * a
	print("Valor total: R$", round(Z,2))
	
elif(X > 500):
	Z = X * b
	print("Valor total: R$", round(Z,2))
			
elif(X <= 1000):
	Z = X * c
	print("Valor total: R$", round(Z,2))
				
elif(X > 1000):
	Z = X * d
	print("Valor total: R$", round(Z,2))
		
elif(X <= 5000):
	Z = X * c1
	print("Valor total: R$", round(Z,2))
			
elif(X > 5000):
	Z = X * d1
	print("Valor total: R$",  round(Z,2))

-- EXECUTION TIME:
0.134286
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1674/1101/main.py", line 14, in <module>
    if(Y != "R" and Y != "I" and Y != "C" or Y < 0):
TypeError: unorderable types: str() < int()

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:11:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y != "R" and Y != "I" and Y != "C" or Y < 0):
	print("Dados invalidos")
	
elif(X <= 500):
	Z = X * a
	print("Valor total: R$", round(Z,2))
	
elif(X > 500):
	Z = X * b
	print("Valor total: R$", round(Z,2))
			
elif(X <= 1000):
	Z = X * c
	print("Valor total: R$", round(Z,2))
				
elif(X > 1000):
	Z = X * d
	print("Valor total: R$", round(Z,2))
		
elif(X <= 5000):
	Z = X * c1
	print("Valor total: R$", round(Z,2))
			
elif(X > 5000):
	Z = X * d1
	print("Valor total: R$",  round(Z,2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    if(Y != "R" and Y != "I" and Y != "C" or Y < 0):
TypeError: '<' not supported between instances of 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:11:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y != "R" and Y != "I" and Y != "C" or X < 0):
	print("Dados invalidos")
	
elif(X <= 500):
	Z = X * a
	print("Valor total: R$", round(Z,2))
	
elif(X > 500):
	Z = X * b
	print("Valor total: R$", round(Z,2))
			
elif(X <= 1000):
	Z = X * c
	print("Valor total: R$", round(Z,2))
				
elif(X > 1000):
	Z = X * d
	print("Valor total: R$", round(Z,2))
		
elif(X <= 5000):
	Z = X * c1
	print("Valor total: R$", round(Z,2))
			
elif(X > 5000):
	Z = X * d1
	print("Valor total: R$",  round(Z,2))

-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:11:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y != "R" and Y != "I" and Y != "C" or X < 0):
	print("Dados invalidos")
	
elif(X <= 500):
	Z = X * a
	print("Valor total: R$", round(Z,2))
	
elif(X > 500):
	Z = X * b
	print("Valor total: R$", round(Z,2))
			
elif(X <= 1000):
	Z = X * c
	print("Valor total: R$", round(Z,2))
				
elif(X > 1000):
	Z = X * d
	print("Valor total: R$", round(Z,2))
		
elif(X <= 5000):
	Z = X * c1
	print("Valor total: R$", round(Z,2))
			
elif(X > 5000):
	Z = X * d1
	print("Valor total: R$",  round(Z,2))

-- EXECUTION TIME:
0.166859
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:13:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y != "R" and Y != "I" and Y != "C" or X < 0):
	print("Dados invalidos")
	
elif(X <= 500 and Y == "R"):
	Z = X * a
	print("Valor total: R$", round(Z,2))
	
elif(X > 500 and Y == "R"):
	Z = X * b
	print("Valor total: R$", round(Z,2))
			
elif(X <= 1000 and Y == "C"):
	Z = X * c
	print("Valor total: R$", round(Z,2))
				
elif(X > 1000 and Y == "C"):
	Z = X * d
	print("Valor total: R$", round(Z,2))
		
elif(X <= 5000 and Y == "I"):
	Z = X * c1
	print("Valor total: R$", round(Z,2))
			
elif(X > 5000 and Y == "I"):
	Z = X * d1
	print("Valor total: R$",  round(Z,2))

-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:13:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y != "R" and Y != "I" and Y != "C" or X < 0):
	print("Dados invalidos")
	
elif(X <= 500 and Y == "R"):
	Z = X * a
	print("Valor total: R$", round(Z,2))
	
elif(X > 500 and Y == "R"):
	Z = X * b
	print("Valor total: R$", round(Z,2))
			
elif(X <= 1000 and Y == "C"):
	Z = X * c
	print("Valor total: R$", round(Z,2))
				
elif(X > 1000 and Y == "C"):
	Z = X * d
	print("Valor total: R$", round(Z,2))
		
elif(X <= 5000 and Y == "I"):
	Z = X * c1
	print("Valor total: R$", round(Z,2))
			
elif(X > 5000 and Y == "I"):
	Z = X * d1
	print("Valor total: R$",  round(Z,2))

-- EXECUTION TIME:
0.159809
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:13:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y != "R" and Y != "I" and Y != "C" or X < 0):
	print("Dados invalidos")
	
elif(X <= 500 and Y == "R"):
	Z = X * a
	print("Valor total: R$", round(Z,2))
	
elif(X > 500 and Y == "R"):
	Z = X * b
	print("Valor total: R$", round(Z,2))
			
elif(X <= 1000 and Y == "C"):
	Z = X * c
	print("Valor total: R$", round(Z,2))
				
elif(X > 1000 and Y == "C"):
	Z = X * d
	print("Valor total: R$", round(Z,2))
		
elif(X <= 5000 and Y == "I"):
	Z = X * c1
	print("Valor total: R$", round(Z,2))
			
elif(X > 5000 and Y == "I"):
	Z = X * d1
	print("Valor total: R$",  round(Z,2))

-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:13:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y != "R" and Y != "I" and Y != "C" or X < 0):
	print("Dados invalidos")
	
elif(X <= 500 and Y == "R"):
	Z = X * a
	print("Valor total: R$", round(Z,2))
	
elif(X > 500 and Y == "R"):
	Z = X * b
	print("Valor total: R$", round(Z,2))
			
elif(X <= 1000 and Y == "C"):
	Z = X * c
	print("Valor total: R$", round(Z,2))
				
elif(X > 1000 and Y == "C"):
	Z = X * d
	print("Valor total: R$", round(Z,2))
		
elif(X <= 5000 and Y == "I"):
	Z = X * c1
	print("Valor total: R$", round(Z,2))
			
elif(X > 5000 and Y == "I"):
	Z = X * d1
	print("Valor total: R$",  round(Z,2))

-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:13:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y != "R" and Y != "I" and Y != "C" or X < 0):
	print("Dados invalidos")
	
elif(X <= 500 and Y == "R"):
	Z = X * a
	print("Valor total: R$", round(Z,2))
	
elif(X > 500 and Y == "R"):
	Z = X * b
	print("Valor total: R$", round(Z,2))
			
elif(X <= 1000 and Y == "C"):
	Z = X * c
	print("Valor total: R$", round(Z,2))
				
elif(X > 1000 and Y == "C"):
	Z = X * d
	print("Valor total: R$", round(Z,2))
		
elif(X <= 5000 and Y == "I"):
	Z = X * c1
	print("Valor total: R$", round(Z,2))
			
elif(X > 5000 and Y == "I"):
	Z = X * d1
	print("Valor total: R$",  round(Z,2))

-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:13:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y != "R" and Y != "I" and Y != "C" or X < 0):
	print("Dados invalidos")
	
elif(X <= 500 and Y == "R"):
	Z = X * a
	print("Valor total: R$", round(Z,2))
	
elif(X > 500 and Y == "R"):
	Z = X * b
	print("Valor total: R$", round(Z,2))
			
elif(X <= 1000 and Y == "C"):
	Z = X * c
	print("Valor total: R$", round(Z,2))
				
elif(X > 1000 and Y == "C"):
	Z = X * d
	print("Valor total: R$", round(Z,2))
		
elif(X <= 5000 and Y == "I"):
	Z = X * c1
	print("Valor total: R$", round(Z,2))
			
elif(X > 5000 and Y == "I"):
	Z = X * d1
	print("Valor total: R$",  round(Z,2))

-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:14:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y != "R" and Y != "I" and Y != "C" or X > 0):
	print("Dados invalidos")
	
elif(X <= 500 and Y == "R"):
	Z = X * a
	print("Valor total: R$", round(Z,2))
	
elif(X > 500 and Y == "R"):
	Z = X * b
	print("Valor total: R$", round(Z,2))
			
elif(X <= 1000 and Y == "C"):
	Z = X * c
	print("Valor total: R$", round(Z,2))
				
elif(X > 1000 and Y == "C"):
	Z = X * d
	print("Valor total: R$", round(Z,2))
		
elif(X <= 5000 and Y == "I"):
	Z = X * c1
	print("Valor total: R$", round(Z,2))
			
elif(X > 5000 and Y == "I"):
	Z = X * d1
	print("Valor total: R$",  round(Z,2))

-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:14:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if(Y != "R" and Y != "I" and Y != "C" or X < 0):
	print("Dados invalidos")
	
elif(X <= 500 and Y == "R"):
	Z = X * a
	print("Valor total: R$", round(Z,2))
	
elif(X > 500 and Y == "R"):
	Z = X * b
	print("Valor total: R$", round(Z,2))
			
elif(X <= 1000 and Y == "C"):
	Z = X * c
	print("Valor total: R$", round(Z,2))
				
elif(X > 1000 and Y == "C"):
	Z = X * d
	print("Valor total: R$", round(Z,2))
		
elif(X <= 5000 and Y == "I"):
	Z = X * c1
	print("Valor total: R$", round(Z,2))
			
elif(X > 5000 and Y == "I"):
	Z = X * d1
	print("Valor total: R$",  round(Z,2))

-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:16:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if((Y != "R") and (Y != "I") and (Y != "C") or (X < 0)):
	print("Dados invalidos")
	
elif(X <= 500 and Y == "R"):
	Z = X * a
	print("Valor total: R$", round(Z,2))
	
elif(X > 500 and Y == "R"):
	Z = X * b
	print("Valor total: R$", round(Z,2))
			
elif(X <= 1000 and Y == "C"):
	Z = X * c
	print("Valor total: R$", round(Z,2))
				
elif(X > 1000 and Y == "C"):
	Z = X * d
	print("Valor total: R$", round(Z,2))
		
elif(X <= 5000 and Y == "I"):
	Z = X * c1
	print("Valor total: R$", round(Z,2))
			
elif(X > 5000 and Y == "I"):
	Z = X * d1
	print("Valor total: R$",  round(Z,2))

-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:16:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if((Y != "R") and (Y != "I") and (Y != "C") or (X < 0)):
	print("Dados invalidos")
	
elif(X <= 500 and Y == "R"):
	Z = X * a
	print("Valor total: R$", round(Z,2))
	
elif(X > 500 and Y == "R"):
	Z = X * b
	print("Valor total: R$", round(Z,2))
			
elif(X <= 1000 and Y == "C"):
	Z = X * c
	print("Valor total: R$", round(Z,2))
				
elif(X > 1000 and Y == "C"):
	Z = X * d
	print("Valor total: R$", round(Z,2))
		
elif(X <= 5000 and Y == "I"):
	Z = X * c1
	print("Valor total: R$", round(Z,2))
			
elif(X > 5000 and Y == "I"):
	Z = X * d1
	print("Valor total: R$",  round(Z,2))

-- EXECUTION TIME:
0.159077
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:16:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if((Y != "R") and (Y != "I") and (Y != "C") or (X < 0)):
	print("Dados invalidos")
	
elif(X <= 500 and Y == "R"):
	Z = X * a
	print("Valor total: R$", round(Z,2))
	
elif(X > 500 and Y == "R"):
	Z = X * b
	print("Valor total: R$", round(Z,2))
			
elif(X <= 1000 and Y == "C"):
	Z = X * c
	print("Valor total: R$", round(Z,2))
				
elif(X > 1000 and Y == "C"):
	Z = X * d
	print("Valor total: R$", round(Z,2))
		
elif(X <= 5000 and Y == "I"):
	Z = X * c1
	print("Valor total: R$", round(Z,2))
			
elif(X > 5000 and Y == "I"):
	Z = X * d1
	print("Valor total: R$",  round(Z,2))

-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:16:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if((Y != "R") and (Y != "I") and (Y != "C") or (X < 0)):
	print("Dados invalidos")
	
elif(X <= 500 and Y == "R"):
	Z = X * a
	print("Valor total: R$", round(Z,2))
	
elif(X > 500 and Y == "R"):
	Z = X * b
	print("Valor total: R$", round(Z,2))
			
elif(X <= 1000 and Y == "C"):
	Z = X * c
	print("Valor total: R$", round(Z,2))
				
elif(X > 1000 and Y == "C"):
	Z = X * d
	print("Valor total: R$", round(Z,2))
		
elif(X <= 5000 and Y == "I"):
	Z = X * c1
	print("Valor total: R$", round(Z,2))
			
elif(X > 5000 and Y == "I"):
	Z = X * d1
	print("Valor total: R$",  round(Z,2))

-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:16:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if((Y != "R") and (Y != "I") and (Y != "C") or (X < 0)):
	print("Dados invalidos")
	
elif(X <= 500 and Y == "R"):
	Z = X * a
	print("Valor total: R$", round(Z,2))
	
elif(X > 500 and Y == "R"):
	Z = X * b
	print("Valor total: R$", round(Z,2))
			
elif(X <= 1000 and Y == "C"):
	Z = X * c
	print("Valor total: R$", round(Z,2))
				
elif(X > 1000 and Y == "C"):
	Z = X * d
	print("Valor total: R$", round(Z,2))
		
elif(X <= 5000 and Y == "I"):
	Z = X * c1
	print("Valor total: R$", round(Z,2))
			
elif(X > 5000 and Y == "I"):
	Z = X * d1
	print("Valor total: R$",  round(Z,2))

-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:17:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if((Y != "R") and (Y != "I") and (Y != "C") or (X < 0)):
	print("Dados invalidos")
	
elif(X <= 500 and Y == "R"):
	Z = X * a
	print("Valor total: R$", round(Z,2))
	
elif(X > 500 and Y == "R"):
	Z = X * b
	print("Valor total: R$", round(Z,2))
			
elif(X <= 1000 and Y == "C"):
	Z = X * c
	print("Valor total: R$", round(Z,2))
				
elif(X > 1000 and Y == "C"):
	Z = X * d
	print("Valor total: R$", round(Z,2))
		
elif(X <= 5000 and Y == "I"):
	Z = X * c1
	print("Valor total: R$", round(Z,2))
			
elif(X > 5000 and Y == "I"):
	Z = X * d1
	print("Valor total: R$",  round(Z,2))

-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:17:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if((Y != "R") and (Y != "I") and (Y != "C") or (X < 0)):
	print("Dados invalidos")
	
elif(X <= 500 and Y == "R"):
	Z = X * a
	print("Valor total: R$", round(Z,2))
	
elif(X > 500 and Y == "R"):
	Z = X * b
	print("Valor total: R$", round(Z,2))
			
elif(X <= 1000 and Y == "C"):
	Z = X * c
	print("Valor total: R$", round(Z,2))
				
elif(X > 1000 and Y == "C"):
	Z = X * d
	print("Valor total: R$", round(Z,2))
		
elif(X <= 5000 and Y == "I"):
	Z = X * c1
	print("Valor total: R$", round(Z,2))
			
elif(X > 5000 and Y == "I"):
	Z = X * d1
	print("Valor total: R$",  round(Z,2))

-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:17:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if((Y != "R") and (Y != "I") and (Y != "C") or (X < 0)):
	print("Dados invalidos")
	
elif(X <= 500 and Y == "R"):
	Z = X * a
	print("Valor total: R$", round(Z,2))
	
elif(X > 500 and Y == "R"):
	Z = X * b
	print("Valor total: R$", round(Z,2))
			
elif(X <= 1000 and Y == "C"):
	Z = X * c
	print("Valor total: R$", round(Z,2))
				
elif(X > 1000 and Y == "C"):
	Z = X * d
	print("Valor total: R$", round(Z,2))
		
elif(X <= 5000 and Y == "I"):
	Z = X * c1
	print("Valor total: R$", round(Z,2))
			
elif(X > 5000 and Y == "I"):
	Z = X * d1
	print("Valor total: R$",  round(Z,2))

-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:17:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kwh e tipo",Y)

if((Y != "R") and (Y != "I") and (Y != "C") or (X < 0)):
	print("Dados invalidos")
	
elif(X <= 500 and Y == "R"):
	Z = X * a
	print("Valor total: R$", round(Z,2))
	
elif(X > 500 and Y == "R"):
	Z = X * b
	print("Valor total: R$", round(Z,2))
			
elif(X <= 1000 and Y == "C"):
	Z = X * c
	print("Valor total: R$", round(Z,2))
				
elif(X > 1000 and Y == "C"):
	Z = X * d
	print("Valor total: R$", round(Z,2))
		
elif(X <= 5000 and Y == "I"):
	Z = X * c1
	print("Valor total: R$", round(Z,2))
			
elif(X > 5000 and Y == "I"):
	Z = X * d1
	print("Valor total: R$",  round(Z,2))

-- EXECUTION TIME:
0.134834
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:19:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kWh e tipo",Y)

if((Y != "R") and (Y != "I") and (Y != "C") or (X < 0)):
	print("Dados invalidos")
	
elif(X <= 500 and Y == "R"):
	Z = X * a
	print("Valor total: R$", round(Z,2))
	
elif(X > 500 and Y == "R"):
	Z = X * b
	print("Valor total: R$", round(Z,2))
			
elif(X <= 1000 and Y == "C"):
	Z = X * c
	print("Valor total: R$", round(Z,2))
				
elif(X > 1000 and Y == "C"):
	Z = X * d
	print("Valor total: R$", round(Z,2))
		
elif(X <= 5000 and Y == "I"):
	Z = X * c1
	print("Valor total: R$", round(Z,2))
			
elif(X > 5000 and Y == "I"):
	Z = X * d1
	print("Valor total: R$",  round(Z,2))

-- EXECUTION TIME:
0.177923
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:19:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kWh e tipo",Y)

if((Y != "R") and (Y != "I") and (Y != "C") or (X < 0)):
	print("Dados invalidos")
	
elif(X <= 500 and Y == "R"):
	Z = X * a
	print("Valor total: R$", round(Z,2))
	
elif(X > 500 and Y == "R"):
	Z = X * b
	print("Valor total: R$", round(Z,2))
			
elif(X <= 1000 and Y == "C"):
	Z = X * c
	print("Valor total: R$", round(Z,2))
				
elif(X > 1000 and Y == "C"):
	Z = X * d
	print("Valor total: R$", round(Z,2))
		
elif(X <= 5000 and Y == "I"):
	Z = X * c1
	print("Valor total: R$", round(Z,2))
			
elif(X > 5000 and Y == "I"):
	Z = X * d1
	print("Valor total: R$",  round(Z,2))

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:19:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
X = float(input("consumo:"))
Y = input("insira o tipo de instalacao: (R/I/C)").upper()
a = 0.44
b = 0.65
c = 0.55
d = 0.60
c1 =0.55
d1 = 0.60
print("Entradas:", X,"kWh e tipo",Y)

if((Y != "R") and (Y != "I") and (Y != "C") or (X < 0)):
	print("Dados invalidos")
	
elif(X <= 500 and Y == "R"):
	Z = X * a
	print("Valor total: R$", round(Z,2))
	
elif(X > 500 and Y == "R"):
	Z = X * b
	print("Valor total: R$", round(Z,2))
			
elif(X <= 1000 and Y == "C"):
	Z = X * c
	print("Valor total: R$", round(Z,2))
				
elif(X > 1000 and Y == "C"):
	Z = X * d
	print("Valor total: R$", round(Z,2))
		
elif(X <= 5000 and Y == "I"):
	Z = X * c1
	print("Valor total: R$", round(Z,2))
			
elif(X > 5000 and Y == "I"):
	Z = X * d1
	print("Valor total: R$",  round(Z,2))

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
