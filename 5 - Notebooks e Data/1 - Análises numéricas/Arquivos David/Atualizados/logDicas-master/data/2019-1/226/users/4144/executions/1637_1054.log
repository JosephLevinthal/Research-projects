== TEST (2019-04-09 10:34:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = int(input("digite a coordenada x: "))
y = input("digite a coordenada y: ")
if ((2 * x) + y == 3):
	men = "ponto pertence a reta"
else:
	men = "ponto nao pertence a reta"
print(men)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if ((2 * x) + y == 3):
TypeError: unsupported operand type(s) for +: 'int' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:34:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = int(input("digite a coordenada x: "))
y = int(input("digite a coordenada y: "))
if ((2 * x) + y == 3):
	men = "ponto pertence a reta"
else:
	men = "ponto nao pertence a reta"
print(men)

-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:35:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a coordenada x: "))
y = float(input("digite a coordenada y: "))
if ((2 * x) + y == 3):
	men = "ponto pertence a reta"
else:
	men = "ponto nao pertence a reta"
print(men)

-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:35:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a coordenada x: "))
y = float(input("digite a coordenada y: "))
if ((2 * x) + y == 3):
	men = "ponto pertence a reta"
else:
	men = "ponto nao pertence a reta"
print(men)

-- EXECUTION TIME:
0.130404
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
