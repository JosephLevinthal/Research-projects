== TEST (2019-04-11 10:19:22) 
-- CODE:
a = float(input("Digite a: "))
b = float(input("Digite b: "))
c = float(input("Digite c: "))
d = float(input("Digite d: "))
e = float(input("Digite e: "))
f = float(input("Digite f: "))

x = ((c * e) - (b * f)) / ((a * e) - (b * d))
y = ((a * f) - (c * d)) / ((a * e) - (b * d))

if((a * e) - (b * d)):
	print(x)
	print(y)
else:
	print("Nao tem solucao")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    x = ((c * e) - (b * f)) / ((a * e) - (b * d))
ZeroDivisionError: float division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 10:19:51) 
-- CODE:
a = float(input("Digite a: "))
b = float(input("Digite b: "))
c = float(input("Digite c: "))
d = float(input("Digite d: "))
e = float(input("Digite e: "))
f = float(input("Digite f: "))

x = ((c * e) - (b * f)) / ((a * e) - (b * d))
y = ((a * f) - (c * d)) / ((a * e) - (b * d))

if((a * e) - (b * d)):
	print(x)
	print(y)
else:
	print("Nao tem solucao")
-- EXECUTION TIME:
0.194673
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1638/2449/main.py", line 8, in <module>
    x = ((c * e) - (b * f)) / ((a * e) - (b * d))
ZeroDivisionError: float division by zero

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:23:09) 
-- CODE:
a = float(input("Digite a: "))
b = float(input("Digite b: "))
c = float(input("Digite c: "))
d = float(input("Digite d: "))
e = float(input("Digite e: "))
f = float(input("Digite f: "))

x = ((c * e) - (b * f)) / ((a * e) - (b * d))
y = ((a * f) - (c * d)) / ((a * e) - (b * d))

if((a * e) - (b * d) == 0):
	print("Nao tem solucao")
else:
	print(x,y)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    x = ((c * e) - (b * f)) / ((a * e) - (b * d))
ZeroDivisionError: float division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 10:23:19) 
-- CODE:
a = float(input("Digite a: "))
b = float(input("Digite b: "))
c = float(input("Digite c: "))
d = float(input("Digite d: "))
e = float(input("Digite e: "))
f = float(input("Digite f: "))

x = ((c * e) - (b * f)) / ((a * e) - (b * d))
y = ((a * f) - (c * d)) / ((a * e) - (b * d))

if((a * e) - (b * d) == 0):
	print("Nao tem solucao")
else:
	print(x,y)
-- EXECUTION TIME:
0.218834
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1638/2449/main.py", line 8, in <module>
    x = ((c * e) - (b * f)) / ((a * e) - (b * d))
ZeroDivisionError: float division by zero

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:23:30) 
-- CODE:
a = float(input("Digite a: "))
b = float(input("Digite b: "))
c = float(input("Digite c: "))
d = float(input("Digite d: "))
e = float(input("Digite e: "))
f = float(input("Digite f: "))

x = ((c * e) - (b * f)) / ((a * e) - (b * d))
y = ((a * f) - (c * d)) / ((a * e) - (b * d))

if((a * e) - (b * d) == 0):
	print("Nao tem solucao")
else:
	print(x,y)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    x = ((c * e) - (b * f)) / ((a * e) - (b * d))
ZeroDivisionError: float division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:23:59) 
-- CODE:
a = float(input("Digite a: "))
b = float(input("Digite b: "))
c = float(input("Digite c: "))
d = float(input("Digite d: "))
e = float(input("Digite e: "))
f = float(input("Digite f: "))

x = ((c * e) - (b * f)) / ((a * e) - (b * d))
y = ((a * f) - (c * d)) / ((a * e) - (b * d))

if((a * e) - (b * d) == 0):
	print("Nao tem solucao")
else:
	print(x)
	print(y)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    x = ((c * e) - (b * f)) / ((a * e) - (b * d))
ZeroDivisionError: float division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 10:24:07) 
-- CODE:
a = float(input("Digite a: "))
b = float(input("Digite b: "))
c = float(input("Digite c: "))
d = float(input("Digite d: "))
e = float(input("Digite e: "))
f = float(input("Digite f: "))

x = ((c * e) - (b * f)) / ((a * e) - (b * d))
y = ((a * f) - (c * d)) / ((a * e) - (b * d))

if((a * e) - (b * d) == 0):
	print("Nao tem solucao")
else:
	print(x)
	print(y)
-- EXECUTION TIME:
0.13734
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1638/2449/main.py", line 8, in <module>
    x = ((c * e) - (b * f)) / ((a * e) - (b * d))
ZeroDivisionError: float division by zero

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:24:42) 
-- CODE:
a = float(input("Digite a: "))
b = float(input("Digite b: "))
c = float(input("Digite c: "))
d = float(input("Digite d: "))
e = float(input("Digite e: "))
f = float(input("Digite f: "))

x = ((c * e) - (b * f)) / ((a * e) - (b * d))
y = ((a * f) - (c * d)) / ((a * e) - (b * d))

if((a * e) - (b * d) == 0):
	print("Nao tem solucao")
else:
	print(x)
	print(y)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    x = ((c * e) - (b * f)) / ((a * e) - (b * d))
ZeroDivisionError: float division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:28:15) 
-- CODE:
a = float(input("Digite a: "))
b = float(input("Digite b: "))
c = float(input("Digite c: "))
d = float(input("Digite d: "))
e = float(input("Digite e: "))
f = float(input("Digite f: "))

z1 = ((a * e) - (b * d))

if(z1 == 0):
	print("Nao tem solucao")
else:
	print(((c * e) - (b * f)) / z1)
	print(((a * f) - (c * d)) / ((a * e) - (b * d)))
-- OUTPUT:
Nao tem solucao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 10:28:21) 
-- CODE:
a = float(input("Digite a: "))
b = float(input("Digite b: "))
c = float(input("Digite c: "))
d = float(input("Digite d: "))
e = float(input("Digite e: "))
f = float(input("Digite f: "))

z1 = ((a * e) - (b * d))

if(z1 == 0):
	print("Nao tem solucao")
else:
	print(((c * e) - (b * f)) / z1)
	print(((a * f) - (c * d)) / ((a * e) - (b * d)))
-- EXECUTION TIME:
0.157806
-- TEST CASE 1:
---- input:
10.0
10.0
12.0
10.0
10.0
12.0
---- correct output:
Nao tem solucao
---- user output:
Nao tem solucao
-- TEST CASE 2:
---- input:
1.0
8.0
12.0
16.0
22.0
30.0
---- correct output:
-0.22641509433962265
1.528301886792453
---- user output:
-0.22641509433962265
1.528301886792453
-- TEST CASE 3:
---- input:
24.0
48.0
52.0
112.0
16.0
1.0
---- correct output:
-0.15705128205128205
1.1618589743589745
---- user output:
-0.15705128205128205
1.1618589743589745
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
