== TEST (2019-06-26 15:57:35) 
-- CODE:
from numpy import *
from numpy.linalg import *
mc=array[[2,1,4],[1,2,0],[2,3,2]]
ent=array(input())
u=inv(mc)
print(dot(ent,u.T))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:58:17) 
-- CODE:
from numpy import *
from numpy.linalg import *
mc=array([[2,1,4],
			[1,2,0],
			[2,3,2]])
ent=array(input())
u=inv(mc)
print(dot(ent,u.T))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 10:18:18) 
-- CODE:
from numpy import *
from numpy.linalg import *
mc=array([[2,1,4],
			[1,2,0],
			[2,3,2]])
ent=array(input([]))
z=dot(inv(mc),ent)
print(z)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 10:18:31) 
-- CODE:
from numpy import *
from numpy.linalg import *
mc=array([[2,1,4],
			[1,2,0],
			[2,3,2]])
ent=array(input([[]]))
z=dot(inv(mc),ent)
print(z)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 10:18:40) 
-- CODE:
from numpy import *
from numpy.linalg import *
mc=array([[2,1,4],
			[1,2,0],
			[2,3,2]])
ent=array(input())
z=dot(inv(mc),ent)
print(z)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 10:19:21) 
-- CODE:
from numpy import *
from numpy.linalg import *
mc=array([[2,1,4],
			[1,2,0],
			[2,3,2]])
ent=array(input())
z=dot(inv(mc),ent.T)
print(z)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 10:24:15) 
-- CODE:
from numpy import *
from numpy.linalg import *
mc=array([[2,1,4],
			[1,2,0],
			[2,3,2]])
ent=array(input())
z=dot(inv(mc),ent.T)
print("estafilococo", round(z[0], 1))
print("salmonela", round(z[1], 1))
print("coli", round(z[2], 1))

if 

-- ERROR:
File "XXXX", line 12
    if 
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 10:24:25) 
-- CODE:
from numpy import *
from numpy.linalg import *
mc=array([[2,1,4],
			[1,2,0],
			[2,3,2]])
ent=array(input())
z=dot(inv(mc),ent.T)
print("estafilococo", round(z[0], 1))
print("salmonela", round(z[1], 1))
print("coli", round(z[2], 1))

if 

-- ERROR:
File "XXXX", line 12
    if 
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 10:25:32) 
-- CODE:
from numpy import *
from numpy.linalg import *
mc=array([[2,1,4],
			[1,2,0],
			[2,3,2]])
ent=array(input())
z=dot(inv(mc),ent.T)
print("estafilococo", round(z[0], 1))
print("salmonela", round(z[1], 1))
print("coli", round(z[2], 1))

if 

-- ERROR:
File "XXXX", line 12
    if 
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 10:25:41) 
-- CODE:
from numpy import *
from numpy.linalg import *
mc=array([[2,1,4],
			[1,2,0],
			[2,3,2]])
ent=array(input())
z=dot(inv(mc),ent.T)
print("estafilococo", round(z[0], 1))
print("salmonela", round(z[1], 1))
print("coli", round(z[2], 1))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 10:42:35) 
-- CODE:
from numpy import *
from numpy.linalg import *
mc=array([[2,1,4],
			[1,2,0],
			[2,3,2]])
ent=array(eval(input())
z=dot(inv(mc),ent.T)
print("estafilococo", round(z[0], 1))
print("salmonela", round(z[1], 1))
print("coli", round(z[2], 1))
if z[0]==min(z):
	print("estafilococo")
elif z[1]==min(z):
	print("salmonela")
else:
	print "coli"

-- ERROR:
File "XXXX", line 7
    z=dot(inv(mc),ent.T)
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-27 10:42:37) 
-- CODE:
from numpy import *
from numpy.linalg import *
mc=array([[2,1,4],
			[1,2,0],
			[2,3,2]])
ent=array(eval(input())
z=dot(inv(mc),ent.T)
print("estafilococo", round(z[0], 1))
print("salmonela", round(z[1], 1))
print("coli", round(z[2], 1))
if z[0]==min(z):
	print("estafilococo")
elif z[1]==min(z):
	print("salmonela")
else:
	print "coli"

-- EXECUTION TIME:
0.513354
-- ERROR:
  File "/home/codebench/codes/1836/2602/main.py", line 7
    z=dot(inv(mc),ent.T)
    ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 10:42:42) 
-- CODE:
from numpy import *
from numpy.linalg import *
mc=array([[2,1,4],
			[1,2,0],
			[2,3,2]])
ent=array(eval(input())
z=dot(inv(mc),ent.T)
print("estafilococo", round(z[0], 1))
print("salmonela", round(z[1], 1))
print("coli", round(z[2], 1))
if z[0]==min(z):
	print("estafilococo")
elif z[1]==min(z):
	print("salmonela")
else:
	print "coli"

-- ERROR:
File "XXXX", line 7
    z=dot(inv(mc),ent.T)
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 10:43:02) 
-- CODE:
from numpy import *
from numpy.linalg import *
mc=array([[2,1,4],
			[1,2,0],
			[2,3,2]])
ent=array(eval(input())
z=dot(inv(mc),ent.T)
print("estafilococo", round(z[0], 1))
print("salmonela", round(z[1], 1))
print("coli", round(z[2], 1))
if z[0]==min(z):
	print("estafilococo")
elif z[1]==min(z):
	print("salmonela")
else:
	print ("coli")

-- ERROR:
File "XXXX", line 7
    z=dot(inv(mc),ent.T)
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-27 11:07:42) 
-- CODE:
from numpy import *
from numpy.linalg import *
mc=array([[2,1,4],
			[1,2,0],
			[2,3,2]])
ent=array(eval(input())
z=dot(inv(mc),ent.T)
print("estafilococo", round(z[0], 1))
print("salmonela", round(z[1], 1))
print("coli", round(z[2], 1))
if z[0]==min(z):
	print("estafilococo")
elif z[1]==min(z):
	print("salmonela")
else:
	print ("coli")

-- EXECUTION TIME:
0.710082
-- ERROR:
  File "/home/codebench/codes/1836/2602/main.py", line 7
    z=dot(inv(mc),ent.T)
    ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 11:07:46) 
-- CODE:
from numpy import *
from numpy.linalg import *
mc=array([[2,1,4],
			[1,2,0],
			[2,3,2]])
ent=array(eval(input())
z=dot(inv(mc),ent.T)
print("estafilococo", round(z[0], 1))
print("salmonela", round(z[1], 1))
print("coli", round(z[2], 1))
if z[0]==min(z):
	print("estafilococo")
elif z[1]==min(z):
	print("salmonela")
else:
	print ("coli")

-- ERROR:
File "XXXX", line 7
    z=dot(inv(mc),ent.T)
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 11:08:40) 
-- CODE:
from numpy import *
from numpy.linalg import *
mc=array([[2,1,4],
			[1,2,0],
			[2,3,2]])
ent=array(eval(input()))
z=dot(inv(mc),ent.T)
print("estafilococo", round(z[0], 1))
print("salmonela", round(z[1], 1))
print("coli", round(z[2], 1))
if z[0]==min(z):
	print("estafilococo")
elif z[1]==min(z):
	print("salmonela")
else:
	print ("coli")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-27 11:08:48) 
-- CODE:
from numpy import *
from numpy.linalg import *
mc=array([[2,1,4],
			[1,2,0],
			[2,3,2]])
ent=array(eval(input()))
z=dot(inv(mc),ent.T)
print("estafilococo", round(z[0], 1))
print("salmonela", round(z[1], 1))
print("coli", round(z[2], 1))
if z[0]==min(z):
	print("estafilococo")
elif z[1]==min(z):
	print("salmonela")
else:
	print ("coli")

-- EXECUTION TIME:
1.01683
-- TEST CASE 1:
---- input:
[3955.25,5652.36,8562.22]
---- correct output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
---- user output:
estafilococo 1923.4
salmonela 1864.5
coli -439.0
coli
-- TEST CASE 2:
---- input:
[2095.52,1855.75,11295.21]

---- correct output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo

---- user output:
estafilococo -31711.0
salmonela 16783.4
coli 12183.6
estafilococo
-- TEST CASE 3:
---- input:
[8596.14,3212.68,2652.11]
---- correct output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela

---- user output:
estafilococo 22647.2
salmonela -9717.3
coli -6745.3
salmonela
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 11:09:02) 
-- CODE:
from numpy import *
from numpy.linalg import *
mc=array([[2,1,4],
			[1,2,0],
			[2,3,2]])
ent=array(eval(input()))
z=dot(inv(mc),ent.T)
print("estafilococo", round(z[0], 1))
print("salmonela", round(z[1], 1))
print("coli", round(z[2], 1))
if z[0]==min(z):
	print("estafilococo")
elif z[1]==min(z):
	print("salmonela")
else:
	print ("coli")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-27 11:09:20) 
-- CODE:
from numpy import *
from numpy.linalg import *
mc=array([[2,1,4],
			[1,2,0],
			[2,3,2]])
ent=array(eval(input()))
z=dot(inv(mc),ent.T)
print("estafilococo", round(z[0], 1))
print("salmonela", round(z[1], 1))
print("coli", round(z[2], 1))
if z[0]==min(z):
	print("estafilococo")
elif z[1]==min(z):
	print("salmonela")
else:
	print ("coli")

-- EXECUTION TIME:
1.23623
-- TEST CASE 1:
---- input:
[3955.25,5652.36,8562.22]
---- correct output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
---- user output:
estafilococo 1923.4
salmonela 1864.5
coli -439.0
coli
-- TEST CASE 2:
---- input:
[2095.52,1855.75,11295.21]

---- correct output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo

---- user output:
estafilococo -31711.0
salmonela 16783.4
coli 12183.6
estafilococo
-- TEST CASE 3:
---- input:
[8596.14,3212.68,2652.11]
---- correct output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela

---- user output:
estafilococo 22647.2
salmonela -9717.3
coli -6745.3
salmonela
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-27 11:09:30) 
-- CODE:
from numpy import *
from numpy.linalg import *
mc=array([[2,1,4],
			[1,2,0],
			[2,3,2]])
ent=array(eval(input()))
z=dot(inv(mc),ent.T)
print("estafilococo", round(z[0], 1))
print("salmonela", round(z[1], 1))
print("coli", round(z[2], 1))
if z[0]==min(z):
	print("estafilococo")
elif z[1]==min(z):
	print("salmonela")
else:
	print ("coli")

-- EXECUTION TIME:
1.25911
-- TEST CASE 1:
---- input:
[3955.25,5652.36,8562.22]
---- correct output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
---- user output:
estafilococo 1923.4
salmonela 1864.5
coli -439.0
coli
-- TEST CASE 2:
---- input:
[2095.52,1855.75,11295.21]

---- correct output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo

---- user output:
estafilococo -31711.0
salmonela 16783.4
coli 12183.6
estafilococo
-- TEST CASE 3:
---- input:
[8596.14,3212.68,2652.11]
---- correct output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela

---- user output:
estafilococo 22647.2
salmonela -9717.3
coli -6745.3
salmonela
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 11:10:10) 
-- CODE:
from numpy import *
from numpy.linalg import *
mc=array([[2,1,4],
			[1,2,0],
			[2,3,2]])
ent=array(eval(input()))
z=dot(inv(mc),ent.T)
print("estafilococo", round(z[0], 1))
print("salmonela", round(z[1], 1))
print("coli", round(z[2], 1))
if z[0]==min(z):
	print("estafilococo")
elif z[1]==min(z):
	print("salmonela")
else:
	print ("coli")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-27 11:10:56) 
-- CODE:
from numpy import *
from numpy.linalg import *
mc=array([[2,1,4],
			[1,2,0],
			[2,3,2]])
ent=array(eval(input()))
z=dot(inv(mc),ent.T)
print("estafilococo", round(z[0], 1))
print("salmonela", round(z[1], 1))
print("coli", round(z[2], 1))
if z[0]==min(z):
	print("estafilococo")
elif z[1]==min(z):
	print("salmonela")
else:
	print ("coli")

-- EXECUTION TIME:
1.02291
-- TEST CASE 1:
---- input:
[3955.25,5652.36,8562.22]
---- correct output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
---- user output:
estafilococo 1923.4
salmonela 1864.5
coli -439.0
coli
-- TEST CASE 2:
---- input:
[2095.52,1855.75,11295.21]

---- correct output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo

---- user output:
estafilococo -31711.0
salmonela 16783.4
coli 12183.6
estafilococo
-- TEST CASE 3:
---- input:
[8596.14,3212.68,2652.11]
---- correct output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela

---- user output:
estafilococo 22647.2
salmonela -9717.3
coli -6745.3
salmonela
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 11:11:49) 
-- CODE:
from numpy import *
from numpy.linalg import *
mc=array([[2,1,4],
			[1,2,0],
			[2,3,2]])
ent=array(eval(input()))
z=dot(inv(mc),ent.T)
print("estafilococo", round(z[0], 1))
print("salmonela", round(z[1], 1))
print("coli", round(z[2], 1))
if z[0]==min(z):
	print("estafilococo")
elif z[1]==min(z):
	print("salmonela")
else:
	print ("coli")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-27 11:11:57) 
-- CODE:
from numpy import *
from numpy.linalg import *
mc=array([[2,1,4],
			[1,2,0],
			[2,3,2]])
ent=array(eval(input()))
z=dot(inv(mc),ent.T)
print("estafilococo", round(z[0], 1))
print("salmonela", round(z[1], 1))
print("coli", round(z[2], 1))
if z[0]==min(z):
	print("estafilococo")
elif z[1]==min(z):
	print("salmonela")
else:
	print ("coli")

-- EXECUTION TIME:
1.03314
-- TEST CASE 1:
---- input:
[3955.25,5652.36,8562.22]
---- correct output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
---- user output:
estafilococo 1923.4
salmonela 1864.5
coli -439.0
coli
-- TEST CASE 2:
---- input:
[2095.52,1855.75,11295.21]

---- correct output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo

---- user output:
estafilococo 1923.4
salmonela 1864.5
coli -439.0
coli
-- TEST CASE 3:
---- input:
[8596.14,3212.68,2652.11]
---- correct output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela

---- user output:
estafilococo 22647.2
salmonela -9717.3
coli -6745.3
salmonela
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-27 11:11:59) 
-- CODE:
from numpy import *
from numpy.linalg import *
mc=array([[2,1,4],
			[1,2,0],
			[2,3,2]])
ent=array(eval(input()))
z=dot(inv(mc),ent.T)
print("estafilococo", round(z[0], 1))
print("salmonela", round(z[1], 1))
print("coli", round(z[2], 1))
if z[0]==min(z):
	print("estafilococo")
elif z[1]==min(z):
	print("salmonela")
else:
	print ("coli")

-- EXECUTION TIME:
1.86288
-- TEST CASE 1:
---- input:
[3955.25,5652.36,8562.22]
---- correct output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
---- user output:
estafilococo 1923.4
salmonela 1864.5
coli -439.0
coli
-- TEST CASE 2:
---- input:
[2095.52,1855.75,11295.21]

---- correct output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo

---- user output:
estafilococo -31711.0
salmonela 16783.4
coli 12183.6
estafilococo
-- TEST CASE 3:
---- input:
[8596.14,3212.68,2652.11]
---- correct output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela

---- user output:
estafilococo 1923.4
salmonela 1864.5
coli -439.0
coli
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-27 11:12:01) 
-- CODE:
from numpy import *
from numpy.linalg import *
mc=array([[2,1,4],
			[1,2,0],
			[2,3,2]])
ent=array(eval(input()))
z=dot(inv(mc),ent.T)
print("estafilococo", round(z[0], 1))
print("salmonela", round(z[1], 1))
print("coli", round(z[2], 1))
if z[0]==min(z):
	print("estafilococo")
elif z[1]==min(z):
	print("salmonela")
else:
	print ("coli")

-- EXECUTION TIME:
1.00693
-- TEST CASE 1:
---- input:
[3955.25,5652.36,8562.22]
---- correct output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
---- user output:
estafilococo 1923.4
salmonela 1864.5
coli -439.0
coli
-- TEST CASE 2:
---- input:
[2095.52,1855.75,11295.21]

---- correct output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo

---- user output:
estafilococo -31711.0
salmonela 16783.4
coli 12183.6
estafilococo
-- TEST CASE 3:
---- input:
[8596.14,3212.68,2652.11]
---- correct output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela

---- user output:
estafilococo 22647.2
salmonela -9717.3
coli -6745.3
salmonela
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 11:12:06) 
-- CODE:
from numpy import *
from numpy.linalg import *
mc=array([[2,1,4],
			[1,2,0],
			[2,3,2]])
ent=array(eval(input()))
z=dot(inv(mc),ent.T)
print("estafilococo", round(z[0], 1))
print("salmonela", round(z[1], 1))
print("coli", round(z[2], 1))
if z[0]==min(z):
	print("estafilococo")
elif z[1]==min(z):
	print("salmonela")
else:
	print ("coli")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-27 11:13:09) 
-- CODE:
from numpy import *
from numpy.linalg import *
mc=array([[2,1,4],
			[1,2,0],
			[2,3,2]])
ent=array(eval(input()))
z=dot(inv(mc),ent.T)
print("estafilococo", round(z[0], 1))
print("salmonela", round(z[1], 1))
print("coli", round(z[2], 1))
if z[0]==min(z):
	print("estafilococo")
elif z[1]==min(z):
	print("salmonela")
else:
	print ("coli")

-- EXECUTION TIME:
1.06806
-- TEST CASE 1:
---- input:
[3955.25,5652.36,8562.22]
---- correct output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
---- user output:
estafilococo 1923.4
salmonela 1864.5
coli -439.0
coli
-- TEST CASE 2:
---- input:
[2095.52,1855.75,11295.21]

---- correct output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo

---- user output:
estafilococo -31711.0
salmonela 16783.4
coli 12183.6
estafilococo
-- TEST CASE 3:
---- input:
[8596.14,3212.68,2652.11]
---- correct output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela

---- user output:
estafilococo 22647.2
salmonela -9717.3
coli -6745.3
salmonela
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 11:14:09) 
-- CODE:
from numpy import *
from numpy.linalg import *
mc=array([[2,1,4],
			[1,2,0],
			[2,3,2]])
ent=array(eval(input()))
z=dot(inv(mc),ent.T)
print("estafilococo", round(z[0], 1))
print("salmonela", round(z[1], 1))
print("coli", round(z[2], 1))
if z[0]==min(z):
	print("estafilococo")
elif z[1]==min(z):
	print("salmonela")
else:
	print ("coli")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 11:14:19) 
-- CODE:
from numpy import *
from numpy.linalg import *
mc=array([[2,1,4],
			[1,2,0],
			[2,3,2]])
ent=array(eval(input()))
z=dot(inv(mc),ent.T)
print("estafilococo", round(z[0], 1))
print("salmonela", round(z[1], 1))
print("coli", round(z[2], 1))
if z[0]==min(z):
	print("estafilococo")
elif z[1]==min(z):
	print("salmonela")
else:
	print ("coli")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-27 11:14:20) 
-- CODE:
from numpy import *
from numpy.linalg import *
mc=array([[2,1,4],
			[1,2,0],
			[2,3,2]])
ent=array(eval(input()))
z=dot(inv(mc),ent.T)
print("estafilococo", round(z[0], 1))
print("salmonela", round(z[1], 1))
print("coli", round(z[2], 1))
if z[0]==min(z):
	print("estafilococo")
elif z[1]==min(z):
	print("salmonela")
else:
	print ("coli")

-- EXECUTION TIME:
0.944791
-- TEST CASE 1:
---- input:
[3955.25,5652.36,8562.22]
---- correct output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
---- user output:
estafilococo 1923.4
salmonela 1864.5
coli -439.0
coli
-- TEST CASE 2:
---- input:
[2095.52,1855.75,11295.21]

---- correct output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo

---- user output:
estafilococo -31711.0
salmonela 16783.4
coli 12183.6
estafilococo
-- TEST CASE 3:
---- input:
[8596.14,3212.68,2652.11]
---- correct output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela

---- user output:
estafilococo 22647.2
salmonela -9717.3
coli -6745.3
salmonela
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-27 11:15:29) 
-- CODE:
from numpy import *
from numpy.linalg import *
mc=array([[2,1,4],
			[1,2,0],
			[2,3,2]])
ent=array(eval(input()))
z=dot(inv(mc),ent.T)
print("estafilococo", round(z[0], 1))
print("salmonela", round(z[1], 1))
print("coli", round(z[2], 1))
if z[0]==min(z):
	print("estafilococo")
elif z[1]==min(z):
	print("salmonela")
else:
	print ("coli")

-- EXECUTION TIME:
1.09248
-- TEST CASE 1:
---- input:
[3955.25,5652.36,8562.22]
---- correct output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
---- user output:
estafilococo 1923.4
salmonela 1864.5
coli -439.0
coli
-- TEST CASE 2:
---- input:
[2095.52,1855.75,11295.21]

---- correct output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo

---- user output:
estafilococo -31711.0
salmonela 16783.4
coli 12183.6
estafilococo
-- TEST CASE 3:
---- input:
[8596.14,3212.68,2652.11]
---- correct output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela

---- user output:
estafilococo 22647.2
salmonela -9717.3
coli -6745.3
salmonela
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-27 11:15:33) 
-- CODE:
from numpy import *
from numpy.linalg import *
mc=array([[2,1,4],
			[1,2,0],
			[2,3,2]])
ent=array(eval(input()))
z=dot(inv(mc),ent.T)
print("estafilococo", round(z[0], 1))
print("salmonela", round(z[1], 1))
print("coli", round(z[2], 1))
if z[0]==min(z):
	print("estafilococo")
elif z[1]==min(z):
	print("salmonela")
else:
	print ("coli")

-- EXECUTION TIME:
1.02496
-- TEST CASE 1:
---- input:
[3955.25,5652.36,8562.22]
---- correct output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
---- user output:
estafilococo 1923.4
salmonela 1864.5
coli -439.0
coli
-- TEST CASE 2:
---- input:
[2095.52,1855.75,11295.21]

---- correct output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo

---- user output:
estafilococo -31711.0
salmonela 16783.4
coli 12183.6
estafilococo
-- TEST CASE 3:
---- input:
[8596.14,3212.68,2652.11]
---- correct output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela

---- user output:
estafilococo 22647.2
salmonela -9717.3
coli -6745.3
salmonela
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-27 11:18:48) 
-- CODE:
from numpy import *
from numpy.linalg import *
mc=array([[2,1,4],
			[1,2,0],
			[2,3,2]])
ent=array(eval(input()))
z=dot(inv(mc),ent.T)
print("estafilococo", round(z[0], 1))
print("salmonela", round(z[1], 1))
print("coli", round(z[2], 1))
if z[0]==min(z):
	print("estafilococo: ")
elif z[1]==min(z):
	print("salmonela: ")
else:
	print ("coli: ")

-- EXECUTION TIME:
1.01987
-- TEST CASE 1:
---- input:
[3955.25,5652.36,8562.22]
---- correct output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
---- user output:
estafilococo 1923.4
salmonela 1864.5
coli -439.0
coli:
-- TEST CASE 2:
---- input:
[2095.52,1855.75,11295.21]

---- correct output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo

---- user output:
estafilococo -31711.0
salmonela 16783.4
coli 12183.6
estafilococo:
-- TEST CASE 3:
---- input:
[8596.14,3212.68,2652.11]
---- correct output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela

---- user output:
estafilococo 22647.2
salmonela -9717.3
coli -6745.3
salmonela:
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 11:18:57) 
-- CODE:
from numpy import *
from numpy.linalg import *
mc=array([[2,1,4],
			[1,2,0],
			[2,3,2]])
ent=array(eval(input()))
z=dot(inv(mc),ent.T)
print("estafilococo", round(z[0], 1))
print("salmonela", round(z[1], 1))
print("coli", round(z[2], 1))
if z[0]==min(z):
	print("estafilococo:")
elif z[1]==min(z):
	print("salmonela:")
else:
	print ("coli:")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-27 11:19:05) 
-- CODE:
from numpy import *
from numpy.linalg import *
mc=array([[2,1,4],
			[1,2,0],
			[2,3,2]])
ent=array(eval(input()))
z=dot(inv(mc),ent.T)
print("estafilococo", round(z[0], 1))
print("salmonela", round(z[1], 1))
print("coli", round(z[2], 1))
if z[0]==min(z):
	print("estafilococo:")
elif z[1]==min(z):
	print("salmonela:")
else:
	print ("coli:")

-- EXECUTION TIME:
1.21814
-- TEST CASE 1:
---- input:
[3955.25,5652.36,8562.22]
---- correct output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
---- user output:
estafilococo 1923.4
salmonela 1864.5
coli -439.0
coli:
-- TEST CASE 2:
---- input:
[2095.52,1855.75,11295.21]

---- correct output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo

---- user output:
estafilococo 1923.4
salmonela 1864.5
coli -439.0
coli:
-- TEST CASE 3:
---- input:
[8596.14,3212.68,2652.11]
---- correct output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela

---- user output:
estafilococo 22647.2
salmonela -9717.3
coli -6745.3
salmonela:
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-27 11:19:06) 
-- CODE:
from numpy import *
from numpy.linalg import *
mc=array([[2,1,4],
			[1,2,0],
			[2,3,2]])
ent=array(eval(input()))
z=dot(inv(mc),ent.T)
print("estafilococo", round(z[0], 1))
print("salmonela", round(z[1], 1))
print("coli", round(z[2], 1))
if z[0]==min(z):
	print("estafilococo:")
elif z[1]==min(z):
	print("salmonela:")
else:
	print ("coli:")

-- EXECUTION TIME:
2.68629
-- TEST CASE 1:
---- input:
[3955.25,5652.36,8562.22]
---- correct output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
---- user output:
estafilococo 1923.4
salmonela 1864.5
coli -439.0
coli:
-- TEST CASE 2:
---- input:
[2095.52,1855.75,11295.21]

---- correct output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo

---- user output:
estafilococo -31711.0
salmonela 16783.4
coli 12183.6
estafilococo:
-- TEST CASE 3:
---- input:
[8596.14,3212.68,2652.11]
---- correct output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela

---- user output:
estafilococo 22647.2
salmonela -9717.3
coli -6745.3
salmonela:
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-27 11:19:52) 
-- CODE:
from numpy import *
from numpy.linalg import *
mc=array([[2,1,4],
			[1,2,0],
			[2,3,2]])
ent=array(eval(input()))
z=dot(inv(mc),ent.T)
print("estafilococo:", round(z[0], 1))
print("salmonela:", round(z[1], 1))
print("coli:", round(z[2], 1))
if z[0]==min(z):
	print("estafilococo")
elif z[1]==min(z):
	print("salmonela")
else:
	print ("coli")

-- EXECUTION TIME:
1.05061
-- TEST CASE 1:
---- input:
[3955.25,5652.36,8562.22]
---- correct output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
---- user output:
estafilococo: 1923.4
salmonela: 1864.5
coli: -439.0
coli
-- TEST CASE 2:
---- input:
[2095.52,1855.75,11295.21]

---- correct output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo

---- user output:
estafilococo: -31711.0
salmonela: 16783.4
coli: 12183.6
estafilococo
-- TEST CASE 3:
---- input:
[8596.14,3212.68,2652.11]
---- correct output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela

---- user output:
estafilococo: 22647.2
salmonela: -9717.3
coli: -6745.3
salmonela
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
