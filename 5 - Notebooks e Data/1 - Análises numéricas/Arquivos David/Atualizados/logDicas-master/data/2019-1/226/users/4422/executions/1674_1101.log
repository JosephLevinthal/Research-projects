== TEST (2019-04-28 13:53:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input("Qual o consumo? "))
instalacao = input("Qual a instalacao? (R/I/C)")

if(c > 0):
	if((instalacao.upper() == "R") and instalacao <= 500):
		print("Entradas: ", c,",", "kWh e tipo ", intalacao)
		r = c * 0.44
		print(round(r, 2))
	elif(instalacao.upper() == "R" and instalacao > 500):
		print("Entradas: ", c,",", "kWh e tipo ", intalacao)
		r = c * 0,65
		print("Valor total: ", round(r, 2))
	elif(instalacao.upper() == "C" and instalacao <= 1000):
		print("Entradas: ", c,",", "kWh e tipo ", intalacao)
		r = c * 0.55
		print(round(r, 2))
	elif(instalacao.upper() == "C" and instalacao > 1000):
		print("Entradas: ", c,",", "kWh e tipo ", intalacao)
		r = c * 0.60
		print(round(r, 2))
	elif(instalacao.upper())
	
-- ERROR:
File "XXXX", line 24
    elif(instalacao.upper())
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:57:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input("Qual o consumo? "))
instalacao = input("Qual a instalacao? (R/I/C)")

if(c > 0):
	if((instalacao.upper() == "R") and instalacao <= 500):
		print("Entradas: ", c,",", "kWh e tipo ", intalacao)
		r = c * 0.44
		print(round(r, 2))
	elif(instalacao.upper() == "R" and instalacao > 500):
		print("Entradas: ", c,",", "kWh e tipo ", intalacao)
		r = c * 0,65
		print("Valor total: ", round(r, 2))
	elif(instalacao.upper() == "C" and instalacao <= 1000):
		print("Entradas: ", c,",", "kWh e tipo ", intalacao)
		r = c * 0.55
		print(round(r, 2))
	elif(instalacao.upper() == "C" and instalacao > 1000):
		print("Entradas: ", c,",", "kWh e tipo ", intalacao)
		r = c * 0.60
		print(round(r, 2))
	elif(instalacao.upper() == "I" and instalacao <= 5000):
		print("Entradas: ", c,",", "kWh e tipo ", intalacao)
		r = c * 0,55
		print("Valor total: ", round(r, 2))
	elif(instalacao.upper() == "I" and instalacao > 5000):
		print("Entradas: ", c,",", "kWh e tipo ", intalacao)
		r = c * 0,6
		print("Valor total: ", round(r, 2))
else:
	print("Entradas: ", c,",", "kWh e tipo ", intalacao)
	print("Dados invalidos")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 33, in <module>
    print("Entradas: ", c,",", "kWh e tipo ", intalacao)
NameError: name 'intalacao' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:58:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input("Qual o consumo? "))
instalacao = input("Qual a instalacao? (R/I/C)")

if(c > 0):
	if((instalacao.upper() == "R") and instalacao <= 500):
		print("Entradas: ", c,",", "kWh e tipo ", intalacao)
		r = c * 0.44
		print("Valor total: ", round(r, 2))
	elif(instalacao.upper() == "R" and instalacao > 500):
		print("Entradas: ", c,",", "kWh e tipo ", intalacao)
		r = c * 0,65
		print("Valor total: ", round(r, 2))
	elif(instalacao.upper() == "C" and instalacao <= 1000):
		print("Entradas: ", c,",", "kWh e tipo ", intalacao)
		r = c * 0.55
		print("Valor total: ", round(r, 2))
	elif(instalacao.upper() == "C" and instalacao > 1000):
		print("Entradas: ", c,",", "kWh e tipo ", intalacao)
		r = c * 0.60
		print("Valor total: ", round(r, 2))
	elif(instalacao.upper() == "I" and instalacao <= 5000):
		print("Entradas: ", c,",", "kWh e tipo ", intalacao)
		r = c * 0,55
		print("Valor total: ", round(r, 2))
	elif(instalacao.upper() == "I" and instalacao > 5000):
		print("Entradas: ", c,",", "kWh e tipo ", intalacao)
		r = c * 0,6
		print("Valor total: ", round(r, 2))
else:
	print("Entradas: ", c,",", "kWh e tipo ", intalacao)
	print("Dados invalidos")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 33, in <module>
    print("Entradas: ", c,",", "kWh e tipo ", intalacao)
NameError: name 'intalacao' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:58:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input("Qual o consumo? "))
instalacao = input("Qual a instalacao? (R/I/C)")

if(c > 0):
	if((instalacao.upper() == "R") and instalacao <= 500):
		print("Entradas: ", c,",", "kWh e tipo ", intalacao)
		r = c * 0.44
		print("Valor total: ", round(r, 2))
	elif(instalacao.upper() == "R" and instalacao > 500):
		print("Entradas: ", c,",", "kWh e tipo ", intalacao)
		r = c * 0,65
		print("Valor total: ", round(r, 2))
	elif(instalacao.upper() == "C" and instalacao <= 1000):
		print("Entradas: ", c,",", "kWh e tipo ", intalacao)
		r = c * 0.55
		print("Valor total: ", round(r, 2))
	elif(instalacao.upper() == "C" and instalacao > 1000):
		print("Entradas: ", c,",", "kWh e tipo ", intalacao)
		r = c * 0.60
		print("Valor total: ", round(r, 2))
	elif(instalacao.upper() == "I" and instalacao <= 5000):
		print("Entradas: ", c,",", "kWh e tipo ", intalacao)
		r = c * 0,55
		print("Valor total: ", round(r, 2))
	elif(instalacao.upper() == "I" and instalacao > 5000):
		print("Entradas: ", c,",", "kWh e tipo ", intalacao)
		r = c * 0,6
		print("Valor total: ", round(r, 2))
else:
	print("Entradas: ", c,",", "kWh e tipo ", intalacao)
	print("Dados invalidos")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 33, in <module>
    print("Entradas: ", c,",", "kWh e tipo ", intalacao)
NameError: name 'intalacao' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:59:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input("Qual o consumo? "))
instalacao = input("Qual a instalacao? (R/I/C)")

if(c > 0):
	if((instalacao.upper() == "R") and instalacao <= 500):
		print("Entradas: ", c,",", "kWh e tipo ", intalacao)
		r = c * 0.44
		print("Valor total: ", round(r, 2))
	elif(instalacao.upper() == "R" and instalacao > 500):
		print("Entradas: ", c,",", "kWh e tipo ", intalacao)
		r = c * 0,65
		print("Valor total: ", round(r, 2))
	elif(instalacao.upper() == "C" and instalacao <= 1000):
		print("Entradas: ", c,",", "kWh e tipo ", intalacao)
		r = c * 0.55
		print("Valor total: ", round(r, 2))
	elif(instalacao.upper() == "C" and instalacao > 1000):
		print("Entradas: ", c,",", "kWh e tipo ", intalacao)
		r = c * 0.60
		print("Valor total: ", round(r, 2))
	elif(instalacao.upper() == "I" and instalacao <= 5000):
		print("Entradas: ", c,",", "kWh e tipo ", intalacao)
		r = c * 0,55
		print("Valor total: ", round(r, 2))
	elif(instalacao.upper() == "I" and instalacao > 5000):
		print("Entradas: ", c,",", "kWh e tipo ", intalacao)
		r = c * 0,6
		print("Valor total: ", round(r, 2))
else:
	print("Entradas: ", c,",", "kWh e tipo ", intalacao)
	print("Dados invalidos")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 33, in <module>
    print("Entradas: ", c,",", "kWh e tipo ", intalacao)
NameError: name 'intalacao' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 14:00:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Qual o consumo? "))
instalacao = input("Qual a instalacao? (R/I/C)")

if(c > 0):
	if((instalacao.upper() == "R") and instalacao <= 500):
		print("Entradas: ", x,",", "kWh e tipo ", intalacao)
		r = x * 0.44
		print("Valor total: ", round(r, 2))
	elif(instalacao.upper() == "R" and instalacao > 500):
		print("Entradas: ", x,",", "kWh e tipo ", intalacao)
		r = x * 0,65
		print("Valor total: ", round(r, 2))
	elif(instalacao.upper() == "C" and instalacao <= 1000):
		print("Entradas: ", x,",", "kWh e tipo ", intalacao)
		r = x * 0.55
		print("Valor total: ", round(r, 2))
	elif(instalacao.upper() == "C" and instalacao > 1000):
		print("Entradas: ", x,",", "kWh e tipo ", intalacao)
		r = x * 0.60
		print("Valor total: ", round(r, 2))
	elif(instalacao.upper() == "I" and instalacao <= 5000):
		print("Entradas: ", x,",", "kWh e tipo ", intalacao)
		r = x * 0,55
		print("Valor total: ", round(r, 2))
	elif(instalacao.upper() == "I" and instalacao > 5000):
		print("Entradas: ", x,",", "kWh e tipo ", intalacao)
		r = x * 0,6
		print("Valor total: ", round(r, 2))
else:
	print("Entradas: ", x,",", "kWh e tipo ", intalacao)
	print("Dados invalidos")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if(c > 0):
NameError: name 'c' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 14:00:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Qual o consumo? "))
instalacao = input("Qual a instalacao? (R/I/C)")

if(c > 0):
	if((instalacao.upper() == "R") and instalacao <= 500):
		print("Entradas: ", x,",", "kWh e tipo ", intalacao)
		r = x * 0.44
		print("Valor total: ", round(r, 2))
	elif(instalacao.upper() == "R" and instalacao > 500):
		print("Entradas: ", x,",", "kWh e tipo ", intalacao)
		r = x * 0,65
		print("Valor total: ", round(r, 2))
	elif(instalacao.upper() == "C" and instalacao <= 1000):
		print("Entradas: ", x,",", "kWh e tipo ", intalacao)
		r = x * 0.55
		print("Valor total: ", round(r, 2))
	elif(instalacao.upper() == "C" and instalacao > 1000):
		print("Entradas: ", x,",", "kWh e tipo ", intalacao)
		r = x * 0.60
		print("Valor total: ", round(r, 2))
	elif(instalacao.upper() == "I" and instalacao <= 5000):
		print("Entradas: ", x,",", "kWh e tipo ", intalacao)
		r = x * 0,55
		print("Valor total: ", round(r, 2))
	elif(instalacao.upper() == "I" and instalacao > 5000):
		print("Entradas: ", x,",", "kWh e tipo ", intalacao)
		r = x * 0,6
		print("Valor total: ", round(r, 2))
else:
	print("Entradas: ", x,",", "kWh e tipo ", intalacao)
	print("Dados invalidos")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if(c > 0):
NameError: name 'c' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 14:00:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Qual o consumo? "))
instalacao = input("Qual a instalacao? (R/I/C)")

if(x > 0):
	if((instalacao.upper() == "R") and instalacao <= 500):
		print("Entradas: ", x,",", "kWh e tipo ", intalacao)
		r = x * 0.44
		print("Valor total: ", round(r, 2))
	elif(instalacao.upper() == "R" and instalacao > 500):
		print("Entradas: ", x,",", "kWh e tipo ", intalacao)
		r = x * 0,65
		print("Valor total: ", round(r, 2))
	elif(instalacao.upper() == "C" and instalacao <= 1000):
		print("Entradas: ", x,",", "kWh e tipo ", intalacao)
		r = x * 0.55
		print("Valor total: ", round(r, 2))
	elif(instalacao.upper() == "C" and instalacao > 1000):
		print("Entradas: ", x,",", "kWh e tipo ", intalacao)
		r = x * 0.60
		print("Valor total: ", round(r, 2))
	elif(instalacao.upper() == "I" and instalacao <= 5000):
		print("Entradas: ", x,",", "kWh e tipo ", intalacao)
		r = x * 0,55
		print("Valor total: ", round(r, 2))
	elif(instalacao.upper() == "I" and instalacao > 5000):
		print("Entradas: ", x,",", "kWh e tipo ", intalacao)
		r = x * 0,6
		print("Valor total: ", round(r, 2))
else:
	print("Entradas: ", x,",", "kWh e tipo ", intalacao)
	print("Dados invalidos")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 33, in <module>
    print("Entradas: ", x,",", "kWh e tipo ", intalacao)
NameError: name 'intalacao' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:35:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("Qual o consumo? "))
inst = input("Qual a instalacao? (R/I/C)")

print("Entradas: ", con, "kWh e tipo", y)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print("Entradas: ", con, "kWh e tipo", y)
NameError: name 'y' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:35:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("Qual o consumo? "))
inst = input("Qual a instalacao? (R/I/C)")

print("Entradas: ", con, "kWh e tipo", inst)


-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:36:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("Qual o consumo? "))
inst = input("Qual a instalacao? (R/I/C)")

print("Entradas: ",con, "kWh e tipo", inst)


-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:36:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("Qual o consumo? "))
inst = input("Qual a instalacao? (R/I/C)")

print("Entradas: ",con, "kWh e tipo", inst.upper())


-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:36:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("Qual o consumo? "))
inst = input("Qual a instalacao? (R/I/C)")

print("Entradas: ",con, "kWh e tipo", inst.upper())


-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:38:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("Qual o consumo? "))
inst = input("Qual a instalacao? (R/I/C)")

print("Entradas: ",con, "kWh e tipo", inst.upper())

if(con<0 or inst.upper() != "R" and inst.upper() != "I" and inst.upper() != "C"):
	print("Dados invalidos")
	
else:
	print("J")
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:38:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("Qual o consumo? "))
inst = input("Qual a instalacao? (R/I/C)")

print("Entradas: ",con, "kWh e tipo", inst.upper())

if(con<0 or inst.upper() != "R" and inst.upper() != "I" and inst.upper() != "C"):
	print("Dados invalidos")
	
else:
	print("J")
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:38:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("Qual o consumo? "))
inst = input("Qual a instalacao? (R/I/C)")

print("Entradas: ",con, "kWh e tipo", inst.upper())

if(con<0 or inst.upper() != "R" and inst.upper() != "I" and inst.upper() != "C"):
	print("Dados invalidos")
	
else:
	print("J")
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:41:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("Qual o consumo? "))
inst = input("Qual a instalacao? (R/I/C)")

print("Entradas: ",con, "kWh e tipo", inst.upper())

if(con<0 or inst.upper() != "R" and inst.upper() != "I" and inst.upper() != "C"):
	print("Dados invalidos")
	
else:
	if(inst.upper() == "R" and con<=500):
		c = con * 0.44
		print(round(c, 2))
	elif(inst.upper() != "R" and con>500):
		c = con * 0.65
		print(round(c, 2))
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:43:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("Qual o consumo? "))
inst = input("Qual a instalacao? (R/I/C)")

print("Entradas: ",con, "kWh e tipo", inst.upper())

if(con<0 or inst.upper() != "R" and inst.upper() != "I" and inst.upper() != "C"):
	print("Dados invalidos")
	
else:
	if(inst.upper() == "R" and con<=500):
		c = con * 0.44
		print(round(c, 2))
	elif(inst.upper() != "R" and con>500):
		c = con * 0.65
		print(round(c, 2))
	elif(inst.upper() != "I" and con<=1000):
		c = con*0.55
		print(round(c, 2))
	elif(inst.upper() != "I" and con>1000):
		c = con*0.60
		print(round(c, 2))
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:46:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("Qual o consumo? "))
inst = input("Qual a instalacao? (R/I/C)")

print("Entradas: ",con, "kWh e tipo", inst.upper())

if(con<0 or inst.upper() != "R" and inst.upper() != "I" and inst.upper() != "C"):
	print("Dados invalidos")
	
else:
	if(inst.upper() == "R" and con<=500):
		c = con * 0.44
		print(round(c, 2))
	elif(inst.upper() != "R" and con>500):
		c = con * 0.65
		print(round(c, 2))
	elif(inst.upper() != "I" and con<=5000):
		c = con * 0.55
		print(round(c, 2))
	elif(inst.upper() != "I" and con>5000):
		c = con * 0.60
		print(round(c, 2))
	elif(inst.upper() != "C" and con<=1000):
		c = con * 0.55
		print(round(c, 2))
	elif(inst.upper() != "C" and con>1000):
		c = con * 0.60
		print(round(c, 2))
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:47:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("Qual o consumo? "))
inst = input("Qual a instalacao? (R/I/C)")

print("Entradas: ",con, "kWh e tipo", inst.upper())

if(con<0 or inst.upper() != "R" and inst.upper() != "I" and inst.upper() != "C"):
	print("Dados invalidos")
	
else:
	if(inst.upper() == "R" and con<=500.0):
		c = (con) * 0.44
		print(round(c, 2))
	elif(inst.upper() != "R" and con>500.0):
		c = (con) * 0.65
		print(round(c, 2))
	elif(inst.upper() != "I" and con<=5000.0):
		c = (con) * 0.55
		print(round(c, 2))
	elif(inst.upper() != "I" and con>5000.0):
		c = (con) * 0.60
		print(round(c, 2))
	elif(inst.upper() != "C" and con<=1000.0):
		c = (con) * 0.55
		print(round(c, 2))
	elif(inst.upper() != "C" and con>1000.0):
		c = (con) * 0.60
		print(round(c, 2))
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:49:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("Qual o consumo? "))
inst = input("Qual a instalacao? (R/I/C)")

print("Entradas: ",con, "kWh e tipo", inst.upper())

if(con<0 or inst.upper() != "R" and inst.upper() != "I" and inst.upper() != "C"):
	print("Dados invalidos")
	
else:
	if(inst.upper() == "R" and con<=500.0):
		c = (con*44)/100
		print(round(c, 2))
	elif(inst.upper() != "R" and con>500.0):
		c = (con * 65)/100
		print(round(c, 2))
	elif(inst.upper() != "I" and con<=5000.0):
		c = (con) * 0.55
		print(round(c, 2))
	elif(inst.upper() != "I" and con>5000.0):
		c = (con) * 0.60
		print(round(c, 2))
	elif(inst.upper() != "C" and con<=1000.0):
		c = (con * 0.55)/100
		print(round(c, 2))
	elif(inst.upper() != "C" and con>1000.0):
		c = (con) * 0.60
		print(round(c, 2))
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:49:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("Qual o consumo? "))
inst = input("Qual a instalacao? (R/I/C)")

print("Entradas: ",con, "kWh e tipo", inst.upper())

if(con<0 or inst.upper() != "R" and inst.upper() != "I" and inst.upper() != "C"):
	print("Dados invalidos")
	
else:
	if(inst.upper() == "R" and con<=500.0):
		c = (con*44)/100
		print(round(c, 2))
	elif(inst.upper() != "R" and con>500.0):
		c = (con * 65)/100
		print(round(c, 2))
	elif(inst.upper() != "I" and con<=5000.0):
		c = (con) * 0.55
		print(round(c, 2))
	elif(inst.upper() != "I" and con>5000.0):
		c = (con) * 0.60
		print(round(c, 2))
	elif(inst.upper() != "C" and con<=1000.0):
		c = (con * 0.55)/100
		print(round(c, 2))
	elif(inst.upper() != "C" and con>1000.0):
		c = (con) * 0.60
		print(round(c, 2))
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:51:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("Qual o consumo? "))
inst = input("Qual a instalacao? (r/i/c)")

print("Entradas: ",con, "kWh e tipo", inst.upper())

if(con<0 or inst.lower() != "r" and inst.lower() != "i" and inst.lower() != "c"):
	print("Dados invalidos")
	
else:
	if(inst.lower() == "r" and con<=500.0):
		c = (con*44)/100
		print(round(c, 2))
	elif(inst.lower() != "r" and con>500.0):
		c = (con * 65)/100
		print(round(c, 2))
	elif(inst.lower() != "i" and con<=5000.0):
		c = (con) * 0.55
		print(round(c, 2))
	elif(inst.lower() != "i" and con>5000.0):
		c = (con) * 0.60
		print(round(c, 2))
	elif(inst.lower() != "c" and con<=1000.0):
		c = (con * 0.55)/100
		print(round(c, 2))
	elif(inst.lower() != "c" and con>1000.0):
		c = (con) * 0.60
		print(round(c, 2))
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:52:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("Qual o consumo? "))
inst = input("Qual a instalacao? (r/i/c)")

print("Entradas: ",con, "kWh e tipo", inst.upper())

if(con<0 or inst.lower() != "r" and inst.lower() != "i" and inst.lower() != "c"):
	print("Dados invalidos")
	
else:
	if(inst.lower() == "r" and (con<=500.0):
		c = (con*44)/100
		print(round(c, 2))
	elif(inst.lower() != "r" and con>500.0):
		c = (con * 65)/100
		print(round(c, 2))
	elif(inst.lower() != "i" and con<=5000.0):
		c = (con) * 0.55
		print(round(c, 2))
	elif(inst.lower() != "i" and con>5000.0):
		c = (con) * 0.60
		print(round(c, 2))
	elif(inst.lower() != "c" and con<=1000.0):
		c = (con * 0.55)/100
		print(round(c, 2))
	elif(inst.lower() != "c" and con>1000.0):
		c = (con) * 0.60
		print(round(c, 2))
-- ERROR:
File "XXXX", line 13
    if(inst.lower() == "r" and (con<=500.0):
                                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:52:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("Qual o consumo? "))
inst = input("Qual a instalacao? (r/i/c)")

print("Entradas: ",con, "kWh e tipo", inst.upper())

if(con<0 or inst.lower() != "r" and inst.lower() != "i" and inst.lower() != "c"):
	print("Dados invalidos")
	
else:
	if(inst.lower() == "r" and (con<=500.0)):
		c = (con*44)/100
		print(round(c, 2))
	elif(inst.lower() != "r" and con>500.0):
		c = (con * 65)/100
		print(round(c, 2))
	elif(inst.lower() != "i" and con<=5000.0):
		c = (con) * 0.55
		print(round(c, 2))
	elif(inst.lower() != "i" and con>5000.0):
		c = (con) * 0.60
		print(round(c, 2))
	elif(inst.lower() != "c" and con<=1000.0):
		c = (con * 0.55)/100
		print(round(c, 2))
	elif(inst.lower() != "c" and con>1000.0):
		c = (con) * 0.60
		print(round(c, 2))
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:53:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("Qual o consumo? "))
inst = input("Qual a instalacao? (r/i/c)")

print("Entradas: ",con, "kWh e tipo", inst.upper())

if(con<0 or inst.lower() != "r" and inst.lower() != "i" and inst.lower() != "c"):
	print("Dados invalidos")
	
else:
	if(inst.lower() == "r" and (con<=500.0)):
		c = (con*44)/100
		print(round(c, 2))
	elif(inst.lower() != "r" and con>500.0):
		c = (con * 65)/100
		print(round(c, 2))
	elif(inst.lower() != "i" and con<=5000.0):
		c = (con) * 0.55
		print(round(c, 2))
	elif(inst.lower() != "i" and con>5000.0):
		c = (con) * 0.60
		print(round(c, 2))
	elif(inst.lower() != "c" and (con<=1000.0)):
		c = (con * 0.55)/100
		print(round(c, 2))
	elif(inst.lower() != "c" and con>1000.0):
		c = (con) * 0.60
		print(round(c, 2))
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:59:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("Qual o consumo? "))
inst = input("Qual a instalacao? (r/i/c)")

print("Entradas: ",con, "kWh e tipo", inst.upper())

if(con<0 or inst.lower() != "r" and inst.lower() != "i" and inst.lower() != "c"):
	print("Dados invalidos")
	
else:
	if(inst.lower() == "r" and (con<=500.0)):
		c = (con*44)/100
		print(round(c, 2))
	elif(inst.lower() != "r" and con>500.0):
		c = (con * 65)/100
		print(round(c, 2))
	elif(inst.lower() != "i" and con<=5000.0):
		c = (con) * 0.55
		print(round(c, 2))
	elif(inst.lower() != "i" and con>5000.0):
		c = (con) * 0.60
		print(round(c, 2))
	elif(inst.lower() != "c" and (con<=1000.0)):
		c = (con * 55)/100
		print(round(c, 2))
	elif(inst.lower() != "c" and con>1000.0):
		c = (con) * 0.60
		print(round(c, 2))
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:03:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("Qual o consumo? "))
inst = input("Qual a instalacao? (r/i/c)")

print("Entradas: ",con, "kWh e tipo", inst.upper())

if(con<0 or inst.lower() != "r" and inst.lower() != "i" and inst.lower() != "c"):
	print("Dados invalidos")
	
else:
	if(inst.lower() == "r" and (con<=500.0)):
		c = (con*44)/100
		print(round(c, 2))
	elif(inst.lower() != "r" and con>500.0):
		c = (con * 65)/100
		print(round(c, 2))
	elif(inst.lower() != "i" and con<=5000.0):
		c = (con) * 0.55
		print(round(c, 2))
	elif(inst.lower() != "i" and con>5000.0):
		c = (con) * 0.60
		print(round(c, 2))
	elif(inst.lower() != "c" and (con<=1000.0)):
		c = (con * 55)/100
		print(round(c, 2))
	elif(inst.lower() != "c" and con>1000.0):
		c = (con) * 0.60
		print(round(c, 2))
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:03:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("Qual o consumo? "))
inst = input("Qual a instalacao? (r/i/c)")

print("Entradas: ",con, "kWh e tipo", inst.upper())

if(con<0 or inst.lower() != "r" and inst.lower() != "i" and inst.lower() != "c"):
	print("Dados invalidos")
	
else:
	if(inst.lower() == "r" and (con<=500.0)):
		c = (con*44)/100
		print(round(c, 2))
	elif(inst.lower() != "r" and con>500.0):
		c = (con * 65)/100
		print(round(c, 2))
	elif(inst.lower() != "i" and con<=5000.0):
		c = (con) * 0.55
		print(round(c, 2))
	elif(inst.lower() != "i" and con>5000.0):
		c = (con) * 0.60
		print(round(c, 2))
	elif(inst.lower() != "c" and (con<=1000.0)):
		c = (con*55)/100
		print(round(c, 2))
	elif(inst.lower() != "c" and con>1000.0):
		c = (con) * 0.60
		print(round(c, 2))
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:03:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("Qual o consumo? "))
inst = input("Qual a instalacao? (r/i/c)")

print("Entradas: ",con, "kWh e tipo", inst.upper())

if(con<0 or inst.lower() != "r" and inst.lower() != "i" and inst.lower() != "c"):
	print("Dados invalidos")
	
else:
	if(inst.lower() == "r" and (con<=500.0)):
		c = (con*44)/100
		print(round(c, 2))
	elif(inst.lower() != "r" and con>500.0):
		c = (con * 65)/100
		print(round(c, 2))
	elif(inst.lower() != "i" and con<=5000.0):
		c = (con) * 0.55
		print(round(c, 2))
	elif(inst.lower() != "i" and con>5000.0):
		c = (con) * 0.60
		print(round(c, 2))
	elif(inst.lower() != "c" and (con<=1000.0)):
		c = (con*55)/100
		print(round(c, 2))
	elif(inst.lower() != "c" and con>1000.0):
		c = (con) * 0.60
		print(round(c, 2))
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:04:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("Qual o consumo? "))
inst = input("Qual a instalacao? (r/i/c)")

print("Entradas: ",con, "kWh e tipo", inst.upper())

if(con<0 or inst.lower() != "r" and inst.lower() != "i" and inst.lower() != "c"):
	print("Dados invalidos")
	
else:
	if(inst.lower() == "r" and (con<=500.0)):
		c = (con*44)/100
		print(round(c, 2))
	elif(inst.lower() != "r" and con>500.0):
		c = (con * 65)/100
		print(round(c, 2))
	elif(inst.lower() != "i" and con<=5000.0):
		c = (con*0.55)
		print(round(c, 2))
	elif(inst.lower() != "i" and con>5000.0):
		c = (con) * 0.60
		print(round(c, 2))
	elif(inst.lower() != "c" and (con<=1000.0)):
		c = (con*55)/100
		print(round(c, 2))
	elif(inst.lower() != "c" and con>1000.0):
		c = (con) * 0.60
		print(round(c, 2))
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:07:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("Qual o consumo? "))
inst = input("Qual a instalacao? (r/i/c)")

print("Entradas: ",con, "kWh e tipo", inst.upper())

if(con<0 or inst.lower() != "r" and inst.lower() != "i" and inst.lower() != "c"):
	print("Dados invalidos")
	
else:
	if(inst.lower() == "r" and (con<=500.0)):
		c = (con*44)/100
		print(round(c, 2))
	elif(inst.lower() != "r" and con>500.0):
		c = (con * 65)/100
		print(round(c, 2))
	elif(inst.lower() != "i" and con<=5000.0):
		c = (con*0.55)
		print(round(c, 2))
	elif(inst.lower() != "i" and con>5000.0):
		c = (con) * 0.60
		print(round(c, 2))
	elif(inst.lower() != "c" and (con<=1000.0)):
		c = (con*55)/100
		print(round(c, 2))
	elif(inst.lower() != "c" and con>1000.0):
		c = (con) * 0.60
		print(round(c, 2))
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:08:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("Qual o consumo? "))
inst = input("Qual a instalacao? (r/i/c)")

print("Entradas: ",con, "kWh e tipo", inst.upper())

if(con<0 or inst.lower() != "r" and inst.lower() != "i" and inst.lower() != "c"):
	print("Dados invalidos")
	
else:
	if(inst.lower() == "r" and (con<=500.0)):
		c = (con*44)/100
		print(round(c, 2))
	elif(inst.lower() == "r" and con>500.0):
		c = (con * 65)/100
		print(round(c, 2))
	elif(inst.lower() == "i" and con<=5000.0):
		c = (con*0.55)
		print(round(c, 2))
	elif(inst.lower() == "i" and con>5000.0):
		c = (con) * 0.60
		print(round(c, 2))
	elif(inst.lower() == "c" and (con<=1000.0)):
		c = (con*55)/100
		print(round(c, 2))
	elif(inst.lower() == "c" and con>1000.0):
		c = (con) * 0.60
		print(round(c, 2))
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 11:08:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("Qual o consumo? "))
inst = input("Qual a instalacao? (r/i/c)")

print("Entradas: ",con, "kWh e tipo", inst.upper())

if(con<0 or inst.lower() != "r" and inst.lower() != "i" and inst.lower() != "c"):
	print("Dados invalidos")
	
else:
	if(inst.lower() == "r" and (con<=500.0)):
		c = (con*44)/100
		print(round(c, 2))
	elif(inst.lower() == "r" and con>500.0):
		c = (con * 65)/100
		print(round(c, 2))
	elif(inst.lower() == "i" and con<=5000.0):
		c = (con*0.55)
		print(round(c, 2))
	elif(inst.lower() == "i" and con>5000.0):
		c = (con) * 0.60
		print(round(c, 2))
	elif(inst.lower() == "c" and (con<=1000.0)):
		c = (con*55)/100
		print(round(c, 2))
	elif(inst.lower() == "c" and con>1000.0):
		c = (con) * 0.60
		print(round(c, 2))
-- EXECUTION TIME:
0.141348
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo R
621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:10:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("Qual o consumo? "))
inst = input("Qual a instalacao? (r/i/c)")

print("Entradas: ",con, "kWh e tipo", inst.upper())

if(con<0 or inst.lower() != "r" and inst.lower() != "i" and inst.lower() != "c"):
	print("Dados invalidos")
	
else:
	if(inst.lower() == "r" and con<=500):
		c = con*0.44
		print(round(c, 2))
	elif(inst.lower() == "r" and con>500):
		c = con*0.65
		print(round(c, 2))
	elif(inst.lower() == "i" and con<=5000):
		c = con*0.55
		print(round(c, 2))
	elif(inst.lower() == "i" and con>5000):
		c = con*0.60
		print(round(c, 2))
	elif(inst.lower() == "c" and (con<=1000)):
		c = con*0.55
		print(round(c, 2))
	elif(inst.lower() == "c" and con>1000):
		c = con*0.60
		print(round(c, 2))
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 11:10:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("Qual o consumo? "))
inst = input("Qual a instalacao? (r/i/c)")

print("Entradas: ",con, "kWh e tipo", inst.upper())

if(con<0 or inst.lower() != "r" and inst.lower() != "i" and inst.lower() != "c"):
	print("Dados invalidos")
	
else:
	if(inst.lower() == "r" and con<=500):
		c = con*0.44
		print(round(c, 2))
	elif(inst.lower() == "r" and con>500):
		c = con*0.65
		print(round(c, 2))
	elif(inst.lower() == "i" and con<=5000):
		c = con*0.55
		print(round(c, 2))
	elif(inst.lower() == "i" and con>5000):
		c = con*0.60
		print(round(c, 2))
	elif(inst.lower() == "c" and (con<=1000)):
		c = con*0.55
		print(round(c, 2))
	elif(inst.lower() == "c" and con>1000):
		c = con*0.60
		print(round(c, 2))
-- EXECUTION TIME:
0.19119
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo R
621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:11:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("Qual o consumo? "))
inst = input("Qual a instalacao? (r/i/c)")

print("Entradas: ",con, "kWh e tipo", inst.upper())

if(con<0 or inst.lower() != "r" and inst.lower() != "i" and inst.lower() != "c"):
	print("Dados invalidos")
	
else:
	if(inst.lower() == "r" and con<=500):
		c = con*0.44
		print("Valor total: ", "R$",round(c, 2))
	elif(inst.lower() == "r" and con>500):
		c = con*0.65
		print(round(c, 2))
	elif(inst.lower() == "i" and con<=5000):
		c = con*0.55
		print(round(c, 2))
	elif(inst.lower() == "i" and con>5000):
		c = con*0.60
		print(round(c, 2))
	elif(inst.lower() == "c" and (con<=1000)):
		c = con*0.55
		print(round(c, 2))
	elif(inst.lower() == "c" and con>1000):
		c = con*0.60
		print(round(c, 2))
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:11:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("Qual o consumo? "))
inst = input("Qual a instalacao? (r/i/c)")

print("Entradas: ",con, "kWh e tipo", inst.upper())

if(con<0 or inst.lower() != "r" and inst.lower() != "i" and inst.lower() != "c"):
	print("Dados invalidos")
	
else:
	if(inst.lower() == "r" and con<=500):
		c = con*0.44
		print("Valor total: ", "R$",round(c, 2))
	elif(inst.lower() == "r" and con>500):
		c = con*0.65
		print(round(c, 2))
	elif(inst.lower() == "i" and con<=5000):
		c = con*0.55
		print(round(c, 2))
	elif(inst.lower() == "i" and con>5000):
		c = con*0.60
		print(round(c, 2))
	elif(inst.lower() == "c" and (con<=1000)):
		c = con*0.55
		print(round(c, 2))
	elif(inst.lower() == "c" and con>1000):
		c = con*0.60
		print(round(c, 2))
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:12:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("Qual o consumo? "))
inst = input("Qual a instalacao? (r/i/c)")

print("Entradas: ",con, "kWh e tipo", inst.upper())

if(con<0 or inst.lower() != "r" and inst.lower() != "i" and inst.lower() != "c"):
	print("Dados invalidos")
	
else:
	if(inst.lower() == "r" and con<=500):
		c = con*0.44
		print("Valor total: ", "R$",round(c, 2))
	elif(inst.lower() == "r" and con>500):
		c = con*0.65
		print("Valor total: ", "R$",round(c, 2))
	elif(inst.lower() == "i" and con<=5000):
		c = con*0.55
		print("Valor total: ", "R$",round(c, 2))
	elif(inst.lower() == "i" and con>5000):
		c = con*0.60
		print("Valor total: ", "R$",round(c, 2))
	elif(inst.lower() == "c" and (con<=1000)):
		c = con*0.55
		print("Valor total: ", "R$",round(c, 2))
	elif(inst.lower() == "c" and con>1000):
		c = con*0.60
		print("Valor total: ", "R$",round(c, 2))
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 11:12:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("Qual o consumo? "))
inst = input("Qual a instalacao? (r/i/c)")

print("Entradas: ",con, "kWh e tipo", inst.upper())

if(con<0 or inst.lower() != "r" and inst.lower() != "i" and inst.lower() != "c"):
	print("Dados invalidos")
	
else:
	if(inst.lower() == "r" and con<=500):
		c = con*0.44
		print("Valor total: ", "R$",round(c, 2))
	elif(inst.lower() == "r" and con>500):
		c = con*0.65
		print("Valor total: ", "R$",round(c, 2))
	elif(inst.lower() == "i" and con<=5000):
		c = con*0.55
		print("Valor total: ", "R$",round(c, 2))
	elif(inst.lower() == "i" and con>5000):
		c = con*0.60
		print("Valor total: ", "R$",round(c, 2))
	elif(inst.lower() == "c" and (con<=1000)):
		c = con*0.55
		print("Valor total: ", "R$",round(c, 2))
	elif(inst.lower() == "c" and con>1000):
		c = con*0.60
		print("Valor total: ", "R$",round(c, 2))
-- EXECUTION TIME:
0.143468
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo R
Valor total:  R$ 621.08
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
