== TEST (2019-04-27 11:43:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Num a:"))
b = float(input("Num b:"))
c = float(input("Num c:"))
d = float(input("Num d:"))
if ((b >a) or (d>c)):
	if ((a<=b) and (c<=d)):
		print("Intervalo 1: ", a,",", b)
		print("Intervalo 2: ", c,",",d)
		print("Ha intersecao")
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 11:50:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Num a:"))
b = float(input("Num b:"))
c = float(input("Num c:"))
d = float(input("Num d:"))
if ((b >a) or (d>c)):
	if ((a<=b) and (c<=d)):
		print("Intervalo 1: ", a,",", b)
		print("Intervalo 2: ", c,",",d)
		print("Ha intersecao")
	elif ((a<=b) or(c<=d)):
		print("Intervalo 1: ", a,",", b)
		print("Intervalo 2: ", c,",",d)
		print("Nao ha intersecao")
		
	
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 11:59:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Num a:"))
b = float(input("Num b:"))
c = float(input("Num c:"))
d = float(input("Num d:"))
if ((b >a) or (d>c)):
	if ((a<=b) and (c<=d)):
		print("Intervalo 1: ", a,",", b)
		print("Intervalo 2: ", c,",",d)
		print("Ha intersecao")
	elif ((a<=b) or(c<=d)):
		print("Intervalo 1: ", a,",", b)
		print("Intervalo 2: ", c,",",d)
		print("Nao ha intersecao")
else:
	print("Intervalo 1: ", a,",", b)
	print("Intervalo 2: ", c,",",d)
	print("Entradas invalidas")
	
		
	
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 12:00:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Num a:"))
b = float(input("Num b:"))
c = float(input("Num c:"))
d = float(input("Num d:"))
if ((b >a) or (d>c)):
	if ((a<=b) and (c<=d)):
		print("Intervalo 1: ", a,",", b)
		print("Intervalo 2: ", c,",",d)
		print("Ha intersecao")
	elif ((a<=b) or (c<=d)):
		print("Intervalo 1: ", a,",", b)
		print("Intervalo 2: ", c,",",d)
		print("Nao ha intersecao")
else:
	print("Intervalo 1: ", a,",", b)
	print("Intervalo 2: ", c,",",d)
	print("Entradas invalidas")
	
		
	
-- EXECUTION TIME:
0.17157
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1:  1.5 , 5.0
Intervalo 2:  2.5 , 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1:  -1.0 , -3.0
Intervalo 2:  1.0 , 3.0
Nao ha intersecao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 21:43:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Num a:"))
b = float(input("Num b:"))
c = float(input("Num c:"))
d = float(input("Num d:"))
print("Intervalo 1: ", a,",", b)
print("Intervalo 2: ", c,",",d)

if ((b<=a) or (d<=c)):
	print("Entradas invalidas")
elif(b<c):
	print("Nao ha intersecao")
else:
	print("Ha interse ao")
	
		
	
-- EXECUTION TIME:
0.200912
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1:  1.5 , 5.0
Intervalo 2:  2.5 , 3.0
Ha interse ao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1:  -1.0 , -3.0
Intervalo 2:  1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 21:44:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Num a:"))
b = float(input("Num b:"))
c = float(input("Num c:"))
d = float(input("Num d:"))
print("Intervalo 1: ", a,",", b)
print("Intervalo 2: ", c,",",d)

if (b<=a) or (d<=c):
	print("Entradas invalidas")
elif(b<c):
	print("Nao ha intersecao")
else:
	print("Ha intersecao")
	
		
	
-- EXECUTION TIME:
0.143528
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1:  1.5 , 5.0
Intervalo 2:  2.5 , 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1:  -1.0 , -3.0
Intervalo 2:  1.0 , 3.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
