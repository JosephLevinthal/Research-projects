== TEST (2019-06-27 11:59:09) 
-- CODE:
from numpy import *
from numpy.linalg import *
vet = array(eval(input()))
vet = vet.T
mat = array([[2, 1, 4], [ 1, 2, 0], [ 2, 3, 2]])
soma = dot(inv(mat), vet)
print("estafilococo:", soma[0])
print("salmonela:", soma[1])
print("coli:", soma[2])
if soma[0] == max(soma):
	print("estafilococo")
elif soma[1] == max(soma):
	print("salmonela"):
else:
	print("coli")


-- ERROR:
File "XXXX", line 13
    print("salmonela"):
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 11:59:26) 
-- CODE:
from numpy import *
from numpy.linalg import *
vet = array(eval(input()))
vet = vet.T
mat = array([[2, 1, 4], [ 1, 2, 0], [ 2, 3, 2]])
soma = dot(inv(mat), vet)
print("estafilococo:", soma[0])
print("salmonela:", soma[1])
print("coli:", soma[2])
if soma[0] == max(soma):
	print("estafilococo")
elif soma[1] == max(soma):
	print("salmonela")
else:
	print("coli")


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 12:00:09) 
-- CODE:
from numpy import *
from numpy.linalg import *
vet = array(eval(input()))
vet = vet.T
mat = array([[2, 1, 4], [ 1, 2, 0], [ 2, 3, 2]])
soma = dot(inv(mat), vet)
print("estafilococo:", soma[0])
print("salmonela:", soma[1])
print("coli:", soma[2])
if soma[0] == min(soma):
	print("estafilococo")
elif soma[1] == min(soma):
	print("salmonela")
else:
	print("coli")


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-27 12:00:23) 
-- CODE:
from numpy import *
from numpy.linalg import *
vet = array(eval(input()))
vet = vet.T
mat = array([[2, 1, 4], [ 1, 2, 0], [ 2, 3, 2]])
soma = dot(inv(mat), vet)
print("estafilococo:", soma[0])
print("salmonela:", soma[1])
print("coli:", soma[2])
if soma[0] == min(soma):
	print("estafilococo")
elif soma[1] == min(soma):
	print("salmonela")
else:
	print("coli")


-- EXECUTION TIME:
0.948416
-- TEST CASE 1:
---- input:
[3955.25,5652.36,8562.22]
---- correct output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
---- user output:
estafilococo: 1923.4200000000055
salmonela: 1864.4699999999993
coli: -439.01500000000124
coli
-- TEST CASE 2:
---- input:
[2095.52,1855.75,11295.21]

---- correct output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo

---- user output:
estafilococo: -31711.049999999996
salmonela: 16783.399999999998
coli: 12183.554999999998
estafilococo
-- TEST CASE 3:
---- input:
[8596.14,3212.68,2652.11]
---- correct output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela

---- user output:
estafilococo: 22647.239999999998
salmonela: -9717.279999999999
coli: -6745.265
salmonela
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-27 12:00:32) 
-- CODE:
from numpy import *
from numpy.linalg import *
vet = array(eval(input()))
vet = vet.T
mat = array([[2, 1, 4], [ 1, 2, 0], [ 2, 3, 2]])
soma = dot(inv(mat), vet)
print("estafilococo:", soma[0])
print("salmonela:", soma[1])
print("coli:", soma[2])
if soma[0] == min(soma):
	print("estafilococo")
elif soma[1] == min(soma):
	print("salmonela")
else:
	print("coli")


-- EXECUTION TIME:
1.03472
-- TEST CASE 1:
---- input:
[3955.25,5652.36,8562.22]
---- correct output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
---- user output:
estafilococo: 1923.4200000000055
salmonela: 1864.4699999999993
coli: -439.01500000000124
coli
-- TEST CASE 2:
---- input:
[2095.52,1855.75,11295.21]

---- correct output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo

---- user output:
estafilococo: -31711.049999999996
salmonela: 16783.399999999998
coli: 12183.554999999998
estafilococo
-- TEST CASE 3:
---- input:
[8596.14,3212.68,2652.11]
---- correct output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela

---- user output:
estafilococo: 22647.239999999998
salmonela: -9717.279999999999
coli: -6745.265
salmonela
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 12:01:05) 
-- CODE:
from numpy import *
from numpy.linalg import *
vet = array(eval(input()))
vet = vet.T
mat = array([[2, 1, 4], [ 1, 2, 0], [ 2, 3, 2]])
soma = dot(inv(mat), vet)
print("estafilococo:", soma[0])
print("salmonela:", soma[1])
print("coli:", soma[2])
if soma[0] == min(soma):
	print("estafilococo")
elif soma[1] == min(soma):
	print("salmonela")
else:
	print("coli")


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 12:02:26) 
-- CODE:
from numpy import *
from numpy.linalg import *
vet = array(eval(input()))
vet = vet.T
mat = array([[2, 1, 4], [ 1, 2, 0], [ 2, 3, 2]])
soma = dot(inv(mat), vet)
print("estafilococo: ", soma[0])
print("salmonela: ", soma[1])
print("coli: ", soma[2])
if soma[0] == min(soma):
	print("estafilococo")
elif soma[1] == min(soma):
	print("salmonela")
else:
	print("coli")


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 12:02:47) 
-- CODE:
from numpy import *
from numpy.linalg import *
vet = array(eval(input()))
vet = vet.T
mat = array([[2, 1, 4], [ 1, 2, 0], [ 2, 3, 2]])
soma = dot(inv(mat), vet)
print("estafilococo:", soma[0])
print("salmonela:", soma[1])
print("coli:", soma[2])
if soma[0] == min(soma):
	print("estafilococo")
elif soma[1] == min(soma):
	print("salmonela")
else:
	print("coli")


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 12:04:15) 
-- CODE:
from numpy import *
from numpy.linalg import *
vet = array(eval(input()))
vet = vet.T
mat = array([[2, 1, 4], [ 1, 2, 0], [ 2, 3, 2]])
soma = dot(inv(mat), vet)
print("estafilococo:", round(soma[0], 1)
print("salmonela:", round(soma[1], 1)
print("coli:", round(soma[2], 1)
if soma[0] == min(soma):
	print("estafilococo")
elif soma[1] == min(soma):
	print("salmonela")
else:
	print("coli")


-- ERROR:
File "XXXX", line 8
    print("salmonela:", round(soma[1], 1)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 12:04:45) 
-- CODE:
from numpy import *
from numpy.linalg import *
vet = array(eval(input()))
vet = vet.T
mat = array([[2, 1, 4], [ 1, 2, 0], [ 2, 3, 2]])
soma = dot(inv(mat), vet)
print("estafilococo:", round(soma[0], 1))
print("salmonela:", round(soma[1], 1))
print("coli:", round(soma[2], 1))
if soma[0] == min(soma):
	print("estafilococo")
elif soma[1] == min(soma):
	print("salmonela")
else:
	print("coli")


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-27 12:04:54) 
-- CODE:
from numpy import *
from numpy.linalg import *
vet = array(eval(input()))
vet = vet.T
mat = array([[2, 1, 4], [ 1, 2, 0], [ 2, 3, 2]])
soma = dot(inv(mat), vet)
print("estafilococo:", round(soma[0], 1))
print("salmonela:", round(soma[1], 1))
print("coli:", round(soma[2], 1))
if soma[0] == min(soma):
	print("estafilococo")
elif soma[1] == min(soma):
	print("salmonela")
else:
	print("coli")


-- EXECUTION TIME:
1.14191
-- TEST CASE 1:
---- input:
[3955.25,5652.36,8562.22]
---- correct output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
---- user output:
estafilococo: 1923.4
salmonela: 1864.5
coli: -439.0
coli
-- TEST CASE 2:
---- input:
[2095.52,1855.75,11295.21]

---- correct output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo

---- user output:
estafilococo: -31711.0
salmonela: 16783.4
coli: 12183.6
estafilococo
-- TEST CASE 3:
---- input:
[8596.14,3212.68,2652.11]
---- correct output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela

---- user output:
estafilococo: 22647.2
salmonela: -9717.3
coli: -6745.3
salmonela
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
