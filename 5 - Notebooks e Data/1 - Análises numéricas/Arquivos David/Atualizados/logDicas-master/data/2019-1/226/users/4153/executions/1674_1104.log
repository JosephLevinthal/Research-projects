== TEST (2019-04-30 12:39:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Insira o numero: "))
b = float(input("Insira o numero: "))
c = float(input("Insira o numero: "))
d = float(input("Insira o numero: "))
print("Intervalo 1:", a,",",b)
print("Intervalo 2:", c,",",d)

if((b > a) or (d > c)):
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Entradas invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:40:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Insira o numero: "))
b = float(input("Insira o numero: "))
c = float(input("Insira o numero: "))
d = float(input("Insira o numero: "))
print("Intervalo 1:", a,",",b)
print("Intervalo 2:", c,",",d)

if((b < a) or (d < c)):
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:54:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Insira o numero: "))
b = float(input("Insira o numero: "))
c = float(input("Insira o numero: "))
d = float(input("Insira o numero: "))
print("Intervalo 1:", a,",",b)
print("Intervalo 2:", c,",",d)
a----b c-----d
if((b < a) or (d < c)):
	print("Entradas invalidas")
elif((a == c) or (a == d) or (b == c) or (b == d)):
	print("Ha intersecao")
elif(((c < a) and (d > b)) or ((d > b) and (c < b))):
	print("Ha intersecao")
elif(c > b):
	print("Nao ha intersecao")
-- ERROR:
File "XXXX", line 10
    a----b c-----d
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:54:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Insira o numero: "))
b = float(input("Insira o numero: "))
c = float(input("Insira o numero: "))
d = float(input("Insira o numero: "))
print("Intervalo 1:", a,",",b)
print("Intervalo 2:", c,",",d)

if((b < a) or (d < c)):
	print("Entradas invalidas")
elif((a == c) or (a == d) or (b == c) or (b == d)):
	print("Ha intersecao")
elif(((c < a) and (d > b)) or ((d > b) and (c < b))):
	print("Ha intersecao")
elif(c > b):
	print("Nao ha intersecao")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:56:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Insira o numero: "))
b = float(input("Insira o numero: "))
c = float(input("Insira o numero: "))
d = float(input("Insira o numero: "))
print("Intervalo 1:", a,",",b)
print("Intervalo 2:", c,",",d)

if((b < a) or (d < c)):
	print("Entradas invalidas")
elif((a == c) or (a == d) or (b == c) or (b == d)):
	print("Ha intersecao")
elif(((c < a) and (d > b)) or ((d > b) and (c < b))):
	print("Ha intersecao")
elif(c > b):
	print("Nao ha intersecao")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:57:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Insira o numero: "))
b = float(input("Insira o numero: "))
c = float(input("Insira o numero: "))
d = float(input("Insira o numero: "))
print("Intervalo 1:", a,",",b)
print("Intervalo 2:", c,",",d)

if((b < a) or (d < c)):
	print("Entradas invalidas")
elif((a == c) or (a == d) or (b == c) or (b == d)):
	print("Ha intersecao")
elif(((c < a) and (d > b)) or ((d > b) and (c < b))):
	print("Ha intersecao")
elif(c > b):
	print("Nao ha intersecao")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:57:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Insira o numero: "))
b = float(input("Insira o numero: "))
c = float(input("Insira o numero: "))
d = float(input("Insira o numero: "))
print("Intervalo 1:", a,",",b)
print("Intervalo 2:", c,",",d)

if((b > a) or (d > c)):
	print("Entradas invalidas")
elif((a == c) or (a == d) or (b == c) or (b == d)):
	print("Ha intersecao")
elif(((c < a) and (d > b)) or ((d > b) and (c < b))):
	print("Ha intersecao")
elif(c > b):
	print("Nao ha intersecao")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Entradas invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:57:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Insira o numero: "))
b = float(input("Insira o numero: "))
c = float(input("Insira o numero: "))
d = float(input("Insira o numero: "))
print("Intervalo 1:", a,",",b)
print("Intervalo 2:", c,",",d)

if((b < a) or (d < c)):
	print("Entradas invalidas")
elif((a == c) or (a == d) or (b == c) or (b == d)):
	print("Ha intersecao")
elif(((c < a) and (d > b)) or ((d > b) and (c < b))):
	print("Ha intersecao")
elif(c > b):
	print("Nao ha intersecao")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 13:00:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Insira o numero: "))
b = float(input("Insira o numero: "))
c = float(input("Insira o numero: "))
d = float(input("Insira o numero: "))
print("Intervalo 1:", a,",",b)
print("Intervalo 2:", c,",",d)

if((b < a) or (d < c)):
	print("Entradas invalidas")
elif((c <= a) and (d >= a)):
	print("Ha intersecao")
elif((c > b)):
	print("Nao ha intersecao")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 13:01:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Insira o numero: "))
b = float(input("Insira o numero: "))
c = float(input("Insira o numero: "))
d = float(input("Insira o numero: "))
print("Intervalo 1:", a,",",b)
print("Intervalo 2:", c,",",d)

if((b < a) or (d < c)):
	print("Entradas invalidas")
elif((c <= a) and (d >= a)):
	print("Ha intersecao")
else:
	print("Nao ha intersecao")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 13:01:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Insira o numero: "))
b = float(input("Insira o numero: "))
c = float(input("Insira o numero: "))
d = float(input("Insira o numero: "))
print("Intervalo 1:", a,",",b)
print("Intervalo 2:", c,",",d)

if((b < a) or (d < c)):
	print("Entradas invalidas")
elif((c <= a) and (d >= a)):
	print("Ha intersecao")
else:
	print("Nao ha intersecao")
-- EXECUTION TIME:
0.194553
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 13:02:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Insira o numero: "))
b = float(input("Insira o numero: "))
c = float(input("Insira o numero: "))
d = float(input("Insira o numero: "))
print("Intervalo 1:", a,",",b)
print("Intervalo 2:", c,",",d)

if((b < a) or (d < c)):
	print("Entradas invalidas")
elif((c <= a) and (d >= a)):
	print("Ha intersecao")
else:
	print("Nao ha intersecao")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 13:02:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Insira o numero: "))
b = float(input("Insira o numero: "))
c = float(input("Insira o numero: "))
d = float(input("Insira o numero: "))
print("Intervalo 1:", a,",",b)
print("Intervalo 2:", c,",",d)

if((b < a) or (d < c)):
	print("Entradas invalidas")

elif((c <= b) and (d >= a)):
	print("Ha intersecao")

else:
	print("Nao ha intersecao")
-- EXECUTION TIME:
0.226631
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
