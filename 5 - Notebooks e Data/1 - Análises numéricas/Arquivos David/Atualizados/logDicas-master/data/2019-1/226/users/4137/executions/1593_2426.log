== TEST (2019-03-23 21:17:37) 
-- CODE:
time = float(input("Tempo:"))
horas = time
h1 = (horas*100) #PRA SEPARAR OS MINUTOS
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int(2.22) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS
print(h5)

-- OUTPUT:
2.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 21:21:08) 
-- CODE:
time = float(input("Tempo:"))
horas = time
h1 = (horas*100) #PRA SEPARAR OS MINUTOS
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int(2.22) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(dist)
print(qtdl)
-- OUTPUT:
200.0
16.666666666666668
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 21:21:33) 
-- CODE:
time = float(input("Tempo:"))
horas = time
h1 = (horas*100) #PRA SEPARAR OS MINUTOS
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int(2.22) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(dist)
print(qtdl)
-- EXECUTION TIME:
0.138296
-- TEST CASE 1:
---- input:
9
100
---- correct output:
900.0
75.0
---- user output:
200.0
16.666666666666668
-- TEST CASE 2:
---- input:
5
120

---- correct output:
600.0
50.0

---- user output:
240.0
20.0
-- TEST CASE 3:
---- input:
1.2
80
---- correct output:
96.0
8.0

---- user output:
186.66666666666669
15.555555555555557
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 21:22:09) 
-- CODE:
time = float(input("Tempo:"))
horas = time
h1 = (horas*100) #PRA SEPARAR OS MINUTOS
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int(time) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(dist)
print(qtdl)
-- OUTPUT:
900.0
75.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 21:22:17) 
-- CODE:
time = float(input("Tempo:"))
horas = time
h1 = (horas*100) #PRA SEPARAR OS MINUTOS
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int(time) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(dist)
print(qtdl)
-- EXECUTION TIME:
0.183026
-- TEST CASE 1:
---- input:
9
100
---- correct output:
900.0
75.0
---- user output:
900.0
75.0
-- TEST CASE 2:
---- input:
5
120

---- correct output:
600.0
50.0

---- user output:
600.0
50.0
-- TEST CASE 3:
---- input:
1.2
80
---- correct output:
96.0
8.0

---- user output:
106.66666666666666
8.888888888888888
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 21:22:18) 
-- CODE:
time = float(input("Tempo:"))
horas = time
h1 = (horas*100) #PRA SEPARAR OS MINUTOS
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int(time) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(dist)
print(qtdl)
-- EXECUTION TIME:
0.217647
-- TEST CASE 1:
---- input:
9
100
---- correct output:
900.0
75.0
---- user output:
900.0
75.0
-- TEST CASE 2:
---- input:
5
120

---- correct output:
600.0
50.0

---- user output:
900.0
75.0
-- TEST CASE 3:
---- input:
1.2
80
---- correct output:
96.0
8.0

---- user output:
106.66666666666666
8.888888888888888
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 21:22:18) 
-- CODE:
time = float(input("Tempo:"))
horas = time
h1 = (horas*100) #PRA SEPARAR OS MINUTOS
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int(time) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(dist)
print(qtdl)
-- EXECUTION TIME:
0.099297
-- TEST CASE 1:
---- input:
9
100
---- correct output:
900.0
75.0
---- user output:
900.0
75.0
-- TEST CASE 2:
---- input:
5
120

---- correct output:
600.0
50.0

---- user output:
900.0
75.0
-- TEST CASE 3:
---- input:
1.2
80
---- correct output:
96.0
8.0

---- user output:
600.0
50.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 21:22:19) 
-- CODE:
time = float(input("Tempo:"))
horas = time
h1 = (horas*100) #PRA SEPARAR OS MINUTOS
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int(time) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(dist)
print(qtdl)
-- EXECUTION TIME:
0.209471
-- TEST CASE 1:
---- input:
9
100
---- correct output:
900.0
75.0
---- user output:
106.66666666666666
8.888888888888888
-- TEST CASE 2:
---- input:
5
120

---- correct output:
600.0
50.0

---- user output:

-- TEST CASE 3:
---- input:
1.2
80
---- correct output:
96.0
8.0

---- user output:
106.66666666666666
8.888888888888888
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 21:22:19) 
-- CODE:
time = float(input("Tempo:"))
horas = time
h1 = (horas*100) #PRA SEPARAR OS MINUTOS
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int(time) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(dist)
print(qtdl)
-- EXECUTION TIME:
0.298915
-- TEST CASE 1:
---- input:
9
100
---- correct output:
900.0
75.0
---- user output:
600.0
50.0
-- TEST CASE 2:
---- input:
5
120

---- correct output:
600.0
50.0

---- user output:
106.66666666666666
8.888888888888888
-- TEST CASE 3:
---- input:
1.2
80
---- correct output:
96.0
8.0

---- user output:
106.66666666666666
8.888888888888888
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 21:22:19) 
-- CODE:
time = float(input("Tempo:"))
horas = time
h1 = (horas*100) #PRA SEPARAR OS MINUTOS
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int(time) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(dist)
print(qtdl)
-- EXECUTION TIME:
0.092489
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1593/2426/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 21:22:19) 
-- CODE:
time = float(input("Tempo:"))
horas = time
h1 = (horas*100) #PRA SEPARAR OS MINUTOS
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int(time) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(dist)
print(qtdl)
-- EXECUTION TIME:
0.121239
-- TEST CASE 1:
---- input:
9
100
---- correct output:
900.0
75.0
---- user output:
900.0
75.0
-- TEST CASE 2:
---- input:
5
120

---- correct output:
600.0
50.0

---- user output:
600.0
50.0
-- TEST CASE 3:
---- input:
1.2
80
---- correct output:
96.0
8.0

---- user output:
106.66666666666666
8.888888888888888
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 21:22:50) 
-- CODE:
time = float(input("Tempo:"))
horas = time
h1 = (horas*100) #PRA SEPARAR OS MINUTOS
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int(time) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(dist)
print(qtdl)
-- OUTPUT:
900.0
75.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 21:23:23) 
-- CODE:
time = float(input("Tempo:"))
horas = time
h1 = (horas*100) #PRA SEPARAR OS MINUTOS
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int(time) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(dist)
print(qtdl)
-- EXECUTION TIME:
0.135579
-- TEST CASE 1:
---- input:
9
100
---- correct output:
900.0
75.0
---- user output:
900.0
75.0
-- TEST CASE 2:
---- input:
5
120

---- correct output:
600.0
50.0

---- user output:
600.0
50.0
-- TEST CASE 3:
---- input:
1.2
80
---- correct output:
96.0
8.0

---- user output:
106.66666666666666
8.888888888888888
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 21:43:30) 
-- CODE:
time = float(input("Tempo:"))
horas = time
h1 = (horas*100) #PRA SEPARAR OS MINUTOS EM h2
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int(time) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(dist)
print(qtdl)
-- EXECUTION TIME:
0.178684
-- TEST CASE 1:
---- input:
9
100
---- correct output:
900.0
75.0
---- user output:
900.0
75.0
-- TEST CASE 2:
---- input:
5
120

---- correct output:
600.0
50.0

---- user output:
600.0
50.0
-- TEST CASE 3:
---- input:
1.2
80
---- correct output:
96.0
8.0

---- user output:
106.66666666666666
8.888888888888888
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 21:43:31) 
-- CODE:
time = float(input("Tempo:"))
horas = time
h1 = (horas*100) #PRA SEPARAR OS MINUTOS EM h2
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int(time) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(dist)
print(qtdl)
-- OUTPUT:
900.0
75.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 21:45:10) 
-- CODE:
time = float(input("Tempo:"))
horas = time
h1 = (horas*100) #PRA SEPARAR OS MINUTOS EM h2
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int(time) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(dist)
print(qtdl)
-- EXECUTION TIME:
0.146569
-- TEST CASE 1:
---- input:
9
100
---- correct output:
900.0
75.0
---- user output:
900.0
75.0
-- TEST CASE 2:
---- input:
5
120

---- correct output:
600.0
50.0

---- user output:
600.0
50.0
-- TEST CASE 3:
---- input:
1.2
80
---- correct output:
96.0
8.0

---- user output:
106.66666666666666
8.888888888888888
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 21:45:26) 
-- CODE:
time = float(input("Tempo:"))
horas = time
h1 = (horas*100) #PRA SEPARAR OS MINUTOS EM h2
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int(time) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(dist)
print(qtdl)
-- OUTPUT:
900.0
75.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 21:45:46) 
-- CODE:
time = float(input("Tempo:"))
horas = time
h1 = (horas*100) #PRA SEPARAR OS MINUTOS EM h2
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int(time) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(dist)
print(qtdl)
-- EXECUTION TIME:
0.233042
-- TEST CASE 1:
---- input:
9
100
---- correct output:
900.0
75.0
---- user output:
900.0
75.0
-- TEST CASE 2:
---- input:
5
120

---- correct output:
600.0
50.0

---- user output:
600.0
50.0
-- TEST CASE 3:
---- input:
1.2
80
---- correct output:
96.0
8.0

---- user output:
106.66666666666666
8.888888888888888
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 21:47:36) 
-- CODE:
time = float(input("Tempo:"))
horas = time
h1 = (horas*100) #PRA SEPARAR OS MINUTOS EM h2
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int(round((time)) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(dist)
print(qtdl)
-- ERROR:
File "XXXX", line 7
    h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 21:47:54) 
-- CODE:
time = float(input("Tempo:"))
horas = time
h1 = (horas*100) #PRA SEPARAR OS MINUTOS EM h2
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int(time) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(dist)
print(qtdl)
-- OUTPUT:
900.0
75.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 21:48:09) 
-- CODE:
time = float(input("Tempo:"))
horas = time
h1 = (horas*100) #PRA SEPARAR OS MINUTOS EM h2
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int(round((time)) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(dist)
print(qtdl)
-- ERROR:
File "XXXX", line 7
    h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 21:48:12) 
-- CODE:
time = float(input("Tempo:"))
horas = time
h1 = (horas*100) #PRA SEPARAR OS MINUTOS EM h2
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int(round((time))) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(dist)
print(qtdl)
-- OUTPUT:
900.0
75.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 21:48:29) 
-- CODE:
time = float(input("Tempo:"))
horas = time
h1 = (horas*100) #PRA SEPARAR OS MINUTOS EM h2
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int(round((time))) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(dist)
print(qtdl)
-- EXECUTION TIME:
0.150188
-- TEST CASE 1:
---- input:
9
100
---- correct output:
900.0
75.0
---- user output:
900.0
75.0
-- TEST CASE 2:
---- input:
5
120

---- correct output:
600.0
50.0

---- user output:
600.0
50.0
-- TEST CASE 3:
---- input:
1.2
80
---- correct output:
96.0
8.0

---- user output:
106.66666666666666
8.888888888888888
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 21:48:29) 
-- CODE:
time = float(input("Tempo:"))
horas = time
h1 = (horas*100) #PRA SEPARAR OS MINUTOS EM h2
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int(round((time))) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(dist)
print(qtdl)
-- EXECUTION TIME:
0.115098
-- TEST CASE 1:
---- input:
9
100
---- correct output:
900.0
75.0
---- user output:
900.0
75.0
-- TEST CASE 2:
---- input:
5
120

---- correct output:
600.0
50.0

---- user output:
600.0
50.0
-- TEST CASE 3:
---- input:
1.2
80
---- correct output:
96.0
8.0

---- user output:
106.66666666666666
8.888888888888888
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 21:48:35) 
-- CODE:
time = float(input("Tempo:"))
horas = time
h1 = (horas*100) #PRA SEPARAR OS MINUTOS EM h2
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int(round((time, 3))) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(dist)
print(qtdl)
-- EXECUTION TIME:
0.188073
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1593/2426/main.py", line 6, in <module>
    h4 = int(round((time, 3))) #SEPARA AS HORAS
TypeError: type tuple doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 21:48:36) 
-- CODE:
time = float(input("Tempo:"))
horas = time
h1 = (horas*100) #PRA SEPARAR OS MINUTOS EM h2
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int(round((time, 3))) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(dist)
print(qtdl)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    h4 = int(round((time, 3))) #SEPARA AS HORAS
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 21:49:16) 
-- CODE:
time = float(input("Tempo:"))
horas = time
h1 = (horas*100) #PRA SEPARAR OS MINUTOS EM h2
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int(round((time, 3))) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(dist)
print(qtdl)
-- EXECUTION TIME:
0.149553
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1593/2426/main.py", line 6, in <module>
    h4 = int(round((time, 3))) #SEPARA AS HORAS
TypeError: type tuple doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 21:49:16) 
-- CODE:
time = float(input("Tempo:"))
horas = time
h1 = (horas*100) #PRA SEPARAR OS MINUTOS EM h2
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int(round((time, 3))) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(dist)
print(qtdl)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    h4 = int(round((time, 3))) #SEPARA AS HORAS
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 21:49:48) 
-- CODE:
time = float(input("Tempo:"))
horas = time
h1 = (horas*100) #PRA SEPARAR OS MINUTOS EM h2
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int(round((time, 3)) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(dist)
print(qtdl)
-- ERROR:
File "XXXX", line 7
    h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 21:49:59) 
-- CODE:
time = float(input("Tempo:"))
horas = time
h1 = (horas*100) #PRA SEPARAR OS MINUTOS EM h2
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int(round((time, 3))) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(dist)
print(qtdl)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    h4 = int(round((time, 3))) #SEPARA AS HORAS
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 21:50:24) 
-- CODE:
time = float(input("Tempo:"))
horas = time
h1 = (horas*100) #PRA SEPARAR OS MINUTOS EM h2
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int((time)) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(dist)
print(qtdl)
-- OUTPUT:
900.0
75.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 21:50:25) 
-- CODE:
time = float(input("Tempo:"))
horas = time
h1 = (horas*100) #PRA SEPARAR OS MINUTOS EM h2
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int((time)) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(dist)
print(qtdl)
-- EXECUTION TIME:
0.177957
-- TEST CASE 1:
---- input:
9
100
---- correct output:
900.0
75.0
---- user output:
900.0
75.0
-- TEST CASE 2:
---- input:
5
120

---- correct output:
600.0
50.0

---- user output:
600.0
50.0
-- TEST CASE 3:
---- input:
1.2
80
---- correct output:
96.0
8.0

---- user output:
106.66666666666666
8.888888888888888
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 21:50:25) 
-- CODE:
time = float(input("Tempo:"))
horas = time
h1 = (horas*100) #PRA SEPARAR OS MINUTOS EM h2
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int((time)) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(dist)
print(qtdl)
-- OUTPUT:
900.0
75.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 21:50:48) 
-- CODE:
time = float(input("Tempo:"))
horas = time
h1 = (horas*100) #PRA SEPARAR OS MINUTOS EM h2
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int((time)) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(dist)
print(qtdl)
-- OUTPUT:
900.0
75.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 21:51:02) 
-- CODE:
time = float(input("Tempo:"))
horas = time
h1 = (horas*100) #PRA SEPARAR OS MINUTOS EM h2
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int((time)) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(dist)
print(qtdl)
-- OUTPUT:
900.0
75.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 21:51:32) 
-- CODE:
time = float(input("Tempo:"))
horas = time
h1 = (horas*100) #PRA SEPARAR OS MINUTOS EM h2
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int((time)) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(round(dist, 3))
print(round(qtdl, 3))
-- OUTPUT:
900.0
75.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 21:51:42) 
-- CODE:
time = float(input("Tempo:"))
horas = time
h1 = (horas*100) #PRA SEPARAR OS MINUTOS EM h2
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int((time)) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(round(dist, 3))
print(round(qtdl, 3))
-- EXECUTION TIME:
0.169037
-- TEST CASE 1:
---- input:
9
100
---- correct output:
900.0
75.0
---- user output:
900.0
75.0
-- TEST CASE 2:
---- input:
5
120

---- correct output:
600.0
50.0

---- user output:
600.0
50.0
-- TEST CASE 3:
---- input:
1.2
80
---- correct output:
96.0
8.0

---- user output:
106.667
8.889
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 21:51:42) 
-- CODE:
time = float(input("Tempo:"))
horas = time
h1 = (horas*100) #PRA SEPARAR OS MINUTOS EM h2
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int((time)) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(round(dist, 3))
print(round(qtdl, 3))
-- OUTPUT:
900.0
75.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 21:53:28) 
-- CODE:
time = float(input("Tempo:"))
horas = time
h1 = (horas*100) #PRA SEPARAR OS MINUTOS EM h2
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int((time)) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(round(dist, 3))
print(round(qtdl, 3))
-- EXECUTION TIME:
0.144001
-- TEST CASE 1:
---- input:
9
100
---- correct output:
900.0
75.0
---- user output:
900.0
75.0
-- TEST CASE 2:
---- input:
5
120

---- correct output:
600.0
50.0

---- user output:
600.0
50.0
-- TEST CASE 3:
---- input:
1.2
80
---- correct output:
96.0
8.0

---- user output:
106.667
8.889
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 21:53:30) 
-- CODE:
time = float(input("Tempo:"))
horas = time
h1 = (horas*100) #PRA SEPARAR OS MINUTOS EM h2
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int((time)) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(round(dist, 3))
print(round(qtdl, 3))
-- OUTPUT:
900.0
75.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 21:53:30) 
-- CODE:
time = float(input("Tempo:"))
horas = time
h1 = (horas*100) #PRA SEPARAR OS MINUTOS EM h2
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int((time)) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(round(dist, 3))
print(round(qtdl, 3))
-- EXECUTION TIME:
0.161813
-- TEST CASE 1:
---- input:
9
100
---- correct output:
900.0
75.0
---- user output:
900.0
75.0
-- TEST CASE 2:
---- input:
5
120

---- correct output:
600.0
50.0

---- user output:
900.0
75.0
-- TEST CASE 3:
---- input:
1.2
80
---- correct output:
96.0
8.0

---- user output:
106.667
8.889
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 21:53:30) 
-- CODE:
time = float(input("Tempo:"))
horas = time
h1 = (horas*100) #PRA SEPARAR OS MINUTOS EM h2
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int((time)) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(round(dist, 3))
print(round(qtdl, 3))
-- EXECUTION TIME:
0.153114
-- TEST CASE 1:
---- input:
9
100
---- correct output:
900.0
75.0
---- user output:
600.0
50.0
-- TEST CASE 2:
---- input:
5
120

---- correct output:
600.0
50.0

---- user output:
900.0
75.0
-- TEST CASE 3:
---- input:
1.2
80
---- correct output:
96.0
8.0

---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 21:53:30) 
-- CODE:
time = float(input("Tempo:"))
horas = time
h1 = (horas*100) #PRA SEPARAR OS MINUTOS EM h2
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int((time)) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(round(dist, 3))
print(round(qtdl, 3))
-- EXECUTION TIME:
0.240018
-- TEST CASE 1:
---- input:
9
100
---- correct output:
900.0
75.0
---- user output:
600.0
50.0
-- TEST CASE 2:
---- input:
5
120

---- correct output:
600.0
50.0

---- user output:
600.0
50.0
-- TEST CASE 3:
---- input:
1.2
80
---- correct output:
96.0
8.0

---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 21:53:30) 
-- CODE:
time = float(input("Tempo:"))
horas = time
h1 = (horas*100) #PRA SEPARAR OS MINUTOS EM h2
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int((time)) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(round(dist, 3))
print(round(qtdl, 3))
-- EXECUTION TIME:
0.190419
-- TEST CASE 1:
---- input:
9
100
---- correct output:
900.0
75.0
---- user output:
600.0
50.0
-- TEST CASE 2:
---- input:
5
120

---- correct output:
600.0
50.0

---- user output:
Tempo:Velocidade:106.667
8.889
-- TEST CASE 3:
---- input:
1.2
80
---- correct output:
96.0
8.0

---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 21:53:30) 
-- CODE:
time = float(input("Tempo:"))
horas = time
h1 = (horas*100) #PRA SEPARAR OS MINUTOS EM h2
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int((time)) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(round(dist, 3))
print(round(qtdl, 3))
-- EXECUTION TIME:
0.477747
-- TEST CASE 1:
---- input:
9
100
---- correct output:
900.0
75.0
---- user output:
Tempo:Velocidade:106.667
8.889
-- TEST CASE 2:
---- input:
5
120

---- correct output:
600.0
50.0

---- user output:

-- TEST CASE 3:
---- input:
1.2
80
---- correct output:
96.0
8.0

---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 21:54:32) 
-- CODE:
time = float(input("Tempo:"))
h1 = (time*100) #PRA SEPARAR OS MINUTOS EM h2
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int((time)) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(round(dist, 3))
print(round(qtdl, 3))
-- OUTPUT:
900.0
75.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 21:54:53) 
-- CODE:
time = float(input("Tempo:"))
h1 = (time*100) #PRA SEPARAR OS MINUTOS EM h2
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int((time)) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(round(dist, 3))
print(round(qtdl, 3))
-- EXECUTION TIME:
0.148204
-- TEST CASE 1:
---- input:
9
100
---- correct output:
900.0
75.0
---- user output:
900.0
75.0
-- TEST CASE 2:
---- input:
5
120

---- correct output:
600.0
50.0

---- user output:
600.0
50.0
-- TEST CASE 3:
---- input:
1.2
80
---- correct output:
96.0
8.0

---- user output:
106.667
8.889
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 21:55:22) 
-- CODE:
time = float(input("Tempo:"))
h1 = (time*100) #PRA SEPARAR OS MINUTOS EM h2
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int((time)) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12.0)
print(round(dist, 3))
print(round(qtdl, 3))
-- EXECUTION TIME:
0.140519
-- TEST CASE 1:
---- input:
9
100
---- correct output:
900.0
75.0
---- user output:
900.0
75.0
-- TEST CASE 2:
---- input:
5
120

---- correct output:
600.0
50.0

---- user output:
600.0
50.0
-- TEST CASE 3:
---- input:
1.2
80
---- correct output:
96.0
8.0

---- user output:
106.667
8.889
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 21:55:23) 
-- CODE:
time = float(input("Tempo:"))
h1 = (time*100) #PRA SEPARAR OS MINUTOS EM h2
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int((time)) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12.0)
print(round(dist, 3))
print(round(qtdl, 3))
-- EXECUTION TIME:
0.226523
-- TEST CASE 1:
---- input:
9
100
---- correct output:
900.0
75.0
---- user output:
900.0
75.0
-- TEST CASE 2:
---- input:
5
120

---- correct output:
600.0
50.0

---- user output:
600.0
50.0
-- TEST CASE 3:
---- input:
1.2
80
---- correct output:
96.0
8.0

---- user output:
106.667
8.889
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 22:01:36) 
-- CODE:
time = float(input("Tempo:"))
h1 = (time*100) #PRA SEPARAR OS MINUTOS EM h2
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int((time)) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(round(dist, 3))
print(round(qtdl, 3))
-- EXECUTION TIME:
0.181486
-- TEST CASE 1:
---- input:
9
100
---- correct output:
900.0
75.0
---- user output:
900.0
75.0
-- TEST CASE 2:
---- input:
5
120

---- correct output:
600.0
50.0

---- user output:
600.0
50.0
-- TEST CASE 3:
---- input:
1.2
80
---- correct output:
96.0
8.0

---- user output:
106.667
8.889
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 22:01:48) 
-- CODE:
time = float(input("Tempo:"))
h1 = (time*100) #PRA SEPARAR OS MINUTOS EM h2
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int((time)) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*h5)
qtdl = (dist/12)
print(round(dist, 3))
print(round(qtdl, 3))
-- OUTPUT:
900.0
75.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 22:03:47) 
-- CODE:
time = float(input("Tempo:"))
h1 = (time*100) #PRA SEPARAR OS MINUTOS EM h2
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int((time)) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
h6 = (h5)
spd = float(input("Velocidade:"))
dist = (spd*h6)
qtdl = (dist/12)
print(round(dist, 3))
print(round(qtdl, 3))
-- OUTPUT:
900.0
75.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 22:03:55) 
-- CODE:
time = float(input("Tempo:"))
h1 = (time*100) #PRA SEPARAR OS MINUTOS EM h2
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int((time)) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
h6 = (h5)
spd = float(input("Velocidade:"))
dist = (spd*h6)
qtdl = (dist/12)
print(round(dist, 3))
print(round(qtdl, 3))
-- EXECUTION TIME:
0.140421
-- TEST CASE 1:
---- input:
9
100
---- correct output:
900.0
75.0
---- user output:
900.0
75.0
-- TEST CASE 2:
---- input:
5
120

---- correct output:
600.0
50.0

---- user output:
600.0
50.0
-- TEST CASE 3:
---- input:
1.2
80
---- correct output:
96.0
8.0

---- user output:
106.667
8.889
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 22:07:56) 
-- CODE:
time = float(input("Tempo:"))
h1 = (time*100) #PRA SEPARAR OS MINUTOS EM h2
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int((time)) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*time)
qtdl = (dist/12)
print(round(dist, 3))
print(round(qtdl, 3))
-- EXECUTION TIME:
0.14072
-- TEST CASE 1:
---- input:
9
100
---- correct output:
900.0
75.0
---- user output:
900.0
75.0
-- TEST CASE 2:
---- input:
5
120

---- correct output:
600.0
50.0

---- user output:
600.0
50.0
-- TEST CASE 3:
---- input:
1.2
80
---- correct output:
96.0
8.0

---- user output:
96.0
8.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 22:09:00) 
-- CODE:
time = float(input("Tempo:"))
h1 = (time*100) #PRA SEPARAR OS MINUTOS EM h2
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int((time)) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*time)
qtdl = (dist/12)
print(round(dist, 3))
print(round(qtdl, 3))
-- OUTPUT:
900.0
75.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 22:09:32) 
-- CODE:
time = float(input("Tempo:"))
h1 = (time*100) #PRA SEPARAR OS MINUTOS EM h2
h2 = (h1%100) #SEPARA OS MINUTOS
h3 = (h2/60) #PARTE REAL DOS MINUTOS
h4 = int((time)) #SEPARA AS HORAS
h5 = (h4+h3) #SOMA AS HORAS COM AS PARTES REAIS DOS MINUTOS (horas em número real)
spd = float(input("Velocidade:"))
dist = (spd*time)
qtdl = (dist/12)
print(round(dist, 3))
print(round(qtdl, 3))
-- OUTPUT:
900.0
75.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
