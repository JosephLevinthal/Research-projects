== TEST (2019-03-25 12:50:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
nA = int(input("digite o numero A: "))
nB = int(input("digite o numero B: "))
nC = int(input("digite o numero C: "))

print(min(nA, nB, nC))
print(max(nA, nB, nC))
-- OUTPUT:
-2
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 12:51:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
nA = int(input("digite o numero A: "))
nB = int(input("digite o numero B: "))
nC = int(input("digite o numero C: "))

print(min(nA, nB, nC))
print(max(nA, nB, nC))
-- EXECUTION TIME:
0.208647
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:56:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
nA = int(input("digite o numero A: "))
nB = int(input("digite o numero B: "))
nC = int(input("digite o numero C: "))

vlmin = (min(nA, nB, nC))
vlmax = (max(nA, nB, nC))
vlint = ((nA + nB + nC) - (vlmin - vlmax))

print(vlmin)
print(vlmax)
print(vlint)
-- OUTPUT:
-2
10
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 12:57:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
nA = int(input("digite o numero A: "))
nB = int(input("digite o numero B: "))
nC = int(input("digite o numero C: "))

vlmin = (min(nA, nB, nC))
vlmax = (max(nA, nB, nC))
vlint = ((nA + nB + nC) - (vlmin - vlmax))

print(vlmin)
print(vlmax)
print(vlint)
-- EXECUTION TIME:
0.161931
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
10
20
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:58:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
nA = int(input("digite o numero A: "))
nB = int(input("digite o numero B: "))
nC = int(input("digite o numero C: "))

vlmin = (min(nA, nB, nC))
vlmax = (max(nA, nB, nC))
vlint = ((nA + nB + nC) - (vlmin - vlmax))

print(vlmin)
print(vlmax)
print(vlint)
-- OUTPUT:
-2
10
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:58:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
nA = int(input("digite o numero A: "))
nB = int(input("digite o numero B: "))
nC = int(input("digite o numero C: "))

vlmin = (min(nA, nB, nC))
vlmax = (max(nA, nB, nC))
vlint = ((nA + nB + nC) - (vlmin + vlmax))

print(vlmin)
print(vlmax)
print(vlint)
-- OUTPUT:
-2
10
0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:59:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
nA = int(input("digite o numero A: "))
nB = int(input("digite o numero B: "))
nC = int(input("digite o numero C: "))

vlmin = (min(nA, nB, nC))
vlmax = (max(nA, nB, nC))
vlint = ((nA + nB + nC) - (vlmin + vlmax))

print(vlmin)
print(vlint)
print(vlmax)
-- OUTPUT:
-2
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 12:59:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
nA = int(input("digite o numero A: "))
nB = int(input("digite o numero B: "))
nC = int(input("digite o numero C: "))

vlmin = (min(nA, nB, nC))
vlmax = (max(nA, nB, nC))
vlint = ((nA + nB + nC) - (vlmin + vlmax))

print(vlmin)
print(vlint)
print(vlmax)
-- EXECUTION TIME:
0.180525
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
0
10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
