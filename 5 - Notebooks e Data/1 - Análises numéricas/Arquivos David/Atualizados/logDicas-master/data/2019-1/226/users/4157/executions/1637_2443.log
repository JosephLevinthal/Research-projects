== SUBMITION (2019-04-09 11:48:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("raio:"))
a = float(input("altura:"))
n = int(input("numero: (1/2)"))
v1 = (pi*(a**2)*(3*r - a))/3
v2 = ((4*pi(r**3))/3) - v1
if(n == 1):
	print(round(v1, 4))
else:
	print(round(v2, 4))
	

-- EXECUTION TIME:
0.199736
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1637/2443/main.py", line 9, in <module>
    v2 = ((4*pi(r**3))/3) - v1
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:48:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("raio:"))
a = float(input("altura:"))
n = int(input("numero: (1/2)"))
v1 = (pi*(a**2)*(3*r - a))/3
v2 = ((4*pi(r**3))/3) - v1
if(n == 1):
	print(round(v1, 4))
else:
	print(round(v2, 4))
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    v2 = ((4*pi(r**3))/3) - v1
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:49:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("raio:"))
a = float(input("altura:"))
n = int(input("numero: (1/2)"))
v1 = (pi*(a**2)*(3*r - a))/3
v2 = ((4*pi(r**3))/3) - v1
if(n == 1):
	print(round(v1, 4))
else:
	print(round(v2, 4))
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    v2 = ((4*pi(r**3))/3) - v1
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:50:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("raio:"))
a = float(input("altura:"))
n = int(input("numero: (1/2)"))
v1 = float((pi*(a**2)*(3*r - a))/3)
v2 = float(((4*pi(r**3))/3) - v1)
if(n == 1):
	print(round(v1, 4))
else:
	print(round(v2, 4))
	

-- EXECUTION TIME:
0.133877
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1637/2443/main.py", line 9, in <module>
    v2 = float(((4*pi(r**3))/3) - v1)
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:50:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("raio:"))
a = float(input("altura:"))
n = int(input("numero: (1/2)"))
v1 = float((pi*(a**2)*(3*r - a))/3)
v2 = float(((4*pi(r**3))/3) - v1)
if(n == 1):
	print(round(v1, 4))
else:
	print(round(v2, 4))
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    v2 = float(((4*pi(r**3))/3) - v1)
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:52:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("raio:"))
a = float(input("altura:"))
n = int(input("numero: (1/2)"))
v1 =(pi*(a**2)*(3*r-a))/3 
v2 = ((4*pi(r**3))/3) - v1
if(n == 1):
	print(round(v1, 4))
else:
	print(round(v2, 4))
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    v2 = ((4*pi(r**3))/3) - v1
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:55:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("raio:"))
a = float(input("altura:"))
n = int(input("numero: (1/2)"))
v1 =(pi*(a**2)*(3*r-a))/3 
v2 = ((4*pi*(r**3))/3) - v1
if(n == 1):
	print(round(v1, 4))
else:
	print(round(v2, 4))
	

-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:55:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("raio:"))
a = float(input("altura:"))
n = int(input("numero: (1/2)"))
v1 =(pi*(a**2)*(3*r-a))/3 
v2 = ((4*pi*(r**3))/3) - v1
if(n == 1):
	print(round(v1, 4))
else:
	print(round(v2, 4))
	

-- EXECUTION TIME:
0.146659
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
