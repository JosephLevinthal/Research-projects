== TEST (2019-03-26 11:30:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
a = float(input("valor da a: "))
b = float(input("valor de b: "))
c = float(input("valor de c: "))
s = a + b + c // 2
a1 = sqrt(s * (s - a) * (s - b) * (s - c))
-- OUTPUT:
PRIMEIRO_CASO_DE_TESTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:31:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
a = float(input("valor da a: "))
b = float(input("valor de b: "))
c = float(input("valor de c: "))
s = (a + b + c) // 2
a1 = sqrt(s * (s - a) * (s - b) * (s - c))
-- OUTPUT:
PRIMEIRO_CASO_DE_TESTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:31:40) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
a = float(input("valor da a: "))
b = float(input("valor de b: "))
c = float(input("valor de c: "))
s = (a + b + c) // 2
a1 = sqrt(s * (s - a) * (s - b) * (s - c))
-- OUTPUT:
PRIMEIRO_CASO_DE_TESTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:32:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
a = float(input("valor da a: "))
b = float(input("valor de b: "))
c = float(input("valor de c: "))
s = (a + b + c) // 2
a1 = sqrt(s * (s - a) * (s - b) * (s - c))
print(a1)
-- OUTPUT:
49.56813492557492
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:34:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
a = float(input("valor da a: "))
b = float(input("valor de b: "))
c = float(input("valor de c: "))
s = (a + b + c) // 2
a1 = sqrt(s * (s - a) * (s - b) * (s - c))
print(round(a1,5))
-- OUTPUT:
49.56813
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:34:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
a = float(input("valor da a: "))
b = float(input("valor de b: "))
c = float(input("valor de c: "))
s = (a + b + c) // 2
a1 = sqrt(s * (s - a) * (s - b) * (s - c))
print(round(s,5))
-- OUTPUT:
21.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 11:34:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
a = float(input("valor da a: "))
b = float(input("valor de b: "))
c = float(input("valor de c: "))
s = (a + b + c) // 2
a1 = sqrt(s * (s - a) * (s - b) * (s - c))
print(round(s,5))
-- EXECUTION TIME:
0.172253
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
21.0
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
60.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
65.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:35:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
a = float(input("valor da a: "))
b = float(input("valor de b: "))
c = float(input("valor de c: "))
s = (a + b + c) // 2
a1 = sqrt(s * (s - a) * (s - b) * (s - c))
print(round(s,5))
print(round(a1,5))
-- OUTPUT:
21.0
49.56813
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:37:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
a = float(input("valor da a: "))
b = float(input("valor de b: "))
c = float(input("valor de c: "))
s = (a + b + c) / 2
a1 = sqrt(s * (s - a) * (s - b) * (s - c))
print(round(a1,5))
-- OUTPUT:
69.41967
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 11:37:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
a = float(input("valor da a: "))
b = float(input("valor de b: "))
c = float(input("valor de c: "))
s = (a + b + c) / 2
a1 = sqrt(s * (s - a) * (s - b) * (s - c))
print(round(a1,5))
-- EXECUTION TIME:
0.160367
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.41967
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709.16654
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
