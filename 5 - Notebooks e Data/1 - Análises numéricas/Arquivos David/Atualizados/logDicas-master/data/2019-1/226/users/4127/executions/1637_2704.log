== TEST (2019-04-07 12:11:22) 
-- CODE:
nota = float(input("qual a nota do aluno? "))
notaB= nota+(nota*0.10)
if (nota>5):
	msg= notaB
else:
	msg= nota
print(msg)
-- OUTPUT:
5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 12:11:27) 
-- CODE:
nota = float(input("qual a nota do aluno? "))
notaB= nota+(nota*0.10)
if (nota>5):
	msg= notaB
else:
	msg= nota
print(msg)
-- EXECUTION TIME:
0.137487
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.0
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 12:13:33) 
-- CODE:
nota = float(input("qual a nota do aluno? "))
bb= input("o aluno recebera bonificacao?(S ou N) ")

notaB= nota+(nota*0.10)

if (bb.uper()== S)
	msg= notaB
else:
	msg= nota
print(msg)

-- ERROR:
File "XXXX", line 6
    if (bb.uper()== S)
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 12:14:02) 
-- CODE:
nota = float(input("qual a nota do aluno? "))
bb= input("o aluno recebera bonificacao?(S ou N) ")

notaB= nota+(nota*0.10)

if (bb.uper()==S):
	msg= notaB
else:
	msg= nota
print(msg)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if (bb.uper()==S):
AttributeError: 'str' object has no attribute 'uper'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 12:14:39) 
-- CODE:
nota = float(input("qual a nota do aluno? "))
bb= input("o aluno recebera bonificacao?(S ou N) ")

notaB= nota+(nota*0.10)

if (bb.upper()==S):
	msg= notaB
else:
	msg= nota
print(msg)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if (bb.upper()==S):
NameError: name 'S' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 12:15:00) 
-- CODE:
nota = float(input("qual a nota do aluno? "))
bb= input("o aluno recebera bonificacao?(S ou N) ")

notaB= nota+(nota*0.10)

if (bb.upper()==S):
	msg= notaB
else:
	msg= nota
print(msg)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if (bb.upper()==S):
NameError: name 'S' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 12:15:14) 
-- CODE:
nota = float(input("qual a nota do aluno? "))
bb= input("o aluno recebera bonificacao?(S ou N) ")

notaB= nota+(nota*0.10)

if (bb.upper()== "S"):
	msg= notaB
else:
	msg= nota
print(msg)

-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 12:15:22) 
-- CODE:
nota = float(input("qual a nota do aluno? "))
bb= input("o aluno recebera bonificacao?(S ou N) ")

notaB= nota+(nota*0.10)

if (bb.upper()== "S"):
	msg= notaB
else:
	msg= nota
print(msg)

-- EXECUTION TIME:
0.176331
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
