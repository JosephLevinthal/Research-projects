== TEST (2019-04-29 19:10:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

a = float(input("digite o numero a: "))
b = float(input("digite o numeoro b: "))
x = float(input("digite o x: "))

if (b <= a):
	print("entradas a e b invalidas")
-- OUTPUT:
420.0  extras e  20.0  de faltas 
R$ 500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:12:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

a = float(input("digite o numero a: "))
b = float(input("digite o numeoro b: "))

if (b <= a):
	print("entradas a e b invalidas")
else:
	x = float(input("digite o numero x: "))
	

-- OUTPUT:
420.0  extras e  20.0  de faltas 
R$ 500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:12:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

a = float(input("digite o numero a: "))
b = float(input("digite o numeoro b: "))

if (b <= a):
	print("entradas a e b invalidas")
else:
	x = float(input("digite o numero x: "))
	

-- OUTPUT:
420.0  extras e  20.0  de faltas 
R$ 500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:14:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

a = float(input("digite o numero a: "))
b = float(input("digite o numeoro b: "))

if (b <= a):
	print("entradas" a "e" b "invalidas")
else:
	x = float(input("digite o numero x: "))
	
	

-- ERROR:
File "XXXX", line 9
    print("entradas" a "e" b "invalidas")
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:14:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

a = float(input("digite o numero a: "))
b = float(input("digite o numeoro b: "))

if (b <= a):
	print("entradas" "a" "e" "b" "invalidas")
else:
	x = float(input("digite o numero x: "))
	
	

-- ERROR:
File "XXXX", line 9
    print("entradas" a "e" b "invalidas")
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:14:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

a = float(input("digite o numero a: "))
b = float(input("digite o numeoro b: "))

if (b <= a):
	print("entradas" a "e" b "invalidas")
else:
	x = float(input("digite o numero x: "))
	
	

-- ERROR:
File "XXXX", line 9
    print("entradas" a "e" b "invalidas")
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:14:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

a = float(input("digite o numero a: "))
b = float(input("digite o numeoro b: "))

if (b <= a):
	print("entradas " a " e " b " invalidas")
else:
	x = float(input("digite o numero x: "))
	
	

-- ERROR:
File "XXXX", line 9
    print("entradas " a " e " b " invalidas")
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:16:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

a = float(input("digite o numero a: "))
b = float(input("digite o numeoro b: "))

if (b <= a):
	print("entradas", a,  "e", b, "invalidas")
else:
	x = float(input("digite o numero x: "))
	
	

-- ERROR:
File "XXXX", line 9
    print("entradas " a " e " b " invalidas")
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:16:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

a = float(input("digite o numero a: "))
b = float(input("digite o numeoro b: "))

if (b <= a):
	print("entradas", a,  "e", b, "invalidas")
else:
	x = float(input("digite o numero x: "))
	if 
	
	

-- ERROR:
File "XXXX", line 12
    if 
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:20:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

a = float(input("digite o numero a: "))
b = float(input("digite o numeoro b: "))

if (b <= a):
	print("entradas", a,  "e", b, "invalidas")
else:
	x = float(input("digite o numero x: "))
	if (a<=x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	
	

-- ERROR:
File "XXXX", line 12
    if 
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:20:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

a = float(input("digite o numero a: "))
b = float(input("digite o numeoro b: "))

if (b <= a):
	print("entradas", a,  "e", b, "invalidas")
else:
	x = float(input("digite o numero x: "))
	if (a<=x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	
	

-- ERROR:
File "XXXX", line 12
    if 
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:21:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

a = float(input("digite o numero a: "))
b = float(input("digite o numeoro b: "))

if (b <= a):
	print("entradas", a,  "e", b, "invalidas")
else:
	x = float(input("digite o numero x: "))
	if (a<=x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	
	

-- ERROR:
File "XXXX", line 12
    if 
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:22:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

a = float(input("digite o numero a: "))
b = float(input("digite o numeoro b: "))

if (a <= b):
	print("entradas", a,  "e", b, "invalidas")
else:
	x = float(input("digite o numero x: "))
	if (a<=x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	
	

-- OUTPUT:
entradas 2.0 e 3.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:23:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

a = float(input("digite o numero a: "))
b = float(input("digite o numeoro b: "))

if (a <= b):
	print("entradas", a,  "e", b, "invalidas")
else:
	x = float(input("digite o numero x: "))
	if (b<=x<=a):
		print(x, "pertence ao intervalo", a, ",", b)
	
	

-- OUTPUT:
entradas 2.0 e 3.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:23:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

b = float(input("digite o numero b: "))
a = float(input("digite o numeoro a: "))

if (b <= a):
	print("entradas", a,  "e", b, "invalidas")
else:
	x = float(input("digite o numero x: "))
	if (b<=x<=a):
		print(x, "pertence ao intervalo", a, ",", b)
	
	

-- OUTPUT:
entradas 3.0 e 2.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:24:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

b = float(input("digite o numero b: "))
a = float(input("digite o numeoro a: "))

if (b <= a):
	print("entradas", a,  "e", b, "invalidas")
else:
	x = float(input("digite o numero x: "))
	if (a<=x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	
	

-- OUTPUT:
entradas 3.0 e 2.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:29:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero x: "))

if (b <= a):
	print("entradas", a,  "e", b, "invalidas")

	
	

-- OUTPUT:
entradas 3.0 e 2.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:29:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero b: "))

if (b <= a):
	print("entradas", a,  "e", b, "invalidas")

	
	

-- OUTPUT:
entradas 3.0 e 2.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:29:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero b: "))

if (b <= a):
	print("entradas", a,  "e", b, "invalidas")

	
	

-- OUTPUT:
entradas 3.0 e 2.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:31:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero b: "))

if (b <= a):
	print("entradas", a,  "e", b, "invalidas")
else:
	if(a<=x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	
	

-- OUTPUT:
entradas 3.0 e 2.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:34:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero b: "))

if (b <= a):
	print("entradas", a,  "e", b, "invalidas")
elif (a<=x<=b):
	print(x, "pertence ao intervalo", a, ",", b)
elif (a>=x>=b):
	print(x, "nao pertence ao intervalo", a,",",b)
	
	

-- OUTPUT:
entradas 3.0 e 2.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:34:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero b: "))

if (b <= a):
	print("entradas", a,  "e", b, "invalidas")
elif (a<=x<=b):
	print(x, "pertence ao intervalo", a, ",", b)
elif (a>=x>=b):
	print(x, "nao pertence ao intervalo", a,",",b)
	
	

-- OUTPUT:
entradas 3.0 e 2.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:34:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero b: "))

if (b <= a):
	print("entradas", a,  "e", b, "invalidas")
elif (a<=x<=b):
	print(x, "pertence ao intervalo", a, ",", b)
elif (a>=x>=b):
	print(x, "nao pertence ao intervalo", a,",",b)
	
	

-- OUTPUT:
entradas 3.0 e 2.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:34:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero b: "))

if (b <= a):
	print("entradas", a,  "e", b, "invalidas")
elif (a<=x<=b):
	print(x, "pertence ao intervalo", a, ",", b)
elif (a>=x>=b):
	print(x, "nao pertence ao intervalo", a,",",b)
	
	

-- OUTPUT:
entradas 3.0 e 2.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:37:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero b: "))

if (b <= a):
	print("entradas", a,  "e", b, "invalidas")
elif (a<=x<=b):
	print(x, "pertence ao intervalo", a, ",", b)
elif (a>=x>=b):
	print(x, "nao pertence ao intervalo", a,",",b)

	
	
	

-- OUTPUT:
entradas 3.0 e 2.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:41:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero b: "))

if (b <= a):
	print("entradas", a,  "e", b, "invalidas")
elif (a<=x<=b):
	print(x, "pertence ao intervalo", a, ",", b)
elif (a>=x>=b):
	print(x, "nao pertence ao intervalo", a,",",b)

	
	
	

-- OUTPUT:
entradas 3.0 e 2.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:42:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero b: "))

if (b <= a):
	print("entradas", a,  "e", b, "invalidas")
elif (a<=x<=b):
	print(x, "pertence ao intervalo", a, ",", b)
elif (a<=x>=b):
	print(x, "nao pertence ao intervalo", a,",",b)

	
	
	

-- OUTPUT:
entradas 3.0 e 2.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:42:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero b: "))

if (b <= a):
	print("entradas", a,  "e", b, "invalidas")
elif (a<=x<=b):
	print(x, "pertence ao intervalo", a, ",", b)
elif (a<=x>=b):
	print(x, "nao pertence ao intervalo", a,",",b)

	
	
	

-- OUTPUT:
entradas 3.0 e 2.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:42:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero b: "))

if (b <= a):
	print("entradas", a,  "e", b, "invalidas")
elif (a<=x<=b):
	print(x, "pertence ao intervalo", a, ",", b)
elif (a<=x>=b):
	print(x, "nao pertence ao intervalo", a,",",b)

	
	
	

-- OUTPUT:
entradas 3.0 e 2.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:43:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero b: "))

if (b <= a):
	print("entradas", a,  "e", b, "invalidas")
elif (a<=x<=b):
	print(x, "pertence ao intervalo", a, ",", b)
elif (a<=x>=b) and (a>=x<=b:
	print(x, "nao pertence ao intervalo", a,",",b)

	
	
	

-- ERROR:
File "XXXX", line 13
    elif (a<=x>=b) and (a>=x<=b:
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:43:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero b: "))

if (b <= a):
	print("entradas", a,  "e", b, "invalidas")
elif (a<=x<=b):
	print(x, "pertence ao intervalo", a, ",", b)
elif (a<=x>=b) and (a>=x<=b):
	print(x, "nao pertence ao intervalo", a,",",b)

	
	
	

-- ERROR:
File "XXXX", line 13
    elif (a<=x>=b) and (a>=x<=b:
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:44:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero b: "))

if (b <= a):
	print("entradas", a,  "e", b, "invalidas")
elif (a<=x<=b):
	print(x, "pertence ao intervalo", a, ",", b)
elif (a<=x>=b) or (a>=x<=b):
	print(x, "nao pertence ao intervalo", a,",",b)

	
	
	

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:44:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero b: "))

if (b <= a):
	print("entradas", a,  "e", b, "invalidas")
elif (a<=x<=b):
	print(x, "pertence ao intervalo", a, ",", b)
elif (a<=x>=b) or (a>=x<=b):
	print(x, "nao pertence ao intervalo", a,",",b)

	
	
	

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:44:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero b: "))

if (b <= a):
	print("entradas", a,  "e", b, "invalidas")
elif (a<=x<=b):
	print(x, "pertence ao intervalo", a, ",", b)
elif (a<=x>=b) or (a>=x<=b):
	print(x, "nao pertence ao intervalo", a,",",b)

	
	
	

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:44:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero b: "))

if (b <= a):
	print("entradas", a,  "e", b, "invalidas")
elif (a<=x<=b):
	print(x, "pertence ao intervalo", a, ",", b)
elif (a<=x>=b) or (a>=x<=b):
	print(x, "nao pertence ao intervalo", a,",",b)

	
	
	

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 19:44:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero b: "))

if (b <= a):
	print("entradas", a,  "e", b, "invalidas")
elif (a<=x<=b):
	print(x, "pertence ao intervalo", a, ",", b)
elif (a<=x>=b) or (a>=x<=b):
	print(x, "nao pertence ao intervalo", a,",",b)

	
	
	

-- EXECUTION TIME:
0.175811
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:45:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero b: "))

if (b <= a):
	print("entradas", a,  "e", b, "invalidas")
elif (a<=x<=b):
	print(x, "pertence ao intervalo", a, ",", b)
elif (a<=x>=b) or (a>=x<=b):
	print(x, "nao pertence ao intervalo", a,",",b)

	
	
	

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:45:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero b: "))

if (b <= a):
	print("entradas", a,  "e", b, "invalidas")
elif (a<=x<=b):
	print(x, "pertence ao intervalo", a, ",", b)
elif (a<=x>=b) or (a>=x<=b):
	print(x, "nao pertence ao intervalo", a,",",b)

	
	
	

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:07:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero b: "))

if (b > a):
	print("entradas", a,  "e", b, "invalidas")
elif (a<=x<=b):
	print(x, "pertence ao intervalo", a, ",", b)
elif (x<a) or (x>b):
	print(x, "nao pertence ao intervalo", a,",",b)

	
	
	

-- EXECUTION TIME:
0.149243
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
entradas 3.0 e 4.0 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
entradas 1.1 e 22.2 invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:07:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero b: "))

if (b > a):
	print("entradas", a,  "e", b, "invalidas")
elif (a<=x<=b):
	print(x, "pertence ao intervalo", a, ",", b)
elif (x<a) or (x>b):
	print(x, "nao pertence ao intervalo", a,",",b)

	
	
	

-- EXECUTION TIME:
0.183817
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
entradas 3.0 e 4.0 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
entradas 1.1 e 22.2 invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:07:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero b: "))

if (b > a):
	print("entradas", a,  "e", b, "invalidas")
elif (a<=x<=b):
	print(x, "pertence ao intervalo", a, ",", b)
elif (x<a) or (x>b):
	print(x, "nao pertence ao intervalo", a,",",b)

	
	
	

-- OUTPUT:
entradas 3.0 e 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:12:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero b: "))

if (b<=a):
	print("entradas", a,  "e", b, "invalidas")
elif (b>a):
	if (x<=a<=b)
	print(x, "pertence ao intervalo", a, ",", b)
elif (x<a) or (x>b):
	print(x, "nao pertence ao intervalo", a,",",b)

	
	
	

-- ERROR:
File "XXXX", line 12
    if (x<=a<=b)
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:14:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (x<=a<=b):
	print(x, "pertence ao intervalo", a, ",", b)
	else:
		if (x<a) or (x>b):
		print(x, "nao pertence ao intervalo", a,",",b)
else:
	print("entradas", a,  "e", b, "invalidas")
	
	
	

-- ERROR:
File "XXXX", line 11
    print(x, "pertence ao intervalo", a, ",", b)
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:15:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (x<=a<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	else:
		if (x<a) or (x>b):
		print(x, "nao pertence ao intervalo", a,",",b)
else:
	print("entradas", a,  "e", b, "invalidas")
	
	
	

-- ERROR:
File "XXXX", line 14
    print(x, "nao pertence ao intervalo", a,",",b)
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:15:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (x<=a<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	else:
		if (x<a) or (x>b):
			print(x, "nao pertence ao intervalo", a,",",b)
else:
	print("entradas", a,  "e", b, "invalidas")
	
	
	

-- OUTPUT:
2.0 pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:15:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (x<=a<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	else:
		if (x<a) or (x>b):
			print(x, "nao pertence ao intervalo", a,",",b)
else:
	print("entradas", a,  "e", b, "invalidas")
	
	
	

-- EXECUTION TIME:
0.194337
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:15:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (x<=a<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	else:
		if (x<a) or (x>b):
			print(x, "nao pertence ao intervalo", a,",",b)
else:
	print("entradas", a,  "e", b, "invalidas")
	
	
	

-- OUTPUT:
2.0 pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:16:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (x<=a<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	else:
		if (x>a) or (x>b):
			print(x, "nao pertence ao intervalo", a,",",b)
else:
	print("entradas", a,  "e", b, "invalidas")
	
	
	

-- OUTPUT:
2.0 pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:16:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (a<=x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	else:
		if (x>=a) or (x>=b):
			print(x, "nao pertence ao intervalo", a,",",b)
else:
	print("entradas", a,  "e", b, "invalidas")
	
	
	

-- OUTPUT:
2.0 pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:16:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (a<=x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	else:
		if (x>=a) or (x>=b):
			print(x, "nao pertence ao intervalo", a,",",b)
else:
	print("entradas", a,  "e", b, "invalidas")
	
	
	

-- OUTPUT:
2.0 pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:17:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (a<=x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	else:
		if (x>=a) or (x>=b):
			print(x, "nao pertence ao intervalo", a,",",b)
else:
	print("entradas", a,  "e", b, "invalidas")
	
	
	

-- EXECUTION TIME:
0.144589
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:

-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:17:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (a<=x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	elif (x>=a) or (x>=b):
			print(x, "nao pertence ao intervalo", a,",",b)
else:
	print("entradas", a,  "e", b, "invalidas")
	
	
	

-- OUTPUT:
2.0 pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:17:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (a<=x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	elif (x>=a) or (x>=b):
			print(x, "nao pertence ao intervalo", a,",",b)
else:
	print("entradas", a,  "e", b, "invalidas")
	
	
	

-- OUTPUT:
2.0 pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:17:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (a<=x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	elif (x>=a) or (x>=b):
			print(x, "nao pertence ao intervalo", a,",",b)
else:
	print("entradas", a,  "e", b, "invalidas")
	
	
	

-- OUTPUT:
2.0 pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:17:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (a<=x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	elif (x>=a) or (x>=b):
			print(x, "nao pertence ao intervalo", a,",",b)
else:
	print("entradas", a,  "e", b, "invalidas")
	
	
	

-- EXECUTION TIME:
0.214108
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:

-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:17:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (a<=x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	elif (x>=a) or (x>=b):
			print(x, "nao pertence ao intervalo", a,",",b)
else:
	print("entradas", a,  "e", b, "invalidas")
	
	
	

-- OUTPUT:
2.0 pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:18:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (a<=x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	elif (x>=a) or (x>=b):
			print(x, "nao pertence ao intervalo", a,",",b)
else:
	print("Entradas", a,  "e", b, "invalidas")
	
	
	

-- OUTPUT:
2.0 pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:18:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (a<=x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	elif (x>=a) or (x>=b):
			print(x, "nao pertence ao intervalo", a,",",b)
else:
	print("Entradas", a,  "e", b, "invalidas")
	
	
	

-- EXECUTION TIME:
0.138306
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:

-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:18:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (a<=x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	elif (x>=a) or (x>=b):
			print(x, "nao pertence ao intervalo", a,",",b)
else:
	print("Entradas", a,  "e", b, "invalidas")
	
	
	

-- OUTPUT:
2.0 pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:19:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (a<=x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	elif (x>=a) or (x>=b):
			print(x, "nao pertence ao intervalo", a,",",b)
else:
	print("Entradas", a,  "e", b, "invalidas")
	
	
	

-- OUTPUT:
2.0 pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:19:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (a<=x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	elif (x>=a) or (x>=b):
			print(x, "nao pertence ao intervalo", a,",",b)
else:
	print("Entradas", a,  "e", b, "invalidas")
	
	
	

-- OUTPUT:
2.0 pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:19:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (a<=x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	elif (x>=a) or (x>=b):
			print(x, "nao pertence ao intervalo", a,",",b)
else:
	print("Entradas", a,  "e", b, "invalidas")
	
	
	

-- OUTPUT:
2.0 pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:19:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (a<=x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	elif (x>=a) or (x>=b):
			print(x, "nao pertence ao intervalo", a,",",b)
else:
	print("Entradas", a,  "e", b, "invalidas")
	
	
	

-- OUTPUT:
2.0 pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:20:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numeoro a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (a<=x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	elif (x>=a) or (x>=b):
			print(x, "nao pertence ao intervalo", a,",",b)
else:
	print("Entradas", a,  "e", b, "invalidas")
	
	
	

-- OUTPUT:
2.0 pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:20:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (a<=x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	elif (x>=a) or (x>=b):
			print(x, "nao pertence ao intervalo", a,",",b)
else:
	print("Entradas", a,  "e", b, "invalidas")
	
	
	

-- EXECUTION TIME:
0.196336
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:

-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:20:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (a<=x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	elif (x>=a) or (x>=b):
			print(x, "nao pertence ao intervalo", a,",",b)
else:
	print("Entradas", a,  "e", b, "invalidas")
	
	
	

-- OUTPUT:
2.0 pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:22:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (a<=x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	else:
		(x>=a) or (x>=b):
		print(x, "nao pertence ao intervalo", a,",",b)
else:
	print("Entradas", a,  "e", b, "invalidas")
	
	
	

-- EXECUTION TIME:
0.138289
-- ERROR:
  File "/home/codebench/codes/1674/1103/main.py", line 13
    (x>=a) or (x>=b):
                    ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:22:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (a<=x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	else:
		print(x, "nao pertence ao intervalo", a,",",b)
else:
	print("Entradas", a,  "e", b, "invalidas")
	
	
	

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:22:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (x>=a)and(x>=b):
		print(x, "pertence ao intervalo", a, ",", b)
	else:
		print(x, "nao pertence ao intervalo", a,",",b)
else:
	print("Entradas", a,  "e", b, "invalidas")
	
	
	

-- EXECUTION TIME:
0.12491
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 nao pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:23:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (x>=a)and(x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	else:
		print(x, "nao pertence ao intervalo", a,",",b)
else:
	print("Entradas", a,  "e", b, "invalidas")
	
	
	

-- EXECUTION TIME:
0.159409
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
