== TEST (2019-04-25 10:24:32) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if ((a>0) or (b>0) or (c>0)):
	# Testa se medidas correspondem aas de um triangulo
	if((a<b+c) or (b<c+a) or (c<b+a)):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")

-- OUTPUT:
Entradas: -11.0 , 22.0 , 33.0
Area: -0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:25:05) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if ((a<0) or (b<0) or (c<0)):
	# Testa se medidas correspondem aas de um triangulo
	if((a<b+c) or (b<c+a) or (c<b+a)):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")

-- OUTPUT:
Entradas: -11.0 , 22.0 , 33.0
Area: -0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:27:49) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if ((a<0) or (b<0) or (c<0)):
	# Testa se medidas correspondem aas de um triangulo
	if((a<b+c) or (b<c+a) or (c<b+a)):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")

-- OUTPUT:
Entradas: -11.0 , 22.0 , 33.0
Area: -0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:27:50) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if ((a<0) or (b<0) or (c<0)):
	# Testa se medidas correspondem aas de um triangulo
	if((a<b+c) or (b<c+a) or (c<b+a)):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")

-- EXECUTION TIME:
0.128265
-- TEST CASE 1:
---- input:
-11.0
22.0
33.0
---- correct output:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Lado 1: Lado 2: Lado 3: Entradas: -11.0 , 22.0 , 33.0
Area: -0.0
-- TEST CASE 2:
---- input:
1.61
2.40
2.89
---- correct output:
Entradas: 1.61 , 2.4 , 2.89
Area: 1.932
---- user output:
Lado 1: Lado 2: Lado 3: Entradas: 1.61 , 2.4 , 2.89
Area: invalida
-- TEST CASE 3:
---- input:
11.0
22.0
33.0
---- correct output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Lado 1: Lado 2: Lado 3: Entradas: 11.0 , 22.0 , 33.0
Area: invalida
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:27:52) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if ((a<0) or (b<0) or (c<0)):
	# Testa se medidas correspondem aas de um triangulo
	if((a<b+c) or (b<c+a) or (c<b+a)):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")

-- EXECUTION TIME:
0.148862
-- TEST CASE 1:
---- input:
-11.0
22.0
33.0
---- correct output:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Entradas: -11.0 , 22.0 , 33.0
Area: -0.0
-- TEST CASE 2:
---- input:
1.61
2.40
2.89
---- correct output:
Entradas: 1.61 , 2.4 , 2.89
Area: 1.932
---- user output:
Entradas: 1.61 , 2.4 , 2.89
Area: invalida
-- TEST CASE 3:
---- input:
11.0
22.0
33.0
---- correct output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:28:33) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if ((a<0) or (b<0) or (c<0)):
	# Testa se medidas correspondem aas de um triangulo
	if((a<b+c) and (b<c+a) and (c<b+a)):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")

-- EXECUTION TIME:
0.184449
-- TEST CASE 1:
---- input:
-11.0
22.0
33.0
---- correct output:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
-- TEST CASE 2:
---- input:
1.61
2.40
2.89
---- correct output:
Entradas: 1.61 , 2.4 , 2.89
Area: 1.932
---- user output:
Entradas: 1.61 , 2.4 , 2.89
Area: invalida
-- TEST CASE 3:
---- input:
11.0
22.0
33.0
---- correct output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:28:37) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if ((a<0) or (b<0) or (c<0)):
	# Testa se medidas correspondem aas de um triangulo
	if((a<b+c) and (b<c+a) and (c<b+a)):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")

-- EXECUTION TIME:
0.20372
-- TEST CASE 1:
---- input:
-11.0
22.0
33.0
---- correct output:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
-- TEST CASE 2:
---- input:
1.61
2.40
2.89
---- correct output:
Entradas: 1.61 , 2.4 , 2.89
Area: 1.932
---- user output:
Entradas: 1.61 , 2.4 , 2.89
Area: invalida
-- TEST CASE 3:
---- input:
11.0
22.0
33.0
---- correct output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:28:40) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if ((a<0) or (b<0) or (c<0)):
	# Testa se medidas correspondem aas de um triangulo
	if((a<b+c) and (b<c+a) and (c<b+a)):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")

-- EXECUTION TIME:
0.20911
-- TEST CASE 1:
---- input:
-11.0
22.0
33.0
---- correct output:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
-- TEST CASE 2:
---- input:
1.61
2.40
2.89
---- correct output:
Entradas: 1.61 , 2.4 , 2.89
Area: 1.932
---- user output:
Entradas: 1.61 , 2.4 , 2.89
Area: invalida
-- TEST CASE 3:
---- input:
11.0
22.0
33.0
---- correct output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:31:31) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if ((a > 0) and (b>0) and (c>0)):
	# Testa se medidas correspondem aas de um triangulo
	if((a < b+c) and (b < c+a) and (c < b+a)):
		s = (a + b + c) / 2.0
		area1 = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(area1, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")

-- OUTPUT:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:31:37) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if ((a > 0) and (b>0) and (c>0)):
	# Testa se medidas correspondem aas de um triangulo
	if((a < b+c) and (b < c+a) and (c < b+a)):
		s = (a + b + c) / 2.0
		area1 = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(area1, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")

-- EXECUTION TIME:
0.164823
-- TEST CASE 1:
---- input:
-11.0
22.0
33.0
---- correct output:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
-- TEST CASE 2:
---- input:
1.61
2.40
2.89
---- correct output:
Entradas: 1.61 , 2.4 , 2.89
Area: 1.932
---- user output:
Entradas: 1.61 , 2.4 , 2.89
Area: 1.932
-- TEST CASE 3:
---- input:
11.0
22.0
33.0
---- correct output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
