== SUBMITION (2019-04-08 20:12:19) 
-- CODE:
et= float(input("insira a escala de temperatusa desejada C ou F: "))
t= float(input("insira a temperatura: "))
c=(5/9)*(t-32)
f=c/(5/9)+32
if et.upper()==C:
	print(round(c,2))
if et.upper()==F:
	print(round(f,2))

-- EXECUTION TIME:
0.128304
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1637/2445/main.py", line 1, in <module>
    et= float(input())
ValueError: could not convert string to float: 'C'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 20:12:23) 
-- CODE:
et= float(input("insira a escala de temperatusa desejada C ou F: "))
t= float(input("insira a temperatura: "))
c=(5/9)*(t-32)
f=c/(5/9)+32
if et.upper()==C:
	print(round(c,2))
if et.upper()==F:
	print(round(f,2))

-- EXECUTION TIME:
0.197206
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1637/2445/main.py", line 1, in <module>
    et= float(input())
ValueError: could not convert string to float: 'C'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 20:12:25) 
-- CODE:
et= float(input("insira a escala de temperatusa desejada C ou F: "))
t= float(input("insira a temperatura: "))
c=(5/9)*(t-32)
f=c/(5/9)+32
if et.upper()==C:
	print(round(c,2))
if et.upper()==F:
	print(round(f,2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    et= float(input())
ValueError: could not convert string to float: 'C'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 20:12:32) 
-- CODE:
et= float(input("insira a escala de temperatusa desejada C ou F: "))
t= float(input("insira a temperatura: "))
c=(5/9)*(t-32)
f=c/(5/9)+32
if et.upper()==C:
	print(round(c,2))
if et.upper()==F:
	print(round(f,2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    et= float(input())
ValueError: could not convert string to float: 'C'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 20:12:58) 
-- CODE:
et= float(input("insira a escala de temperatusa desejada C ou F: "))
t= float(input("insira a temperatura: "))
c=(5/9)*(t-32)
f=c/(5/9)+32
if et.upper()==C:
	print(round(c,2))
if et.upper()==F:
	print(round(f,2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    et= float(input())
ValueError: could not convert string to float: 'C'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 20:13:37) 
-- CODE:
et= (input("insira a escala de temperatusa desejada C ou F: "))
t= float(input("insira a temperatura: "))
c=(5/9)*(t-32)
f=c/(5/9)+32
if et.upper()==C:
	print(round(c,2))
if et.upper()==F:
	print(round(f,2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if et.upper()==C:
NameError: name 'C' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 20:14:24) 
-- CODE:
et= (input("insira a escala de temperatusa desejada C ou F: "))
t= float(input("insira a temperatura: "))
c=(5/9)*(t-32)
f=c/(5/9)+32
if et.upper()=="C":
	print(round(c,2))
if et.upper()=="F":
	print(round(f,2))

-- OUTPUT:
160.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 20:14:41) 
-- CODE:
et= (input("insira a escala de temperatusa desejada C ou F: "))
t= float(input("insira a temperatura: "))
c=(5/9)*(t-32)
f=c/(5/9)+32
if et.upper()=="C":
	print(round(c,2))
if et.upper()=="F":
	print(round(f,2))

-- OUTPUT:
160.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 20:15:10) 
-- CODE:
et= (input("insira a escala de temperatusa desejada C ou F: "))
t= float(input("insira a temperatura: "))
c=(5/9)*(t-32)
f=t/(5/9)+32
if et.upper()=="C":
	print(round(c,2))
if et.upper()=="F":
	print(round(f,2))

-- OUTPUT:
160.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 20:17:13) 
-- CODE:
et= (input("insira a escala de temperatusa desejada C ou F: "))
t= float(input("insira a temperatura: "))
c=(5/9)*(t-32)
f=t/(5/9)+32
if et.upper()=="C":
	print(round(f,2))
if et.upper()=="F":
	print(round(c,2))

-- OUTPUT:
608.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 20:17:33) 
-- CODE:
et= (input("insira a escala de temperatusa desejada C ou F: "))
t= float(input("insira a temperatura: "))
c=(5/9)*(t-32)
f=t/(5/9)+32
if et.upper()=="C":
	print(round(f,2))
if et.upper()=="F":
	print(round(c,2))

-- OUTPUT:
608.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 20:17:42) 
-- CODE:
et= (input("insira a escala de temperatusa desejada C ou F: "))
t= float(input("insira a temperatura: "))
c=(5/9)*(t-32)
f=t/(5/9)+32
if et.upper()=="C":
	print(round(f,2))
if et.upper()=="F":
	print(round(c,2))

-- EXECUTION TIME:
0.112071
-- TEST CASE 1:
---- input:
C
320
---- correct output:
608.0
---- user output:
608.0
-- TEST CASE 2:
---- input:
F
320
---- correct output:
160.0
---- user output:
160.0
-- TEST CASE 3:
---- input:
C
0
---- correct output:
32.0
---- user output:
32.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 11:38:13) 
-- CODE:
et= (input("insira a escala de temperatusa desejada C ou F: "))
t= float(input("insira a temperatura: "))
c=(5/9)*(t-32)
f=t/(5/9)+32
if et.upper()=="C":
	print(round(f,2))
if et.upper()=="F":
	print(round(c,2))

-- EXECUTION TIME:
0.165845
-- TEST CASE 1:
---- input:
C
320
---- correct output:
608.0
---- user output:
608.0
-- TEST CASE 2:
---- input:
F
320
---- correct output:
160.0
---- user output:
160.0
-- TEST CASE 3:
---- input:
C
0
---- correct output:
32.0
---- user output:
32.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
