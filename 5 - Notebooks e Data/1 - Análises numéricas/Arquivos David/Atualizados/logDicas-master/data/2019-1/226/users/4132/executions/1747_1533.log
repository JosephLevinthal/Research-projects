== SUBMITION (2019-05-16 10:04:06) 
-- CODE:
from math import *
x = float(input("Digite x: "))
k = int(input("Digite k: "))
soma = 0
i=0
while(i < k):
	soma = soma + (x**i)/(factorial(i*2))
	i = i+1
	
print(round(soma,8))
-- EXECUTION TIME:
0.152592
-- TEST CASE 1:
---- input:
2.0
5
---- correct output:
3.76190476
---- user output:
2.1781746
-- TEST CASE 2:
---- input:
10.0
2
---- correct output:
51.0
---- user output:
6.0
-- TEST CASE 3:
---- input:
12.0
35
---- correct output:
81377.39571257
---- user output:
15.98952331
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 10:04:15) 
-- CODE:
from math import *
x = float(input("Digite x: "))
k = int(input("Digite k: "))
soma = 0
i=0
while(i < k):
	soma = soma + (x**i)/(factorial(i*2))
	i = i+1
	
print(round(soma,8))
-- EXECUTION TIME:
0.143984
-- TEST CASE 1:
---- input:
2.0
5
---- correct output:
3.76190476
---- user output:
2.1781746
-- TEST CASE 2:
---- input:
10.0
2
---- correct output:
51.0
---- user output:
6.0
-- TEST CASE 3:
---- input:
12.0
35
---- correct output:
81377.39571257
---- user output:
15.98952331
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 10:04:16) 
-- CODE:
from math import *
x = float(input("Digite x: "))
k = int(input("Digite k: "))
soma = 0
i=0
while(i < k):
	soma = soma + (x**i)/(factorial(i*2))
	i = i+1
	
print(round(soma,8))
-- OUTPUT:
2.1781746
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 10:04:56) 
-- CODE:
from math import *
x = float(input("Digite x: "))
k = int(input("Digite k: "))
soma = 0
i=0
while(i < k):
	soma = soma + (x**(i*2))/(factorial(i*2))
	i = i+1
	
print(round(soma,8))
-- EXECUTION TIME:
0.123548
-- TEST CASE 1:
---- input:
2.0
5
---- correct output:
3.76190476
---- user output:
3.76190476
-- TEST CASE 2:
---- input:
10.0
2
---- correct output:
51.0
---- user output:
51.0
-- TEST CASE 3:
---- input:
12.0
35
---- correct output:
81377.39571257
---- user output:
81377.39571257
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
