== TEST (2019-03-25 19:56:39) 
-- CODE:
x = int(input(" Digite um numero de quatro digitos: "))

-- OUTPUT:
20.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 19:57:42) 
-- CODE:
x = int(input(" Digite um numero de quatro digitos: "))
a = x // 1000

print(a)
-- OUTPUT:
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 19:58:03) 
-- CODE:
x = int(input(" Digite um numero de quatro digitos: "))
a = x // 1000 * 5

print(a)
-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 19:59:04) 
-- CODE:
x = int(input(" Digite um numero de quatro digitos: "))
a = x // 1000 * 5
b = (x // 100 - 10) * 4

print(a)
-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 19:59:19) 
-- CODE:
x = int(input(" Digite um numero de quatro digitos: "))
a = x // 1000 * 5
b = (x // 100 - 10) * 4

print(b)
-- OUTPUT:
40
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 20:01:16) 
-- CODE:
x = int(input(" Digite um numero de quatro digitos: "))
a = x // 1000 * 5
b = x // 100 - (a - 10) * 4
c = x // 10 -

print(b)
-- ERROR:
File "XXXX", line 4
    c = x // 10 -
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 20:01:31) 
-- CODE:
x = int(input(" Digite um numero de quatro digitos: "))
a = x // 1000 * 5
b = x // 100 - (a - 10) * 4
c = x // 10 - x // 100

print(b)
-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 20:02:09) 
-- CODE:
x = int(input(" Digite um numero de quatro digitos: "))
a = x // 1000 * 5
b = x // 100 - (a * 10) * 4
c = x // 10 - x // 100

print(b)
-- OUTPUT:
-380
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 20:07:15) 
-- CODE:
x = int(input(" Digite um numero de quatro digitos: "))
a = x // 1000 * 5
b = (x // 100 - (a * 10)) * 4
c = x // 10 - x // 100

print(b)
-- OUTPUT:
-320
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 20:07:44) 
-- CODE:
x = int(input(" Digite um numero de quatro digitos: "))
a = x // 1000 * 5
b = (x - (a * 10)) * 4
c = x // 10 - x // 100

print(b)
-- OUTPUT:
7600
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 20:13:02) 
-- CODE:
x = int(input(" Digite um numero de quatro digitos: "))
a = x // 1000 
b= a * 5 
c = x // 100 - (a *10)


print(b)
-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 20:13:12) 
-- CODE:
x = int(input(" Digite um numero de quatro digitos: "))
a = x // 1000 
b= a * 5 
c = x // 100 - (a *10)


print(c)
-- EXECUTION TIME:
0.157472
-- TEST CASE 1:
---- input:
2000
---- correct output:
10
---- user output:
0
-- TEST CASE 2:
---- input:
3550
---- correct output:
6
---- user output:
5
-- TEST CASE 3:
---- input:
0007
---- correct output:
3
---- user output:
0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 20:13:13) 
-- CODE:
x = int(input(" Digite um numero de quatro digitos: "))
a = x // 1000 
b= a * 5 
c = x // 100 - (a *10)


print(c)
-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 20:13:43) 
-- CODE:
x = int(input(" Digite um numero de quatro digitos: "))
a = x // 1000 
b= a * 5 
c = (x // 100 - (a *10)) * 4


print(c)
-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 20:15:23) 
-- CODE:
x = int(input(" Digite um numero de quatro digitos: "))
a = x // 1000 
b= a * 5 
c = (x // 100 - (a *10)) * 4
d = x // 10 - (x // 100) * 10

print(c)
-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 20:15:28) 
-- CODE:
x = int(input(" Digite um numero de quatro digitos: "))
a = x // 1000 
b= a * 5 
c = (x // 100 - (a *10)) * 4
d = x // 10 - (x // 100) * 10

print(d)
-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 20:16:01) 
-- CODE:
x = int(input(" Digite um numero de quatro digitos: "))
a = x // 1000 
b= a * 5 
c = (x // 100 - (a *10)) * 4
d = (x // 10 - (x // 100) * 10) * 3

print(d)
-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 20:17:24) 
-- CODE:
x = int(input(" Digite um numero de quatro digitos: "))
a = x // 1000 
b= a * 5 
c = (x // 100 - (a *10)) * 4
d = (x // 10 - (x // 100) * 10) * 3
e = x - (x // 10) * 10 

print(e)
-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 20:17:57) 
-- CODE:
x = int(input(" Digite um numero de quatro digitos: "))
a = x // 1000 
b= a * 5 
c = (x // 100 - (a *10)) * 4
d = (x // 10 - (x // 100) * 10) * 3
e = (x - (x // 10) * 10) * 2 

print(e)
-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 20:18:54) 
-- CODE:
x = int(input(" Digite um numero de quatro digitos: "))
a = x // 1000 
b= a * 5 
c = (x // 100 - (a *10)) * 4
d = (x // 10 - (x // 100) * 10) * 3
e = (x - (x // 10) * 10) * 2 

soma = b + c + d + e    
print(soma % 11)
-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 20:19:08) 
-- CODE:
x = int(input(" Digite um numero de quatro digitos: "))
a = x // 1000 
b= a * 5 
c = (x // 100 - (a *10)) * 4
d = (x // 10 - (x // 100) * 10) * 3
e = (x - (x // 10) * 10) * 2 

soma = b + c + d + e    
print(soma % 11)
-- EXECUTION TIME:
0.161396
-- TEST CASE 1:
---- input:
2000
---- correct output:
10
---- user output:
10
-- TEST CASE 2:
---- input:
3550
---- correct output:
6
---- user output:
6
-- TEST CASE 3:
---- input:
0007
---- correct output:
3
---- user output:
3
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 19:12:45) 
-- CODE:
x = int(input(" Digite um numero de quatro digitos: "))
a = x // 1000 
b= a * 5 
c = (x // 100 - (a *10)) * 4
d = (x // 10 - (x // 100) * 10) * 3
e = (x - (x // 10) * 10) * 2 

soma = b + c + d + e    
print(soma % 11)
-- EXECUTION TIME:
0.128849
-- TEST CASE 1:
---- input:
2000
---- correct output:
10
---- user output:
10
-- TEST CASE 2:
---- input:
3550
---- correct output:
6
---- user output:
6
-- TEST CASE 3:
---- input:
0007
---- correct output:
3
---- user output:
3
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
