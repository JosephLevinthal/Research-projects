== TEST (2019-05-01 17:55:43) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

H = float(input("Insira a altura total do tanque: "))
h = float(input("Insira o nivel de combustivel: "))
r = float(input("Insira o raio dos bojos: "))

print("Entradas:", H,",", h,",", r)
#formulas
vc = pi * (r ** 2) * x
ve = (4/3) * pi * (r ** 3)
vca = (pi/3)*(x ** 2)*(3*r - x)

if((H < 0) or (h < 0) or (r < 0) or (H < h) or (H < 2*r)):
	print("Entradas invalidas")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    vc = pi * (r ** 2) * x
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:56:22) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

H = float(input("Insira a altura total do tanque: "))
h = float(input("Insira o nivel de combustivel: "))
r = float(input("Insira o raio dos bojos: "))

print("Entradas:", H,",", h,",", r)
#formulas
#vc = pi * (r ** 2) * x
#ve = (4/3) * pi * (r ** 3)
#vca = (pi/3)*(x ** 2)*(3*r - x)

if((H < 0) or (h < 0) or (r < 0) or (H < h) or (H < 2*r)):
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 18:07:49) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

H = float(input("Insira a altura total do tanque: "))
h = float(input("Insira o nivel de combustivel: "))
r = float(input("Insira o raio dos bojos: "))

print("Entradas:", H,",", h,",", r)
#formulas
#v = pi * (r ** 2) * h
#v = (4/3) * pi * (r ** 3)
#v = (pi/3)*(h ** 2)*(3*r - h)

if((H > 0) and (h > 0) and (r > 0) and (H > h) and (H > 2*r)):
	if(h <= r):
		v = (pi/3)*(x ** 2)*(3*r - x)
		print("Volume: ",round(v * 1000,3), "litros")
	elif(r < h and h <= H -r):
		v = ((4 * pi *(r ** 3) / 6) + (pi * (r ** 2) * (h - r))
		print("Volume: ",round(v * 1000,3), "litros")
	elif(h > H - r):
	   v = ((4 * pi * (r ** 3))/ 6) + ((pi/3) * (r ** 2) * (h - r)) *2)
		print("Volume: ",round(v * 1000,3), "litros")
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 24
    print("Volume: ",round(v * 1000,3), "litros")
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 18:08:15) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

H = float(input("Insira a altura total do tanque: "))
h = float(input("Insira o nivel de combustivel: "))
r = float(input("Insira o raio dos bojos: "))

print("Entradas:", H,",", h,",", r)
#formulas
#v = pi * (r ** 2) * h
#v = (4/3) * pi * (r ** 3)
#v = (pi/3)*(h ** 2)*(3*r - h)

if((H > 0) and (h > 0) and (r > 0) and (H > h) and (H > 2*r)):
	if(h <= r):
		v = (pi/3)*(x ** 2)*(3*r - x)
		print("Volume: ",round(v * 1000,3), "litros")
	elif(r < h and h <= H -r):
		v = ((4 * pi *(r ** 3) / 6) + (pi * (r ** 2) * (h - r))
			  print("Volume: ",round(v * 1000,3), "litros")
	elif(h > H - r):
	   v = ((4 * pi * (r ** 3))/ 6) + ((pi/3) * (r ** 2) * (h - r)) *2)
		print("Volume: ",round(v * 1000,3), "litros")
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 24
    print("Volume: ",round(v * 1000,3), "litros")
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 18:08:30) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

H = float(input("Insira a altura total do tanque: "))
h = float(input("Insira o nivel de combustivel: "))
r = float(input("Insira o raio dos bojos: "))

print("Entradas:", H,",", h,",", r)
#formulas
#v = pi * (r ** 2) * h
#v = (4/3) * pi * (r ** 3)
#v = (pi/3)*(h ** 2)*(3*r - h)

if((H > 0) and (h > 0) and (r > 0) and (H > h) and (H > 2*r)):
	if(h <= r):
		v = (pi/3)*(x ** 2)*(3*r - x)
		print("Volume: ",round(v * 1000,3), "litros")
	elif(r < h and h <= H -r):
		v = ((4 * pi *(r ** 3) / 6) + (pi * (r ** 2) * (h - r))
	 print("Volume: ",round(v * 1000,3), "litros")
	elif(h > H - r):
	   v = ((4 * pi * (r ** 3))/ 6) + ((pi/3) * (r ** 2) * (h - r)) *2)
		print("Volume: ",round(v * 1000,3), "litros")
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 24
    print("Volume: ",round(v * 1000,3), "litros")
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 18:10:27) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

H = float(input("Insira a altura total do tanque: "))
h = float(input("Insira o nivel de combustivel: "))
r = float(input("Insira o raio dos bojos: "))

print("Entradas:", H,",", h,",", r)

if((H > 0) and (h > 0) and (r > 0) and (H > h) and (H > 2*r)):
	if(h <= r):
		v = (pi/3)*(h ** 2)*(3*r - h)
		print("Volume: ",round(v * 1000,3), "litros")
	elif(r < h and h <= H -r):
		v = ((4 * pi *(r ** 3) / 6) + (pi * (r ** 2) * (h - r))
	   print("Volume: ",round(v * 1000,3), "litros")
	elif(h > H - r):
	   v = ((4 * pi * (r ** 3))/ 6) + ((pi/3) * (r ** 2) * (h - r)) *2)
		print("Volume: ",round(v * 1000,3), "litros")
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 20
    print("Volume: ",round(v * 1000,3), "litros")
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 18:10:39) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

H = float(input("Insira a altura total do tanque: "))
h = float(input("Insira o nivel de combustivel: "))
r = float(input("Insira o raio dos bojos: "))

print("Entradas:", H,",", h,",", r)

if((H > 0) and (h > 0) and (r > 0) and (H > h) and (H > 2*r)):
	if(h <= r):
		v = (pi/3)*(h ** 2)*(3*r - h)
		print("Volume: ",round(v * 1000,3), "litros")
	elif(r < h and h <= H -r):
		v = ((4 * pi *(r ** 3) / 6) + (pi * (r ** 2) * (h - r))
			  print("Volume: ",round(v * 1000,3), "litros")
	elif(h > H - r):
	   v = ((4 * pi * (r ** 3))/ 6) + ((pi/3) * (r ** 2) * (h - r)) *2)
		print("Volume: ",round(v * 1000,3), "litros")
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 20
    print("Volume: ",round(v * 1000,3), "litros")
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 18:10:47) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

H = float(input("Insira a altura total do tanque: "))
h = float(input("Insira o nivel de combustivel: "))
r = float(input("Insira o raio dos bojos: "))

print("Entradas:", H,",", h,",", r)

if((H > 0) and (h > 0) and (r > 0) and (H > h) and (H > 2*r)):
	if(h <= r):
		v = (pi/3)*(h ** 2)*(3*r - h)
		print("Volume: ",round(v * 1000,3), "litros")
	elif(r < h and h <= H -r):
		v = ((4 * pi *(r ** 3) / 6) + (pi * (r ** 2) * (h - r))
	   print("Volume: ",round(v * 1000,3), "litros")
	elif(h > H - r):
	   v = ((4 * pi * (r ** 3))/ 6) + ((pi/3) * (r ** 2) * (h - r)) *2)
		print("Volume: ",round(v * 1000,3), "litros")
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 20
    print("Volume: ",round(v * 1000,3), "litros")
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 18:12:24) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

H = float(input("Insira a altura total do tanque: "))
h = float(input("Insira o nivel de combustivel: "))
r = float(input("Insira o raio dos bojos: "))

print("Entradas:", H,",", h,",", r)

if((H > 0) and (h > 0) and (r > 0) and (H > h) and (H > 2*r)):
	if(h <= r):
		v = (pi/3)*(h ** 2)*(3 * r - h)
		print("Volume: ",round(v * 1000,3), "litros")
	elif(r < h and h <= H -r):
		v = (4 * pi * (r ** 3) / 6) + (pi * (r ** 2) * (h - r)
		print("Volume: ",round(v * 1000,3), "litros")
	elif(h > H - r):
	   v = ((4 * pi * (r ** 3))/ 6) + ((pi/3) * (r ** 2) * (h - r)) *2)
		print("Volume: ",round(v * 1000,3), "litros")
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 20
    print("Volume: ",round(v * 1000,3), "litros")
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 18:16:13) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

H = float(input("Insira a altura total do tanque: "))
h = float(input("Insira o nivel de combustivel: "))
r = float(input("Insira o raio dos bojos: "))

print("Entradas:", H,",", h,",", r)

if((H > 0) and (h > 0) and (r > 0) and (H > h) and (H > 2*r)):
	if(h <= r):
		v = (pi/3)*(h ** 2)*(3 * r - h)
		print("Volume: ",round(v * 1000,3), "litros")
	elif(r < h and h <= H -r):
		v = (4 * pi * (r ** 3)/ 6) + (pi * (r ** 2) * (h - r))
		print("Volume: ",round(v * 1000,3), "litros")
	elif(h > H - r):
		v = ((4 * pi * (r ** 3))/ 6) + ((pi/3) * ((r ** 2) * (h - r) * 2))
		print("Volume: ",round(v * 1000,3), "litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume:  81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 18:16:33) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *

H = float(input("Insira a altura total do tanque: "))
h = float(input("Insira o nivel de combustivel: "))
r = float(input("Insira o raio dos bojos: "))

print("Entradas:", H,",", h,",", r)

if((H > 0) and (h > 0) and (r > 0) and (H > h) and (H > 2*r)):
	if(h <= r):
		v = (pi/3)*(h ** 2)*(3 * r - h)
		print("Volume: ",round(v * 1000,3), "litros")
	elif(r < h and h <= H -r):
		v = (4 * pi * (r ** 3)/ 6) + (pi * (r ** 2) * (h - r))
		print("Volume: ",round(v * 1000,3), "litros")
	elif(h > H - r):
		v = ((4 * pi * (r ** 3))/ 6) + ((pi/3) * ((r ** 2) * (h - r) * 2))
		print("Volume: ",round(v * 1000,3), "litros")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.156137
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume:  81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
