== TEST (2019-04-28 09:11:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kwh= float(input("qual o consumo? "))
tipo= input("qual seu tipo? (R,I ou C)").upper()

print("Entradas:",kwh,"kWh","e", "tipo",tipo)




-- OUTPUT:
Entradas: -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 09:18:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kwh= float(input("qual o consumo? "))
tipo= input("qual seu tipo? (R,I ou C)").upper()

print("Entradas:",kwh,"kWh","e", "tipo",tipo)
if (kwh<0 or tipo!="R" or tipo!="I" or tipo!="C"):
	print("Dados invalidos")
else:
	if(tipo="R" and kwh<=500):
		y= kwh*0.44
	elif (tipo="R" and kwh>500):
		y= kwh*0.65
	elif(tipo="C" and kwh<=1000):
		y= kwh*0.55
	elif(tipo="C" and kwh>1000):
		y=kwh*0.60
	elif(tipo="I" and kwh<=5000):
		y=kwh*0.55
	elif(tipo="i" and kwh>5000):
		y= kwh*0.60
	print("Valor total:",y)



-- ERROR:
File "XXXX", line 11
    if(tipo="R" and kwh<=500):
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 09:19:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kwh= float(input("qual o consumo? "))
tipo= input("qual seu tipo? (R,I ou C)").upper()

print("Entradas:",kwh,"kWh","e", "tipo",tipo)
if (kwh<0 or tipo!="R" or tipo!="I" or tipo!="C"):
	print("Dados invalidos")
else:
	if(tipo="R" and kwh<=500):
		y= kwh*0.44
	elif (tipo="R" and kwh>500):
		y= kwh*0.65
	elif(tipo="C" and kwh<=1000):
		y= kwh*0.55
	elif(tipo="C" and kwh>1000):
		y=kwh*0.60
	elif(tipo="I" and kwh<=5000):
		y=kwh*0.55
	elif(tipo="i" and kwh>5000):
		y= kwh*0.60
	print("Valor total:",y)



-- ERROR:
File "XXXX", line 11
    if(tipo="R" and kwh<=500):
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 09:20:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kwh= float(input("qual o consumo? "))
tipo= input("qual seu tipo? (R,I ou C)").upper()

print("Entradas:",kwh,"kWh","e", "tipo",tipo)
if (kwh<0 or tipo!="R" or tipo!="I" or tipo!="C"):
	print("Dados invalidos")

elif(tipo="R" and kwh<=500):
		y= kwh*0.44
elif(tipo="R" and kwh>500):
		y= kwh*0.65
elif(tipo="C" and kwh<=1000):
		y= kwh*0.55
elif(tipo="C" and kwh>1000):
		y=kwh*0.60
elif(tipo="I" and kwh<=5000):
		y=kwh*0.55
elif(tipo="i" and kwh>5000):
		y= kwh*0.60
print("Valor total:",y)



-- ERROR:
File "XXXX", line 11
    elif(tipo="R" and kwh<=500):
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 09:20:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kwh= float(input("qual o consumo? "))
tipo= input("qual seu tipo? (R,I ou C)").upper()

print("Entradas:",kwh,"kWh","e", "tipo",tipo)
if (kwh<0 or tipo!="R" or tipo!="I" or tipo!="C"):
	print("Dados invalidos")

elif(tipo="R" and kwh<=500):
		y= kwh*0.44
elif(tipo="R" and kwh>500):
		y= kwh*0.65
elif(tipo="C" and kwh<=1000):
		y= kwh*0.55
elif(tipo="C" and kwh>1000):
		y=kwh*0.60
elif(tipo="I" and kwh<=5000):
		y=kwh*0.55
elif(tipo="i" and kwh>5000):
		y= kwh*0.60
print("Valor total:",y)



-- ERROR:
File "XXXX", line 11
    elif(tipo="R" and kwh<=500):
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 09:20:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kwh= float(input("qual o consumo? "))
tipo= input("qual seu tipo? (R,I ou C)").upper()

print("Entradas:",kwh,"kWh","e", "tipo",tipo)
if (kwh<0 or tipo!="R" or tipo!="I" or tipo!="C"):
	print("Dados invalidos")

elif(tipo=="R" and kwh<=500):
		y= kwh*0.44
elif(tipo=="R" and kwh>500):
		y= kwh*0.65
elif(tipo=="C" and kwh<=1000):
		y= kwh*0.55
elif(tipo=="C" and kwh>1000):
		y=kwh*0.60
elif(tipo=="I" and kwh<=5000):
		y=kwh*0.55
elif(tipo=="i" and kwh>5000):
		y= kwh*0.60
print("Valor total:",y)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 23, in <module>
    print("Valor total:",y)
NameError: name 'y' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 09:21:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kwh= float(input("qual o consumo? "))
tipo= input("qual seu tipo? (R,I ou C)").upper()

print("Entradas:",kwh,"kWh","e", "tipo",tipo)
if (kwh<0 or tipo!="R" or tipo!="I" or tipo!="C"):
	print("Dados invalidos")

elif(tipo=="R" and kwh<=500):
	y= kwh*0.44
elif(tipo=="R" and kwh>500):
	y= kwh*0.65
elif(tipo=="C" and kwh<=1000):
	y= kwh*0.55
elif(tipo=="C" and kwh>1000):
	y=kwh*0.60
elif(tipo=="I" and kwh<=5000):
	y=kwh*0.55
elif(tipo=="i" and kwh>5000):
	y= kwh*0.60
print("Valor total:",y)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 23, in <module>
    print("Valor total:",y)
NameError: name 'y' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 09:22:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kwh= float(input("qual o consumo? "))
tipo= input("qual seu tipo? (R,I ou C)").upper()

print("Entradas:",kwh,"kWh","e", "tipo",tipo)
if (kwh<0 or tipo!="R" or tipo!="I" or tipo!="C"):
	print("Dados invalidos")

elif(tipo=="R" and kwh<=500):
	y= (kwh*0.44)
elif(tipo=="R" and kwh>500):
	y= (kwh*0.65)
elif(tipo=="C" and kwh<=1000):
	y= (kwh*0.55)
elif(tipo=="C" and kwh>1000):
	y=(kwh*0.60)
elif(tipo=="I" and kwh<=5000):
	y=(kwh*0.55)
elif(tipo=="i" and kwh>5000):
	y= (kwh*0.60)
print("Valor total:",y)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 23, in <module>
    print("Valor total:",y)
NameError: name 'y' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 09:24:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kwh= float(input("qual o consumo? "))
tipo= input("qual seu tipo? (R,I ou C)").upper()

print("Entradas:",kwh,"kWh","e", "tipo",tipo)
if (kwh<0 or tipo!="R" or tipo!="I" or tipo!="C"):
	y="Dados invalidos"

elif(tipo=="R" and kwh<=500):
	y= (kwh*0.44)
elif(tipo=="R" and kwh>500):
	y= (kwh*0.65)
elif(tipo=="C" and kwh<=1000):
	y= (kwh*0.55)
elif(tipo=="C" and kwh>1000):
	y=(kwh*0.60)
elif(tipo=="I" and kwh<=5000):
	y=(kwh*0.55)
elif(tipo=="i" and kwh>5000):
	y= (kwh*0.60)
print("Valor total:",y)



-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 09:25:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kwh= float(input("qual o consumo? "))
tipo= input("qual seu tipo? (R,I ou C)").upper()

print("Entradas:",kwh,"kWh","e", "tipo",tipo)
y= kwh
if (kwh<0 or tipo!="R" or tipo!="I" or tipo!="C"):
	print("Dados invalidos")

elif(tipo=="R" and kwh<=500):
	y= (kwh*0.44)
elif(tipo=="R" and kwh>500):
	y= (kwh*0.65)
elif(tipo=="C" and kwh<=1000):
	y= (kwh*0.55)
elif(tipo=="C" and kwh>1000):
	y=(kwh*0.60)
elif(tipo=="I" and kwh<=5000):
	y=(kwh*0.55)
elif(tipo=="i" and kwh>5000):
	y= (kwh*0.60)
print("Valor total:",y)



-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
Valor total: -56.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 09:26:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kwh= float(input("qual o consumo? "))
tipo= input("qual seu tipo? (R,I ou C)").upper()

print("Entradas:",kwh,"kWh","e", "tipo",tipo)
y= kwh*x
if (kwh<0 or tipo!="R" or tipo!="I" or tipo!="C"):
	print("Dados invalidos")

elif(tipo=="R" and kwh<=500):
	x=0.44
elif(tipo=="R" and kwh>500):
	x=0.65
elif(tipo=="C" and kwh<=1000):
	x= (0.55)
elif(tipo=="C" and kwh>1000):
	x=(0.60)
elif(tipo=="I" and kwh<=5000):
	x=(0.55)
elif(tipo=="i" and kwh>5000):
	x=(0.60)
print("Valor total:",y)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    y= kwh*x
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 09:28:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kwh= float(input("qual o consumo? "))
tipo= input("qual seu tipo? (R,I ou C)").upper()

print("Entradas:",kwh,"kWh","e", "tipo",tipo)
if (kwh<0 or tipo!="R" or tipo!="I" or tipo!="C"):
	print("Dados invalidos")

elif(tipo=="R" and kwh<=500):
y= (kwh*0.44)
elif(tipo=="R" and kwh>500):
y= (kwh*0.65)
elif(tipo=="C" and kwh<=1000):
y= (kwh*0.55)
elif(tipo=="C" and kwh>1000):
y=(kwh*0.60)
elif(tipo=="I" and kwh<=5000):
y=(kwh*0.55)
elif(tipo=="i" and kwh>5000):
y= (kwh*0.60)
print("Valor total:",y)



-- ERROR:
File "XXXX", line 12
    y= (kwh*0.44)
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 09:29:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kwh= float(input("qual o consumo? "))
tipo= input("qual seu tipo? (R,I ou C)").upper()

print("Entradas:",kwh,"kWh","e", "tipo",tipo)
if (kwh<0 or tipo!="R" or tipo!="I" or tipo!="C"):
	print("Dados invalidos")

elif(tipo=="R" and kwh<=500):
	y= (kwh*0.44)
elif(tipo=="R" and kwh>500):
	y= (kwh*0.65)
elif(tipo=="C" and kwh<=1000):
	y= (kwh*0.55)
elif(tipo=="C" and kwh>1000):
	y=(kwh*0.60)
elif(tipo=="I" and kwh<=5000):
	y=(kwh*0.55)
elif(tipo=="i" and kwh>5000):
	y= (kwh*0.60)
print("Valor total:",y)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 23, in <module>
    print("Valor total:",y)
NameError: name 'y' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 09:35:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kwh= float(input("qual o consumo? "))
tipo= input("qual seu tipo? (R,I ou C)").upper()

print("Entradas:",kwh,"kWh","e", "tipo",tipo)
if (kwh<0 or tipo!="R" or tipo!="I" or tipo!="C"):
	print("Dados invalidos")

elif(tipo=="R" and kwh<=500):
	y= (kwh*0.44)
elif(tipo=="R" and kwh>500):
	y= (kwh*0.65)
elif(tipo=="C" and kwh<=1000):
	y= (kwh*0.55)
elif(tipo=="C" and kwh>1000):
	y=(kwh*0.60)
elif(tipo=="I" and kwh<=5000):
	y=(kwh*0.55)
elif(tipo=="i" and kwh>5000):
	y= (kwh*0.60)
print("Valor total:",y)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 23, in <module>
    print("Valor total:",y)
NameError: name 'y' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 09:39:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kwh= float(input("qual o consumo? "))
tipo= input("qual seu tipo? (R,I ou C)").upper()

print("Entradas:",kwh,"kWh","e", "tipo",tipo)
if (kwh<0 or tipo!="R" or tipo!="I" or tipo!="C"):
	print("Dados invalidos")

elif(tipo=="R" and kwh<=500):
	y= (kwh*0.44)
elif(tipo=="R" and kwh>500):
	y= (kwh*0.65)
elif(tipo=="C" and kwh<=1000):
	y= (kwh*0.55)
elif(tipo=="C" and kwh>1000):
	y=(kwh*0.60)
elif(tipo=="I" and kwh<=5000):
	y=(kwh*0.55)
elif(tipo=="i" and kwh>5000):
	y= (kwh*0.60)
print("Valor total:",y)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 23, in <module>
    print("Valor total:",y)
NameError: name 'y' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 09:44:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kwh= float(input("qual o consumo? "))
tipo= input("qual seu tipo? (R,I ou C)").upper()
y= (kwh)
print("Entradas:",kwh,"kWh","e", "tipo",tipo)
if (kwh<0 or tipo!="R" or tipo!="I" or tipo!="C"):
	print("Dados invalidos")

elif(tipo=="R" and kwh<=500):
	y= (kwh*0.44)
elif(tipo=="R" and kwh>500):
	y= (kwh*0.65)
elif(tipo=="C" and kwh<=1000):
	y= (kwh*0.55)
elif(tipo=="C" and kwh>1000):
	y=(kwh*0.60)
elif(tipo=="I" and kwh<=5000):
	y=(kwh*0.55)
elif(tipo=="i" and kwh>5000):
	y= (kwh*0.60)
print("Valor total:",y)



-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
Valor total: -56.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 09:44:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kwh= float(input("qual o consumo? "))
tipo= input("qual seu tipo? (R,I ou C)").upper()
y= (kwh)
print("Entradas:",kwh,"kWh","e", "tipo",tipo)
if (kwh<0 or tipo!="R" or tipo!="I" or tipo!="C"):
	print("Dados invalidos")

elif(tipo=="R" and kwh<=500):
	y= (kwh*0.44)
elif(tipo=="R" and kwh>500):
	y= (kwh*0.65)
elif(tipo=="C" and kwh<=1000):
	y= (kwh*0.55)
elif(tipo=="C" and kwh>1000):
	y=(kwh*0.60)
elif(tipo=="I" and kwh<=5000):
	y=(kwh*0.55)
elif(tipo=="i" and kwh>5000):
	y= (kwh*0.60)
print("Valor total:",y)



-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
Valor total: -56.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 09:45:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kwh= float(input("qual o consumo? "))
tipo= input("qual seu tipo? (R,I ou C)").upper()
y=0
print("Entradas:",kwh,"kWh","e", "tipo",tipo)
if (kwh<0 or tipo!="R" or tipo!="I" or tipo!="C"):
	print("Dados invalidos")

elif(tipo=="R" and kwh<=500):
	y= (kwh*0.44)
elif(tipo=="R" and kwh>500):
	y= (kwh*0.65)
elif(tipo=="C" and kwh<=1000):
	y= (kwh*0.55)
elif(tipo=="C" and kwh>1000):
	y=(kwh*0.60)
elif(tipo=="I" and kwh<=5000):
	y=(kwh*0.55)
elif(tipo=="i" and kwh>5000):
	y= (kwh*0.60)
print("Valor total:",y)



-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
Valor total: 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 09:46:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kwh= float(input("qual o consumo? "))
tipo= input("qual seu tipo? (R,I ou C)").upper()

print("Entradas:",kwh,"kWh","e", "tipo",tipo)
if (kwh<0 or tipo!="R" or tipo!="I" or tipo!="C"):
	print("Dados invalidos")
y=0
elif(tipo=="R" and kwh<=500):
	y= (kwh*0.44)
elif(tipo=="R" and kwh>500):
	y= (kwh*0.65)
elif(tipo=="C" and kwh<=1000):
	y= (kwh*0.55)
elif(tipo=="C" and kwh>1000):
	y=(kwh*0.60)
elif(tipo=="I" and kwh<=5000):
	y=(kwh*0.55)
elif(tipo=="i" and kwh>5000):
	y= (kwh*0.60)
print("Valor total:",y)



-- ERROR:
File "XXXX", line 11
    elif(tipo=="R" and kwh<=500):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 09:46:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kwh= float(input("qual o consumo? "))
tipo= input("qual seu tipo? (R,I ou C)").upper()

print("Entradas:",kwh,"kWh","e", "tipo",tipo)
y=0
if (kwh<0 or tipo!="R" or tipo!="I" or tipo!="C"):
	print("Dados invalidos")

elif(tipo=="R" and kwh<=500):
	y= (kwh*0.44)
elif(tipo=="R" and kwh>500):
	y= (kwh*0.65)
elif(tipo=="C" and kwh<=1000):
	y= (kwh*0.55)
elif(tipo=="C" and kwh>1000):
	y=(kwh*0.60)
elif(tipo=="I" and kwh<=5000):
	y=(kwh*0.55)
elif(tipo=="i" and kwh>5000):
	y= (kwh*0.60)
print("Valor total:",y)



-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
Valor total: 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 09:48:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kwh= float(input("qual o consumo? "))
tipo= input("qual seu tipo? (R,I ou C)").upper()

print("Entradas:",kwh,"kWh","e", "tipo",tipo)
y=1
if (kwh<0 or tipo!="R" or tipo!="I" or tipo!="C"):
	print("Dados invalidos")

elif(tipo=="R" and kwh<=500):
	y= (kwh*0.44)
elif(tipo=="R" and kwh>500):
	y= (kwh*0.65)
elif(tipo=="C" and kwh<=1000):
	y= (kwh*0.55)
elif(tipo=="C" and kwh>1000):
	y=(kwh*0.60)
elif(tipo=="I" and kwh<=5000):
	y=(kwh*0.55)
elif(tipo=="i" and kwh>5000):
	y= (kwh*0.60)
print("Valor total:",y)



-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
Valor total: 1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 09:49:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kwh= float(input("qual o consumo? "))
tipo= input("qual seu tipo? (R,I ou C)").upper()

print("Entradas:",kwh,"kWh","e", "tipo",tipo)
y=0

if(tipo=="R" and kwh<=500):
	y= (kwh*0.44)
elif(tipo=="R" and kwh>500):
	y= (kwh*0.65)
elif(tipo=="C" and kwh<=1000):
	y= (kwh*0.55)
elif(tipo=="C" and kwh>1000):
	y=(kwh*0.60)
elif(tipo=="I" and kwh<=5000):
	y=(kwh*0.55)
elif(tipo=="i" and kwh>5000):
	y= (kwh*0.60)
else:
	print("Dados invalidos")
print("Valor total:",y)



-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: -30.800000000000004
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 09:49:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kwh= float(input("qual o consumo? "))
tipo= input("qual seu tipo? (R,I ou C)").upper()

print("Entradas:",kwh,"kWh","e", "tipo",tipo)
y=0

if(tipo=="R" and kwh<=500):
	y= (kwh*0.44)
elif(tipo=="R" and kwh>500):
	y= (kwh*0.65)
elif(tipo=="C" and kwh<=1000):
	y= (kwh*0.55)
elif(tipo=="C" and kwh>1000):
	y=(kwh*0.60)
elif(tipo=="I" and kwh<=5000):
	y=(kwh*0.55)
elif(tipo=="i" and kwh>5000):
	y= (kwh*0.60)
else:
	print("Dados invalidos")
print("Valor total:",y)



-- EXECUTION TIME:
0.158067
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: -30.800000000000004
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 09:49:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kwh= float(input("qual o consumo? "))
tipo= input("qual seu tipo? (R,I ou C)").upper()

print("Entradas:",kwh,"kWh","e", "tipo",tipo)
y=0

if(tipo=="R" and kwh<=500):
	y= (kwh*0.44)
elif(tipo=="R" and kwh>500):
	y= (kwh*0.65)
elif(tipo=="C" and kwh<=1000):
	y= (kwh*0.55)
elif(tipo=="C" and kwh>1000):
	y=(kwh*0.60)
elif(tipo=="I" and kwh<=5000):
	y=(kwh*0.55)
elif(tipo=="i" and kwh>5000):
	y= (kwh*0.60)
else:
	print("Dados invalidos")
print("Valor total:",y)



-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: -30.800000000000004
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 09:51:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kwh= float(input("qual o consumo? "))
tipo= input("qual seu tipo? (R,I ou C)").upper()

print("Entradas:",kwh,"kWh","e", "tipo",tipo)
y=0

if(tipo=="R" and kwh<=500):
	y= (kwh*0.44)
elif(tipo=="R" and kwh>500):
	y= (kwh*0.65)
elif(tipo=="C" and kwh<=1000):
	y= (kwh*0.55)
elif(tipo=="C" and kwh>1000):
	y=(kwh*0.60)
elif(tipo=="I" and kwh<=5000):
	y=(kwh*0.55)
elif(tipo=="i" and kwh>5000):
	y= (kwh*0.60)
else:
	print("Dados invalidos")
print("Valor total:",round(y,2))



-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 09:51:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kwh= float(input("qual o consumo? "))
tipo= input("qual seu tipo? (R,I ou C)").upper()

print("Entradas:",kwh,"kWh","e", "tipo",tipo)
y=0

if(tipo=="R" and kwh<=500):
	y= (kwh*0.44)
elif(tipo=="R" and kwh>500):
	y= (kwh*0.65)
elif(tipo=="C" and kwh<=1000):
	y= (kwh*0.55)
elif(tipo=="C" and kwh>1000):
	y=(kwh*0.60)
elif(tipo=="I" and kwh<=5000):
	y=(kwh*0.55)
elif(tipo=="i" and kwh>5000):
	y= (kwh*0.60)
else:
	print("Dados invalidos")
print("Valor total:",round(y,2))



-- EXECUTION TIME:
0.133741
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 09:51:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kwh= float(input("qual o consumo? "))
tipo= input("qual seu tipo? (R,I ou C)").upper()

print("Entradas:",kwh,"kWh","e", "tipo",tipo)
y=0

if(tipo=="R" and kwh<=500):
	y= (kwh*0.44)
elif(tipo=="R" and kwh>500):
	y= (kwh*0.65)
elif(tipo=="C" and kwh<=1000):
	y= (kwh*0.55)
elif(tipo=="C" and kwh>1000):
	y=(kwh*0.60)
elif(tipo=="I" and kwh<=5000):
	y=(kwh*0.55)
elif(tipo=="i" and kwh>5000):
	y= (kwh*0.60)
else:
	print("Dados invalidos")
print("Valor total: R$",round(y,2))



-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 09:52:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kwh= float(input("qual o consumo? "))
tipo= input("qual seu tipo? (R,I ou C)").upper()

print("Entradas:",kwh,"kWh","e", "tipo",tipo)
y=0

if(tipo=="R" and kwh<=500):
	y= (kwh*0.44)
elif(tipo=="R" and kwh>500):
	y= (kwh*0.65)
elif(tipo=="C" and kwh<=1000):
	y= (kwh*0.55)
elif(tipo=="C" and kwh>1000):
	y=(kwh*0.60)
elif(tipo=="I" and kwh<=5000):
	y=(kwh*0.55)
elif(tipo=="i" and kwh>5000):
	y= (kwh*0.60)
else:
	print("Dados invalidos")
print("Valor total: R$",round(y,2))



-- EXECUTION TIME:
0.258783
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 09:52:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kwh= float(input("qual o consumo? "))
tipo= input("qual seu tipo? (R,I ou C)").upper()

print("Entradas:",kwh,"kWh","e", "tipo",tipo)
y=0

if(tipo=="R" and kwh<=500):
	y= (kwh*0.44)
elif(tipo=="R" and kwh>500):
	y= (kwh*0.65)
elif(tipo=="C" and kwh<=1000):
	y= (kwh*0.55)
elif(tipo=="C" and kwh>1000):
	y=(kwh*0.60)
elif(tipo=="I" and kwh<=5000):
	y=(kwh*0.55)
elif(tipo=="i" and kwh>5000):
	y= (kwh*0.60)
else:
	print("Dados invalidos")
print("Valor total: R$",round(y,2))



-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 09:53:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kwh= float(input("qual o consumo? "))
tipo= input("qual seu tipo? (R,I ou C)").upper()

print("Entradas:",kwh,"kWh","e", "tipo",tipo)
y=0

if(tipo=="R" and kwh<=500):
	y= (kwh*0.44)
elif(tipo=="R" and kwh>500):
	y= (kwh*0.65)
elif(tipo=="C" and kwh<=1000):
	y= (kwh*0.55)
elif(tipo=="C" and kwh>1000):
	y=(kwh*0.60)
elif(tipo=="I" and kwh<=5000):
	y=(kwh*0.55)
elif(tipo=="i" and kwh>5000):
	y= (kwh*0.60)
else:
	print("Dados invalidos")
print("Valor total: R$",round(y,2))



-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 09:55:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kwh= float(input("qual o consumo? "))
tipo= input("qual seu tipo? (R,I ou C)").upper()

print("Entradas:",kwh,"kWh","e", "tipo",tipo)
y=0

if(tipo=="R" and kwh<=500):
	y= (kwh*0.44)
elif(tipo=="R" and kwh>500):
	y= (kwh*0.65)
elif(tipo=="C" and kwh<=1000):
	y= (kwh*0.55)
elif(tipo=="C" and kwh>1000):
	y=(kwh*0.60)
elif(tipo=="I" and kwh<=5000):
	y=(kwh*0.55)
elif(tipo=="i" and kwh>5000):
	y= (kwh*0.60)
elif(tipo!="R" and tipo!="I" and tipo!="C" and kwh<0):
	print("Dados invalidos")
print("Valor total: R$",round(y,2))



-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 09:55:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kwh= float(input("qual o consumo? "))
tipo= input("qual seu tipo? (R,I ou C)").upper()

print("Entradas:",kwh,"kWh","e", "tipo",tipo)
y=0

if(tipo=="R" and kwh<=500):
	y= (kwh*0.44)
elif(tipo=="R" and kwh>500):
	y= (kwh*0.65)
elif(tipo=="C" and kwh<=1000):
	y= (kwh*0.55)
elif(tipo=="C" and kwh>1000):
	y=(kwh*0.60)
elif(tipo=="I" and kwh<=5000):
	y=(kwh*0.55)
elif(tipo=="i" and kwh>5000):
	y= (kwh*0.60)
elif(tipo!="R" or tipo!="I" or tipo!="C" or kwh<0):
	print("Dados invalidos")
print("Valor total: R$",round(y,2))



-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 09:55:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kwh= float(input("qual o consumo? "))
tipo= input("qual seu tipo? (R,I ou C)").upper()

print("Entradas:",kwh,"kWh","e", "tipo",tipo)
y=0

if(tipo=="R" and kwh<=500):
	y= (kwh*0.44)
elif(tipo=="R" and kwh>500):
	y= (kwh*0.65)
elif(tipo=="C" and kwh<=1000):
	y= (kwh*0.55)
elif(tipo=="C" and kwh>1000):
	y=(kwh*0.60)
elif(tipo=="I" and kwh<=5000):
	y=(kwh*0.55)
elif(tipo=="i" and kwh>5000):
	y= (kwh*0.60)
elif(tipo!="R" or tipo!="I" or tipo!="C" or kwh<0):
	print("Dados invalidos")
print("Valor total: R$",round(y,2))



-- EXECUTION TIME:
0.154727
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 09:56:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kwh= float(input("qual o consumo? "))
tipo= input("qual seu tipo? (R,I ou C)").upper()

print("Entradas:",kwh,"kWh","e", "tipo",tipo)
y=0
elif(tipo!="R" or tipo!="I" or tipo!="C" or kwh<0):
	print("Dados invalidos")

elif(tipo=="R" and kwh<=500):
	y= (kwh*0.44)
elif(tipo=="R" and kwh>500):
	y= (kwh*0.65)
elif(tipo=="C" and kwh<=1000):
	y= (kwh*0.55)
elif(tipo=="C" and kwh>1000):
	y=(kwh*0.60)
elif(tipo=="I" and kwh<=5000):
	y=(kwh*0.55)
elif(tipo=="i" and kwh>5000):
	y= (kwh*0.60)

print("Valor total: R$",round(y,2))



-- ERROR:
File "XXXX", line 9
    elif(tipo!="R" or tipo!="I" or tipo!="C" or kwh<0):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 09:56:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kwh= float(input("qual o consumo? "))
tipo= input("qual seu tipo? (R,I ou C)").upper()

print("Entradas:",kwh,"kWh","e", "tipo",tipo)
y=0
if(tipo!="R" or tipo!="I" or tipo!="C" or kwh<0):
	print("Dados invalidos")

elif(tipo=="R" and kwh<=500):
	y= (kwh*0.44)
elif(tipo=="R" and kwh>500):
	y= (kwh*0.65)
elif(tipo=="C" and kwh<=1000):
	y= (kwh*0.55)
elif(tipo=="C" and kwh>1000):
	y=(kwh*0.60)
elif(tipo=="I" and kwh<=5000):
	y=(kwh*0.55)
elif(tipo=="i" and kwh>5000):
	y= (kwh*0.60)

print("Valor total: R$",round(y,2))



-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
Valor total: R$ 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 09:57:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kwh= float(input("qual o consumo? "))
tipo= input("qual seu tipo? (R,I ou C)").upper()

print("Entradas:",kwh,"kWh","e", "tipo",tipo)
y=0
if(tipo!="R" or tipo!="I" or tipo!="C" or kwh<0):
	print("Dados invalidos")
else:
	elif(tipo=="R" and kwh<=500):
	y= (kwh*0.44)
	elif(tipo=="R" and kwh>500):
	y= (kwh*0.65)
	elif(tipo=="C" and kwh<=1000):
	y= (kwh*0.55)
	elif(tipo=="C" and kwh>1000):
	y=(kwh*0.60)
	elif(tipo=="I" and kwh<=5000):
	y=(kwh*0.55)
	elif(tipo=="i" and kwh>5000):
	y= (kwh*0.60)

print("Valor total: R$",round(y,2))



-- ERROR:
File "XXXX", line 12
    elif(tipo=="R" and kwh<=500):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 09:57:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kwh= float(input("qual o consumo? "))
tipo= input("qual seu tipo? (R,I ou C)").upper()

print("Entradas:",kwh,"kWh","e", "tipo",tipo)
y=0
if(tipo!="R" or tipo!="I" or tipo!="C" or kwh<0):
	print("Dados invalidos")
else:
	elif(tipo=="R" and kwh<=500):
	y= (kwh*0.44)
	elif(tipo=="R" and kwh>500):
	y= (kwh*0.65)
	elif(tipo=="C" and kwh<=1000):
	y= (kwh*0.55)
	elif(tipo=="C" and kwh>1000):
	y=(kwh*0.60)
	elif(tipo=="I" and kwh<=5000):
	y=(kwh*0.55)
	elif(tipo=="i" and kwh>5000):
	y= (kwh*0.60)

print("Valor total: R$",round(y,2))



-- ERROR:
File "XXXX", line 12
    elif(tipo=="R" and kwh<=500):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 09:57:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kwh= float(input("qual o consumo? "))
tipo= input("qual seu tipo? (R,I ou C)").upper()

print("Entradas:",kwh,"kWh","e", "tipo",tipo)
y=0
if(tipo!="R" or tipo!="I" or tipo!="C" or kwh<0):
	print("Dados invalidos")
else:
	elif(tipo=="R" and kwh<=500):
	y= (kwh*0.44)
	elif(tipo=="R" and kwh>500):
	y= (kwh*0.65)
	elif(tipo=="C" and kwh<=1000):
	y= (kwh*0.55)
	elif(tipo=="C" and kwh>1000):
	y=(kwh*0.60)
	elif(tipo=="I" and kwh<=5000):
	y=(kwh*0.55)
	elif(tipo=="i" and kwh>5000):
	y= (kwh*0.60)

print("Valor total: R$",round(y,2))



-- ERROR:
File "XXXX", line 12
    elif(tipo=="R" and kwh<=500):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 09:57:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kwh= float(input("qual o consumo? "))
tipo= input("qual seu tipo? (R,I ou C)").upper()

print("Entradas:",kwh,"kWh","e", "tipo",tipo)
y=0
if(tipo!="R" or tipo!="I" or tipo!="C" or kwh<0):
	print("Dados invalidos")
else:
	if(tipo=="R" and kwh<=500):
	y= (kwh*0.44)
	elif(tipo=="R" and kwh>500):
	y= (kwh*0.65)
	elif(tipo=="C" and kwh<=1000):
	y= (kwh*0.55)
	elif(tipo=="C" and kwh>1000):
	y=(kwh*0.60)
	elif(tipo=="I" and kwh<=5000):
	y=(kwh*0.55)
	elif(tipo=="i" and kwh>5000):
	y= (kwh*0.60)

print("Valor total: R$",round(y,2))



-- ERROR:
File "XXXX", line 13
    y= (kwh*0.44)
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 09:57:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kwh= float(input("qual o consumo? "))
tipo= input("qual seu tipo? (R,I ou C)").upper()

print("Entradas:",kwh,"kWh","e", "tipo",tipo)
y=0
if(tipo!="R" or tipo!="I" or tipo!="C" or kwh<0):
	print("Dados invalidos")
else:
	if(tipo=="R" and kwh<=500):
		y= (kwh*0.44)
	elif(tipo=="R" and kwh>500):
		y= (kwh*0.65)
	elif(tipo=="C" and kwh<=1000):
		y= (kwh*0.55)
	elif(tipo=="C" and kwh>1000):
		y=(kwh*0.60)
	elif(tipo=="I" and kwh<=5000):
		y=(kwh*0.55)
	elif(tipo=="i" and kwh>5000):
		y= (kwh*0.60)

	print("Valor total: R$",round(y,2))



-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 09:57:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kwh= float(input("qual o consumo? "))
tipo= input("qual seu tipo? (R,I ou C)").upper()

print("Entradas:",kwh,"kWh","e", "tipo",tipo)
y=0
if(tipo!="R" or tipo!="I" or tipo!="C" or kwh<0):
	print("Dados invalidos")
else:
	if(tipo=="R" and kwh<=500):
		y= (kwh*0.44)
	elif(tipo=="R" and kwh>500):
		y= (kwh*0.65)
	elif(tipo=="C" and kwh<=1000):
		y= (kwh*0.55)
	elif(tipo=="C" and kwh>1000):
		y=(kwh*0.60)
	elif(tipo=="I" and kwh<=5000):
		y=(kwh*0.55)
	elif(tipo=="i" and kwh>5000):
		y= (kwh*0.60)

	print("Valor total: R$",round(y,2))



-- EXECUTION TIME:
0.162877
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Dados invalidos
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 09:58:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kwh= float(input("qual o consumo? "))
tipo= input("qual seu tipo? (R,I ou C)").upper()

print("Entradas:",kwh,"kWh","e", "tipo",tipo)
y=0
if(tipo!="R" or tipo!="I" or tipo!="C" or kwh<0):
	print("Dados invalidos")
else:
	if(tipo=="R" and kwh<=500):
		y= (kwh*0.44)
	elif(tipo=="R" and kwh>500):
		y= (kwh*0.65)
	elif(tipo=="C" and kwh<=1000):
		y= (kwh*0.55)
	elif(tipo=="C" and kwh>1000):
		y=(kwh*0.60)
	elif(tipo=="I" and kwh<=5000):
		y=(kwh*0.55)
	elif(tipo=="i" and kwh>5000):
		y= (kwh*0.60)

	print("Valor total: R$",round(y,2))



-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 09:58:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kwh= float(input("qual o consumo? "))
tipo= input("qual seu tipo? (R,I ou C)").upper()

print("Entradas:",kwh,"kWh","e", "tipo",tipo)
y=0
if(tipo!="R" or tipo!="I" or tipo!="C" or kwh<0):
	print("Dados invalidos")
else:
	if(tipo=="R" and kwh<=500):
		y= (kwh*0.44)
	elif(tipo=="R" and kwh>500):
		y= (kwh*0.65)
	elif(tipo=="C" and kwh<=1000):
		y= (kwh*0.55)
	elif(tipo=="C" and kwh>1000):
		y=(kwh*0.60)
	elif(tipo=="I" and kwh<=5000):
		y=(kwh*0.55)
	elif(tipo=="i" and kwh>5000):
		y= (kwh*0.60)

	print("Valor total: R$",round(y,2))



-- EXECUTION TIME:
0.145455
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Dados invalidos
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 09:59:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kwh= float(input("qual o consumo? "))
tipo= input("qual seu tipo? (R,I ou C)").upper()

print("Entradas:",kwh,"kWh","e", "tipo",tipo)
y=0
if(tipo!="R" or tipo!="I" or tipo!="C" or kwh<0):
	print("Dados invalidos")

elif(tipo=="R" and kwh<=500):
	y= (kwh*0.44)
elif(tipo=="R" and kwh>500):
	y= (kwh*0.65)
elif(tipo=="C" and kwh<=1000):
	y= (kwh*0.55)
elif(tipo=="C" and kwh>1000):
	y=(kwh*0.60)
elif(tipo=="I" and kwh<=5000):
	y=(kwh*0.55)
elif(tipo=="i" and kwh>5000):
	y= (kwh*0.60)

print("Valor total: R$",round(y,2))



-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
Valor total: R$ 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 10:01:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
kwh= float(input("qual o consumo? "))
tipo= input("qual seu tipo? (R,I ou C)").upper()

print("Entradas:",kwh,"kWh","e", "tipo",tipo)

if(tipo!="R" or tipo!="I" or tipo!="C" or kwh<0):
	print("Dados invalidos")

elif(tipo=="R" and kwh<=500):
	y= (kwh*0.44)
elif(tipo=="R" and kwh>500):
	y= (kwh*0.65)
elif(tipo=="C" and kwh<=1000):
	y= (kwh*0.55)
elif(tipo=="C" and kwh>1000):
	y=(kwh*0.60)
elif(tipo=="I" and kwh<=5000):
	y=(kwh*0.55)
elif(tipo=="i" and kwh>5000):
	y= (kwh*0.60)

print("Valor total: R$",round(y,2))



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 25, in <module>
    print("Valor total: R$",round(y,2))
NameError: name 'y' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 10:09:59) 
-- CODE:
c = float(input("consumo em kWh: "))
t = input("residencias(r)/industrias(i)/comercios(c): ")
print("Entradas:", c, "kWh e tipo", t)
y = "Dados invalidos"
if ((t.lower()!= "r") and (t.lower()!= "i") and (t.lower()!= "c")) or (c<0):
	print(y)
elif (c <= 500) and (t.lower()=="r"):
	a = c*0.44
	print('Valor total: R$ ', round(a, 2))
elif (c > 500) and (t.lower()== "r"):
	a = c*0.65
	print('Valor total: R$ ', round(a, 2))
elif (c<=1000) and (t.lower()== "c"):
	a = c*0.55
	print('Valor total: R$ ', round(a, 2))
elif (c>1000) and (t.lower()== "c"):
	a = c*0.60
	print('Valor total: R$ ', round(a, 2))
elif (c<=5000) and (t.lower()== "i"):
	a = c*0.55
	print('Valor total: R$ ', round(a, 2))
elif (c>5000) and (t.lower()== "i"):
	a = c*0.60
	print('Valor total: R$ ', round(a, 2))



-- EXECUTION TIME:
0.150607
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$  621.08
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
