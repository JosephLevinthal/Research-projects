== TEST (2019-03-21 11:28:10) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:

8 = float((input(" 150 "))

# Calculo do valor a ser pago, incluindo o frete:
total = 1245

# Impressao do valor total:
print(1245)
-- ERROR:
File "XXXX", line 9
    total = 1245
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:28:58) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:

8 = float((input(" 150 "))

# Calculo do valor a ser pago, incluindo o frete:
total = (150*8)+45

# Impressao do valor total:
print(1245)
-- ERROR:
File "XXXX", line 9
    total = (150*8)+45
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:29:19) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:

8 = float((input(" 150 "))

# Calculo do valor a ser pago, incluindo o frete:
total = input((150*8)+45)

# Impressao do valor total:
print(1245)
-- ERROR:
File "XXXX", line 9
    total = input((150*8)+45)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:30:10) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:

8 = float((input(" 150 "))

# Calculo do valor a ser pago, incluindo o frete:
total = float((150*8)+45)

# Impressao do valor total:
print(1245)
-- ERROR:
File "XXXX", line 9
    total = float((150*8)+45)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:30:56) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:

8 = float((input(" 150 "))

# Calculo do valor a ser pago, incluindo o frete:
total=(150*8)+45

# Impressao do valor total:
print(1245)
-- ERROR:
File "XXXX", line 9
    total=(150*8)+45
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:31:19) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:

8 = float((input(" 150 "))

# Calculo do valor a ser pago, incluindo o frete:
total=((150*8)+45)

# Impressao do valor total:
print(1245)
-- ERROR:
File "XXXX", line 9
    total=((150*8)+45)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:32:10) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:

8 = (input(" 150 ")

# Calculo do valor a ser pago, incluindo o frete:
total=((150*8)+45)

# Impressao do valor total:
print(1245)
-- ERROR:
File "XXXX", line 9
    total=((150*8)+45)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:34:05) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:

8 = float((input(" 150 "))

# Calculo do valor a ser pago, incluindo o frete:
total=((150*8)+45)

# Impressao do valor total:
print(1245)
-- ERROR:
File "XXXX", line 9
    total=((150*8)+45)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:35:20) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:

var = (input(" 150 ")

# Calculo do valor a ser pago, incluindo o frete:
total=((150*8)+45)

# Impressao do valor total:
print(1245)
-- ERROR:
File "XXXX", line 9
    total=((150*8)+45)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:35:57) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:

var = (input(" 150 "))

# Calculo do valor a ser pago, incluindo o frete:
total=((150*8)+45)

# Impressao do valor total:
print(1245)
-- OUTPUT:
1245
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:36:03) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:

var = (input(" 150 "))

# Calculo do valor a ser pago, incluindo o frete:
total=((150*8)+45)

# Impressao do valor total:
print(1245)
-- OUTPUT:
1245
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 11:36:08) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:

var = (input(" 150 "))

# Calculo do valor a ser pago, incluindo o frete:
total=((150*8)+45)

# Impressao do valor total:
print(1245)
-- EXECUTION TIME:
0.125012
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
1245
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
1245
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
1245
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:36:10) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:

var = (input(" 150 "))

# Calculo do valor a ser pago, incluindo o frete:
total=((150*8)+45)

# Impressao do valor total:
print(1245)
-- OUTPUT:
1245
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:36:27) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:

var = (input(" 150 "))

# Calculo do valor a ser pago, incluindo o frete:
total=((var*8)+45)

# Impressao do valor total:
print(1245)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    total=((var*8)+45)
TypeError: must be str, not int
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:37:14) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:

var = (input(int("150")))

# Calculo do valor a ser pago, incluindo o frete:
total=((var*8)+45)

# Impressao do valor total:
print(1245)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    total=((var*8)+45)
TypeError: must be str, not int
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 11:37:18) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:

var = (input(int("150")))

# Calculo do valor a ser pago, incluindo o frete:
total=((var*8)+45)

# Impressao do valor total:
print(1245)
-- EXECUTION TIME:
0.177962
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1585/2894/main.py", line 9, in <module>
    total=((var*8)+45)
TypeError: Can't convert 'int' object to str implicitly

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:44:01) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:

var = (input(int("150")))

# Calculo do valor a ser pago, incluindo o frete:
total=((var*8)+45)

# Impressao do valor total:
print(1245)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    total=((var*8)+45)
TypeError: must be str, not int
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:44:28) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:

var = (input(int("150")))

# Calculo do valor a ser pago, incluindo o frete:
total=((150*8)+45)

# Impressao do valor total:
print(1245)
-- OUTPUT:
1501245
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:45:35) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:

var = float(input("150"))

# Calculo do valor a ser pago, incluindo o frete:
total=((150*8)+45)

# Impressao do valor total:
print(1245)
-- OUTPUT:
1245
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:52:29) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:

j = int(input("jogo: "))

# Calculo do valor a ser pago, incluindo o frete:
total= (j*8)+45

# Impressao do valor total:
print()
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    j = int(input())
ValueError: invalid literal for int() with base 10: '1.23'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:52:45) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:

j = float(input("jogo: "))

# Calculo do valor a ser pago, incluindo o frete:
total= (j*8)+45

# Impressao do valor total:
print()
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    j = int(input())
ValueError: invalid literal for int() with base 10: '1.23'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:53:11) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:

j = float(input("jogo: "))

# Calculo do valor a ser pago, incluindo o frete:
total= (j*8)+45

# Impressao do valor total:
print()
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    j = int(input())
ValueError: invalid literal for int() with base 10: '1.23'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:54:38) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:

j = float(input("jogo: "))

# Calculo do valor a ser pago, incluindo o frete:
total= (j*8)+45

# Impressao do valor total:
print()
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    j = int(input())
ValueError: invalid literal for int() with base 10: '1.23'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:55:09) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:

j = input(float("jogo:"))

# Calculo do valor a ser pago, incluindo o frete:
total= (j*8)+45

# Impressao do valor total:
print()
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    j = input(float("jogo:"))
ValueError: could not convert string to float: 'jogo:'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:55:22) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:

j = input(float("jogo: "))

# Calculo do valor a ser pago, incluindo o frete:
total= (j*8)+45

# Impressao do valor total:
print()
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    j = input(float("jogo: "))
ValueError: could not convert string to float: 'jogo: '
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:55:38) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:

j = float(input("jogo: "))

# Calculo do valor a ser pago, incluindo o frete:
total= (j*8)+45

# Impressao do valor total:
print()
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    j = input(float("jogo: "))
ValueError: could not convert string to float: 'jogo: '
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:57:27) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:

j = float(input("jogo: "))

# Calculo do valor a ser pago, incluindo o frete:
total= (j*8+45)

# Impressao do valor total:
print()
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    j = input(float("jogo: "))
ValueError: could not convert string to float: 'jogo: '
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:57:45) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:

j = float(input("jogo: "))

# Calculo do valor a ser pago, incluindo o frete:
total= (j*8+45)

# Impressao do valor total:
print(total)
-- OUTPUT:
54.84
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 11:57:52) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:

j = float(input("jogo: "))

# Calculo do valor a ser pago, incluindo o frete:
total= (j*8+45)

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.131334
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
54.84
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
2893.0
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
991941.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
