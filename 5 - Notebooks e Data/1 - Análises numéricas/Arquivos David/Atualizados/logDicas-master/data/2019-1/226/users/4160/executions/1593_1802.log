== TEST (2019-03-23 11:30:01) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos inicias de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lançamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lançamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import sqrt
from math import pi
dano = sqrt ( 5 * d1 ) + ( pi**d2/3 )

print(dano)


-- OUTPUT:
322.6991325026012
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 11:30:27) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos inicias de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import sqrt
from math import pi
dano = sqrt ( 5 * d1 ) + ( pi**d2/3 )

print(dano)


-- OUTPUT:
322.6991325026012
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 11:30:51) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos inicias de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import sqrt
from math import pi
dano = sqrt ( 5 * d1 ) + ( pi**d2/3 )

print(dano)


-- EXECUTION TIME:
0.104862
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
322.6991325026012
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
325.94029010015305
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
3.283265528696387
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 11:31:27) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos inicias de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import sqrt
from math import pi
dano = sqrt ( 5 * d1 ) + ( pi**d2/3 )

print(int(dano))


-- OUTPUT:
322
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 11:31:42) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos inicias de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import sqrt
from math import pi
dano = sqrt ( 5 * d1 ) + ( pi**d2/3 )

print(int(dano))


-- OUTPUT:
322
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 11:32:16) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos inicias de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import sqrt
from math import pi
dano = sqrt ( 5 * d1 ) + ( pi**d2/3 )

print(int(dano))


-- EXECUTION TIME:
0.222427
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
322
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
325
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 11:32:49) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos inicias de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import sqrt
from math import pi
dano = sqrt ( 5 * d1 ) + ( pi ** d2/3 )

print(int(dano))


-- OUTPUT:
322
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 11:33:36) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = float(input(" Digite os pontos inicias de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = float(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = float(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import sqrt
from math import pi
dano = sqrt ( 5 * d1 ) + ( pi ** d2/3 )

print(int(dano))


-- OUTPUT:
322
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 11:33:49) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = float(input(" Digite os pontos inicias de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = float(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = float(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import sqrt
from math import pi
dano = sqrt ( 5 * d1 ) + ( pi ** d2/3 )

print(int(dano))


-- EXECUTION TIME:
0.179292
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
322
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
325
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 11:38:50) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = float(input(" Digite os pontos inicias de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = float(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = float(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import sqrt
from math import pi
dano = sqrt (( 5 * d1 )) + ( pi ** d2/3 )

print(int(dano))


-- OUTPUT:
322
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 11:39:30) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = float(input(" Digite os pontos inicias de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = float(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = float(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import sqrt
from math import pi
dano = sqrt (( 5 * d1 )) +  pi ** d2/3 

print(int(dano))


-- OUTPUT:
322
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 11:40:12) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos inicias de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import sqrt
from math import pi
dano = sqrt (( 5 * d1 )) +  pi ** d2/3 

print(int(dano))


-- OUTPUT:
322
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 11:56:12) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos inicias de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import sqrt
from math import pi
dano = sqrt (( 5 * d1 )) +  pi ** d2/3 

print(int(vida - dano))


-- OUTPUT:
-122
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 11:56:22) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos inicias de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import sqrt
from math import pi
dano = sqrt (( 5 * d1 )) +  pi ** d2/3 

print(int(vida - dano))


-- EXECUTION TIME:
0.303233
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
-122
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
-25
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
496
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 11:56:47) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos inicias de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import sqrt
from math import pi
dano = (sqrt ( 5 * d1 )) +  pi ** d2/3 

print(int(vida - dano))


-- OUTPUT:
-122
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 12:00:22) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos inicias de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import sqrt
from math import pi
dano = (sqrt ( 5 * d1 ) +  pi ** d2/3 )

print(int(vida - dano))


-- OUTPUT:
-122
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 12:00:59) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos inicias de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import sqrt
from math import pi
dano = sqrt ( 5 * d1 ) +  pi ** 3 /d2 

print(int(vida - dano))


-- OUTPUT:
192
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 12:01:17) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos inicias de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import sqrt
from math import pi
dano = sqrt ( 5 * d1 ) +  pi ** 3 /d2 

print(int(vida - dano))


-- EXECUTION TIME:
0.126722
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
192
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
289
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
466
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 19:02:47) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos inicias de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import sqrt
from math import pi
dano = sqrt ( 5 * d1 ) +  pi ** 3 /d2 

print(int(vida - dano))


-- OUTPUT:
192
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 19:03:22) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos de vida iniciais de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import sqrt
from math import pi
dano = sqrt ( 5 * d1 ) +  (pi ** 3 /d2 )

print(int(vida - dano))


-- OUTPUT:
192
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 19:03:54) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos de vida iniciais de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import sqrt
from math import pi
dano = sqrt ( 5 * d1 ) +  (pi ** 3 /d2 )

print(int(vida - dano))


-- EXECUTION TIME:
0.176838
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
192
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
289
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
466
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 19:05:17) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos de vida iniciais de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import sqrt
from math import pi
dano = sqrt ( 5 * d1 ) +  (pi ** d2/ 3 )

print(int(vida - dano))


-- OUTPUT:
-122
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 19:06:11) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos de vida iniciais de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import sqrt
from math import pi
dano = sqrt ( 5 * d1 ) +  (pi ** 3/d2 )

print(int(vida - dano))


-- EXECUTION TIME:
0.162014
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
192
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
289
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
466
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 19:07:17) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos de vida iniciais de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import sqrt
from math import pi
dano = sqrt ( 5 * d1 ) +  (pi ** 3/d2 )

print(vida - dano)


-- OUTPUT:
192.59621924245025
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 19:07:54) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos de vida iniciais de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import sqrt
from math import pi
dano = int(sqrt ( 5 * d1 ) +  (pi ** 3/d2 ))

print(vida - dano)


-- OUTPUT:
193
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 19:08:18) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos de vida iniciais de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import sqrt
from math import pi
dano = int(sqrt ( 5 * d1 ) +  (pi ** 3/d2 ))

print(vida - dano)


-- EXECUTION TIME:
0.149097
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
193
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
290
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
467
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 19:08:39) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos de vida iniciais de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import sqrt
from math import pi
dano = int(sqrt ( 5 * d1 ) +  (pi ** 3/d2 )) + 4

print(vida - dano)


-- OUTPUT:
189
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 19:08:54) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos de vida iniciais de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import sqrt
from math import pi
dano = int(sqrt ( 5 * d1 ) +  (pi ** 3/d2 )) - 4

print(vida - dano)


-- OUTPUT:
197
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 19:09:04) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos de vida iniciais de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import sqrt
from math import pi
dano = int(sqrt ( 5 * d1 ) +  (pi ** 3/d2 )) - 4

print(vida - dano)


-- EXECUTION TIME:
0.167099
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
197
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
294
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
471
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 19:09:56) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos de vida iniciais de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import sqrt
from math import pi
dano = int⌊(sqrt ( 5 * d1 ) +  (pi ** 3/d2 ))⌋ 

print(vida - dano)


-- ERROR:
File "XXXX", line 11
    dano = int⌊(sqrt ( 5 * d1 ) +  (pi ** 3/d2 ))⌋ 
              ^
SyntaxError: invalid character in identifier
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 19:10:28) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos de vida iniciais de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import sqrt
from math import pi
from math import ⌊⌋
dano = int⌊(sqrt ( 5 * d1 ) +  (pi ** 3/d2 ))⌋

print(vida - dano)


-- ERROR:
File "XXXX", line 11
    from math import ⌊⌋
                      ^
SyntaxError: invalid character in identifier
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 19:11:03) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos de vida iniciais de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import sqrt
from math import pi

dano = int(sqrt ( 5 * d1 ) +  (pi ** 3/d2 ))

print(vida - dano)


-- OUTPUT:
193
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 19:11:32) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos de vida iniciais de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import sqrt
from math import pi

dano = int(sqrt ( 5 * d1 ) +  (pi ** 3/d2 ))

print(vida - dano)


-- OUTPUT:
193
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 19:12:19) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos de vida iniciais de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import sqrt
from math import pi

dano = int(sqrt ( 5 * d1 ) +  (pi ** 3/d2 ))

print(int(vida - dano))


-- OUTPUT:
193
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 19:12:30) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos de vida iniciais de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import sqrt
from math import pi

dano = int(sqrt ( 5 * d1 ) +  (pi ** 3/d2 ))

print(int(vida - dano))


-- EXECUTION TIME:
0.163309
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
193
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
290
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
467
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 19:12:55) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos de vida iniciais de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import sqrt
from math import pi

dano = int(sqrt ( 5 * d1 ) +  (pi ** d2/3  ))

print(int(vida - dano))


-- OUTPUT:
-122
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 19:13:06) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos de vida iniciais de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import sqrt
from math import pi

dano = int(sqrt ( 5 * d1 ) +  (pi ** d2/3  ))

print(int(vida + dano))


-- OUTPUT:
522
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 19:15:03) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos de vida iniciais de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import sqrt
from math import pi

dano = int(sqrt ( 2.5 * d1 ) +  (pi ** d2/3  ))

print(int(vida - dano))


-- OUTPUT:
-122
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 19:15:22) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos de vida iniciais de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import sqrt
from math import pi

dano = int(sqrt ( 10 * d1 ) +  (pi ** d2/3  ))

print(int(vida - dano))


-- OUTPUT:
-123
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 19:15:33) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos de vida iniciais de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import sqrt
from math import pi

dano = int(sqrt ( 5 * d1 ) +  (pi ** d2/3  ))

print(int(vida - dano))


-- OUTPUT:
-122
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 19:16:14) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos de vida iniciais de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import sqrt
from math import pi

dano = int(sqrt ( 5 * d1 ) +  (pi ** 3/d2 ))

print(int(vida - dano))


-- OUTPUT:
193
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 19:17:17) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos de vida iniciais de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import *

dano = int⌊(sqrt ( 5 * d1 ) +  (pi ** 3/d2 ))⌋

print(int(vida - dano))


-- ERROR:
File "XXXX", line 11
    dano = int⌊(sqrt ( 5 * d1 ) +  (pi ** 3/d2 ))⌋
              ^
SyntaxError: invalid character in identifier
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 19:17:28) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos de vida iniciais de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import *

dano = int(sqrt ( 5 * d1 ) +  (pi ** 3/d2 ))

print(int(vida - dano))


-- OUTPUT:
193
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 19:17:56) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos de vida iniciais de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import *

dano = int(sqrt ( 5 * d1 )) +  (pi ** 3/d2 )

print(int(vida - dano))


-- OUTPUT:
192
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 19:18:05) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos de vida iniciais de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import *

dano = int(sqrt ( 5 * d1 )) +  (pi ** 3/d2 )

print(int(vida - dano))


-- EXECUTION TIME:
0.124101
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
192
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
289
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
466
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 19:19:25) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos de vida iniciais de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import *

dano = int(sqrt ( 5 * d1 )) +  (pi ** 3/d2 )
s = (vida - dado) + 4  
print (s)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    s = (vida - dado) + 4  
NameError: name 'dado' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 19:19:43) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos de vida iniciais de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import *

dano = int(sqrt ( 5 * d1 )) +  (pi ** 3/d2 )
s = (vida - dano) + 4  
print (s)


-- OUTPUT:
196.83228721995002
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 19:20:04) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos de vida iniciais de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import *

dano = int(sqrt ( 5 * d1 )) +  (pi ** 3/d2 )
s = int((vida - dano) + 4)
print (s)


-- OUTPUT:
196
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 19:20:13) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos de vida iniciais de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import *

dano = int(sqrt ( 5 * d1 )) +  (pi ** 3/d2 )
s = int((vida - dano) + 4)
print (s)


-- EXECUTION TIME:
0.154061
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
196
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
293
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
470
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 19:20:52) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos de vida iniciais de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import *

dano = int sqrt ( 5 * d1 ) +  pi ** 3/d2 
s = int(vida - dano)
print (s)


-- ERROR:
File "XXXX", line 11
    dano = int sqrt ( 5 * d1 ) +  pi ** 3/d2 
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 19:21:00) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos de vida iniciais de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import *

dano = int (sqrt ( 5 * d1 ) +  pi ** 3/d2 )
s = int(vida - dano)
print (s)


-- OUTPUT:
193
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:30:19) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos de vida iniciais de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import *

dano = int (sqrt ( 5 * d1 ) +  pi ** 3/d2 )
s = int(vida - dano)
print (s)


-- OUTPUT:
193
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:31:13) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos de vida iniciais de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import *

dano = int (sqrt ( 5 * d1 ) +  pi ** d2 // 3)
s = int(vida - dano)
print (s)


-- OUTPUT:
-122
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:31:29) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos de vida iniciais de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import *

dano = int (sqrt ( 5 * d1 ) +  pi ** d2 / 3)
s = int(vida - dano)
print (s)


-- OUTPUT:
-122
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:31:51) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos de vida iniciais de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import *

dano = int (sqrt ( 5 * d1 ) +  pi ** 3 / d2)
s = int(vida - dano)
print (s)


-- OUTPUT:
193
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:32:56) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos de vida iniciais de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import *

dano = int (sqrt ( 5 * d1 )) +  pi ** 3 / d2
s = int(vida - dano)
print (s)


-- OUTPUT:
192
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:59:13) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos de vida iniciais de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import sqrt
from math import pi

dano = int (sqrt ( 5 * d1 )) +  pi ** 3 / d2
s = int(vida - dano)
print (s)


-- OUTPUT:
192
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:00:10) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos de vida iniciais de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import sqrt
from math import pi

dano = int (sqrt ( 5 * d1 )) +  pi ** d2 // 3
s = int(vida - dano)
print (s)


-- OUTPUT:
-122
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:00:37) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos de vida iniciais de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import sqrt
from math import pi

dano = int (sqrt ( 5 * d1 ) +  pi ** (d2 // 3))
s = int(vida - dano)
print (s)


-- OUTPUT:
188
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:01:12) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos de vida iniciais de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import sqrt
from math import pi

dano = int (sqrt ( 5 * d1 ) +  pi ** (d2 / 3))
s = int(vida - dano)
print (s)


-- OUTPUT:
188
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 11:01:19) 
-- CODE:
# Pontos de vida iniciais de um monstro antes de uma batalha de RPG (Role Playing Game): 
vida = int(input(" Digite os pontos de vida iniciais de um monstro: "))

# Os valores sorteados no lançamento de dois dados de vinte faces (d1 e d2):
d1 = int(input(" Digite os valores sorteados no lancamento de um dado: "))
d2 = int(input(" Digite os valores sorteados no lancamento do outro dado: "))

#  O dano causado pelo golpe corresponde à parte inteira do seguinte resultado:
from math import sqrt
from math import pi

dano = int (sqrt ( 5 * d1 ) +  pi ** (d2 / 3))
s = int(vida - dano)
print (s)


-- EXECUTION TIME:
0.182781
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
188
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
285
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
