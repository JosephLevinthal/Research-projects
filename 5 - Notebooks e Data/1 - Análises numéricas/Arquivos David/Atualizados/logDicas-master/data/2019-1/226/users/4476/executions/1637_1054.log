== TEST (2019-04-09 11:03:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("coordenada x: "))
y = float(input("coordenada y: "))

p = (2*x + y = 3)

if (p == 3):
	print("ponto pertence a reta")
	
else:
	("ponto nao pertence a reta")
-- ERROR:
File "XXXX", line 7
    p = (2*x + y = 3)
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:03:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("coordenada x: "))
y = float(input("coordenada y: "))

p = ((2*x) + y = 3)

if (p == 3):
	print("ponto pertence a reta")
	
else:
	("ponto nao pertence a reta")
-- ERROR:
File "XXXX", line 7
    p = ((2*x) + y = 3)
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:04:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("coordenada x: "))
y = float(input("coordenada y: "))

p = ((2*x) + y)
p = 3
if (p == 3):
	print("ponto pertence a reta")
	
else:
	("ponto nao pertence a reta")
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:04:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("coordenada x: "))
y = float(input("coordenada y: "))

p = ((2*x) + y)
p = 3
if (p == 3):
	print("ponto pertence a reta")
	
else:
	("ponto nao pertence a reta")
-- EXECUTION TIME:
0.148394
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto pertence a reta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:12:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("coordenada x: "))
y = float(input("coordenada y: "))

p = ((2*x) + y)

if (p == 3):
	print("ponto pertence a reta")
	
else:
	("ponto nao pertence a reta")
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:12:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("coordenada x: "))
y = float(input("coordenada y: "))

p = ((2*x) + y)

if (p == 3):
	print("ponto pertence a reta")
	
else:
	("ponto nao pertence a reta")
-- EXECUTION TIME:
0.140117
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:13:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("coordenada x: "))
y = float(input("coordenada y: "))

p = (2*x + y)

if (p == 3):
	print("ponto pertence a reta")
	
else:
	("ponto nao pertence a reta")
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:14:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("coordenada x: "))
y = float(input("coordenada y: "))

p = (2*x + y)

if (p == 3):
	print("ponto pertence a reta")
	
else (p != 3):
	("ponto nao pertence a reta")
-- ERROR:
File "XXXX", line 12
    else (p != 3):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:15:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("coordenada x: "))
y = float(input("coordenada y: "))

p = (2*x + y)

if (p == 3):
	print("ponto pertence a reta")
	
else (p != 3):
	("ponto nao pertence a reta")
-- ERROR:
File "XXXX", line 12
    else (p != 3):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:15:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("coordenada x: "))
y = float(input("coordenada y: "))

p = (2*x + y)

if (p == 3):
	print("ponto pertence a reta")
	
else (p != 3):
	("ponto nao pertence a reta")
-- ERROR:
File "XXXX", line 12
    else (p != 3):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:15:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("coordenada x: "))
y = float(input("coordenada y: "))

p = (2*x + y)

if (p == 3):
	print("ponto pertence a reta")
	
else:
	("ponto nao pertence a reta")
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:15:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("coordenada x: "))
y = float(input("coordenada y: "))

p = (2*x + y)

if (p == 3):
	print("ponto pertence a reta")
	
else:
	("ponto nao pertence a reta")
-- EXECUTION TIME:
0.201113
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:16:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("coordenada x: "))
y = float(input("coordenada y: "))

p = (2*x + y)

if (p == 3):
	print("ponto pertence a reta")
	
else:
	print("ponto nao pertence a reta")
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:16:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("coordenada x: "))
y = float(input("coordenada y: "))

p = (2*x + y)

if (p == 3):
	print("ponto pertence a reta")
	
else:
	print("ponto nao pertence a reta")
-- EXECUTION TIME:
0.143244
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
