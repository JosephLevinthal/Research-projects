== SUBMITION (2019-04-26 22:55:24) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("Digite x: "))
y = float(input("Digite y: "))

if(x==0 and y==0):
	print("Origem")
elif(x==0):
	print("Eixo X")
elif(y==0):
	print("Eixo Y")
elif(x>0 and y>0):
    print("Q1")
elif(x<0 and y>0):
	print("Q2")
elif(x<0 and y<0):
	print("Q3")
elif(x>0 and y<0)
	print("Q4")
	
-- EXECUTION TIME:
0.189791
-- ERROR:
  File "/home/codebench/codes/1674/1872/main.py", line 17
    elif(x>0 and y<0)
                    ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:55:27) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("Digite x: "))
y = float(input("Digite y: "))

if(x==0 and y==0):
	print("Origem")
elif(x==0):
	print("Eixo X")
elif(y==0):
	print("Eixo Y")
elif(x>0 and y>0):
    print("Q1")
elif(x<0 and y>0):
	print("Q2")
elif(x<0 and y<0):
	print("Q3")
elif(x>0 and y<0)
	print("Q4")
	
-- ERROR:
File "XXXX", line 17
    elif(x>0 and y<0)
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 22:55:39) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("Digite x: "))
y = float(input("Digite y: "))

if(x==0 and y==0):
	print("Origem")
elif(x==0):
	print("Eixo X")
elif(y==0):
	print("Eixo Y")
elif(x>0 and y>0):
    print("Q1")
elif(x<0 and y>0):
	print("Q2")
elif(x<0 and y<0):
	print("Q3")
elif(x>0 and y<0):
	print("Q4")
	
-- EXECUTION TIME:
0.135209
-- TEST CASE 1:
---- input:
4.5
-2.2
---- correct output:
Q4
---- user output:
Q4
-- TEST CASE 2:
---- input:
0.1
0
---- correct output:
Eixo X
---- user output:
Eixo Y
-- TEST CASE 3:
---- input:
0.0
0.0
---- correct output:
Origem
---- user output:
Origem
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:55:41) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("Digite x: "))
y = float(input("Digite y: "))

if(x==0 and y==0):
	print("Origem")
elif(x==0):
	print("Eixo X")
elif(y==0):
	print("Eixo Y")
elif(x>0 and y>0):
    print("Q1")
elif(x<0 and y>0):
	print("Q2")
elif(x<0 and y<0):
	print("Q3")
elif(x>0 and y<0):
	print("Q4")
	
-- OUTPUT:
Q4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 22:55:55) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("Digite x: "))
y = float(input("Digite y: "))

if(x==0 and y==0):
	print("Origem")
elif(x==0):
	print("Eixo X")
elif(y==0):
	print("Eixo Y")
elif(x>0 and y>0):
    print("Q1")
elif(x<0 and y>0):
	print("Q2")
elif(x<0 and y<0):
	print("Q3")
elif(x>0 and y<0):
	print("Q4")
	
-- EXECUTION TIME:
0.139965
-- TEST CASE 1:
---- input:
4.5
-2.2
---- correct output:
Q4
---- user output:
Q4
-- TEST CASE 2:
---- input:
0.1
0
---- correct output:
Eixo X
---- user output:
Eixo Y
-- TEST CASE 3:
---- input:
0.0
0.0
---- correct output:
Origem
---- user output:
Origem
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:56:07) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("Digite x: "))
y = float(input("Digite y: "))

if(x==0 and y==0):
	print("Origem")
elif(x==0):
	print("Eixo X")
elif(y==0):
	print("Eixo Y")
elif(x>0 and y>0):
    print("Q1")
elif(x<0 and y>0):
	print("Q2")
elif(x<0 and y<0):
	print("Q3")
elif(x>0 and y<0):
	print("Q4")
	
-- OUTPUT:
Q4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 22:56:33) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("Digite x: "))
y = float(input("Digite y: "))

if(x==0 and y==0):
	print("Origem")
elif(x==0):
	print("Eixo Y")
elif(y==0):
	print("Eixo X")
elif(x>0 and y>0):
    print("Q1")
elif(x<0 and y>0):
	print("Q2")
elif(x<0 and y<0):
	print("Q3")
elif(x>0 and y<0):
	print("Q4")
	
-- EXECUTION TIME:
0.160819
-- TEST CASE 1:
---- input:
4.5
-2.2
---- correct output:
Q4
---- user output:
Q4
-- TEST CASE 2:
---- input:
0.1
0
---- correct output:
Eixo X
---- user output:
Eixo X
-- TEST CASE 3:
---- input:
0.0
0.0
---- correct output:
Origem
---- user output:
Origem
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
