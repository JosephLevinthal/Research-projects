== TEST (2019-03-12 20:34:03) 
-- CODE:
frase = "Ada Locelace foi a primeira programadora da historia"
print("Ada Locelace foi a primeira programadora da historia.upper())
-- ERROR:
File "XXXX", line 2
    print("Ada Locelace foi a primeira programadora da historia.upper())
                                                                       ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 20:34:15) 
-- CODE:
frase = "Ada Locelace foi a primeira programadora da historia"
print("Ada Locelace foi a primeira programadora da historia.upper()
-- ERROR:
File "XXXX", line 2
    print("Ada Locelace foi a primeira programadora da historia.upper()
                                                                      ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 20:36:08) 
-- CODE:
frase = "Ada Locelace foi a primeira programadora da historia"
print.upper("Ada Locelace foi a primeira programadora da historia")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    print.upper("Ada Locelace foi a primeira programadora da historia")
AttributeError: 'builtin_function_or_method' object has no attribute 'upper'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 20:36:31) 
-- CODE:
frase = "Ada Locelace foi a primeira programadora da historia"
print(.upper("Ada Locelace foi a primeira programadora da historia"))
-- ERROR:
File "XXXX", line 2
    print(.upper("Ada Locelace foi a primeira programadora da historia"))
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 20:36:53) 
-- CODE:
frase = "Ada Locelace foi a primeira programadora da historia"
print("Ada Locelace foi a primeira programadora da historia".upper())
-- OUTPUT:
ADA LOCELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-12 20:36:57) 
-- CODE:
frase = "Ada Locelace foi a primeira programadora da historia"
print("Ada Locelace foi a primeira programadora da historia".upper())
-- EXECUTION TIME:
0.126299
-- TEST CASE 1:
---- input:
nonono
---- correct output:
ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA.
---- user output:
ADA LOCELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 20:37:01) 
-- CODE:
frase = "Ada Locelace foi a primeira programadora da historia"
print("Ada Locelace foi a primeira programadora da historia".upper())
-- OUTPUT:
ADA LOCELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-12 20:37:12) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia"
print("Ada Lovelace foi a primeira programadora da historia".upper())
-- EXECUTION TIME:
0.196667
-- TEST CASE 1:
---- input:
nonono
---- correct output:
ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA.
---- user output:
ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-12 20:37:25) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia"
print("Ada Lovelace foi a primeira programadora da historia.".upper())
-- EXECUTION TIME:
0.133706
-- TEST CASE 1:
---- input:
nonono
---- correct output:
ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA.
---- user output:
ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA.
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
