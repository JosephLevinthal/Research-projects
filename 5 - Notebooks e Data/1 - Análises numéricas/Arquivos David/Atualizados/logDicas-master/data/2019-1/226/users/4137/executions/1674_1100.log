== TEST (2019-04-25 11:02:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

v = int(input("Qual o valor da cedula:"))

if(v==2):
	print("Tartaruga")
elif(v==5)
	print("Garça")
-- ERROR:
File "XXXX", line 9
    elif(v==5)
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:02:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

v = int(input("Qual o valor da cedula:"))

if(v == 2):
	print("Tartaruga")
elif(v == 5)
	print("Garça")
-- ERROR:
File "XXXX", line 9
    elif(v == 5)
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:02:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

v = int(input("Qual o valor da cedula:"))

if(v == 2):
	print("Tartaruga")
elif(v == 5)
	print("Garça")
-- EXECUTION TIME:
0.144995
-- ERROR:
  File "/home/codebench/codes/1674/1100/main.py", line 9
    elif(v == 5)
               ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:02:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

v = int(input("Qual o valor da cedula:"))

if(v == 2):
	print("Tartaruga")
elif(v == 5)
	print("Garça")
-- ERROR:
File "XXXX", line 9
    elif(v == 5)
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:02:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

v = int(input("Qual o valor da cedula:"))

if(v == 2):
	print("Tartaruga")
elif(v == 5):
	print("Garça")
-- ERROR:
File "XXXX", line 9
    elif(v == 5)
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:03:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

v = int(input("Qual o valor da cedula:"))

if(v == 2):
	print("Tartaruga")
elif(v == 5):
	print("Garca")
-- ERROR:
File "XXXX", line 9
    elif(v == 5)
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:07:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

v = int(input("Qual o valor da cedula:"))
print("Entrada: ")
if(v == 2):
	print("Tartaruga")
elif(v == 5):
	print("Garca")
elif(v == 10):
	print("Arara")
elif(v == 20):
	print("Mico-leao-dourado")
elif(v == 50):
	print("Onca-pintada")
elif(v == 100):
	print("Garoupa")
elif(v != 2 and v != 5 and v!= 10 and v!= 20 and v!=50 and v!=100 ):
	print("Animal: Invalido")
	
-- OUTPUT:
Entrada: 
Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:07:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

v = int(input("Qual o valor da cedula:"))
print("Entrada: ")
if(v == 2):
	print("Tartaruga")
elif(v == 5):
	print("Garca")
elif(v == 10):
	print("Arara")
elif(v == 20):
	print("Mico-leao-dourado")
elif(v == 50):
	print("Onca-pintada")
elif(v == 100):
	print("Garoupa")
elif(v != 2 and v != 5 and v!= 10 and v!= 20 and v!=50 and v!=100 ):
	print("Animal: Invalido")
	
-- OUTPUT:
Entrada: 
Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:07:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

v = int(input("Qual o valor da cedula:"))
print("Entrada:", v)
if(v == 2):
	print("Tartaruga")
elif(v == 5):
	print("Garca")
elif(v == 10):
	print("Arara")
elif(v == 20):
	print("Mico-leao-dourado")
elif(v == 50):
	print("Onca-pintada")
elif(v == 100):
	print("Garoupa")
elif(v != 2 and v != 5 and v!= 10 and v!= 20 and v!=50 and v!=100 ):
	print("Animal: Invalido")
	
-- OUTPUT:
Entrada: 100
Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:07:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

v = int(input("Qual o valor da cedula:"))
print("Entrada:", v)
if(v == 2):
	print("Tartaruga")
elif(v == 5):
	print("Garca")
elif(v == 10):
	print("Arara")
elif(v == 20):
	print("Mico-leao-dourado")
elif(v == 50):
	print("Onca-pintada")
elif(v == 100):
	print("Garoupa")
elif(v != 2 and v != 5 and v!= 10 and v!= 20 and v!=50 and v!=100 ):
	print("Animal: Invalido")
	
-- OUTPUT:
Entrada: 100
Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:07:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

v = int(input("Qual o valor da cedula:"))
print("Entrada:", v)
if(v == 2):
	print("Tartaruga")
elif(v == 5):
	print("Garca")
elif(v == 10):
	print("Arara")
elif(v == 20):
	print("Mico-leao-dourado")
elif(v == 50):
	print("Onca-pintada")
elif(v == 100):
	print("Garoupa")
elif(v != 2 and v != 5 and v!= 10 and v!= 20 and v!=50 and v!=100 ):
	print("Animal: Invalido")
	
-- EXECUTION TIME:
0.122203
-- TEST CASE 1:
---- input:
100
---- correct output:
Entrada: 100
Animal: Garoupa
---- user output:
Entrada: 100
Garoupa
-- TEST CASE 2:
---- input:
7
---- correct output:
Entrada: 7
Animal: Invalido
---- user output:
Entrada: 7
Animal: Invalido
-- TEST CASE 3:
---- input:
50
---- correct output:
Entrada: 50
Animal: Onca-pintada
---- user output:
Entrada: 50
Onca-pintada
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:08:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

v = int(input("Qual o valor da cedula:"))
print("Entrada:", v)
if(v == 2):
	print("Animal: Tartaruga")
elif(v == 5):
	print("Animal: Garca")
elif(v == 10):
	print("Animal: Arara")
elif(v == 20):
	print("Animal: Mico-leao-dourado")
elif(v == 50):
	print("Animal: Onca-pintada")
elif(v == 100):
	print("Animal: Garoupa")
elif(v != 2 and v != 5 and v!= 10 and v!= 20 and v!=50 and v!=100 ):
	print("Animal: Invalido")
	
-- OUTPUT:
Entrada: 100
Animal: Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:08:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

v = int(input("Qual o valor da cedula:"))
print("Entrada:", v)
if(v == 2):
	print("Animal: Tartaruga")
elif(v == 5):
	print("Animal: Garca")
elif(v == 10):
	print("Animal: Arara")
elif(v == 20):
	print("Animal: Mico-leao-dourado")
elif(v == 50):
	print("Animal: Onca-pintada")
elif(v == 100):
	print("Animal: Garoupa")
elif(v != 2 and v != 5 and v!= 10 and v!= 20 and v!=50 and v!=100 ):
	print("Animal: Invalido")
	
-- EXECUTION TIME:
0.173772
-- TEST CASE 1:
---- input:
100
---- correct output:
Entrada: 100
Animal: Garoupa
---- user output:
Entrada: 100
Animal: Garoupa
-- TEST CASE 2:
---- input:
7
---- correct output:
Entrada: 7
Animal: Invalido
---- user output:
Entrada: 7
Animal: Invalido
-- TEST CASE 3:
---- input:
50
---- correct output:
Entrada: 50
Animal: Onca-pintada
---- user output:
Entrada: 50
Animal: Onca-pintada
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
