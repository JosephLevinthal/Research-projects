== TEST (2019-07-02 11:29:58) 
-- CODE:
from numpy import*
from numpy.linalg import*

v = array(eval(input("vetor: ")))
m = array([
	[4,5,2],
	[3.2.2],
	[2,3,3]
])
m = m.T
d = dot(inv(m),v)
print(d)
-- ERROR:
File "XXXX", line 7
    [3.2.2],
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:30:06) 
-- CODE:
from numpy import*
from numpy.linalg import*

v = array(eval(input("vetor: ")))
m = array([
	[4,5,2],
	[3,2,2],
	[2,3,3]
])
m = m.T
d = dot(inv(m),v)
print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:30:23) 
-- CODE:
from numpy import*
from numpy.linalg import*

v = array(eval(input("vetor: ")))
m = array([
	[4,5,2],
	[3,2,2],
	[2,3,3]
])
m = m.T
d = dot(inv(m),v)
print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:30:34) 
-- CODE:
from numpy import*
from numpy.linalg import*

v = array(eval(input("vetor: ")))
m = array([
	[4,5,2],
	[3,2,2],
	[2,3,3]
])
m = m
d = dot(inv(m),v.T)
print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:34:33) 
-- CODE:
from numpy import*
from numpy.linalg import*

v = array(eval(input("vetor: ")))
m = array([
	[4,5,2],
	[3,2,2],
	[2,3,3]
])
m = m
d = dot(inv(m),v.T)
print("grande:",round(v[0],0))
print("medio:",round(v[1],0))
print("pequeno:",round(v[2],0))
m = max(v)
j = array["grande","medio","pequeno"]
for x in range(3):
	if v[x] = m:
		print(j[x])
-- ERROR:
File "XXXX", line 18
    if v[x] = m:
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:34:49) 
-- CODE:
from numpy import*
from numpy.linalg import*

v = array(eval(input("vetor: ")))
m = array([
	[4,5,2],
	[3,2,2],
	[2,3,3]
])
m = m
d = dot(inv(m),v.T)
print("grande:",round(v[0],0))
print("medio:",round(v[1],0))
print("pequeno:",round(v[2],0))
m = max(v)
j = array["grande","medio","pequeno"]
for x in range(3):
	if v[x] == m:
		print(j[x])
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:36:26) 
-- CODE:
from numpy import*
from numpy.linalg import*

v = array(eval(input("vetor: ")))
m = array([
	[4,5,2],
	[3,2,2],
	[2,3,3]
])
m = m
d = dot(inv(m),v.T)
print("grande:",round(v[0],0))
print("medio:",round(v[1],0))
print("pequeno:",round(v[2],0))
m = max(v)
if v[0] == m:
	print("grande")
if(v[1]==m):
	print("medio")
if(v[2]==m):
	print("pequeno")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:36:56) 
-- CODE:
from numpy import*
from numpy.linalg import*

v = array(eval(input("vetor: ")))
m = array([
	[4,5,2],
	[3,2,2],
	[2,3,3]
])
m = m
d = dot(inv(m),v.T)
print("grande:",round(d[0],0))
print("medio:",round(d[1],0))
print("pequeno:",round(d[2],0))
m = max(v)
if v[0] == m:
	print("grande")
if(v[1]==m):
	print("medio")
if(v[2]==m):
	print("pequeno")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:37:17) 
-- CODE:
from numpy import*
from numpy.linalg import*

v = array(eval(input("vetor: ")))
m = array([
	[4,5,2],
	[3,2,2],
	[2,3,3]
])
m = m
d = dot(inv(m),v.T)
print("grande:",round(d[0],0))
print("medio:",round(d[1],0))
print("pequeno:",round(d[2],0))
m = max(d)
if v[0] == m:
	print("grande")
if(v[1]==m):
	print("medio")
if(v[2]==m):
	print("pequeno")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:37:48) 
-- CODE:
from numpy import*
from numpy.linalg import*

v = array(eval(input("vetor: ")))
m = array([
	[4,5,2],
	[3,2,2],
	[2,3,3]
])
m = m
d = dot(inv(m),v.T)
print("grande:",round(d[0],0))
print("medio:",round(d[1],0))
print("pequeno:",round(d[2],0))
m = max(d)
print(m)
if v[0] == m:
	print("grande")
if(v[1]==m):
	print("medio")
if(v[2]==m):
	print("pequeno")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:38:19) 
-- CODE:
from numpy import*
from numpy.linalg import*

v = array(eval(input("vetor: ")))
m = array([
	[4,5,2],
	[3,2,2],
	[2,3,3]
])
m = m
d = dot(inv(m),v.T)
print("grande:",round(d[0],0))
print("medio:",round(d[1],0))
print("pequeno:",round(d[2],0))
m = max(d)
print(m)
if d[0] == m:
	print("grande")
if(d[1]==m):
	print("medio")
if(d[2]==m):
	print("pequeno")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 11:38:36) 
-- CODE:
from numpy import*
from numpy.linalg import*

v = array(eval(input("vetor: ")))
m = array([
	[4,5,2],
	[3,2,2],
	[2,3,3]
])
m = m
d = dot(inv(m),v.T)
print("grande:",round(d[0],0))
print("medio:",round(d[1],0))
print("pequeno:",round(d[2],0))
m = max(d)
if d[0] == m:
	print("grande")
if(d[1]==m):
	print("medio")
if(d[2]==m):
	print("pequeno")
-- EXECUTION TIME:
1.29787
-- TEST CASE 1:
---- input:
[2220,1443,1887]
---- correct output:
grande: 111.0
medio: 222.0
pequeno: 333.0
pequeno
---- user output:
grande: 111.0
medio: 222.0
pequeno: 333.0
pequeno
-- TEST CASE 2:
---- input:
[1340,840,760]
---- correct output:
grande: 200.0
medio: 100.0
pequeno: 20.0
grande
---- user output:
grande: 200.0
medio: 100.0
pequeno: 20.0
grande
-- TEST CASE 3:
---- input:
[1632,925,1120]
---- correct output:
grande: 107.0
medio: 200.0
pequeno: 102.0
medio
---- user output:
vetor: grande: 107.0
medio: 200.0
pequeno: 102.0
medio
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:38:39) 
-- CODE:
from numpy import*
from numpy.linalg import*

v = array(eval(input("vetor: ")))
m = array([
	[4,5,2],
	[3,2,2],
	[2,3,3]
])
m = m
d = dot(inv(m),v.T)
print("grande:",round(d[0],0))
print("medio:",round(d[1],0))
print("pequeno:",round(d[2],0))
m = max(d)
if d[0] == m:
	print("grande")
if(d[1]==m):
	print("medio")
if(d[2]==m):
	print("pequeno")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:39:01) 
-- CODE:
from numpy import*
from numpy.linalg import*

v = array(eval(input("vetor: ")))
m = array([
	[4,5,2],
	[3,2,2],
	[2,3,3]
])
m = m
d = dot(inv(m),v.T)
print("grande:",round(d[0],0))
print("medio:",round(d[1],0))
print("pequeno:",round(d[2],0))
m = max(d)
if d[0] == m:
	print("grande")
if(d[1]==m):
	print("medio")
if(d[2]==m):
	print("pequeno")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 11:39:18) 
-- CODE:
from numpy import*
from numpy.linalg import*

v = array(eval(input("vetor: ")))
m = array([
	[4,5,2],
	[3,2,2],
	[2,3,3]
])
m = m
d = dot(inv(m),v.T)
print("grande:",round(d[0],0))
print("medio:",round(d[1],0))
print("pequeno:",round(d[2],0))
m = max(d)
if d[0] == m:
	print("grande")
if(d[1]==m):
	print("medio")
if(d[2]==m):
	print("pequeno")
-- EXECUTION TIME:
1.10763
-- TEST CASE 1:
---- input:
[2220,1443,1887]
---- correct output:
grande: 111.0
medio: 222.0
pequeno: 333.0
pequeno
---- user output:
grande: 111.0
medio: 222.0
pequeno: 333.0
pequeno
-- TEST CASE 2:
---- input:
[1340,840,760]
---- correct output:
grande: 200.0
medio: 100.0
pequeno: 20.0
grande
---- user output:
grande: 200.0
medio: 100.0
pequeno: 20.0
grande
-- TEST CASE 3:
---- input:
[1632,925,1120]
---- correct output:
grande: 107.0
medio: 200.0
pequeno: 102.0
medio
---- user output:
grande: 107.0
medio: 200.0
pequeno: 102.0
medio
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
