== TEST (2019-04-29 20:08:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Digite aqui o valor de a: "))
b = float(input("Digite aqui o valor de b: "))
c = float(input("Digite aqui o valor de c: "))
d = float(input("Digite aqui o valor de d: "))
if ((b > a) and (d > c)):
	if ((a = c) or (a = d) or (b = c) or (b = d)):
		print("Intervalo 1:", a",", b)
		print("Intervalo 2:", c",", d)
		print("Ha intersecao")
	else:
		print("Intervalo 1:", a",", b)
		print("Intervalo 2:", c",", d)
		print("Nao ha intersecao")
else:
	print("Intervalo 1:", a",", b)
	print("Intervalo 2:", c",", d)
	print("Entradas invalidas")

-- ERROR:
File "XXXX", line 9
    if ((a = c) or (a = d) or (b = c) or (b = d)):
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 20:08:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Digite aqui o valor de a: "))
b = float(input("Digite aqui o valor de b: "))
c = float(input("Digite aqui o valor de c: "))
d = float(input("Digite aqui o valor de d: "))
if ((b > a) and (d > c)):
	if ((a == c) or (a == d) or (b == c) or (b == d)):
		print("Intervalo 1:", a",", b)
		print("Intervalo 2:", c",", d)
		print("Ha intersecao")
	else:
		print("Intervalo 1:", a",", b)
		print("Intervalo 2:", c",", d)
		print("Nao ha intersecao")
else:
	print("Intervalo 1:", a",", b)
	print("Intervalo 2:", c",", d)
	print("Entradas invalidas")

-- ERROR:
File "XXXX", line 10
    print("Intervalo 1:", a",", b)
                             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 20:09:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Digite aqui o valor de a: "))
b = float(input("Digite aqui o valor de b: "))
c = float(input("Digite aqui o valor de c: "))
d = float(input("Digite aqui o valor de d: "))
if ((b > a) and (d > c)):
	if ((a == c) or (a == d) or (b == c) or (b == d)):
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", c,",", d)
		print("Ha intersecao")
	else:
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", c,",", d)
		print("Nao ha intersecao")
else:
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Entradas invalidas")

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 20:10:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Digite aqui o valor de a: "))
b = float(input("Digite aqui o valor de b: "))
c = float(input("Digite aqui o valor de c: "))
d = float(input("Digite aqui o valor de d: "))
if ((b > a) and (d > c)):
	if ((a == c) or (a == d) or (b == c) or (b == d)):
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", c,",", d)
		print("Ha intersecao")
	else:
		print("Intervalo 1:", a,",", b)
		print("Intervalo 2:", c,",", d)
		print("Nao ha intersecao")
else:
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Entradas invalidas")

-- EXECUTION TIME:
0.141088
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 20:31:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Digite aqui o valor de a: "))
b = float(input("Digite aqui o valor de b: "))
c = float(input("Digite aqui o valor de c: "))
d = float(input("Digite aqui o valor de d: "))
if ((b <= a) or (d <= c)):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Entradas invalidas")
elif (b < c):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Nao ha intersecao")
else:
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Ha intersecao")

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 20:31:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("Digite aqui o valor de a: "))
b = float(input("Digite aqui o valor de b: "))
c = float(input("Digite aqui o valor de c: "))
d = float(input("Digite aqui o valor de d: "))
if ((b <= a) or (d <= c)):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Entradas invalidas")
elif (b < c):
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Nao ha intersecao")
else:
	print("Intervalo 1:", a,",", b)
	print("Intervalo 2:", c,",", d)
	print("Ha intersecao")

-- EXECUTION TIME:
0.164307
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
