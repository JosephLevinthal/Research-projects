== TEST (2019-04-09 11:04:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = float(input("Determine o patrono"))

if (patrono == cervo):
	mensagem = ("cervo eh patrono do Harry Potter")
else:
	mensagem = ("nao eh patrono do Harry Potter")
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    patrono = float(input())
ValueError: could not convert string to float: 'cervo'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:04:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = float(input("Determine o patrono: "))

if (patrono == cervo):
	mensagem = ("cervo eh patrono do Harry Potter")
else:
	mensagem = ("nao eh patrono do Harry Potter")
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    patrono = float(input())
ValueError: could not convert string to float: 'cervo'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:04:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = int(input("Determine o patrono: "))

if (patrono == cervo):
	mensagem = ("cervo eh patrono do Harry Potter")
else:
	mensagem = ("nao eh patrono do Harry Potter")
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    patrono = int(input())
ValueError: invalid literal for int() with base 10: 'cervo'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:05:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("Determine o patrono: ")

if (patrono == cervo):
	mensagem = ("cervo eh patrono do Harry Potter")
else:
	mensagem = ("nao eh patrono do Harry Potter")
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if (patrono == cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:06:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("Determine o patrono: ")

if (patrono = cervo):
	mensagem = ("cervo eh patrono do Harry Potter")
else:
	mensagem = ("nao eh patrono do Harry Potter")
print(mensagem)
-- ERROR:
File "XXXX", line 6
    if (patrono = cervo):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:06:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("Determine o patrono: ")

if (patrono >= cervo):
	mensagem = ("cervo eh patrono do Harry Potter")
else:
	mensagem = ("nao eh patrono do Harry Potter")
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if (patrono >= cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:06:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("Determine o patrono: ")

if (patrono = cervo):
	mensagem = ("cervo eh patrono do Harry Potter")
else:
	mensagem = ("nao eh patrono do Harry Potter")
print(mensagem)
-- ERROR:
File "XXXX", line 6
    if (patrono = cervo):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:08:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("Determine o patrono: ")

if (patrono = "cervo"):
	mensagem = ("cervo eh patrono do Harry Potter")
else:
	mensagem = ("nao eh patrono do Harry Potter")
print(mensagem)
-- ERROR:
File "XXXX", line 6
    if (patrono = "cervo"):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:09:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("Determine o patrono: ")

if (patrono == "cervo"):
	mensagem = ("cervo eh patrono do Harry Potter")
else:
	mensagem = ("nao eh patrono do Harry Potter")
print(mensagem)
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:09:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("Determine o patrono: ")

if (patrono == "cervo"):
	mensagem = ("cervo eh patrono do Harry Potter")
else:
	mensagem = ("nao eh patrono do Harry Potter")
print(mensagem)
-- EXECUTION TIME:
0.144394
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:09:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("Determine o patrono: ")

if (patrono >= "cervo"):
	mensagem = ("cervo eh patrono do Harry Potter")
else:
	mensagem = ("nao eh patrono do Harry Potter")
print(mensagem)
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:09:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("Determine o patrono: ")

if (patrono >= "cervo"):
	mensagem = ("cervo eh patrono do Harry Potter")
else:
	mensagem = ("nao eh patrono do Harry Potter")
print(mensagem)
-- EXECUTION TIME:
0.138987
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:10:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("Determine o patrono: ")

if (patrono >= "cervo"):
	print ("cervo eh patrono do Harry Potter")
else:
	print ("nao eh patrono do Harry Potter")


-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:10:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("Determine o patrono: ")

if (patrono >= "cervo"):
	print ("cervo eh patrono do Harry Potter")
else:
	print(patrono("nao eh patrono do Harry Potter"))


-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:10:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("Determine o patrono: ")

if (patrono >= "cervo"):
	print ("cervo eh patrono do Harry Potter")
else:
	print(patrono("nao eh patrono do Harry Potter"))


-- EXECUTION TIME:
0.198877
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:11:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("Determine o patrono: ")

if (patrono >= "cervo"):
	print ("cervo eh patrono do Harry Potter")
else:
	print(patrono, "nao eh patrono do Harry Potter"))


-- EXECUTION TIME:
0.147835
-- ERROR:
  File "/home/codebench/codes/1637/1053/main.py", line 9
    print(patrono, "nao eh patrono do Harry Potter"))
                                                    ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:11:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("Determine o patrono: ")

if (patrono == "cervo"):
	print ("cervo eh patrono do Harry Potter")
else:
	print (patrono, "nao eh patrono do Harry Potter"))


-- EXECUTION TIME:
0.208621
-- ERROR:
  File "/home/codebench/codes/1637/1053/main.py", line 9
    print (patrono, "nao eh patrono do Harry Potter"))
                                                     ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:11:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("Determine o patrono: ")

if (patrono == "cervo"):
	print("cervo eh patrono do Harry Potter")

	else:
	print(patrono, "nao eh patrono do Harry Potter")


-- EXECUTION TIME:
0.182271
-- ERROR:
  File "/home/codebench/codes/1637/1053/main.py", line 9
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:11:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("Determine o patrono: ")

if (patrono == "cervo"):
	print("cervo eh patrono do Harry Potter")

	else:
	print(patrono, "nao eh patrono do Harry Potter")


-- ERROR:
File "XXXX", line 9
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:11:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("Determine o patrono: ")

if (patrono == "cervo"):
	print("cervo eh patrono do Harry Potter")

else:
	print(patrono, "nao eh patrono do Harry Potter")


-- EXECUTION TIME:
0.158655
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
