== SUBMITION (2019-05-30 00:41:49) 
-- CODE:
from numpy import *

notas = array(eval(input("Notas: ")))
alunos = array(eval(input("Alunos: "))) 

i = 0 
faltaram = 0
passaram = 0
reprovaram = 0
soma = 0
maior = 0

while(i < size(notas)):
	if(notas[i] == -1,0):
		faltaram = faltaram + 1
	elif(notas[i] >= 6.0):
		passaram = passaram + 1
	elif(notas[i] < 6.0 and notas [i] != -1):
		reprovaram = reprovaram + 1
	if(notas[i] != -1):
		soma = soma + notas[i]
	if(notas[i] == max(notas)):
		maior = i
	i = i + 1
print(faltaram)
print(passaram)
print(reprovaram)
print(round(soma / (size(notas) - faltaram), 2))
print(alunos[maior])
-- EXECUTION TIME:
0.437729
-- ERROR:
/home/codebench/codes/1758/1580/main.py:28: RuntimeWarning: divide by zero encountered in long_scalars
  print(round(soma / (size(notas) - faltaram), 2))

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-30 00:45:21) 
-- CODE:
from numpy import *

notas = array(eval(input("Notas: ")))
alunos = array(eval(input("Alunos: "))) 

i = 0 
faltaram = 0
passaram = 0
reprovaram = 0
soma = 0
maior = 0

while(i < size(notas)):
	if(notas[i] == -1,0):
		faltaram = faltaram + 1
	elif(notas[i] >= 6.0):
		passaram = passaram + 1
	elif(notas[i] < 6.0 and notas [i] != -1):
		reprovaram = reprovaram + 1
	if(notas[i] != -1):
		soma = soma + notas[i]
	if(notas[i] == max(notas)):
		maior = i
	i = i + 1
print(faltaram)
print(passaram)
print(reprovaram)
print(round(soma / (size(notas) - faltaram), 2))
print(alunos[maior])
-- EXECUTION TIME:
0.460941
-- ERROR:
/home/codebench/codes/1758/1580/main.py:28: RuntimeWarning: divide by zero encountered in long_scalars
  print(round(soma / (size(notas) - faltaram), 2))

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 00:45:26) 
-- CODE:
from numpy import *

notas = array(eval(input("Notas: ")))
alunos = array(eval(input("Alunos: "))) 

i = 0 
faltaram = 0
passaram = 0
reprovaram = 0
soma = 0
maior = 0

while(i < size(notas)):
	if(notas[i] == -1,0):
		faltaram = faltaram + 1
	elif(notas[i] >= 6.0):
		passaram = passaram + 1
	elif(notas[i] < 6.0 and notas [i] != -1):
		reprovaram = reprovaram + 1
	if(notas[i] != -1):
		soma = soma + notas[i]
	if(notas[i] == max(notas)):
		maior = i
	i = i + 1
print(faltaram)
print(passaram)
print(reprovaram)
print(round(soma / (size(notas) - faltaram), 2))
print(alunos[maior])
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 00:47:29) 
-- CODE:
from numpy import *

notas = array(eval(input("Notas: ")))
alunos = array(eval(input("Alunos: "))) 

i = 0 
faltaram = 0
passaram = 0
reprovaram = 0
soma = 0
maior = 0

while(i < size(notas)):
	if(notas[i] == -1,0):
		faltaram = faltaram + 1
	elif(notas[i] >= 6.0):
		passaram = passaram + 1
	elif(notas[i] < 6.0 and notas [i] != -1):
		reprovaram = reprovaram + 1
	if(notas[i] != -1):
		soma = soma + notas[i]
	if(notas[i] == max(notas)):
		maior = i
	i = i + 1
print(faltaram)
print(passaram)
print(reprovaram)
print(round(soma / (size(notas) - faltaram), 2))
print(alunos[maior])
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-30 00:47:31) 
-- CODE:
from numpy import *

notas = array(eval(input("Notas: ")))
alunos = array(eval(input("Alunos: "))) 

i = 0 
faltaram = 0
passaram = 0
reprovaram = 0
soma = 0
maior = 0

while(i < size(notas)):
	if(notas[i] == -1,0):
		faltaram = faltaram + 1
	elif(notas[i] >= 6.0):
		passaram = passaram + 1
	elif(notas[i] < 6.0 and notas [i] != -1):
		reprovaram = reprovaram + 1
	if(notas[i] != -1):
		soma = soma + notas[i]
	if(notas[i] == max(notas)):
		maior = i
	i = i + 1
print(faltaram)
print(passaram)
print(reprovaram)
print(round(soma / (size(notas) - faltaram), 2))
print(alunos[maior])
-- EXECUTION TIME:
0.41385
-- ERROR:
/home/codebench/codes/1758/1580/main.py:28: RuntimeWarning: divide by zero encountered in long_scalars
  print(round(soma / (size(notas) - faltaram), 2))

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-30 01:31:20) 
-- CODE:
from numpy import *

notas = array(eval(input("Notas: ")))*1.0
alunos = array(eval(input("Alunos: "))) 

i = 0 
faltaram = 0
passaram = 0
reprovaram = 0
soma = 0
maior = 0

while(i < size(notas)):
	if(notas[i] == -1,0):
		faltaram = faltaram + 1
	elif(notas[i] >= 6.0):
		passaram = passaram + 1
	elif(notas[i] < 6.0 and notas [i] != -1):
		reprovaram = reprovaram + 1
	if(notas[i] != -1):
		soma = soma + notas[i]
	if(notas[i] == max(notas)):
		maior = i
	i = i + 1
print(faltaram)
print(passaram)
print(reprovaram)
print(round(soma / (size(notas) - faltaram), 2))
print(alunos[maior])
-- EXECUTION TIME:
0.346123
-- ERROR:
/home/codebench/codes/1758/1580/main.py:28: RuntimeWarning: divide by zero encountered in double_scalars
  print(round(soma / (size(notas) - faltaram), 2))

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-30 01:33:41) 
-- CODE:
from numpy import *

notas = array(eval(input("Notas: ")))
alunos = array(eval(input("Alunos: "))) 

i = 0 
faltaram = 0
passaram = 0
reprovaram = 0
soma = 0
maior = 0

while(i < size(notas)):
	if(notas[i] == -1.0):
		faltaram = faltaram + 1
	elif(notas[i] >= 6.0):
		passaram = passaram + 1
	elif(notas[i] < 6.0 and notas [i] != -1):
		reprovaram = reprovaram + 1
	if(notas[i] != -1):
		soma = soma + notas[i]
	if(notas[i] == max(notas)):
		maior = i
	i = i + 1
print(faltaram)
print(passaram)
print(reprovaram)
print(round(soma / (size(notas) - faltaram), 2))
print(alunos[maior])
-- EXECUTION TIME:
0.429175
-- TEST CASE 1:
---- input:
[9,8,7,6,5,4,3,2,1,-1,-1,-1]
['A','B','C','D','E','F','G','H','I','J','K','L']
---- correct output:
3
4
5
5.0
A
---- user output:
3
4
5
5.0
A
-- TEST CASE 2:
---- input:
[-1,1.2,-1,2.3,-1,3.4,-1,4.5,-1,5.6,-1]
['ALICE','BENTO','CLARA','DAVI','ELSON','FLAVIO','GABI','HELOISA','IRIS','JULIA','KARLA']
---- correct output:
6
0
5
3.4
JULIA
---- user output:
6
0
5
3.4
JULIA
-- TEST CASE 3:
---- input:
[1.23,3.45,5.67,6.78,7.89,8.9,9,10,0,9.8,7.6]
['CLARA','DAVI','ELSON','ALICE','BENTO','FLAVIO','GABI','HELOISA','IRIS','JULIA','KARLA']
---- correct output:
0
7
4
6.39
HELOISA
---- user output:
0
7
4
6.39
HELOISA
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
