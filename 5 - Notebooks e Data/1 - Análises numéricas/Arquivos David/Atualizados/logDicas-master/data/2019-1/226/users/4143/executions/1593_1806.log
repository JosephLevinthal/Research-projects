== TEST (2019-03-28 18:39:21) 
-- CODE:
from math import*
n = int(input("No. de pessoas:"))
eq = 1 - factorial(365)/factorial(365 - n) * 1/(365**n)
-- OUTPUT:
14.286 km/l
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 18:39:58) 
-- CODE:
from math import*
n = float(input("No. de pessoas:"))
eq = 1 - factorial(365)/factorial(365 - n) * 1/(365**n)
-- OUTPUT:
14.286 km/l
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 18:40:14) 
-- CODE:
from math import*
n = float(input("No. de pessoas:"))
eq = 1 - factorial(365)/factorial(365 - n) * 1/(365**n)
print(eq)
-- OUTPUT:
0.16702478883806438
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 18:41:53) 
-- CODE:
from math import*
n = float(input("No. de pessoas:"))
eq = 1 - factorial(365)/factorial(365 - n) * 1/(365**n)
c = round(eq,2)
print(c)
-- OUTPUT:
0.17
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 18:42:48) 
-- CODE:
from math import*
n = float(input("No. de pessoas:"))
eq = 1 - factorial(365)/factorial(365 - n) * 1/(365**n)
c = round(eq,2)
d = c * 100
print(d)
-- OUTPUT:
17.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 18:43:04) 
-- CODE:
from math import*
n = float(input("No. de pessoas:"))
eq = 1 - factorial(365)/factorial(365 - n) * 1/(365**n)
c = round(eq,2)
d = c * 100
print(d)
-- EXECUTION TIME:
0.163718
-- TEST CASE 1:
---- input:
12
---- correct output:
16.7
---- user output:
17.0
-- TEST CASE 2:
---- input:
24
---- correct output:
53.83
---- user output:
54.0
-- TEST CASE 3:
---- input:
99
---- correct output:
100.0
---- user output:
100.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 18:48:44) 
-- CODE:
from math import*
n = float(input("No. de pessoas:"))
eq = 1 - factorial(365)/factorial(365 - n) * 1/(365**n)
c = round(eq,2)
d = c * 100
print(d)
-- OUTPUT:
17.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 18:48:55) 
-- CODE:
from math import*
n = float(input("No. de pessoas:"))
eq = 1 - factorial(365)/factorial(365 - n) * 1/(365**n)
c = round(eq,2)
d = c * 100
print(d)
-- EXECUTION TIME:
0.147505
-- TEST CASE 1:
---- input:
12
---- correct output:
16.7
---- user output:
17.0
-- TEST CASE 2:
---- input:
24
---- correct output:
53.83
---- user output:
54.0
-- TEST CASE 3:
---- input:
99
---- correct output:
100.0
---- user output:
100.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 18:49:41) 
-- CODE:
from math import*
n = float(input("No. de pessoas:"))
eq = 1 - factorial(365)/factorial(365 - n) * 1/(365**n)
c = round(eq,2)
d = c * 100
e = ("%")
print(d + e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(d + e)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 18:49:56) 
-- CODE:
from math import*
n = float(input("No. de pessoas:"))
eq = 1 - factorial(365)/factorial(365 - n) * 1/(365**n)
c = round(eq,2)
d = c * 100
e = ("%")
print(d  e)
-- ERROR:
File "XXXX", line 7
    print(d  e)
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 18:50:26) 
-- CODE:
from math import*
n = float(input("No. de pessoas:"))
eq = 1 - factorial(365)/factorial(365 - n) * 1/(365**n)
c = round(eq,2)
d = c * 100
print(float(d)) 
-- OUTPUT:
17.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 18:50:40) 
-- CODE:
from math import*
n = float(input("No. de pessoas:"))
eq = 1 - factorial(365)/factorial(365 - n) * 1/(365**n)
c = round(eq,2)
d = c * 100
print(float(d))
-- EXECUTION TIME:
0.177402
-- TEST CASE 1:
---- input:
12
---- correct output:
16.7
---- user output:
17.0
-- TEST CASE 2:
---- input:
24
---- correct output:
53.83
---- user output:
54.0
-- TEST CASE 3:
---- input:
99
---- correct output:
100.0
---- user output:
100.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 18:01:45) 
-- CODE:
from math import*
n = float(input("No. de pessoas:"))
eq = 1 - factorial(365)/factorial(365 - n) * 1/(365**n)
c = round(eq,2)
d = c * 100
print(float(d))
-- OUTPUT:
17.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 18:02:10) 
-- CODE:
from math import*
n = float(input("No. de pessoas:"))
eq = 1 - factorial(365)/factorial(365 - n) * 1/(365**n)
c = round(eq, 2)
d = c * 100
print(float(d))
-- OUTPUT:
17.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 18:02:35) 
-- CODE:
from math import*
n = float(input("No. de pessoas:"))
eq = 1 - factorial(365)/factorial(365 - n) * 1/(365**n)
c = round(eq, 2)
d = c * 100
print(float(d))
-- EXECUTION TIME:
0.174454
-- TEST CASE 1:
---- input:
12
---- correct output:
16.7
---- user output:
17.0
-- TEST CASE 2:
---- input:
24
---- correct output:
53.83
---- user output:
54.0
-- TEST CASE 3:
---- input:
99
---- correct output:
100.0
---- user output:
100.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 18:04:38) 
-- CODE:
from math import*
n = float(input("No. de pessoas:"))
eq = 1 - factorial(365)/factorial(365 - n) * 1/(365**n)
d = ep * 100
print(float(round(d , 2)))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    d = ep * 100
NameError: name 'ep' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 18:05:00) 
-- CODE:
from math import*
n = float(input("No. de pessoas:"))
eq = 1 - factorial(365)/factorial(365 - n) * 1/(365**n)
d = eq * 100
print(float(round(d , 2)))
-- OUTPUT:
16.7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 18:05:09) 
-- CODE:
from math import*
n = float(input("No. de pessoas:"))
eq = 1 - factorial(365)/factorial(365 - n) * 1/(365**n)
d = eq * 100
print(float(round(d , 2)))
-- EXECUTION TIME:
0.179283
-- TEST CASE 1:
---- input:
12
---- correct output:
16.7
---- user output:
16.7
-- TEST CASE 2:
---- input:
24
---- correct output:
53.83
---- user output:
53.83
-- TEST CASE 3:
---- input:
99
---- correct output:
100.0
---- user output:
100.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
