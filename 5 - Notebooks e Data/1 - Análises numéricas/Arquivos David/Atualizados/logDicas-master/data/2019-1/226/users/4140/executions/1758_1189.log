== TEST (2019-05-25 18:54:41) 
-- CODE:
from numpy import*
v1=input()
v1=replace(v1).upper()
i=0
j=-1
soma=0
while(i<len(v1) and abs(j)<=len(v1)):
	if(v1[i])!=v1[j]:
		soma=soma+1
	i=i+1
	j=j-1
print(v1)
if(soma==0):
	print(1)
else:
	print(0)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-25 18:58:15) 
-- CODE:
from numpy import*
v1=input()
v1= v1.replace().upper()
i=0
j=-1
soma=0
while(i<len(v1) and abs(j)<=len(v1)):
	if(v1[i])!=v1[j]:
		soma=soma+1
	i=i+1
	j=j-1
print(v1)
if(soma==0):
	print(1)
else:
	print(0)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-25 18:58:40) 
-- CODE:
from numpy import*
v1=input()
v1= v1.replace( ,).upper()
i=0
j=-1
soma=0
while(i<len(v1) and abs(j)<=len(v1)):
	if(v1[i])!=v1[j]:
		soma=soma+1
	i=i+1
	j=j-1
print(v1)
if(soma==0):
	print(1)
else:
	print(0)

-- ERROR:
File "XXXX", line 3
    v1= v1.replace( ,).upper()
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-25 19:04:02) 
-- CODE:
from numpy import*
v1=input()
v1=join(v1.split(' ')).upper()
i=0
j=-1
soma=0
while(i<len(v1) and abs(j)<=len(v1)):
	if(v1[i])!=v1[j]:
		soma=soma+1
	i=i+1
	j=j-1
print(v1)
if(soma==0):
	print(1)
else:
	print(0)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-25 19:06:47) 
-- CODE:
from numpy import*
v1=input()
v1=v1.strip(' ').upper()
i=0
j=-1
soma=0
while(i<len(v1) and abs(j)<=len(v1)):
	if(v1[i])!=v1[j]:
		soma=soma+1
	i=i+1
	j=j-1
print(v1)
if(soma==0):
	print(1)
else:
	print(0)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-25 19:07:40) 
-- CODE:
from numpy import*
v1=input()
v1=v1.strip(" ").upper()
i=0
j=-1
soma=0
while(i<len(v1) and abs(j)<=len(v1)):
	if(v1[i])!=v1[j]:
		soma=soma+1
	i=i+1
	j=j-1
print(v1)
if(soma==0):
	print(1)
else:
	print(0)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-25 19:08:41) 
-- CODE:
from numpy import*
v1=input()
v1=v1.strip().upper()
i=0
j=-1
soma=0
while(i<len(v1) and abs(j)<=len(v1)):
	if(v1[i])!=v1[j]:
		soma=soma+1
	i=i+1
	j=j-1
print(v1)
if(soma==0):
	print(1)
else:
	print(0)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-25 19:09:36) 
-- CODE:
from numpy import*
v1=input()
v1=v1.split(" ").upper()
i=0
j=-1
soma=0
while(i<len(v1) and abs(j)<=len(v1)):
	if(v1[i])!=v1[j]:
		soma=soma+1
	i=i+1
	j=j-1
print(v1)
if(soma==0):
	print(1)
else:
	print(0)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-25 19:12:47) 
-- CODE:
from numpy import*
v1=input()
v1= join(v1.split()).upper()
i=0
j=-1
soma=0
while(i<len(v1) and abs(j)<=len(v1)):
	if(v1[i])!=v1[j]:
		soma=soma+1
	i=i+1
	j=j-1
print(v1)
if(soma==0):
	print(1)
else:
	print(0)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-25 19:17:54) 
-- CODE:
from numpy import*
v1=input()
v1= v1.split()
print(v1)
i=0
j=-1
soma=0
while(i<len(v1) and abs(j)<=len(v1)):
	if(v1[i])!=v1[j]:
		soma=soma+1
	i=i+1
	j=j-1
print(v1)
if(soma==0):
	print(1)
else:
	print(0)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-25 19:20:37) 
-- CODE:
from numpy import*
v1=input()
v1= v1.split()
v1=", ".join(v1)
print(v1)
print(v1)
i=0
j=-1
soma=0
while(i<len(v1) and abs(j)<=len(v1)):
	if(v1[i])!=v1[j]:
		soma=soma+1
	i=i+1
	j=j-1
print(v1)
if(soma==0):
	print(1)
else:
	print(0)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-25 19:21:39) 
-- CODE:
from numpy import*
v1=input()
v1= v1.split()
v1="".join(v1)
print(v1)
print(v1)
i=0
j=-1
soma=0
while(i<len(v1) and abs(j)<=len(v1)):
	if(v1[i])!=v1[j]:
		soma=soma+1
	i=i+1
	j=j-1
print(v1)
if(soma==0):
	print(1)
else:
	print(0)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-25 19:22:25) 
-- CODE:
from numpy import*
v1=input()
v1= v1.split()
v1="".join(v1)
v1=v1.upper()
i=0
j=-1
soma=0
while(i<len(v1) and abs(j)<=len(v1)):
	if(v1[i])!=v1[j]:
		soma=soma+1
	i=i+1
	j=j-1
print(v1)
if(soma==0):
	print(1)
else:
	print(0)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-25 19:22:40) 
-- CODE:
from numpy import*
v1=input()
v1= v1.split()
v1="".join(v1)
v1=v1.upper()
i=0
j=-1
soma=0
while(i<len(v1) and abs(j)<=len(v1)):
	if(v1[i])!=v1[j]:
		soma=soma+1
	i=i+1
	j=j-1
print(v1)
if(soma==0):
	print(1)
else:
	print(0)

-- EXECUTION TIME:
0.413717
-- TEST CASE 1:
---- input:
ACARARAJADADAJARARACA
---- correct output:
ACARARAJADADAJARARACA
1
---- user output:
ACARARAJADADAJARARACA
1
-- TEST CASE 2:
---- input:
CACHORRO
---- correct output:
CACHORRO
0
---- user output:
CACHORRO
0
-- TEST CASE 3:
---- input:
amalanadanalama
---- correct output:
AMALANADANALAMA
1
---- user output:
AMALANADANALAMA
1
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
