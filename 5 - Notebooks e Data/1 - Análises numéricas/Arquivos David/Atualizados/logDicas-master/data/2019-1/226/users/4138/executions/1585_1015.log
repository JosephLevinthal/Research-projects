== TEST (2019-03-24 10:16:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var=int(input(1,2,3))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    var=int(input(1,2,3))
TypeError: input expected at most 1 arguments, got 3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 10:17:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var=int(input(1))

-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 10:19:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var=int(input(1))
var2=int(input(2))
var3=int(input(3))

-- OUTPUT:
123
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 10:23:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var=int(input(5))
var2=int(input(2))
var3=int(input(3))

-- OUTPUT:
523
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 10:30:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
int(input(1))
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 10:31:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
int(input(1))
int(input(2))

-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 10:32:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
float(int(input(1)))
float(int(input(2)))

-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 10:33:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
float(int(input(2)))
float(int(input(2)))

-- OUTPUT:
22
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 10:35:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var=(int(input("1"))
var2=(int(input("2"))

-- EXECUTION TIME:
0.132281
-- ERROR:
  File "/home/codebench/codes/1585/1015/main.py", line 5
    var2=(int(input())
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 10:35:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var=(int(input("1"))
var2=(int(input("2"))

-- ERROR:
File "XXXX", line 5
    var2=(int(input())
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 10:35:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var=(int(input("1"))
var2=(int(input("2"))

-- ERROR:
File "XXXX", line 5
    var2=(int(input())
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 10:37:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var=int(input("1"))
var2=int(input("2"))
var3=int(input("3"))

-- ERROR:
File "XXXX", line 5
    var2=(int(input())
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 10:40:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var=int(input(1))

-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 10:41:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var=int(input(1))
var2=int(input(2))

-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 10:41:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var=int(input(1))
var2=int(input(2))

-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 10:44:24) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var=int(input(1))
var2=int(input(2))
var3=int(input(3))

min(var,var2,var3)
print(var1+vaar2+var3)
max(var,var2,var3)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(var1+vaar2+var3)
NameError: name 'var1' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 10:50:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var=int(input("variavel 1?"))
var2=int(input("variável 2?"))
var3=int(input("variável 3?"))

min(var,var2,var3)
mid=(var1+var2+var3-(var+var3))
max(var,var2,var3)
print(min,mid,max)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    mid=(var1+var2+var3-(var+var3))
NameError: name 'var1' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 10:53:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var=int(input("variavel 1?"))
var2=int(input("variavel 2?"))
var3=int(input("variavel 3?"))

min(var,var2,var3)
mid=(var1+var2+var3-(var+var3))
max(var,var2,var3)
print(min,mid,max)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    mid=(var1+var2+var3-(var+var3))
NameError: name 'var1' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 10:53:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var=int(input("variavel 1?"))
var2=int(input("variavel 2?"))
var3=int(input("variavel 3?"))

min(var,var2,var3)
mid=(var+var2+var3-(var+var3))
max(var,var2,var3)
print(min,mid,max)


-- OUTPUT:
<built-in function min> -2 <built-in function max>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 10:55:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var=int(input("variavel 1?"))
var2=int(input("variavel 2?"))
var3=int(input("variavel 3?"))

min(var,var2,var3)
mid=(var+var2+var3-(max+min))
max(var,var2,var3)
print(min,mid,max)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    mid=(var+var2+var3-(max+min))
TypeError: unsupported operand type(s) for +: 'builtin_function_or_method' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 11:06:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var=int(input("variavel 1?"))
var2=int(input("variavel 2?"))
var3=int(input("variavel 3?"))

min(var,var2,var3)
mid=(var+var2+var3-(max+min))
max(var,var2,var3)
print(min,mid,max)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    mid=(var+var2+var3-(max+min))
TypeError: unsupported operand type(s) for +: 'builtin_function_or_method' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 11:07:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var=int(input("variavel 1?"))
var2=int(input("variavel 2?"))
var3=int(input("variavel 3?"))

min(var,var2,var3)
mid=(var+var2+var3)-(max+min)
max(var,var2,var3)
print(min,mid,max)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    mid=(var+var2+var3)-(max+min)
TypeError: unsupported operand type(s) for +: 'builtin_function_or_method' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 11:09:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var=int(input("variavel 1?"))
var2=int(input("variavel 2?"))
var3=int(input("variavel 3?"))

min(var,var2,var3)
mid=(var+var2+var3)
max(var,var2,var3)
print(min,mid,max)


-- OUTPUT:
<built-in function min> 8 <built-in function max>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 11:11:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var=int(input("variavel 1?"))
var2=int(input("variavel 2?"))
var3=int(input("variavel 3?"))

min(var,var2,var3)
var4=(var+var2+var3)
mid=(var4-(max+min))
max(var,var2,var3)
print(min,mid,max)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    mid=(var4-(max+min))
TypeError: unsupported operand type(s) for +: 'builtin_function_or_method' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 11:25:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var=int(input("variavel 1?"))
var2=int(input("variavel 2?"))
var3=int(input("variavel 3?"))

min(var,var2,var3)
max(var,var2,var3)
mid(var+var2+var3)-(min+max)
print(min)
print(mid)
print(max)
-- EXECUTION TIME:
0.212918
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1585/1015/main.py", line 10, in <module>
    mid(var+var2+var3)-(min+max)
NameError: name 'mid' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 11:29:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var=int(input("variavel 1?"))
var2=int(input("variavel 2?"))
var3=int(input("variavel 3?"))

min(var,var2,var3)
max(var,var2,var3)
mid(var+var2+var3)-(min+max)
print(min)
print(mid)
print(max)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    mid(var+var2+var3)-(min+max)
NameError: name 'mid' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 11:30:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var=int(input("variavel 1?"))
var2=int(input("variavel 2?"))
var3=int(input("variavel 3?"))

min(var,var2,var3)
max(var,var2,var3)
mid=(var+var2+var3)-(min+max)
print(min)
print(mid)
print(max)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    mid=(var+var2+var3)-(min+max)
TypeError: unsupported operand type(s) for +: 'builtin_function_or_method' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 11:32:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var=int(input("variavel 1?"))
var2=int(input("variavel 2?"))
var3=int(input("variavel 3?"))
var4=(var+var2+var3)
min(var,var2,var3)
max(var,var2,var3)
mid=(var4-(min+max))

print(min)
print(mid)
print(max)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    mid=(var4-(min+max))
TypeError: unsupported operand type(s) for +: 'builtin_function_or_method' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 11:33:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var=int(input("variavel 1?"))
var2=int(input("variavel 2?"))
var3=int(input("variavel 3?"))

min(var,var2,var3)
max(var,var2,var3)


print(min)
print(max)
-- OUTPUT:
<built-in function min>
<built-in function max>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 11:34:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var=int(input("variavel 1?"))
var2=int(input("variavel 2?"))
var3=int(input("variavel 3?"))

int(min(var,var2,var3))
int(max(var,var2,var3))


print(min)
print(max)
-- OUTPUT:
<built-in function min>
<built-in function max>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:18:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var=int(input("variavel 1?"))
var2=int(input("variavel 2?"))
var3=int(input("variavel 3?"))


-- OUTPUT:
<built-in function min>
<built-in function max>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:20:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var=int(input("variavel 1?"))
var2=int(input("variavel 2?"))
var3=int(input("variavel 3?"))
min(var,var2,var3)
max(var,var2,var3)
var4=(var+var2+var3)
mid=(var4-(min+max))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    mid=(var4-(min+max))
TypeError: unsupported operand type(s) for +: 'builtin_function_or_method' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:21:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var=int(input("variavel 1?"))
var2=int(input("variavel 2?"))
var3=int(input("variavel 3?"))
min(var,var2,var3)
max(var,var2,var3)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    mid=(var4-(min+max))
TypeError: unsupported operand type(s) for +: 'builtin_function_or_method' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:21:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var=int(input("variavel 1?"))
var2=int(input("variavel 2?"))
var3=int(input("variavel 3?"))
min(var,var2,var3)
max(var,var2,var3)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    mid=(var4-(min+max))
TypeError: unsupported operand type(s) for +: 'builtin_function_or_method' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:23:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var=int(input("variavel 1?"))
var2=int(input("variavel 2?"))
var3=int(input("variavel 3?"))
min(var,var2,var3)
max(var,var2,var3)
var4=(var+var2+var3)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    mid=(var4-(min+max))
TypeError: unsupported operand type(s) for +: 'builtin_function_or_method' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 12:24:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var=int(input("variavel 1?"))
var2=int(input("variavel 2?"))
var3=int(input("variavel 3?"))
min(var,var2,var3)
max(var,var2,var3)
var4=int(input(var+var2+var3))


-- EXECUTION TIME:
0.15492
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1585/1015/main.py", line 9, in <module>
    var4=int(input(var+var2+var3))
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:24:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var=int(input("variavel 1?"))
var2=int(input("variavel 2?"))
var3=int(input("variavel 3?"))
min(var,var2,var3)
max(var,var2,var3)
var4=int(input(var+var2+var3))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    var4=int(input(var+var2+var3))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:24:44) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var=int(input("variavel 1?"))
var2=int(input("variavel 2?"))
var3=int(input("variavel 3?"))
min(var,var2,var3)
max(var,var2,var3)
var4=int(input(var+var2+var3))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    var4=int(input(var+var2+var3))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:25:44) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var=int(input("variavel 1?"))
var2=int(input("variavel 2?"))
var3=int(input("variavel 3?"))
min(var,var2,var3)
max(var,var2,var3)
var4=int(input(var+var2+var3))
mid=int(input(var4-min+max))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    var4=int(input(var+var2+var3))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:26:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var=int(input("variavel 1?"))
var2=int(input("variavel 2?"))
var3=int(input("variavel 3?"))
min(var,var2,var3)
max(var,var2,var3)
var4=int(input(var+var2+var3))
mid=int(input(var4-min+max))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    var4=int(input(var+var2+var3))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:27:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var=int(input("variavel 1?"))
var2=int(input("variavel 2?"))
var3=int(input("variavel 3?"))
min(var,var2,var3)
max(var,var2,var3)
var4=float(input(var+var2+var3))
mid=int(input(var4-min+max))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    var4=float(input(var+var2+var3))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 12:34:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero1=int(input("insira um numero inteiro?"))
numero2=int(input("insira um numero inteiro?"))
numero3=int(input("insira um numero inteiro?"))

menor=min(numero1,numero2,numero3)
maior=max(numero1,numero2,numero3)
medio=(((numero1+numero2+numero3)-menor)-maior)

print(menor)
print(medio)
print(maior)


-- EXECUTION TIME:
0.139308
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
0
10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 10:07:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
A = int(input("isira o numero:"))
B = int(input("isira o numero:"))
C = int(input("isira o numero:"))

menor = min(A,B,C)
maior = max(A,B,C)
medio = (((A + B +C) - menor)- maior)

print(menor)
print(medio)
print(maior)
-- OUTPUT:
-2
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 10:09:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
A = int(input("isira o numero:"))
B = int(input("isira o numero:"))
C = int(input("isira o numero:"))

menor = min(A,B,C)
maior = max(A,B,C)
medio = (((A + B +C) - menor)- maior)

print(menor)
print(medio)
print(maior)
-- EXECUTION TIME:
0.156107
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
0
10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
