== TEST (2019-04-06 17:41:17) 
-- CODE:
# Teste seu código aos poucos.
x=input("nome")
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 17:44:32) 
-- CODE:
# Teste seu código aos poucos.
patrono=input("nome")
# Não teste tudo no final, pois fica mais difícil de identificar erros.
if patono=cervo:
	msg= "cervo eh patrono de Harry Potter"
# Use as mensagens de erro para corrigir seu código.

-- ERROR:
File "XXXX", line 4
    if patono=cervo:
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 17:44:53) 
-- CODE:
# Teste seu código aos poucos.
patrono=input("nome")
# Não teste tudo no final, pois fica mais difícil de identificar erros.
if patrono=cervo:
	msg= "cervo eh patrono de Harry Potter"
# Use as mensagens de erro para corrigir seu código.

-- ERROR:
File "XXXX", line 4
    if patrono=cervo:
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 17:45:05) 
-- CODE:
# Teste seu código aos poucos.
patrono=input("nome")
# Não teste tudo no final, pois fica mais difícil de identificar erros.
if patrono = cervo:
	msg= "cervo eh patrono de Harry Potter"
# Use as mensagens de erro para corrigir seu código.

-- ERROR:
File "XXXX", line 4
    if patrono = cervo:
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 17:45:16) 
-- CODE:
# Teste seu código aos poucos.
patrono=input("nome")
# Não teste tudo no final, pois fica mais difícil de identificar erros.
if patrono == cervo:
	msg= "cervo eh patrono de Harry Potter"
# Use as mensagens de erro para corrigir seu código.

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if patrono == cervo:
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 17:48:00) 
-- CODE:
# Teste seu código aos poucos.
patrono=input("nome")
# Não teste tudo no final, pois fica mais difícil de identificar erros.
if patrono == cervo:
	msg= "cervo eh patrono do Harry Potter"
else:
	msg= input("entrada")

print(msg)	
# Use as mensagens de erro para corrigir seu código.

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if patrono == cervo:
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 17:49:01) 
-- CODE:
# Teste seu código aos poucos.
patrono=input("nome")
# Não teste tudo no final, pois fica mais difícil de identificar erros.
if patrono == "cervo":
	msg = "cervo eh patrono do Harry Potter"
else:
	msg = input("entrada")

print(msg)	
# Use as mensagens de erro para corrigir seu código.

-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 17:50:58) 
-- CODE:
# Teste seu código aos poucos.
patrono=input("nome")
# Não teste tudo no final, pois fica mais difícil de identificar erros.
if patrono == "cervo":
	msg = "cervo eh patrono do Harry Potter"
else:
	msg = input("entrada")

print(msg)	
# Use as mensagens de erro para corrigir seu código.

-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 17:51:37) 
-- CODE:
# Teste seu código aos poucos.
patrono=input("nome")
# Não teste tudo no final, pois fica mais difícil de identificar erros.
if patrono == "cervo":
	msg = "cervo eh patrono do Harry Potter"
else:
	msg = input("entrada")

print(msg)	
# Use as mensagens de erro para corrigir seu código.

-- EXECUTION TIME:
0.165196
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 17:52:13) 
-- CODE:
# Teste seu código aos poucos.
patrono=input("nome")
# Não teste tudo no final, pois fica mais difícil de identificar erros.
if patrono == "cervo":
	msg = "cervo eh patrono do Harry Potter"
else:
	msg = patrono + input("entrada")

print(msg)	
# Use as mensagens de erro para corrigir seu código.

-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 17:53:38) 
-- CODE:
# Teste seu código aos poucos.
patrono=input("nome ")
# Não teste tudo no final, pois fica mais difícil de identificar erros.
if patrono == "cervo":
	msg = "cervo eh patrono do Harry Potter"
else:
	msg = patrono + input(" entrada")

print(msg)	
# Use as mensagens de erro para corrigir seu código.

-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 17:54:36) 
-- CODE:
# Teste seu código aos poucos.
patrono=input("nome ")
# Não teste tudo no final, pois fica mais difícil de identificar erros.
if patrono == "cervo":
	msg = "cervo eh patrono do Harry Potter"
else:
	msg = patrono + input(" entrada")

print(msg)	
# Use as mensagens de erro para corrigir seu código.

-- EXECUTION TIME:
0.108204
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 17:54:44) 
-- CODE:
# Teste seu código aos poucos.
patrono=input("nome ")
# Não teste tudo no final, pois fica mais difícil de identificar erros.
if patrono == "cervo":
	msg = "cervo eh patrono do Harry Potter"
else:
	msg = patrono + input(" entrada")

print(msg)	
# Use as mensagens de erro para corrigir seu código.

-- EXECUTION TIME:
0.211289
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 18:25:36) 
-- CODE:
# Teste seu código aos poucos.
patrono=input("nome ")
# Não teste tudo no final, pois fica mais difícil de identificar erros.
if patrono == "cervo":
	msg = "cervo eh patrono do Harry Potter"
else:
	msg = <patrono> + "nao eh patrono do Harry Potter"

print(msg)	
# Use as mensagens de e seu código.

-- ERROR:
File "XXXX", line 7
    msg = <patrono> + "nao eh patrono do Harry Potter"
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 18:26:23) 
-- CODE:
# Teste seu código aos poucos.
patrono=input("nome ")
# Não teste tudo no final, pois fica mais difícil de identificar erros.
if patrono == "cervo":
	msg = "cervo eh patrono do Harry Potter"
else:
	msg = patrono + "nao eh patrono do Harry Potter"

print(msg)	
# Use as mensagens de e seu código.

-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 18:26:43) 
-- CODE:
# Teste seu código aos poucos.
patrono=input("nome ")
# Não teste tudo no final, pois fica mais difícil de identificar erros.
if patrono == "cervo":
	msg = "cervo eh patrono do Harry Potter"
else:
	msg = patrono + " nao eh patrono do Harry Potter"

print(msg)	
# Use as mensagens de e seu código.

-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 18:27:03) 
-- CODE:
# Teste seu código aos poucos.
patrono=input("nome ")
# Não teste tudo no final, pois fica mais difícil de identificar erros.
if patrono == "cervo":
	msg = "cervo eh patrono do Harry Potter"
else:
	msg = patrono + " nao eh patrono do Harry Potter"

print(msg)	
# Use as mensagens de e seu código.

-- EXECUTION TIME:
0.122942
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
