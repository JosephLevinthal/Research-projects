== TEST (2019-03-26 11:13:28) 
-- CODE:
# Teste seu codigo aos poucos.
a = int(input("oo"))
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
8 5 1 3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:17:39) 
-- CODE:
# Teste seu codigo aos poucos.
a = int(input("oo"))
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
b = int(input("ll"))
C = int(input("nn"))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
print(max(a,b,c))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(max(a,b,c))
NameError: name 'c' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:18:10) 
-- CODE:
# Teste seu codigo aos poucos.
a = int(input("oo"))
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
b = int(input("ll"))
c = int(input("nn"))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
print(max(a,b,c))

-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:24:15) 
-- CODE:
# Teste seu codigo aos poucos.
a = int(input("oo"))
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
b = int(input("ll"))
c = int(input("nn"))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
subtotal = int(a+b+c)
total = int(b - a)
print(a+b+c)
print(max(a,b,c))

-- OUTPUT:
8
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:32:52) 
-- CODE:
# Teste seu codigo aos poucos.
a = int(input("oo"))
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
b = int(input("ll"))
c = int(input("nn"))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
i = (min(a,b,c))
medio = a + b + c - m - i
m = (max(a,b,c))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    medio = a + b + c - m - i
NameError: name 'm' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:33:57) 
-- CODE:
# Teste seu codigo aos poucos.
a = int(input("oo"))
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
b = int(input("ll"))
c = int(input("nn"))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
i = (min(a,b,c))
medio = int(a + b + c - m - i)
m = (max(a,b,c))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    medio = int(a + b + c - m - i)
NameError: name 'm' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:35:28) 
-- CODE:
# Teste seu codigo aos poucos.
a = int(input("oo"))
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
b = int(input("ll"))
c = int(input("nn"))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
i = (min(a,b,c))
m = (max(a,b,c))
medio = int(a + b + c - m - i)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    medio = int(a + b + c - m - i)
NameError: name 'm' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:36:41) 
-- CODE:
# Teste seu codigo aos poucos.
a = int(input("oo"))
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
b = int(input("ll"))
c = int(input("nn"))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
i = (min(a,b,c))
m = (max(a,b,c))
medio = int(a + b + c - m - i)
print(i)
print(medio)
print(m)

-- OUTPUT:
-2
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:37:31) 
-- CODE:
# Teste seu codigo aos poucos.
a = int(input("oo"))
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
b = int(input("ll"))
c = int(input("nn"))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
i = (min(a,b,c))
m = (max(a,b,c))
medio = int(a + b + c - m - i)
print(i)
print(medio)
print(m)

-- OUTPUT:
-2
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:37:49) 
-- CODE:
# Teste seu codigo aos poucos.
a = int(input("oo"))
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
b = int(input("ll"))
c = int(input("nn"))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
i = (min(a,b,c))
m = (max(a,b,c))
medio = int(a + b + c - m - i)
print(i)


-- OUTPUT:
-2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:38:43) 
-- CODE:
# Teste seu codigo aos poucos.
a = int(input("oo"))
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
b = int(input("ll"))
c = int(input("nn"))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
i = (min(a,b,c))
m = (max(a,b,c))
medio = int(a + b + c - m - i)
print(i)
print(medio)

-- OUTPUT:
-2
0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:39:16) 
-- CODE:
# Teste seu codigo aos poucos.
a = int(input("oo"))
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
b = int(input("ll"))
c = int(input("nn"))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
i = (min(a,b,c))
m = (max(a,b,c))
medio = int(a + b + c - m - i)
print(i)
print(medio)
print(m)

-- OUTPUT:
-2
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 11:39:28) 
-- CODE:
# Teste seu codigo aos poucos.
a = int(input("oo"))
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
b = int(input("ll"))
c = int(input("nn"))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
i = (min(a,b,c))
m = (max(a,b,c))
medio = int(a + b + c - m - i)
print(i)
print(medio)
print(m)

-- EXECUTION TIME:
0.17385
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
0
10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
