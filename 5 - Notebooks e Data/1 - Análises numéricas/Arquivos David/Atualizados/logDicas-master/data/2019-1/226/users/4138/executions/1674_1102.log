== TEST (2019-04-30 12:50:45) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("insira a altura do tanque:"))
h = float(input("insira o nivel de combustivel:"))
r = float(input("raio dos bojos semiesfericos:"))

from math import *
print(H,",",h,",",r)

a = (4/3) * (pi * r**2 * H)
b = (pi/3) * (h**2) * ((3 * r) - H)
c = pi * (r**2) * H

if(H < 0 or h < 0 or r < 0)
	print("Entradas invalidas")
elif(H < h or h < 2 *r )
	print("Entradas invalidas")
elif(h == (1/3 * h):
	  print("Volume:",(a - b))
elif():
	  print("Volume:",(c - 2 * b ))
elif():
	  print("Volume:", (a - b))
-- ERROR:
File "XXXX", line 17
    if(H < 0 or h < 0 or r < 0)
                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:50:54) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("insira a altura do tanque:"))
h = float(input("insira o nivel de combustivel:"))
r = float(input("raio dos bojos semiesfericos:"))

from math import *
print(H,",",h,",",r)

a = (4/3) * (pi * r**2 * H)
b = (pi/3) * (h**2) * ((3 * r) - H)
c = pi * (r**2) * H

if(H < 0 or h < 0 or r < 0):
	print("Entradas invalidas")
elif(H < h or h < 2 *r )
	print("Entradas invalidas")
elif(h == (1/3 * h):
	  print("Volume:",(a - b))
elif():
	  print("Volume:",(c - 2 * b ))
elif():
	  print("Volume:", (a - b))
-- ERROR:
File "XXXX", line 19
    elif(H < h or h < 2 *r )
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 12:59:39) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("insira a altura do tanque:"))
h = float(input("insira o nivel de combustivel:"))
r = float(input("raio dos bojos semiesfericos:"))

from math import *
print(H,",",h,",",r)

a = (4/3) * (pi * r**2 * h)
b = (pi/3) * (h**2) * ((3 * r) - h)
c = pi * (r**2) * h

Vt = c - 2 *b
if(H < 0 or h < 0 or r < 0):
	print("Entradas invalidas")
elif(H < h or h < 2 *r ):
	print("Entradas invalidas")
elif(h == (1/3 * h):
	  print("Volume:",(a - b))
elif():
	  print("Volume:",(c - 2 * b ))
elif():
	  print("Volume:", (a - b))
-- ERROR:
File "XXXX", line 22
    elif(h == (1/3 * h):
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 13:00:19) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("insira a altura do tanque:"))
h = float(input("insira o nivel de combustivel:"))
r = float(input("raio dos bojos semiesfericos:"))

from math import *
print(H,",",h,",",r)

a = (4/3) * (pi * r**2 * h)
b = (pi/3) * (h**2) * ((3 * r) - h)
c = pi * (r**2) * h

Vt = c - 2 *b
if(H < 0 or h < 0 or r < 0):
	print("Entradas invalidas")
elif(H < h or h < 2 *r ):
	print("Entradas invalidas")
elif(h == (1/3 * h)):
	  print("Volume:",(a - b))
elif():
	  print("Volume:",(c - 2 * b ))
elif():
	  print("Volume:", (a - b))
-- OUTPUT:
11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 17:18:19) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("insira a altura do tanque:"))
h = float(input("insira o nivel de combustivel:"))
r = float(input("raio dos bojos semiesfericos:"))

from math import *
print("Entrdas:",H,",",h,",",r)

if(H < 0 and h < 0 and r < 0 and H < h and H < 2 * r):
	print("Entradas invalidas")

elif(h <= r):
	v = pi * h**2 *(3*r - h)
	print("Volume:",round(v * 1000,3),"litros")
elif(r < h and h <= H - r):
	v = (4 * pi * (r**3) / 6) + (pi * ((r**2) * (h -r))
	print("Volume:",round(v * 1000,3),"litros")
elif(h > H - r):
	v = (4 * pi * (r**3) / 6) + ((pi/3) * ((r**2) * (h -r)) * 2)
	print("Volume:",round(v * 1000,3),"litros")
										  


-- EXECUTION TIME:
0.20989
-- ERROR:
  File "/home/codebench/codes/1674/1102/main.py", line 21
    print("Volume:",round(v * 1000,3),"litros")
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 17:18:21) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("insira a altura do tanque:"))
h = float(input("insira o nivel de combustivel:"))
r = float(input("raio dos bojos semiesfericos:"))

from math import *
print("Entrdas:",H,",",h,",",r)

if(H < 0 and h < 0 and r < 0 and H < h and H < 2 * r):
	print("Entradas invalidas")

elif(h <= r):
	v = pi * h**2 *(3*r - h)
	print("Volume:",round(v * 1000,3),"litros")
elif(r < h and h <= H - r):
	v = (4 * pi * (r**3) / 6) + (pi * ((r**2) * (h -r))
	print("Volume:",round(v * 1000,3),"litros")
elif(h > H - r):
	v = (4 * pi * (r**3) / 6) + ((pi/3) * ((r**2) * (h -r)) * 2)
	print("Volume:",round(v * 1000,3),"litros")
										  


-- EXECUTION TIME:
0.137447
-- ERROR:
  File "/home/codebench/codes/1674/1102/main.py", line 21
    print("Volume:",round(v * 1000,3),"litros")
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:18:21) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("insira a altura do tanque:"))
h = float(input("insira o nivel de combustivel:"))
r = float(input("raio dos bojos semiesfericos:"))

from math import *
print("Entrdas:",H,",",h,",",r)

if(H < 0 and h < 0 and r < 0 and H < h and H < 2 * r):
	print("Entradas invalidas")

elif(h <= r):
	v = pi * h**2 *(3*r - h)
	print("Volume:",round(v * 1000,3),"litros")
elif(r < h and h <= H - r):
	v = (4 * pi * (r**3) / 6) + (pi * ((r**2) * (h -r))
	print("Volume:",round(v * 1000,3),"litros")
elif(h > H - r):
	v = (4 * pi * (r**3) / 6) + ((pi/3) * ((r**2) * (h -r)) * 2)
	print("Volume:",round(v * 1000,3),"litros")
										  


-- ERROR:
File "XXXX", line 21
    print("Volume:",round(v * 1000,3),"litros")
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:18:59) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("insira a altura do tanque:"))
h = float(input("insira o nivel de combustivel:"))
r = float(input("raio dos bojos semiesfericos:"))

from math import *
print("Entrdas:",H,",",h,",",r)

if(H < 0 and h < 0 and r < 0 and H < h and H < 2 * r):
	print("Entradas invalidas")

elif(h <= r):
	v = pi * h**2 *(3*r - h)
	print("Volume:",round(v * 1000,3),"litros")
elif(r < h and h <= H - r):
	v = (4 * pi * (r**3) / 6) + (pi * ((r**2) * (h -r)))
	print("Volume:",round(v * 1000,3),"litros")
elif(h > H - r):
	v = (4 * pi * (r**3) / 6) + ((pi/3) * ((r**2) * (h -r)) * 2)
	print("Volume:",round(v * 1000,3),"litros")
										  


-- OUTPUT:
Entrdas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 17:19:04) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("insira a altura do tanque:"))
h = float(input("insira o nivel de combustivel:"))
r = float(input("raio dos bojos semiesfericos:"))

from math import *
print("Entrdas:",H,",",h,",",r)

if(H < 0 and h < 0 and r < 0 and H < h and H < 2 * r):
	print("Entradas invalidas")

elif(h <= r):
	v = pi * h**2 *(3*r - h)
	print("Volume:",round(v * 1000,3),"litros")
elif(r < h and h <= H - r):
	v = (4 * pi * (r**3) / 6) + (pi * ((r**2) * (h -r)))
	print("Volume:",round(v * 1000,3),"litros")
elif(h > H - r):
	v = (4 * pi * (r**3) / 6) + ((pi/3) * ((r**2) * (h -r)) * 2)
	print("Volume:",round(v * 1000,3),"litros")
										  


-- EXECUTION TIME:
0.150207
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entrdas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entrdas: 8.5 , 9.5 , 2.2
Volume: 96300.287 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entrdas: 8.0 , 4.0 , 6.0
Volume: 703716.754 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 17:19:43) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("insira a altura do tanque:"))
h = float(input("insira o nivel de combustivel:"))
r = float(input("raio dos bojos semiesfericos:"))

from math import *
print("Entrdas:",H,",",h,",",r)

if(H < 0 and h < 0 and r < 0 and H < h and H < 2 * r):
	print("Entradas invalidas")

elif(h <= r):
	v = pi * (h ** 2)* (3 * r - h)
	print("Volume:",round(v * 1000,3),"litros")
elif(r < h and h <= H - r):
	v = (4 * pi * (r**3) / 6) + (pi * ((r**2) * (h -r)))
	print("Volume:",round(v * 1000,3),"litros")
elif(h > H - r):
	v = (4 * pi * (r**3) / 6) + ((pi/3) * ((r**2) * (h -r)) * 2)
	print("Volume:",round(v * 1000,3),"litros")
										  


-- EXECUTION TIME:
0.157162
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entrdas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entrdas: 8.5 , 9.5 , 2.2
Volume: 96300.287 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entrdas: 8.0 , 4.0 , 6.0
Volume: 703716.754 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 17:19:59) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("insira a altura do tanque:"))
h = float(input("insira o nivel de combustivel:"))
r = float(input("raio dos bojos semiesfericos:"))

from math import *
print("Entrdas:",H,",",h,",",r)

if(H < 0 and h < 0 and r < 0 and H < h and H < 2 * r):
	print("Entradas invalidas")

elif(h <= r):
	v = (pi/3) * (h ** 2)* (3 * r - h)
	print("Volume:",round(v * 1000,3),"litros")
elif(r < h and h <= H - r):
	v = (4 * pi * (r**3) / 6) + (pi * ((r**2) * (h -r)))
	print("Volume:",round(v * 1000,3),"litros")
elif(h > H - r):
	v = (4 * pi * (r**3) / 6) + ((pi/3) * ((r**2) * (h -r)) * 2)
	print("Volume:",round(v * 1000,3),"litros")
										  


-- EXECUTION TIME:
0.136504
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entrdas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entrdas: 8.5 , 9.5 , 2.2
Volume: 96300.287 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entrdas: 8.0 , 4.0 , 6.0
Volume: 234572.251 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:20:01) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("insira a altura do tanque:"))
h = float(input("insira o nivel de combustivel:"))
r = float(input("raio dos bojos semiesfericos:"))

from math import *
print("Entrdas:",H,",",h,",",r)

if(H < 0 and h < 0 and r < 0 and H < h and H < 2 * r):
	print("Entradas invalidas")

elif(h <= r):
	v = (pi/3) * (h ** 2)* (3 * r - h)
	print("Volume:",round(v * 1000,3),"litros")
elif(r < h and h <= H - r):
	v = (4 * pi * (r**3) / 6) + (pi * ((r**2) * (h -r)))
	print("Volume:",round(v * 1000,3),"litros")
elif(h > H - r):
	v = (4 * pi * (r**3) / 6) + ((pi/3) * ((r**2) * (h -r)) * 2)
	print("Volume:",round(v * 1000,3),"litros")
										  


-- OUTPUT:
Entrdas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:20:03) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("insira a altura do tanque:"))
h = float(input("insira o nivel de combustivel:"))
r = float(input("raio dos bojos semiesfericos:"))

from math import *
print("Entrdas:",H,",",h,",",r)

if(H < 0 and h < 0 and r < 0 and H < h and H < 2 * r):
	print("Entradas invalidas")

elif(h <= r):
	v = (pi/3) * (h ** 2)* (3 * r - h)
	print("Volume:",round(v * 1000,3),"litros")
elif(r < h and h <= H - r):
	v = (4 * pi * (r**3) / 6) + (pi * ((r**2) * (h -r)))
	print("Volume:",round(v * 1000,3),"litros")
elif(h > H - r):
	v = (4 * pi * (r**3) / 6) + ((pi/3) * ((r**2) * (h -r)) * 2)
	print("Volume:",round(v * 1000,3),"litros")
										  


-- OUTPUT:
Entrdas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:20:04) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("insira a altura do tanque:"))
h = float(input("insira o nivel de combustivel:"))
r = float(input("raio dos bojos semiesfericos:"))

from math import *
print("Entrdas:",H,",",h,",",r)

if(H < 0 and h < 0 and r < 0 and H < h and H < 2 * r):
	print("Entradas invalidas")

elif(h <= r):
	v = (pi/3) * (h ** 2)* (3 * r - h)
	print("Volume:",round(v * 1000,3),"litros")
elif(r < h and h <= H - r):
	v = (4 * pi * (r**3) / 6) + (pi * ((r**2) * (h -r)))
	print("Volume:",round(v * 1000,3),"litros")
elif(h > H - r):
	v = (4 * pi * (r**3) / 6) + ((pi/3) * ((r**2) * (h -r)) * 2)
	print("Volume:",round(v * 1000,3),"litros")
										  


-- OUTPUT:
Entrdas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:20:04) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("insira a altura do tanque:"))
h = float(input("insira o nivel de combustivel:"))
r = float(input("raio dos bojos semiesfericos:"))

from math import *
print("Entrdas:",H,",",h,",",r)

if(H < 0 and h < 0 and r < 0 and H < h and H < 2 * r):
	print("Entradas invalidas")

elif(h <= r):
	v = (pi/3) * (h ** 2)* (3 * r - h)
	print("Volume:",round(v * 1000,3),"litros")
elif(r < h and h <= H - r):
	v = (4 * pi * (r**3) / 6) + (pi * ((r**2) * (h -r)))
	print("Volume:",round(v * 1000,3),"litros")
elif(h > H - r):
	v = (4 * pi * (r**3) / 6) + ((pi/3) * ((r**2) * (h -r)) * 2)
	print("Volume:",round(v * 1000,3),"litros")
										  


-- OUTPUT:
Entrdas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 17:20:07) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("insira a altura do tanque:"))
h = float(input("insira o nivel de combustivel:"))
r = float(input("raio dos bojos semiesfericos:"))

from math import *
print("Entrdas:",H,",",h,",",r)

if(H < 0 and h < 0 and r < 0 and H < h and H < 2 * r):
	print("Entradas invalidas")

elif(h <= r):
	v = (pi/3) * (h ** 2)* (3 * r - h)
	print("Volume:",round(v * 1000,3),"litros")
elif(r < h and h <= H - r):
	v = (4 * pi * (r**3) / 6) + (pi * ((r**2) * (h -r)))
	print("Volume:",round(v * 1000,3),"litros")
elif(h > H - r):
	v = (4 * pi * (r**3) / 6) + ((pi/3) * ((r**2) * (h -r)) * 2)
	print("Volume:",round(v * 1000,3),"litros")
										  


-- EXECUTION TIME:
0.238079
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entrdas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entrdas: 8.5 , 9.5 , 2.2
Volume: 96300.287 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entrdas: 8.0 , 4.0 , 6.0
Volume: 234572.251 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 17:20:52) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("insira a altura do tanque:"))
h = float(input("insira o nivel de combustivel:"))
r = float(input("raio dos bojos semiesfericos:"))

from math import *
print("Entrdas:",H,",",h,",",r)

if(H < 0 and h < 0 and r < 0 and H < h and H < 2 * r):
	print("Entradas invalidas")

elif(h <= r):
	v = (pi/3) * (h ** 2)* (3 * r - h)
	print("Volume:",round(v * 1000,3),"litros")
elif(r < h and h <= H - r):
	v = (4 * pi * (r ** 3) / 6) + (pi * ((r ** 2) * (h -r)))
	print("Volume:",round(v * 1000,3),"litros")
elif(h > H - r):
	v = (4 * pi * (r ** 3) / 6) + ((pi/3) * ((r ** 2) * (h -r)) * 2)
	print("Volume:",round(v * 1000,3),"litros")
										  


-- EXECUTION TIME:
0.13274
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entrdas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entrdas: 8.5 , 9.5 , 2.2
Volume: 96300.287 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entrdas: 8.0 , 4.0 , 6.0
Volume: 234572.251 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:20:53) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("insira a altura do tanque:"))
h = float(input("insira o nivel de combustivel:"))
r = float(input("raio dos bojos semiesfericos:"))

from math import *
print("Entrdas:",H,",",h,",",r)

if(H < 0 and h < 0 and r < 0 and H < h and H < 2 * r):
	print("Entradas invalidas")

elif(h <= r):
	v = (pi/3) * (h ** 2)* (3 * r - h)
	print("Volume:",round(v * 1000,3),"litros")
elif(r < h and h <= H - r):
	v = (4 * pi * (r ** 3) / 6) + (pi * ((r ** 2) * (h -r)))
	print("Volume:",round(v * 1000,3),"litros")
elif(h > H - r):
	v = (4 * pi * (r ** 3) / 6) + ((pi/3) * ((r ** 2) * (h -r)) * 2)
	print("Volume:",round(v * 1000,3),"litros")
										  


-- OUTPUT:
Entrdas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 17:20:53) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("insira a altura do tanque:"))
h = float(input("insira o nivel de combustivel:"))
r = float(input("raio dos bojos semiesfericos:"))

from math import *
print("Entrdas:",H,",",h,",",r)

if(H < 0 and h < 0 and r < 0 and H < h and H < 2 * r):
	print("Entradas invalidas")

elif(h <= r):
	v = (pi/3) * (h ** 2)* (3 * r - h)
	print("Volume:",round(v * 1000,3),"litros")
elif(r < h and h <= H - r):
	v = (4 * pi * (r ** 3) / 6) + (pi * ((r ** 2) * (h -r)))
	print("Volume:",round(v * 1000,3),"litros")
elif(h > H - r):
	v = (4 * pi * (r ** 3) / 6) + ((pi/3) * ((r ** 2) * (h -r)) * 2)
	print("Volume:",round(v * 1000,3),"litros")
										  


-- EXECUTION TIME:
0.180839
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entrdas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entrdas: 8.5 , 9.5 , 2.2
Volume: 96300.287 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
insira a altura do tanque:insira o nivel de combustivel:raio dos bojos semiesfericos:Entrdas: 8.0 , 4.0 , 6.0
Volume: 234572.251 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 17:21:21) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("insira a altura do tanque:"))
h = float(input("insira o nivel de combustivel:"))
r = float(input("raio dos bojos semiesfericos:"))

from math import *
print("Entrdas:",H,",",h,",",r)

if(H < 0 and h < 0 and r < 0 and H < h and H < 2 * r):
	print("Entradas invalidas")

elif(h <= r):
	v = (pi/3) * (h ** 2)* (3 * r - h)
	print("Volume:",round(v * 1000,3),"litros")
elif(r < h and h <= H - r):
	v = ((4 * pi * (r ** 3)) / 6) + (pi * ((r ** 2) * (h -r)))
	print("Volume:",round(v * 1000,3),"litros")
elif(h > H - r):
	v = ((4 * pi * (r ** 3)) / 6) + ((pi/3) * ((r ** 2) * (h -r)) * 2)
	print("Volume:",round(v * 1000,3),"litros")
										  


-- EXECUTION TIME:
0.129366
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entrdas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entrdas: 8.5 , 9.5 , 2.2
Volume: 96300.287 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entrdas: 8.0 , 4.0 , 6.0
Volume: 234572.251 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:21:22) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("insira a altura do tanque:"))
h = float(input("insira o nivel de combustivel:"))
r = float(input("raio dos bojos semiesfericos:"))

from math import *
print("Entrdas:",H,",",h,",",r)

if(H < 0 and h < 0 and r < 0 and H < h and H < 2 * r):
	print("Entradas invalidas")

elif(h <= r):
	v = (pi/3) * (h ** 2)* (3 * r - h)
	print("Volume:",round(v * 1000,3),"litros")
elif(r < h and h <= H - r):
	v = ((4 * pi * (r ** 3)) / 6) + (pi * ((r ** 2) * (h -r)))
	print("Volume:",round(v * 1000,3),"litros")
elif(h > H - r):
	v = ((4 * pi * (r ** 3)) / 6) + ((pi/3) * ((r ** 2) * (h -r)) * 2)
	print("Volume:",round(v * 1000,3),"litros")
										  


-- OUTPUT:
Entrdas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:21:41) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("insira a altura do tanque:"))
h = float(input("insira o nivel de combustivel:"))
r = float(input("raio dos bojos semiesfericos:"))

from math import *
print("Entrdas:",H,",",h,",",r)

if(H < 0 and h < 0 and r < 0 and H < h and H < 2 * r):
	print("Entradas invalidas")

elif(h <= r):
	v = (pi/3) * (h ** 2)* (3 * r - h)
	print("Volume:",round(v * 1000,3),"litros")
elif(r < h and h <= H - r):
	v = ((4 * pi * (r ** 3)) / 6) + (pi * ((r ** 2) * (h -r)))
	print("Volume:",round(v * 1000,3),"litros")
elif(h > H - r):
	v = ((4 * pi * (r ** 3)) / 6) + ((pi/3) * ((r ** 2) * (h -r)) * 2)
	print("Volume:",round(v * 1000,3),"litros")
										  


-- OUTPUT:
Entrdas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 17:21:44) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("insira a altura do tanque:"))
h = float(input("insira o nivel de combustivel:"))
r = float(input("raio dos bojos semiesfericos:"))

from math import *
print("Entrdas:",H,",",h,",",r)

if(H < 0 and h < 0 and r < 0 and H < h and H < 2 * r):
	print("Entradas invalidas")

elif(h <= r):
	v = (pi/3) * (h ** 2)* (3 * r - h)
	print("Volume:",round(v * 1000,3),"litros")
elif(r < h and h <= H - r):
	v = ((4 * pi * (r ** 3)) / 6) + (pi * ((r ** 2) * (h -r)))
	print("Volume:",round(v * 1000,3),"litros")
elif(h > H - r):
	v = ((4 * pi * (r ** 3)) / 6) + ((pi/3) * ((r ** 2) * (h -r)) * 2)
	print("Volume:",round(v * 1000,3),"litros")
										  


-- EXECUTION TIME:
0.19494
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entrdas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entrdas: 8.5 , 9.5 , 2.2
Volume: 96300.287 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entrdas: 8.0 , 4.0 , 6.0
Volume: 234572.251 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 17:22:41) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("insira a altura do tanque:"))
h = float(input("insira o nivel de combustivel:"))
r = float(input("raio dos bojos semiesfericos:"))

from math import *
print("Entrdas:",H,",",h,",",r)

if(H > 0 and h > 0 and r > 0 and H > h and H > 2 * r):

	if(h <= r):
		v = (pi/3) * (h ** 2)* (3 * r - h)
		print("Volume:",round(v * 1000,3),"litros")
	elif(r < h and h <= H - r):
		v = ((4 * pi * (r ** 3)) / 6) + (pi * ((r ** 2) * (h -r)))
		print("Volume:",round(v * 1000,3),"litros")
	elif(h > H - r):
		v = ((4 * pi * (r ** 3)) / 6) + ((pi/3) * ((r ** 2) * (h -r)) * 2)
		print("Volume:",round(v * 1000,3),"litros")
										  


-- EXECUTION TIME:
0.150472
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
insira a altura do tanque:insira o nivel de combustivel:raio dos bojos semiesfericos:Entrdas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
insira a altura do tanque:insira o nivel de combustivel:raio dos bojos semiesfericos:Entrdas: 8.5 , 9.5 , 2.2
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
insira a altura do tanque:insira o nivel de combustivel:raio dos bojos semiesfericos:Entrdas: 8.0 , 4.0 , 6.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:22:42) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("insira a altura do tanque:"))
h = float(input("insira o nivel de combustivel:"))
r = float(input("raio dos bojos semiesfericos:"))

from math import *
print("Entrdas:",H,",",h,",",r)

if(H > 0 and h > 0 and r > 0 and H > h and H > 2 * r):

	if(h <= r):
		v = (pi/3) * (h ** 2)* (3 * r - h)
		print("Volume:",round(v * 1000,3),"litros")
	elif(r < h and h <= H - r):
		v = ((4 * pi * (r ** 3)) / 6) + (pi * ((r ** 2) * (h -r)))
		print("Volume:",round(v * 1000,3),"litros")
	elif(h > H - r):
		v = ((4 * pi * (r ** 3)) / 6) + ((pi/3) * ((r ** 2) * (h -r)) * 2)
		print("Volume:",round(v * 1000,3),"litros")
										  


-- OUTPUT:
Entrdas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 17:23:14) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("insira a altura do tanque:"))
h = float(input("insira o nivel de combustivel:"))
r = float(input("raio dos bojos semiesfericos:"))

from math import *
print("Entrdas:",H,",",h,",",r)

if(H > 0 and h > 0 and r > 0 and H > h and H > 2 * r):

	if(h <= r):
		v = (pi/3) * (h ** 2)* (3 * r - h)
		print("Volume:",round(v * 1000,3),"litros")
	elif(r < h and h <= H - r):
		v = ((4 * pi * (r ** 3)) / 6) + (pi * ((r ** 2) * (h -r)))
		print("Volume:",round(v * 1000,3),"litros")
	elif(h > H - r):
		v = ((4 * pi * (r ** 3)) / 6) + ((pi/3) * ((r ** 2) * (h -r)) * 2)
		print("Volume:",round(v * 1000,3),"litros")
else:
	print("Entradas invalidas")
										  


-- EXECUTION TIME:
0.197732
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entrdas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entrdas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entrdas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 17:23:15) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("insira a altura do tanque:"))
h = float(input("insira o nivel de combustivel:"))
r = float(input("raio dos bojos semiesfericos:"))

from math import *
print("Entrdas:",H,",",h,",",r)

if(H > 0 and h > 0 and r > 0 and H > h and H > 2 * r):

	if(h <= r):
		v = (pi/3) * (h ** 2)* (3 * r - h)
		print("Volume:",round(v * 1000,3),"litros")
	elif(r < h and h <= H - r):
		v = ((4 * pi * (r ** 3)) / 6) + (pi * ((r ** 2) * (h -r)))
		print("Volume:",round(v * 1000,3),"litros")
	elif(h > H - r):
		v = ((4 * pi * (r ** 3)) / 6) + ((pi/3) * ((r ** 2) * (h -r)) * 2)
		print("Volume:",round(v * 1000,3),"litros")
else:
	print("Entradas invalidas")
										  


-- EXECUTION TIME:
0.121522
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entrdas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entrdas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entrdas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 17:23:39) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("insira a altura do tanque:"))
h = float(input("insira o nivel de combustivel:"))
r = float(input("raio dos bojos semiesfericos:"))

from math import *
print("Entradas:",H,",",h,",",r)

if(H > 0 and h > 0 and r > 0 and H > h and H > 2 * r):

	if(h <= r):
		v = (pi/3) * (h ** 2)* (3 * r - h)
		print("Volume:",round(v * 1000,3),"litros")
	elif(r < h and h <= H - r):
		v = ((4 * pi * (r ** 3)) / 6) + (pi * ((r ** 2) * (h -r)))
		print("Volume:",round(v * 1000,3),"litros")
	elif(h > H - r):
		v = ((4 * pi * (r ** 3)) / 6) + ((pi/3) * ((r ** 2) * (h -r)) * 2)
		print("Volume:",round(v * 1000,3),"litros")
else:
	print("Entradas invalidas")
										  


-- EXECUTION TIME:
0.1711
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
