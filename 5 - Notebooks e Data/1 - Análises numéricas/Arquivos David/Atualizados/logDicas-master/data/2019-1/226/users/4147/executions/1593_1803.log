== TEST (2019-04-01 22:37:59) 
-- CODE:
d1 = 1
d2 = 5
d3 = 3
d4 = 8
r = (d1 * 2) + (d2 * 3) + (d3 * 4) + (d4 * 5)
-- OUTPUT:
91.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 22:39:30) 
-- CODE:
d1 = 1
d2 = 5
d3 = 3
d4 = 8
r = (d1 * 2) + (d2 * 3) + (d3 * 4) + (d4 * 5)
-- OUTPUT:
91.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 22:42:37) 
-- CODE:
d1 = float(input("Valor de d1: "))
d2 = float(input("Valor de d2: "))
d3 = float(input("Valor de d3: "))
d4 = float(input("Valor de d4: "))
r = (d1 * 2) + (d2 * 3) + (d3 * 4) + (d4 * 5)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    d2 = float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 22:43:03) 
-- CODE:
d1 = float(input("Valor de d1: "))
d2 = float(input("Valor de d2: "))
d3 = float(input("Valor de d3: "))
d4 = float(input("Valor de d4: "))
r = (d1 * 2) + (d2 * 3) + (d3 * 4) + (d4 * 5)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    d2 = float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 22:46:47) 
-- CODE:
d1 = float(input("Valor de d1: "))
d2 = float(input("Valor de d2: "))
d3 = float(input("Valor de d3: "))
d4 = float(input("Valor de d4: "))
r = (d1 * 2) + (d2 * 3) + (d3 * 4) + (d4 * 5)
print(r,r - %11)
-- ERROR:
File "XXXX", line 6
    print(r,r - %11)
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 22:47:31) 
-- CODE:
d1 = float(input("Valor de d1: "))
d2 = float(input("Valor de d2: "))
d3 = float(input("Valor de d3: "))
d4 = float(input("Valor de d4: "))
r = (d1 * 2) + (d2 * 3) + (d3 * 4) + (d4 * 5)
print
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    d2 = float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 10:25:39) 
-- CODE:
numero = float(input("Digite um numero de quatro digitos: "))
a = numero // 1000
a1 = numero % 1000
b = a // 100
b1 = a % 100
c = b // 10
c1 = b % 10
d = c1
s = (a * 2) + (b * 3) + (c * 4) + (d * 5)
print(s)
-- OUTPUT:
4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 10:26:38) 
-- CODE:
numero = float(input("Digite um numero de quatro digitos: "))
a = numero // 1000
a1 = numero % 1000
b = a // 100
b1 = a % 100
c = b // 10
c1 = b % 10
d = c1
s = ((a * 2) + (b * 3) + (c * 4) + (d * 5)) % 6
print(s)
-- OUTPUT:
4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 10:27:52) 
-- CODE:
numero = float(input("Digite um numero de quatro digitos: "))
a = numero // 1000
a1 = numero % 1000
b = a // 100
b1 = a % 100
c = b // 10
c1 = b % 10
d = c1
s = (a * 2) + (b * 3) + (c * 4) + (d * 5)
v = s % 11
print(v)
-- OUTPUT:
4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 10:28:07) 
-- CODE:
numero = float(input("Digite um numero de quatro digitos: "))
a = numero // 1000
a1 = numero % 1000
b = a // 100
b1 = a % 100
c = b // 10
c1 = b % 10
d = c1
s = (a * 2) + (b * 3) + (c * 4) + (d * 5) / 11
v = s % 11
print(v)
-- OUTPUT:
4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 10:28:52) 
-- CODE:
numero = float(input("Digite um numero de quatro digitos: "))
a = numero // 1000
a1 = numero % 1000
b = a // 100
b1 = a % 100
c = b // 10
c1 = b % 10
d = c1
s = (a * 5) + (b * 4) + (c * 3) + (d * 2) / 11
v = s % 11
print(v)
-- OUTPUT:
10.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 10:29:17) 
-- CODE:
numero = float(input("Digite um numero de quatro digitos: "))
a = numero // 1000
a1 = numero % 1000
b = a // 100
b1 = a % 100
c = b // 10
c1 = b % 10
d = c1
s = (a * 5) + (b * 4) + (c * 3) + (d * 2) / 11
v = s % 11
print(v)
-- EXECUTION TIME:
0.154068
-- TEST CASE 1:
---- input:
2000
---- correct output:
10
---- user output:
10.0
-- TEST CASE 2:
---- input:
3550
---- correct output:
6
---- user output:
4.0
-- TEST CASE 3:
---- input:
0007
---- correct output:
3
---- user output:
0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 10:29:28) 
-- CODE:
numero = float(input("Digite um numero de quatro digitos: "))
a = numero // 1000
a1 = numero % 1000
b = a // 100
b1 = a % 100
c = b // 10
c1 = b % 10
d = c1
s = (a * 5) + (b * 4) + (c * 3) + (d * 2) 
v = s % 11
print(v)
-- OUTPUT:
10.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 10:30:26) 
-- CODE:
numero = float(input("Digite um numero de quatro digitos: "))
a = numero // 1000
a1 = numero % 1000
b = a // 100
b1 = a % 100
c = b // 10
c1 = b % 10
d = c1
s = ((a * 5) + (b * 4) + (c * 3) + (d * 2)) / 11
print(s)
-- OUTPUT:
0.9090909090909091
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 10:30:41) 
-- CODE:
numero = float(input("Digite um numero de quatro digitos: "))
a = numero // 1000
a1 = numero % 1000
b = a // 100
b1 = a % 100
c = b // 10
c1 = b % 10
d = c1
s = ((a * 5) + (b * 4) + (c * 3) + (d * 2))
print(s)
-- OUTPUT:
10.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 10:31:03) 
-- CODE:
numero = float(input("Digite um numero de quatro digitos: "))
a = numero // 1000
a1 = numero % 1000
b = a // 100
b1 = a % 100
c = b // 10
c1 = b % 10
d = c1
s = ((a * 5) + (b * 4) + (c * 3) + (d * 2))
print(s % 11)
-- OUTPUT:
10.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
