== TEST (2019-03-21 11:52:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
dividendo=float(input("qual seu dividendo: "))
divisor=float(input("qual seu divisor: "))
print(dividendo/divisor)
-- OUTPUT:
1.6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:53:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
dividendo=float(input("qual seu dividendo: "))
divisor=float(input("qual seu divisor: "))
print(dividendo//divisor)
-- OUTPUT:
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:53:21) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
dividendo=float(input("qual seu dividendo: "))
divisor=float(input("qual seu divisor: "))
print(dividendo//divisor)
-- OUTPUT:
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:53:24) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
dividendo=float(input("qual seu dividendo: "))
divisor=float(input("qual seu divisor: "))
print(dividendo//divisor)
-- OUTPUT:
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:54:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
dividendo=float(input("qual seu dividendo: "))
divisor=float(input("qual seu divisor: "))
quociente(dividendo//divisor)
print(dividendo)
print(divisor)
print()
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    quociente(dividendo//divisor)
NameError: name 'quociente' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:54:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
dividendo=float(input("qual seu dividendo: "))
divisor=float(input("qual seu divisor: "))
quociente=(dividendo//divisor)
print(dividendo)
print(divisor)
print()
-- OUTPUT:
8.0
5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 11:55:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
dividendo=float(input("qual seu dividendo: "))
divisor=float(input("qual seu divisor: "))
quociente=(dividendo//divisor)
resto=(dividendo%divisor)
print(dividendo)
print(divisor)
print(quociente)
-- EXECUTION TIME:
0.246321
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
8.0
5.0
1.0
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
14.0
2.0
7.0
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
347.0
2.0
173.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:55:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
dividendo=float(input("qual seu dividendo: "))
divisor=float(input("qual seu divisor: "))
quociente=(dividendo//divisor)
resto=(dividendo%divisor)
print(dividendo)
print(divisor)
print(quociente)
-- OUTPUT:
8.0
5.0
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:55:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
dividendo=float(input("qual seu dividendo: "))
divisor=float(input("qual seu divisor: "))
quociente=(dividendo//divisor)
resto=(dividendo%divisor)
print(dividendo)
print(divisor)
print(quociente)
-- OUTPUT:
8.0
5.0
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 11:55:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
dividendo=float(input("qual seu dividendo: "))
divisor=float(input("qual seu divisor: "))
quociente=(dividendo//divisor)
resto=(dividendo%divisor)
print(dividendo)
print(divisor)
print(quociente)
print(resto)
-- EXECUTION TIME:
0.140403
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
8.0
5.0
1.0
3.0
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
14.0
2.0
7.0
0.0
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
347.0
2.0
173.0
1.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:55:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
dividendo=float(input("qual seu dividendo: "))
divisor=float(input("qual seu divisor: "))
quociente=(dividendo//divisor)
resto=(dividendo%divisor)
print(dividendo)
print(divisor)
print(quociente)
print(resto)
-- OUTPUT:
8.0
5.0
1.0
3.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:56:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
dividendo=float(input("qual seu dividendo: "))
divisor=float(input("qual seu divisor: "))
quociente=(dividendo//divisor)
resto=(dividendo%divisor)
print(dividendo)
print(divisor)
print(quociente)
print(resto)
-- OUTPUT:
8.0
5.0
1.0
3.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 11:56:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
dividendo=int(input("qual seu dividendo: "))
divisor=int(input("qual seu divisor: "))
quociente=(dividendo//divisor)
resto=(dividendo%divisor)
print(dividendo)
print(divisor)
print(quociente)
print(resto)
-- EXECUTION TIME:
0.137666
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
8
5
1
3
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
14
2
7
0
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
347
2
173
1
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
