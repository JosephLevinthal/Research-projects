== TEST (2019-04-08 20:51:34) 
-- CODE:
valor = float(input("Valor disponivel: "))
ru = int(input("Quantidade de tickets do ru: "))
val_ru = float(input("Valor do ticket do ru: "))
onibus = int(input("Quantidade de passes de onibus: "))
val_pas = float(input("Valor do passe de onibus: "))

if(((ru * val_ru) + (onibus * val_pas)) >= valor):
	print("suficiente".upper())
else:
	print("insuficiente".upper())
-- OUTPUT:
INSUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 20:51:51) 
-- CODE:
valor = float(input("Valor disponivel: "))
ru = int(input("Quantidade de tickets do ru: "))
val_ru = float(input("Valor do ticket do ru: "))
onibus = int(input("Quantidade de passes de onibus: "))
val_pas = float(input("Valor do passe de onibus: "))

if(((ru * val_ru) + (onibus * val_pas)) >= valor):
	print("suficiente".upper())
else:
	print("insuficiente".upper())
-- OUTPUT:
INSUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 20:57:57) 
-- CODE:
valor = float(input("Valor disponivel: "))
ru = int(input("Quantidade de tickets do ru: "))
val_ru = float(input("Valor do ticket do ru: "))
onibus = int(input("Quantidade de passes de onibus: "))
val_pas = float(input("Valor do passe de onibus: "))

if(((ru * val_ru) + (onibus * val_pas)) <= valor):
	print("suficiente".upper())
else:
	print("insuficiente".upper())
-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 20:58:14) 
-- CODE:
valor = float(input("Valor disponivel: "))
ru = int(input("Quantidade de tickets do ru: "))
val_ru = float(input("Valor do ticket do ru: "))
onibus = int(input("Quantidade de passes de onibus: "))
val_pas = float(input("Valor do passe de onibus: "))

if(((ru * val_ru) + (onibus * val_pas)) <= valor):
	print("suficiente".upper())
else:
	print("insuficiente".upper())
-- EXECUTION TIME:
0.151214
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
INSUFICIENTE
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
