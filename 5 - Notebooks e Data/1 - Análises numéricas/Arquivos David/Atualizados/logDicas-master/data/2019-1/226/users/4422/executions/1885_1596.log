== TEST (2019-07-09 10:22:28) 
-- CODE:
from numpy import*
v = array(eval(input('notas: ')))
med = size(v)/sum(v)
print(med)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 10:22:56) 
-- CODE:
from numpy import*
v = array(eval(input('notas: ')))
med = sum(v)/size(v)
print(med)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 10:25:21) 
-- CODE:
from numpy import*
v = array(eval(input('notas: ')))

for x in range(v):
	if x == min(v):
		med = (sum(v) - x)/size(v)
print(med)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 10:25:38) 
-- CODE:
from numpy import*
v = array(eval(input('notas: ')))

for x in range(array(v)):
	if x == min(v):
		med = (sum(v) - x)/size(v)
print(med)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 10:26:19) 
-- CODE:
from numpy import*
v = array(eval(input('notas: ')))

for x in v:
	if x == min(v):
		med = (sum(v) - x)/size(v)
print(med)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-09 10:26:27) 
-- CODE:
from numpy import*
v = array(eval(input('notas: ')))

for x in v:
	if x == min(v):
		med = (sum(v) - x)/size(v)
print(med)
-- EXECUTION TIME:
0.921601
-- TEST CASE 1:
---- input:
[1,0,3]
---- correct output:
2.0
---- user output:
1.3333333333333333
-- TEST CASE 2:
---- input:
[3,2,1,5,3]
---- correct output:
3.25
---- user output:
2.6
-- TEST CASE 3:
---- input:
[2,2,2,2]
---- correct output:
2.0
---- user output:
1.5
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 10:27:14) 
-- CODE:
from numpy import*
v = array(eval(input('notas: ')))

for x in v:
	if x == min(v):
		med = (sum(v) - x)/size(v)
	print(med)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 10:27:44) 
-- CODE:
from numpy import*
v = array(eval(input('notas: ')))
med = (sum(v) - min(v))/size(v)
print(med)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 10:28:39) 
-- CODE:
from numpy import*
v = array(eval(input('notas: ')))
med = (sum(v) - min(v))/size(v) - 1
print(round(med, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 10:29:08) 
-- CODE:
from numpy import*
v = array(eval(input('notas: ')))
med = (sum(v) - min(v))/(size(v) - 1)
print(round(med, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-09 10:29:31) 
-- CODE:
from numpy import*
v = array(eval(input('notas: ')))
med = (sum(v) - min(v))/(size(v) - 1)
print(round(med, 2))
-- EXECUTION TIME:
0.986188
-- TEST CASE 1:
---- input:
[1,0,3]
---- correct output:
2.0
---- user output:
2.0
-- TEST CASE 2:
---- input:
[3,2,1,5,3]
---- correct output:
3.25
---- user output:
3.25
-- TEST CASE 3:
---- input:
[2,2,2,2]
---- correct output:
2.0
---- user output:
2.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
