== TEST (2019-05-02 12:26:21) 
-- CODE:
x0 = float(input("insira a coordenada x0:"))
y0 = float(input("insira a coordenada y0:"))
x1 = float(input("insira a coordenada x1:"))
y1 = float(input("insira a coordenada y1:"))
x2 = float(input("insira a coordenada x2:"))
y2 = float(input("insira a coordenada y2:"))

c = (x1 - x0) * (y2 - y0) - ((x2 - x0) *(y1 - y0))
 
if(c > 0):
	print("A direita da reta")
elif(c < 0):
	print("A esquerda da reta")
else:
	print("Sobre a reta")


-- OUTPUT:
A direita da reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 12:26:29) 
-- CODE:
x0 = float(input("insira a coordenada x0:"))
y0 = float(input("insira a coordenada y0:"))
x1 = float(input("insira a coordenada x1:"))
y1 = float(input("insira a coordenada y1:"))
x2 = float(input("insira a coordenada x2:"))
y2 = float(input("insira a coordenada y2:"))

c = (x1 - x0) * (y2 - y0) - ((x2 - x0) *(y1 - y0))
 
if(c > 0):
	print("A direita da reta")
elif(c < 0):
	print("A esquerda da reta")
else:
	print("Sobre a reta")


-- EXECUTION TIME:
0.204724
-- TEST CASE 1:
---- input:
1
4
3
5
9
9
---- correct output:
A esquerda da reta
---- user output:
A direita da reta
-- TEST CASE 2:
---- input:
9
8
6
5
2
1
---- correct output:
Sobre a reta
---- user output:
Sobre a reta
-- TEST CASE 3:
---- input:
0
0
0
1
1
1
---- correct output:
A direita da reta
---- user output:
A esquerda da reta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:26:43) 
-- CODE:
x0 = float(input("insira a coordenada x0:"))
y0 = float(input("insira a coordenada y0:"))
x1 = float(input("insira a coordenada x1:"))
y1 = float(input("insira a coordenada y1:"))
x2 = float(input("insira a coordenada x2:"))
y2 = float(input("insira a coordenada y2:"))

c = (x1 - x0) * (y2 - y0) - ((x2 - x0) *(y1 - y0))
 
if(c > 0):
	print("A direita da reta")
elif(c < 0):
	print("A esquerda da reta")
else:
	print("Sobre a reta")


-- OUTPUT:
A direita da reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 12:26:44) 
-- CODE:
x0 = float(input("insira a coordenada x0:"))
y0 = float(input("insira a coordenada y0:"))
x1 = float(input("insira a coordenada x1:"))
y1 = float(input("insira a coordenada y1:"))
x2 = float(input("insira a coordenada x2:"))
y2 = float(input("insira a coordenada y2:"))

c = (x1 - x0) * (y2 - y0) - ((x2 - x0) *(y1 - y0))
 
if(c > 0):
	print("A direita da reta")
elif(c < 0):
	print("A esquerda da reta")
else:
	print("Sobre a reta")


-- EXECUTION TIME:
0.117475
-- TEST CASE 1:
---- input:
1
4
3
5
9
9
---- correct output:
A esquerda da reta
---- user output:
A direita da reta
-- TEST CASE 2:
---- input:
9
8
6
5
2
1
---- correct output:
Sobre a reta
---- user output:
Sobre a reta
-- TEST CASE 3:
---- input:
0
0
0
1
1
1
---- correct output:
A direita da reta
---- user output:
A esquerda da reta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:26:44) 
-- CODE:
x0 = float(input("insira a coordenada x0:"))
y0 = float(input("insira a coordenada y0:"))
x1 = float(input("insira a coordenada x1:"))
y1 = float(input("insira a coordenada y1:"))
x2 = float(input("insira a coordenada x2:"))
y2 = float(input("insira a coordenada y2:"))

c = (x1 - x0) * (y2 - y0) - ((x2 - x0) *(y1 - y0))
 
if(c > 0):
	print("A direita da reta")
elif(c < 0):
	print("A esquerda da reta")
else:
	print("Sobre a reta")


-- OUTPUT:
A direita da reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:27:03) 
-- CODE:
x0 = float(input("insira a coordenada x0:"))
y0 = float(input("insira a coordenada y0:"))
x1 = float(input("insira a coordenada x1:"))
y1 = float(input("insira a coordenada y1:"))
x2 = float(input("insira a coordenada x2:"))
y2 = float(input("insira a coordenada y2:"))

c = (x1 - x0) * (y2 - y0) - ((x2 - x0) *(y1 - y0))
 
if(c > 0):
	print("A direita da reta")
elif(c < 0):
	print("A esquerda da reta")
else:
	print("Sobre a reta")


-- OUTPUT:
A direita da reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:27:12) 
-- CODE:
x0 = float(input("insira a coordenada x0:"))
y0 = float(input("insira a coordenada y0:"))
x1 = float(input("insira a coordenada x1:"))
y1 = float(input("insira a coordenada y1:"))
x2 = float(input("insira a coordenada x2:"))
y2 = float(input("insira a coordenada y2:"))

c = (x1 - x0) * (y2 - y0) - ((x2 - x0) *(y1 - y0))
 
if(c > 0):
	print("A direita da reta")
elif(c < 0):
	print("A esquerda da reta")
else:
	print("Sobre a reta")


-- OUTPUT:
A direita da reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:27:39) 
-- CODE:
x0 = float(input("insira a coordenada x0:"))
y0 = float(input("insira a coordenada y0:"))
x1 = float(input("insira a coordenada x1:"))
y1 = float(input("insira a coordenada y1:"))
x2 = float(input("insira a coordenada x2:"))
y2 = float(input("insira a coordenada y2:"))

c = (x1 - x0) * (y2 - y0) - ((x2 - x0) *(y1 - y0))
 
if(c > 0):
	print("A direita da reta")
elif(c < 0):
	print("A esquerda da reta")
elif(c = 0)
	print("Sobre a reta")


-- ERROR:
File "XXXX", line 14
    elif(c = 0)
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:27:45) 
-- CODE:
x0 = float(input("insira a coordenada x0:"))
y0 = float(input("insira a coordenada y0:"))
x1 = float(input("insira a coordenada x1:"))
y1 = float(input("insira a coordenada y1:"))
x2 = float(input("insira a coordenada x2:"))
y2 = float(input("insira a coordenada y2:"))

c = (x1 - x0) * (y2 - y0) - ((x2 - x0) *(y1 - y0))
 
if(c > 0):
	print("A direita da reta")
elif(c < 0):
	print("A esquerda da reta")
elif(c == 0)
	print("Sobre a reta")


-- ERROR:
File "XXXX", line 14
    elif(c == 0)
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:27:57) 
-- CODE:
x0 = float(input("insira a coordenada x0:"))
y0 = float(input("insira a coordenada y0:"))
x1 = float(input("insira a coordenada x1:"))
y1 = float(input("insira a coordenada y1:"))
x2 = float(input("insira a coordenada x2:"))
y2 = float(input("insira a coordenada y2:"))

c = (x1 - x0) * (y2 - y0) - ((x2 - x0) *(y1 - y0))
 
if(c > 0):
	print("A direita da reta")
elif(c < 0):
	print("A esquerda da reta")
elif(c == 0):
	print("Sobre a reta")


-- OUTPUT:
A direita da reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:27:57) 
-- CODE:
x0 = float(input("insira a coordenada x0:"))
y0 = float(input("insira a coordenada y0:"))
x1 = float(input("insira a coordenada x1:"))
y1 = float(input("insira a coordenada y1:"))
x2 = float(input("insira a coordenada x2:"))
y2 = float(input("insira a coordenada y2:"))

c = (x1 - x0) * (y2 - y0) - ((x2 - x0) *(y1 - y0))
 
if(c > 0):
	print("A direita da reta")
elif(c < 0):
	print("A esquerda da reta")
elif(c == 0):
	print("Sobre a reta")


-- OUTPUT:
A direita da reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:28:02) 
-- CODE:
x0 = float(input("insira a coordenada x0:"))
y0 = float(input("insira a coordenada y0:"))
x1 = float(input("insira a coordenada x1:"))
y1 = float(input("insira a coordenada y1:"))
x2 = float(input("insira a coordenada x2:"))
y2 = float(input("insira a coordenada y2:"))

c = (x1 - x0) * (y2 - y0) - ((x2 - x0) *(y1 - y0))
 
if(c > 0):
	print("A direita da reta")
elif(c < 0):
	print("A esquerda da reta")
elif(c == 0):
	print("Sobre a reta")


-- OUTPUT:
A direita da reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 12:28:04) 
-- CODE:
x0 = float(input("insira a coordenada x0:"))
y0 = float(input("insira a coordenada y0:"))
x1 = float(input("insira a coordenada x1:"))
y1 = float(input("insira a coordenada y1:"))
x2 = float(input("insira a coordenada x2:"))
y2 = float(input("insira a coordenada y2:"))

c = (x1 - x0) * (y2 - y0) - ((x2 - x0) *(y1 - y0))
 
if(c > 0):
	print("A direita da reta")
elif(c < 0):
	print("A esquerda da reta")
elif(c == 0):
	print("Sobre a reta")


-- EXECUTION TIME:
0.262189
-- TEST CASE 1:
---- input:
1
4
3
5
9
9
---- correct output:
A esquerda da reta
---- user output:
A direita da reta
-- TEST CASE 2:
---- input:
9
8
6
5
2
1
---- correct output:
Sobre a reta
---- user output:
Sobre a reta
-- TEST CASE 3:
---- input:
0
0
0
1
1
1
---- correct output:
A direita da reta
---- user output:
A esquerda da reta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 12:28:05) 
-- CODE:
x0 = float(input("insira a coordenada x0:"))
y0 = float(input("insira a coordenada y0:"))
x1 = float(input("insira a coordenada x1:"))
y1 = float(input("insira a coordenada y1:"))
x2 = float(input("insira a coordenada x2:"))
y2 = float(input("insira a coordenada y2:"))

c = (x1 - x0) * (y2 - y0) - ((x2 - x0) *(y1 - y0))
 
if(c > 0):
	print("A direita da reta")
elif(c < 0):
	print("A esquerda da reta")
elif(c == 0):
	print("Sobre a reta")


-- EXECUTION TIME:
0.129121
-- TEST CASE 1:
---- input:
1
4
3
5
9
9
---- correct output:
A esquerda da reta
---- user output:
A direita da reta
-- TEST CASE 2:
---- input:
9
8
6
5
2
1
---- correct output:
Sobre a reta
---- user output:
Sobre a reta
-- TEST CASE 3:
---- input:
0
0
0
1
1
1
---- correct output:
A direita da reta
---- user output:
A esquerda da reta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 12:28:27) 
-- CODE:
x0 = float(input("insira a coordenada x0:"))
y0 = float(input("insira a coordenada y0:"))
x1 = float(input("insira a coordenada x1:"))
y1 = float(input("insira a coordenada y1:"))
x2 = float(input("insira a coordenada x2:"))
y2 = float(input("insira a coordenada y2:"))

c = (x1 - x0) * (y2 - y0) - ((x2 - x0) *(y1 - y0))
 
if(c < 0):
	print("A direita da reta")
elif(c > 0):
	print("A esquerda da reta")
elif(c == 0):
	print("Sobre a reta")


-- EXECUTION TIME:
0.177592
-- TEST CASE 1:
---- input:
1
4
3
5
9
9
---- correct output:
A esquerda da reta
---- user output:
A esquerda da reta
-- TEST CASE 2:
---- input:
9
8
6
5
2
1
---- correct output:
Sobre a reta
---- user output:
Sobre a reta
-- TEST CASE 3:
---- input:
0
0
0
1
1
1
---- correct output:
A direita da reta
---- user output:
A direita da reta
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
