== TEST (2019-03-26 11:15:40) 
-- CODE:
num_conta=int(input("Insira o numero da conta: "))
D1=num_conta//1000
D2=(num_conta//100)-(10*D1)
#D3=
#D4=






print(D1)
-- OUTPUT:
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:15:57) 
-- CODE:
num_conta=int(input("Insira o numero da conta: "))
D1=num_conta//1000
D2=(num_conta//100)-(10*D1)
#D3=
#D4=






print(D1)
-- OUTPUT:
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:16:21) 
-- CODE:
num_conta=int(input("Insira o numero da conta: "))
D1=num_conta//1000
D2=(num_conta//100)-(10*D1)
#D3=
#D4=


1538



print(D2)
-- OUTPUT:
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:17:40) 
-- CODE:
num_conta=int(input("Insira o numero da conta: "))
D1=num_conta//1000
D2=(num_conta//100)-(10*D1)
D3=(num_conta//10)-(D2)
#D4=






print(D3)
-- OUTPUT:
200
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:18:11) 
-- CODE:
num_conta=int(input("Insira o numero da conta: "))
D1=num_conta//1000
D2=(num_conta//100)-(10*D1)
D3=(num_conta//10)-(num_conta//100)
#D4=






print(D3)
-- OUTPUT:
180
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:18:27) 
-- CODE:
num_conta=int(input("Insira o numero da conta: "))
D1=num_conta//1000
D2=(num_conta//100)-(10*D1)
D3=(num_conta//10)-(num_conta//10)
#D4=






print(D3)
-- OUTPUT:
180
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:19:09) 
-- CODE:
num_conta=int(input("Insira o numero da conta: "))
D1=num_conta//1000
D2=(num_conta//100)-(10*D1)
D3=(num_conta//10)-((num_conta//100)*10)
#D4=






print(D3)
-- OUTPUT:
180
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:26:41) 
-- CODE:
num_conta=int(input("Insira o numero da conta: "))
D1=num_conta//1000
D2=(num_conta//100)-(10*D1)
D3=(num_conta//10)-((num_conta//100)*10)
D4=num_conta%D3

A=(D1*2)+(D2*3)+(D3*4)+(D4*5)
B=A%11

print(B)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    D4=num_conta%D3
ZeroDivisionError: integer division or modulo by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:27:08) 
-- CODE:
num_conta=int(input("Insira o numero da conta: "))
D1=num_conta//1000
D2=(num_conta//100)-(10*D1)
D3=(num_conta//10)-((num_conta//100)*10)
D4=num_conta%D3

A=(D1*5)+(D2*4)+(D3*3)+(D4*2)
B=A%11

print(B)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    D4=num_conta%D3
ZeroDivisionError: integer division or modulo by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:27:36) 
-- CODE:
num_conta=int(input("Insira o numero da conta: "))
D1=num_conta//1000
D2=(num_conta//100)-(10*D1)
D3=(num_conta//10)-((num_conta//100)*10)
D4=num_conta%D3

A=(D1*5)+(D2*4)+(D3*3)+(D4*2)
B=A%11

print(A)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    D4=num_conta%D3
ZeroDivisionError: integer division or modulo by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:28:49) 
-- CODE:
num_conta=int(input("Insira o numero da conta: "))
D1=num_conta//1000
D2=(num_conta//100)-(10*D1)
D3=(num_conta//10)-((num_conta//100)*10)
D4=num_conta%D3

A=(D1*5)+(D2*4)+(D3*3)+(D4*2)
B=A%11
print(D1)
print(D2)
print(D3)
print(D4)

print(A)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    D4=num_conta%D3
ZeroDivisionError: integer division or modulo by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:29:23) 
-- CODE:
num_conta=int(input("Insira o numero da conta: "))
D1=num_conta//1000
D2=(num_conta//100)-(10*D1)
D3=(num_conta//10)-((num_conta//100)*10)
D4=num_conta%(num_conta//10)

A=(D1*5)+(D2*4)+(D3*3)+(D4*2)
B=A%11
print(D1)
print(D2)
print(D3)
print(D4)

print(A)
-- OUTPUT:
2
0
0
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:29:42) 
-- CODE:
num_conta=int(input("Insira o numero da conta: "))
D1=num_conta//1000
D2=(num_conta//100)-(10*D1)
D3=(num_conta//10)-((num_conta//100)*10)
D4=num_conta%(num_conta//10)

A=(D1*5)+(D2*4)+(D3*3)+(D4*2)
B=A%11
print(D1)
print(D2)
print(D3)
print(D4)

print(B)
-- OUTPUT:
2
0
0
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 11:29:53) 
-- CODE:
num_conta=int(input("Insira o numero da conta: "))
D1=num_conta//1000
D2=(num_conta//100)-(10*D1)
D3=(num_conta//10)-((num_conta//100)*10)
D4=num_conta%(num_conta//10)

A=(D1*5)+(D2*4)+(D3*3)+(D4*2)
B=A%11

print(B)
-- EXECUTION TIME:
0.180948
-- TEST CASE 1:
---- input:
2000
---- correct output:
10
---- user output:
10
-- TEST CASE 2:
---- input:
3550
---- correct output:
6
---- user output:
6
-- TEST CASE 3:
---- input:
0007
---- correct output:
3
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:29:57) 
-- CODE:
num_conta=int(input("Insira o numero da conta: "))
D1=num_conta//1000
D2=(num_conta//100)-(10*D1)
D3=(num_conta//10)-((num_conta//100)*10)
D4=num_conta%(num_conta//10)

A=(D1*5)+(D2*4)+(D3*3)+(D4*2)
B=A%11

print(B)
-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:30:27) 
-- CODE:
num_conta=int(input("Insira o numero da conta: "))
D1=num_conta//1000
D2=(num_conta//100)-(10*D1)
D3=(num_conta//10)-((num_conta//100)*10)
D4=num_conta%(num_conta//10)

A=(D1*5)+(D2*4)+(D3*3)+(D4*2)
B=A%11

print(B)
-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 11:30:36) 
-- CODE:
num_conta=int(input("Insira o numero da conta: "))
D1=num_conta//1000
D2=(num_conta//100)-(10*D1)
D3=(num_conta//10)-((num_conta//100)*10)
D4=num_conta%(num_conta//10)

A=(D1*5)+(D2*4)+(D3*3)+(D4*2)
B=A%11

print(B)
-- EXECUTION TIME:
0.222388
-- TEST CASE 1:
---- input:
2000
---- correct output:
10
---- user output:
10
-- TEST CASE 2:
---- input:
3550
---- correct output:
6
---- user output:
6
-- TEST CASE 3:
---- input:
0007
---- correct output:
3
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:30:46) 
-- CODE:
num_conta=int(input("Insira o numero da conta: "))
D1=num_conta//1000
D2=(num_conta//100)-(10*D1)
D3=(num_conta//10)-((num_conta//100)*10)
D4=num_conta%(num_conta//10)

A=(D1*5)+(D2*4)+(D3*3)+(D4*2)
B=A%11

print(B)
-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:32:44) 
-- CODE:
num_conta=int(input("Insira o numero da conta: "))
D1=num_conta//1000
D2=(num_conta//100)-(10*D1)
D3=(num_conta//10)-((num_conta//100)*10)
D4=num_conta%(num_conta//10)

A=(D1*5)+(D2*4)+(D3*3)+(D4*2)
B=A%11

print(num_conta"-"B)
-- ERROR:
File "XXXX", line 10
    print(num_conta"-"B)
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:32:47) 
-- CODE:
num_conta=int(input("Insira o numero da conta: "))
D1=num_conta//1000
D2=(num_conta//100)-(10*D1)
D3=(num_conta//10)-((num_conta//100)*10)
D4=num_conta%(num_conta//10)

A=(D1*5)+(D2*4)+(D3*3)+(D4*2)
B=A%11

print(num_conta"-"B)
-- ERROR:
File "XXXX", line 10
    print(num_conta"-"B)
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:32:52) 
-- CODE:
num_conta=int(input("Insira o numero da conta: "))
D1=num_conta//1000
D2=(num_conta//100)-(10*D1)
D3=(num_conta//10)-((num_conta//100)*10)
D4=num_conta%(num_conta//10)

A=(D1*5)+(D2*4)+(D3*3)+(D4*2)
B=A%11

print(num_conta"-"B)
-- ERROR:
File "XXXX", line 10
    print(num_conta"-"B)
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:33:02) 
-- CODE:
num_conta=int(input("Insira o numero da conta: "))
D1=num_conta//1000
D2=(num_conta//100)-(10*D1)
D3=(num_conta//10)-((num_conta//100)*10)
D4=num_conta%(num_conta//10)

A=(D1*5)+(D2*4)+(D3*3)+(D4*2)
B=A%11

print(B)
-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 11:33:09) 
-- CODE:
num_conta=int(input("Insira o numero da conta: "))
D1=num_conta//1000
D2=(num_conta//100)-(10*D1)
D3=(num_conta//10)-((num_conta//100)*10)
D4=num_conta%(num_conta//10)

A=(D1*5)+(D2*4)+(D3*3)+(D4*2)
B=A%11

print(B)
-- EXECUTION TIME:
0.210774
-- TEST CASE 1:
---- input:
2000
---- correct output:
10
---- user output:
10
-- TEST CASE 2:
---- input:
3550
---- correct output:
6
---- user output:
6
-- TEST CASE 3:
---- input:
0007
---- correct output:
3
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:36:36) 
-- CODE:
num_conta=int(input("Insira o numero da conta: "))
D1=num_conta//1000
D2=(num_conta//100)-(10*D1)
D3=(num_conta//10)-((num_conta//100)*10)
D4=num_conta%(num_conta//10)

A=(D1*5)+(D2*4)+(D3*3)+(D4*2)%11


print(A)
-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:36:50) 
-- CODE:
num_conta=int(input("Insira o numero da conta: "))
D1=num_conta//1000
D2=(num_conta//100)-(10*D1)
D3=(num_conta//10)-((num_conta//100)*10)
D4=num_conta%(num_conta//10)

A=((D1*5)+(D2*4)+(D3*3)+(D4*2))%11


print(A)
-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:37:20) 
-- CODE:
num_conta=int(input("Insira o numero da conta: "))
D1=num_conta//1000
D2=(num_conta//100)-(10*D1)
D3=(num_conta//10)-((num_conta//100)*10)
D4=num_conta%(num_conta//10)

A=((D1*5)+(D2*4)+(D3*3)+(D4*2))%11


print(A)
-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 11:37:32) 
-- CODE:
num_conta=int(input("Insira o numero da conta: "))
D1=num_conta//1000
D2=(num_conta//100)-(10*D1)
D3=(num_conta//10)-((num_conta//100)*10)
D4=num_conta%(num_conta//10)

A=((D1*5)+(D2*4)+(D3*3)+(D4*2))%11


print(A)
-- EXECUTION TIME:
0.162159
-- TEST CASE 1:
---- input:
2000
---- correct output:
10
---- user output:
10
-- TEST CASE 2:
---- input:
3550
---- correct output:
6
---- user output:
6
-- TEST CASE 3:
---- input:
0007
---- correct output:
3
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:37:57) 
-- CODE:
num_conta=int(input("Insira o numero da conta: "))
D1=num_conta//1000
D2=(num_conta//100)-(10*D1)
D3=(num_conta//10)-((num_conta//100)*10)
D4=num_conta%(num_conta//10)

A=((D1*5)+(D2*4)+(D3*3)+(D4*2))%11


print(A)
-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 11:38:18) 
-- CODE:
num_conta=int(input("Insira o numero da conta: "))
D1=num_conta//1000
D2=(num_conta//100)-(10*D1)
D3=(num_conta//10)-((num_conta//100)*10)
D4=num_conta%(num_conta//10)

A=((D1*5)+(D2*4)+(D3*3)+(D4*2))%11


print(A)
-- EXECUTION TIME:
0.15834
-- TEST CASE 1:
---- input:
2000
---- correct output:
10
---- user output:
10
-- TEST CASE 2:
---- input:
3550
---- correct output:
6
---- user output:
6
-- TEST CASE 3:
---- input:
0007
---- correct output:
3
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:38:23) 
-- CODE:
num_conta=int(input("Insira o numero da conta: "))
D1=num_conta//1000
D2=(num_conta//100)-(10*D1)
D3=(num_conta//10)-((num_conta//100)*10)
D4=num_conta%(num_conta//10)

A=((D1*5)+(D2*4)+(D3*3)+(D4*2))%11


print(A)
-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:39:10) 
-- CODE:
num_conta=int(input("Insira o numero da conta: "))
D1=num_conta//1000
D2=(num_conta//100)-(10*D1)
D3=(num_conta//10)-((num_conta//100)*10)
D4=num_conta%(num_conta//10)

A=((D1*5)+(D2*4)+(D3*3)+(D4*2))%11
B=(5+4+3+2)%11

print(B)
-- OUTPUT:
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:39:28) 
-- CODE:
num_conta=int(input("Insira o numero da conta: "))
D1=num_conta//1000
D2=(num_conta//100)-(10*D1)
D3=(num_conta//10)-((num_conta//100)*10)
D4=num_conta%(num_conta//10)

A=((D1*5)+(D2*4)+(D3*3)+(D4*2))%11


print(A)
-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 11:39:35) 
-- CODE:
num_conta=int(input("Insira o numero da conta: "))
D1=num_conta//1000
D2=(num_conta//100)-(10*D1)
D3=(num_conta//10)-((num_conta//100)*10)
D4=num_conta%(num_conta//10)

A=((D1*5)+(D2*4)+(D3*3)+(D4*2))%11


print(A)
-- EXECUTION TIME:
0.308082
-- TEST CASE 1:
---- input:
2000
---- correct output:
10
---- user output:
10
-- TEST CASE 2:
---- input:
3550
---- correct output:
6
---- user output:
6
-- TEST CASE 3:
---- input:
0007
---- correct output:
3
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:40:38) 
-- CODE:
num_conta=int(input("Insira o numero da conta: "))
D1=num_conta//1000
D2=(num_conta//100)-(10*D1)
D3=(num_conta//10)-((num_conta//100)*10)
D4=num_conta%(num_conta//10)

A=((D1*5)+(D2*4)+(D3*3)+(D4*2))%11
print(D1)
print(D2)
print(D3)
print(D4)
print(A)
-- OUTPUT:
2
0
0
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:41:01) 
-- CODE:
num_conta=int(input("Insira o numero da conta: "))
D1=num_conta//1000
D2=(num_conta//100)-(10*D1)
D3=(num_conta//10)-((num_conta//100)*10)
D4=num_conta%(num_conta//10)

A=((D1*5)+(D2*4)+(D3*3)+(D4*2))%11
print(D1)
print(D2)
print(D3)
print(D4)
print(A)
-- OUTPUT:
2
0
0
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:42:01) 
-- CODE:
num_conta=int(input("Insira o numero da conta: "))
D1=num_conta//1000
D2=(num_conta//100)-(10*D1)
D3=(num_conta//10)-((num_conta//100)*10)
D4=num_conta%(num_conta//10)

A=((D1*5)+(D2*4)+(D3*3)+(D4*2))%11
print(D1)
print(D2)
print(D3)
print(D4)
print(A)
-- OUTPUT:
2
0
0
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:43:56) 
-- CODE:
num_conta=int(input("Insira o numero da conta: "))
D1=num_conta//1000
D2=(num_conta//100)-(10*D1)
D3=(num_conta//10)-((num_conta//100)*10)
D4=num_conta%(num_conta//10)

A=((D1*5)+(D2*4)+(D3*3)+(D4*2))%11
print(D1)
print(D2)
print(D3)
print(D4)
print(A)
-- OUTPUT:
2
0
0
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:44:11) 
-- CODE:
num_conta=int(input("Insira o numero da conta: "))
D1=num_conta//1000
D2=(num_conta//100)-(10*D1)
D3=(num_conta//10)-((num_conta//100)*10)
D4=num_conta%(num_conta//10)

A=((D1*5)+(D2*4)+(D3*3)+(D4*2))%11
print(D1)
print(D2)
print(D3)
print(D4)
print(A)
-- OUTPUT:
2
0
0
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:44:49) 
-- CODE:
num_conta=int(input("Insira o numero da conta: "))
D1=num_conta//1000
D2=(num_conta//100)-(10*D1)
D3=(num_conta//10)-((num_conta//100)*10)
D4=num_conta%(num_conta//10)

A=((D1*5)+(D2*4)+(D3*3)+(D4*2))%11
print(D1)
print(D2)
print(D3)
print(D4)
print(A)
-- OUTPUT:
2
0
0
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:45:21) 
-- CODE:
num_conta=int(input("Insira o numero da conta: "))
D1=num_conta//1000
D2=(num_conta//100)+(-10*D1)
D3=(num_conta//10)+(-(num_conta//100)*10)
D4=num_conta%(num_conta//10)

A=((D1*5)+(D2*4)+(D3*3)+(D4*2))%11
print(D1)
print(D2)
print(D3)
print(D4)
print(A)
-- OUTPUT:
2
0
0
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:46:06) 
-- CODE:
num_conta=int(input("Insira o numero da conta: "))
D1=num_conta//1000
D2=(num_conta//100)-(10*D1)
D3=(num_conta//10)-((num_conta//100)*10)
D4=num_conta%(num_conta//10)

A=((D1*5)+(D2*4)+(D3*3)+(D4*2))%11
print(D1)
print(D2)
print(D3)
print(D4)
print(A)
-- OUTPUT:
2
0
0
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:47:05) 
-- CODE:
num_conta=int(input("Insira o numero da conta: "))
D1=num_conta//1000
D2=(num_conta//100)-(10*D1)
D3=(num_conta//10)-((num_conta//100)*10)
D4=num_conta%10

A=((D1*5)+(D2*4)+(D3*3)+(D4*2))%11
print(D1)
print(D2)
print(D3)
print(D4)
print(A)
-- OUTPUT:
2
0
0
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:47:20) 
-- CODE:
num_conta=int(input("Insira o numero da conta: "))
D1=num_conta//1000
D2=(num_conta//100)-(10*D1)
D3=(num_conta//10)-((num_conta//100)*10)
D4=num_conta%10

A=((D1*5)+(D2*4)+(D3*3)+(D4*2))%11

print(A)
-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 11:47:30) 
-- CODE:
num_conta=int(input("Insira o numero da conta: "))
D1=num_conta//1000
D2=(num_conta//100)-(10*D1)
D3=(num_conta//10)-((num_conta//100)*10)
D4=num_conta%10

A=((D1*5)+(D2*4)+(D3*3)+(D4*2))%11

print(A)
-- EXECUTION TIME:
0.169802
-- TEST CASE 1:
---- input:
2000
---- correct output:
10
---- user output:
10
-- TEST CASE 2:
---- input:
3550
---- correct output:
6
---- user output:
6
-- TEST CASE 3:
---- input:
0007
---- correct output:
3
---- user output:
3
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
