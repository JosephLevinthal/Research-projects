== TEST (2019-07-02 11:10:35) 
-- CODE:
from numpy import *

N = int(input("insira:"))

mat = zeros((N,N),dtype)
a = zeros(n**2 - n,dtype)
for i in range(N):
	for j in range(N):
		if(i != j):
			mat[i,j] = a[i]
	
print(min(a))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:10:53) 
-- CODE:
from numpy import *

N = int(input("insira:"))

mat = zeros((N,N),dtype)
a = zeros(n**2 - n,dtype)
for i in range(N):
	for j in range(N):
		if(i != j):
			mat[i,j] = a[i]
	
print(min(a))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:16:38) 
-- CODE:
from numpy import *

vet = array(eval(input("insira:")))



for i in range(shape(vet[0]):
	for j in range(shape(vet)[0]):
		if(i != j):
			print(min(vet))
	

	
-- ERROR:
File "XXXX", line 7
    for i in range(shape(vet[0]):
                                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:16:47) 
-- CODE:
from numpy import *

vet = array(eval(input("insira:")))



for i in range(shape(vet)[0]):
	for j in range(shape(vet)[0]):
		if(i != j):
			print(min(vet))
	

	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:18:28) 
-- CODE:
from numpy import *

vet = array(eval(input("insira:")))

mat = zeros((N,N),dtype)

for i in range(shape(vet)[0]):
	for j in range(shape(vet)[0]):
		if(i != j):
			vet[i,j] = mat[i,j]
	
print(min(mat))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:18:43) 
-- CODE:
from numpy import *

vet = array(eval(input("insira:")))

mat = zeros(vet,dtype)

for i in range(shape(vet)[0]):
	for j in range(shape(vet)[0]):
		if(i != j):
			vet[i,j] = mat[i,j]
	
print(min(mat))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:20:08) 
-- CODE:
from numpy import *

vet = array(eval(input("insira:")))

mat = zeros((n,dtype)

for i in range(shape(vet)[0]):
	for j in range(shape(vet)[0]):
		if(i != j):
			vet[i,j] = mat[i,j]
		elif(i == j):
			v

	
-- ERROR:
File "XXXX", line 7
    for i in range(shape(vet)[0]):
                                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:20:47) 
-- CODE:
from numpy import *

vet = array(eval(input("insira:")))

mat = zeros(size(vet),dtype)

for i in range(shape(vet)[0]):
	for j in range(shape(vet)[0]):
		if(i != j):
			vet[i,j] = mat[i,j]
		
print(min(mat))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:22:16) 
-- CODE:
from numpy import *

vet = array(eval(input("insira:")))




print(min(vet))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:22:34) 
-- CODE:
from numpy import *

vet = array(eval(input("insira:")))




print(min(vet))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:22:54) 
-- CODE:
from numpy import *

vet = array(eval(input("insira:")))




print(vet)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:24:19) 
-- CODE:
from numpy import *

vet = array(eval(input("insira:")))

x = shape(vet)[0]

for i in range(x):
	for j in range(x):
		if(i == j):
			print(vet[i,j])


print(vet)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:27:07) 
-- CODE:
from numpy import *

vet = array(eval(input("insira:")))

x = shape(vet)[0]
a = zeros(shape(vet)[0],dtype = float)
for i in range(x):
	for j in range(x):
		if(i > j):
			vet[i,j] = a[i]
		elif(i < j):
			vet[i,j] = a[i]
		elif(i == j):
			vet[i,j]


print(min(a))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:27:24) 
-- CODE:
from numpy import *

vet = array(eval(input("insira:")))

x = shape(vet)[0]
a = zeros(shape(vet)[0],dtype = float)
for i in range(x):
	for j in range(x):
		if(i > j):
			vet[i,j] = a[i,j]
		elif(i < j):
			vet[i,j] = a[i,j]
		elif(i == j):
			vet[i,j]


print(min(a))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:28:10) 
-- CODE:
from numpy import *

vet = array(eval(input("insira:")))

x = shape(vet)[0]
a = zeros(shape(vet)[0],dtype = float)
for i in range(x):
	for j in range(x):
		if(i > j):
			vet[i,j] = a[i]
		elif(i < j):
			vet[i,j] = a[j]
		elif(i == j):
			vet[i,j] = i + 1


print(min(a))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:32:20) 
-- CODE:
from numpy import *

vet = array(eval(input("insira:")))

x = shape(vet)[0]
a = zeros(shape(vet)[0],dtype = float)

for i in range(x):
	for j in range(x):
		if(i == j):
			vet[i,j] = i + 1
		elif(i != j):
			vet[i,j] = a[i]
		
			
			
			


print(min(a))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:32:27) 
-- CODE:
from numpy import *

vet = array(eval(input("insira:")))

x = shape(vet)[0]
a = zeros(shape(vet)[0],dtype = float)

for i in range(x):
	for j in range(x):
		if(i == j):
			vet[i,j] = i + 1
		elif(i != j):
			vet[i,j] = a[i]
		

			
			


print(min(a))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:33:22) 
-- CODE:
from numpy import *

vet = array(eval(input("insira:")))

x = shape(vet)[0]
a = zeros(shape(vet)[0],dtype = float)

for i in range(x):
	for j in range(x):
		if(i == j):
			vet[i,j] = i + 1
		elif(i != j):
			vet[i,j] = a[i,j]
for k in range(size(a)):
	print(min(a))

			
			



	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:33:33) 
-- CODE:
from numpy import *

vet = array(eval(input("insira:")))

x = shape(vet)[0]
a = zeros(shape(vet)[0],dtype = float)

for i in range(x):
	for j in range(x):
		if(i == j):
			vet[i,j] = i + 1
		elif(i != j):
			vet[i,j] = a[i]
for k in range(size(a)):
	print(min(a))

			
			



	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:33:37) 
-- CODE:
from numpy import *

vet = array(eval(input("insira:")))

x = shape(vet)[0]
a = zeros(shape(vet)[0],dtype = float)

for i in range(x):
	for j in range(x):
		if(i == j):
			vet[i,j] = i + 1
		elif(i != j):
			vet[i,j] = a[i]
for k in range(size(a)):
	print(min(a))

			
			



	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:33:44) 
-- CODE:
from numpy import *

vet = array(eval(input("insira:")))

x = shape(vet)[0]
a = zeros(shape(vet)[0],dtype = float)

for i in range(x):
	for j in range(x):
		if(i == j):
			vet[i,j] = i + 1
		elif(i != j):
			vet[i,j] = a[i]
for k in range(size(a)):
	print(min(a))

			
			



	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:34:58) 
-- CODE:
from numpy import *

vet = array(eval(input("insira:")))

x = shape(vet)[0]
a = zeros(size(vet,dtype = int)

for i in range(x):
	for j in range(x):
		if(i == j):
			vet[i,j] = i + 1
		elif(i != j):
			vet[i,j] = 
for k in range(size(a)):
	print(min(a))

			
			



	
-- ERROR:
File "XXXX", line 8
    for i in range(x):
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:35:00) 
-- CODE:
from numpy import *

vet = array(eval(input("insira:")))

x = shape(vet)[0]
a = zeros(size(vet),dtype = int)

for i in range(x):
	for j in range(x):
		if(i == j):
			vet[i,j] = i + 1
		elif(i != j):
			vet[i,j] = 
for k in range(size(a)):
	print(min(a))

			
			



	
-- ERROR:
File "XXXX", line 13
    vet[i,j] = 
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:35:08) 
-- CODE:
from numpy import *

vet = array(eval(input("insira:")))

x = shape(vet)[0]
a = zeros(size(vet),dtype = int)

for i in range(x):
	for j in range(x):
		if(i == j):
			vet[i,j] = i + 1
		elif(i != j):
			vet[i,j] = a[i]
for k in range(size(a)):
	print(min(a))

			
			



	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:36:26) 
-- CODE:
from numpy import *

vet = array(eval(input("insira:")))

x = shape(vet)[0]
a = zeros(d,dtype = int)
d = 0
for i in range(x):
	for j in range(x):
		if(i != j):
			vet[i,j] = d
print(min(d))		
			

			
			



	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:36:40) 
-- CODE:
from numpy import *

vet = array(eval(input("insira:")))

x = shape(vet)[0]
d = 0
a = zeros(d,dtype = int)

for i in range(x):
	for j in range(x):
		if(i != j):
			vet[i,j] = d
print(min(d))		
			

			
			



	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:37:42) 
-- CODE:
from numpy import *

vet = array(eval(input("insira:")))

x = shape(vet)[0]
d = 0


for i in range(x):
	for j in range(x):
		if(i != j):
			vet[i,j] = d

a = zeros(d,dtype =int)
for k in range(d):
	d[k] = a[k]
print(min(a)		
			

			
			



	
-- ERROR:
File "XXXX", line 26
    
     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:38:09) 
-- CODE:
from numpy import *

vet = array(eval(input("insira:")))

x = shape(vet)[0]
d = 0


for i in range(x):
	for j in range(x):
		if(i != j):
			vet[i,j] = d

a = zeros(d,dtype =int)
for k in range(d):
	d[k] = a[k]
print(min(a)		
			

			
			



	
-- ERROR:
File "XXXX", line 26
    
     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:38:16) 
-- CODE:
from numpy import *

vet = array(eval(input("insira:")))

x = shape(vet)[0]
d = 0


for i in range(x):
	for j in range(x):
		if(i != j):
			vet[i,j] = d

a = zeros(d,dtype =int)
for k in range(d):
	d[k] = a[k]
	print(min(a)		
			

			
			



	
-- ERROR:
File "XXXX", line 26
    
     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:38:39) 
-- CODE:
from numpy import *

vet = array(eval(input("insira:")))

x = shape(vet)[0]
d = 0


for i in range(x):
	for j in range(x):
		if(i != j):
			vet[i,j] = d

a = zeros(d,dtype =int)
for k in range(d):
	d[k] = a[k]
print(min(a))	
			

			
			



	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:39:08) 
-- CODE:
from numpy import *

vet = array(eval(input("insira:")))

x = shape(vet)[0]
d = 0


for i in range(x):
	for j in range(x):
		if(i != j):
			vet[i,j] = d[i]
print(d)
a = zeros(d,dtype =int)
for k in range(d):
	d[k] = a[k]
print(min(a))	
			

			
			



	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:39:32) 
-- CODE:
from numpy import *

vet = array(eval(input("insira:")))

x = shape(vet)[0]
d = 0


for i in range(x):
	for j in range(x):
		if(i != j):
			vet[i,j] = d[i]
print(d)
a = zeros(d,dtype =float)
for k in range(d):
	d[k] = a[k]
print(min(a))	
			

			
			



	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:40:03) 
-- CODE:
from numpy import *

vet = array(eval(input("insira:")))

x = shape(vet)[0]
d = 0


for i in range(x):
	for j in range(x):
		if(i != j):
			vet[i,j] = d[i]
print(d)
a = zeros(size(d),dtype=int0
for k in range(d):
	d[k] = a[k]
print(min(a))	
			

			
			



	
-- ERROR:
File "XXXX", line 15
    for k in range(d):
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:40:13) 
-- CODE:
from numpy import *

vet = array(eval(input("insira:")))

x = shape(vet)[0]
d = 0


for i in range(x):
	for j in range(x):
		if(i != j):
			vet[i,j] = d[i]
print(d)
a = zeros(size(d),dtype=int)
for k in range(d):
	d[k] = a[k]
print(min(a))	
			

			
			



	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:41:26) 
-- CODE:
from numpy import *

vet = array(eval(input("insira:")))

x = shape(vet)[0]
d = 0


for i in range(x):
	for j in range(x):
		if(i != j):
			vet[i,j] = d[i]
print(d)
a = zeros(size(d),dtype=int)
for k in range(d):
	d[k] = a[k]
print(min(a))	
			

			
			



	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:45:09) 
-- CODE:
from numpy import *

vet = array(eval(input("insira:")))

x = shape(vet)[0]
d = 0


for i in range(x):
	for j in range(x):
		if(i != j):
			d = d + 1

a = zeros(d,dtype =float)

for k in range(x):
	for l in range(x):
		if(k!=l):
			vet[k,l] = a[i]

print(min(a0()
-- ERROR:
File "XXXX", line 22
    
                  ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:45:16) 
-- CODE:
from numpy import *

vet = array(eval(input("insira:")))

x = shape(vet)[0]
d = 0


for i in range(x):
	for j in range(x):
		if(i != j):
			d = d + 1

a = zeros(d,dtype =float)

for k in range(x):
	for l in range(x):
		if(k!=l):
			vet[k,l] = a[i]

print(min(a))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:46:22) 
-- CODE:
from numpy import *

vet = array(eval(input("insira:")))

x = shape(vet)[0]
d = 0


for i in range(x):
	for j in range(x):
		if(i != j):
			d = d + 1

a = zeros(d,dtype =float)

print(a
-- ERROR:
File "XXXX", line 17
    
           ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:46:24) 
-- CODE:
from numpy import *

vet = array(eval(input("insira:")))

x = shape(vet)[0]
d = 0


for i in range(x):
	for j in range(x):
		if(i != j):
			d = d + 1

a = zeros(d,dtype =float)

print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:48:08) 
-- CODE:
from numpy import *

vet = array(eval(input("insira:")))

x = shape(vet)[0]
d = 0


for i in range(x):
	for j in range(x):
		if(i != j):
			d = d + 1

a = zeros(d,dtype =float)

for x in range(size(a))
	if(i != j):
		a[i] = mat[i,j]
		
print(min(a))


-- ERROR:
File "XXXX", line 16
    for x in range(size(a))
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:49:35) 
-- CODE:
from numpy import *

vet = array(eval(input("insira:")))

x = shape(vet)[0]
d = 0


for i in range(x):
	for j in range(x):
		if(i != j):
			d = d + 1

a = zeros(d,dtype =float)

for k in range(x):
	for l in range(x):
		if(k !=l):
			a[k] = vet[k,l]
		
print(min(a))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:50:21) 
-- CODE:
from numpy import *

vet = array(eval(input("insira:")))

x = shape(vet)[0]
d = 0


for i in range(x):
	for j in range(x):
		if(i != j):
			d = d + 1

a = zeros(d,dtype =float)

for k in range(x):
	for l in range(x):
		for m in range(size(a):
			a[m]= vet[k,l]
		
print(min(a))


-- ERROR:
File "XXXX", line 18
    for m in range(size(a):
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:50:57) 
-- CODE:
from numpy import *

vet = array(eval(input("insira:")))

x = shape(vet)[0]
d = 0


for i in range(x):
	for j in range(x):
		if(i != j):
			d = d + 1

a = zeros(d,dtype =float)

for k in range(x):
	for l in range(x):
		if(k != l):
			vet[k,l] = a
print(min(a))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:52:57) 
-- CODE:
from numpy import *

vet = array(eval(input("insira:")))

x = shape(vet)[0]
d = 0


for i in range(x):
	for j in range(x):
		if(i != j):
			d = d + 1

a = zeros(d,dtype =float)
b = zeros(d,dtype =float)
for k in range(x):
	for l in range(x):
		if(k != l):
			vet[k,l] = b[k,l]
print(b



-- ERROR:
File "XXXX", line 23
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:52:59) 
-- CODE:
from numpy import *

vet = array(eval(input("insira:")))

x = shape(vet)[0]
d = 0


for i in range(x):
	for j in range(x):
		if(i != j):
			d = d + 1

a = zeros(d,dtype =float)
b = zeros(d,dtype =float)
for k in range(x):
	for l in range(x):
		if(k != l):
			vet[k,l] = b[k,l]
print(b0



-- ERROR:
File "XXXX", line 23
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:53:02) 
-- CODE:
from numpy import *

vet = array(eval(input("insira:")))

x = shape(vet)[0]
d = 0


for i in range(x):
	for j in range(x):
		if(i != j):
			d = d + 1

a = zeros(d,dtype =float)
b = zeros(d,dtype =float)
for k in range(x):
	for l in range(x):
		if(k != l):
			vet[k,l] = b[k,l]
print(b)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
