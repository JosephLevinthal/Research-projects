== TEST (2019-05-01 16:33:58) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio dos bojos: "))

if (H and h and r > 0) and (H > h and > 2*r)
-- ERROR:
File "XXXX", line 10
    if (H and h and r > 0) and (H > h and > 2*r)
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 16:34:12) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio dos bojos: "))

if (H,h,r > 0) and (H > h and > 2*r)
-- ERROR:
File "XXXX", line 10
    if (H,h,r > 0) and (H > h and > 2*r)
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 16:34:30) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio dos bojos: "))

if (H,h,r > 0) and ((H > h) and > (2*r))
-- ERROR:
File "XXXX", line 10
    if (H,h,r > 0) and ((H > h) and > (2*r))
                                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 16:40:03) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio dos bojos: "))

if (H>0) and (h>0) and (r>0):
	if (H>h) and (H>(2*r)
-- ERROR:
File "XXXX", line 12
    
                          ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 16:40:23) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio dos bojos: "))

if (H>0) and (h>0) and (r>0):
	if (H>h) and (H>2*r)
-- ERROR:
File "XXXX", line 11
    if (H>h) and (H>2*r)
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 16:41:36) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio dos bojos: "))

if (H>0) and (h>0) and (r>0):
	if (H>h>*r)
-- ERROR:
File "XXXX", line 11
    if (H>h>*r)
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 16:41:40) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio dos bojos: "))

if (H>0) and (h>0) and (r>0):
	if (H>h>2r)
-- ERROR:
File "XXXX", line 11
    if (H>h>2r)
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 16:41:43) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio dos bojos: "))

if (H>0) and (h>0) and (r>0):
	if (H>h>2*)
-- ERROR:
File "XXXX", line 11
    if (H>h>2*)
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 16:41:49) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio dos bojos: "))

if (H>0) and (h>0) and (r>0):
	if (H>h>2*):
-- ERROR:
File "XXXX", line 11
    if (H>h>2*):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 16:41:57) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio dos bojos: "))

if (H>0) and (h>0) and (r>0):
	if (H>h) and (H>2*r):
-- ERROR:
File "XXXX", line 12
    
                          ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 16:43:07) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio dos bojos: "))

if (H>0) and (h>0) and (r>0):	
-- ERROR:
File "XXXX", line 11
    
                                  ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:01:17) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio dos bojos: "))

print("Entradas: ", a,",", h,",", r)

if (h<0)or(H<=0)or(r<=0):
	print("Entradas invalidas")
elif (h>H)or(2*r>H):
	print("Entradas invalidas")
else:
	if (h<=r):
		v = (pi/3)*(h**2)*(3*r-h)
		print("Volume: ", round(v*1000, 3), "litros")
	elif (h>r) and (h<=H-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(h-r)
		v = v2+v3
		print("Volume: ", round(v*1000, 3), "litros)
	elif (h>H-r):
-- ERROR:
File "XXXX", line 25
    print("Volume: ", round(v*1000, 3), "litros)
                                               ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:03:49) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio dos bojos: "))

print("Entradas: ", a,",", h,",", r)

if (h<0)or(H<=0)or(r<=0):
	print("Entradas invalidas")
elif (h>H)or(2*r>H):
	print("Entradas invalidas")
else:
	if (h<=r):
		v = (pi/3)*(h**2)*(3*r-h)
		print("Volume: ", round(v*1000, 3), "litros")
	elif (h>r) and (h<=H-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(h-r)
		v = v2+v3
		print("Volume: ", round(v*1000, 3), "litros)
	elif (h>H-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(h-r)
		v4 = v2 - ((pi*((H-h)**2)*(3*r-(H-h)))/3
		v = v2+v3+v4
		print("Volume: ", round(v*1000, 3), "litros)
-- ERROR:
File "XXXX", line 25
    print("Volume: ", round(v*1000, 3), "litros)
                                               ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:04:20) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio dos bojos: "))

print("Entradas: ", a,",", h,",", r)

if (h<0)or(H<=0)or(r<=0):
	print("Entradas invalidas")
elif (h>H)or(2*r>H):
	print("Entradas invalidas")
else:
	if (h<=r):
		v = (pi/3)*(h**2)*(3*r-h)
		print("Volume: ", round(v*1000, 3), "litros")
	elif (h>r) and (h<=H-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(h-r)
		v = v2+v3
		print("Volume: ", round(v*1000, 3), "litros)
	elif (h>H-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(h-r)
		v4 = v2 - ((pi*((H-h)**2)*(3*r-(H-h)))/3
		v = v2+v3+v4
		print("Volume: ", round(v*1000, 3), "litros")
-- ERROR:
File "XXXX", line 25
    print("Volume: ", round(v*1000, 3), "litros)
                                               ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:04:29) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio dos bojos: "))

print("Entradas: ", a,",", h,",", r)

if (h<0)or(H<=0)or(r<=0):
	print("Entradas invalidas")
elif (h>H)or(2*r>H):
	print("Entradas invalidas")
else:
	if (h<=r):
		v = (pi/3)*(h**2)*(3*r-h)
		print("Volume: ", round(v*1000, 3), "litros")
	elif (h>r) and (h<=H-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(h-r)
		v = v2+v3
		print("Volume: ", round(v*1000, 3), "litros")
	elif (h>H-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(h-r)
		v4 = v2 - ((pi*((H-h)**2)*(3*r-(H-h)))/3
		v = v2+v3+v4
		print("Volume: ", round(v*1000, 3), "litros")
-- ERROR:
File "XXXX", line 30
    v = v2+v3+v4
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:04:59) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio dos bojos: "))

print("Entradas: ", a,",", h,",", r)

if (h<0)or(H<=0)or(r<=0):
	print("Entradas invalidas")
elif (h>H)or(2*r>H):
	print("Entradas invalidas")
else:
	if (h<=r):
		v = (pi/3)*(h**2)*(3*r-h)
		print("Volume: ", round(v*1000, 3), "litros")
	elif (h>r) and (h<=H-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(h-r)
		v = v2+v3
		print("Volume: ", round(v*1000, 3), "litros")
	elif (h>H-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(h-r)
		v4 = v2 - ((pi*((H-h)**2)*(3*r-(H-h)))/3
		v = v2 + v3 + v4
		print("Volume: ", round(v*1000, 3), "litros")
-- ERROR:
File "XXXX", line 30
    v = v2 + v3 + v4
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:05:28) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio dos bojos: "))

print("Entradas: ", a,",", h,",", r)

if (h<0)or(H<=0)or(r<=0):
	print("Entradas invalidas")
elif (h>H)or(2*r>H):
	print("Entradas invalidas")
else:
	if (h<=r):
		v = (pi/3)*(h**2)*(3*r-h)
		print("Volume: ", round(v*1000, 3), "litros")
	elif (h>r) and (h<=H-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(h-r)
		v = v2+v3
		print("Volume: ", round(v*1000, 3), "litros")
	elif (h>H-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(h-r)
		v4 = v2 - ((pi*((H-h)**2)*(3*r-(H-h)))/3
		v = v2+v3+v4
		print("Volume: ", round(v*1000, 3), "litros")
-- ERROR:
File "XXXX", line 30
    v = v2+v3+v4
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:06:30) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio dos bojos: "))

print("Entradas: ", a,",", h,",", r)

if (h<0)or(H<=0)or(r<=0):
	print("Entradas invalidas")
elif (h>H)or(2*r>H):
	print("Entradas invalidas")
else:
	if (h<=r):
		v = (pi/3)*(h**2)*(3*r-h)
		print("Volume: ", round(v*1000, 3), "litros")
	elif (h>r) and (h<=H-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(h-r)
		v = v2+v3
		print("Volume: ", round(v*1000, 3), "litros")
	elif (h>H-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(a-2*r)
		v4 = v2 - ((pi*((H-h)**2)*(3*r-(H-h)))/3
		v = v2+v3+v4
		print("Volume: ", round(v*1000, 3), "litros")
-- ERROR:
File "XXXX", line 30
    v = v2+v3+v4
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:07:43) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio dos bojos: "))

print("Entradas: ", a,",", h,",", r)

if (h<0)or(H<=0)or(r<=0):
	print("Entradas invalidas")
elif (h>H)or(2*r>H):
	print("Entradas invalidas")
else:
	if (h<=r):
		v = (pi/3)*(h**2)*(3*r-h)
		print("Volume: ", round(v*1000, 3), "litros")
	elif (h>r) and (h<=H-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(h-r)
		v = v2+v3
		print("Volume: ", round(v*1000, 3), "litros")
	elif (h>H-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(a-2*r)
		v4 = v2 - ((pi*((H-h)**2)*(3*r-(H-h)))/3
		v = v2+v3+v4
		print("Volume: ", round(v*1000, 3), "litros")
-- ERROR:
File "XXXX", line 30
    v = v2+v3+v4
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:09:51) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio dos bojos: "))

print("Entradas: ", a,",", h,",", r)

if (h<0)or(H<=0)or(r<=0):
	print("Entradas invalidas")
elif (h>H)or(2*r>H):
	print("Entradas invalidas")
else:
	if (h<=r):
		v = (pi/3)*(h**2)*(3*r-h)
		print("Volume: ", round(v*1000, 3), "litros")
	elif (h>r) and (h<=H-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(h-r)
		v = v2+v3
		print("Volume: ", round(v*1000, 3), "litros")
	elif (h>H-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(a-2*r)
		v4 = v2 - ((pi*((H-h)**2)*(3*r-(H-h)))/3
		v = v2+v3+v4
		print("Volume: ", round(v*1000, 3), "litros")
-- ERROR:
File "XXXX", line 30
    v = v2+v3+v4
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:10:27) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio dos bojos: "))

print("Entradas: ", a,",", h,",", r)

if (h<0)or(H<=0)or(r<=0):
	print("Entradas invalidas")
elif (h>H)or(2*r>H):
	print("Entradas invalidas")
else:
	if (h<=r):
		v = (pi/3)*(h**2)*(3*r-h)
		print("Volume: ", round(v*1000, 3), "litros")
	elif (h>r) and (h<=H-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(h-r)
		v = v2+v3
		print("Volume: ", round(v*1000, 3), "litros")
	elif (h>H-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(a-2*r)
		v4 = v2 - ((pi*((H-h)**2)*(3*r-(H-h)))/3
		v = v2+v3+v4
		print("Volume: ", round(v*1000, 3), "litros")
-- ERROR:
File "XXXX", line 30
    v = v2+v3+v4
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:12:41) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio dos bojos: "))

print("Entradas: ", a,",", h,",", r)

if (h<0)or(H<=0)or(r<=0):
	print("Entradas invalidas")
elif (h>H)or(2*r>H):
	print("Entradas invalidas")
else:
	if (h<=r):
		v = (pi/3)*(h**2)*(3*r-h)
		print("Volume: ", round(v*1000, 3), "litros")
	elif (h>r) and (h<=H-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(h-r)
		v = v2+v3
		print("Volume: ", round(v*1000, 3), "litros")
	elif (h>H-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(a-2*r)
		v4 = v2 - ((pi*((H-h)**2)*(3*r-(H-h)))/3
		a= v2+v3+v4
		print("Volume: ", round(v*1000, 3), "litros")
-- ERROR:
File "XXXX", line 30
    a= v2+v3+v4
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:13:37) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio dos bojos: "))

print("Entradas: ", a,",", h,",", r)

if (h<0)or(H<=0)or(r<=0):
	print("Entradas invalidas")
elif (h>H)or(2*r>H):
	print("Entradas invalidas")
else:
	if (h<=r):
		v = (pi/3)*(h**2)*(3*r-h)
		print("Volume: ", round(v*1000, 3), "litros")
	elif (h>r) and (h<=H-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(h-r)
		v = v2+v3
		print("Volume: ", round(v*1000, 3), "litros")
	elif (h>H-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(a-2*r)
		v4 = v2 - ((pi*((H-h)**2)*(3*r-(H-h)))/3
-- ERROR:
File "XXXX", line 30
    
                                              ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:13:44) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio dos bojos: "))

print("Entradas: ", a,",", h,",", r)

if (h<0)or(H<=0)or(r<=0):
	print("Entradas invalidas")
elif (h>H)or(2*r>H):
	print("Entradas invalidas")
else:
	if (h<=r):
		v = (pi/3)*(h**2)*(3*r-h)
		print("Volume: ", round(v*1000, 3), "litros")
	elif (h>r) and (h<=H-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(h-r)
		v = v2+v3
		print("Volume: ", round(v*1000, 3), "litros")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print("Entradas: ", a,",", h,",", r)
NameError: name 'a' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:13:56) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio dos bojos: "))

print("Entradas: ", a,",", h,",", r)

if (h<0)or(H<=0)or(r<=0):
	print("Entradas invalidas")
elif (h>H)or(2*r>H):
	print("Entradas invalidas")
else:
	if (h<=r):
		v = (pi/3)*(h**2)*(3*r-h)
		print("Volume: ", round(v*1000, 3), "litros")
	elif (h>r) and (h<=H-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(h-r)
		v = v2+v3
		print("Volume: ", round(v*1000, 3), "litros")
	elif (h>H-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(a-2*r)
		v4 = v2 - ((pi*((H-h)**2)*(3*r-(H-h)))/3
		v = v2+v3+v4
		print("Volume: ", round(v*1000, 3), "litros")
-- ERROR:
File "XXXX", line 30
    v = v2+v3+v4
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:14:13) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio dos bojos: "))

print("Entradas: ", a,",", h,",", r)

if (h<0)or(H<=0)or(r<=0):
	print("Entradas invalidas")
elif (h>H)or(2*r>H):
	print("Entradas invalidas")
else:
	if (h<=r):
		v = (pi/3)*(h**2)*(3*r-h)
		print("Volume: ", round(v*1000, 3), "litros")
	elif (h>r) and (h<=H-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(h-r)
		v = v2+v3
		print("Volume: ", round(v*1000, 3), "litros")
	elif (h>H-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(a-2*r)
		v4 = v2 - ((pi*((H-h)**2)*(3*r-(H-h)))/3
		v = v2+v3+v4
		print("Volume: ", round(v*1000, 3), "litros")
-- ERROR:
File "XXXX", line 30
    v = v2+v3+v4
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:14:34) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio dos bojos: "))

print("Entradas: ", a,",", h,",", r)

if (h<0)or(H<=0)or(r<=0):
	print("Entradas invalidas")
elif (h>H)or(2*r>H):
	print("Entradas invalidas")
else:
	if (h<=r):
		v = (pi/3)*(h**2)*(3*r-h)
		print("Volume: ", round(v*1000, 3), "litros")
	elif (h>r) and (h<=H-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(h-r)
		v = v2+v3
		print("Volume: ", round(v*1000, 3), "litros")
	elif (h>H-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(a-2*r)
		v4 = v2 - ((pi*((H-h)**2)*(3*r-(H-h)))/3
		v = v2+v3+v4
		print("Volume: ", round(v*1000, 3), "litros")
-- ERROR:
File "XXXX", line 30
    v = v2+v3+v4
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:14:59) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio dos bojos: "))

print("Entradas: ", a,",", h,",", r)

if (h<0)or(H<=0)or(r<=0):
	print("Entradas invalidas")
elif (h>H)or(2*r>H):
	print("Entradas invalidas")
else:
	if (h<=r):
		v = (pi/3)*(h**2)*(3*r-h)
		print("Volume: ", round(v*1000, 3), "litros")
	elif (h>r) and (h<=H-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(h-r)
		v = v2+v3
		print("Volume: ", round(v*1000, 3), "litros")
	elif (h>H-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(a-2*r)
		v4 = v2 - ((pi*((H-h)**2)*(3*r-(H-h)))/3
		V = v2+v3+v4
		print("Volume: ", round(v*1000, 3), "litros")
-- ERROR:
File "XXXX", line 30
    V = v2+v3+v4
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:15:34) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio dos bojos: "))

print("Entradas: ", a,",", h,",", r)

if (h<0)or(H<=0)or(r<=0):
	print("Entradas invalidas")
elif (h>H)or(2*r>H):
	print("Entradas invalidas")
else:
	if (h<=r):
		v = (pi/3)*(h**2)*(3*r-h)
		print("Volume: ", round(v*1000, 3), "litros")
	elif (h>r) and (h<=H-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(h-r)
		v = v2+v3
		print("Volume: ", round(v*1000, 3), "litros")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print("Entradas: ", a,",", h,",", r)
NameError: name 'a' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:17:42) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio dos bojos: "))

print("Entradas: ", a,",", h,",", r)

if (h<0)or(H<=0)or(r<=0):
	print("Entradas invalidas")
elif (h>H)or(2*r>H):
	print("Entradas invalidas")
else:
	if (h<=r):
		v = (pi/3)*(h**2)*(3*r-h)
		print("Volume: ", round(v*1000, 3), "litros")
	elif (h>r) and (h<=H-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(h-r)
		v = v2+v3
		print("Volume: ", round(v*1000, 3), "litros")
	elif (h>H-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(a-2*r)
		v4 = v2 - ((pi*((H-h)**2)*(3*r-(H-h)))/3)
		v = v2+v3+v4
		print("Volume: ", round(v*1000, 3), "litros")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print("Entradas: ", a,",", h,",", r)
NameError: name 'a' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:18:19) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio dos bojos: "))

print("Entradas: ", H,",", h,",", r)

if (h<0)or(H<=0)or(r<=0):
	print("Entradas invalidas")
elif (h>H)or(2*r>H):
	print("Entradas invalidas")
else:
	if (h<=r):
		v = (pi/3)*(h**2)*(3*r-h)
		print("Volume: ", round(v*1000, 3), "litros")
	elif (h>r) and (h<=H-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(h-r)
		v = v2+v3
		print("Volume: ", round(v*1000, 3), "litros")
	elif (h>H-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(a-2*r)
		v4 = v2 - ((pi*((H-h)**2)*(3*r-(H-h)))/3)
		v = v2+v3+v4
		print("Volume: ", round(v*1000, 3), "litros")
-- OUTPUT:
Entradas:  11.3 , 5.7 , 2.3
Volume:  81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 17:18:36) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio dos bojos: "))

print("Entradas: ", H,",", h,",", r)

if (h<0)or(H<=0)or(r<=0):
	print("Entradas invalidas")
elif (h>H)or(2*r>H):
	print("Entradas invalidas")
else:
	if (h<=r):
		v = (pi/3)*(h**2)*(3*r-h)
		print("Volume: ", round(v*1000, 3), "litros")
	elif (h>r) and (h<=H-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(h-r)
		v = v2+v3
		print("Volume: ", round(v*1000, 3), "litros")
	elif (h>H-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(a-2*r)
		v4 = v2 - ((pi*((H-h)**2)*(3*r-(H-h)))/3)
		v = v2+v3+v4
		print("Volume: ", round(v*1000, 3), "litros")
-- EXECUTION TIME:
0.207288
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas:  11.3 , 5.7 , 2.3
Volume:  81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas:  8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas:  8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
