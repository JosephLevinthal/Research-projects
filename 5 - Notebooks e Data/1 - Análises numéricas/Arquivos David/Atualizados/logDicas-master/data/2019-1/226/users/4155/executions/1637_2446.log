== TEST (2019-04-09 18:11:17) 
-- CODE:
num = int(input("senha(6 digitos):"))
-- OUTPUT:
608.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:25:12) 
-- CODE:
num = int(input("senha:"))

# decompoe os 6 digitos da senha
d1 = num // 10000
d2 = (num // 1000) % 100
d3 = (num // 100) % 100
d4 = num % 100
d5 = (num // 10) % 10
d6 =num % 10
if((d1 + d3 + d5) % (d2 + d4 d6) != 0):
	msg = "senha invalida"
else:
	msg = "acesso liberado"
print(msg)
-- ERROR:
File "XXXX", line 10
    if((d1 + d3 + d5) % (d2 + d4 d6) != 0):
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:26:00) 
-- CODE:
num = int(input("senha:"))

# decompoe os 6 digitos da senha
d1 = num // 10000
d2 = (num // 1000) % 100
d3 = (num // 100) % 100
d4 = num % 100
d5 = (num // 10) % 10
d6 = num % 10
if((d1 + d3 + d5) % (d2 + d4 d6) != 0):
	msg = "senha invalida"
else:
	msg = "acesso liberado"
print(msg)
-- ERROR:
File "XXXX", line 10
    if((d1 + d3 + d5) % (d2 + d4 d6) != 0):
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:26:00) 
-- CODE:
num = int(input("senha:"))

# decompoe os 6 digitos da senha
d1 = num // 10000
d2 = (num // 1000) % 100
d3 = (num // 100) % 100
d4 = num % 100
d5 = (num // 10) % 10
d6 = num % 10
if((d1 + d3 + d5) % (d2 + d4 d6) != 0):
	msg = "senha invalida"
else:
	msg = "acesso liberado"
print(msg)
-- ERROR:
File "XXXX", line 10
    if((d1 + d3 + d5) % (d2 + d4 d6) != 0):
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:26:00) 
-- CODE:
num = int(input("senha:"))

# decompoe os 6 digitos da senha
d1 = num // 10000
d2 = (num // 1000) % 100
d3 = (num // 100) % 100
d4 = num % 100
d5 = (num // 10) % 10
d6 = num % 10
if((d1 + d3 + d5) % (d2 + d4 d6) != 0):
	msg = "senha invalida"
else:
	msg = "acesso liberado"
print(msg)
-- ERROR:
File "XXXX", line 10
    if((d1 + d3 + d5) % (d2 + d4 d6) != 0):
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:26:01) 
-- CODE:
num = int(input("senha:"))

# decompoe os 6 digitos da senha
d1 = num // 10000
d2 = (num // 1000) % 100
d3 = (num // 100) % 100
d4 = num % 100
d5 = (num // 10) % 10
d6 = num % 10
if((d1 + d3 + d5) % (d2 + d4 d6) != 0):
	msg = "senha invalida"
else:
	msg = "acesso liberado"
print(msg)
-- ERROR:
File "XXXX", line 10
    if((d1 + d3 + d5) % (d2 + d4 d6) != 0):
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:26:28) 
-- CODE:
num = int(input("senha:"))

# decompoe os 6 digitos da senha
d1 = num // 10000
d2 = (num // 1000) % 100
d3 = (num // 100) % 100
d4 = num % 100
d5 = (num // 10) % 10
d6 = num % 10
if((d1 + d3 + d5) % (d2 + d4 + d6) != 0):
	msg = "senha invalida"
else:
	msg = "acesso liberado"
print(msg)
-- OUTPUT:
senha invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 18:26:43) 
-- CODE:
num = int(input("senha:"))

# decompoe os 6 digitos da senha
d1 = num // 10000
d2 = (num // 1000) % 100
d3 = (num // 100) % 100
d4 = num % 100
d5 = (num // 10) % 10
d6 = num % 10
if((d1 + d3 + d5) % (d2 + d4 + d6) != 0):
	msg = "senha invalida"
else:
	msg = "acesso liberado"
print(msg)
-- EXECUTION TIME:
0.267393
-- TEST CASE 1:
---- input:
087612
---- correct output:
acesso liberado
---- user output:
senha invalida
-- TEST CASE 2:
---- input:
760834
---- correct output:
senha invalida
---- user output:
senha invalida
-- TEST CASE 3:
---- input:
122967
---- correct output:
acesso liberado
---- user output:
senha invalida
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:26:51) 
-- CODE:
num = int(input("senha:"))

# decompoe os 6 digitos da senha
d1 = num // 10000
d2 = (num // 1000) % 100
d3 = (num // 100) % 100
d4 = num % 100
d5 = (num // 10) % 10
d6 = num % 10
if((d1 + d3 + d5) % (d2 + d4 + d6) != 0):
	msg = "senha invalida"
else:
	msg = "acesso liberado"
print(msg)
-- OUTPUT:
senha invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 18:28:54) 
-- CODE:
num = int(input("senha:"))

# decompoe os 6 digitos da senha
d1 = num // 10000
d2 = (num // 1000) % 100
d3 = (num // 100) % 100
d4 = num % 100
d5 = (num // 10) % 10
d6 = num % 10
if((d1 + d3 + d5) % (d2 + d4 + d6) != 0):
	msg = "senha invalida"
else:
	msg = "acesso liberado"
print(msg)
-- EXECUTION TIME:
0.158904
-- TEST CASE 1:
---- input:
087612
---- correct output:
acesso liberado
---- user output:
senha invalida
-- TEST CASE 2:
---- input:
760834
---- correct output:
senha invalida
---- user output:
senha invalida
-- TEST CASE 3:
---- input:
122967
---- correct output:
acesso liberado
---- user output:
senha invalida
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:29:21) 
-- CODE:
num = int(input("senha:"))

# decompoe os 6 digitos da senha
d1 = num // 10000
d2 = (num // 1000) % 100
d3 = (num // 100) % 100
d4 = num % 100
d5 = (num // 10) % 10
d6 = num % 10
if((d1 + d3 + d5) % (d2 + d4 + d6) != 0):
	msg = "senha invalida"
else:
	msg = "acesso liberado"
print(msg)
-- OUTPUT:
senha invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:06:31) 
-- CODE:
num = int(input("senha:"))

# decompoe os 6 digitos da senha
d1 = num // 10000
d2 = (num // 1000) % 100
d3 = (num // 100) % 100
d4 = num % 100
d5 = (num // 10) % 10
d6 = num % 10
if((d1 + d3 + d5) % (d2 + d4 + d6) != 0):
	msg = "senha invalida"
else:
	msg = "acesso liberado"
print(msg)
-- OUTPUT:
senha invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:06:46) 
-- CODE:
num = int(input("senha:"))

# decompoe os 6 digitos da senha
d1 = num // 10000
d2 = (num // 1000) % 100
d3 = (num // 100) % 100
d4 = num % 100
d5 = (num // 10) % 10
d6 = num % 10
if((d1 + d3 + d5) % (d2 + d4 + d6) != 0):
	msg = "senha invalida"
else:
	msg = "acesso liberado"
print(msg)
-- OUTPUT:
senha invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 13:07:05) 
-- CODE:
num = int(input("senha:"))

# decompoe os 6 digitos da senha
d1 = num // 100000
d2 = (num // 100000) % 10000
d3 = (num // 10000) % 1000
d4 = (num % 1000) % 100
d5 = (num // 100) % 10
d6 = num % 10
if((d1 + d3 + d5) % (d2 + d4 + d6) != 0):
	msg = "senha invalida"
else:
	msg = "acesso liberado"
print(msg)
-- EXECUTION TIME:
0.152665
-- TEST CASE 1:
---- input:
087612
---- correct output:
acesso liberado
---- user output:
acesso liberado
-- TEST CASE 2:
---- input:
760834
---- correct output:
senha invalida
---- user output:
senha invalida
-- TEST CASE 3:
---- input:
122967
---- correct output:
acesso liberado
---- user output:
senha invalida
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 13:08:07) 
-- CODE:
num = int(input("senha:"))

# decompoe os 6 digitos da senha
d1 = num // 100000
d2 = (num % 100000) // 10000
d3 = (num % 10000) // 1000
d4 = (num % 1000) // 100
d5 = (num % 100) // 10
d6 = num % 10
if((d1 + d3 + d5) % (d2 + d4 + d6) != 0):
	msg = "senha invalida"
else:
	msg = "acesso liberado"
print(msg)
-- EXECUTION TIME:
0.147556
-- TEST CASE 1:
---- input:
087612
---- correct output:
acesso liberado
---- user output:
senha invalida
-- TEST CASE 2:
---- input:
760834
---- correct output:
senha invalida
---- user output:
senha invalida
-- TEST CASE 3:
---- input:
122967
---- correct output:
acesso liberado
---- user output:
senha invalida
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 13:08:10) 
-- CODE:
num = int(input("senha:"))

# decompoe os 6 digitos da senha
d1 = num // 100000
d2 = (num % 100000) // 10000
d3 = (num % 10000) // 1000
d4 = (num % 1000) // 100
d5 = (num % 100) // 10
d6 = num % 10
if((d1 + d3 + d5) % (d2 + d4 + d6) != 0):
	msg = "senha invalida"
else:
	msg = "acesso liberado"
print(msg)
-- EXECUTION TIME:
0.145843
-- TEST CASE 1:
---- input:
087612
---- correct output:
acesso liberado
---- user output:
senha invalida
-- TEST CASE 2:
---- input:
760834
---- correct output:
senha invalida
---- user output:
senha invalida
-- TEST CASE 3:
---- input:
122967
---- correct output:
acesso liberado
---- user output:
senha invalida
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 13:09:49) 
-- CODE:
num = int(input("senha:"))

# decompoe os 6 digitos da senha
d1 = num // 100000
d2 = (num % 100000) // 10000
d3 = (num % 10000) // 1000
d4 = (num % 1000) // 100
d5 = (num % 100) // 10
d6 = num % 10
if((d2 + d4 + d6) % (d1+ d3 + d5) != 0):
	msg = "senha invalida"
else:
	msg = "acesso liberado"
print(msg)
-- EXECUTION TIME:
0.152299
-- TEST CASE 1:
---- input:
087612
---- correct output:
acesso liberado
---- user output:
acesso liberado
-- TEST CASE 2:
---- input:
760834
---- correct output:
senha invalida
---- user output:
senha invalida
-- TEST CASE 3:
---- input:
122967
---- correct output:
acesso liberado
---- user output:
acesso liberado
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
