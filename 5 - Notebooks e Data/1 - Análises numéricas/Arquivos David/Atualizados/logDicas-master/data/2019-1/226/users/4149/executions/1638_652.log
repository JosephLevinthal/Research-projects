== TEST (2019-04-15 19:35:36) 
-- CODE:
nume= int(input("entre com o nume de 3 digitos: "))

a= nume//100

b=nume%100


if((nume%100)//nume==0):
	
	print("SIM")
	
else:
	
	print("NAO")
-- OUTPUT:
SIM
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:35:46) 
-- CODE:
nume= int(input("entre com o nume de 3 digitos: "))

a= nume//100

b=nume%100


if((nume%100)//nume==0):
	
	print("SIM")
	
else:
	
	print("NAO")
-- OUTPUT:
SIM
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:35:49) 
-- CODE:
nume= int(input("entre com o nume de 3 digitos: "))

a= nume//100

b=nume%100


if((nume%100)//nume==0):
	
	print("SIM")
	
else:
	
	print("NAO")
-- EXECUTION TIME:
0.160317
-- TEST CASE 1:
---- input:
728
---- correct output:
SIM
---- user output:
SIM
-- TEST CASE 2:
---- input:
789
---- correct output:
NAO
---- user output:
SIM
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:36:07) 
-- CODE:
nume= int(input("entre com o nume de 3 digitos: "))


if((nume%100)//nume==0):
	
	print("SIM")
	
else:
	
	print("NAO")
-- EXECUTION TIME:
0.178623
-- TEST CASE 1:
---- input:
728
---- correct output:
SIM
---- user output:
SIM
-- TEST CASE 2:
---- input:
789
---- correct output:
NAO
---- user output:
SIM
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:36:13) 
-- CODE:
nume= int(input("entre com o nume de 3 digitos: "))


if((nume%100)//nume==0):
	
	print("SIM")
	
else:
	
	print("NAO")
-- OUTPUT:
SIM
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:36:48) 
-- CODE:
nume= int(input("entre com o nume de 3 digitos: "))


if(((nume%100)//nume)==0):
	
	print("SIM")
	
else:
	
	print("NAO")
-- EXECUTION TIME:
0.199
-- TEST CASE 1:
---- input:
728
---- correct output:
SIM
---- user output:
SIM
-- TEST CASE 2:
---- input:
789
---- correct output:
NAO
---- user output:
SIM
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:36:50) 
-- CODE:
nume= int(input("entre com o nume de 3 digitos: "))


if(((nume%100)//nume)==0):
	
	print("SIM")
	
else:
	
	print("NAO")
-- OUTPUT:
SIM
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:37:46) 
-- CODE:
nume= int(input("entre com o nume de 3 digitos: "))


if(nume//((nume%100))==0):
	
	print("SIM")
	
else:
	
	print("NAO")
-- EXECUTION TIME:
0.184454
-- TEST CASE 1:
---- input:
728
---- correct output:
SIM
---- user output:
NAO
-- TEST CASE 2:
---- input:
789
---- correct output:
NAO
---- user output:
NAO
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:37:48) 
-- CODE:
nume= int(input("entre com o nume de 3 digitos: "))


if(nume//((nume%100))==0):
	
	print("SIM")
	
else:
	
	print("NAO")
-- OUTPUT:
NAO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:38:49) 
-- CODE:
nume= int(input("entre com o nume de 3 digitos: "))


if(nume//((nume%100))==0):
	
	print("SIM")
	
else:
	
	print("NAO")
-- OUTPUT:
NAO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:38:53) 
-- CODE:
nume= int(input("entre com o nume de 3 digitos: "))


if(nume//((nume%100))==0):
	
	print("SIM")
	
else:
	
	print("NAO")
-- OUTPUT:
NAO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:39:57) 
-- CODE:
nume= int(input("entre com o nume de 3 digitos: "))


if((nume//((nume%100)))==0):
	
	print("SIM")
	
else:
	
	print("NAO")
-- EXECUTION TIME:
0.13696
-- TEST CASE 1:
---- input:
728
---- correct output:
SIM
---- user output:
NAO
-- TEST CASE 2:
---- input:
789
---- correct output:
NAO
---- user output:
NAO
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:40:21) 
-- CODE:
nume= int(input("entre com o nume de 3 digitos: "))


if((nume%((nume%100)))==0):
	
	print("SIM")
	
else:
	
	print("NAO")
-- EXECUTION TIME:
0.218543
-- TEST CASE 1:
---- input:
728
---- correct output:
SIM
---- user output:
SIM
-- TEST CASE 2:
---- input:
789
---- correct output:
NAO
---- user output:
NAO
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
