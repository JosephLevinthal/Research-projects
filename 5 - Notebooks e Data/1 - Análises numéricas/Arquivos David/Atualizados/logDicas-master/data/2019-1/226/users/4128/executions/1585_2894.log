== TEST (2019-03-21 11:22:50) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
nA = foaut(input("Qual o valor unitario do jogo? "))

# Calculo do valor a ser pago, incluindo o frete:
total = 30.0

# Impressao do valor total:
print(total)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    nA = foaut(input())
NameError: name 'foaut' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:24:12) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
nA = float(input("Qual o valor unitario do jogo "))

# Calculo do valor a ser pago, incluindo o frete:
total = 30.0

# Impressao do valor total:
print(total)
-- OUTPUT:
30.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 11:24:29) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
nA = float(input("Qual o valor unitario do jogo "))

# Calculo do valor a ser pago, incluindo o frete:
total = 30.0

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.156436
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
30.0
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
30.0
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
30.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 11:24:31) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
nA = float(input("Qual o valor unitario do jogo "))

# Calculo do valor a ser pago, incluindo o frete:
total = 30.0

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.194984
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
30.0
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
30.0
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
30.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:24:33) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
nA = float(input("Qual o valor unitario do jogo "))

# Calculo do valor a ser pago, incluindo o frete:
total = 30.0

# Impressao do valor total:
print(total)
-- OUTPUT:
30.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 11:24:33) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
nA = float(input("Qual o valor unitario do jogo "))

# Calculo do valor a ser pago, incluindo o frete:
total = 30.0

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.115932
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
30.0
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
30.0
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
30.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:24:35) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
nA = float(input("Qual o valor unitario do jogo "))

# Calculo do valor a ser pago, incluindo o frete:
total = 30.0

# Impressao do valor total:
print(total)
-- OUTPUT:
30.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:24:54) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
nA = float(input("Qual o valor unitario do jogo "))

# Calculo do valor a ser pago, incluindo o frete:
total = 30.0 * nA

# Impressao do valor total:
print(total)
-- OUTPUT:
36.9
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 11:25:01) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
nA = float(input("Qual o valor unitario do jogo "))

# Calculo do valor a ser pago, incluindo o frete:
total = 30.0 * nA

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.141704
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
36.9
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
10680.0
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
3719610.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 11:25:15) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
nA = float(input("Qual o valor unitario do jogo: "))

# Calculo do valor a ser pago, incluindo o frete:
total = 30.0 * nA

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.147512
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
36.9
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
10680.0
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
3719610.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:25:15) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
nA = float(input("Qual o valor unitario do jogo: "))

# Calculo do valor a ser pago, incluindo o frete:
total = 30.0 * nA

# Impressao do valor total:
print(total)
-- OUTPUT:
36.9
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 11:26:29) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
nA = float(input("Qual o valor unitario do jogo: "))

# Calculo do valor a ser pago, incluindo o frete:
total = 30.0 * nA + 45.0

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.196839
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
81.9
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
10725.0
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
3719655.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:26:29) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
nA = float(input("Qual o valor unitario do jogo: "))

# Calculo do valor a ser pago, incluindo o frete:
total = 30.0 * nA + 45.0

# Impressao do valor total:
print(total)
-- OUTPUT:
81.9
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 11:26:57) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
nA = int(input("Qual o valor unitario do jogo: "))

# Calculo do valor a ser pago, incluindo o frete:
total = 30.0 * nA + 45.0

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.188809
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1585/2894/main.py", line 5, in <module>
    nA = int(input())
ValueError: invalid literal for int() with base 10: '1.23'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:26:57) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
nA = int(input("Qual o valor unitario do jogo: "))

# Calculo do valor a ser pago, incluindo o frete:
total = 30.0 * nA + 45.0

# Impressao do valor total:
print(total)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    nA = int(input())
ValueError: invalid literal for int() with base 10: '1.23'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 11:28:03) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
nA = int(input("preco do jogo: "))

# Calculo do valor a ser pago, incluindo o frete:
total = 8 * nA + 45.0

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.141352
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1585/2894/main.py", line 5, in <module>
    nA = int(input())
ValueError: invalid literal for int() with base 10: '1.23'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 11:28:09) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
nA = int(input("preco do jogo: "))

# Calculo do valor a ser pago, incluindo o frete:
total = 8 * nA + 45.0

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.158369
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1585/2894/main.py", line 5, in <module>
    nA = int(input())
ValueError: invalid literal for int() with base 10: '1.23'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 11:28:09) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
nA = int(input("preco do jogo: "))

# Calculo do valor a ser pago, incluindo o frete:
total = 8 * nA + 45.0

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.143158
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1585/2894/main.py", line 5, in <module>
    nA = int(input())
ValueError: invalid literal for int() with base 10: '1.23'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 11:28:09) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
nA = int(input("preco do jogo: "))

# Calculo do valor a ser pago, incluindo o frete:
total = 8 * nA + 45.0

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.30213
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1585/2894/main.py", line 5, in <module>
    nA = int(input())
ValueError: invalid literal for int() with base 10: '1.23'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 11:28:09) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
nA = int(input("preco do jogo: "))

# Calculo do valor a ser pago, incluindo o frete:
total = 8 * nA + 45.0

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.163542
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1585/2894/main.py", line 5, in <module>
    nA = int(input())
ValueError: invalid literal for int() with base 10: '1.23'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 11:28:27) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
nA = float(input("preco do jogo: "))

# Calculo do valor a ser pago, incluindo o frete:
total = 8 * nA + 45.0

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.135325
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
54.84
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
2893.0
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
991941.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
