== TEST (2019-05-02 10:08:50) 
-- CODE:
fi = int(input("Dano fixo maior:"))
ga = int(input("Dano fixo menor:"))
tm = int(input("Dano aleatorio:"))
vd = int(input("Dano do dado:")
if(fi = 10 + vd )			

			
			
			
			
-- ERROR:
File "XXXX", line 5
    if(fi = 10 + vd )			
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 10:09:09) 
-- CODE:
fi = int(input("Dano fixo maior:"))
ga = int(input("Dano fixo menor:"))
tm = int(input("Dano aleatorio:"))
vd = int(input("Dano do dado:")
if(fi = 10 + vd )	
		print(valor do dano)

			
			
			
			
-- EXECUTION TIME:
0.170766
-- ERROR:
  File "/home/codebench/codes/1709/3069/main.py", line 5
    if(fi = 10 + vd )	
          ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:09:09) 
-- CODE:
fi = int(input("Dano fixo maior:"))
ga = int(input("Dano fixo menor:"))
tm = int(input("Dano aleatorio:"))
vd = int(input("Dano do dado:")
if(fi = 10 + vd )	
		print(valor do dano)

			
			
			
			
-- ERROR:
File "XXXX", line 5
    if(fi = 10 + vd )	
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:09:18) 
-- CODE:
fi = int(input("Dano fixo maior:"))
ga = int(input("Dano fixo menor:"))
tm = int(input("Dano aleatorio:"))
vd = int(input("Dano do dado:")
if(fi = 10 + vd )	
		print("valor do dano")

			
			
			
			
-- ERROR:
File "XXXX", line 5
    if(fi = 10 + vd )	
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:09:23) 
-- CODE:
fi = int(input("Dano fixo maior:"))
ga = int(input("Dano fixo menor:"))
tm = int(input("Dano aleatorio:"))
vd = int(input("Dano do dado:")
if(fi = 10 + vd )	
		

			
			
			
			
-- ERROR:
File "XXXX", line 5
    if(fi = 10 + vd )	
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:09:25) 
-- CODE:
fi = int(input("Dano fixo maior:"))
ga = int(input("Dano fixo menor:"))
tm = int(input("Dano aleatorio:"))
vd = int(input("Dano do dado:")
if(fi = 10 + vd )	
		

			
			
			
			
-- ERROR:
File "XXXX", line 5
    if(fi = 10 + vd )	
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:09:26) 
-- CODE:
fi = int(input("Dano fixo maior:"))
ga = int(input("Dano fixo menor:"))
tm = int(input("Dano aleatorio:"))
vd = int(input("Dano do dado:")

		

			
			
			
			
-- ERROR:
File "XXXX", line 12
    
       ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:10:33) 
-- CODE:
fi = int(input("Dano fixo maior:"))
ga = int(input("Dano fixo menor:"))
tm = int(input("Dano aleatorio:"))
vd = int(input("Dano do dado:")
elif(fi)
		

			
			
			
			
-- ERROR:
File "XXXX", line 5
    elif(fi)
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:11:13) 
-- CODE:
fi = int(input("Dano fixo maior:"))
ga = int(input("Dano fixo menor:"))
tm = int(input("Dano aleatorio:"))
vd = int(input("Dano do dado:")

		

			
			
			
			
-- ERROR:
File "XXXX", line 12
    
       ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:13:07) 
-- CODE:
fi = int(input("Dano fixo 10:"))
ga = int(input("Dano fixo 6:"))
tm = int(input("Dano aleatorio:"))
vd = int(input("Dano do dado:")
	
if(nome do ataque)
	if()

		

			
			
			
			
-- ERROR:
File "XXXX", line 6
    if(nome do ataque)
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:16:36) 
-- CODE:
fi = int(input("Dano fixo 10:"))
ga = int(input("Dano fixo 6:"))
tm = int(input("Dano aleatorio:"))
vd = int(input("Dano do dado:")
furia infernal = 10 + vd

		

			
			
			
			
-- ERROR:
File "XXXX", line 5
    furia infernal = 10 + vd
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:18:40) 
-- CODE:
fi = int(input("Dano fixo 10:"))
ga = int(input("Dano fixo 6:"))
tm = int(input("Dano aleatorio:"))
vd = int(input("Dano do dado:")
furia infernal = 10 + vd
grito aterrorizante = 6 + vd
toque da morte = (vd + vd)**2

		

			
			
			
			
-- ERROR:
File "XXXX", line 5
    furia infernal = 10 + vd
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:20:16) 
-- CODE:
fi = int(input("Dano fixo 10:"))
ga = int(input("Dano fixo 6:"))
tm = int(input("Dano aleatorio:"))
vd = int(input("Dano do dado:")


		

			
			
			
			
-- ERROR:
File "XXXX", line 13
    
       ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:20:25) 
-- CODE:
fi = int(input("Dano fixo 10:"))
ga = int(input("Dano fixo 6:"))
tm = int(input("Dano aleatorio:"))
vd = int(input("Dano do dado:"))


		

			
			
			
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    fi = int(input())
ValueError: invalid literal for int() with base 10: 'TOQUE'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:21:01) 
-- CODE:
fi = int(input("Dano da furia:"))
ga = int(input("Dano do grito:"))
tm = int(input("Dano do toque:"))
vd = int(input("Dano do dado:"))


		

			
			
			
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    fi = int(input())
ValueError: invalid literal for int() with base 10: 'TOQUE'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:22:44) 
-- CODE:
fi = int(input("Dano da furia:"))
ga = int(input("Dano do grito:"))
tm = int(input("Dano do toque:"))
vd = int(input("Dano do dado:"))
fi = (10 + vd)


		

			
			
			
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    fi = int(input())
ValueError: invalid literal for int() with base 10: 'TOQUE'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:23:46) 
-- CODE:
fi = int(input("Dano da furia:"))
ga = int(input("Dano do grito:"))
tm = int(input("Dano do toque:"))
vd = int(input("Dano do dado:"))
a = dano aleatorio 1
b = dano aleatorio 2
fi = (10 + vd)
ga = (6 + vd)
tm = (a + b)**2


		

			
			
			
			
-- ERROR:
File "XXXX", line 5
    a = dano aleatorio 1
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:24:12) 
-- CODE:
fi = int(input("Dano da furia:"))
ga = int(input("Dano do grito:"))
tm = int(input("Dano do toque:"))
vd = int(input("Dano do dado:"))
a = input("dano aleatorio 1")
b = ("dano aleatorio 2")
fi = (10 + vd)
ga = (6 + vd)
tm = (a + b)**2


		

			
			
			
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    fi = int(input())
ValueError: invalid literal for int() with base 10: 'TOQUE'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:25:26) 
-- CODE:
fi = int(input("Dano da furia:"))
ga = int(input("Dano do grito:"))
tm = int(input("Dano do toque:"))
vd = int(input("Dano do dado:"))
a = input("dano aleatorio 1:")
b = input("dano aleatorio 2:")
fi = (10 + vd)
ga = (6 + vd)
tm = (a + b)**2
if("fi>=26")
	print(dano da furia)



		

			
			
			
			
-- ERROR:
File "XXXX", line 10
    if("fi>=26")
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:25:32) 
-- CODE:
fi = int(input("Dano da furia:"))
ga = int(input("Dano do grito:"))
tm = int(input("Dano do toque:"))
vd = int(input("Dano do dado:"))
a = input("dano aleatorio 1:")
b = input("dano aleatorio 2:")
fi = (10 + vd)
ga = (6 + vd)
tm = (a + b)**2
if("fi>=26")
	print("dano da furia")



		

			
			
			
			
-- ERROR:
File "XXXX", line 10
    if("fi>=26")
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:25:41) 
-- CODE:
fi = int(input("Dano da furia:"))
ga = int(input("Dano do grito:"))
tm = int(input("Dano do toque:"))
vd = int(input("Dano do dado:"))
a = input("dano aleatorio 1:")
b = input("dano aleatorio 2:")
fi = (10 + vd)
ga = (6 + vd)
tm = (a + b)**2
if("fi>=26"):
	print("dano da furia")



		

			
			
			
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    fi = int(input())
ValueError: invalid literal for int() with base 10: 'TOQUE'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:27:15) 
-- CODE:
fi = int(input("Dano da furia:"))
ga = int(input("Dano do grito:"))
tm = int(input("Dano do toque:"))
vd = int(input("Dano do dado:"))
a = input("dano aleatorio 1:")
b = input("dano aleatorio 2:")
fi = (10 + vd)
ga = (6 + vd)
tm = (a + b)**2
if("fi>=26"):
	print("dano da furia")
if("ga>=22"):
	print("dano do grito")
if("tm>=4")
	print("dano da morte")



		

			
			
			
			
-- ERROR:
File "XXXX", line 14
    if("tm>=4")
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:27:21) 
-- CODE:
fi = int(input("Dano da furia:"))
ga = int(input("Dano do grito:"))
tm = int(input("Dano do toque:"))
vd = int(input("Dano do dado:"))
a = input("dano aleatorio 1:")
b = input("dano aleatorio 2:")
fi = (10 + vd)
ga = (6 + vd)
tm = (a + b)**2
if("fi>=26"):
	print("dano da furia")
if("ga>=22"):
	print("dano do grito")
if("tm>=4"):
	print("dano da morte")



		

			
			
			
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    fi = int(input())
ValueError: invalid literal for int() with base 10: 'TOQUE'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:29:01) 
-- CODE:
fi = int(input("Dano da furia:"))
ga = int(input("Dano do grito:"))
tm = int(input("Dano do toque:"))
vd = int(input("Dano do dado:"))
a = input("dano aleatorio 1:")
b = input("dano aleatorio 2:")
fi = (10 + vd)
ga = (6 + vd)
tm = (a + b)**2
if("fi>=26"):
	print("dano da furia")
elif("ga>=22"):
	print("dano do grito")
elif("tm>=4"):
	print("dano da morte")
else:
	print("")
	



		

			
			
			
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    fi = int(input())
ValueError: invalid literal for int() with base 10: 'TOQUE'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:29:16) 
-- CODE:
fi = int(input("Dano da furia:"))
ga = int(input("Dano do grito:"))
tm = int(input("Dano do toque:"))
vd = int(input("Dano do dado:"))
a = input("dano aleatorio 1:")
b = input("dano aleatorio 2:")
fi = (10 + vd)
ga = (6 + vd)
tm = (a + b)**2
if("fi>=26"):
	print("dano da furia")
elif("ga>=22"):
	print("dano do grito")
elif("tm>=4"):
	print("dano da morte")
else:
	print("pontos de vida perdidos")
	



		

			
			
			
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    fi = int(input())
ValueError: invalid literal for int() with base 10: 'TOQUE'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:29:29) 
-- CODE:
fi = int(input("Dano da furia:"))
ga = int(input("Dano do grito:"))
tm = int(input("Dano do toque:"))
vd = int(input("Dano do dado:"))
a = input("dano aleatorio 1:")
b = input("dano aleatorio 2:")
fi = (10 + vd)
ga = (6 + vd)
tm = (a + b)**2
if("fi>=26"):
	print("dano da furia")
elif("ga>=22"):
	print("dano do grito")
elif("tm>=4"):
	print("dano da morte")
else:
	print("pontos de vida perdidos")
	



		

			
			
			
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    fi = int(input())
ValueError: invalid literal for int() with base 10: 'TOQUE'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:32:12) 
-- CODE:
fi = int(input("Dano da furia:"))
ga = int(input("Dano do grito:"))
tm = int(input("Dano do toque:"))
vd = a + b
a = input("dano aleatorio 1:")
b = input("dano aleatorio 2:")
fi = (10 + vd)
ga = (6 + vd)
tm = (a + b)**2
if("fi>=26"):
	print("dano da furia")
elif("ga>=22"):
	print("dano do grito")
elif("tm>=4"):
	print("dano da morte")
else:
	print("pontos de vida perdidos")
	



		

			
			
			
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    fi = int(input())
ValueError: invalid literal for int() with base 10: 'TOQUE'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:34:54) 
-- CODE:
fi = int(input("Dano da furia:"))
ga = int(input("Dano do grito:"))
tm = int(input("Dano do toque:"))
vd = a + b
a = input("dano aleatorio 1:")
b = input("dano aleatorio 2:")
fi = (10 + vd)
ga = (6 + vd)
tm = (a + b)**2
print(FURIA)
if("fi>=26"):
	print("dano da furia")
elif("ga>=22"):
	print("dano do grito")
elif("tm>=4"):
	print("dano da morte")
else:
	print("pontos de vida perdidos")
	



		

			
			
			
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    fi = int(input())
ValueError: invalid literal for int() with base 10: 'TOQUE'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:37:41) 
-- CODE:
fi = int(input("Dano da furia:"))
ga = int(input("Dano do grito:"))
tm = int(input("Dano do toque:"))
vd = a + b
a = input("dano aleatorio 1:")
b = input("dano aleatorio 2:")
fi = (10 + vd)
ga = (6 + vd)
tm = (a + b)**2
if("ataque")
print(FURIA)
if("fi>=26"):
	print("dano da furia")
elif("ga>=22"):
	print("dano do grito")
elif("tm>=4"):
	print("dano da morte")
else:
	print("pontos de vida perdidos")
	



		

			
			
			
			
-- ERROR:
File "XXXX", line 10
    if("ataque")
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:37:46) 
-- CODE:
fi = int(input("Dano da furia:"))
ga = int(input("Dano do grito:"))
tm = int(input("Dano do toque:"))
vd = a + b
a = input("dano aleatorio 1:")
b = input("dano aleatorio 2:")
fi = (10 + vd)
ga = (6 + vd)
tm = (a + b)**2
if(ataque)
print(FURIA)
if("fi>=26"):
	print("dano da furia")
elif("ga>=22"):
	print("dano do grito")
elif("tm>=4"):
	print("dano da morte")
else:
	print("pontos de vida perdidos")
	



		

			
			
			
			
-- ERROR:
File "XXXX", line 10
    if(ataque)
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:37:54) 
-- CODE:
fi = int(input("Dano da furia:"))
ga = int(input("Dano do grito:"))
tm = int(input("Dano do toque:"))
vd = a + b
a = input("dano aleatorio 1:")
b = input("dano aleatorio 2:")
fi = (10 + vd)
ga = (6 + vd)
tm = (a + b)**2
if(ataque)
	print(FURIA)
if("fi>=26"):
	print("dano da furia")
elif("ga>=22"):
	print("dano do grito")
elif("tm>=4"):
	print("dano da morte")
else:
	print("pontos de vida perdidos")
	



		

			
			
			
			
-- ERROR:
File "XXXX", line 10
    if(ataque)
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:38:54) 
-- CODE:
fi = int(input("Dano da furia:"))
ga = int(input("Dano do grito:"))
tm = int(input("Dano do toque:"))
vd = a + b
a = input("dano aleatorio 1:")
b = input("dano aleatorio 2:")
fi = (10 + vd)
ga = (6 + vd)
tm = (a + b)**2
print(FURIA)
if("fi>=26"):
	print("dano da furia")
elif("ga>=22"):
	print("dano do grito")
elif("tm>=4"):
	print("dano da morte")
else:
	print("pontos de vida perdidos")
	



		

			
			
			
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    fi = int(input())
ValueError: invalid literal for int() with base 10: 'TOQUE'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:39:26) 
-- CODE:
fi = int(input("Dano da furia:"))
ga = int(input("Dano do grito:"))
tm = int(input("Dano do toque:"))
vd = a + b
a = input("dano aleatorio 1:")
b = input("dano aleatorio 2:")
fi = (10 + vd)
ga = (6 + vd)
tm = (a + b)**2
print(FURIA)
if("fi>=26"):
	print("dano da furia")
elif("ga>=22"):
	print("dano do grito")
elif("tm>=4"):
	print("dano da morte")
else:
	print("pontos de vida perdidos")
	



		

			
			
			
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    fi = int(input())
ValueError: invalid literal for int() with base 10: 'TOQUE'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
