== TEST (2019-04-07 23:55:27) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = falta(p - pg)
else:
	msg = troco de (pg - p)
	
r = round(msg, 2)
	
print(r)
-- ERROR:
File "XXXX", line 7
    msg = troco de (pg - p)
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:55:39) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = falta(p - pg)
else:
	msg = trocode(pg - p)
	
r = round(msg, 2)
	
print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    msg = falta(p - pg)
NameError: name 'falta' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:56:24) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = falta(p - pg)
else:
	msg = troco_de(pg - p)
	
r = round(msg, 2)
	
print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    msg = falta(p - pg)
NameError: name 'falta' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:56:33) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = falta(p - pg)
else:
	msg = troco_de(pg - p)
	
r = round(msg, 2)
	
print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    msg = falta(p - pg)
NameError: name 'falta' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:56:41) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = falta(p - pg)
else:
	msg = troco_de(pg - p)
	
r = round(msg, 2)
	
print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    msg = falta(p - pg)
NameError: name 'falta' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:57:02) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = falta(p - pg)
else:
	msg = troco(pg - p)
	
r = round(msg, 2)
	
print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    msg = falta(p - pg)
NameError: name 'falta' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:57:25) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = falta(p - pg)
else:
	msg = troco de (pg - p)
	
r = round(msg, 2)
	
print(r)
-- ERROR:
File "XXXX", line 7
    msg = troco de (pg - p)
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:57:34) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = falta(p - pg)
else:
	msg = troco de(pg - p)
	
r = round(msg, 2)
	
print(r)
-- ERROR:
File "XXXX", line 7
    msg = troco de(pg - p)
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:58:01) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = falta(p - pg)
else:
	msg = (pg - p)
	
r = round(msg, 2)
	
print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    msg = falta(p - pg)
NameError: name 'falta' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 23:58:17) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = falta(p - pg)
else:
	msg = (pg - p)
	
r = round(msg, 2)
	
print(r)
-- EXECUTION TIME:
0.137767
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1637/2447/main.py", line 5, in <module>
    msg = falta(p - pg)
NameError: name 'falta' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:59:03) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = "falta(p - pg)"
else:
	msg = "troco_de(pg - g)"
	
r = round(msg, 2)
	
print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    r = round(msg, 2)
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 23:59:06) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = "falta(p - pg)"
else:
	msg = "troco_de(pg - g)"
	
r = round(msg, 2)
	
print(r)
-- EXECUTION TIME:
0.129948
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1637/2447/main.py", line 9, in <module>
    r = round(msg, 2)
TypeError: type str doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 23:59:15) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = "falta(p - pg)"
else:
	msg = "troco de(pg - g)"
	
r = round(msg, 2)
	
print(r)
-- EXECUTION TIME:
0.14256
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1637/2447/main.py", line 9, in <module>
    r = round(msg, 2)
TypeError: type str doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:59:37) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = "falta(p - pg)"
else:
	msg = "troco de(pg - g)"
	
r = round(msg, 2)
	
print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    r = round(msg, 2)
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:59:57) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = "falta(p - pg)"
else:
	msg = "troco de(pg - g)"
	
r = round(msg, 2)
	
print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    r = round(msg, 2)
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 00:00:29) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = "falta(p - pg)"
else:
	msg = "troco de(pg - g)"
	
r = round(msg, 2)
	
print(r)
-- EXECUTION TIME:
0.186045
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1637/2447/main.py", line 9, in <module>
    r = round(msg, 2)
TypeError: type str doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 00:00:31) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = "falta(p - pg)"
else:
	msg = "troco de(pg - g)"
	
r = round(msg, 2)
	
print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    r = round(msg, 2)
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 00:06:38) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = "falta(p - pg)"
else:
	msg = "troco de(pg - g)"
	
r = round(msg, 2)
	
print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    r = round(msg, 2)
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 00:07:38) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = "falta(p - pg)"
else:
	msg = "troco de (pg - g)"
	
r = round(msg, 2)
	
print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    r = round(msg, 2)
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 00:09:27) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = "falta(p - pg)"
else:
	msg = "troco de (pg - g)"
	
r = round(msg, 1)
	
print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    r = round(msg, 1)
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 00:09:45) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = "falta(p - pg)"
else:
	msg = "troco de (pg - g)"
	
print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(r)
NameError: name 'r' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 00:09:52) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = "falta(p - pg)"
else:
	msg = "troco de (pg - g)"
	
print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(r)
NameError: name 'r' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 00:10:10) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = "falta(p - pg)"
else:
	msg = "troco de (pg - g)"
	
print(msg)
-- OUTPUT:
falta(p - pg)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 00:10:40) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = "falta(p - pg)"
else:
	msg = "troco de(pg - g)"
	
print(msg)
-- OUTPUT:
falta(p - pg)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 00:11:25) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = "falta(p - pg)"
else:
	msg = "troco de(pg - g)"
	
r = round(msg, 2)
	
print(r)
-- EXECUTION TIME:
0.278744
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1637/2447/main.py", line 9, in <module>
    r = round(msg, 2)
TypeError: type str doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 00:11:28) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = "falta(p - pg)"
else:
	msg = "troco de(pg - g)"
	
r = round(msg, 2)
	
print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    r = round(msg, 2)
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 00:13:07) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = "falta(p - pg)"
else:
	msg = "troco de(pg - g)"
	
round(msg, 2)
	
print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    round(msg, 2)
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 00:13:36) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = "falta(p - pg)"
else:
	msg = "troco de(pg - g)"
	
round(msg, 2)
	
print(msg)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    round(msg, 2)
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 00:15:11) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = "falta(p - pg)"
else:
	msg = "troco_de(pg - g)"
	
r = round(msg, 2)
	
print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    r = round(msg, 2)
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 00:34:06) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = "falta(p - pg)"
else:
	msg = "troco de (pg - g)"
	
r = round(msg, 2)
	
print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    r = round(msg, 2)
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 00:34:26) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = "falta(p - pg)"
else:
	msg = "troco de (pg - g)"
r = round(msg, 2)
	
print(r)
-- EXECUTION TIME:
0.126303
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1637/2447/main.py", line 8, in <module>
    r = round(msg, 2)
TypeError: type str doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 00:34:41) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = "falta(p - pg)"
else:
	msg = "troco de (pg - g)"
	
print(msg)
-- OUTPUT:
falta(p - pg)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 00:35:11) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = "falta(p - pg)"
else:
	msg = "troco de (pg - g)"
	
print(msg)
-- EXECUTION TIME:
0.150169
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta(p - pg)
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco de (pg - g)
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco de (pg - g)
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 00:35:15) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = "falta(p - pg)"
else:
	msg = "troco de (pg - g)"
	
print(msg)
-- OUTPUT:
falta(p - pg)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 00:35:47) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = "falta(p - pg)"
else:
	msg = "troco de (pg - p)"
	
print(msg)
-- OUTPUT:
falta(p - pg)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 00:36:16) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = "falta(p - pg)"
else:
	msg = "troco de(pg - p)"
	
print(msg)
-- OUTPUT:
falta(p - pg)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 00:41:20) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = "falta(p - pg)"
else:
	msg ="(pg - p)"
	
print(msg)
-- OUTPUT:
falta(p - pg)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 00:42:01) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = "falta(p - pg)"
else:
	msg = "pg - p"
	
print(msg)
-- OUTPUT:
falta(p - pg)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 00:42:28) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = "falta(p - pg)"
else:
	msg = pg - p
	
print(msg)
-- OUTPUT:
falta(p - pg)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 00:42:38) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = "falta(p - pg)"
else:
	msg = pg - p
	
print(msg)
-- OUTPUT:
falta(p - pg)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 00:43:00) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = "falta(p - pg)"
else:
	msg = troco de pg - p
	
print(msg)
-- ERROR:
File "XXXX", line 7
    msg = troco de pg - p
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 00:43:10) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = "falta(p - pg)"
else:
	msg = "troco de" pg - p
	
print(msg)
-- ERROR:
File "XXXX", line 7
    msg = "troco de" pg - p
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 00:43:14) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = "falta(p - pg)"
else:
	msg = "troco de" pg - p
	
print(msg)
-- ERROR:
File "XXXX", line 7
    msg = "troco de" pg - p
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 00:43:23) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = "falta(p - pg)"
else:
	msg = "troco de" + pg - p
	
print(msg)
-- OUTPUT:
falta(p - pg)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 00:44:11) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = "falta(p - pg)"
else:
	msg = "troco de" pg - p
	
print(msg)
-- ERROR:
File "XXXX", line 7
    msg = "troco de" pg - p
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 00:44:26) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = "falta(p - pg)"
else:
	msg = "troco de pg - p"
	
print(msg)
-- OUTPUT:
falta(p - pg)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 00:44:53) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = "falta(p - pg)"
else:
	msg = pg - p
	
print(msg)
-- OUTPUT:
falta(p - pg)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 00:45:19) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = "falta(p - pg)"
else:
	msg = troco de pg - p
	
print(msg)
-- ERROR:
File "XXXX", line 7
    msg = troco de pg - p
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 00:45:36) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = "falta(p - pg)"
else:
	msg = "troco de pg - p"
	
print(msg)
-- OUTPUT:
falta(p - pg)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 00:45:57) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = "falta(p - pg)"
else:
	msg = "troco de (pg - p)"
	
print(msg)
-- OUTPUT:
falta(p - pg)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 00:46:17) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = "falta(p - pg)"
else:
	msg = "troco de(pg - p)"
	
print(msg)
-- OUTPUT:
falta(p - pg)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 00:47:02) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = falta (p - pg)
else:
	msg = (pg - p)
	
print(msg)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    msg = falta (p - pg)
NameError: name 'falta' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 00:47:21) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = falta (p - pg)
else:
	msg = troco (pg - p)
	
print(msg)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    msg = falta (p - pg)
NameError: name 'falta' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 00:49:19) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = falta (p - pg)
else:
	msg = troco de (pg - p)
	
print(msg)
-- ERROR:
File "XXXX", line 7
    msg = troco de (pg - p)
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 21:15:31) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = falta (p - pg)
else:
	msg = troco de (pg - p)
	
print(msg)
-- ERROR:
File "XXXX", line 7
    msg = troco de (pg - p)
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 21:15:57) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p > pg):
	msg = "falta(p - pg)"
else:
	msg = "troco de(pg - p)"
	
print(msg)
-- OUTPUT:
falta(p - pg)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:31:26) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if ("p" > "pg"):
	msg = "falta(p - pg)"
else:
	msg = "troco de(pg - p)"
	
print(msg)
-- OUTPUT:
troco de(pg - p)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:32:10) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p >= pg):
	msg = "falta(p - pg)"
else:
	msg = "troco de(pg - p)"
	
print(msg)
-- OUTPUT:
falta(p - pg)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:32:51) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p >= pg):
	msg = "falta(p - pg)"
else:
	msg = troco de (pg - p)
	
print(msg)
-- ERROR:
File "XXXX", line 7
    msg = troco de (pg - p)
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:33:04) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p >= pg):
	msg = falta(p - pg)
else:
	msg = troco de (pg - p)
	
print(msg)
-- ERROR:
File "XXXX", line 7
    msg = troco de (pg - p)
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:33:20) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p >= pg):
	msg = falta(p - pg)
else:
	msg = troco_de(pg - p)
	
print(msg)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    msg = falta(p - pg)
NameError: name 'falta' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:34:20) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p >= pg):
	msg = "falta" + (p - pg)
else:
	msg = "troco_de" + (pg - p)
	
print(msg)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    msg = "falta" + (p - pg)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:34:47) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))

if (p >= pg):
	msg = "falta" + (p - pg)
else:
	msg = "troco de" + (pg - p)
	
print(msg)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    msg = "falta" + (p - pg)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:37:18) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))
x = p - pg
y = pg -p

if (p >= pg):
	msg = "falta" + str(x)
else:
	msg = "troco de" + str(y)
	
print(msg)
-- OUTPUT:
falta26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:37:22) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))
x = p - pg
y = pg -p

if (p > pg):
	msg = "falta" + str(x)
else:
	msg = "troco de" + str(y)
	
print(msg)
-- OUTPUT:
falta26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:37:32) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))
x = p - pg
y = pg -p

if (p > pg):
	msg = "falta" + str(x)
else:
	msg = "troco de" + str(y)
	
print(msg)
-- OUTPUT:
falta26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:37:38) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))
x = p - pg
y = pg -p

if (p > pg):
	msg = "falta" + str(x)
else:
	msg = "troco de" + str(y)
	
print(msg)
-- OUTPUT:
falta26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:38:24) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))
x = p - pg
y = pg -p

if (p > pg):
	msg = "falta" + str(x)
else:
	msg = "troco de " + (str(y))
	
print(msg)
-- OUTPUT:
falta26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:38:29) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))
x = p - pg
y = pg -p

if (p > pg):
	msg = "falta " + str(x)
else:
	msg = "troco de " + (str(y))
	
print(msg)
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:39:59) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))
x = p - pg
z = round(x, 2)
y = pg -p

if (p > pg):
	msg = "falta " + str(x)
else:
	msg = "troco de " + (str(y))
	
print(z)
-- OUTPUT:
26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:40:35) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))
x = p - pg
z = round(x, 2)
y = pg -p

if (p > pg):
	msg = "falta " + str(z)
else:
	msg = "troco de " + (str(y))
	
print(msg)
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:40:40) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))
x = p - pg
z = round(x, 2)
y = pg -p

if (p > pg):
	msg = "falta " + str(z)
else:
	msg = "troco de " + (str(y))
	
print(msg)
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:40:52) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))
x = p - pg
z = round(x, 2)
y = pg -p

if (p > pg):
	msg = "falta " + str(z)
else:
	msg = "troco de " + (str(y))
	
print(msg)
-- EXECUTION TIME:
0.166032
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:41:25) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))
x = p - pg
z = round(x, 2)
y = pg -p
w = round(y, 2)

if (p > pg):
	msg = "falta " + str(z)
else:
	msg = "troco de " + (str(w))
	
print(msg)
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:41:37) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))
x = p - pg
z = round(x, 2)
y = pg -p
w = round(y, 2)

if (p > pg):
	msg = "falta " + str(z)
else:
	msg = "troco de " + (str(w))
	
print(msg)
-- EXECUTION TIME:
0.207915
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:41:40) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))
x = p - pg
z = round(x, 2)
y = pg -p
w = round(y, 2)

if (p > pg):
	msg = "falta " + str(z)
else:
	msg = "troco de " + (str(w))
	
print(msg)
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:41:59) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))
x = p - pg
z = round(x, 2)
y = pg -p
w = round(y, 2)

if (p >= pg):
	msg = "falta " + str(z)
else:
	msg = "troco de " + (str(w))
	
print(msg)
-- EXECUTION TIME:
0.159066
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
falta 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:43:57) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))
x = p - pg
z = round(x, 2)
y = pg -p
w = round(y, 2)

if (p <= pg):
	msg = "falta " + str(z)
else:
	msg = "troco de " + (str(w))
	
print(msg)
-- OUTPUT:
troco de -26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:44:05) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))
x = p - pg
z = round(x, 2)
y = pg -p
w = round(y, 2)

if (p <= pg):
	msg = "falta " + str(z)
else:
	msg = "troco de " + (str(w))
	
print(msg)
-- EXECUTION TIME:
0.16691
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
troco de -26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
falta -28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
falta 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:44:08) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))
x = p - pg
z = round(x, 2)
y = pg -p
w = round(y, 2)

if (p <= pg):
	msg = "falta " + str(z)
else:
	msg = "troco de " + (str(w))
	
print(msg)
-- OUTPUT:
troco de -26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:44:55) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))
x = p - pg
z = round(x, 2)
y = pg -p
w = round(y, 2)

if (p > pg):
	msg = "falta " + str(z)
else:
	msg = "troco de " + (str(w))
	
print(msg)
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:45:09) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))
x = p - pg
z = round(x, 2)
y = pg -p
w = round(y, 2)

if (p > pg):
	msg = "falta " + str(z)
else:
	msg = "troco de " + (str(w))
	
print(msg)
-- EXECUTION TIME:
0.199901
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:45:13) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))
x = p - pg
z = round(x, 2)
y = pg -p
w = round(y, 2)

if (p > pg):
	msg = "falta " + str(z)
else:
	msg = "troco de " + (str(w))
	
print(msg)
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:45:25) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))
x = p - pg
z = round(x, 2)
y = pg -p
w = round(y, 2)

if (p > pg):
	msg = "falta " + str(z)
else:
	msg = "troco de " + str(w)
	
print(msg)
-- EXECUTION TIME:
0.170775
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:45:45) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))
x = p - pg
z = round(x, 2)
y = pg - p
w = round(y, 2)

if (p > pg):
	msg = "falta " + str(z)
else:
	msg = "troco de " + str(w)
	
print(msg)
-- EXECUTION TIME:
0.205038
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:45:49) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))
x = p - pg
z = round(x, 2)
y = pg - p
w = round(y, 2)

if (p > pg):
	msg = "falta " + str(z)
else:
	msg = "troco de " + str(w)
	
print(msg)
-- EXECUTION TIME:
0.171115
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:47:20) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))
x = p - pg
z = round(x, 2)
y = pg - p
w = round(y, 2)

if (p > pg):
	msg = "falta " + str(z)
else:
	msg = "troco de " + str(w)
	
print(msg)
-- EXECUTION TIME:
0.20199
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:47:37) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))
x = p - pg
z = round(x, 2)
y = pg - p
w = round(y, 2)

if (p > pg):
	msg = "falta " + str(z)
else:
	msg = "troco de " + str(w)
	
print(msg)
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:48:18) 
-- CODE:
p = float(input("preco: "))
pg = float(input("pagamento: "))
x = p - pg
z = round(x, 2)
y = pg - p
w = round(y, 2)

if (p > pg):
	msg = "Falta " + str(z)
else:
	msg = "Troco de " + str(w)
	
print(msg)
-- EXECUTION TIME:
0.224132
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
