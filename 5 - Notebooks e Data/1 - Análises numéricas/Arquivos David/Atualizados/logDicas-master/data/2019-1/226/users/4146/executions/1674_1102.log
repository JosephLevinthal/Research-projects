== TEST (2019-05-01 16:32:22) 
-- CODE:
H = float(input("Valor: "))
h = float(input("Valor: "))
r = float(input("Valor: "))

print("Entradas", H, ",", h, ",", r)

from math import *

if (H > 0) and (h > 0) and (r > 0) and (H > h) and (H > 2*r):
	if (h <= r):
		v = (pi/3) * (h ** 2) * (3 * r - h)
		print("Volume: ", round(v * 1000, 3), "litros")
	elif (r < h) and (h <= H - r):
		v = (4 * pi * (r ** 3) / 6) + (pi * (r ** 2) * (h - r))
		print("Volume: ", round(v * 1000, 3), "litros")
	elif (h > H - r):
		v = ((4 * pi * (r ** 3))/ 6 ) + ((pi/3) * ((r ** 2) * (h - r)) * 2)
		print("Volume: ", round(v * 1000, 3), "litros")
else:
	print("Entradas invalidas")
		
-- OUTPUT:
Entradas 11.3 , 5.7 , 2.3
Volume:  81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 16:32:38) 
-- CODE:
H = float(input("Valor: "))
h = float(input("Valor: "))
r = float(input("Valor: "))

print("Entradas", H, ",", h, ",", r)

from math import *

if (H > 0) and (h > 0) and (r > 0) and (H > h) and (H > 2*r):
	if (h <= r):
		v = (pi/3) * (h ** 2) * (3 * r - h)
		print("Volume: ", round(v * 1000, 3), "litros")
	elif (r < h) and (h <= H - r):
		v = (4 * pi * (r ** 3) / 6) + (pi * (r ** 2) * (h - r))
		print("Volume: ", round(v * 1000, 3), "litros")
	elif (h > H - r):
		v = ((4 * pi * (r ** 3))/ 6 ) + ((pi/3) * ((r ** 2) * (h - r)) * 2)
		print("Volume: ", round(v * 1000, 3), "litros")
else:
	print("Entradas invalidas")
		
-- OUTPUT:
Entradas 11.3 , 5.7 , 2.3
Volume:  81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 16:32:39) 
-- CODE:
H = float(input("Valor: "))
h = float(input("Valor: "))
r = float(input("Valor: "))

print("Entradas", H, ",", h, ",", r)

from math import *

if (H > 0) and (h > 0) and (r > 0) and (H > h) and (H > 2*r):
	if (h <= r):
		v = (pi/3) * (h ** 2) * (3 * r - h)
		print("Volume: ", round(v * 1000, 3), "litros")
	elif (r < h) and (h <= H - r):
		v = (4 * pi * (r ** 3) / 6) + (pi * (r ** 2) * (h - r))
		print("Volume: ", round(v * 1000, 3), "litros")
	elif (h > H - r):
		v = ((4 * pi * (r ** 3))/ 6 ) + ((pi/3) * ((r ** 2) * (h - r)) * 2)
		print("Volume: ", round(v * 1000, 3), "litros")
else:
	print("Entradas invalidas")
		
-- OUTPUT:
Entradas 11.3 , 5.7 , 2.3
Volume:  81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 16:33:03) 
-- CODE:
H = float(input("Valor: "))
h = float(input("Valor: "))
r = float(input("Valor: "))

print("Entradas", H, ",", h, ",", r)

from math import *

if (H > 0) and (h > 0) and (r > 0) and (H > h) and (H > 2*r):
	if (h <= r):
		v = (pi/3) * (h ** 2) * (3 * r - h)
		print("Volume: ", round(v * 1000, 3), "litros")
	elif (r < h) and (h <= H - r):
		v = (4 * pi * (r ** 3) / 6) + (pi * (r ** 2) * (h - r))
		print("Volume: ", round(v * 1000, 3), "litros")
	elif (h > H - r):
		v = ((4 * pi * (r ** 3))/ 6 ) + ((pi/3) * ((r ** 2) * (h - r)) * 2)
		print("Volume: ", round(v * 1000, 3), "litros")
else:
	print("Entradas invalidas")
		
-- EXECUTION TIME:
0.13946
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas 11.3 , 5.7 , 2.3
Volume:  81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 16:33:12) 
-- CODE:
H = float(input("Valor: "))
h = float(input("Valor: "))
r = float(input("Valor: "))

print("Entradas", H, ",", h, ",", r)

from math import *

if (H > 0) and (h > 0) and (r > 0) and (H > h) and (H > 2*r):
	if (h <= r):
		v = (pi/3) * (h ** 2) * (3 * r - h)
		print("Volume: ", round(v * 1000, 3), "litros")
	elif (r < h) and (h <= H - r):
		v = (4 * pi * (r ** 3) / 6) + (pi * (r ** 2) * (h - r))
		print("Volume: ", round(v * 1000, 3), "litros")
	elif (h > H - r):
		v = ((4 * pi * (r ** 3))/ 6 ) + ((pi/3) * ((r ** 2) * (h - r)) * 2)
		print("Volume: ", round(v * 1000, 3), "litros")
else:
	print("Entradas invalidas")
		
-- EXECUTION TIME:
0.201802
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas 11.3 , 5.7 , 2.3
Volume:  81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 16:33:23) 
-- CODE:
H = float(input("Valor: "))
h = float(input("Valor: "))
r = float(input("Valor: "))

print("Entradas", H, ",", h, ",", r)

from math import *

if (H > 0) and (h > 0) and (r > 0) and (H > h) and (H > 2*r):
	if (h <= r):
		v = (pi/3) * (h ** 2) * (3 * r - h)
		print("Volume: ", round(v * 1000, 3), "litros")
	elif (r < h) and (h <= H - r):
		v = (4 * pi * (r ** 3) / 6) + (pi * (r ** 2) * (h - r))
		print("Volume: ", round(v * 1000, 3), "litros")
	elif (h > H - r):
		v = ((4 * pi * (r ** 3))/ 6 ) + ((pi/3) * ((r ** 2) * (h - r)) * 2)
		print("Volume: ", round(v * 1000, 3), "litros")
else:
	print("Entradas invalidas")
		
-- OUTPUT:
Entradas 11.3 , 5.7 , 2.3
Volume:  81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 16:33:46) 
-- CODE:
H = float(input("Valor: "))
h = float(input("Valor: "))
r = float(input("Valor: "))

print("Entradas", H, ",", h, ",", r)

from math import *

if (H > 0) and (h > 0) and (r > 0) and (H > h) and (H > 2*r):
	if (h <= r):
		v = (pi/3) * (h ** 2) * (3 * r - h)
		print("Volume: ", round(v * 1000, 3), "litros")
	elif (r < h) and (h <= H - r):
		v = (4 * pi * (r ** 3) / 6) + (pi * (r ** 2) * (h - r))
		print("Volume: ", round(v * 1000, 3), "litros")
	elif (h > H - r):
		v = ((4 * pi * (r ** 3))/ 6 ) + ((pi/3) * ((r ** 2) * (h - r)) * 2)
		print("Volume: ", round(v * 1000, 3), "litros")
else:
	print("Entradas invalidas")
		
-- EXECUTION TIME:
0.24706
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas 11.3 , 5.7 , 2.3
Volume:  81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 16:35:35) 
-- CODE:
H = float(input("Valor: "))
h = float(input("Valor: "))
r = float(input("Valor: "))

print("Entradas", H, ",", h, ",", r)

from math import *

if (H > 0) and (h > 0) and (r > 0) and (H > h) and (H > 2*r):
	if (h <= r):
		v = (pi/3) * (h ** 2) * (3 * r - h)
		print("Volume: ", round(v * 1000, 3), "litros")
	elif (r < h) and (h <= H - r):
		v = (4 * pi * (r ** 3) / 6) + (pi * (r ** 2) * (h - r))
		print("Volume: ", round(v * 1000, 3), "litros")
	else (h > H - r):
		v = ((4 * pi * (r ** 3))/ 6 ) + ((pi/3) * ((r ** 2) * (h - r)) * 2)
		print("Volume: ", round(v * 1000, 3), "litros")
else:
	print("Entradas invalidas")
		
-- ERROR:
File "XXXX", line 16
    else (h > H - r):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 16:35:58) 
-- CODE:
H = float(input("Valor: "))
h = float(input("Valor: "))
r = float(input("Valor: "))

print("Entradas", H, ",", h, ",", r)

from math import *

if (H > 0) and (h > 0) and (r > 0) and (H > h) and (H > 2*r):
	if (h <= r):
		v = (pi/3) * (h ** 2) * (3 * r - h)
		print("Volume: ", round(v * 1000, 3), "litros")
	elif (r < h) and (h <= H - r):
		v = (4 * pi * (r ** 3) / 6) + (pi * (r ** 2) * (h - r))
		print("Volume: ", round(v * 1000, 3), "litros")
	else:
		(h > H - r)
		v = ((4 * pi * (r ** 3))/ 6 ) + ((pi/3) * ((r ** 2) * (h - r)) * 2)
		print("Volume: ", round(v * 1000, 3), "litros")
else:
	print("Entradas invalidas")
		
-- OUTPUT:
Entradas 11.3 , 5.7 , 2.3
Volume:  81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 16:36:18) 
-- CODE:
H = float(input("Valor: "))
h = float(input("Valor: "))
r = float(input("Valor: "))

print("Entradas", H, ",", h, ",", r)

from math import *

if (H > 0) and (h > 0) and (r > 0) and (H > h) and (H > 2*r):
	if (h <= r):
		v = (pi/3) * (h ** 2) * (3 * r - h)
		print("Volume: ", round(v * 1000, 3), "litros")
	elif (r < h) and (h <= H - r):
		v = (4 * pi * (r ** 3) / 6) + (pi * (r ** 2) * (h - r))
		print("Volume: ", round(v * 1000, 3), "litros")
	else:
		(h > H - r)
		v = ((4 * pi * (r ** 3))/ 6 ) + ((pi/3) * ((r ** 2) * (h - r)) * 2)
		print("Volume: ", round(v * 1000, 3), "litros")
else:
	print("Entradas invalidas")
		
-- EXECUTION TIME:
0.140483
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas 11.3 , 5.7 , 2.3
Volume:  81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 16:36:47) 
-- CODE:
H = float(input("Valor: "))
h = float(input("Valor: "))
r = float(input("Valor: "))

print("Entradas", H, ",", h, ",", r)

from math import *

if (H > 0) and (h > 0) and (r > 0) and (H > h) and (H > 2*r):
	if (h <= r):
		v = (pi/3) * (h ** 2) * (3 * r - h)
		print("Volume: ", round(v * 1000, 3), "litros")
	elif (r < h) and (h <= H - r):
		v = (4 * pi * (r ** 3) / 6) + (pi * (r ** 2) * (h - r))
		print("Volume: ", round(v * 1000, 3), "litros")
	elif (h > H - r):
		v = ((4 * pi * (r ** 3))/ 6 ) + ((pi/3) * ((r ** 2) * (h - r)) * 2)
		print("Volume: ", round(v * 1000, 3), "litros")
else:
	print("Entradas invalidas")
		
-- EXECUTION TIME:
0.133429
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas 11.3 , 5.7 , 2.3
Volume:  81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 16:37:38) 
-- CODE:
H = float(input("Valor: "))
h = float(input("Valor: "))
r = float(input("Valor: "))

print("Entradas", H, ",", h, ",", r)

from math import *

if (H > 0) and (h > 0) and (r > 0) and (H > h) and (H > 2*r):
	if (h <= r):
		v = (pi/3) * (h ** 2) * (3 * r - h)
		print("Volume: ", round(v * 1000, 3), "litros")
	elif (r < h) and (h <= H - r):
		v = (4 * pi * (r ** 3) / 6) + (pi * (r ** 2) * (h - r))
		print("Volume: ", round(v * 1000, 3), "litros")
	elif (h > H - r):
		v = ((4 * pi * (r ** 3))/ 6 ) + ((pi/3) * ((r ** 2) * (h - r)) * 2)
		print("Volume: ", round(v * 1000, 3), "litros")
else:
	print("Entradas invalidas")
		
-- OUTPUT:
Entradas 11.3 , 5.7 , 2.3
Volume:  81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 16:37:59) 
-- CODE:
H = float(input("Valor: "))
h = float(input("Valor: "))
r = float(input("Valor: "))

print("Entradas", H, ",", h, ",", r)

from math import *

if (H > 0) and (h > 0) and (r > 0) and (H > h) and (H > 2*r):
	if (h <= r):
		v = (pi/3) * (h ** 2) * (3 * r - h)
		print("Volume: ", round(v * 1000, 3), "litros")
	elif (r < h) and (h <= H - r):
		v = (4 * pi * (r ** 3) / 6) + (pi * (r ** 2) * (h - r))
		print("Volume: ", round(v * 1000, 3), "litros")
	elif (h > H - r):
		v = ((4 * pi * (r ** 3))/ 6 ) + ((pi/3) * ((r ** 2) * (h - r)) * 2)
		print("Volume: ", round(v * 1000, 3), "litros")
else:
	print("Entradas invalidas")
		
-- EXECUTION TIME:
0.171293
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas 11.3 , 5.7 , 2.3
Volume:  81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 16:38:09) 
-- CODE:
H = float(input("Valor: "))
h = float(input("Valor: "))
r = float(input("Valor: "))

print("Entradas", H, ",", h, ",", r)

from math import *

if (H > 0) and (h > 0) and (r > 0) and (H > h) and (H > 2*r):
	if (h <= r):
		v = (pi/3) * (h ** 2) * (3 * r - h)
		print("Volume: ", round(v * 1000, 3), "litros")
	elif (r < h) and (h <= H - r):
		v = (4 * pi * (r ** 3) / 6) + (pi * (r ** 2) * (h - r))
		print("Volume: ", round(v * 1000, 3), "litros")
	elif (h > H - r):
		v = ((4 * pi * (r ** 3))/ 6 ) + ((pi/3) * ((r ** 2) * (h - r)) * 2)
		print("Volume: ", round(v * 1000, 3), "litros")
else:
	print("Entradas invalidas")
		
-- OUTPUT:
Entradas 11.3 , 5.7 , 2.3
Volume:  81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 16:38:34) 
-- CODE:
H = float(input("Valor: "))
h = float(input("Valor: "))
r = float(input("Valor: "))

print("Entradas:", H, ",", h, ",", r)

from math import *

if (H > 0) and (h > 0) and (r > 0) and (H > h) and (H > 2*r):
	if (h <= r):
		v = (pi/3) * (h ** 2) * (3 * r - h)
		print("Volume: ", round(v * 1000, 3), "litros")
	elif (r < h) and (h <= H - r):
		v = (4 * pi * (r ** 3) / 6) + (pi * (r ** 2) * (h - r))
		print("Volume: ", round(v * 1000, 3), "litros")
	elif (h > H - r):
		v = ((4 * pi * (r ** 3))/ 6 ) + ((pi/3) * ((r ** 2) * (h - r)) * 2)
		print("Volume: ", round(v * 1000, 3), "litros")
else:
	print("Entradas invalidas")
		
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume:  81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 16:38:48) 
-- CODE:
H = float(input("Valor: "))
h = float(input("Valor: "))
r = float(input("Valor: "))

print("Entradas:", H, ",", h, ",", r)

from math import *

if (H > 0) and (h > 0) and (r > 0) and (H > h) and (H > 2*r):
	if (h <= r):
		v = (pi/3) * (h ** 2) * (3 * r - h)
		print("Volume: ", round(v * 1000, 3), "litros")
	elif (r < h) and (h <= H - r):
		v = (4 * pi * (r ** 3) / 6) + (pi * (r ** 2) * (h - r))
		print("Volume: ", round(v * 1000, 3), "litros")
	elif (h > H - r):
		v = ((4 * pi * (r ** 3))/ 6 ) + ((pi/3) * ((r ** 2) * (h - r)) * 2)
		print("Volume: ", round(v * 1000, 3), "litros")
else:
	print("Entradas invalidas")
		
-- EXECUTION TIME:
0.211541
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume:  81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
