== TEST (2019-05-14 11:35:32) 
-- CODE:
p = int(input("Quantidade inicial de pirarucus no tanque: "))
pp = int(input("Percentual de crescimento mensal da quantidade de pirarucus no tanque: "))

anos = 0 

while ((p > 0) and (p < 12000)):
	m = int(input("A quantidade de pirarucus retirados para venda por mes: "))
	x = (pp * p)/100
	p = p + x - m
	anos = anos + 1
	
if (t < 0):
	print("ZERO")
else:
	print("MAXIMO")
print(anos)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    m = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 11:36:01) 
-- CODE:
p = int(input("Quantidade inicial de pirarucus no tanque: "))
pp = int(input("Percentual de crescimento mensal da quantidade de pirarucus no tanque: "))

anos = 0 

while ((p > 0) and (p < 12000)):
	m = int(input("A quantidade de pirarucus retirados para venda por mes: "))
	x = (pp * p)/100
	p = p + x - m
	anos = anos + 1
	
if (p < 0):
	print("ZERO")
else:
	print("MAXIMO")
print(anos)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    m = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 11:36:14) 
-- CODE:
p = int(input("Quantidade inicial de pirarucus no tanque: "))
pp = int(input("Percentual de crescimento mensal da quantidade de pirarucus no tanque: "))

anos = 0 

while ((p > 0) and (p < 12000)):
	m = int(input("A quantidade de pirarucus retirados para venda por mes: "))
	x = (pp * p)/100
	p = p + x - m
	anos = anos + 1
	
if (p < 0):
	print("ZERO")
else:
	print("MAXIMO")
print(anos)
-- EXECUTION TIME:
0.153163
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1723/2507/main.py", line 7, in <module>
    m = int(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 11:37:21) 
-- CODE:
p = int(input("Quantidade inicial de pirarucus no tanque: "))
pp = int(input("Percentual de crescimento mensal da quantidade de pirarucus no tanque: "))

anos = 0 

while ((p > 0) and (p < 12000)):
	m = int(input("A quantidade de pirarucus retirados para venda por mes: "))
	x = (pp * p)/100
	p = p + x - m
	anos = anos + 1
	
if (p < 0):
	print("ZERO")
else:
	print("MAXIMO")
print(anos)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    m = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 11:37:23) 
-- CODE:
p = int(input("Quantidade inicial de pirarucus no tanque: "))
pp = int(input("Percentual de crescimento mensal da quantidade de pirarucus no tanque: "))

anos = 0 

while ((p > 0) and (p < 12000)):
	m = int(input("A quantidade de pirarucus retirados para venda por mes: "))
	x = (pp * p)/100
	p = p + x - m
	anos = anos + 1
	
if (p < 0):
	print("ZERO")
else:
	print("MAXIMO")
print(anos)
-- EXECUTION TIME:
0.148239
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1723/2507/main.py", line 7, in <module>
    m = int(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 11:38:12) 
-- CODE:
p = int(input("Quantidade inicial de pirarucus no tanque: "))
pp = int(input("Percentual de crescimento mensal da quantidade de pirarucus no tanque: "))

anos = 0 

while ((p > 0) and (p < 8000)):
	m = int(input("A quantidade de pirarucus retirados para venda por mes: "))
	x = (pp * p)/100
	p = p + x - m
	anos = anos + 1

if (p < 0):
	print("ZERO")
else:
	print("MAXIMO")
print(anos)
-- OUTPUT:
MAXIMO
5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 11:38:14) 
-- CODE:
p = int(input("Quantidade inicial de pirarucus no tanque: "))
pp = int(input("Percentual de crescimento mensal da quantidade de pirarucus no tanque: "))

anos = 0 

while ((p > 0) and (p < 8000)):
	m = int(input("A quantidade de pirarucus retirados para venda por mes: "))
	x = (pp * p)/100
	p = p + x - m
	anos = anos + 1

if (p < 0):
	print("ZERO")
else:
	print("MAXIMO")
print(anos)
-- EXECUTION TIME:
0.143328
-- TEST CASE 1:
---- input:
1234
56
7
8
9
10
11
---- correct output:
MAXIMO
5
---- user output:
MAXIMO
5
-- TEST CASE 2:
---- input:
5432
1
987
654
4321
---- correct output:
ZERO
3
---- user output:
ZERO
3
-- TEST CASE 3:
---- input:
2468
35
1234
900
1
2
3
4
5
---- correct output:
MAXIMO
7
---- user output:
MAXIMO
7
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
