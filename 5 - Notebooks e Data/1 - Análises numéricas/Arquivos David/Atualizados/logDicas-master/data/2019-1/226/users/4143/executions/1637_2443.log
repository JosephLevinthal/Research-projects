== TEST (2019-04-10 20:14:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = int(input("Raio:"))
a = int(input("Altura:"))
n = int(input("Opcao desejada:"))
v1 = ((4*pi*(r)**3))/3
v2 = (pi*(a)**2)*(3*r - a)/3

if (n == 1):
	print(round(v2,4))
	
else:
	v3 = (v1 - v2)
	print(round(v3,4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    r = int(input())
ValueError: invalid literal for int() with base 10: '3.50'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 20:14:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = int(input("Raio:"))
a = int(input("Altura:"))
n = int(input("Opcao desejada:"))
v1 = ((4*pi*(r)**3))/3
v2 = (pi*(a)**2)*(3*r - a)/3

if (n == 1):
	print(round(v2,4))
	
else:
	v3 = (v1 - v2)
	print(round(v3,4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    r = int(input())
ValueError: invalid literal for int() with base 10: '3.50'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 20:15:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("Raio:"))
a = float(input("Altura:"))
n = int(input("Opcao desejada:"))
v1 = ((4*pi*(r)**3))/3
v2 = (pi*(a)**2)*(3*r - a)/3

if (n == 1):
	print(round(v2,4))
	
else:
	v3 = (v1 - v2)
	print(round(v3,4))
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 20:15:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("Raio:"))
a = float(input("Altura:"))
n = int(input("Opcao desejada:"))
v1 = ((4*pi*(r)**3))/3
v2 = (pi*(a)**2)*(3*r - a)/3

if (n == 1):
	print(round(v2,4))
	
else:
	v3 = (v1 - v2)
	print(round(v3,4))
-- EXECUTION TIME:
0.180637
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 11:19:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = int(input("Raio:"))
a = int(input("Altura:"))
n = int(input("Opcao desejada:"))
v1 = ((4*pi*(r)**3))/3
v2 = (pi*(a)**2)
-- EXECUTION TIME:
0.173612
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1637/2443/main.py", line 5, in <module>
    r = int(input())
ValueError: invalid literal for int() with base 10: '3.50'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:35:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = int(input("Raio:"))
a = int(input("Altura:"))
n = int(input("Opcao desejada:"))
v1 = ((4*pi*(r)**3))/3
v2 = ((pi*(a)**2)*(3*r - a))/3
if (n == 1):
	print(round(v1,4))
else:
	print(round(v2,4))
-- EXECUTION TIME:
0.15774
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1637/2443/main.py", line 5, in <module>
    r = int(input())
ValueError: invalid literal for int() with base 10: '3.50'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:35:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = int(input("Raio:"))
a = int(input("Altura:"))
n = int(input("Opcao desejada:"))
v1 = ((4*pi*(r)**3))/3
v2 = ((pi*(a)**2)*(3*r - a))/3
if (n == 1):
	print(round(v1,4))
else:
	print(round(v2,4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    r = int(input())
ValueError: invalid literal for int() with base 10: '3.50'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:36:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("Raio:"))
a = int(input("Altura:"))
n = int(input("Opcao desejada:"))
v1 = ((4*pi*(r)**3))/3
v2 = ((pi*(a)**2)*(3*r - a))/3
if (n == 1):
	print(round(v1,4))
else:
	print(round(v2,4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '0.95'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:36:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("Raio:"))
a = float(input("Altura:"))
n = int(input("Opcao desejada:"))
v1 = ((4*pi*(r)**3))/3
v2 = ((pi*(a)**2)*(3*r - a))/3
if (n == 1):
	print(round(v1,4))
else:
	print(round(v2,4))
-- OUTPUT:
179.5944
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:36:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("Raio:"))
a = float(input("Altura:"))
n = int(input("Opcao desejada:"))
v1 = ((4*pi*(r)**3))/3
v2 = ((pi*(a)**2)*(3*r - a))/3
if (n == 1):
	print(round(v1,4))
else:
	print(round(v2,4))
-- OUTPUT:
179.5944
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:37:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("Raio:"))
a = float(input("Altura:"))
n = int(input("Opcao desejada:"))
v1 = ((4*pi*(r)**3))/3
v2 = ((pi*(a)**2)*((3*r) - a))/3
if (n == 1):
	print(round(v1,4))
else:
	print(round(v2,4))
-- OUTPUT:
179.5944
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:38:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("Raio:"))
a = float(input("Altura:"))
n = int(input("Opcao desejada:"))
v1 = ((4*pi*(r)**3))/3
v2 = ((pi*(a)**2)*((3*r)-a))/3
if (n == 1):
	print(round(v1,4))
else:
	print(round(v2,4))
-- OUTPUT:
179.5944
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:39:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("Raio:"))
a = float(input("Altura:"))
n = int(input("Opcao desejada:"))
v1 = ((4*pi*(r)**3))/3
v2 = ((pi*(a)**2)*((3*r)-a))/3
if (n == 1):
	print(round(v1,4))
else:
	print(round(v2,4))
-- OUTPUT:
179.5944
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:42:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("Raio:"))
a = float(input("Altura:"))
n = int(input("Opcao desejada:"))
v1 = ((4*pi*(r)**3))/3
v2 = ((pi*(a)**2)*((3*r)-a))/3
eq = (v1 - v2)
if (n == 1):
	print(round(v2,4))
else:
	print(round(eq,4))
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:42:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("Raio:"))
a = float(input("Altura:"))
n = int(input("Opcao desejada:"))
v1 = ((4*pi*(r)**3))/3
v2 = ((pi*(a)**2)*((3*r)-a))/3
eq = (v1 - v2)
if (n == 1):
	print(round(v2,4))
else:
	print(round(eq,4))
-- EXECUTION TIME:
0.166203
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
