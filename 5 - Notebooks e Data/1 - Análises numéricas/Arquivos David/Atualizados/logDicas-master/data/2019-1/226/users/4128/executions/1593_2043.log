== SUBMITION (2019-03-25 19:35:17) 
-- CODE:
n1 = float(input("nota 1:"))
n2 = float(input("nota 2:"))
n3 = float(input("nota 3:"))
n4 = float(input("nota 4:"))

nfp = n1 + n2+ n3+ n4
nf = nfp/4
print(round(nf,2))
-- EXECUTION TIME:
0.150527
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
8.12
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
7.0
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
7.4
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 19:35:45) 
-- CODE:
n1 = float(input("nota 1:"))
n2 = float(input("nota 2:"))
n3 = float(input("nota 3:"))
n4 = float(input("nota 4:"))

nfp = n1 + n2+ n3+ n4
nf = nfp//4
print(round(nf,2))
-- EXECUTION TIME:
0.163276
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
8.0
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
7.0
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
7.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 19:35:49) 
-- CODE:
n1 = float(input("nota 1:"))
n2 = float(input("nota 2:"))
n3 = float(input("nota 3:"))
n4 = float(input("nota 4:"))

nfp = n1 + n2+ n3+ n4
nf = nfp//4
print(round(nf,2))
-- OUTPUT:
8.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 19:39:40) 
-- CODE:
n1 = float(input("nota 1:"))
n2 = float(input("nota 2:"))
n3 = float(input("nota 3:"))
n4 = float(input("nota 4:"))

x1 = n1* 1
x2 = n2* 2
x3 = n3* 3
x4 = n4* 4

nfp = x1+ x2+ x3 +x4
nf = nfp/4
print(round(nf,2))
-- EXECUTION TIME:
0.198456
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
20.5
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
17.5
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
19.84
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 19:39:42) 
-- CODE:
n1 = float(input("nota 1:"))
n2 = float(input("nota 2:"))
n3 = float(input("nota 3:"))
n4 = float(input("nota 4:"))

x1 = n1* 1
x2 = n2* 2
x3 = n3* 3
x4 = n4* 4

nfp = x1+ x2+ x3 +x4
nf = nfp/4
print(round(nf,2))
-- OUTPUT:
20.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 10:25:58) 
-- CODE:
#n referente a nota, nfp referente a nota final parcial, nf nota final.
n1 = float(input("nota 1:"))
n2 = float(input("nota 2:"))
n3 = float(input("nota 3:"))
n4 = float(input("nota 4:"))

x1 = n1* 1
x2 = n2* 2
x3 = n3* 3
x4 = n4* 4

nfp = x1+ x2+ x3 +x4
nf = nfp/10
print(round(nf,2))
-- EXECUTION TIME:
0.141292
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
8.2
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
7.0
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
7.94
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 12:17:36) 
-- CODE:
#n referente a nota, nfp referente a nota final parcial, nf nota final.
n1 = float(input("nota 1:"))
n2 = float(input("nota 2:"))
n3 = float(input("nota 3:"))
n4 = float(input("nota 4:"))

x1 = n1* 1
x2 = n2* 2
x3 = n3* 3
x4 = n4* 4

nfp = x1+ x2+ x3 +x4
nf = nfp/10
print(round(nf,2))
-- EXECUTION TIME:
0.200232
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
8.2
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
7.0
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
7.94
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 12:32:41) 
-- CODE:
#n referente a nota, nfp referente a nota final parcial, nf nota final.
n1 = float(input("nota 1:"))
n2 = float(input("nota 2:"))
n3 = float(input("nota 3:"))
n4 = float(input("nota 4:"))

x1 = n1* 1
x2 = n2* 2
x3 = n3* 3
x4 = n4* 4

nfp = x1+ x2+ x3 +x4
nf = nfp/10
print(round(nf,2))
-- EXECUTION TIME:
0.20474
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
8.2
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
7.0
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
7.94
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
