== TEST (2019-03-23 09:37:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

num = int(input("Digite um numero de quatro digitos: "))
a = (num//1000)

-- OUTPUT:
primeiro_caso_de_teste
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 09:37:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

num = int(input("Digite um numero de quatro digitos: "))
print(num//1000)

-- OUTPUT:
9
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 09:45:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

num = int(input("Digite um numero de quatro digitos: "))
a  = (num // 1000)
a1 = (num % 1000)
b  = (a1//100)
b1 = (a1 % 100)
c  = (b1 // 10)
c1 = (b1 % 10)
print(a,b,c)
-- OUTPUT:
9 1 7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 09:50:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

num = int(input("Digite um numero de quatro digitos: "))
a  = (num // 1000)
a1 = (num % 1000)
b  = (a1 //100)
b1 = (a1 % 100)
c  = (b1 // 10)
c1 = (b1 % 10)
d  = (c1)
print(a + b + c + d)
-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 09:50:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

num = int(input("Digite um numero de quatro digitos: "))
a  = (num // 1000)
a1 = (num % 1000)
b  = (a1 //100)
b1 = (a1 % 100)
c  = (b1 // 10)
c1 = (b1 % 10)
d  = (c1)
print(a + b + c + d)
-- EXECUTION TIME:
0.124709
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
