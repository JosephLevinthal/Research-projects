== TEST (2019-04-29 15:18:15) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("insira a altura do tanque: "))
h=float(input("insira o nivel de combustivel no tanque: "))
r=float(input("insira o raio dos bojos semiesfericos inferior e superior: "))
from math import*
if ((h>0)and(H>0)and(r>0))and(H>h)and(H>2*r):
	if(h<r):
		vol=(1/3)*pi*(h**2)*(3*r-h)
	elif(h<(H-r)):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(h-r)
	elif(h<=H):
		vol=(4/3)*pi*(r**5)+pi*(r**2)*(H-2*r)-(1/3)*pi*((H-h)**2)*(5*r-H+h)
	else:
		print("foi7")
-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:18:46) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("insira a altura do tanque: "))
h=float(input("insira o nivel de combustivel no tanque: "))
r=float(input("insira o raio dos bojos semiesfericos inferior e superior: "))
from math import*
if ((h>0)and(H>0)and(r>0))and(H>h)and(H>2*r):
	if(h<r):
		vol=(1/3)*pi*(h**2)*(3*r-h)
	elif(h<(H-r)):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(h-r)
	elif(h<=H):
		vol=(4/3)*pi*(r**5)+pi*(r**2)*(H-2*r)-(1/3)*pi*((H-h)**2)*(5*r-H+h)
	else:
		print("foi7")
	print(vol)
-- OUTPUT:
81.98719067828401
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:29:04) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("insira a altura do tanque: "))
h=float(input("insira o nivel de combustivel no tanque: "))
r=float(input("insira o raio dos bojos semiesfericos inferior e superior: "))
from math import*
if ((h>0)and(H>0)and(r>0))and(H>h)and(H>2*r):
	if(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
	elif(h<(H-r)):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(h-r)
	elif(h<=H):
		vol=(4/3)*pi*(r**3)+pi*(r**2)*(H-2*r)-(pi/3)*((H-h)**2)*(3*r-H+h)
	else:
		print("foi7")
	print(vol)
-- OUTPUT:
81.98719067828401
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:31:25) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("insira a altura do tanque: "))
h=float(input("insira o nivel de combustivel no tanque: "))
r=float(input("insira o raio dos bojos semiesfericos inferior e superior: "))
from math import*
if ((h>0)and(H>0)and(r>0))and(H>h)and(H>2*r):
	if(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
	elif(h<(H-r)):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(h-r)
	elif(h<=H):
		vol=(4/3)*pi*(r**3)+pi*(r**2)*(H-2*r)-(pi/3)*((H-h)**2)*(3*r-H+h)
	else:
		print("foi7")
	print(vol*1000)
-- OUTPUT:
81987.19067828401
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:31:56) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("insira a altura do tanque: "))
h=float(input("insira o nivel de combustivel no tanque: "))
r=float(input("insira o raio dos bojos semiesfericos inferior e superior: "))
from math import*
if ((h>0)and(H>0)and(r>0))and(H>h)and(H>2*r):
	if(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
	elif(h<(H-r)):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(h-r)
	elif(h<=H):
		vol=(4/3)*pi*(r**3)+pi*(r**2)*(H-2*r)-(pi/3)*((H-h)**2)*(3*r-H+h)
	else:
		print("foi7")
	print(round(vol*1000,3))
-- OUTPUT:
81987.191
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:31:59) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("insira a altura do tanque: "))
h=float(input("insira o nivel de combustivel no tanque: "))
r=float(input("insira o raio dos bojos semiesfericos inferior e superior: "))
from math import*
if ((h>0)and(H>0)and(r>0))and(H>h)and(H>2*r):
	if(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
	elif(h<(H-r)):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(h-r)
	elif(h<=H):
		vol=(4/3)*pi*(r**3)+pi*(r**2)*(H-2*r)-(pi/3)*((H-h)**2)*(3*r-H+h)
	else:
		print("foi7")
	print(round(vol*1000,3))
-- OUTPUT:
81987.191
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:32:47) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("insira a altura do tanque: "))
h=float(input("insira o nivel de combustivel no tanque: "))
r=float(input("insira o raio dos bojos semiesfericos inferior e superior: "))
from math import*
if ((h>0)and(H>0)and(r>0))and(H>h)and(H>2*r):
	if(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
	elif(h<(H-r)):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(h-r)
	elif(h<=H):
		vol=(4/3)*pi*(r**3)+pi*(r**2)*(H-2*r)-(pi/3)*((H-h)**2)*(3*r-H+h)
else:
	print("foi7")
print(round(vol*1000,3))
-- OUTPUT:
81987.191
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:33:15) 
-- CODE:
H=float(input("insira a altura do tanque: "))
h=float(input("insira o nivel de combustivel no tanque: "))
r=float(input("insira o raio dos bojos semiesfericos inferior e superior: "))
from math import*
if ((h>0)and(H>0)and(r>0))and(H>h)and(H>2*r):
	if(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
	elif(h<(H-r)):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(h-r)
	elif(h<=H):
		vol=(4/3)*pi*(r**3)+pi*(r**2)*(H-2*r)-(pi/3)*((H-h)**2)*(3*r-H+h)
else:
	print("foi7")
print(round(vol*1000,3))
-- OUTPUT:
81987.191
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:33:40) 
-- CODE:
H=float(input("insira a altura do tanque: "))
h=float(input("insira o nivel de combustivel no tanque: "))
r=float(input("insira o raio dos bojos semiesfericos inferior e superior: "))
from math import*
if ((h>0)and(H>0)and(r>0))and(H>h)and(H>2*r):
	if(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
	elif(h<(H-r)):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(h-r)
	elif(h<=H):
		vol=(4/3)*pi*(r**3)+pi*(r**2)*(H-2*r)-(pi/3)*((H-h)**2)*(3*r-H+h)
else:
	print("foi7")
print(round(vol*1000,3))
-- OUTPUT:
81987.191
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:38:20) 
-- CODE:
H=float(input("insira a altura do tanque: "))
h=float(input("insira o nivel de combustivel no tanque: "))
r=float(input("insira o raio dos bojos semiesfericos inferior e superior: "))
from math import*
if ((h>0)and(H>0)and(r>0))and(H>h)and(H>2*r):
	if(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		v=round((vol*1000),3)
		print("Entradas:",H,",",h,",", r)
		print("Volume:",v,"litros")
	elif(h<(H-r)):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(h-r)
		v=round((vol*1000),3)
		print("Entradas:",H,",",h,",", r)
		print("Volume:",v,"litros")
	elif(h<=H):
		vol=(4/3)*pi*(r**3)+pi*(r**2)*(H-2*r)-(pi/3)*((H-h)**2)*(3*r-H+h)
		v=round((vol*1000),3)
		print("Entradas:",H,",",h,",", r)
		print("Volume:",v,"litros")
else:
	print("Entradas:",H,",",h,",", r)
	print("Entradas invalidas")

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 15:38:38) 
-- CODE:
H=float(input("insira a altura do tanque: "))
h=float(input("insira o nivel de combustivel no tanque: "))
r=float(input("insira o raio dos bojos semiesfericos inferior e superior: "))
from math import*
if ((h>0)and(H>0)and(r>0))and(H>h)and(H>2*r):
	if(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		v=round((vol*1000),3)
		print("Entradas:",H,",",h,",", r)
		print("Volume:",v,"litros")
	elif(h<(H-r)):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(h-r)
		v=round((vol*1000),3)
		print("Entradas:",H,",",h,",", r)
		print("Volume:",v,"litros")
	elif(h<=H):
		vol=(4/3)*pi*(r**3)+pi*(r**2)*(H-2*r)-(pi/3)*((H-h)**2)*(3*r-H+h)
		v=round((vol*1000),3)
		print("Entradas:",H,",",h,",", r)
		print("Volume:",v,"litros")
else:
	print("Entradas:",H,",",h,",", r)
	print("Entradas invalidas")

-- EXECUTION TIME:
0.192453
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
