== TEST (2019-04-04 15:46:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("animal")
if (p = corvo):
	x = "cervo eh patrono do Harry Potter"
else:
	x = "nao eh patrono do Harry Potter"
print("x")
-- ERROR:
File "XXXX", line 5
    if (p = corvo):
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 15:46:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("animal")
if (p == corvo):
	x = "cervo eh patrono do Harry Potter"
else:
	x = "nao eh patrono do Harry Potter"
print("x")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if (p == corvo):
NameError: name 'corvo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 15:46:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("animal: ")
if (p == corvo):
	x = "cervo eh patrono do Harry Potter"
else:
	x = "nao eh patrono do Harry Potter"
print("x")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if (p == corvo):
NameError: name 'corvo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 15:46:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("animal: ")
if (p == "corvo"):
	x = "cervo eh patrono do Harry Potter"
else:
	x = "nao eh patrono do Harry Potter"
print("x")
-- OUTPUT:
x
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 15:47:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("animal: ")
if (p == "corvo"):
	x = "cervo eh patrono do Harry Potter"
else:
	x = "nao eh patrono do Harry Potter"
print(x)
-- OUTPUT:
nao eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 15:47:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("animal: ")
if (p == "corvo"):
	x = "cervo eh patrono do Harry Potter"
else:
	x = "nao eh patrono do Harry Potter"
print(x)
-- OUTPUT:
nao eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-04 15:47:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("animal: ")
if (p == "corvo"):
	x = "cervo eh patrono do Harry Potter"
else:
	x = "nao eh patrono do Harry Potter"
print(x)
-- EXECUTION TIME:
0.219739
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
nao eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 15:47:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("animal: ")
if (p == "corvo"):
	x = "cervo eh patrono do Harry Potter"
else:
	x = "nao eh patrono do Harry Potter"
print(x)
-- OUTPUT:
nao eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 15:48:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("animal: ")
if (p == "corvo"):
	x = p "cervo eh patrono do Harry Potter"
else:
	x = p "nao eh patrono do Harry Potter"
print(x)
-- ERROR:
File "XXXX", line 6
    x = p "cervo eh patrono do Harry Potter"
                                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 15:48:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("animal: ")
if (p == "corvo"):
	x = p, "cervo eh patrono do Harry Potter"
else:
	x = p, "nao eh patrono do Harry Potter"
print(x)
-- OUTPUT:
('cervo', 'nao eh patrono do Harry Potter')
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-04 15:49:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("animal: ")
if (p == "corvo"):
	x = p, "cervo eh patrono do Harry Potter"
else:
	x = p, "nao eh patrono do Harry Potter"
print(x)
-- EXECUTION TIME:
0.156769
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
('cervo', 'nao eh patrono do Harry Potter')
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
('bode', 'nao eh patrono do Harry Potter')
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 15:49:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("animal: ")
if (p = "corvo"):
	x = p, "cervo eh patrono do Harry Potter"
else:
	x = p, "nao eh patrono do Harry Potter"
print(x)
-- ERROR:
File "XXXX", line 5
    if (p = "corvo"):
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 15:50:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("animal: ")
if (p == "corvo"):
	x = p, "cervo eh patrono do Harry Potter"
else:
	x = p, "nao eh patrono do Harry Potter"
print(x)
-- OUTPUT:
('cervo', 'nao eh patrono do Harry Potter')
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 15:50:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("animal: ")
if (p == "corvo"):
	x =  "cervo eh patrono do Harry Potter"
else:
	x =  "nao eh patrono do Harry Potter"
print(x)
-- OUTPUT:
nao eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 15:50:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("animal: ")
if (p == "corvo"):
	x =  "cervo eh patrono do Harry Potter"
else:
	x =  "nao eh patrono do Harry Potter"
print(x)
-- OUTPUT:
nao eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 15:51:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("animal: ")
if (p == "corvo"):
	x = "p" "cervo eh patrono do Harry Potter"
else:
	x = "p" "nao eh patrono do Harry Potter"
print(x)
-- OUTPUT:
pnao eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 15:51:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("animal: ")
if (p == "corvo"):
	x = "p" "cervo eh patrono do Harry Potter"
else:
	x = "p " "nao eh patrono do Harry Potter"
print(x)
-- OUTPUT:
p nao eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 15:51:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("animal: ")
if (p == "corvo"):
	x = "p" "cervo eh patrono do Harry Potter"
else:
	x = "p " "nao eh patrono do Harry Potter"
print(x)
-- OUTPUT:
p nao eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 15:52:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("animal: ")
if (p == "corvo"):
	x = "p ", "cervo eh patrono do Harry Potter"
else:
	x = "p ", "nao eh patrono do Harry Potter"
print(x)
-- OUTPUT:
('p ', 'nao eh patrono do Harry Potter')
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 16:08:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("animal: ")
if (p == "corvo"):
	x = "cervo eh patrono do Harry Potter"
else:
	x = "<p> nao eh patrono do Harry Potter"
print(x)
-- OUTPUT:
<p> nao eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 16:08:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("animal: ")
if (p == "corvo"):
	x = "cervo eh patrono do Harry Potter"
else:
	x = "<p> nao eh patrono do Harry Potter"
print(x)
-- OUTPUT:
<p> nao eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 16:09:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("animal: ")
if (p == "corvo"):
	x = "cervo eh patrono do Harry Potter"
else:
	x = <p> "nao eh patrono do Harry Potter"
print(x)
-- ERROR:
File "XXXX", line 8
    x = <p> "nao eh patrono do Harry Potter"
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:23:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("animal: ")
if (p == "corvo"):
	x = "cervo eh patrono do Harry Potter"
else:
	x = <p> "nao eh patrono do Harry Potter"
print(x)
-- ERROR:
File "XXXX", line 8
    x = <p> "nao eh patrono do Harry Potter"
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:29:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("animal: ")
if (p == "corvo"):
	x = "cervo eh patrono do Harry Potter"
else:
	x = p + "nao eh patrono do Harry Potter"
print(x)
-- OUTPUT:
cervonao eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:29:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("animal: ")
if (p == "corvo"):
	x = "cervo eh patrono do Harry Potter"
else:
	x = p + " nao eh patrono do Harry Potter"
print(x)
-- OUTPUT:
cervo nao eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:30:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("animal: ")
if (p == "corvo"):
	x = "cervo eh patrono do Harry Potter"
else:
	x = p + " nao eh patrono do Harry Potter"
print(x)
-- OUTPUT:
cervo nao eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 14:30:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("animal: ")
if (p == "corvo"):
	x = "cervo eh patrono do Harry Potter"
else:
	x = p + " nao eh patrono do Harry Potter"
print(x)
-- EXECUTION TIME:
0.19322
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo nao eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:31:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("animal: ")
if (p == "corvo"):
	x = "cervo eh patrono do Harry Potter"
else:
	x = p + " nao eh patrono do Harry Potter"
print(x)
-- OUTPUT:
cervo nao eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 14:32:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("animal: ")
if (p == "corvo"):
	x = "cervo eh patrono do Harry Potter"
else:
	x = p + " nao eh patrono do Harry Potter"
print(x)
-- EXECUTION TIME:
0.148889
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo nao eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:03:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("animal: ")
if (p == "corvo"):
	x = "cervo eh patrono do Harry Potter"
else:
	x = p + " nao eh patrono do Harry Potter"
print(x)
-- OUTPUT:
cervo nao eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:04:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("animal: ")
if (p == "corvo"):
	x = "cervo eh patrono do Harry Potter"
else:
	x = p + " nao eh patrono do Harry Potter"
print(x)
-- EXECUTION TIME:
0.100942
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo nao eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:08:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("animal: ")
if (p == "cervo"):
	x = "cervo eh patrono do Harry Potter"
else:
	x = p + " nao eh patrono do Harry Potter"
print(x)
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:08:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("animal: ")
if (p == "cervo"):
	x = "cervo eh patrono do Harry Potter"
else:
	x = p + " nao eh patrono do Harry Potter"
print(x)
-- EXECUTION TIME:
0.149234
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
