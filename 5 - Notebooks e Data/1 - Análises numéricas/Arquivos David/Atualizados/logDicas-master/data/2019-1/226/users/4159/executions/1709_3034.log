== TEST (2019-05-02 10:25:23) 
-- CODE:
from math import*
x = (float(input("valor de x: ")))
if(x>=-4 and x<0):
	y = round(abs(x)**0.5, 4)
elif(x==0):
	y = 0
elif(x>0 and x<=4):
	y = round(x**0.5, 4)
else:
	y = "entrada invalida"
print(y)
-- OUTPUT:
1.6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:25:51) 
-- CODE:
from math import*
x = (float(input("valor de x: ")))
if(x>=-4 and x<0):
	y = round(abs(x)**0.5, 4)
elif(x==0):
	y = 0
elif(x>0 and x<=4):
	y = round(x**0.5, 4)
else:
	y = "entrada invalida"
print(y)
-- OUTPUT:
1.6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:26:02) 
-- CODE:
from math import*
x = (float(input("valor de x: ")))
if(x>=-4 and x<0):
	y = round(abs(x)**0.5, 4)
elif(x==0):
	y = 0
elif(x>0 and x<=4):
	y = round(x**0.5, 4)
else:
	y = "entrada invalida"
print(y)
-- OUTPUT:
1.6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:26:11) 
-- CODE:
from math import*
x = (float(input("valor de x: ")))
if(x>=-4 and x<0):
	y = round(abs(x)**0.5, 4)
elif(x==0):
	y = 0
elif(x>0 and x<=4):
	y = round(x**0.5, 4)
else:
	y = "entrada invalida"
print(y)
-- OUTPUT:
1.6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:26:18) 
-- CODE:
from math import*
x = (float(input("valor de x: ")))
if(x>=-4 and x<0):
	y = round(abs(x)**0.5, 4)
elif(x==0):
	y = 0
elif(x>0 and x<=4):
	y = round(x**0.5, 4)
else:
	y = "entrada invalida"
print(y)
-- OUTPUT:
1.6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 10:26:35) 
-- CODE:
from math import*
x = (float(input("valor de x: ")))
if(x>=-4 and x<0):
	y = round(abs(x)**0.5, 4)
elif(x==0):
	y = 0
elif(x>0 and x<=4):
	y = round(x**0.5, 4)
else:
	y = "entrada invalida"
print(y)
-- EXECUTION TIME:
0.166044
-- TEST CASE 1:
---- input:
2.56
---- correct output:
1.6
---- user output:
1.6
-- TEST CASE 2:
---- input:
3.99
---- correct output:
1.9975
---- user output:
1.9975
-- TEST CASE 3:
---- input:
-3.99
---- correct output:
1.9975
---- user output:
1.9975
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
