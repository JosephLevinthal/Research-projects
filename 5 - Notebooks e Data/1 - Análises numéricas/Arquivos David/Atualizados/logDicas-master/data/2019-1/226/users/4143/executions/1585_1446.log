== TEST (2019-03-21 11:53:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = 5 
print(float(round(2/3 * 5, 3)))

-- OUTPUT:
3.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 11:53:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = 5 
print(float(round(2/3 * 5, 3)))

-- EXECUTION TIME:
0.133648
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
3.333
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
3.333
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
3.333
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:54:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = int(input(" Litros comprados:")) 


print(float(round(2/3 * var1, 3)))

-- OUTPUT:
4.667
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 11:54:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = int(input(" Litros comprados:")) 


print(float(round(2/3 * var1, 3)))

-- EXECUTION TIME:
0.126234
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
4.667
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:

-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
10.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 11:55:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = int(input(" Litros comprados:")) 


print(round(2/3 * var1, 3)))

-- EXECUTION TIME:
0.170593
-- ERROR:
  File "/home/codebench/codes/1585/1446/main.py", line 7
    print(round(2/3 * var1, 3)))
                               ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:56:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = int(input(" Litros comprados:")) 
var2 = 5 - 3.333

print(var2)

-- OUTPUT:
1.6669999999999998
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:57:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = int(input(" Litros comprados:")) 
var2 = 5 - 3.333

print(round(var2 , 3))

-- OUTPUT:
1.667
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 11:57:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = int(input(" Litros comprados:")) 
var2 = 5 - 3.333

print(round(var2 , 3))

-- EXECUTION TIME:
0.194977
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
1.667
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:

-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
1.667
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:59:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = int(input(" Litros comprados:")) 
var3 = 2/3 * 5
var2 = 5 - var3 

print(round(var2 , 3))

-- OUTPUT:
1.667
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 11:59:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = int(input(" Litros comprados:")) 
var3 = 2/3 * 5
var2 = 5 - var3 

print(round(var2 , 3))

-- EXECUTION TIME:
0.189277
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
1.667
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:

-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
1.667
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 12:16:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = float(input(" Litros comprados:")) 
var2 = var1 * (1/3)
print(var2)

-- OUTPUT:
2.333333333333333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 12:16:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = float(input(" Litros comprados:")) 
var2 = var1 * (1/3)
print(var2)

-- EXECUTION TIME:
0.198509
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
2.333333333333333
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
6.666666666666666
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
5.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 12:17:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = float(input(" Litros comprados:")) 
var2 = var1 * (1/3)
print(round(var2, 3)

-- EXECUTION TIME:
0.213185
-- ERROR:
  File "/home/codebench/codes/1585/1446/main.py", line 7
    
                        ^
SyntaxError: unexpected EOF while parsing

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 12:18:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = float(input(" Litros comprados:")) 
var2 = 5 * (1/3)
print(var2)

-- OUTPUT:
1.6666666666666665
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 12:19:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = float(input(" Litros comprados:")) 
var2 = 5 * (1/3)
print(round(var2,3))


-- OUTPUT:
1.667
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 12:19:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = float(input(" Litros comprados:")) 
var2 = 5 * (1/3)
Va3 = 5 - var2
print(round(var3,3))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(round(var3,3))
NameError: name 'var3' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 12:20:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = float(input(" Litros comprados:")) 
var2 = 5 * (1/3)
var3 = 5 - var2
print(round(var3,3))


-- OUTPUT:
3.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 12:20:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = float(input(" Litros comprados:")) 
var2 = 5 * (1/3)
var3 = 5 - var2
print(round(var3,3))


-- EXECUTION TIME:
0.136757
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
3.333
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
3.333
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
3.333
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 12:21:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = float(input(" Litros comprados:")) 
var2 = var1 * (1/3)

print(round(var2,3))


-- EXECUTION TIME:
0.115685
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
2.333
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
6.667
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
5.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
