== TEST (2019-04-06 21:05:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("insira o raio do tanque: "))
a = float(input("insira a altura do tanque: "))
opcao = input("insira a opcao desejada: (1/2)")

from math import *
Vr = (4 * pi * (r**3))/3

Vra1 = (pi * (a**2))
Vra2 = ((3 * r) - a)
Vrat = (Vra1 * Vra2)/3

if(opcao == "1"):
	mensagem = Vr
	print(round(Vr,2))
else:
	mensagem = Vrat
	print(round(Vrat,2))



-- OUTPUT:
179.59
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 21:07:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("insira o raio do tanque: "))
a = float(input("insira a altura do tanque: "))
opcao = input("insira a opcao desejada: (1/2)")

from math import *
Vr = (4 * pi * (r**3))/3

Vra1 = (pi * (a**2))
Vra2 = ((3 * r) - a)
Vrat = (Vra1 * Vra2)/3

if(opcao == "1"):
	mensagem = Vr
	print(round(Vr,4))
else:
	mensagem = Vrat
	print(round(Vrat,4))



-- EXECUTION TIME:
0.138345
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
179.5944
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
19.9983
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 21:07:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("insira o raio do tanque: "))
a = float(input("insira a altura do tanque: "))
opcao = input("insira a opcao desejada: (1/2)")

from math import *
Vr = (4 * pi * (r**3))/3

Vra1 = (pi * (a**2))
Vra2 = ((3 * r) - a)
Vrat = (Vra1 * Vra2)/3

if(opcao == "1"):
	mensagem = Vr
	print(round(Vr,4))
else:
	mensagem = Vrat
	print(round(Vrat,4))



-- OUTPUT:
179.5944
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 21:09:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("insira o raio do tanque: "))
a = float(input("insira a altura do tanque: "))
opcao = input("insira a opcao desejada: (1/2)")

from math import *
Vr = (4 * pi * (r**3))/3

Vra1 = (pi * (a**2))
Vra2 = ((3 * r) - a)
Vrat = (Vra1 * Vra2)/3

if(opcao == "1"):
	mensagem = Vrat
	print(round(Vrat,4))
else:
	mensagem = Vr
	print(round(Vr,4))



-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 21:09:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("insira o raio do tanque: "))
a = float(input("insira a altura do tanque: "))
opcao = input("insira a opcao desejada: (1/2)")

from math import *
Vr = (4 * pi * (r**3))/3

Vra1 = (pi * (a**2))
Vra2 = ((3 * r) - a)
Vrat = (Vra1 * Vra2)/3

if(opcao == "1"):
	mensagem = Vrat
	print(round(Vrat,4))
else:
	mensagem = Vr
	print(round(Vr,4))



-- EXECUTION TIME:
0.165777
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
310.3391
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 21:10:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("insira o raio do tanque: "))
a = float(input("insira a altura do tanque: "))
opcao = input("insira a opcao desejada: (1/2)")

from math import *
Vr = (4 * pi * (r**3)
Vr1 = Vr/3

Vra1 = (pi * (a**2))
Vra2 = ((3 * r) - a)
Vrat = (Vra1 * Vra2)/3

if(opcao == "1"):
	mensagem = Vrat
	print(round(Vrat,4))
else:
	mensagem = Vr
	print(round(Vr,4))



-- ERROR:
File "XXXX", line 10
    Vr1 = Vr/3
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 21:11:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("insira o raio do tanque: "))
a = float(input("insira a altura do tanque: "))
opcao = input("insira a opcao desejada: (1/2)")

from math import *
Vr = (4 * pi * (r**3)
Vrr = Vr/3

Vra1 = (pi * (a**2))
Vra2 = ((3 * r) - a)
Vrat = (Vra1 * Vra2)/3

if(opcao == "1"):
	mensagem = Vrat
	print(round(Vrat,4))
else:
	mensagem = Vr
	print(round(Vr,4))



-- ERROR:
File "XXXX", line 10
    Vrr = Vr/3
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 21:11:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("insira o raio do tanque: "))
a = float(input("insira a altura do tanque: "))
opcao = input("insira a opcao desejada: (1/2)")

from math import *
Vr = (4 * pi * (r**3)
Vri = Vr/3

Vra1 = (pi * (a**2))
Vra2 = ((3 * r) - a)
Vrat = (Vra1 * Vra2)/3

if(opcao == "1"):
	mensagem = Vrat
	print(round(Vrat,4))
else:
	mensagem = Vr
	print(round(Vr,4))



-- ERROR:
File "XXXX", line 10
    Vri = Vr/3
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 21:12:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("insira o raio do tanque: "))
a = float(input("insira a altura do tanque: "))
opcao = input("insira a opcao desejada: (1/2)")

from math import *
Vr = (4 * pi * (r**3)
V = Vr/3

Vra1 = (pi * (a**2))
Vra2 = ((3 * r) - a)
Vrat = (Vra1 * Vra2)/3

if(opcao == "1"):
	mensagem = Vrat
	print(round(Vrat,4))
else:
	mensagem = Vr
	print(round(Vr,4))



-- ERROR:
File "XXXX", line 10
    V = Vr/3
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 21:12:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("insira o raio do tanque: "))
a = float(input("insira a altura do tanque: "))
opcao = input("insira a opcao desejada: (1/2)")

from math import *
Vr = (4 * pi * (r**3))
V = Vr/3

Vra1 = (pi * (a**2))
Vra2 = ((3 * r) - a)
Vrat = (Vra1 * Vra2)/3

if(opcao == "1"):
	mensagem = Vrat
	print(round(Vrat,4))
else:
	mensagem = Vr
	print(round(Vr,4))



-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 21:12:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("insira o raio do tanque: "))
a = float(input("insira a altura do tanque: "))
opcao = input("insira a opcao desejada: (1/2)")

from math import *
Vr = (4 * pi * (r**3))
V = Vr/3

Vra1 = (pi * (a**2))
Vra2 = ((3 * r) - a)
Vrat = (Vra1 * Vra2)/3

if(opcao == "1"):
	mensagem = Vrat
	print(round(Vrat,4))
else:
	mensagem = Vr
	print(round(Vr,4))



-- EXECUTION TIME:
0.221264
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
931.0173
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 21:12:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("insira o raio do tanque: "))
a = float(input("insira a altura do tanque: "))
opcao = input("insira a opcao desejada: (1/2)")

from math import *
Vr = (4 * pi * (r**3))
Vr1 = Vr/3

Vra1 = (pi * (a**2))
Vra2 = ((3 * r) - a)
Vrat = (Vra1 * Vra2)/3

if(opcao == "1"):
	mensagem = Vrat
	print(round(Vrat,4))
else:
	mensagem = Vr
	print(round(Vr,4))



-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 21:13:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("insira o raio do tanque: "))
a = float(input("insira a altura do tanque: "))
opcao = input("insira a opcao desejada: (1/2)")

from math import *
Vr = (4 * pi * (r**3))
Vr1 = Vr/3

Vra1 = (pi * (a**2))
Vra2 = ((3 * r) - a)
Vrat = (Vra1 * Vra2)/3

if(opcao == "1"):
	mensagem = Vrat
	print(round(Vrat,4))
else:
	mensagem = Vr1
	print(round(Vr1,4))



-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 21:14:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("insira o raio do tanque: "))
a = float(input("insira a altura do tanque: "))
opcao = input("insira a opcao desejada: (1/2)")

from math import pi
Vr = (4 * pi * (r**3))
Vr1 = Vr/3

Vra1 = (pi * (a**2))
Vra2 = ((3 * r) - a)
Vrat = (Vra1 * Vra2)/3

if(opcao == "1"):
	mensagem = Vrat
	print(round(Vrat,4))
else:
	mensagem = Vr1
	print(round(Vr1,4))



-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 21:16:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("insira o raio do tanque: "))
a = float(input("insira a altura do tanque: "))
opcao = input("insira a opcao desejada: (1/2)")

from math import pi
Vr = (4 * pi * (r**3))
Vr1 = Vr/3

Vra1 = (pi * (a**2))
Vra2 = ((3 * r) - a)
Vrat = (Vra1 * Vra2)/3

if(opcao == "1"):
	mensagem = Vrat
	print(round(Vrat,4))
else:
	mensagem = Vr1
	print(round(Vr1,4))



-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 21:18:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("insira o raio do tanque: "))
a = float(input("insira a altura do tanque: "))
opcao = input("insira a opcao desejada: (1/2)")
from math import *

Vr = ((4 * pi)* (r**3))
Vr1 = Vr/3

Vra1 = (pi * (a**2))
Vra2 = ((3 * r) - a)
Vrat = (Vra1 * Vra2)/3

if(opcao == "1"):
	mensagem = Vrat
	print(round(Vrat,4))
else:
	mensagem = Vr1
	print(round(Vr1,4))



-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 21:20:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("insira o raio do tanque: "))
a = float(input("insira a altura do tanque: "))
opcao = input("insira a opcao desejada: (1/2)")
from math import *

Vr = ((4 * pi)* (r**3))
Vr1 = Vr/3

Vra1 = (pi * (a**2))
Vra2 = ((3 * r) - a)
Vrat = (Vra1 * Vra2)/3

if(opcao == "1"):
	mensagem = Vrat
	print(round(Vrat,4))
else:
	mensagem = Vr1
	print(round(Vr1,4))



-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 21:20:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("insira o raio do tanque: "))
a = float(input("insira a altura do tanque: "))
opcao = input("insira a opcao desejada: (1/2)")
from math import *

Vr = ((4 * pi) * (r**3))
Vr1 = Vr/3

Vra1 = (pi * (a**2))
Vra2 = ((3 * r) - a)
Vrat = (Vra1 * Vra2)/3

if(opcao == "1"):
	mensagem = Vrat
	print(round(Vrat,4))
else:
	mensagem = Vr1
	print(round(Vr1,4))



-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 21:23:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("insira o raio do tanque: "))
a = float(input("insira a altura do tanque: "))
opcao = input("insira a opcao desejada: (1/2)")
from math import *

Vr = ((4 * pi) * (r**3))
Vr1 = Vr/3

Vra1 = (pi * (a**2))
Vra2 = ((3 * r) - a)
Vrat = (Vra1 * Vra2)/3

if(opcao == "1"):
	mensagem = Vrat
	print(round(Vrat,4))
else:
	mensagem = Vr1 - Vrat
	print(round(Vr1,4))



-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 21:24:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("insira o raio do tanque: "))
a = float(input("insira a altura do tanque: "))
opcao = input("insira a opcao desejada: (1/2)")
from math import *

Vr = ((4 * pi) * (r**3))
Vr1 = Vr/3

Vra1 = (pi * (a**2))
Vra2 = ((3 * r) - a)
Vrat = (Vra1 * Vra2)/3

Vc = Vr1 - Vrat

if(opcao == "1"):
	mensagem = Vrat
	print(round(Vrat,4))
else:
	mensagem = Vc
	print(round(Vc,4))



-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 21:24:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("insira o raio do tanque: "))
a = float(input("insira a altura do tanque: "))
opcao = input("insira a opcao desejada: (1/2)")
from math import *

Vr = ((4 * pi) * (r**3))
Vr1 = Vr/3

Vra1 = (pi * (a**2))
Vra2 = ((3 * r) - a)
Vrat = (Vra1 * Vra2)/3

Vc = Vr1 - Vrat

if(opcao == "1"):
	mensagem = Vrat
	print(round(Vrat,4))
else:
	mensagem = Vc
	print(round(Vc,4))



-- EXECUTION TIME:
0.153049
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
