== TEST (2019-03-29 00:52:43) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(11)

# Impressao do dobro do numero
print()
-- OUTPUT:
Ada_Lovelace
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:55:06) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
var = input("11")
num = int(11)

# Impressao do dobro do numero
print()
-- OUTPUT:
Ada_Lovelace
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:55:38) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
var = input("11")
# Impressao do dobro do numero
print(var * 2)
-- OUTPUT:
12341234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:56:55) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
var = input("11")
num = 11
# Impressao do dobro do numero
print(num * 2)
-- OUTPUT:
22
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:57:26) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
var = input("11")
num = 11
# Impressao do dobro do numero
print(num*2)
-- OUTPUT:
22
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:57:39) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
var = input("11")
num = 11
# Impressao do dobro do numero
print(num*2)
-- OUTPUT:
22
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:57:43) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
var = input("11")
num = 11
# Impressao do dobro do numero
print(num*2)
-- OUTPUT:
22
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:58:19) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
var = input("11")
num = 11
# Impressao do dobro do numero
print(num int*2)
-- ERROR:
File "XXXX", line 7
    print(num int*2)
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:59:05) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
var = input("11")
num = 11
# Impressao do dobro do numero
print(num*2)
-- OUTPUT:
22
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 00:59:08) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
var = input("11")
num = 11
# Impressao do dobro do numero
print(num*2)
-- EXECUTION TIME:
0.139311
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
22
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
22
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:00:05) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("11"))
# Impressao do dobro do numero
print(num*2)
-- OUTPUT:
2468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:00:10) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("11"))
# Impressao do dobro do numero
print(num)
-- OUTPUT:
1234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:00:16) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("11"))
# Impressao do dobro do numero
print(num)
-- OUTPUT:
1234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:01:25) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("onze"))
# Impressao do dobro do numero
print(num)
-- OUTPUT:
1234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:01:33) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("11"))
# Impressao do dobro do numero
print(num)
-- OUTPUT:
1234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:01:53) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("1"))
# Impressao do dobro do numero
print(num)
-- OUTPUT:
1234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:02:18) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("10"))
# Impressao do dobro do numero
print(2*num)
-- OUTPUT:
2468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:03:14) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("11"))
var = 11 * 2
# Impressao do dobro do numero
print(var)
-- OUTPUT:
22
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:03:17) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("11"))
var = 11 * 2
# Impressao do dobro do numero
print(var)
-- OUTPUT:
22
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:03:28) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("11"))
var = (11 * 2)
# Impressao do dobro do numero
print(var)
-- OUTPUT:
22
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:03:50) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("11"))
var1 = (11 * 2)
# Impressao do dobro do numero
print(var1)
-- OUTPUT:
22
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:04:04) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
var1 = (11 * 2)
num = int(input("11"))

# Impressao do dobro do numero
print(var1)
-- OUTPUT:
22
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:04:18) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
var1 = (11 * 2)


# Impressao do dobro do numero
print(var1)
-- OUTPUT:
22
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:04:36) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
var1 = (11 * 2);
num = int(input("11"))

# Impressao do dobro do numero
print(var1)
-- OUTPUT:
22
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:05:27) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("11"))

# Impressao do dobro do numero
print (num)
-- OUTPUT:
1234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:06:23) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("11"))

# Impressao do dobro do numero
print (2* num)
-- OUTPUT:
2468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:06:38) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(11))

# Impressao do dobro do numero
print (2* num)
-- OUTPUT:
112468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:06:40) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(11))

# Impressao do dobro do numero
print (2* num)
-- OUTPUT:
112468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:07:24) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero: ", 11))

# Impressao do dobro do numero
print (2* num)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    num = int(input("Digite o numero: ", 11))
TypeError: input expected at most 1 arguments, got 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:07:36) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero: ", 11))

# Impressao do dobro do numero
print (2* num)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    num = int(input("Digite o numero: ", 11))
TypeError: input expected at most 1 arguments, got 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:07:51) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:", 11))

# Impressao do dobro do numero
print (2* num)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    num = int(input("Digite o numero:", 11))
TypeError: input expected at most 1 arguments, got 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:08:04) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input( 11))

# Impressao do dobro do numero
print (2* num)
-- OUTPUT:
112468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:08:07) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input( 11))

# Impressao do dobro do numero
print (2* num)
-- OUTPUT:
112468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:08:22) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input( 11))

# Impressao do dobro do numero
print (num * 1
	)
-- OUTPUT:
111234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:08:27) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input( 11))

# Impressao do dobro do numero
print (num * 1
	)
-- OUTPUT:
111234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:08:28) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input( 11))

# Impressao do dobro do numero
print (num * 1
	)
-- OUTPUT:
111234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:08:30) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input( 11))

# Impressao do dobro do numero
print (num * 1
	)
-- OUTPUT:
111234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:08:55) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input( 11)) * 2

# Impressao do dobro do numero
print (num)
-- OUTPUT:
112468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:08:57) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input( 11)) * 2

# Impressao do dobro do numero
print (num)
-- OUTPUT:
112468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:09:34) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(11))
var1 = 11 * 2
# Impressao do dobro do numero
print(var1)
-- OUTPUT:
1122
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:09:36) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(11))
var1 = 11 * 2
# Impressao do dobro do numero
print(var1)
-- OUTPUT:
1122
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:10:57) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(1 1))
var1 = 11 * 2
# Impressao do dobro do numero
print(var1)
-- ERROR:
File "XXXX", line 4
    num = int(input(1 1))
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:11:03) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))
var1 = 11 * 2
# Impressao do dobro do numero
print(var1)
-- OUTPUT:
1022
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:11:35) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
var1
var2 = 11 * 2
# Impressao do dobro do numero
print(var1)
print(var2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    var1
NameError: name 'var1' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:11:47) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
var1 = 11
var2 = 11 * 2
# Impressao do dobro do numero
print(var1)
print(var2)
-- OUTPUT:
11
22
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 01:11:51) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
var1 = 11
var2 = 11 * 2
# Impressao do dobro do numero
print(var1)
print(var2)
-- EXECUTION TIME:
0.169586
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
11
22
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
11
22
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:12:19) 
-- CODE:
# Use este codigo como ponto de partida
num = int(input("Digite o numero: "))
# Leitura de valores de entrada e conversao para inteiro

# Impressao do dobro do numero

-- OUTPUT:
11
22
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:13:29) 
-- CODE:
# Use este codigo como ponto de partida
num = int(input("Digite o numero: "))
# Leitura de valores de entrada e conversao para inteiro
print(2 * num)
# Impressao do dobro do numero

-- OUTPUT:
2468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 01:13:34) 
-- CODE:
# Use este codigo como ponto de partida
num = int(input("Digite o numero: "))
# Leitura de valores de entrada e conversao para inteiro
print(2 * num)
# Impressao do dobro do numero

-- EXECUTION TIME:
0.193155
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
2468
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
888
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 02:04:55) 
-- CODE:
# Use este codigo como ponto de partida
num = int(input("Digite o numero: "))
# Leitura de valores de entrada e conversao para inteiro
print(2 * num)
# Impressao do dobro do numero

-- OUTPUT:
2468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 02:10:11) 
-- CODE:
# Use este codigo como ponto de partida
num = int(input("Digite o numero: "))
# Leitura de valores de entrada e conversao para inteiro
print(2 * num)
# Impressao do dobro do numero

-- EXECUTION TIME:
0.149655
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
2468
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
888
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 02:10:47) 
-- CODE:
# Use este codigo como ponto de partida
num = int(input("Digite o numero: "))
# Leitura de valores de entrada e conversao para inteiro
print(2 * num)
# Impressao do dobro do numero

-- EXECUTION TIME:
0.122466
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
2468
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
888
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-27 17:33:26) 
-- CODE:
# Entrada
num = int(input("Determine o numero: "))
# Variavel de Multiplicação
dobro = num * 2
# Saida
print(dobro)
-- EXECUTION TIME:
0.195423
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
2468
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
888
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
