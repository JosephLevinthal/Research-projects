== TEST (2019-05-02 10:50:08) 
-- CODE:
from math import*
x = float(input("x:"))
if(x<=-1)or (x>=1)
	print(abs(round(x**(1/2))))
elif( -1<x<0)or (0<x<1)
	print(abs(round(x**(1/2))))
elif(x==0)
	print(abs(round(x**(1/2))))

-- ERROR:
File "XXXX", line 3
    if(x<=-1)or (x>=1)
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:50:25) 
-- CODE:
from math import*
x = float(input("x:"))
if(x<=-1)or (x>=1):
	print(abs(round(x**(1/2))))
elif( -1<x<0)or (0<x<1):
	print(abs(round(x**(1/2))))
elif(x==0):
	print(abs(round(x**(1/2))))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(abs(round(x**(1/2))))
TypeError: type complex doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 10:50:49) 
-- CODE:
from math import*
x = float(input("x:"))
if(x<=-1)or (x>=1):
	print(abs(round(x**(1/2))))
elif( -1<x<0)or (0<x<1):
	print(abs(round(x**(1/2))))
elif(x==0):
	print(abs(round(x**(1/2))))

-- EXECUTION TIME:
0.167688
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1709/3038/main.py", line 4, in <module>
    print(abs(round(x**(1/2))))
TypeError: type complex doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:50:53) 
-- CODE:
from math import*
x = float(input("x:"))
if(x<=-1)or (x>=1):
	print(abs(round(x**(1/2))))
elif( -1<x<0)or (0<x<1):
	print(abs(round(x**(1/2))))
elif(x==0):
	print(abs(round(x**(1/2))))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(abs(round(x**(1/2))))
TypeError: type complex doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 10:51:44) 
-- CODE:
from math import*
x = float(input("x:"))
if(x<=-1)or (x>=1):
	print(abs(round(x**(1/2))))
elif( -1<x<0)or (0<x<1):
	print(abs(round(x**(1/2))))
elif(x==0):
	print(abs(round(x**(1/2))))


-- EXECUTION TIME:
0.152619
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1709/3038/main.py", line 4, in <module>
    print(abs(round(x**(1/2))))
TypeError: type complex doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:51:58) 
-- CODE:
from math import*
x = float(input("x:"))
if(x<=-1)or (x>=1):
	print(abs(round(x**(1/2))))
elif(-1<x<0)or (0<x<1):
	print(abs(round(x**(1/2))))
elif(x==0):
	print(abs(round(x**(1/2))))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(abs(round(x**(1/2))))
TypeError: type complex doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:52:50) 
-- CODE:
from math import*
x = float(input("x:"))
if(x<=-1)or (x>=1):
	print(abs(round(x**(1/2))))
elif(-1<x<0)or (0<x<1):
	print(abs(round(x**(1/2))))
elif(x==0):
	print(abs(round(x**(1/2))))
else:
	print(abs(round(x**(1/2))))



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(abs(round(x**(1/2))))
TypeError: type complex doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 10:52:53) 
-- CODE:
from math import*
x = float(input("x:"))
if(x<=-1)or (x>=1):
	print(abs(round(x**(1/2))))
elif(-1<x<0)or (0<x<1):
	print(abs(round(x**(1/2))))
elif(x==0):
	print(abs(round(x**(1/2))))
else:
	print(abs(round(x**(1/2))))



-- EXECUTION TIME:
0.202927
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1709/3038/main.py", line 4, in <module>
    print(abs(round(x**(1/2))))
TypeError: type complex doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:52:54) 
-- CODE:
from math import*
x = float(input("x:"))
if(x<=-1)or (x>=1):
	print(abs(round(x**(1/2))))
elif(-1<x<0)or (0<x<1):
	print(abs(round(x**(1/2))))
elif(x==0):
	print(abs(round(x**(1/2))))
else:
	print(abs(round(x**(1/2))))



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(abs(round(x**(1/2))))
TypeError: type complex doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:53:54) 
-- CODE:
from math import*
x = float(input("x:"))
if(x<=-1)or (x>=1):
	print(abs(round(x**(1/2))))
elif(-1<x<0)or (0<x<1):
	print(abs(round(x**(1/2))))
elif(x==0):
	print(abs(round(x**(1/2))))
else:
	print(abs(round(x**(1/2))))



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(abs(round(x**(1/2))))
TypeError: type complex doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:54:26) 
-- CODE:
from math import*
x = float(input("x:"))
if(x<=-1)or (x>=1):
	print(abs(round(x**(1/2))))
elif(-1<x<0)or (0<x<1):
	print(abs(round(x**(1/2))))
elif(x==0):
	print(abs(round(x**(1/2))))
else:
	print(invalido)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(abs(round(x**(1/2))))
TypeError: type complex doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
