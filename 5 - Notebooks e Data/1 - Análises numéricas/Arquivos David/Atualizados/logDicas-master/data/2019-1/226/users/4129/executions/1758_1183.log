== TEST (2019-05-27 18:22:29) 
-- CODE:
from numpy import*
vet = array(eval(input("Vetor:")))

vet_valida = []

for elem in vet:
    if elem > 0:
        vet_valida.append(elem)
print (vet_valida)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-27 18:23:07) 
-- CODE:
from numpy import*
vet = array(eval(input("Vetor:")))

vet_valida = []

for elem in vet:
    if elem > 0:
        vet_valida.append(elem)
print (vet_valida)

-- EXECUTION TIME:
0.507491
-- TEST CASE 1:
---- input:
[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,1]
---- correct output:
[1]
---- user output:
[1]
-- TEST CASE 2:
---- input:
[2,-1,3,-4,5]
---- correct output:
[2 3 5]
---- user output:
[2, 3, 5]
-- TEST CASE 3:
---- input:
[-1,18,32,14,25,-6]
---- correct output:
[18 32 14 25]
---- user output:
[18, 32, 14, 25]
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 10:05:33) 
-- CODE:
from numpy import*
vet = array(eval(input("Vetor:")))

vet_valida = []

for elem in vet:
    if elem > 0:
        vet_valida.append(elem)
print (vet_valida)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 11:05:10) 
-- CODE:
from numpy import*
vet = array(eval(input("Vetor:")))

i = 0
p = 0
n = 0
j = 0

while(i < size(vet)):
	if(vet[i] < 0):
		n = n + 1
	i = i + 1
	
tf = size(vet) - n

vt = zeros(tf, dtype = int)


while(i < size(vet)):
	if(vet[i]>=0):
		vt[j] = vet[i]
		j = j + 1
	i = i + 1
	
print(vt)
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-28 11:05:14) 
-- CODE:
from numpy import*
vet = array(eval(input("Vetor:")))

i = 0
p = 0
n = 0
j = 0

while(i < size(vet)):
	if(vet[i] < 0):
		n = n + 1
	i = i + 1
	
tf = size(vet) - n

vt = zeros(tf, dtype = int)


while(i < size(vet)):
	if(vet[i]>=0):
		vt[j] = vet[i]
		j = j + 1
	i = i + 1
	
print(vt)
	

-- EXECUTION TIME:
0.454192
-- TEST CASE 1:
---- input:
[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,1]
---- correct output:
[1]
---- user output:
[0]
-- TEST CASE 2:
---- input:
[2,-1,3,-4,5]
---- correct output:
[2 3 5]
---- user output:
[0 0 0]
-- TEST CASE 3:
---- input:
[-1,18,32,14,25,-6]
---- correct output:
[18 32 14 25]
---- user output:
[0 0 0 0]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-28 11:05:17) 
-- CODE:
from numpy import*
vet = array(eval(input("Vetor:")))

i = 0
p = 0
n = 0
j = 0

while(i < size(vet)):
	if(vet[i] < 0):
		n = n + 1
	i = i + 1
	
tf = size(vet) - n

vt = zeros(tf, dtype = int)


while(i < size(vet)):
	if(vet[i]>=0):
		vt[j] = vet[i]
		j = j + 1
	i = i + 1
	
print(vt)
	

-- EXECUTION TIME:
0.522669
-- TEST CASE 1:
---- input:
[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,1]
---- correct output:
[1]
---- user output:
[0]
-- TEST CASE 2:
---- input:
[2,-1,3,-4,5]
---- correct output:
[2 3 5]
---- user output:
[0 0 0]
-- TEST CASE 3:
---- input:
[-1,18,32,14,25,-6]
---- correct output:
[18 32 14 25]
---- user output:
[0 0 0 0]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-28 11:05:21) 
-- CODE:
from numpy import*
vet = array(eval(input("Vetor:")))

i = 0
p = 0
n = 0
j = 0

while(i < size(vet)):
	if(vet[i] < 0):
		n = n + 1
	i = i + 1
	
tf = size(vet) - n

vt = zeros(tf, dtype = int)


while(i < size(vet)):
	if(vet[i]>=0):
		vt[j] = vet[i]
		j = j + 1
	i = i + 1
	
print(vt)
	

-- EXECUTION TIME:
0.434231
-- TEST CASE 1:
---- input:
[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,1]
---- correct output:
[1]
---- user output:
[0]
-- TEST CASE 2:
---- input:
[2,-1,3,-4,5]
---- correct output:
[2 3 5]
---- user output:
[0 0 0]
-- TEST CASE 3:
---- input:
[-1,18,32,14,25,-6]
---- correct output:
[18 32 14 25]
---- user output:
[0 0 0 0]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-28 11:05:21) 
-- CODE:
from numpy import*
vet = array(eval(input("Vetor:")))

i = 0
p = 0
n = 0
j = 0

while(i < size(vet)):
	if(vet[i] < 0):
		n = n + 1
	i = i + 1
	
tf = size(vet) - n

vt = zeros(tf, dtype = int)


while(i < size(vet)):
	if(vet[i]>=0):
		vt[j] = vet[i]
		j = j + 1
	i = i + 1
	
print(vt)
	

-- EXECUTION TIME:
0.755674
-- TEST CASE 1:
---- input:
[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,1]
---- correct output:
[1]
---- user output:
[0 0 0]
-- TEST CASE 2:
---- input:
[2,-1,3,-4,5]
---- correct output:
[2 3 5]
---- user output:
[0 0 0 0]
-- TEST CASE 3:
---- input:
[-1,18,32,14,25,-6]
---- correct output:
[18 32 14 25]
---- user output:
[0 0 0 0]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-28 11:05:26) 
-- CODE:
from numpy import*
vet = array(eval(input("Vetor:")))

i = 0
p = 0
n = 0
j = 0

while(i < size(vet)):
	if(vet[i] < 0):
		n = n + 1
	i = i + 1
	
tf = size(vet) - n

vt = zeros(tf, dtype = int)


while(i < size(vet)):
	if(vet[i]>=0):
		vt[j] = vet[i]
		j = j + 1
	i = i + 1
	
print(vt)
	

-- EXECUTION TIME:
0.464711
-- TEST CASE 1:
---- input:
[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,1]
---- correct output:
[1]
---- user output:
[0]
-- TEST CASE 2:
---- input:
[2,-1,3,-4,5]
---- correct output:
[2 3 5]
---- user output:
[0 0 0]
-- TEST CASE 3:
---- input:
[-1,18,32,14,25,-6]
---- correct output:
[18 32 14 25]
---- user output:
[0 0 0 0]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-28 11:05:26) 
-- CODE:
from numpy import*
vet = array(eval(input("Vetor:")))

i = 0
p = 0
n = 0
j = 0

while(i < size(vet)):
	if(vet[i] < 0):
		n = n + 1
	i = i + 1
	
tf = size(vet) - n

vt = zeros(tf, dtype = int)


while(i < size(vet)):
	if(vet[i]>=0):
		vt[j] = vet[i]
		j = j + 1
	i = i + 1
	
print(vt)
	

-- EXECUTION TIME:
0.876344
-- TEST CASE 1:
---- input:
[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,1]
---- correct output:
[1]
---- user output:
[0]
-- TEST CASE 2:
---- input:
[2,-1,3,-4,5]
---- correct output:
[2 3 5]
---- user output:
[0 0 0]
-- TEST CASE 3:
---- input:
[-1,18,32,14,25,-6]
---- correct output:
[18 32 14 25]
---- user output:
[0 0 0 0]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-28 11:06:14) 
-- CODE:
from numpy import*
vet = array(eval(input("Vetor:")))

i = 0
p = 0
n = 0


while(i < size(vet)):
	if(vet[i] < 0):
		n = n + 1
	i = i + 1
	
tf = size(vet) - n

vt = zeros(tf, dtype = int)

i = 0
j = 0

while(i < size(vet)):
	if(vet[i]>=0):
		vt[j] = vet[i]
		j = j + 1
	i = i + 1
	
print(vt)
	

-- EXECUTION TIME:
0.533333
-- TEST CASE 1:
---- input:
[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,1]
---- correct output:
[1]
---- user output:
[1]
-- TEST CASE 2:
---- input:
[2,-1,3,-4,5]
---- correct output:
[2 3 5]
---- user output:
[2 3 5]
-- TEST CASE 3:
---- input:
[-1,18,32,14,25,-6]
---- correct output:
[18 32 14 25]
---- user output:
Vetor:[18 32 14 25]
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-28 11:06:23) 
-- CODE:
from numpy import*
vet = array(eval(input("Vetor:")))

i = 0
p = 0
n = 0


while(i < size(vet)):
	if(vet[i] < 0):
		n = n + 1
	i = i + 1
	
tf = size(vet) - n

vt = zeros(tf, dtype = int)

i = 0
j = 0

while(i < size(vet)):
	if(vet[i]>=0):
		vt[j] = vet[i]
		j = j + 1
	i = i + 1
	
print(vt)
	

-- EXECUTION TIME:
0.419864
-- TEST CASE 1:
---- input:
[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,1]
---- correct output:
[1]
---- user output:
[1]
-- TEST CASE 2:
---- input:
[2,-1,3,-4,5]
---- correct output:
[2 3 5]
---- user output:
[2 3 5]
-- TEST CASE 3:
---- input:
[-1,18,32,14,25,-6]
---- correct output:
[18 32 14 25]
---- user output:
[18 32 14 25]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
