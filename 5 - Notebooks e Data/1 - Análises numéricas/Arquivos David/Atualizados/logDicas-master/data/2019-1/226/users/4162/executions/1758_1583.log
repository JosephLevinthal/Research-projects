== TEST (2019-05-28 12:54:14) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
a=cn[:2]






-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 12:54:25) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
a=cn[:2]
print(a)





-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:01:24) 
-- CODE:
cn=str(input("insira caracteres numericos: "))

a="cn[:3].cn[3:6]"
print(a)







-- OUTPUT:
cn[:3].cn[3:6]
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:02:04) 
-- CODE:
cn=str(input("insira caracteres numericos: "))

a=cn[:3]
b=cn[3:6]
print(a"."c)







-- ERROR:
File "XXXX", line 5
    print(a"."c)
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:02:11) 
-- CODE:
cn=str(input("insira caracteres numericos: "))

a=cn[:3]
b=cn[3:6]
print(a,".",c)







-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(a,".",c)
NameError: name 'c' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:02:20) 
-- CODE:
cn=str(input("insira caracteres numericos: "))

a=cn[:3]
b=cn[3:6]
print(a,".",b)







-- OUTPUT:
123 .
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:02:31) 
-- CODE:
cn=str(input("insira caracteres numericos: "))

a=cn[:3]
b=cn[3:6]
print(a+"."+b)







-- OUTPUT:
123.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:03:16) 
-- CODE:
cn=str(input("insira caracteres numericos: "))

a=cn[:3]
b=cn[3:6]
c=[6:9]
print(a+"."+b+"."+c)







-- ERROR:
File "XXXX", line 5
    c=[6:9]
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:03:22) 
-- CODE:
cn=str(input("insira caracteres numericos: "))

a=cn[:3]
b=cn[3:6]
c=cn[6:9]
print(a+"."+b+"."+c)







-- OUTPUT:
123..
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-28 13:03:32) 
-- CODE:
cn=str(input("insira caracteres numericos: "))

a=cn[:3]
b=cn[3:6]
c=cn[6:9]
print(a+"."+b+"."+c)







-- EXECUTION TIME:
0.1658
-- TEST CASE 1:
---- input:
123
---- correct output:
123
---- user output:
123..
-- TEST CASE 2:
---- input:
123456789000987654321
---- correct output:
123.456.789.000.987.654.321
---- user output:
123.456.789
-- TEST CASE 3:
---- input:
987654321
---- correct output:
987.654.321
---- user output:
987.654.321
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:03:39) 
-- CODE:
cn=str(input("insira caracteres numericos: "))

a=cn[:3]
b=cn[3:6]
c=cn[6:9]
print(a+"."+b+"."+c)







-- OUTPUT:
123..
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:06:27) 
-- CODE:
cn=str(input("insira caracteres numericos: "))

a=cn[:3]
b=cn[3:6]
c=cn[6:9]
print(a+".")*len(cn)







-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(a+".")*len(cn)
TypeError: unsupported operand type(s) for *: 'NoneType' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:06:55) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
z=len(int(cn))
a=cn[:3]
b=cn[3:6]
c=cn[6:9]
print(a+".")*z







-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    z=len(int(cn))
TypeError: object of type 'int' has no len()
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:07:33) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
a=cn[:3]
b=cn[3:6]
c=cn[6:9]
print(a,b,c)







-- OUTPUT:
123
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:07:51) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
a=cn[:3]
b=cn[3:6]
c=cn[6:9]
print(a+b+c)







-- OUTPUT:
123
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:07:55) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
a=cn[:3]
b=cn[3:6]
c=cn[6:9]
print(a+b+c)







-- OUTPUT:
123
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:07:59) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
a=cn[:3]
b=cn[3:6]
c=cn[6:9]
print(a+b+c)







-- OUTPUT:
123
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:16:48) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3
a=cn[i:j]

while i< len(cn):
	co=co+a+'.'
	i=i+j
	j=j*2
	a=cn[i:j]
	c=c+1






-- OUTPUT:
123
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:16:57) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3
a=cn[i:j]

while i< len(cn):
	co=co+a+'.'
	i=i+j
	j=j*2
	a=cn[i:j]
	c=c+1
print(co)






-- OUTPUT:
123.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:17:09) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3
a=cn[i:j]

while i< len(cn):
	co=co+a+'.'
	i=i+j
	j=j*2
	a=cn[i:j]
	c=c+1
print(co)






-- OUTPUT:
123.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:17:26) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3
a=cn[i:j]

while i!=len(cn):
	co=co+a+'.'
	i=i+j
	j=j*2
	a=cn[i:j]
	c=c+1
print(co)






-- OUTPUT:
123.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:17:46) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3
a=cn[i:j]

while c!=len(cn):
	co=co+a+'.'
	i=i+j
	j=j*2
	a=cn[i:j]
	c=c+1
print(co)






-- OUTPUT:
123...
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:17:46) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3
a=cn[i:j]

while c!=len(cn):
	co=co+a+'.'
	i=i+j
	j=j*2
	a=cn[i:j]
	c=c+1
print(co)






-- OUTPUT:
123...
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:17:53) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3
a=cn[i:j]

while c!=len(cn):
	co=co+a+'.'
	i=i+j
	j=j*2
	a=cn[i:j]
	c=c+1
print(co)






-- OUTPUT:
123...
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:18:12) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3
a=cn[i:j]

while c<len(cn):
	co=co+a+'.'
	i=i+j
	j=j*2
	a=cn[i:j]
	c=c+1
print(co)






-- OUTPUT:
123...
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:18:40) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3
a=cn[i:j]

while c<len(cn):
	co=co+a+'.'
	i=i+j
	j=j*2
	a=cn[i:j]
	c=c+1
	print(i,j)







-- OUTPUT:
3 6
9 12
21 24
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:20:36) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3
a=cn[i:j]

while c<len(cn):
	co=co+a+'.'
	i=i+j
	j=j*2
	a=cn[i:j]
	c=c+1
	print(co)
	print(i,j)







-- OUTPUT:
123.
3 6
123..
9 12
123...
21 24
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:21:06) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3
a=cn[i:j]

while c<len(cn):
	co=co+a+'.'
	i=i+j
	j=j*2
	a=cn[i:j]
	c=c+1
	print(co)
	print(i,j)







-- OUTPUT:
123.
3 6
123..
9 12
123...
21 24
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:22:03) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3
a=cn[i:j]

print(len(cn))







-- OUTPUT:
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:22:33) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3
a=cn[i:j]

while c<len(cn):
	co=co+a+'.'
	i=i+j
	j=j*2
	a=cn[i:j]
	c=c*2
	print(co)
	print(i,j)







-- OUTPUT:
123.
3 6
123..
9 12
123...
21 24
123....
45 48
123.....
93 96
123......
189 192
123.......
381 384
123........
765 768
123.........
1533 1536
123..........
3069 3072
123...........
6141 6144
123............
12285 12288
123.............
24573 24576
123..............
49149 49152
123...............
98301 98304
123................
196605 196608
123.................
393213 393216
123..................
786429 786432
123...................
1572861 1572864
123....................
3145725 3145728
123.....................
6291453 6291456
123......................
12582909 12582912
123.......................
25165821 25165824
123........................
50331645 50331648
123.........................
100663293 100663296
123..........................
201326589 201326592
123...........................
402653181 402653184
123............................
805306365 805306368
123.............................
1610612733 1610612736
123..............................
3221225469 3221225472
123...............
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:24:13) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
c1=3
i=0
j=3
a=cn[i:j]

while c<len(cn):
	co=co+a+'.'
	i=i+j
	j=j*2
	a=cn[i:j]
	c=c1*2
	print(co)
	print(i,j)







-- OUTPUT:
123.
3 6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:24:27) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
c1=3
i=0
j=3
a=cn[i:j]

while c<len(cn):
	co=co+a+'.'
	i=i+j
	j=j*2
	a=cn[i:j]
	c=c1*2
	print(co)
	print(i,j)







-- OUTPUT:
123.
3 6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:24:41) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
c1=3
i=0
j=3
a=cn[i:j]

while c<len(cn):
	co=co+a+'.'
	i=i+j
	j=j*2
	a=cn[i:j]
	c=c1*2
	print(a)
	print(i,j)







-- OUTPUT:
3 6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:24:46) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
c1=3
i=0
j=3
a=cn[i:j]

while c<len(cn):
	co=co+a+'.'
	i=i+j
	j=j*2
	a=cn[i:j]
	c=c1*2
	print(co)
	print(i,j)







-- OUTPUT:
123.
3 6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:24:57) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
c1=3
i=0
j=3
a=cn[i:j]

while c<len(cn):
	co=co+a+'.'
	i=i+j
	j=j*2
	a=cn[i:j]
	c=c1*2
	print(co)
	print(i,j)







-- OUTPUT:
123.
3 6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:25:11) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
c1=3
i=0
j=3
a=cn[i:j]

while c<=len(cn):
	co=co+a+'.'
	i=i+j
	j=j*2
	a=cn[i:j]
	c=c1*2
	print(co)
	print(i,j)







-- OUTPUT:
123.
3 6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:27:16) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
c1=3
i=0
j=3
a=cn[i:j]

while c<=len(cn):
	co=co+a+'.'
	i=i+j
	j=j*2
	a=cn[i:j]
	c=c1*2+c
	print(co)
	print(i,j)







-- OUTPUT:
123.
3 6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:27:37) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
c1=3
i=0
j=3
a=cn[i:j]

while c<=len(cn):
	co=co+a+'.'
	i=i+j
	j=j*2
	a=cn[i:j]
	c=c1*2+c
	print(co)
	print(i,j)







-- OUTPUT:
123.
3 6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:27:55) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
c1=3
i=0
j=3
a=cn[i:j]

while c<=len(cn):
	co=co+a+'.'
	i=i+j
	j=j*2
	a=cn[i:j]
	c=c1*2+c
	print(co,c)
	print(i,j)







-- OUTPUT:
123. 6
3 6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:28:14) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
c1=3
i=0
j=3
a=cn[i:j]

while c<=len(cn):
	co=co+a+'.'
	i=i+j
	j=j*2
	a=cn[i:j]
	c=c1*2+c
	print(co,c,len(cn))
	print(i,j)







-- OUTPUT:
123. 6 3
3 6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:28:39) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
c1=3
i=0
j=3
a=cn[i:j]

while c<=len(cn):
	co=co+a+'.'
	i=i+j
	j=j+3
	a=cn[i:j]
	c=c1+3+c
	print(co,c,len(cn))
	print(i,j)







-- OUTPUT:
123. 6 3
3 6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:29:27) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
c1=3
i=0
j=3
a=cn[i:j]

while c<=len(cn):
	co=co+a+'.'
	i=i+j
	j=j+3
	a=cn[i:j]
	c=c1+3+c
	print(co,c,len(cn))
	print(i,j)







-- OUTPUT:
123. 6 3
3 6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:30:04) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3
a=cn[i:j]

while c<=len(cn):
	co=co+a+'.'
	i=i+j
	j=j+3
	a=cn[i:j]
	c=3+c
	print(co,c,len(cn))
	print(i,j)







-- OUTPUT:
123. 3 3
3 6
123.. 6 3
9 9
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:30:51) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3
a=cn[i:j]

while c!=len(cn):
	co=co+a+'.'
	i=i+j
	j=j+3
	a=cn[i:j]
	c=3+c
	print(co,c,len(cn))
	print(i,j)







-- OUTPUT:
123. 3 3
3 6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:32:10) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3
a=cn[i:j]

while c!=len(cn):
	co=co+a+'.'
	i=i+j
	j=j+3
	a=cn[i:j]
	c=3+c
	print(co,c,,alen(cn))
	print(i,j)







-- ERROR:
File "XXXX", line 14
    print(co,c,,alen(cn))
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:32:14) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3
a=cn[i:j]

while c!=len(cn):
	co=co+a+'.'
	i=i+j
	j=j+3
	a=cn[i:j]
	c=3+c
	print(co,c,a,len(cn))
	print(i,j)







-- OUTPUT:
123. 3  3
3 6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:32:57) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3

while c!=len(cn):
	a=cn[i:j]
	co=co+a+'.'
	i=i+j
	j=j+3
	
	c=3+c
	print(co,c,a,len(cn))
	print(i,j)







-- OUTPUT:
123. 3 123 3
3 6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:36:47) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3

while c!=len(cn):
	a=cn[i:j]
	co=co+a+'.'
	i=i+3
	j=j+3
	c=3+c
	print(co,c,a,len(cn))
	print(i,j)







-- OUTPUT:
123. 3 123 3
3 6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:38:00) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3

while c!=len(cn):
	a=cn[i:j]
	co=co+a+'.'
	i=i+3
	j=j+3
	c=3+c
print(co.replace(-1,""))






-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    print(co.replace(-1,""))
TypeError: replace() argument 1 must be str, not int
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:38:20) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3

while c!=len(cn):
	a=cn[i:j]
	co=co+a+'.'
	i=i+3
	j=j+3
	c=3+c
print(co)






-- OUTPUT:
123.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:40:48) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3

while c!=len(cn):
	a=cn[i:j]
	co=co+a+'.'
	i=i+3
	j=j+3
	c=3+c
print(round(co3)






-- ERROR:
File "XXXX", line 19
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:40:51) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3

while c!=len(cn):
	a=cn[i:j]
	co=co+a+'.'
	i=i+3
	j=j+3
	c=3+c
print(round(co,3)






-- ERROR:
File "XXXX", line 19
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:41:19) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3

while c!=len(cn):
	a=cn[i:j]
	co=co+a+'.'
	i=i+3
	j=j+3
	c=3+c
print(co.replace(".",""))






-- OUTPUT:
123
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:41:32) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3

while c!=len(cn):
	a=cn[i:j]
	co=co+a+'.'
	i=i+3
	j=j+3
	c=3+c
print(co.replace(-1,""))






-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    print(co.replace(-1,""))
TypeError: replace() argument 1 must be str, not int
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:41:35) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3

while c!=len(cn):
	a=cn[i:j]
	co=co+a+'.'
	i=i+3
	j=j+3
	c=3+c
print(co.replace(-1,""))






-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    print(co.replace(-1,""))
TypeError: replace() argument 1 must be str, not int
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:42:53) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3

while c!=len(cn):
	a=cn[i:j]
	co=co+a+'.'
	i=i+3
	j=j+3
	c=3+c
print(co)
print(len(co))






-- OUTPUT:
123.
4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:43:56) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3

while c!=len(cn):
	a=cn[i:j]
	co=co+a+'.'
	i=i+3
	j=j+3
	c=3+c
f=len(co)
print(co.replace(12,""))







-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    print(co.replace(12,""))
TypeError: replace() argument 1 must be str, not int
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:45:30) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3

while c!=len(cn):
	a=cn[i:j]
	co=co+a+'.'
	i=i+3
	j=j+3
	c=3+c
print(co.replace(,""))







-- ERROR:
File "XXXX", line 13
    print(co.replace(,""))
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:48:14) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3

while c!=len(cn):
	a=cn[i:j]
	co=co+a+'.'
	i=i+3
	j=j+3
	c=3+c
print(co.replace(s[-1],""))







-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    print(co.replace(s[-1],""))
NameError: name 's' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:48:23) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3

while c!=len(cn):
	a=cn[i:j]
	co=co+a+'.'
	i=i+3
	j=j+3
	c=3+c
print(co.replace(cn[-1],""))







-- OUTPUT:
12.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:48:42) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3

while c!=len(cn):
	a=cn[i:j]
	co=co+a+'.'
	i=i+3
	j=j+3
	c=3+c
print(co.replace(co[-1],""))







-- OUTPUT:
123
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:48:59) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3

while c!=len(cn):
	a=cn[i:j]
	co=co+a+'.'
	i=i+3
	j=j+3
	c=3+c
print(co)







-- OUTPUT:
123.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:49:15) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3

while c!=len(cn):
	a=cn[i:j]
	co=co+a+'.'
	i=i+3
	j=j+3
	c=3+c
print(co[-1])







-- OUTPUT:
.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:49:56) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3

while c!=len(cn):
	a=cn[i:j]
	co=co+a+'.'
	i=i+3
	j=j+3
	c=3+c
print(co.replace(co[-1],"")







-- ERROR:
File "XXXX", line 20
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 13:50:03) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3

while c!=len(cn):
	a=cn[i:j]
	co=co+a+'.'
	i=i+3
	j=j+3
	c=3+c
print(co.replace(co[-1],""))







-- OUTPUT:
123
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 19:59:47) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3

while c!=len(cn):
	a=cn[i:j]
	co=a+'.'+co
	i=i+3
	j=j+3
	c=3+c
print(co.replace(co[-1],""))







-- OUTPUT:
123
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-28 20:00:01) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3

while c!=len(cn):
	a=cn[i:j]
	co=a+'.'+co
	i=i+3
	j=j+3
	c=3+c
print(co)







-- EXECUTION TIME:
0.286567
-- TEST CASE 1:
---- input:
123
---- correct output:
123
---- user output:
123.
-- TEST CASE 2:
---- input:
123456789000987654321
---- correct output:
123.456.789.000.987.654.321
---- user output:
321.654.987.000.789.456.123.
-- TEST CASE 3:
---- input:
987654321
---- correct output:
987.654.321
---- user output:
321.654.987.
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 20:00:03) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3

while c!=len(cn):
	a=cn[i:j]
	co=a+'.'+co
	i=i+3
	j=j+3
	c=3+c
print(co)







-- OUTPUT:
123.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 20:00:20) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3

while c!=len(cn):
	a=cn[i:j]
	co=a+'.'+co
	i=i+3
	j=j+3
	c=3+c
	print(co)







-- OUTPUT:
123.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 20:01:49) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3

while c!=len(cn):
	a=cn[i:j]
	co=a+'.'+co
	i=i+3
	j=j+3
	c=3+c
print(co)
print(len(cn))







-- OUTPUT:
123.
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 20:02:37) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3

while c!=len(cn):
	a=cn[i:j]
	co=a+'.'+co
	i=i+3
	j=j+3
	c=3+c
print(co)







-- OUTPUT:
123.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 20:02:53) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3

while c!=len(cn):
	a=cn[i:j]
	co=a+'.'+co
	i=i+3
	j=j+3
	c=3+c
print(co)








-- OUTPUT:
123.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 20:03:40) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3

while c!=len(cn):
	a=cn[i:j]
	co=a+co+'.'
	i=i+3
	j=j+3
	c=3+c
	print(co)







-- OUTPUT:
123.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 20:04:05) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3

while c!=len(cn):
	a=cn[i:j]
	co=a+co+'.'
	i=i+3
	j=j+3
	c=3+c
	print(a,co,i,j,c)







-- OUTPUT:
123 123. 3 6 3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 20:04:45) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3

while c!=len(cn):
	a=cn[i:j]
	co=co+a+'.'
	i=i+3
	j=j+3
	c=3+c
	print(a,co,i,j,c)







-- OUTPUT:
123 123. 3 6 3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 20:06:47) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3

while c!=len(cn):
	a=cn[i:j]
	co=co+a+'.'
	i=i+3
	j=j+3
	c=3+c
print(co-1)







-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    print(co-1)
TypeError: unsupported operand type(s) for -: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 20:06:57) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3

while c!=len(cn):
	a=cn[i:j]
	co=co+a+'.'
	i=i+3
	j=j+3
	c=3+c
print(co,-1)







-- OUTPUT:
123. -1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 20:07:03) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3

while c!=len(cn):
	a=cn[i:j]
	co=co+a+'.'
	i=i+3
	j=j+3
	c=3+c
print(co,-1)







-- OUTPUT:
123. -1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 20:07:27) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3

while c!=len(cn):
	a=cn[i:j]
	co=co+a+'.'
	i=i+3
	j=j+3
	c=3+c
print(co-co[-1])







-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    print(co-co[-1])
TypeError: unsupported operand type(s) for -: 'str' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 20:07:42) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3

while c!=len(cn):
	a=cn[i:j]
	co=co+a+'.'
	i=i+3
	j=j+3
	c=3+c
print(co[:-1])







-- OUTPUT:
123
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 20:08:00) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3

while c!=len(cn):
	a=cn[i:j]
	co=co+a+'.'
	i=i+3
	j=j+3
	c=3+c
print(co[:-1])







-- OUTPUT:
123
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-28 20:08:15) 
-- CODE:
cn=str(input("insira caracteres numericos: "))
co=""
c=0
i=0
j=3

while c!=len(cn):
	a=cn[i:j]
	co=co+a+'.'
	i=i+3
	j=j+3
	c=3+c
print(co[:-1])







-- EXECUTION TIME:
0.18414
-- TEST CASE 1:
---- input:
123
---- correct output:
123
---- user output:
123
-- TEST CASE 2:
---- input:
123456789000987654321
---- correct output:
123.456.789.000.987.654.321
---- user output:
123.456.789.000.987.654.321
-- TEST CASE 3:
---- input:
987654321
---- correct output:
987.654.321
---- user output:
987.654.321
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
