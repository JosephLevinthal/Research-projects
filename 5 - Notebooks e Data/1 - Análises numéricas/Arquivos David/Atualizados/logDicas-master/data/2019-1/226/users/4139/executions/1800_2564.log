== TEST (2019-06-06 11:12:41) 
-- CODE:
from numpy import*
vetA = array(eval(input("dados do primeiro time: ")))
vetB = array(eval(input("dados do time adversario: ")))
i = 0
vet = zeros(3,dtype=int)
while(size(vetA)>i):
	if(vetA[i] > vetB[i]):
		vet[0] = vet[0] +1
	if(vetA[i]<vetB[i]):
		vet[2] = vet[2] +1
	if(vetA[i]==vetB[i]):
		vet[1] = vet[1] +1

print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 11:13:49) 
-- CODE:
from numpy import*
vetA = array(eval(input("dados do primeiro time: ")))
vetB = array(eval(input("dados do time adversario: ")))
i = 0
vet = zeros(3,dtype=int)
while(size(vetA)>i):
	if(vetA[i] > vetB[i]):
		vet[0] = vet[0] +1
	if(vetA[i]<vetB[i]):
		vet[2] = vet[2] +1
	if(vetA[i]==vetB[i]):
		vet[1] = vet[1] +1

print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 11:14:18) 
-- CODE:
from numpy import*
vetA = array(eval(input("dados do primeiro time: ")))
vetB = array(eval(input("dados do time adversario: ")))
i = 0
vet = zeros(3,dtype=int)
while(size(vetA)>i):
	if(vetA[i] > vetB[i]):
		vet[0] = vet[0] +1
	if(vetA[i]<vetB[i]):
		vet[2] = vet[2] +1
	if(vetA[i]==vetB[i]):
		vet[1] = vet[1] +1

print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 11:14:19) 
-- CODE:
from numpy import*
vetA = array(eval(input("dados do primeiro time: ")))
vetB = array(eval(input("dados do time adversario: ")))
i = 0
vet = zeros(3,dtype=int)
while(size(vetA)>i):
	if(vetA[i] > vetB[i]):
		vet[0] = vet[0] +1
	if(vetA[i]<vetB[i]):
		vet[2] = vet[2] +1
	if(vetA[i]==vetB[i]):
		vet[1] = vet[1] +1

print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 11:15:35) 
-- CODE:
from numpy import*
vetA = array(eval(input("dados do primeiro time: ")))
vetB = array(eval(input("dados do time adversario: ")))
i = 0
vet = zeros(3,dtype=int)
while(size(vetA)>i):
	if(vetA[i] > vetB[i]):
		vet[0] = vet[0] +1
	if(vetA[i]<vetB[i]):
		vet[2] = vet[2] +1
	if(vetA[i]==vetB[i]):
		vet[1] = vet[1] +1
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 11:15:44) 
-- CODE:
from numpy import*
vetA = array(eval(input("dados do primeiro time: ")))
vetB = array(eval(input("dados do time adversario: ")))
i = 0
vet = zeros(3,dtype=int)
while(size(vetA)>i):
	if(vetA[i] > vetB[i]):
		vet[0] = vet[0] +1
	if(vetA[i]<vetB[i]):
		vet[2] = vet[2] +1
	if(vetA[i]==vetB[i]):
		vet[1] = vet[1] +1
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 11:18:40) 
-- CODE:
from numpy import*
vetA = array(eval(input("dados do primeiro time: ")))
vetB = array(eval(input("dados do time adversario: ")))
vet = zeros(3,dtype=int)
for x in (size(vetA):
	if(vetA[i] > vetB[i]):
		vet[0] = vet[0] +1
	if(vetA[i]<vetB[i]):
		vet[2] = vet[2] +1
	if(vetA[i]==vetB[i]):
		vet[1] = vet[1] +1
print(vet)
-- ERROR:
File "XXXX", line 5
    for x in (size(vetA):
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 11:19:53) 
-- CODE:
from numpy import*

vetA = array(eval(input("dados do primeiro time: ")))
vetB = array(eval(input("dados do time adversario: ")))

vet = zeros(3,dtype=int)

for x in (size(vetA):
	if(x > x):
		vet[0] = vet[0] +1
	if(x < x):
		vet[2] = vet[2] +1
	if(x == x):
		vet[1] = vet[1] +1
print(vet)
-- ERROR:
File "XXXX", line 8
    for x in (size(vetA):
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 11:20:09) 
-- CODE:
from numpy import*

vetA = array(eval(input("dados do primeiro time: ")))
vetB = array(eval(input("dados do time adversario: ")))

vet = zeros(3,dtype=int)

for x in (size(vetA)):
	if(x > x):
		vet[0] = vet[0] +1
	if(x < x):
		vet[2] = vet[2] +1
	if(x == x):
		vet[1] = vet[1] +1
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 11:24:44) 
-- CODE:
from numpy import*

vetA = array(eval(input("dados do primeiro time: ")))
vetB = array(eval(input("dados do time adversario: ")))

vet = zeros(3,dtype=int)

for x in range(size(vetA)):
	if(vetA[x] > vetB[x]):
		vet[0] = vet[0] +1
	if(vetA[x] < vetB[x]):
		vet[2] = vet[2] +1
	if(vetA[x] == vetB[x]):
		vet[1] = vet[1] +1
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-06 11:25:33) 
-- CODE:
from numpy import*

vetA = array(eval(input("dados do primeiro time: ")))
vetB = array(eval(input("dados do time adversario: ")))

vet = zeros(3,dtype=int)

for x in range(size(vetA)):
	if(vetA[x] > vetB[x]):
		vet[0] = vet[0] +1
	if(vetA[x] < vetB[x]):
		vet[2] = vet[2] +1
	if(vetA[x] == vetB[x]):
		vet[1] = vet[1] +1
print(vet)
-- EXECUTION TIME:
0.924004
-- TEST CASE 1:
---- input:
[2,3,2,4,3,5,3,4,2,3,1,0]
[3,3,1,0,2,3,3,0,1,2,1,1]
---- correct output:
[7 3 2]
---- user output:
[7 3 2]
-- TEST CASE 2:
---- input:
[1,2,1,2,1,2,1,2,0]
[3,5,3,3,3,3,3,3,3]
---- correct output:
[0 0 9]
---- user output:
[0 0 9]
-- TEST CASE 3:
---- input:
[1,2,2,2,2,1,1,2,2,1,1,2,2]
[0,1,1,1,0,0,0,0,0,0,1,1,1]
---- correct output:
[12 1 0]
---- user output:
[12  1  0]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
