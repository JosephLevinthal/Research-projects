== SUBMITION (2019-05-09 11:27:04) 
-- CODE:
hA = int(input("numero de habitantes de A:"))
hB = int(input("numero de habitantes de B:"))
pA = float(input("crescimento populacional de A:"))
pB = float(input("crescimento populacional de B:"))

percA = pA / 100
percB = pB / 100

ano = 0
while(hA < hB):
	hA = hA + (hA * percA)
	hB = hB + (hB * percB)
print(ano)
-- EXECUTION TIME:
0.178577
-- TEST CASE 1:
---- input:
250150
580000
35.5
10.5
---- correct output:
5
---- user output:
0
-- TEST CASE 2:
---- input:
180250
1200000
10.25
5.7
---- correct output:
45
---- user output:
0
-- TEST CASE 3:
---- input:
1000000
1650000
12.75
3.2
---- correct output:
6
---- user output:
0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:27:04) 
-- CODE:
hA = int(input("numero de habitantes de A:"))
hB = int(input("numero de habitantes de B:"))
pA = float(input("crescimento populacional de A:"))
pB = float(input("crescimento populacional de B:"))

percA = pA / 100
percB = pB / 100

ano = 0
while(hA < hB):
	hA = hA + (hA * percA)
	hB = hB + (hB * percB)
print(ano)
-- OUTPUT:
5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:27:30) 
-- CODE:
hA = int(input("numero de habitantes de A:"))
hB = int(input("numero de habitantes de B:"))
pA = float(input("crescimento populacional de A:"))
pB = float(input("crescimento populacional de B:"))

percA = pA / 100
percB = pB / 100

ano = 0

while(hA < hB):
	hA = hA + (hA * percA)
	hB = hB + (hB * percB)
	
print(ano)
-- OUTPUT:
5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-09 11:28:37) 
-- CODE:
hA = int(input("numero de habitantes de A:"))
hB = int(input("numero de habitantes de B:"))
pA = float(input("crescimento populacional de A:"))
pB = float(input("crescimento populacional de B:"))

percA = pA / 100
percB = pB / 100

ano = 0

while(hA < hB):
	hA = hA + (hA * percA)
	hB = hB + (hB * percB)
	ano = ano + 1
	
print(ano)
-- EXECUTION TIME:
0.133768
-- TEST CASE 1:
---- input:
250150
580000
35.5
10.5
---- correct output:
5
---- user output:
5
-- TEST CASE 2:
---- input:
180250
1200000
10.25
5.7
---- correct output:
45
---- user output:
45
-- TEST CASE 3:
---- input:
1000000
1650000
12.75
3.2
---- correct output:
6
---- user output:
6
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
