== SUBMITION (2019-07-02 00:14:34) 
-- CODE:
from numpy import *
p = input("s: ")
mt = ones((p,p), dtype=int)

for x in range(p):
	for y IN rANGE(p):
		if(x<y):
			mt[x,y]= x + 1
		elif(y>x):
			mt[x,y] = y + 1
		else:
			mt[x,y] = Y + !
print(mt)
-- EXECUTION TIME:
0.540727
-- ERROR:
  File "/home/codebench/codes/1836/2603/main.py", line 6
    for y IN rANGE(p):
           ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 00:14:40) 
-- CODE:
from numpy import *
p = input("s: ")
mt = ones((p,p), dtype=int)

for x in range(p):
	for y IN rANGE(p):
		if(x<y):
			mt[x,y]= x + 1
		elif(y>x):
			mt[x,y] = y + 1
		else:
			mt[x,y] = Y + !
print(mt)
-- EXECUTION TIME:
0.676044
-- ERROR:
  File "/home/codebench/codes/1836/2603/main.py", line 6
    for y IN rANGE(p):
           ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 00:14:42) 
-- CODE:
from numpy import *
p = input("s: ")
mt = ones((p,p), dtype=int)

for x in range(p):
	for y IN rANGE(p):
		if(x<y):
			mt[x,y]= x + 1
		elif(y>x):
			mt[x,y] = y + 1
		else:
			mt[x,y] = Y + !
print(mt)
-- ERROR:
File "XXXX", line 6
    for y IN rANGE(p):
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 00:14:54) 
-- CODE:
from numpy import *
p = input("s: ")
mt = ones((p,p), dtype=int)

for x in range(p):
	for y IN range(p):
		if(x<y):
			mt[x,y]= x + 1
		elif(y>x):
			mt[x,y] = y + 1
		else:
			mt[x,y] = Y + !
print(mt)
-- ERROR:
File "XXXX", line 6
    for y IN range(p):
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 00:14:59) 
-- CODE:
from numpy import *
p = input("s: ")
mt = ones((p,p), dtype=int)

for x in range(p):
	for y in range(p):
		if(x<y):
			mt[x,y]= x + 1
		elif(y>x):
			mt[x,y] = y + 1
		else:
			mt[x,y] = Y + !
print(mt)
-- ERROR:
File "XXXX", line 12
    mt[x,y] = Y + !
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 00:15:10) 
-- CODE:
from numpy import *
p = input("s: ")
mt = ones((p,p), dtype=int)

for x in range(p):
	for y in range(p):
		if(x<y):
			mt[x,y]= x + 1
		elif(y>x):
			mt[x,y] = y + 1
		else:
			mt[x,y] = y + 1
print(mt)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 00:15:14) 
-- CODE:
from numpy import *
p = input("s: ")
mt = ones((p,p), dtype=int)

for x in range(p):
	for y in range(p):
		if(x<y):
			mt[x,y]= x + 1
		elif(y>x):
			mt[x,y] = y + 1
		else:
			mt[x,y] = y + 1
print(mt)
-- EXECUTION TIME:
1.29075
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1836/2603/main.py", line 3, in <module>
    mt = ones((p,p), dtype=int)
  File "/usr/local/lib/python3.4/dist-packages/numpy/core/numeric.py", line 223, in ones
    a = empty(shape, dtype, order)
TypeError: 'str' object cannot be interpreted as an integer

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 00:15:32) 
-- CODE:
from numpy import *
p = input("s: ")
mt = ones((p,p), dtype=int)

for x in range(p):
	for y in range(p):
		if(x<y):
			mt[x,y]= x + 1
		elif(y>x):
			mt[x,y] = y + 1
		else:
			mt[x,y] = y + 1
print(mt)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 00:16:58) 
-- CODE:
from numpy import *
p = int(input("s: "))
mt = ones((p,p), dtype=int)

for x in range(p):
	for y in range(p):
		if(x<y):
			mt[x,y]= x + 1
		elif(y>x):
			mt[x,y] = y + 1
		else:
			mt[x,y] = y + 1
print(mt)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 00:17:02) 
-- CODE:
from numpy import *
p = int(input("s: "))
mt = ones((p,p), dtype=int)

for x in range(p):
	for y in range(p):
		if(x<y):
			mt[x,y]= x + 1
		elif(y>x):
			mt[x,y] = y + 1
		else:
			mt[x,y] = y + 1
print(mt)
-- EXECUTION TIME:
1.03428
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1836/2603/main.py", line 2, in <module>
    p = int(input())
ValueError: invalid literal for int() with base 10: '[[1,1,1,1],[2,2,2,2],[3,3,3,3],[4,4,4,4]]'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 00:17:14) 
-- CODE:
from numpy import *
p = int(input("s: "))
mt = ones((p,p), dtype=int)

for x in range(p):
	for y in range(p):
		if(x<y):
			mt[x,y]= x + 1
		elif(y>x):
			mt[x,y] = y + 1
		else:
			mt[x,y] = y + 1
print(mt)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 00:18:24) 
-- CODE:
from numpy import *
p = int(input("s: "))
mt = ones((p,p), dtype=int)

for x in range(p):
	for y in range(p):
		if(x<y):
			mt[x,y]= x + 1
		elif(y>x):
			mt[x,y] = y + 1
		else:
			mt[x,y] = y + 1
print(mt)
-- EXECUTION TIME:
0.867337
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1836/2603/main.py", line 2, in <module>
    p = int(input())
ValueError: invalid literal for int() with base 10: '[[1,1,1,1],[2,2,2,2],[3,3,3,3],[4,4,4,4]]'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
