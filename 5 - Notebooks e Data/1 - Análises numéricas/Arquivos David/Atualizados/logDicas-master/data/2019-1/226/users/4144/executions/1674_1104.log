== TEST (2019-04-30 10:38:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("digite um valor: "))
b = float(input("digite um valor: "))
c = float(input("digite um valor: "))
d = float(input("digite um valor: "))
if((b>a) and (d>c)):
	if(((c>=a) and (c<=b)) or ((d<=b) and (d>=a))):
	elif(((a>=c) and (b<=c)) or ((b<=d) and (a>=d))):
	print("Intervalo 1:", a, ",",b)
	print("Intervalo 2:", c, ",",d)
	print("Ha intersecao")
	else:
		print("Intervalo 1:", a, ",",b)
		print("Intervalo 2:", c, ",",d)
		print("Nao ha intersecao")
else:
	print("Intervalo 1:", a, ",",b)
	print("Intervalo 2:", c, ",",d)
	print("Entradas invalidas")
	
	

-- ERROR:
File "XXXX", line 10
    elif(((a>=c) and (b<=c)) or ((b<=d) and (a>=d))):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:39:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("digite um valor: "))
b = float(input("digite um valor: "))
c = float(input("digite um valor: "))
d = float(input("digite um valor: "))
if((b>a) and (d>c)):
	if(((c>=a) and (c<=b)) and ((d<=b) and (d>=a))):
	elif(((a>=c) and (b<=c)) and ((b<=d) and (a>=d))):
	print("Intervalo 1:", a, ",",b)
	print("Intervalo 2:", c, ",",d)
	print("Ha intersecao")
	else:
		print("Intervalo 1:", a, ",",b)
		print("Intervalo 2:", c, ",",d)
		print("Nao ha intersecao")
else:
	print("Intervalo 1:", a, ",",b)
	print("Intervalo 2:", c, ",",d)
	print("Entradas invalidas")
	
	

-- ERROR:
File "XXXX", line 10
    elif(((a>=c) and (b<=c)) and ((b<=d) and (a>=d))):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:44:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("digite um valor: "))
b = float(input("digite um valor: "))
c = float(input("digite um valor: "))
d = float(input("digite um valor: "))
if((b>a) and (d>c)):
	if(((c>=a) and (c<=b)) or ((d>=a) and (d<=b))):
	elif(((a>=c) and (b<=c)) or ((a>=d) and (b<=d))):		
	print("Intervalo 1:", a, ",",b)
	print("Intervalo 2:", c, ",",d)
	print("Ha intersecao")
	else:
		print("Intervalo 1:", a, ",",b)
		print("Intervalo 2:", c, ",",d)
		print("Nao ha intersecao")
else:
	print("Intervalo 1:", a, ",",b)
	print("Intervalo 2:", c, ",",d)
	print("Entradas invalidas")
	
	

-- ERROR:
File "XXXX", line 10
    elif(((a>=c) and (b<=c)) or ((a>=d) and (b<=d))):		
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:46:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("digite um valor: "))
b = float(input("digite um valor: "))
c = float(input("digite um valor: "))
d = float(input("digite um valor: "))
if((b>a) and (d>c)):
	if(((c>=a) and (c<=b)) or ((d>=a) and (d<=b))):
elif(((a>=c) and (b<=c)) or ((a>=d) and (b<=d))):		
print("Intervalo 1:", a, ",",b)
print("Intervalo 2:", c, ",",d)
print("Ha intersecao")
else:
	print("Intervalo 1:", a, ",",b)
	print("Intervalo 2:", c, ",",d)
	print("Nao ha intersecao")
else:
	print("Intervalo 1:", a, ",",b)
	print("Intervalo 2:", c, ",",d)
	print("Entradas invalidas")
	
	

-- EXECUTION TIME:
0.120707
-- ERROR:
  File "/home/codebench/codes/1674/1104/main.py", line 10
    elif(((a>=c) and (b<=c)) or ((a>=d) and (b<=d))):		
    ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:46:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("digite um valor: "))
b = float(input("digite um valor: "))
c = float(input("digite um valor: "))
d = float(input("digite um valor: "))
if((b>a) and (d>c)):
	if(((c>=a) and (c<=b)) or ((d>=a) and (d<=b))):
elif(((a>=c) and (b<=c)) or ((a>=d) and (b<=d))):		
print("Intervalo 1:", a, ",",b)
print("Intervalo 2:", c, ",",d)
print("Ha intersecao")
else:
	print("Intervalo 1:", a, ",",b)
	print("Intervalo 2:", c, ",",d)
	print("Nao ha intersecao")
else:
	print("Intervalo 1:", a, ",",b)
	print("Intervalo 2:", c, ",",d)
	print("Entradas invalidas")
	
	

-- ERROR:
File "XXXX", line 10
    elif(((a>=c) and (b<=c)) or ((a>=d) and (b<=d))):		
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:46:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("digite um valor: "))
b = float(input("digite um valor: "))
c = float(input("digite um valor: "))
d = float(input("digite um valor: "))
if((b>a) and (d>c)):
	if(((c>=a) and (c<=b)) or ((d>=a) and (d<=b))):
	elif(((a>=c) and (b<=c)) or ((a>=d) and (b<=d))):		
	print("Intervalo 1:", a, ",",b)
	print("Intervalo 2:", c, ",",d)
	print("Ha intersecao")
		else:
			print("Intervalo 1:", a, ",",b)
			print("Intervalo 2:", c, ",",d)
			print("Nao ha intersecao")
else:
	print("Intervalo 1:", a, ",",b)
	print("Intervalo 2:", c, ",",d)
	print("Entradas invalidas")
	
	

-- ERROR:
File "XXXX", line 10
    elif(((a>=c) and (b<=c)) or ((a>=d) and (b<=d))):		
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:52:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("digite um valor: "))
b = float(input("digite um valor: "))
c = float(input("digite um valor: "))
d = float(input("digite um valor: "))
if((b>a) and (d>c)):
	if(((c>=a) and (c<=b)) or ((d>=a) and (d<=b))) or (((a>=c) and (b<=c)) or ((a>=d) and (b<=d))):	
		print("Intervalo 1:", a, ",",b)
		print("Intervalo 2:", c, ",",d)
		print("Ha intersecao")
	else:
		print("Intervalo 1:", a, ",",b)
		print("Intervalo 2:", c, ",",d)
		print("Nao ha intersecao")
else:
	print("Intervalo 1:", a, ",",b)
	print("Intervalo 2:", c, ",",d)
	print("Entradas invalidas")
	
	

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:52:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("digite um valor: "))
b = float(input("digite um valor: "))
c = float(input("digite um valor: "))
d = float(input("digite um valor: "))
if((b>a) and (d>c)):
	if(((c>=a) and (c<=b)) or ((d>=a) and (d<=b))) or (((a>=c) and (b<=c)) or ((a>=d) and (b<=d))):	
		print("Intervalo 1:", a, ",",b)
		print("Intervalo 2:", c, ",",d)
		print("Ha intersecao")
	else:
		print("Intervalo 1:", a, ",",b)
		print("Intervalo 2:", c, ",",d)
		print("Nao ha intersecao")
else:
	print("Intervalo 1:", a, ",",b)
	print("Intervalo 2:", c, ",",d)
	print("Entradas invalidas")
	
	

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:52:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("digite um valor: "))
b = float(input("digite um valor: "))
c = float(input("digite um valor: "))
d = float(input("digite um valor: "))
if((b>a) and (d>c)):
	if(((c>=a) and (c<=b)) or ((d>=a) and (d<=b))) or (((a>=c) and (b<=c)) or ((a>=d) and (b<=d))):	
		print("Intervalo 1:", a, ",",b)
		print("Intervalo 2:", c, ",",d)
		print("Ha intersecao")
	else:
		print("Intervalo 1:", a, ",",b)
		print("Intervalo 2:", c, ",",d)
		print("Nao ha intersecao")
else:
	print("Intervalo 1:", a, ",",b)
	print("Intervalo 2:", c, ",",d)
	print("Entradas invalidas")
	
	

-- EXECUTION TIME:
0.165407
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
