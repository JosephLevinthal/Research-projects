== TEST (2019-04-29 22:15:47) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H= float(input("Digite a altura total do tanque: "))
h= float(input("Digite o nivel do combustivel do tanque: "))
r= float(input("Digite a o raio dos bojos: "))

if(H<0 or h<0 or r<0 or H<=h or H<=2*r):
	print("Entradas:",H,",",h,",","r")
	print("Volume:","litros")
-- OUTPUT:
A entrada 9  eh invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 22:16:18) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H= float(input("Digite a altura total do tanque: "))
h= float(input("Digite o nivel do combustivel do tanque: "))
r= float(input("Digite a o raio dos bojos: "))

if(H<0 or h<0 or r<0 or H<=h or H<=2*r):
	print("Entradas:",H,",",h,",","r")
	print("Entradas invalidas")
-- OUTPUT:
A entrada 9  eh invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 22:16:27) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H= float(input("Digite a altura total do tanque: "))
h= float(input("Digite o nivel do combustivel do tanque: "))
r= float(input("Digite a o raio dos bojos: "))

if(H<0 or h<0 or r<0 or H<=h or H<=2*r):
	print("Entradas:",H,",",h,",","r")
	print("Entradas invalidas")
-- OUTPUT:
A entrada 9  eh invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 22:17:02) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H= float(input("Digite a altura total do tanque: "))
h= float(input("Digite o nivel do combustivel do tanque: "))
r= float(input("Digite a o raio dos bojos: "))

if(H<0 or h<0 or r<0 or H<=h or H<=2*r):
	print("Entradas:",H,",",h,",",r)
	print("Entradas invalidas")
-- OUTPUT:
A entrada 9  eh invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 22:30:29) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H= float(input("Digite a altura total do tanque: "))
h= float(input("Digite o nivel do combustivel do tanque: "))
r= float(input("Digite a o raio dos bojos: "))
from math import*
vsf=4

if(H<0 or h<0 or r<0 or H<=h or H<=2*r):
	print("Entradas:",H,",",h,",",r)
	print("Entradas invalidas")
elif(h)
-- ERROR:
File "XXXX", line 15
    elif(h)
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 22:37:12) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H= float(input("Digite a altura total do tanque: "))
h= float(input("Digite o nivel do combustivel do tanque: "))
r= float(input("Digite a o raio dos bojos: "))
from math import*
vse=1/2*((4*pi*r**3)/3)

if(H<0 or h<0 or r<0 or H<=h or H<=2*r):
	print("Entradas:",H,",",h,",",r)
	print("Entradas invalidas")
elif(h<=vse):
	V=vse
-- ERROR:
File "XXXX", line 15
    elif(h)
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:25:31) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H= float(input("Digite a altura total do tanque: "))
h= float(input("Digite o nivel do combustivel do tanque: "))
r= float(input("Digite a o raio dos bojos: "))
from math import*
print("Entradas:",H,",",h,",",r)
ve=((4*pi*r**3)/3)
vc=((pi/3)*(2*r - h)*(3*r - (2*r-h)))
vci= pi*(r**2)*(h-r)
if(H<0 or h<0 or r<0 or H<=h or H<=2*r):
	print("Entradas invalidas")
elif(h<=r):
	V=(ve -vc)*1000
	print("Volume:",V,"litros")
elif(h>r and (H-h)>r):
	V=((ve/2)+vci)*1000
	print("Volume:",V,"litros")
elif(h>r and (H-h)<=r):
	V=((ve+vci)-vc)
	print("Volume:",V,"litros")
	
	
	
	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.19067828401 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:28:25) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H= float(input("Digite a altura total do tanque: "))
h= float(input("Digite o nivel do combustivel do tanque: "))
r= float(input("Digite a o raio dos bojos: "))
from math import*

print("Entradas:",H,",",h,",",r)
ve=((4*pi*r**3)/3)
vc=((pi/3)*(2*r - h)*(3*r - (2*r-h)))
vci= pi*(r**2)*(h-r)
if(H<0 or h<0 or r<0 or H<=h or H<=2*r):
	print("Entradas invalidas")
elif(h<=r):
	V=(ve -vc)*1000
	print("Volume:",round(V,3),"litros")
elif(h>r and (H-h)>r):
	V=((ve/2)+vci)*1000
	print("Volume:",round(V,3),"litros")
elif(h>r and (H-h)<=r):
	V=((ve+vci)-vc)
	print("Volume:",round(V,3),"litros")
	
	
	
	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:29:16) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H= float(input("Digite a altura total do tanque: "))
h= float(input("Digite o nivel do combustivel do tanque: "))
r= float(input("Digite a o raio dos bojos: "))
from math import*

print("Entradas:",H,",",h,",",r)
ve=((4*pi*r**3)/3)
vc=((pi/3)*(2*r - h)*(3*r - (2*r-h)))
vci= pi*(r**2)*(h-r)
if(H<0 or h<0 or r<0 or H<=h or H<=2*r):
	print("Entradas invalidas")
elif(h<=r):
	V=((ve -vc)*1000)
	print("Volume:",round(V,3),"litros")
elif(h>r and (H-h)>r):
	V=(((ve/2)+vci)*1000)
	print("Volume:",round(V,3),"litros")
elif(h>r and (H-h)<=r):
	V=(((ve+vci)-vc)*1000)
	print("Volume:",round(V,3),"litros")
	
	
	
	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:33:57) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H= float(input("Digite a altura total do tanque: "))
h= float(input("Digite o nivel do combustivel do tanque: "))
r= float(input("Digite a o raio dos bojos: "))
from math import*

print("Entradas:",H,",",h,",",r)
ve=(((4*pi*r**3)/3)/2)
vc=((pi/3)*(2*r - h)*(3*r - (2*r-h)))
vci= pi*(r**2)*(h-r)
if(H<0 or h<0 or r<0 or H<=h or H<=2*r):
	print("Entradas invalidas")
elif(h<=r):
	V=((ve -vc)*1000)
	print("Volume:",round(V,3),"litros")
elif(h>r and (H-h)>r):
	V=(((ve/2)+vci)*1000)
	print("Volume:",round(V,3),"litros")
elif(h>r and (H-h)<=r):
	V=(((ve+vci)-vc)*1000)
	print("Volume:",round(V,3),"litros")
	
	
	
	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 69245.938 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:41:19) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H= float(input("Digite a altura total do tanque: "))
h= float(input("Digite o nivel do combustivel do tanque: "))
r= float(input("Digite o raio dos bojos: "))
from math import*

print("Entradas:",H,",",h,",",r)
ve=((4/3)*pi*(r**3))
vc=((pi/3)*((2*r - h)**2)*(3*r - (2*r-h)))
vci= pi*(r**2)*(h-r)

if(H<0 or h<0 or r<0 or H<=h or H<=2*r):
	print("Entradas invalidas")
elif(h<=r):
	V=((ve -vc)*1000)
	print("Volume:",round(V,3),"litros")
elif(h>r and (H-h)>r):
	V=(((ve/2)+vci)*1000)
	print("Volume:",round(V,3),"litros")
elif(h>r and (H-h)<=r):
	V=(((ve+vci)-vc)*1000)
	print("Volume:",round(V,3),"litros")
	
	
	
	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:43:22) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H= float(input("Digite a altura total do tanque: "))
h= float(input("Digite o nivel do combustivel do tanque: "))
r= float(input("Digite o raio dos bojos: "))
from math import*

print("Entradas:",H,",",h,",",r)
ve=((4/3)*pi*(r**3))
vc=((pi/3)*((2*r - h)**2)*(3*r - (2*r-h)))
vci= pi*(r**2)*(h-r)

if(H<0 or h<0 or r<0 or H<=h or H<=2*r):
	print("Entradas invalidas")
elif(h<=r):
	V=((ve -vc)*1000)
	print("Volume:",round(V,3),"litros")
elif(h>r and (H-h)>r):
	V=(((ve/2)+vci)*1000)
	print("Volume:",round(V,3),"litros")
elif(h>r and (H-h)<=r):
	V=(((ve+vci)-vc)*1000)
	print("Volume:",round(V,3),"litros")
	
	
	
	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:43:42) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H= float(input("Digite a altura total do tanque: "))
h= float(input("Digite o nivel do combustivel do tanque: "))
r= float(input("Digite o raio dos bojos: "))
from math import*

print("Entradas:",H,",",h,",",r)
ve=((4/3)*pi*(r**3))
vc=((pi/3)*((2*r - h)**2)*(3*r - (2*r-h)))
vci= pi*(r**2)*(h-r)

if(H<0 or h<0 or r<0 or H<=h or H<=2*r):
	print("Entradas invalidas")
elif(h<=r):
	V=((ve -vc)*1000)
	print("Volume:",round(V,3),"litros")
elif(h>r and (H-h)>r):
	V=(((ve/2)+vci)*1000)
	print("Volume:",round(V,3),"litros")
elif(h>r and (H-h)<=r):
	V=(((ve+vci)-vc)*1000)
	print("Volume:",round(V,3),"litros")
	
	
	
	
-- EXECUTION TIME:
0.191315
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:43:58) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H= float(input("Digite a altura total do tanque: "))
h= float(input("Digite o nivel do combustivel do tanque: "))
r= float(input("Digite o raio dos bojos: "))
from math import*

print("Entradas:",H,",",h,",",r)
ve=((4/3)*pi*(r**3))
vc=((pi/3)*((2*r - h)**2)*(3*r - (2*r-h)))
vci= pi*(r**2)*(h-r)

if(H<0 or h<0 or r<0 or H<=h or H<=2*r):
	print("Entradas invalidas")
elif(h<=r):
	V=((ve -vc)*1000)
	print("Volume:",round(V,3),"litros")
elif(h>r and (H-h)>r):
	V=(((ve/2)+vci)*1000)
	print("Volume:",round(V,3),"litros")
elif(h>r and (H-h)<=r):
	V=(((ve+vci)-vc)*1000)
	print("Volume:",round(V,3),"litros")
	
	
	
	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
