== TEST (2019-04-01 11:07:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input(''))
b = float(input(''))
c = float(input(''))
from math import sqrt
s = (a + b + c) / 2
A = sqrt(s (s - a) (s - b) (s - c))
print(A)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    A = sqrt(s (s - a) (s - b) (s - c))
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 11:13:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float (input(''))
b = float(input(''))
c = float(input(''))
from math import sqrt
s = (a + b + c) / 2
A = sqrt (s*(s - a)*(s - b)*(s - c))
print (A)
-- OUTPUT:
69.41967475975385
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 11:14:13) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float (input(''))
b = float(input(''))
c = float(input(''))
from math import sqrt
s = (a + b + c) / 2
A = sqrt (s*(s - a)*(s - b)*(s - c))
print (round(A, 5))
-- OUTPUT:
69.41967
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 11:14:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float (input(''))
b = float(input(''))
c = float(input(''))
from math import sqrt
s = (a + b + c) / 2
A = sqrt (s*(s - a)*(s - b)*(s - c))
print (round(A, 5))
-- EXECUTION TIME:
0.192012
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.41967
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709.16654
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
