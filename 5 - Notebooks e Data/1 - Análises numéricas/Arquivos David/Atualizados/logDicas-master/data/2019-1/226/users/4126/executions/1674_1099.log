== TEST (2019-05-01 22:34:55) 
-- CODE:
a = float(input("digite lado a:"))
b = float(input("digite lado b:"))
c = float(input("digite lado c:"))
print("Entradas:",a,",b,",",c)
x = "Tipo de triangulo:"
#condicoes para triangulo
if((a<0))or(b<0)or(c<0)or (a>=b + c)or (b>=c + a) or (c>=a + b)):
	print(x,"Invalido")
	else:
		if(a==b)and(b==c):
	print(x,"equilatero")
	else:
		if(a==b)or(b==c)or(c==a):
	print(x,"isoceles")
	else:
	print(x,"escaleno")
-- ERROR:
File "XXXX", line 4
    print("Entradas:",a,",b,",",c)
                                 ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:37:14) 
-- CODE:
a = float(input("digite lado a:"))
b = float(input("digite lado b:"))
c = float(input("digite lado c:"))
print("Entradas:",a,",b,",",c)
x = "Tipo de triangulo:"
#condicoes para triangulo
if((a<0))or(b<0)or(c<0)or (a>=b + c)or (b>=c + a) or (c>=a + b)):
	print(x,"Invalido")
	else:
		if(a==b)and(b==c):
	print(x,"equilatero")
	else:
		if(a==b)or(b==c)or(c==a):
	print(x,"isoceles")
	else:
	print(x,"escaleno")
-- ERROR:
File "XXXX", line 4
    print("Entradas:",a,",b,",",c)
                                 ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:37:57) 
-- CODE:
a = float(input("digite lado a:"))
b = float(input("digite lado b:"))
c = float(input("digite lado c:"))
print("Entradas:",a,",",b,",",c)
x = "Tipo de triangulo:"
#condicoes para triangulo
if((a<0))or(b<0)or(c<0)or (a>=b + c)or (b>=c + a) or (c>=a + b)):
	print(x,"Invalido")
	else:
		if(a==b)and(b==c):
	print(x,"equilatero")
	else:
		if(a==b)or(b==c)or(c==a):
	print(x,"isoceles")
	else:
	print(x,"escaleno")
-- ERROR:
File "XXXX", line 7
    if((a<0))or(b<0)or(c<0)or (a>=b + c)or (b>=c + a) or (c>=a + b)):
                                                                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:38:17) 
-- CODE:
a = float(input("digite lado a:"))
b = float(input("digite lado b:"))
c = float(input("digite lado c:"))
print("Entradas:",a,",",b,",",c)
x = "Tipo de triangulo:"
#condicoes para triangulo
if((a<0))or(b<0)or(c<0)or (a>=b + c)or (b>=c + a) or (c>=a + b):
	print(x,"Invalido")
	else:
		if(a==b)and(b==c):
	print(x,"equilatero")
	else:
		if(a==b)or(b==c)or(c==a):
	print(x,"isoceles")
	else:
	print(x,"escaleno")
-- ERROR:
File "XXXX", line 9
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:38:48) 
-- CODE:
a = float(input("digite lado a:"))
b = float(input("digite lado b:"))
c = float(input("digite lado c:"))
print("Entradas:",a,",",b,",",c)
x = "Tipo de triangulo:"
#condicoes para triangulo
if((a<0)or(b<0)or(c<0)or (a>=b + c)or (b>=c + a) or (c>=a + b)):
	print(x,"Invalido")
else:
		if(a==b)and(b==c):
	print(x,"equilatero")
	else:
		if(a==b)or(b==c)or(c==a):
	print(x,"isoceles")
	else:
	print(x,"escaleno")
-- ERROR:
File "XXXX", line 11
    print(x,"equilatero")
                        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:38:53) 
-- CODE:
a = float(input("digite lado a:"))
b = float(input("digite lado b:"))
c = float(input("digite lado c:"))
print("Entradas:",a,",",b,",",c)
x = "Tipo de triangulo:"
#condicoes para triangulo
if((a<0)or(b<0)or(c<0)or (a>=b + c)or (b>=c + a) or (c>=a + b)):
	print(x,"Invalido")
else:
		if(a==b)and(b==c):
print(x,"equilatero")
	else:
		if(a==b)or(b==c)or(c==a):
	print(x,"isoceles")
	else:
	print(x,"escaleno")
-- ERROR:
File "XXXX", line 11
    print(x,"equilatero")
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:39:05) 
-- CODE:
a = float(input("digite lado a:"))
b = float(input("digite lado b:"))
c = float(input("digite lado c:"))
print("Entradas:",a,",",b,",",c)
x = "Tipo de triangulo:"
#condicoes para triangulo
if((a<0)or(b<0)or(c<0)or (a>=b + c)or (b>=c + a) or (c>=a + b)):
	print(x,"Invalido")
else:
		if(a==b)and(b==c):
   print(x,"equilatero")
	else:
		if(a==b)or(b==c)or(c==a):
	print(x,"isoceles")
	else:
	print(x,"escaleno")
-- ERROR:
File "XXXX", line 11
    print(x,"equilatero")
                        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:39:20) 
-- CODE:
a = float(input("digite lado a:"))
b = float(input("digite lado b:"))
c = float(input("digite lado c:"))
print("Entradas:",a,",",b,",",c)
x = "Tipo de triangulo:"
#condicoes para triangulo
if((a<0)or(b<0)or(c<0)or (a>=b + c)or (b>=c + a) or (c>=a + b)):
	print(x,"Invalido")
else:
		if(a==b)and(b==c):
   print(x,"quilatero")
	else:
		if(a==b)or(b==c)or(c==a):
	print(x,"isoceles")
	else:
	print(x,"escaleno")
-- ERROR:
File "XXXX", line 11
    print(x,"quilatero")
                       ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:39:32) 
-- CODE:
a = float(input("digite lado a:"))
b = float(input("digite lado b:"))
c = float(input("digite lado c:"))
print("Entradas:",a,",",b,",",c)
x = "Tipo de triangulo:"
#condicoes para triangulo
if((a<0)or(b<0)or(c<0)or (a>=b + c)or (b>=c + a) or (c>=a + b)):
	print(x,"Invalido")
else:
		if(a==b)and(b==c):
   print(x,"Equilatero")
	else:
		if(a==b)or(b==c)or(c==a):
	print(x,"Isoceles")
	else:
	print(x,"Escaleno")
-- ERROR:
File "XXXX", line 11
    print(x,"Equilatero")
                        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:40:17) 
-- CODE:
a = float(input("digite lado a:"))
b = float(input("digite lado b:"))
c = float(input("digite lado c:"))
print("Entradas:",a,",",b,",",c)
x = "Tipo de triangulo:"
#condicoes para triangulo
if((a<0)or(b<0)or(c<0)or (a>=b + c)or (b>=c + a) or (c>=a + b)):
	print(x,"Invalido")
else:
		if(a==b)and(b==c):
   print(x,"equilatero")
	else:
		if(a==b)or(b==c)or(c==a):
	print(x,"Isoceles")
	else:
	print(x,"Escaleno")
-- ERROR:
File "XXXX", line 11
    print(x,"equilatero")
                        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 22:40:50) 
-- CODE:
a = float(input("digite lado a:"))
b = float(input("digite lado b:"))
c = float(input("digite lado c:"))
print("Entradas:",a,",",b,",",c)
x = "Tipo de triangulo:"
#condicoes para triangulo
if((a<0)or(b<0)or(c<0)or (a>=b + c)or (b>=c + a) or (c>=a + b)):
	print(x,"Invalido")
else:
		if(a==b)and(b==c):
   print(x,"equilatero")
	else:
		if(a==b)or(b==c)or(c==a):
	print(x,"Isoceles")
	else:
	print(x,"Escaleno")
-- ERROR:
File "XXXX", line 11
    print(x,"equilatero")
                        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 00:07:37) 
-- CODE:
a = float(input("digite lado a:"))
b = float(input("digite lado b:"))
c = float(input("digite lado c:"))
print("Entradas:",a,",",b,",",c)
x = "Tipo de triangulo:"
#condicoes para triangulo
if((a<0)or(b<0)or(c<0)or (a>=b + c)or (b>=c + a) or (c>=a + b)):
	print(x,"Invalido")
else:
		if(a==b)and(b==c):
   print(x,"equilatero")
	else:
		if(a==b)or(b==c)or(c==a):
	print(x,"Isoceles")
	else:
	print(x,"Escaleno")
-- ERROR:
File "XXXX", line 11
    print(x,"equilatero")
                        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 00:07:53) 
-- CODE:
a = float(input("digite lado a:"))
b = float(input("digite lado b:"))
c = float(input("digite lado c:"))
print("Entradas:",a,",",b,",",c)
x = "Tipo de triangulo:"
#condicoes para triangulo
if((a<0)or(b<0)or(c<0)or (a>=b + c)or (b>=c + a) or (c>=a + b)):
print(x,"Invalido")
else:
		if(a==b)and(b==c):
print(x,"equilatero")
	else:
		if(a==b)or(b==c)or(c==a):
print(x,"Isoceles")
	else:
print(x,"Escaleno")
-- ERROR:
File "XXXX", line 8
    print(x,"Invalido")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 00:08:07) 
-- CODE:
a = float(input("digite lado a:"))
b = float(input("digite lado b:"))
c = float(input("digite lado c:"))
print("Entradas:",a,",",b,",",c)
x = "Tipo de triangulo:"
#condicoes para triangulo
if((a<0)or(b<0)or(c<0)or (a>=b + c)or (b>=c + a) or (c>=a + b)):
	print(x,"Invalido")
else:
		if(a==b)and(b==c):
	print(x,"equilatero")
	else:
		if(a==b)or(b==c)or(c==a):
	print(x,"Isoceles")
	else:
	print(x,"Escaleno")
-- ERROR:
File "XXXX", line 11
    print(x,"equilatero")
                        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 00:11:42) 
-- CODE:
a = float(input("digite lado a:"))
b = float(input("digite lado b:"))
c = float(input("digite lado c:"))

print("Entradas:",a,",",b,",",c)
x = "Tipo de triangulo:"
#condicoes para triangulo
if((a<0)or(b<0)or(c<0)or (a>=b + c)or (b>=c + a) or (c>=a + b)):
	print(x,"Invalido")
else:
		if(a==b)and(b==c):
	print(x,"equilatero")
	else:
		if(a==b)or(b==c)or(c==a):
	print(x,"Isoceles")
	else:
	print(x,"Escaleno")
-- ERROR:
File "XXXX", line 12
    print(x,"equilatero")
                        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 00:11:57) 
-- CODE:
a = float(input("digite lado a:"))
b = float(input("digite lado b:"))
c = float(input("digite lado c:"))

print("Entradas:",a,",",b,",",c)
x = "Tipo de triangulo:"

if((a<0)or(b<0)or(c<0)or (a>=b + c)or (b>=c + a) or (c>=a + b)):
	print(x,"Invalido")
else:
		if(a==b)and(b==c):
	print(x,"equilatero")
	else:
		if(a==b)or(b==c)or(c==a):
	print(x,"Isoceles")
	else:
	print(x,"Escaleno")
-- ERROR:
File "XXXX", line 12
    print(x,"equilatero")
                        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 00:12:45) 
-- CODE:
a = float(input("digite lado a:"))
b = float(input("digite lado b:"))
c = float(input("digite lado c:"))

print("Entradas:",a,",",b,",",c)
x = "Tipo de triangulo:"

if((a<0)or(b<0)or(c<0)or(a>=b + c)or (b>=c + a) or (c>=a + b)):
	print(x,"Invalido")
else:
		if(a==b)and(b==c):
	print(x,"equilatero")
else:
		if(a==b)or(b==c)or(c==a):
	print(x,"Isoceles")
else:
	print(x,"Escaleno")
-- ERROR:
File "XXXX", line 12
    print(x,"equilatero")
                        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 00:12:49) 
-- CODE:
a = float(input("digite lado a:"))
b = float(input("digite lado b:"))
c = float(input("digite lado c:"))

print("Entradas:",a,",",b,",",c)
x = "Tipo de triangulo:"

if((a<0)or(b<0)or(c<0)or(a>=b + c)or (b>=c + a) or (c>=a + b)):
	print(x,"Invalido")
else:
		if(a==b)and(b==c):
print(x,"equilatero")
else:
		if(a==b)or(b==c)or(c==a):
	print(x,"Isoceles")
else:
	print(x,"Escaleno")
-- ERROR:
File "XXXX", line 12
    print(x,"equilatero")
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 00:12:56) 
-- CODE:
a = float(input("digite lado a:"))
b = float(input("digite lado b:"))
c = float(input("digite lado c:"))

print("Entradas:",a,",",b,",",c)
x = "Tipo de triangulo:"

if((a<0)or(b<0)or(c<0)or(a>=b + c)or (b>=c + a) or (c>=a + b)):
	print(x,"Invalido")
else:
		if(a==b)and(b==c):
      print(x,"equilatero")
else:
		if(a==b)or(b==c)or(c==a):
	print(x,"Isoceles")
else:
	print(x,"Escaleno")
-- ERROR:
File "XXXX", line 12
    print(x,"equilatero")
                        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 00:12:59) 
-- CODE:
a = float(input("digite lado a:"))
b = float(input("digite lado b:"))
c = float(input("digite lado c:"))

print("Entradas:",a,",",b,",",c)
x = "Tipo de triangulo:"

if((a<0)or(b<0)or(c<0)or(a>=b + c)or (b>=c + a) or (c>=a + b)):
	print(x,"Invalido")
else:
		if(a==b)and(b==c):
         print(x,"equilatero")
else:
		if(a==b)or(b==c)or(c==a):
	print(x,"Isoceles")
else:
	print(x,"Escaleno")
-- ERROR:
File "XXXX", line 12
    print(x,"equilatero")
                        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 00:13:55) 
-- CODE:
a = float(input("digite lado a:"))
b = float(input("digite lado b:"))
c = float(input("digite lado c:"))

print("Entradas:",a,",",b,",",c)
x = "Tipo de triangulo:"

if((a<0)or(b<0)or(c<0)or(a>=b + c)or (b>=c + a) or (c>=a + b)):
	print(x,"Invalido")
else:
		if(a==b)and(b==c):
	print(x,"equilatero")
else:
		if(a==b)or(b==c)or(c==a):
	print(x,"isoceles")
else:
	print(x,"escaleno")
-- EXECUTION TIME:
0.215228
-- ERROR:
  File "/home/codebench/codes/1674/1099/main.py", line 12
    print(x,"equilatero")
                        ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 00:13:56) 
-- CODE:
a = float(input("digite lado a:"))
b = float(input("digite lado b:"))
c = float(input("digite lado c:"))

print("Entradas:",a,",",b,",",c)
x = "Tipo de triangulo:"

if((a<0)or(b<0)or(c<0)or(a>=b + c)or (b>=c + a) or (c>=a + b)):
	print(x,"Invalido")
else:
		if(a==b)and(b==c):
	print(x,"equilatero")
else:
		if(a==b)or(b==c)or(c==a):
	print(x,"isoceles")
else:
	print(x,"escaleno")
-- ERROR:
File "XXXX", line 12
    print(x,"equilatero")
                        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 00:14:36) 
-- CODE:
a = float(input("digite lado a:"))
b = float(input("digite lado b:"))
c = float(input("digite lado c:"))

print("Entradas:",a,",",b,",",c)
x = "Tipo de triangulo:"

if((a<0)or(b<0)or(c<0)or(a>=b + c)or (b>=c + a) or (c>=a + b)):
	print(x,"Invalido")
else:
   	if(a==b)and(b==c):
			print(x,"equilatero")
else:
		if(a==b)or(b==c)or(c==a):
			print(x,"isoceles")
else:
			print(x,"escaleno")
-- ERROR:
File "XXXX", line 12
    print(x,"equilatero")
                        ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 00:16:00) 
-- CODE:
a = float(input("digite lado a:"))
b = float(input("digite lado b:"))
c = float(input("digite lado c:"))

print("Entradas:",a,",",b,",",c)
x = "Tipo de triangulo:"

if((a<0)or(b<0)or(c<0)or(a>=b + c)or (b>=c + a) or (c>=a + b)):
	print(x,"Invalido")
else:
	if(a==b)and(b==c):
		print(x,"equilatero")
else:
		if(a==b)or(b==c)or(c==a):
	print(x,"isoceles")
else:
	print(x,"escaleno")
-- ERROR:
File "XXXX", line 13
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 00:16:14) 
-- CODE:
a = float(input("digite lado a:"))
b = float(input("digite lado b:"))
c = float(input("digite lado c:"))

print("Entradas:",a,",",b,",",c)
x = "Tipo de triangulo:"

if((a<0)or(b<0)or(c<0)or(a>=b + c)or (b>=c + a) or (c>=a + b)):
	print(x,"Invalido")
else:
	if(a==b)and(b==c):
		print(x,"equilatero")
else:
	if(a==b)or(b==c)or(c==a):
		print(x,"isoceles")
else:
	print(x,"escaleno")
-- ERROR:
File "XXXX", line 13
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 00:16:41) 
-- CODE:
a = float(input("digite lado a:"))
b = float(input("digite lado b:"))
c = float(input("digite lado c:"))

print("Entradas:",a,",",b,",",c)
x = "Tipo de triangulo:"

if((a<0)or(b<0)or(c<0)or(a>=b + c)or (b>=c + a) or (c>=a + b)):
	print(x,"Invalido")
else:
	if(a==b)and(b==c):
		print(x,"equilatero")
else:
		if(a==b)or(b==c)or(c==a):
		print(x,"isoceles")
else:
	print(x,"escaleno")
-- ERROR:
File "XXXX", line 13
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 00:16:59) 
-- CODE:
a = float(input("digite lado a:"))
b = float(input("digite lado b:"))
c = float(input("digite lado c:"))

print("Entradas:",a,",",b,",",c)
x = "Tipo de triangulo:"

if((a<0)or(b<0)or(c<0)or(a>=b + c)or (b>=c + a) or (c>=a + b)):
	print(x,"Invalido")
else:
	if(a==b)and(b==c):
		print(x,"equilatero")
else:
	if(a==b)or(b==c)or(c==a):
		print(x,"isoceles")
else:
		print(x,"escaleno")
-- ERROR:
File "XXXX", line 13
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 00:17:51) 
-- CODE:
a = float(input("digite lado a:"))
b = float(input("digite lado b:"))
c = float(input("digite lado c:"))

print("Entradas:",a,",",b,",",c)
x = "Tipo de triangulo:"

if((a<0)or(b<0)or(c<0)or(a>=b + c)or (b>=c + a) or (c>=a + b)):
	print(x,"Invalido")
else:
	if(a==b)and(b==c):
		print(x,"equilatero")
else:
	if(a==b)or(b==c)or(c==a):
		print(x,"isoceles")
else:
		print(x,"escaleno")
-- EXECUTION TIME:
0.148263
-- ERROR:
  File "/home/codebench/codes/1674/1099/main.py", line 13
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 00:18:07) 
-- CODE:
a = float(input("digite lado a:"))
b = float(input("digite lado b:"))
c = float(input("digite lado c:"))

print("Entradas:",a,",",b,",",c)
x = "Tipo de triangulo:"

if((a<0)or(b<0)or(c<0)or(a>=b + c)or (b>=c + a) or (c>=a + b)):
	print(x,"Invalido")
else:
	if(a==b)and(b==c):
		print(x,"equilatero")
else:
	if(a==b)or(b==c)or(c==a):
		print(x,"isoceles")
else:
		print(x,"escaleno")
-- ERROR:
File "XXXX", line 13
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 00:18:16) 
-- CODE:
a = float(input("digite lado a:"))
b = float(input("digite lado b:"))
c = float(input("digite lado c:"))

print("Entradas:",a,",",b,",",c)
x = "Tipo de triangulo:"

if((a<0)or(b<0)or(c<0)or(a>=b + c)or (b>=c + a) or (c>=a + b)):
	print(x,"Invalido")
else:
	if(a==b)and(b==c):
		print(x,"equilatero")
else:
	if(a==b)or(b==c)or(c==a):
		print(x,"isoceles")
else:
		print(x,"escaleno")
-- ERROR:
File "XXXX", line 13
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 00:19:03) 
-- CODE:
a = float(input("digite lado a:"))
b = float(input("digite lado b:"))
c = float(input("digite lado c:"))

print("Entradas:",a,",",b,",",c)
x = "Tipo de triangulo:"

if((a<0)or(b<0)or(c<0)or(a>=b + c)or (b>=c + a) or (c>=a + b)):
	print(x,"Invalido")
else:
	if(a==b)and(b==c):
		print(x,"equilatero")
else:
	if(a==b)or(b==c)or(c==a):
		print(x,"isoceles")
	else:
		print(x,"escaleno")
-- ERROR:
File "XXXX", line 13
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 00:20:05) 
-- CODE:
a = float(input("digite lado a:"))
b = float(input("digite lado b:"))
c = float(input("digite lado c:"))

print("Entradas:",a,",",b,",",c)
x = "Tipo de triangulo:"

if((a<0)or(b<0)or(c<0)or(a>=b + c)or (b>=c + a) or (c>=a + b)):
	print(x,"Invalido")
else:
	if(a==b)and(b==c):
		print(x,"equilatero")
else:
	if(a==b)or(b==c)or(c==a):
		print(x,"isoceles")
else:
		print(x,"escaleno")
-- ERROR:
File "XXXX", line 13
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 00:20:34) 
-- CODE:
a = float(input("digite lado a:"))
b = float(input("digite lado b:"))
c = float(input("digite lado c:"))

print("Entradas:",a,",",b,",",c)
x = "Tipo de triangulo:"

if((a<0)or(b<0)or(c<0)or(a>=b + c)or (b>=c + a) or (c>=a + b)):
	print(x,"Invalido")
else:
	if(a==b)and(b==c):
		print(x,"equilatero")
else
	if(a==b)or(b==c)or(c==a):
		print(x,"isoceles")
else:
		print(x,"escaleno")
-- ERROR:
File "XXXX", line 13
    else
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 00:20:42) 
-- CODE:
a = float(input("digite lado a:"))
b = float(input("digite lado b:"))
c = float(input("digite lado c:"))

print("Entradas:",a,",",b,",",c)
x = "Tipo de triangulo:"

if((a<0)or(b<0)or(c<0)or(a>=b + c)or (b>=c + a) or (c>=a + b)):
	print(x,"Invalido")
else:
	if(a==b)and(b==c):
		print(x,"equilatero")
else:
	if(a==b)or(b==c)or(c==a):
		print(x,"isoceles")
else:
		print(x,"escaleno")
-- ERROR:
File "XXXX", line 13
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 00:21:08) 
-- CODE:
a = float(input("digite lado a:"))
b = float(input("digite lado b:"))
c = float(input("digite lado c:"))

print("Entradas:",a,",",b,",",c)
x = "Tipo de triangulo:"

if((a<0)or(b<0)or(c<0)or(a>=b + c)or (b>=c + a) or (c>=a + b)):
	print(x,"invalido")
else:
	if(a==b)and(b==c):
		print(x,"equilatero")
else:
	if(a==b)or(b==c)or(c==a):
		print(x,"isoceles")
else:
		print(x,"escaleno")
-- ERROR:
File "XXXX", line 13
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 00:21:35) 
-- CODE:
a = float(input("digite lado a:"))
b = float(input("digite lado b:"))
c = float(input("digite lado c:"))

print("Entradas:",a,",",b,",",c)
x = "Tipo de triangulo:"

if((a<0)or(b<0)or(c<0)or(a>=b + c)or (b>=c + a) or (c>=a + b)):
	print(x,"invalido")
else:
	if(a==b)and(b==c):
		print(x,"equilatero")
 else:
	if(a==b)or(b==c)or(c==a):
		print(x,"isoceles")
else:
		print(x,"escaleno")
-- ERROR:
File "XXXX", line 13
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 00:21:50) 
-- CODE:
a = float(input("digite lado a:"))
b = float(input("digite lado b:"))
c = float(input("digite lado c:"))

print("Entradas:",a,",",b,",",c)
x = "Tipo de triangulo:"

if((a<0)or(b<0)or(c<0)or(a>=b + c)or (b>=c + a) or (c>=a + b)):
	print(x,"invalido")
	else:
	if(a==b)and(b==c):
			print(x,"equilatero")
   else:
		if(a==b)or(b==c)or(c==a):
			print(x,"isoceles")
   else:
			print(x,"escaleno")
-- ERROR:
File "XXXX", line 10
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 00:21:54) 
-- CODE:
a = float(input("digite lado a:"))
b = float(input("digite lado b:"))
c = float(input("digite lado c:"))

print("Entradas:",a,",",b,",",c)
x = "Tipo de triangulo:"

if((a<0)or(b<0)or(c<0)or(a>=b + c)or (b>=c + a) or (c>=a + b)):
	print(x,"invalido")
	else:
		if(a==b)and(b==c):
			print(x,"equilatero")
   else:
		if(a==b)or(b==c)or(c==a):
			print(x,"isoceles")
   else:
			print(x,"escaleno")
-- ERROR:
File "XXXX", line 10
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 00:21:59) 
-- CODE:
a = float(input("digite lado a:"))
b = float(input("digite lado b:"))
c = float(input("digite lado c:"))

print("Entradas:",a,",",b,",",c)
x = "Tipo de triangulo:"

if((a<0)or(b<0)or(c<0)or(a>=b + c)or (b>=c + a) or (c>=a + b)):
		print(x,"invalido")
	else:
		if(a==b)and(b==c):
			print(x,"equilatero")
   else:
		if(a==b)or(b==c)or(c==a):
			print(x,"isoceles")
   else:
			print(x,"escaleno")
-- ERROR:
File "XXXX", line 10
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 00:22:24) 
-- CODE:
a = float(input("digite lado a:"))
b = float(input("digite lado b:"))
c = float(input("digite lado c:"))

print("Entradas:",a,",",b,",",c)
x = "Tipo de triangulo:"

if((a<0)or(b<0)or(c<0)or(a>=b + c)or (b>=c + a) or (c>=a + b)):
		print(x,"invalido")
else:
	if(a==b)and(b==c):
		print(x,"equilatero")
else:
	if(a==b)or(b==c)or(c==a):
		print(x,"isoceles")
else:
	print(x,"escaleno")
-- ERROR:
File "XXXX", line 13
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 00:22:29) 
-- CODE:
a = float(input("digite lado a:"))
b = float(input("digite lado b:"))
c = float(input("digite lado c:"))

print("Entradas:",a,",",b,",",c)
x = "Tipo de triangulo:"

if((a<0)or(b<0)or(c<0)or(a>=b + c)or (b>=c + a) or (c>=a + b)):
		print(x,"invalido")
else:
	if(a==b)and(b==c):
		print(x,"equilatero")
else:
	if(a==b)or(b==c)or(c==a):
		print(x,"isoceles")
else:
	print(x,"escaleno")
-- EXECUTION TIME:
0.191545
-- ERROR:
  File "/home/codebench/codes/1674/1099/main.py", line 13
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 00:26:30) 
-- CODE:
A = float(input ("Lado 1: "))
B = float(input ("Lado 2: "))
C = float(input ("Lado 3: "))
print("Entradas:", A , ",", B ,",", C )
if (A < B + C) and (B < A + C) and (C < A + B):
	if(A==B) and (B==C):
		print("Tipo de triangulo: equilatero")
	elif(A==B) and (B!=C) or (B==C) and (B!=A) or (A==C) and (C!=B):
		print("Tipo de triangulo: isosceles")
	else:
		print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")
	
-- EXECUTION TIME:
0.120507
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
