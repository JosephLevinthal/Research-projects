== TEST (2019-05-14 10:23:38) 
-- CODE:
n = int(input("digite o valor de n: "))
i = 0
soma = 3
while(n>i):
	soma = soma + (4/2i*(2i+1)*(2i+2)) * (-1)**i
	i= i+1
print(round(soma,10))
-- ERROR:
File "XXXX", line 5
    soma = soma + (4/2i*(2i+1)*(2i+2)) * (-1)**i
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:24:35) 
-- CODE:
n = int(input("digite o valor de n: "))
i = 0
soma = 3
while(n>i):
	soma = soma + (4/(2i*(2i+1)*(2i+2)) * (-1)**i
	i= i+1
print(round(soma,10))
-- ERROR:
File "XXXX", line 5
    soma = soma + (4/(2i*(2i+1)*(2i+2)) * (-1)**i
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:24:48) 
-- CODE:
n = int(input("digite o valor de n: "))
i = 0
soma = 3
while(n>i):
	soma = soma + (4/(2i*(2i+1)*(2i+2))) * (-1)**i
	i= i+1
print(round(soma,10))
-- ERROR:
File "XXXX", line 5
    soma = soma + (4/(2i*(2i+1)*(2i+2))) * (-1)**i
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:25:00) 
-- CODE:
n = int(input("digite o valor de n: "))
i = 0
soma = 3
while(n>i):
	soma = soma + 4/(2i*(2i+1)*(2i+2) * (-1)**i
	i= i+1
print(round(soma,10))
-- ERROR:
File "XXXX", line 5
    soma = soma + 4/(2i*(2i+1)*(2i+2) * (-1)**i
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:25:15) 
-- CODE:
n = int(input("digite o valor de n: "))
i = 0
soma = 3
while(n>i):
	soma = soma + 4/2i*(2i+1)*(2i+2) * (-1)**i
	i= i+1
print(round(soma,10))
-- ERROR:
File "XXXX", line 5
    soma = soma + 4/2i*(2i+1)*(2i+2) * (-1)**i
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:27:55) 
-- CODE:
n = int(input("digite o valor de n: "))
i = 0
soma = 3
while(n>i):
	x = 4/2i*(2i+1)*(2i+2)
	soma = soma + x * (-1)**(i + 1)
	i= i+1
print(round(soma,10))
-- ERROR:
File "XXXX", line 5
    x = 4/2i*(2i+1)*(2i+2)
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:28:22) 
-- CODE:
n = int(input("digite o valor de n: "))
i = 1
soma = 3
while(n>i):
	x = 4/2i*(2i+1)*(2i+2)
	soma = soma + x * (-1)**(i+1)
	i= i+1
print(round(soma,10))
-- ERROR:
File "XXXX", line 5
    x = 4/2i*(2i+1)*(2i+2)
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:29:08) 
-- CODE:
n = int(input("digite o valor de n: "))
i = 1
soma = 3
while(n>i):
	x = (2i)*(2i+1)*(2i+2)
	soma = soma + (4/x) * ((-1)**(i+1))
	i= i+1
print(round(soma,10))
-- ERROR:
File "XXXX", line 5
    x = (2i)*(2i+1)*(2i+2)
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:29:35) 
-- CODE:
n = int(input("digite o valor de n: "))
i = 1
soma = 3
while(n > i):
	x = (2i)*(2i+1)*(2i+2)
	soma = soma + (4/x) * ((-1)**(i+1))
	i= i+1
print(round(soma,10))
-- ERROR:
File "XXXX", line 5
    x = (2i)*(2i+1)*(2i+2)
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:29:54) 
-- CODE:
n = int(input("digite o valor de n: "))
i = 1
soma = 3
while(n > i):
	x = (2*i)*(2*i+1)*(2*i+2)
	soma = soma + (4/x) * ((-1)**(i+1))
	i= i+1
print(round(soma,10))
-- OUTPUT:
3.1396825397
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:30:10) 
-- CODE:
n = int(input("digite o valor de n: "))
i = 1
soma = 3
while(n > i):
	x = (2*i)*(2*i+1)*(2*i+2)
	soma = soma + (4/x) * ((-1)**(i+1))
	i= i+1
print(round(soma,10))
-- OUTPUT:
3.1396825397
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:30:18) 
-- CODE:
n = int(input("digite o valor de n: "))
i = 1
soma = 3
while(n > i):
	x = (2*i)*(2*i+1)*(2*i+2)
	soma = soma + (4/x) * ((-1)**(i+1))
	i= i+1
print(round(soma,10))
-- OUTPUT:
3.1396825397
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:30:25) 
-- CODE:
n = int(input("digite o valor de n: "))
i = 1
soma = 3
while(n > i):
	x = (2*i)*(2*i+1)*(2*i+2)
	soma = soma + (4/x) * ((-1)**(i+1))
	i= i+1
print(round(soma,10))
-- OUTPUT:
3.1396825397
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 10:30:27) 
-- CODE:
n = int(input("digite o valor de n: "))
i = 1
soma = 3
while(n > i):
	x = (2*i)*(2*i+1)*(2*i+2)
	soma = soma + (4/x) * ((-1)**(i+1))
	i= i+1
print(round(soma,10))
-- EXECUTION TIME:
0.134236
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.1396825397
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.1416160719
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.1415563303
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:30:40) 
-- CODE:
n = int(input("digite o valor de n: "))
i = 1
soma = 3
while(n > i):
	x = (2*i)*(2*i+1)*(2*i+2)
	soma = soma + (4/x) * ((-1)**(i+1))
	i= i+1
print(round(soma,10))
-- OUTPUT:
3.1396825397
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 10:30:50) 
-- CODE:
n = int(input("digite o valor de n: "))
i = 1
soma = 3
while(n > i):
	x = (2*i)*(2*i+1)*(2*i+2)
	soma = soma + (4/x) * ((-1)**(i+1))
	i= i+1
print(round(soma,10))
-- EXECUTION TIME:
0.190001
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.1396825397
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.1416160719
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.1415563303
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 10:31:33) 
-- CODE:
n = int(input("digite o valor de n: "))
i = 1
soma = 3
while(n > i):
	x = (2*i)*(2*i+1)*(2*i+2)
	soma = soma + (4/x) * ((-1)**(i+1))
	i= i+1
print(round(soma,8))
-- EXECUTION TIME:
0.156456
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.14155633
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
