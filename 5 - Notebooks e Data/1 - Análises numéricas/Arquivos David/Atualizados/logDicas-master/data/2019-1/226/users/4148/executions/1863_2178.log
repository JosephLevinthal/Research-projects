== TEST (2019-07-02 11:15:46) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input()))


for i in mat:
	for j in mat):
		if i!=j:
			s = sum(mat[i,j])
print(s)			
-- ERROR:
File "XXXX", line 8
    for j in mat):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:15:54) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input()))


for i in mat:
	for j in mat:
		if i!=j:
			s = sum(mat[i,j])
print(s)			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:19:16) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input()))


for i in range(shape(mat)[0]):
	for j in range(shape(mat)[1]):
		if i!=j:
			s = sum(mat[i,j])
print(s)			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 11:31:44) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input()))


for i in range(shape(mat)[0]):
	for j in range(shape(mat)[1]):
		if i!=j:
			s = sum(mat[i,j])
print(s)			
-- EXECUTION TIME:
1.16357
-- TEST CASE 1:
---- input:
[[10,8,2],[20,16,4],[40,32,8]]
---- correct output:
106.0
---- user output:
32
-- TEST CASE 2:
---- input:
[[0.32,0.48,0.56],[0.12,0.54,0.34],[0.67,0.89,0.76]]
---- correct output:
3.06
---- user output:
0.89
-- TEST CASE 3:
---- input:
[[34.5,66.7,89.7,65.8,34.6],[77.8,65.7,89.7,23.4,45.9],[12.3,98.9,23.4,67.7,55.5],[33.3,44.4,56.8,91.3,51.9],[11.1,22.2,34.5,66.5,15.9]]
---- correct output:
1048.7
---- user output:
66.5
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:36:11) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input()))

j = 0
for i in range(shape(mat)[0]):
	for j in range(shape(mat)[1]):
		if i!=j:
			j += sum(mat[i,j])
			
print(j)			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 11:36:16) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input()))

j = 0
for i in range(shape(mat)[0]):
	for j in range(shape(mat)[1]):
		if i!=j:
			j += sum(mat[i,j])
			
print(j)			
-- EXECUTION TIME:
0.876677
-- TEST CASE 1:
---- input:
[[10,8,2],[20,16,4],[40,32,8]]
---- correct output:
106.0
---- user output:
2
-- TEST CASE 2:
---- input:
[[0.32,0.48,0.56],[0.12,0.54,0.34],[0.67,0.89,0.76]]
---- correct output:
3.06
---- user output:
2
-- TEST CASE 3:
---- input:
[[34.5,66.7,89.7,65.8,34.6],[77.8,65.7,89.7,23.4,45.9],[12.3,98.9,23.4,67.7,55.5],[33.3,44.4,56.8,91.3,51.9],[11.1,22.2,34.5,66.5,15.9]]
---- correct output:
1048.7
---- user output:
4
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:36:20) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input()))

j = 0
for i in range(shape(mat)[0]):
	for j in range(shape(mat)[1]):
		if i!=j:
			j += sum(mat[i,j])
			
print(j)			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:36:38) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input()))

j = 0
for i in range(shape(mat)[0]):
	for j in range(shape(mat)[1]):
		if i!=j:
			j += sum(mat[i,j])
			
print(j)			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:36:55) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input()))

j = 0
for i in range(shape(mat)[0]):
	for j in range(shape(mat)[1]):
		if i!=j:
			j += sum(mat[i,j])
			
print(j)			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:37:40) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input()))

j = 0
for i in range(shape(mat)[0]):
	for j in range(shape(mat)[1]):
		if i!=j:
			j += mat[i,j]
			
print(j)			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:38:50) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input()))

s = 0
for i in range(shape(mat)[0]):
	for j in range(shape(mat)[1]):
		if i!=j:
			s += mat[i,j]
			
print(s)			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 11:39:08) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input()))

s = 0
for i in range(shape(mat)[0]):
	for j in range(shape(mat)[1]):
		if i!=j:
			s += mat[i,j]
			
print(s)			
-- EXECUTION TIME:
0.940016
-- TEST CASE 1:
---- input:
[[10,8,2],[20,16,4],[40,32,8]]
---- correct output:
106.0
---- user output:
106
-- TEST CASE 2:
---- input:
[[0.32,0.48,0.56],[0.12,0.54,0.34],[0.67,0.89,0.76]]
---- correct output:
3.06
---- user output:
3.0600000000000005
-- TEST CASE 3:
---- input:
[[34.5,66.7,89.7,65.8,34.6],[77.8,65.7,89.7,23.4,45.9],[12.3,98.9,23.4,67.7,55.5],[33.3,44.4,56.8,91.3,51.9],[11.1,22.2,34.5,66.5,15.9]]
---- correct output:
1048.7
---- user output:
1048.6999999999998
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:39:15) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input()))

s = 0
for i in range(shape(mat)[0]):
	for j in range(shape(mat)[1]):
		if i!=j:
			s += mat[i,j]
			
print(s)			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:40:28) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input()))

s = 0
for i in range(mat):
	for j in range(mat):
		if i!=j:
			s += mat[i,j]
			
print(s)			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:41:20) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input()))

s = 0
for i in range(size(mat)):
	for j in range(size(mat)):
		if i!=j:
			s += mat[i,j]
			
print(s)			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:42:19) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input()))

s = 0
for i in range(shape(mat)[0]):
	for j in range(shape(mat)[1]):
		if i!=j:
			s += mat[i,j]
			
print(s)			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:44:10) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input()))

s = 0
for i in range(shape(mat)[0]):
	for j in range(shape(mat)[1]):
	if i!=j:
		s += mat[i,j]
			
print(s)			
-- ERROR:
File "XXXX", line 9
    if i!=j:
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:44:26) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input()))

s = 0
for i in range(shape(mat)[0]):
	for j in range(shape(mat)[1]):
	if i!=j:
		s += mat[i,j]
			
print(s)			
-- ERROR:
File "XXXX", line 9
    if i!=j:
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:44:28) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input()))

s = 0
for i in range(shape(mat)[0]):
	for j in range(shape(mat)[1]):
	if i!=j:
		s += mat[i,j]
			
print(s)			
-- ERROR:
File "XXXX", line 9
    if i!=j:
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:45:05) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input()))

s = 0
for i in range(shape(mat)[0]):
	for j in range(shape(mat)[1]):
		if i!=j:
			s += mat[i,j] - i
			
print(s)			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:45:34) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input()))

s = 0
for i in range(shape(mat)[0]):
	for j in range(shape(mat)[1]):
		if i!=j:
			s += mat[i,j] - i
			
print(s)			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:48:11) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input()))

s = 0
for i in range(shape(mat)[0]):
	for j in range(shape(mat)[1]):
		if i!=j:
			s += mat[i,j] 
			
print(s)			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:48:39) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input()))

s = 0
for i in range(shape(mat)[0]):
	for j in range(shape(mat)[1]):
		if i!=j:
			s += mat[i,j] 
			
print(s)			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 11:49:32) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input()))

s = 0
for i in range(shape(mat)[0]):
	for j in range(shape(mat)[1]):
		if i!=j:
			s += mat[i,j] 
			
print(s)			
-- EXECUTION TIME:
0.927282
-- TEST CASE 1:
---- input:
[[10,8,2],[20,16,4],[40,32,8]]
---- correct output:
106.0
---- user output:
106
-- TEST CASE 2:
---- input:
[[0.32,0.48,0.56],[0.12,0.54,0.34],[0.67,0.89,0.76]]
---- correct output:
3.06
---- user output:
3.0600000000000005
-- TEST CASE 3:
---- input:
[[34.5,66.7,89.7,65.8,34.6],[77.8,65.7,89.7,23.4,45.9],[12.3,98.9,23.4,67.7,55.5],[33.3,44.4,56.8,91.3,51.9],[11.1,22.2,34.5,66.5,15.9]]
---- correct output:
1048.7
---- user output:
1048.6999999999998
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:49:38) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input()))

s = 0
for i in range(shape(mat)[0]):
	for j in range(shape(mat)[1]):
		if i!=j:
			s += mat[i,j] 
			
print(s)			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:50:09) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input()))

s = 0
for i in range(shape(mat)[0]):
	for j in range(shape(mat)[1]):
		if i!=j:
			s += mat[i,j] 
			
print(round(s, 0))			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 11:52:18) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat = array(eval(input()))

s = 0
for i in range(shape(mat)[0]):
	for j in range(shape(mat)[1]):
		if i!=j:
			s += mat[i,j] 
			
print(round(s, 2))			
-- EXECUTION TIME:
0.952747
-- TEST CASE 1:
---- input:
[[10,8,2],[20,16,4],[40,32,8]]
---- correct output:
106.0
---- user output:
106
-- TEST CASE 2:
---- input:
[[0.32,0.48,0.56],[0.12,0.54,0.34],[0.67,0.89,0.76]]
---- correct output:
3.06
---- user output:
3.06
-- TEST CASE 3:
---- input:
[[34.5,66.7,89.7,65.8,34.6],[77.8,65.7,89.7,23.4,45.9],[12.3,98.9,23.4,67.7,55.5],[33.3,44.4,56.8,91.3,51.9],[11.1,22.2,34.5,66.5,15.9]]
---- correct output:
1048.7
---- user output:
1048.7
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
