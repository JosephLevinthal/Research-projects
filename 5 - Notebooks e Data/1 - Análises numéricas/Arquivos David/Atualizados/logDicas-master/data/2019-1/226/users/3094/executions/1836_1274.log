== SUBMITION (2019-07-01 23:20:37) 
-- CODE:
from numpy import * 
from numpy.linalg import *

z = int(input(""))
met = zeros((z,z), dtype=int)


met = zeros((z,z), dtype=int)


mat = ones((z,z), dtype = int)
new = zeros((z,z), dtype=int)

for i in range(z):
	for j in range(z):
		nil[i,j]=min(i,j)+1
		
print(nil)
-- EXECUTION TIME:
0.995192
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1836/1274/main.py", line 16, in <module>
    nil[i,j]=min(i,j)+1
NameError: name 'nil' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-01 23:20:55) 
-- CODE:
from numpy import * 
from numpy.linalg import *

z = int(input(""))
met = zeros((z,z), dtype=int)


#met = zeros((z,z), dtype=int)


mat = ones((z,z), dtype = int)
new = zeros((z,z), dtype=int)

for i in range(z):
	for j in range(z):
		nil[i,j]=min(i,j)+1
		
print(nil)
-- EXECUTION TIME:
1.09584
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1836/1274/main.py", line 16, in <module>
    nil[i,j]=min(i,j)+1
NameError: name 'nil' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-01 23:21:15) 
-- CODE:
from numpy import * 
from numpy.linalg import *

z = int(input(""))
met = zeros((z,z), dtype=int)


#met = zeros((z,z), dtype=int)


mat = ones((z,z), dtype = int)
new = zeros((z,z), dtype=int)

for i in range(z):
	for j in range(z):
		nil[i,j]=min(i,j)+1
		
print(nil)
-- EXECUTION TIME:
1.07906
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1836/1274/main.py", line 16, in <module>
    nil[i,j]=min(i,j)+1
NameError: name 'nil' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 09:38:43) 
-- CODE:
from numpy import * 
from numpy.linalg import *

z = int(input(""))
met = zeros((z,z), dtype=int)


#met = zeros((z,z), dtype=int)


met = ones((z,z), dtype = int)
nil = zeros((z,z), dtype=int)

for i in range(z):
	for j in range(z):
		nil[i,j]=min(i,j)+1
		
print(nil)
-- EXECUTION TIME:
1.25394
-- TEST CASE 1:
---- input:
3
---- correct output:
[[1 1 1]
 [1 2 2]
 [1 2 3]]
---- user output:
[[1 1 1]
 [1 2 2]
 [1 2 3]]
-- TEST CASE 2:
---- input:
8
---- correct output:
[[1 1 1 1 1 1 1 1]
 [1 2 2 2 2 2 2 2]
 [1 2 3 3 3 3 3 3]
 [1 2 3 4 4 4 4 4]
 [1 2 3 4 5 5 5 5]
 [1 2 3 4 5 6 6 6]
 [1 2 3 4 5 6 7 7]
 [1 2 3 4 5 6 7 8]]
---- user output:
[[1 1 1 1 1 1 1 1]
 [1 2 2 2 2 2 2 2]
 [1 2 3 3 3 3 3 3]
 [1 2 3 4 4 4 4 4]
 [1 2 3 4 5 5 5 5]
 [1 2 3 4 5 6 6 6]
 [1 2 3 4 5 6 7 7]
 [1 2 3 4 5 6 7 8]]
-- TEST CASE 3:
---- input:
1
---- correct output:
[[1]]
---- user output:
[[1]]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
