== TEST (2019-04-08 17:09:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v= float(input("qual a velocidade inicial? "))
ang= float(input("qual o angulo? "))
dist= float(input("qual a distancia entre eles?"))
x= radians(ang)
r= ((v**2)* sin(x))/9.8
print(r)
-- OUTPUT:
8.024067552984542
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 17:12:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v= float(input("qual a velocidade inicial? "))
ang= float(input("qual o angulo? "))
dist= float(input("qual a distancia entre eles?"))
x= radians(ang)
r= ((v**2)* sin(x))/9.8
abs(r)

if (dist-r > 0.1)
	print(sim)
else:
	print(nao)
-- ERROR:
File "XXXX", line 12
    if (dist-r > 0.1)
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 17:12:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v= float(input("qual a velocidade inicial? "))
ang= float(input("qual o angulo? "))
dist= float(input("qual a distancia entre eles?"))
x= radians(ang)
r= ((v**2)* sin(x))/9.8
abs(r)

if (dist-r > 0.1):
	print(sim)
else:
	print(nao)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    print(sim)
NameError: name 'sim' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 17:12:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v= float(input("qual a velocidade inicial? "))
ang= float(input("qual o angulo? "))
dist= float(input("qual a distancia entre eles?"))
x= radians(ang)
r= ((v**2)* sin(x))/9.8
abs(r)

if (dist-r > 0.1):
	print("sim")
else:
	print("nao")
-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 17:13:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v= float(input("qual a velocidade inicial? "))
ang= float(input("qual o angulo? "))
dist= float(input("qual a distancia entre eles?"))
x= radians(ang)
r= ((v**2)* sin(x))/9.8
abs(r)

if (dist-r >= 0.1):
	print("sim")
else:
	print("nao")
-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 17:13:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v= float(input("qual a velocidade inicial? "))
ang= float(input("qual o angulo? "))
dist= float(input("qual a distancia entre eles?"))
x= radians(ang)
r= ((v**2)* sin(x))/9.8
abs(r)

if (r-dist>0.1):
	print("sim")
else:
	print("nao")
-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 17:14:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v= float(input("qual a velocidade inicial? "))
ang= float(input("qual o angulo? "))
dist= float(input("qual a distancia entre eles?"))
x= radians(ang)
r= ((v**2)* sin(x))/9.8
abs(r)

if (r-dist>0.1):
	print("sim")
else:
	print("nao")
-- EXECUTION TIME:
0.155064
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:07:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v= float(input("qual a velocidade inicial? "))
ang= float(input("qual o angulo? "))
dist= float(input("qual a distancia entre eles?"))
x= radians(ang)
r= ((v**2)* sin(x))/9.8
abs(r)

if abs(r-dist>0.1):
	print("sim")
else:
	print("nao")
-- EXECUTION TIME:
0.272806
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:07:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v= float(input("qual a velocidade inicial? "))
ang= float(input("qual o angulo? "))
dist= float(input("qual a distancia entre eles?"))
x= radians(ang)
r= ((v**2)* sin(x))/9.8
abs(r)

if abs(r-dist<=0.1):
	print("sim")
else:
	print("nao")
-- EXECUTION TIME:
0.184524
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
sim
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:07:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v= float(input("qual a velocidade inicial? "))
ang= float(input("qual o angulo? "))
dist= float(input("qual a distancia entre eles?"))
x= radians(ang)
r= ((v**2)* sin(x))/9.8
abs(r)

if abs(r-dist<=0.1):
	print("sim")
else:
	print("nao")
-- EXECUTION TIME:
0.138021
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
sim
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:08:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v= float(input("qual a velocidade inicial? "))
ang= float(input("qual o angulo? "))
dist= float(input("qual a distancia entre eles?"))
x= radians(ang)
r= ((v**2)* sin(2*x))/9.8


if abs(dist-r<=0.1):
	print("sim")
else:
	print("nao")
-- EXECUTION TIME:
0.178944
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:24:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v= float(input("qual a velocidade inicial? "))
ang= float(input("qual o angulo? "))
dist= float(input("qual a distancia entre eles?"))
x= radians(ang)
r= ((v**2)* sin(2*x))/9.8


if abs(dist-r<=0.1):
	print("sim")
else:
	print("nao")
-- EXECUTION TIME:
0.189856
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
