== TEST (2019-04-04 16:06:25) 
-- CODE:
vel = float(input('velocidade: '))
limite = 60
if (vel > limite):
	multa = 200 + 3 * (vel - limite)
else:
	multa = 0
print(multa)
	
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 16:06:32) 
-- CODE:
vel = float(input('velocidade: '))
limite = 60
if (vel > limite):
	multa = 200 + 3 * (vel - limite)
else:
	multa = 0
print(multa)
	
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 16:07:00) 
-- CODE:
vel = float(input('velocidade: '))
limite = 60
if (vel > limite):
	multa = 200 + 3 * (vel - limite)
else:
	multa = 0
print(multa)
	
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 16:07:03) 
-- CODE:
vel = float(input('velocidade: '))
limite = 60
if (vel > limite):
	multa = 200 + 3 * (vel - limite)
else:
	multa = 0
print(multa)
	
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 16:07:11) 
-- CODE:
vel = float(input('velocidade: '))
limite = 60
if (vel > limite):
	multa = 200 + 3 * (vel - limite)
else:
	multa = 0
print(multa)
	
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 16:07:13) 
-- CODE:
vel = float(input('velocidade: '))
limite = 60
if (vel > limite):
	multa = 200 + 3 * (vel - limite)
else:
	multa = 0
print(multa)
	
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 16:07:31) 
-- CODE:
vel = float(input('velocidade: '))
limite = 60
if (vel > limite):
	multa = 200 + 3 * (vel - limite)
else:
	multa = 0
print(multa)
	
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 16:07:31) 
-- CODE:
vel = float(input('velocidade: '))
limite = 60
if (vel > limite):
	multa = 200 + 3 * (vel - limite)
else:
	multa = 0
print(multa)
	
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:50:43) 
-- CODE:
vel = float(input('velocidade: '))
limite = 60
if (vel > limite):
	multa = 200 + 3 * (vel - limite)
else:
	multa = 0
print(multa)
	
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:50:52) 
-- CODE:
vel = float(input('velocidade: '))
limite = 60
if (vel > limite):
	multa = 200 + 3 * (vel - limite)
else:
	multa = 0
print(multa)
	
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:56:42) 
-- CODE:
nota = float(input("nota(0 a 10): "))
bonificacao = input("bonificacao(S ou N): ")
if ("S"):
	b = nota + (nota) * 0.1
else:
	b = nota
print(nota)
-- OUTPUT:
5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:57:14) 
-- CODE:
nota = float(input("nota(0 a 10): "))
bonificacao = input("bonificacao(S ou N): ")
if ("S"):
	b = nota + (nota) * 10 / 100
else:
	b = nota
print(nota)
-- OUTPUT:
5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:00:12) 
-- CODE:
nota = float(input("nota(0 a 10): "))
bonificacao = input("bonificacao(S ou N): ")
if ("S"):
	b = (nota) + (nota) * 10 / 100
else:
	b = nota
print(nota)
-- OUTPUT:
5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:00:45) 
-- CODE:
nota = float(input("nota(0 a 10): "))
bonificacao = input("bonificacao(S ou N): ")
if ("S"):
	b =  (nota) * 10 / 100
else:
	b = nota
print(nota)
-- OUTPUT:
5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:01:21) 
-- CODE:
nota = float(input("nota(0 a 10): "))
bonificacao = input("bonificacao(S ou N): ")
if ("S"):
	b = (nota) + (nota) * 10 / 100
else:
	b = nota
print(b)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:01:33) 
-- CODE:
nota = float(input("nota(0 a 10): "))
bonificacao = input("bonificacao(S ou N): ")
if ("S"):
	b = (nota) + (nota) * 10 / 100
else:
	b = nota
print(b)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:02:21) 
-- CODE:
nota = float(input("nota(0 a 10): "))
bonificacao = input("bonificacao(S ou N): ")
if ("S"):
	b = (nota) + (nota) * 10 / 100
if("N")
	b = nota
print(b)
-- ERROR:
File "XXXX", line 5
    if("N")
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:02:29) 
-- CODE:
nota = float(input("nota(0 a 10): "))
bonificacao = input("bonificacao(S ou N): ")
if ("S"):
	b = (nota) + (nota) * 10 / 100
if ("N"):
	b = nota
print(b)
-- OUTPUT:
5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 15:02:43) 
-- CODE:
nota = float(input("nota(0 a 10): "))
bonificacao = input("bonificacao(S ou N): ")
if ("S"):
	b = (nota) + (nota) * 10 / 100
if ("N"):
	b = nota
print(b)
-- EXECUTION TIME:
0.195766
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.0
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.0
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:03:04) 
-- CODE:
nota = float(input("nota(0 a 10): "))
bonificacao = input("bonificacao(S ou N): ")
if ("S"):
	b = (nota) + (nota) * 10 / 100
if ("N"):
	b = nota
print(b)
-- OUTPUT:
5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:03:15) 
-- CODE:
nota = float(input("nota(0 a 10): "))
bonificacao = input("bonificacao(S ou N): ")
if ("S"):
	b = (nota) + (nota) * 10 / 100
if ("N"):
	b = nota
print(b)
-- OUTPUT:
5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:03:58) 
-- CODE:
nota = float(input("nota(0 a 10): "))
bonificacao = input("bonificacao(S ou N): ")
if ("S"):
	b = (nota) + (nota) * 10 / 100
if ("N"):
	b = nota
print(b)
-- OUTPUT:
5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:04:37) 
-- CODE:
nota = float(input("nota(0 a 10): "))
bonificacao = input("bonificacao(S ou N): ")
if ("S"):
	b = (nota) + (nota) * 10 / 100
else:
	b = nota
print(b)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:04:51) 
-- CODE:
nota = float(input("nota(0 a 10): "))
bonificacao = input("bonificacao(S ou N): ")
if ("S"):
	b = (nota) + (nota) * 10 / 100
else:
	b = nota
print(b)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:06:36) 
-- CODE:
nota = float(input("nota(0 a 10): "))
bonificacao = input("bonificacao(S ou N): ")
b = (nota) + (nota) * 10 / 100
if ("S"):
	p = b
else:
	p = nota
print(p)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:06:42) 
-- CODE:
nota = float(input("nota(0 a 10): "))
bonificacao = input("bonificacao(S ou N): ")
b = (nota) + (nota) * 10 / 100
if ("S"):
	p = b
else:
	p = nota
print(p)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:09:22) 
-- CODE:
nota = float(input("nota(0 a 10): "))
bonificacao = input("bonificacao(S ou N): ")
b = (nota) + (nota) * 10 / 100
if ("S"):
	p = b
else:
	p = nota
print(p)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:10:35) 
-- CODE:
nota = float(input("nota(0 a 10): "))
bonificacao = input("bonificacao(S ou N): ")
b = (nota) + (nota) * 10 / 100
if (nota == "S"):
	p = b
else:
	p = nota
print(p)
-- OUTPUT:
5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:10:54) 
-- CODE:
nota = float(input("nota(0 a 10): "))
bonificacao = input("bonificacao(S ou N): ")
b = (nota) + (nota) * 10 / 100
if (bonificacao == "S"):
	p = b
else:
	p = nota
print(p)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:11:07) 
-- CODE:
nota = float(input("nota(0 a 10): "))
bonificacao = input("bonificacao(S ou N): ")
b = (nota) + (nota) * 10 / 100
if (bonificacao == "S"):
	p = b
else:
	p = nota
print(p)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 15:11:19) 
-- CODE:
nota = float(input("nota(0 a 10): "))
bonificacao = input("bonificacao(S ou N): ")
b = (nota) + (nota) * 10 / 100
if (bonificacao == "S"):
	p = b
else:
	p = nota
print(p)
-- EXECUTION TIME:
0.143552
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
