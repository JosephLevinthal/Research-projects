== TEST (2019-03-21 20:52:21) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = int(input(min(2,5,9)))
var2= int(input(max(2,5,9)))
var3 = int(input((2 + 5 +9) - 5 - 9))

print(var1)
print(var3)
print(var2)
-- OUTPUT:
29210
0
-2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 20:52:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = int(input(min(2,5,9)))
var2= int(input(max(2,5,9)))
var3 = int(input((2 + 5 +9) - 5 - 9))

print(var1)
print(var3)
print(var2)
-- EXECUTION TIME:
0.205308
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
29210
0
-2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 20:57:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = int(input(min(2,5,9)))
var2= int(input(max(2,5,9)))
var3 = (2 + 5 +9) - 2 - 9

print(var1)
print(var3)
print(var2)
-- OUTPUT:
2910
5
-2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 20:59:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = min(2,5,9)
var2= max(2,5,9)
var3 = (2 + 5 +9) - 2 - 9
int(input(var1))
int(input(var3))
int(input(var2))



-- OUTPUT:
259
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 20:59:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var2= max(2,5,9)



-- OUTPUT:
259
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 20:59:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var2= max(2,5,9)



-- OUTPUT:
259
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:00:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var2= max(2,5,9)


print(var2)
-- OUTPUT:
9
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:07:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= min(2,5,9)
var2= max(2,5,9)


print(var2)
-- OUTPUT:
9
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:08:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= min(2,5,9)
var2= max(2,5,9)


print(var2)
print(var1)
-- OUTPUT:
9
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:09:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= min(2,5,9)
var2= max(2,5,9)
var3= 5

print(var1)
print(var3)
print(var2)
-- OUTPUT:
2
5
9
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 21:09:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= min(2,5,9)
var2= max(2,5,9)
var3= 5

print(var1)
print(var3)
print(var2)
-- EXECUTION TIME:
0.178181
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
2
5
9
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:10:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= min(2,5,9)
var2= max(2,5,9)
var3= 5

print(var1)
print(var3)
print(var2)
-- OUTPUT:
2
5
9
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:11:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= min(5,2,9)
var2= max(5,2,9)
var3= 5

print(var1)
print(var3)
print(var2)
-- OUTPUT:
2
5
9
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 21:11:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= min(5,2,9)
var2= max(5,2,9)
var3= 5

print(var1)
print(var3)
print(var2)
-- EXECUTION TIME:
0.155512
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
2
5
9
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:13:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= min(5,2,9)
var2= max(5,2,9)
var3= 5+2+9 -2-9
print(var1)
print(var3)
print(var2)
-- OUTPUT:
2
5
9
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 21:13:21) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= min(5,2,9)
var2= max(5,2,9)
var3= 5+2+9 -2-9
print(var1)
print(var3)
print(var2)
-- EXECUTION TIME:
0.141155
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
2
5
9
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:14:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= min(5,2,9)
var2= max(5,2,9)
var3= 5+2+9 -2-9
print(var1)
print(var3)
print(var2)
-- OUTPUT:
2
5
9
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:19:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input(min(5,2,9))
var2= int(input(max(5,2,9))
var3= 5+2+9 -2-9
print(var1)
print(var3)
print(var2)
-- ERROR:
File "XXXX", line 5
    var2= int(input(max(5,2,9))
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:21:05) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input(min(5,2,9))
var2= int(input(max(5,2,9))
var3= 5+2+9-2-9
print(var1)
print(var3)
print(var2)
-- ERROR:
File "XXXX", line 5
    var2= int(input(max(5,2,9))
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:22:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input(min(5,2,9)))
var2= int(input(max(5,2,9)))
var3= 5+2+9-2-9
print(var1)
print(var3)
print(var2)
-- OUTPUT:
2910
5
-2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:26:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
int(input(min(5,2,9)))
int(input(max(5,2,9)))
var3= 5+2+9-2-9

-- OUTPUT:
29
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:26:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
int(input(min(5,2,9)))
var3= 5+2+9-2-9
int(input(max(5,2,9)))

-- OUTPUT:
29
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:33:44) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = int(input(main(8,4,0)))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    var1 = int(input(main(8,4,0)))
NameError: name 'main' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:33:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
 int(input(main(8,4,0)))

-- ERROR:
File "XXXX", line 4
    int(input(main(8,4,0)))
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:34:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
 int(input(min(8,4,0)))

-- ERROR:
File "XXXX", line 4
    int(input(min(8,4,0)))
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:34:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var =  int(input(min(8,4,0)))

-- ERROR:
File "XXXX", line 4
    int(input(min(8,4,0)))
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:36:21) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var =  int(input(min(8,4,0)))
var1 = int(input(max(8,4,0)))
var2 = int(input(8+4+0-var-var1))

-- OUTPUT:
084
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:37:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var =  int(input(min(8,4,0)))
var1 = int(input(max(8,4,0)))
var2 = int(input(8+4+0-var-var1))

print(var)
print(var2)
print(var1)
-- OUTPUT:
08410
0
-2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 21:37:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var =  int(input(min(8,4,0)))
var1 = int(input(max(8,4,0)))
var2 = int(input(8+4+0-var-var1))

print(var)
print(var2)
print(var1)
-- EXECUTION TIME:
0.177322
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
08410
0
-2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:39:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var =  int(input(min(8,4,0)))
var1 = int(input(max(8,4,0)))
var2 = int(input(8+4+0-var-var1))

print(var)
print(var2)
print(var1)
-- OUTPUT:
08410
0
-2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:44:40) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var =  input(min(8,4,0)))
var1 = input(max(8,4,0)))
var2 = int(input(8+4+0-var-var1))

print(var)
print(var2)
print(var1)
-- ERROR:
File "XXXX", line 4
    var =  input(min(8,4,0)))
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:44:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var =  input(min(8,4,0))
var1 = input(max(8,4,0))
var2 = int(input(8+4+0-var-var1))

print(var)
print(var2)
print(var1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    var2 = int(input(8+4+0-var-var1))
TypeError: unsupported operand type(s) for -: 'int' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:45:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var =  input(min(8,4,0))
var1 =  input(max(8,4,0))
var2 = int(input(8+4+0-var-var1))

print(var)
print(var2)
print(var1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    var2 = int(input(8+4+0-var-var1))
TypeError: unsupported operand type(s) for -: 'int' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 20:26:44) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codig
num1 = int(input("Qual valor 1:"))
num2 = int(input("Qual valor 2:"))
num3 =  int(input("Qual valor 3:"))

lista = (num1, num2, num3)
num4 = min(lista)
num5 = max(lista)
 print(min(lista))
	equacao = (mun1 + num2 + num3 - num5 - num4)
	print(equacao)
print(max(lista))

-- ERROR:
File "XXXX", line 11
    print(min(lista))
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 20:27:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codig
num1 = int(input("Qual valor 1:"))
num2 = int(input("Qual valor 2:"))
num3 =  int(input("Qual valor 3:"))

lista = (num1, num2, num3)
num4 = min(lista)
num5 = max(lista)
print(min(lista))
equacao = (mun1 + num2 + num3 - num5 - num4)
print(equacao)
print(max(lista))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    equacao = (mun1 + num2 + num3 - num5 - num4)
NameError: name 'mun1' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 20:27:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codig
num1 = int(input("Qual valor 1:"))
num2 = int(input("Qual valor 2:"))
num3 =  int(input("Qual valor 3:"))

lista = (num1, num2, num3)
num4 = min(lista)
num5 = max(lista)
print(min(lista))
equacao = (num1 + num2 + num3 - num5 - num4)
print(equacao)
print(max(lista))

-- OUTPUT:
-2
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 20:27:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codig
num1 = int(input("Qual valor 1:"))
num2 = int(input("Qual valor 2:"))
num3 =  int(input("Qual valor 3:"))

lista = (num1, num2, num3)
num4 = min(lista)
num5 = max(lista)
print(min(lista))
equacao = (num1 + num2 + num3 - num5 - num4)
print(equacao)
print(max(lista))

-- EXECUTION TIME:
0.130335
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
0
10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
