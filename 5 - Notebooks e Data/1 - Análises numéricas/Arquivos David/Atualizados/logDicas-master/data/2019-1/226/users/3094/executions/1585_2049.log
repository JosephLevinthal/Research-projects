== TEST (2019-03-28 21:33:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = dividendo
y = divisor
z = quociente
w = resto
calculo = x // y
print(calculo)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    x = dividendo
NameError: name 'dividendo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 21:33:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = dividendo
y = divisor
z = quociente
w = resto
calculo = x // y
print(calculo)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    x = dividendo
NameError: name 'dividendo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 21:33:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = dividendo
y = divisor
z = quociente
w = resto
calculo = x // y
print(calculo)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    x = dividendo
NameError: name 'dividendo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 21:33:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = dividendo
y = divisor
z = quociente
w = resto
calculo = x // y
print(calculo)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    x = dividendo
NameError: name 'dividendo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 21:33:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = dividendo
y = divisor
z = quociente
w = resto
calculo = x // y
print(calculo)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    x = dividendo
NameError: name 'dividendo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 21:33:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = "dividendo"
y = divisor
z = quociente
w = resto
calculo = x // y
print(calculo)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    y = divisor
NameError: name 'divisor' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 21:33:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = "dividendo"
y = "divisor"
z = quociente
w = resto
calculo = x // y
print(calculo)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    z = quociente
NameError: name 'quociente' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 21:34:13) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = "dividendo"
y = "divisor"
z = "quociente"
w = "resto"
calculo = x // y
print(calculo)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    calculo = x // y
TypeError: unsupported operand type(s) for //: 'str' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 21:34:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = "dividendo"
y = "divisor"
z = "quociente"
w = "resto"
calculo = "x // y"
print(calculo)
-- OUTPUT:
x // y
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 21:34:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = "dividendo"
y = "divisor"
z = "quociente"
w = "resto"
calculo = "x // y"
print(calculo)
-- OUTPUT:
x // y
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 09:55:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
dividendo = int(input(x))
divisor = int(input(y))
q = dividendo // divisor
r = dividendo % divisor
print(dividendo)
print(divisor)
print(q)
print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    dividendo = int(input(x))
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 09:56:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
dividendo = int(input("x"))
divisor = int(input("y"))
q = dividendo // divisor
r = dividendo % divisor
print(dividendo)
print(divisor)
print(q)
print(r)
-- OUTPUT:
8
5
1
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 09:56:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
dividendo = int(input("x"))
divisor = int(input("y"))
q = dividendo // divisor
r = dividendo % divisor
print(dividendo)
print(divisor)
print(q)
print(r)
-- OUTPUT:
8
5
1
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 09:56:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
dividendo = int(input("x"))
divisor = int(input("y"))
q = dividendo // divisor
r = dividendo % divisor
print(dividendo)
print(divisor)
print(q)
print(r)
-- OUTPUT:
8
5
1
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 09:57:08) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
dividendo = int(input("x"))
divisor = int(input("y"))
q = dividendo // divisor
r = dividendo % divisor
print(dividendo)
print(divisor)
print(q)
print(r)
-- EXECUTION TIME:
0.188401
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
8
5
1
3
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
14
2
7
0
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
347
2
173
1
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
