== TEST (2019-04-30 10:31:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = float(input("Entrada a:"))
b = float(input("Entrada b:"))
x = float(input("Entrada x:"))
if (a <= x) and (x <= b):
	print(x,"pertence ao intervalo", a, b)
elif (a >= x) and (x >= b):
	print(x,"nao pertence ao intervalo", a, b)
elif (b <= a):
	print("Entradas", a "e", b "invalidas")
-- ERROR:
File "XXXX", line 12
    print("Entradas", a "e", b "invalidas")
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:32:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = float(input("Entrada a:"))
b = float(input("Entrada b:"))
x = float(input("Entrada x:"))
if (a <= x) and (x <= b):
	print(x,"pertence ao intervalo", a, b)
elif (a >= x) and (x >= b):
	print(x,"nao pertence ao intervalo", a, b)
elif (b <= a):
	print("Entradas", a "e", b ,"invalidas")
-- ERROR:
File "XXXX", line 12
    print("Entradas", a "e", b ,"invalidas")
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:33:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = float(input("Entrada a:"))
b = float(input("Entrada b:"))
x = float(input("Entrada x:"))
if (a <= x) and (x <= b):
	print(x,"pertence ao intervalo", a, b)
elif (a >= x) and (x >= b):
	print(x,"nao pertence ao intervalo", a, b)
elif (b <= a):
	print("Entradas", a,  b ,"invalidas")
-- ERROR:
File "XXXX", line 12
    print("Entradas", a "e", b ,"invalidas")
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:34:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = float(input("Entrada a:"))
x = float(input("Entrada b:"))
b = float(input("Entrada x:"))
if (a <= x) and (x <= b):
	print(x,"pertence ao intervalo", a, b)
elif (a >= x) and (x >= b):
	print(x,"nao pertence ao intervalo", a, b)
elif (b <= a):
	print("Entradas", a,  b ,"invalidas")
-- OUTPUT:
3.0 pertence ao intervalo 2.0 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:34:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = float(input("Entrada a:"))
x = float(input("Entrada b:"))
b = float(input("Entrada x:"))
if (a <= x) and (x <= b):
	print(x,"pertence ao intervalo", a, b)
elif (a >= x) and (x >= b):
	print(x,"nao pertence ao intervalo", a, b)
elif (b <= a):
	print("Entradas", a,  b ,"invalidas")
-- OUTPUT:
3.0 pertence ao intervalo 2.0 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:35:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = float(input("Entrada a:"))
x = float(input("Entrada x:"))
b = float(input("Entrada b:"))
if (a <= x) and (x <= b):
	print(x,"pertence ao intervalo", a, b)
elif (a >= x) and (x >= b):
	print(x,"nao pertence ao intervalo", a, b)
elif (b <= a):
	print("Entradas", a,  b ,"invalidas")
-- OUTPUT:
3.0 pertence ao intervalo 2.0 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:35:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = float(input("Entrada a:"))
x = float(input("Entrada x:"))
b = float(input("Entrada b:"))
if (a <= x) and (x <= b):
	print(x,"pertence ao intervalo", a, b)
elif (a >= x) and (x >= b):
	print(x,"nao pertence ao intervalo", a, b)
elif (b <= a):
	print("Entradas", a,  b ,"invalidas")
-- EXECUTION TIME:
0.12912
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
3.0 pertence ao intervalo 2.0 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 5.5 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:35:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = float(input("Entrada a:"))
b = float(input("Entrada b:"))
x = float(input("Entrada x:"))
if (a <= x) and (x <= b):
	print(x,"pertence ao intervalo", a, b)
elif (a >= x) and (x >= b):
	print(x,"nao pertence ao intervalo", a, b)
elif (b <= a):
	print("Entradas", a,  b ,"invalidas")
-- OUTPUT:
3.0 pertence ao intervalo 2.0 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:36:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = float(input("Entrada a:"))
b = float(input("Entrada b:"))
x = float(input("Entrada x:"))
if (a <= x) and (x <= b):
	print(x,"pertence ao intervalo", a, b)
elif (a >= x) and (x >= b):
	print(x,"nao pertence ao intervalo", a, b)
else:
	print("Entradas", a,  b ,"invalidas")
-- OUTPUT:
Entradas 2.0 3.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:37:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = float(input("Entrada a:"))
b = float(input("Entrada b:"))
x = float(input("Entrada x:"))
if (a <= x) and (x <= b):
	print(x,"pertence ao intervalo", a, b)
elif (a >= x) and (x >= b):
	print(x,"nao pertence ao intervalo", a, b)
else:
	print("Entradas", a,  b ,"invalidas")
-- OUTPUT:
Entradas 2.0 3.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:37:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = float(input("Entrada a:"))
b = float(input("Entrada b:"))
x = float(input("Entrada x:"))
if (a <= x) and (x <= b):
	print(x,"pertence ao intervalo", a, b)
elif (a >= x) and (x >= b):
	print(x,"nao pertence ao intervalo", a, b)
else:
	print("Entradas", a,  b ,"invalidas")
-- OUTPUT:
Entradas 2.0 3.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:38:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = float(input("Entrada a:"))
b = float(input("Entrada b:"))
x = float(input("Entrada x:"))
if (a <= x) and (x <= b):
	print(x,"pertence ao intervalo", a, b)
elif (a >= x) and (x >= b):
	print(x,"nao pertence ao intervalo", a, b)
else:
	print("Entradas", a,  b ,"invalidas")
-- OUTPUT:
Entradas 2.0 3.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:38:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = float(input("Entrada a:"))
b = float(input("Entrada b:"))
x = float(input("Entrada x:"))
if (a <= x) and (x <= b):
	print(x,"pertence ao intervalo", a, b)
elif (a >= x) and (x >= b):
	print(x,"nao pertence ao intervalo", a, b)
else:
	print("Entradas", a,  b ,"invalidas")
-- OUTPUT:
Entradas 2.0 3.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:39:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
b = float(input("Entrada b:"))
x = float(input("Entrada x:"))
a = float(input("Entrada a:"))
if (a <= x) and (x <= b):
	print(x,"pertence ao intervalo", a, b)
elif (a >= x) and (x >= b):
	print(x,"nao pertence ao intervalo", a, b)
else:
	print("Entradas", a,  b ,"invalidas")
-- OUTPUT:
3.0 nao pertence ao intervalo 4.0 2.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:40:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Entrada x:"))
a = float(input("Entrada a:"))
b = float(input("Entrada b:"))
if (a <= x) and (x <= b):
	print(x,"pertence ao intervalo", a, b)
elif (a >= x) and (x >= b):
	print(x,"nao pertence ao intervalo", a, b)
else:
	print("Entradas", a,  b ,"invalidas")
-- OUTPUT:
Entradas 3.0 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:40:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Entrada x:"))
a = float(input("Entrada a:"))
b = float(input("Entrada b:"))
if (a <= x) and (x <= b):
	print(x,"pertence ao intervalo", a,"," b)
elif (a >= x) and (x >= b):
	print(x,"nao pertence ao intervalo", a, b)
else:
	print("Entradas", a,  b ,"invalidas")
-- ERROR:
File "XXXX", line 8
    print(x,"pertence ao intervalo", a,"," b)
                                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:40:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Entrada x:"))
a = float(input("Entrada a:"))
b = float(input("Entrada b:"))
if (a <= x) and (x <= b):
	print(x,"pertence ao intervalo", a,",", b)
elif (a >= x) and (x >= b):
	print(x,"nao pertence ao intervalo", a, b)
else:
	print("Entradas", a,  b ,"invalidas")
-- OUTPUT:
Entradas 3.0 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:40:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Entrada x:"))
a = float(input("Entrada a:"))
b = float(input("Entrada b:"))
if (a <= x) and (x <= b):
	print(x,"pertence ao intervalo", a,",", b)
elif (a >= x) and (x >= b):
	print(x,"nao pertence ao intervalo", a, b)
else:
	print("Entradas", a,  b ,"invalidas")
-- EXECUTION TIME:
0.175391
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
Entradas 3.0 4.0 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:40:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Entrada x:"))
a = float(input("Entrada a:"))
b = float(input("Entrada b:"))
if (a <= x) and (x <= b):
	print(x,"pertence ao intervalo", a,",", b)
elif (a >= x) and (x >= b):
	print(x,"nao pertence ao intervalo", a,",", b)
else:
	print("Entradas", a,",",  b ,"invalidas")
-- OUTPUT:
Entradas 3.0 , 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:41:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Entrada x:"))
a = float(input("Entrada a:"))
b = float(input("Entrada b:"))
if (a <= x) and (x <= b):
	print(x,"pertence ao intervalo", a,",", b)
elif (a >= x) and (x >= b):
	print(x,"nao pertence ao intervalo", a,",", b)
else:
	print("Entradas", a,",",  b ,"invalidas")
-- EXECUTION TIME:
0.114583
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
Entradas 3.0 , 4.0 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:41:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Entrada x:"))
a = float(input("Entrada a:"))
b = float(input("Entrada b:"))
if (a <= x) and (x <= b):
	print(x,"pertence ao intervalo", a,",", b)
elif (a >= x) and (x >= b):
	print(x,"nao pertence ao intervalo", a,",", b)
else:
	print("Entradas", a,",",  b ,"invalidas")
-- OUTPUT:
Entradas 3.0 , 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:41:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Entrada x:"))
a = float(input("Entrada a:"))
b = float(input("Entrada b:"))
if (a <= x) and (x <= b):
	print(x,"pertence ao intervalo", a,",", b)
elif (a >= x) and (x >= b):
	print(x,"nao pertence ao intervalo", a,",", b)
else:
	print("Entradas", a,"e",  b ,"invalidas")
-- OUTPUT:
Entradas 3.0 e 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:41:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Entrada x:"))
a = float(input("Entrada a:"))
b = float(input("Entrada b:"))
if (a <= x) and (x <= b):
	print(x,"pertence ao intervalo", a,",", b)
elif (a >= x) and (x >= b):
	print(x,"nao pertence ao intervalo", a,",", b)
else:
	print("Entradas", a,"e",  b ,"invalidas")
-- EXECUTION TIME:
0.175064
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
Entradas 3.0 e 4.0 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:42:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Entrada x:"))
a = float(input("Entrada a:"))
b = float(input("Entrada b:"))
if (a <= x) and (x <= b):
	print(x,"pertence ao intervalo", a,",", b)
elif (a >= x) and (x >= b):
	print(x,"nao pertence ao intervalo", a,",", b)
else:
	print("Entradas", a,"e",  b "invalidas")
-- EXECUTION TIME:
0.202244
-- ERROR:
  File "/home/codebench/codes/1674/1103/main.py", line 12
    print("Entradas", a,"e",  b "invalidas")
                                          ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:42:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Entrada x:"))
a = float(input("Entrada a:"))
b = float(input("Entrada b:"))
if (a <= x) and (x <= b):
	print(x,"pertence ao intervalo", a,",", b)
elif (a >= x) and (x >= b):
	print(x,"nao pertence ao intervalo", a,",", b)
else:
	print("Entradas", a,"e",  b "invalidas")
-- ERROR:
File "XXXX", line 12
    print("Entradas", a,"e",  b "invalidas")
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:43:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Entrada x:"))
a = float(input("Entrada a:"))
b = float(input("Entrada b:"))
if (a <= x) and (x <= b):
	print(x,"pertence ao intervalo", a,",", b)
elif (a >= x) and (x >= b):
	print(x,"nao pertence ao intervalo", a,",", b)
else:
	print("Entradas", a,"e",  b, "invalidas")
-- OUTPUT:
Entradas 3.0 e 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:43:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Entrada x:"))
a = float(input("Entrada a:"))
b = float(input("Entrada b:"))
if (a <= x) and (x <= b):
	print(x,"pertence ao intervalo", a,",", b)
elif (a >= x) and (x >= b):
	print(x,"nao pertence ao intervalo", a,",", b)
else:
	print("Entradas", a,"e",  b, "invalidas")
-- OUTPUT:
Entradas 3.0 e 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:43:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Entrada x:"))
a = float(input("Entrada a:"))
b = float(input("Entrada b:"))
if (a <= x) and (x <= b):
	print(x,"pertence ao intervalo", a,",", b)
elif (a >= x) and (x >= b):
	print(x,"nao pertence ao intervalo", a,",", b)
else:
	print("Entradas", a,"e",  b, "invalidas")
-- OUTPUT:
Entradas 3.0 e 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:43:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Entrada x:"))
a = float(input("Entrada a:"))
b = float(input("Entrada b:"))
if (a <= x) and (x <= b):
	print(x,"pertence ao intervalo", a,",", b)
elif (a >= x) and (x >= b):
	print(x,"nao pertence ao intervalo", a,",", b)
else:
	print("Entradas", a,"e",  b, "invalidas")
-- OUTPUT:
Entradas 3.0 e 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:43:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Entrada x:"))
a = float(input("Entrada a:"))
b = float(input("Entrada b:"))
if (a <= x) and (x <= b):
	print(x,"pertence ao intervalo", a,",", b)
elif (a >= x) and (x >= b):
	print(x,"nao pertence ao intervalo", a,",", b)
else:
	print("Entradas", a,"e",  b, "invalidas")
-- OUTPUT:
Entradas 3.0 e 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:44:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Entrada x:"))
a = float(input("Entrada a:"))
b = float(input("Entrada b:"))
if(b>a):
if (a <= x) and (x <= b):
	print(x,"pertence ao intervalo", a,",", b)
elif (a >= x) and (x >= b):
	print(x,"nao pertence ao intervalo", a,",", b)
else:
	print("Entradas", a,"e",  b, "invalidas")
-- EXECUTION TIME:
0.132665
-- ERROR:
  File "/home/codebench/codes/1674/1103/main.py", line 8
    if (a <= x) and (x <= b):
     ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:44:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Entrada x:"))
a = float(input("Entrada a:"))
b = float(input("Entrada b:"))
if(b>a):
	if (a <= x) and (x <= b):
		print(x,"pertence ao intervalo", a,",", b)
	elif (a >= x) and (x >= b):
		print(x,"nao pertence ao intervalo", a,",", b)
	else:
		print("Entradas", a,"e",  b, "invalidas")
-- EXECUTION TIME:
0.128553
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
Entradas 3.0 e 4.0 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:

-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:44:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Entrada x:"))
a = float(input("Entrada a:"))
b = float(input("Entrada b:"))
if(b>a):
	if (a <= x) and (x <= b):
		print(x,"pertence ao intervalo", a,",", b)
	elif (a >= x) and (x >= b):
		print(x,"nao pertence ao intervalo", a,",", b)
	else:
		print("Entradas", a,"e",  b, "invalidas")
-- OUTPUT:
Entradas 3.0 e 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:45:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Entrada x:"))
a = float(input("Entrada a:"))
b = float(input("Entrada b:"))
if(b>a):
	if (a <= x) and (x <= b):
		print(x,"pertence ao intervalo", a,",", b)
	elif (a >= x) and (x >= b):
		print(x,"nao pertence ao intervalo", a,",", b)
	else:
		print("Entradas", a,"e",  b, "invalidas")
-- EXECUTION TIME:
0.223781
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
Entradas 3.0 e 4.0 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:

-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:45:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Entrada x:"))
a = float(input("Entrada a:"))
b = float(input("Entrada b:"))
if(b>a):
	if (a >= x) and (x <= b):
		print(x,"pertence ao intervalo", a,",", b)
	elif (a >= x) and (x >= b):
		print(x,"nao pertence ao intervalo", a,",", b)
	else:
		print("Entradas", a,"e",  b, "invalidas")
-- EXECUTION TIME:
0.119094
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:

-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
Entradas 1.1 e 22.2 invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:45:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Entrada x:"))
a = float(input("Entrada a:"))
b = float(input("Entrada b:"))
if(b>a):
	if (a >= x) and (x <= b):
		print(x,"pertence ao intervalo", a,",", b)
	elif (a >= x) and (x <= b):
		print(x,"nao pertence ao intervalo", a,",", b)
	else:
		print("Entradas", a,"e",  b, "invalidas")
-- OUTPUT:
2.0 pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:47:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Entrada x:"))
a = float(input("Entrada a:"))
b = float(input("Entrada b:"))
if(b>a):
	if (x >= a) and (x <= b):
		print(x,"pertence ao intervalo", a,",", b)
	else:
		print(x,"nao pertence ao intervalo", a,",", b)
else:
		print("Entradas", a,"e",  b, "invalidas")
-- EXECUTION TIME:
0.205258
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
