== TEST (2019-05-09 11:34:55) 
-- CODE:
n = int(input())
while n!=1:
	if n%2==0:
		n = n/2
	else:
		n = n*3 + 1
	print(n)
-- OUTPUT:
5.0
16.0
8.0
4.0
2.0
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-09 11:35:05) 
-- CODE:
n = int(input())
while n!=1:
	if n%2==0:
		n = n/2
	else:
		n = n*3 + 1
	print(n)
-- EXECUTION TIME:
0.15301
-- TEST CASE 1:
---- input:
10 
---- correct output:
5
16
8
4
2
1
---- user output:
5.0
16.0
8.0
4.0
2.0
1.0
-- TEST CASE 2:
---- input:
45
---- correct output:
136
68
34
17
52
26
13
40
20
10
5
16
8
4
2
1
---- user output:
136
68.0
34.0
17.0
52.0
26.0
13.0
40.0
20.0
10.0
5.0
16.0
8.0
4.0
2.0
1.0
-- TEST CASE 3:
---- input:
13
---- correct output:
40
20
10
5
16
8
4
2
1
---- user output:
40
20.0
10.0
5.0
16.0
8.0
4.0
2.0
1.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:36:22) 
-- CODE:
n = int(input())
def q ():
	if n<=1:
		return
	while n!=1:
	if n%2==0:
		n = n/2
	else:
		n = n*3 + 1
	print(n)
-- ERROR:
File "XXXX", line 6
    if n%2==0:
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:36:31) 
-- CODE:
n = int(input())
def q ():
	if n<=1:
		return
	while n!=1:
		if n%2==0:
			n = n/2
		else:
			n = n*3 + 1
		print(n)
-- ERROR:
File "XXXX", line 6
    if n%2==0:
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:36:46) 
-- CODE:
n = int(input())
def main ():
	if n<=1:
		return
	while n!=1:
		if n%2==0:
			n = n/2
		else:
			n = n*3 + 1
		print(n)
-- ERROR:
File "XXXX", line 6
    if n%2==0:
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:37:47) 
-- CODE:
n = int(input())
if n<=1:
	i == 1
while n!=1:
	if n%2==0:
		n = n/2
	else:
		n = n*3 + 1
	print(n)
-- OUTPUT:
5.0
16.0
8.0
4.0
2.0
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:37:56) 
-- CODE:
n = int(input())
if n<=1:
	i == 1
while n!=1:
	if n%2==0:
		n = n/2
	else:
		n = n*3 + 1
	print(n)
-- OUTPUT:
5.0
16.0
8.0
4.0
2.0
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:38:02) 
-- CODE:
n = int(input())
if n<=1:
	i == 1
while n!=1:
	if n%2==0:
		n = n/2
	else:
		n = n*3 + 1
	print(n)
-- OUTPUT:
5.0
16.0
8.0
4.0
2.0
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:38:14) 
-- CODE:
n = int(input())
if n<=1:
	n == 1
while n!=1:
	if n%2==0:
		n = n/2
	else:
		n = n*3 + 1
	print(n)
-- OUTPUT:
5.0
16.0
8.0
4.0
2.0
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:38:18) 
-- CODE:
n = int(input())
if n<=1:
	n == 1
while n!=1:
	if n%2==0:
		n = n/2
	else:
		n = n*3 + 1
	print(n)
-- OUTPUT:
5.0
16.0
8.0
4.0
2.0
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:40:03) 
-- CODE:
n = int(input())
if n<=1:
	n = 1
while n!=1:
	if n%2==0:
		n = n/2
	else:
		n = n*3 + 1
	print(int(n))
-- OUTPUT:
5
16
8
4
2
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:40:07) 
-- CODE:
n = int(input())
if n<=1:
	n = 1
while n!=1:
	if n%2==0:
		n = n/2
	else:
		n = n*3 + 1
	print(int(n))
-- OUTPUT:
5
16
8
4
2
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-09 11:40:15) 
-- CODE:
n = int(input())
if n<=1:
	n = 1
while n!=1:
	if n%2==0:
		n = n/2
	else:
		n = n*3 + 1
	print(int(n))
-- EXECUTION TIME:
0.35838
-- TEST CASE 1:
---- input:
10 
---- correct output:
5
16
8
4
2
1
---- user output:
5
16
8
4
2
1
-- TEST CASE 2:
---- input:
45
---- correct output:
136
68
34
17
52
26
13
40
20
10
5
16
8
4
2
1
---- user output:
136
68
34
17
52
26
13
40
20
10
5
16
8
4
2
1
-- TEST CASE 3:
---- input:
13
---- correct output:
40
20
10
5
16
8
4
2
1
---- user output:
40
20
10
5
16
8
4
2
1
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:40:18) 
-- CODE:
n = int(input())
if n<=1:
	n = 1
while n!=1:
	if n%2==0:
		n = n/2
	else:
		n = n*3 + 1
	print(int(n))
-- OUTPUT:
5
16
8
4
2
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:41:51) 
-- CODE:
n = int(input())
if n<1:
	n = 1
while n!=1:
	if n%2==0:
		n = n/2
	else:
		n = n*3 + 1
	print(int(n))
-- OUTPUT:
5
16
8
4
2
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:41:54) 
-- CODE:
n = int(input())
if n<1:
	n = 1
while n!=1:
	if n%2==0:
		n = n/2
	else:
		n = n*3 + 1
	print(int(n))
-- OUTPUT:
5
16
8
4
2
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:41:57) 
-- CODE:
n = int(input())
if n<1:
	n = 1
while n!=1:
	if n%2==0:
		n = n/2
	else:
		n = n*3 + 1
	print(int(n))
-- OUTPUT:
5
16
8
4
2
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-09 11:42:10) 
-- CODE:
n = int(input())
if n<1:
	n = 1
while n!=1:
	if n%2==0:
		n = n/2
	else:
		n = n*3 + 1
	print(int(n))
-- EXECUTION TIME:
0.144215
-- TEST CASE 1:
---- input:
10 
---- correct output:
5
16
8
4
2
1
---- user output:
5
16
8
4
2
1
-- TEST CASE 2:
---- input:
45
---- correct output:
136
68
34
17
52
26
13
40
20
10
5
16
8
4
2
1
---- user output:
136
68
34
17
52
26
13
40
20
10
5
16
8
4
2
1
-- TEST CASE 3:
---- input:
13
---- correct output:
40
20
10
5
16
8
4
2
1
---- user output:
40
20
10
5
16
8
4
2
1
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
