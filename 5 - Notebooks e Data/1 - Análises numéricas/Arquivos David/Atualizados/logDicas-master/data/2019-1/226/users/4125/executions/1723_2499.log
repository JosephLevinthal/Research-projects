== TEST (2019-05-09 11:49:07) 
-- CODE:
from math import*
k = int(input("digite o numero natural: "))
soma = 1
i = 1
while(i<k):
	soma = soma + 1/factorial(i)
	i = i + 1
print(round(soma,2))
-- OUTPUT:
2.72
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:49:13) 
-- CODE:
from math import*
k = int(input("digite o numero natural: "))
soma = 1
i = 1
while(i<k):
	soma = soma + 1/factorial(i)
	i = i + 1
print(round(soma,2))
-- OUTPUT:
2.72
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-09 11:49:16) 
-- CODE:
from math import*
k = int(input("digite o numero natural: "))
soma = 1
i = 1
while(i<k):
	soma = soma + 1/factorial(i)
	i = i + 1
print(round(soma,2))
-- EXECUTION TIME:
0.115521
-- TEST CASE 1:
---- input:
7
---- correct output:
2.71805556
---- user output:
2.72
-- TEST CASE 2:
---- input:
15
---- correct output:
2.71828183
---- user output:
2.72
-- TEST CASE 3:
---- input:
6
---- correct output:
2.71666667
---- user output:
2.72
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:49:53) 
-- CODE:
from math import*
k = int(input("digite o numero natural: "))
soma = 1
i = 1
while(i<k):
	soma = soma + (1/(factorial(i)))
	i = i + 1
print(round(soma,2))
-- OUTPUT:
2.72
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:50:02) 
-- CODE:
from math import*
k = int(input("digite o numero natural: "))
soma = 1
i = 1
while(i<k):
	soma = soma + (1/(factorial(i)))
	i = i + 1
print(round(soma,8))
-- OUTPUT:
2.71805556
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 11:50:05) 
-- CODE:
from math import*
k = int(input("digite o numero natural: "))
soma = 1
i = 1
while(i<k):
	soma = soma + (1/(factorial(i)))
	i = i + 1
print(round(soma,8))
-- OUTPUT:
2.71805556
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-09 11:50:05) 
-- CODE:
from math import*
k = int(input("digite o numero natural: "))
soma = 1
i = 1
while(i<k):
	soma = soma + (1/(factorial(i)))
	i = i + 1
print(round(soma,8))
-- EXECUTION TIME:
0.129392
-- TEST CASE 1:
---- input:
7
---- correct output:
2.71805556
---- user output:
2.71805556
-- TEST CASE 2:
---- input:
15
---- correct output:
2.71828183
---- user output:
2.71828183
-- TEST CASE 3:
---- input:
6
---- correct output:
2.71666667
---- user output:
2.71666667
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
