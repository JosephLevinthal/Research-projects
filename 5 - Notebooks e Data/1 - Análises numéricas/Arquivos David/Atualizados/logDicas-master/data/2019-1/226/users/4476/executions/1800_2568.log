== TEST (2019-06-11 10:55:02) 
-- CODE:
n = int(input("digite o numero: "))

for i in range(6):
	print(i)
-- OUTPUT:
0
1
2
3
4
5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 10:55:26) 
-- CODE:
n = int(input("digite o numero: "))

for i in range(6):
	print(i)
-- OUTPUT:
0
1
2
3
4
5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 10:56:05) 
-- CODE:
n = int(input("digite o numero: "))

for i in range(n):
	print(i*"*")
-- OUTPUT:
*
**
***
****
*****
******
*******
********
*********
**********
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 10:56:11) 
-- CODE:
n = int(input("digite o numero: "))

for i in range(n):
	print(i*"*")
-- OUTPUT:
*
**
***
****
*****
******
*******
********
*********
**********
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 10:56:13) 
-- CODE:
n = int(input("digite o numero: "))

for i in range(n):
	print(i*"*")
-- OUTPUT:
*
**
***
****
*****
******
*******
********
*********
**********
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 10:56:15) 
-- CODE:
n = int(input("digite o numero: "))

for i in range(n):
	print(i*"*")
-- OUTPUT:
*
**
***
****
*****
******
*******
********
*********
**********
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 10:56:24) 
-- CODE:
n = int(input("digite o numero: "))

for i in range(n):
	print(i*"*")
-- OUTPUT:
*
**
***
****
*****
******
*******
********
*********
**********
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 10:56:29) 
-- CODE:
n = int(input("digite o numero: "))

for i in range(n):
	print(i*"*")
-- OUTPUT:
*
**
***
****
*****
******
*******
********
*********
**********
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 10:56:32) 
-- CODE:
n = int(input("digite o numero: "))

for i in range(n):
	print(i*"*")
-- OUTPUT:
*
**
***
****
*****
******
*******
********
*********
**********
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 10:56:54) 
-- CODE:
n = int(input("digite o numero: "))

for i in range(n):
	print(i+1*"*")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(i+1*"*")
TypeError: unsupported operand type(s) for +: 'int' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 10:57:01) 
-- CODE:
n = int(input("digite o numero: "))

for i in range(n):
	print((i+1)*"*")
-- OUTPUT:
*
**
***
****
*****
******
*******
********
*********
**********
***********
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 10:58:32) 
-- CODE:
n = int(input("digite o numero: "))

for i in range(n):
	print(i-1)
-- OUTPUT:
-1
0
1
2
3
4
5
6
7
8
9
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 10:58:54) 
-- CODE:
n = int(input("digite o numero: "))

for i in range(n):
	print(n - 1)
-- OUTPUT:
10
10
10
10
10
10
10
10
10
10
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 10:59:08) 
-- CODE:
n = int(input("digite o numero: "))

for i in range(n):
	print(n - i)
-- OUTPUT:
11
10
9
8
7
6
5
4
3
2
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 10:59:59) 
-- CODE:
n = int(input("digite o numero: "))

for i in range(n):
	print(n - i)*"*" + i*"o"
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(n - i)*"*" + i*"o"
TypeError: can't multiply sequence by non-int of type 'NoneType'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 11:00:31) 
-- CODE:
n = int(input("digite o numero: "))

for i in range(n):
	print((n - i)*"*" + (i*"o"))
-- OUTPUT:
***********
**********o
*********oo
********ooo
*******oooo
******ooooo
*****oooooo
****ooooooo
***oooooooo
**ooooooooo
*oooooooooo
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 11:01:22) 
-- CODE:
n = int(input("digite o numero: "))

for i in range(n):
	print((n - i)*"*" + 2*(i*"o"))
-- OUTPUT:
***********
**********oo
*********oooo
********oooooo
*******oooooooo
******oooooooooo
*****oooooooooooo
****oooooooooooooo
***oooooooooooooooo
**oooooooooooooooooo
*oooooooooooooooooooo
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 11:02:16) 
-- CODE:
n = int(input("digite o numero: "))

for i in range(n):
	print((n - i)*"*" + 2*(i*"o")) + (n - i)*"*"
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print((n - i)*"*" + 2*(i*"o")) + (n - i)*"*"
TypeError: unsupported operand type(s) for +: 'NoneType' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 11:03:23) 
-- CODE:
n = int(input("digite o numero: "))

for i in range(n):
	print((n - i)*"*" + 2*i*"o" + (n - i)*"*"
-- ERROR:
File "XXXX", line 5
    
                                              ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 11:03:28) 
-- CODE:
n = int(input("digite o numero: "))

for i in range(n):
	print((n - i)*"*" + 2*i*"o" + (n - i)*"*"
-- ERROR:
File "XXXX", line 5
    
                                              ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 11:03:40) 
-- CODE:
n = int(input("digite o numero: "))

for i in range(n):
	print((n - i)*"*" + 2*i*"o" + (n - i)*"*")
-- OUTPUT:
**********************
**********oo**********
*********oooo*********
********oooooo********
*******oooooooo*******
******oooooooooo******
*****oooooooooooo*****
****oooooooooooooo****
***oooooooooooooooo***
**oooooooooooooooooo**
*oooooooooooooooooooo*
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 11:03:46) 
-- CODE:
n = int(input("digite o numero: "))

for i in range(n):
	print((n - i)*"*" + 2*i*"o" + (n - i)*"*")
-- EXECUTION TIME:
0.695044
-- TEST CASE 1:
---- input:
11
---- correct output:
**********************
**********oo**********
*********oooo*********
********oooooo********
*******oooooooo*******
******oooooooooo******
*****oooooooooooo*****
****oooooooooooooo****
***oooooooooooooooo***
**oooooooooooooooooo**
*oooooooooooooooooooo*
---- user output:
**********************
**********oo**********
*********oooo*********
********oooooo********
*******oooooooo*******
******oooooooooo******
*****oooooooooooo*****
****oooooooooooooo****
***oooooooooooooooo***
**oooooooooooooooooo**
*oooooooooooooooooooo*
-- TEST CASE 2:
---- input:
19
---- correct output:
**************************************
******************oo******************
*****************oooo*****************
****************oooooo****************
***************oooooooo***************
**************oooooooooo**************
*************oooooooooooo*************
************oooooooooooooo************
***********oooooooooooooooo***********
**********oooooooooooooooooo**********
*********oooooooooooooooooooo*********
********oooooooooooooooooooooo********
*******oooooooooooooooooooooooo*******
******oooooooooooooooooooooooooo******
*****oooooooooooooooooooooooooooo*****
****oooooooooooooooooooooooooooooo****
***oooooooooooooooooooooooooooooooo***
**oooooooooooooooooooooooooooooooooo**
*oooooooooooooooooooooooooooooooooooo*
---- user output:
**************************************
******************oo******************
*****************oooo*****************
****************oooooo****************
***************oooooooo***************
**************oooooooooo**************
*************oooooooooooo*************
************oooooooooooooo************
***********oooooooooooooooo***********
**********oooooooooooooooooo**********
*********oooooooooooooooooooo*********
********oooooooooooooooooooooo********
*******oooooooooooooooooooooooo*******
******oooooooooooooooooooooooooo******
*****oooooooooooooooooooooooooooo*****
****oooooooooooooooooooooooooooooo****
***oooooooooooooooooooooooooooooooo***
**oooooooooooooooooooooooooooooooooo**
*oooooooooooooooooooooooooooooooooooo*
-- TEST CASE 3:
---- input:
26
---- correct output:
****************************************************
*************************oo*************************
************************oooo************************
***********************oooooo***********************
**********************oooooooo**********************
*********************oooooooooo*********************
********************oooooooooooo********************
*******************oooooooooooooo*******************
******************oooooooooooooooo******************
*****************oooooooooooooooooo*****************
****************oooooooooooooooooooo****************
***************oooooooooooooooooooooo***************
**************oooooooooooooooooooooooo**************
*************oooooooooooooooooooooooooo*************
************oooooooooooooooooooooooooooo************
***********oooooooooooooooooooooooooooooo***********
**********oooooooooooooooooooooooooooooooo**********
*********oooooooooooooooooooooooooooooooooo*********
********oooooooooooooooooooooooooooooooooooo********
*******oooooooooooooooooooooooooooooooooooooo*******
******oooooooooooooooooooooooooooooooooooooooo******
*****oooooooooooooooooooooooooooooooooooooooooo*****
****oooooooooooooooooooooooooooooooooooooooooooo****
***oooooooooooooooooooooooooooooooooooooooooooooo***
**oooooooooooooooooooooooooooooooooooooooooooooooo**
*oooooooooooooooooooooooooooooooooooooooooooooooooo*
---- user output:
****************************************************
*************************oo*************************
************************oooo************************
***********************oooooo***********************
**********************oooooooo**********************
*********************oooooooooo*********************
********************oooooooooooo********************
*******************oooooooooooooo*******************
******************oooooooooooooooo******************
*****************oooooooooooooooooo*****************
****************oooooooooooooooooooo****************
***************oooooooooooooooooooooo***************
**************oooooooooooooooooooooooo**************
*************oooooooooooooooooooooooooo*************
************oooooooooooooooooooooooooooo************
***********oooooooooooooooooooooooooooooo***********
**********oooooooooooooooooooooooooooooooo**********
*********oooooooooooooooooooooooooooooooooo*********
********oooooooooooooooooooooooooooooooooooo**
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 11:09:24) 
-- CODE:
n = int(input("digite o numero: "))

for i in range(n):
	print((n - i)*"*" 
-- ERROR:
File "XXXX", line 5
    
                       ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 11:09:29) 
-- CODE:
n = int(input("digite o numero: "))

for i in range(n):
	print((n - i)*"*" 
-- ERROR:
File "XXXX", line 5
    
                       ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 11:09:36) 
-- CODE:
n = int(input("digite o numero: "))

for i in range(n):
	print((n - i)*"*") 
-- OUTPUT:
***********
**********
*********
********
*******
******
*****
****
***
**
*
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
