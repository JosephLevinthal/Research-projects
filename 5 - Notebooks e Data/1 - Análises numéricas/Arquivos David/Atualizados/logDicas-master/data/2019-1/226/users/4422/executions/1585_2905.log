== TEST (2019-03-26 11:35:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
lado1 = int(input("Lado1: "))
lado2 = int(input("Lado2: "))
lado3 = int(input("Lado3: "))
s = (lado1 + lado2 + lado3) / 2
a = (s*(s - lado1) * s*(s - lado2) * s*(s - lado3)) ** 0,5
print(round(a,5)

-- ERROR:
File "XXXX", line 10
    
                    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:36:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lado1 = int(input("Lado1: "))
lado2 = int(input("Lado2: "))
lado3 = int(input("Lado3: "))
s = (lado1 + lado2 + lado3) / 2
a = sqrt(s*(s - lado1) * s*(s - lado2) * s*(s - lado3))
print(round(a,5)

-- ERROR:
File "XXXX", line 11
    
                    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:36:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lado1 = int(input("Lado1: "))
lado2 = int(input("Lado2: "))
lado3 = int(input("Lado3: "))
s = (lado1 + lado2 + lado3) / 2
a = sqrt(s*(s - lado1) * s*(s - lado2) * s*(s - lado3))
print(round(a,5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    lado1 = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 11:37:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lado1 = int(input("Lado1: "))
lado2 = int(input("Lado2: "))
lado3 = int(input("Lado3: "))
s = (lado1 + lado2 + lado3) / 2
a = sqrt(s*(s - lado1) * s*(s - lado2) * s*(s - lado3))
print(round(a,5))

-- EXECUTION TIME:
0.150257
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1585/2905/main.py", line 5, in <module>
    lado1 = int(input())
ValueError: invalid literal for int() with base 10: '11.0'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:37:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lado1 = int(input("Lado1: "))
lado2 = int(input("Lado2: "))
lado3 = int(input("Lado3: "))
s = (lado1 + lado2 + lado3) / 2
a = sqrt(s*(s - lado1) * s*(s - lado2) * s*(s - lado3))
print(round(a,5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    lado1 = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:39:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lado1 = int(input("Lado1: "))
lado2 = int(input("Lado2: "))
lado3 = int(input("Lado3: "))
s = (lado1 + lado2 + lado3) / 2
a = sqrt(s*(s - lado1) * (s - lado2) * (s - lado3))
print(round(a,5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    lado1 = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 11:39:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lado1 = int(input("Lado1: "))
lado2 = int(input("Lado2: "))
lado3 = int(input("Lado3: "))
s = (lado1 + lado2 + lado3) / 2
a = sqrt(s*(s - lado1) * (s - lado2) * (s - lado3))
print(round(a,5))

-- EXECUTION TIME:
0.167453
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1585/2905/main.py", line 5, in <module>
    lado1 = int(input())
ValueError: invalid literal for int() with base 10: '11.0'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:39:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lado1 = int(input("Lado1: "))
lado2 = int(input("Lado2: "))
lado3 = int(input("Lado3: "))
s = (lado1 + lado2 + lado3) / 2
a = sqrt(s*(s - lado1) * (s - lado2) * (s - lado3))
print(round(a, 5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    lado1 = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:40:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lado1 = int(input("Lado1: "))
lado2 = int(input("Lado2: "))
lado3 = int(input("Lado3: "))
s = (lado1 + lado2 + lado3) / 2
a = sqrt(s*(s - lado1) * (s - lado2) * (s - lado3))
print(round(a, 5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    lado1 = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:40:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lado1 = int(input("Lado1: "))
lado2 = int(input("Lado2: "))
lado3 = int(input("Lado3: "))
s = (lado1 + lado2 + lado3) / 2
a = sqrt(s*(s - lado1) * (s - lado2) * (s - lado3))
print(round(a, 5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    lado1 = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 11:40:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lado1 = int(input("Lado1: "))
lado2 = int(input("Lado2: "))
lado3 = int(input("Lado3: "))
s = (lado1 + lado2 + lado3) / 2
a = sqrt(s*(s - lado1) * (s - lado2) * (s - lado3))
print(round(a, 5))

-- EXECUTION TIME:
0.189606
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1585/2905/main.py", line 5, in <module>
    lado1 = int(input())
ValueError: invalid literal for int() with base 10: '11.0'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:41:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lado1 = int(input("Lado1: "))
lado2 = int(input("Lado2: "))
lado3 = int(input("Lado3: "))
s = (lado1 + lado2 + lado3) / 2
a = sqrt(s*((s - lado1) * (s - lado2) * (s - lado3))
print(round(a, 5))

-- ERROR:
File "XXXX", line 10
    print(round(a, 5))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:41:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lado1 = int(input("Lado1: "))
lado2 = int(input("Lado2: "))
lado3 = int(input("Lado3: "))
s = (lado1 + lado2 + lado3) / 2
a = sqrt(s*((s - lado1) * (s - lado2) * (s - lado3)))
print(round(a, 5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    lado1 = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 11:41:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lado1 = int(input("Lado1: "))
lado2 = int(input("Lado2: "))
lado3 = int(input("Lado3: "))
s = (lado1 + lado2 + lado3) / 2
a = sqrt(s*((s - lado1) * (s - lado2) * (s - lado3)))
print(round(a, 5))

-- EXECUTION TIME:
0.16693
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1585/2905/main.py", line 5, in <module>
    lado1 = int(input())
ValueError: invalid literal for int() with base 10: '11.0'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 11:41:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lado1 = int(input("Lado1: "))
lado2 = int(input("Lado2: "))
lado3 = int(input("Lado3: "))
s = (lado1 + lado2 + lado3) / 2
a = sqrt(s*((s - lado1) * (s - lado2) * (s - lado3)))
print(round(a, 5))

-- EXECUTION TIME:
0.127588
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1585/2905/main.py", line 5, in <module>
    lado1 = int(input())
ValueError: invalid literal for int() with base 10: '11.0'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 11:41:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lado1 = int(input("Lado1: "))
lado2 = int(input("Lado2: "))
lado3 = int(input("Lado3: "))
s = (lado1 + lado2 + lado3) / 2
a = sqrt(s*((s - lado1) * (s - lado2) * (s - lado3)))
print(round(a, 5))

-- EXECUTION TIME:
0.238971
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1585/2905/main.py", line 5, in <module>
    lado1 = int(input())
ValueError: invalid literal for int() with base 10: '11.0'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 11:41:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lado1 = int(input("Lado1: "))
lado2 = int(input("Lado2: "))
lado3 = int(input("Lado3: "))
s = (lado1 + lado2 + lado3) / 2
a = sqrt(s*((s - lado1) * (s - lado2) * (s - lado3)))
print(round(a, 5))

-- EXECUTION TIME:
0.189725
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1585/2905/main.py", line 5, in <module>
    lado1 = int(input())
ValueError: invalid literal for int() with base 10: '33.0'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:15:40) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
a = int(input("Lado1: "))
b = int(input("Lado2: "))
c = int(input("Lado3: "))
s = (a + b +c) / 2
a1 = sqrt(s*((s - a) * (s - b) * (s - c)))
print(round(a1, 5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 10:15:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
a = int(input("Lado1: "))
b = int(input("Lado2: "))
c = int(input("Lado3: "))
s = (a + b +c) / 2
a1 = sqrt(s*((s - a) * (s - b) * (s - c)))
print(round(a1, 5))

-- EXECUTION TIME:
0.186002
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1585/2905/main.py", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:16:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
a = float(input("Lado1: "))
b = float(input("Lado2: "))
c = float(input("Lado3: "))
s = (a + b +c) / 2
a1 = sqrt(s*((s - a) * (s - b) * (s - c)))
print(round(a1, 5))

-- OUTPUT:
69.41967
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 10:16:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
a = float(input("Lado1: "))
b = float(input("Lado2: "))
c = float(input("Lado3: "))
s = (a + b +c) / 2
a1 = sqrt(s*((s - a) * (s - b) * (s - c)))
print(round(a1, 5))

-- EXECUTION TIME:
0.201921
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.41967
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709.16654
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
