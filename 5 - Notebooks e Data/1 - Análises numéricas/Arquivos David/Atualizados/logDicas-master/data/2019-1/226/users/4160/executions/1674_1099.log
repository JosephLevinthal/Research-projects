== TEST (2019-04-23 21:01:24) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

if ((x >= y + z) and (y >= x + z) and (z >= x + y)):
	print("Tipo de triangulo: invalido ")
else:
	if((x==y)and(y==z)):
		print("Tipo de triangulo: equilatero")
	else:
		if((x==y) or (z==y) or(z==x)):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")
		
		
-- OUTPUT:
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 21:02:33) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

if ((x >= y + z) and (y >= x + z) and (z >= x + y)):
	print("Entradas: ","x","y","z")
	print("Tipo de triangulo: invalido ")
else:
	if((x==y)and(y==z)):
		print("Tipo de triangulo: equilatero")
	else:
		if((x==y) or (z==y) or(z==x)):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")
		
		
-- OUTPUT:
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:32:33) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

if ((x >= y + z) and (y >= x + z) and (z >= x + y)):
	print("Entradas: ","x","y","z")
	print("Tipo de triangulo: invalido ")
else:
	if((x==y)and(y==z)):
		print("Tipo de triangulo: equilatero")
	else:
		if((x==y) or (z==y) or(z==x)):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")
print("Entradas: ","x","y","z")
		
-- OUTPUT:
Tipo de triangulo: isoceles
Entradas:  x y z
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:33:38) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))


print("Entradas: ","x","y","z")

if ((x >= y + z) and (y >= x + z) and (z >= x + y)):
	print("Tipo de triangulo: invalido ")
else:
	if((x==y)and(y==z)):
		print("Tipo de triangulo: equilatero")
	else:
		if((x==y) or (z==y) or(z==x)):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")

		
-- OUTPUT:
Entradas:  x y z
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 20:34:00) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))


print("Entradas: ",x ,y,z)

if ((x >= y + z) and (y >= x + z) and (z >= x + y)):
	print("Tipo de triangulo: invalido ")
else:
	if((x==y)and(y==z)):
		print("Tipo de triangulo: equilatero")
	else:
		if((x==y) or (z==y) or(z==x)):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")

		
-- EXECUTION TIME:
0.166243
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 4.0 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 4.4 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 2.0 7.0
Tipo de triangulo: escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:34:01) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))


print("Entradas: ",x ,y,z)

if ((x >= y + z) and (y >= x + z) and (z >= x + y)):
	print("Tipo de triangulo: invalido ")
else:
	if((x==y)and(y==z)):
		print("Tipo de triangulo: equilatero")
	else:
		if((x==y) or (z==y) or(z==x)):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")

		
-- OUTPUT:
Entradas:  2.0 4.0 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:35:51) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))


print("Entradas: ",x , y ,z)

if ((x >= y + z) and (y >= x + z) and (z >= x + y)):
	print("Tipo de triangulo: invalido ")
else:
	if((x==y)and(y==z)):
		print("Tipo de triangulo: equilatero")
	else:
		if((x==y) and (z==y) and (z==x)):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")

		
-- OUTPUT:
Entradas:  2.0 4.0 4.0
Tipo de triangulo: escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 20:35:51) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))


print("Entradas: ",x , y ,z)

if ((x >= y + z) and (y >= x + z) and (z >= x + y)):
	print("Tipo de triangulo: invalido ")
else:
	if((x==y)and(y==z)):
		print("Tipo de triangulo: equilatero")
	else:
		if((x==y) and (z==y) and (z==x)):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")

		
-- EXECUTION TIME:
0.190172
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 4.0 4.0
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Lado1: Lado2: Lado3: Entradas:  3.3 4.4 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Lado1: Lado2: Lado3: Entradas:  1.0 2.0 7.0
Tipo de triangulo: escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:36:44) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))


print("Entradas: ",x , y ,z)

if ((x < y + z) and (y < x + z) and (z < x + y)):
	print("Tipo de triangulo: invalido ")
else:
	if((x==y)and(y==z)):
		print("Tipo de triangulo: equilatero")
	else:
		if((x==y) and (z==y) and (z==x)):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")

		
-- OUTPUT:
Entradas:  2.0 4.0 4.0
Tipo de triangulo: invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:39:48) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: ", ",", "," ,"," )

if ((x < y + z) and (y < x + z) and (z < x + y)):
	print("Tipo de triangulo: invalido ")
else:
	if((x==y)and(y==z)):
		print("Tipo de triangulo: equilatero")
	else:
		if((x==y) and (z==y) and (z==x)):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")

		
-- OUTPUT:
Entradas:  , , ,
Tipo de triangulo: invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:40:31) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: ", x , y , z)

if ((x < y + z) and (y < x + z) and (z < x + y)):
	print("Tipo de triangulo: invalido ")
else:
	if((x==y)and(y==z)):
		print("Tipo de triangulo: equilatero")
	else:
		if((x==y) or (z==y) or (z==x)):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")

		
-- OUTPUT:
Entradas:  2.0 4.0 4.0
Tipo de triangulo: invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:42:14) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: ", x , y , z)

if ((x < y + z) or (y < x + z) or (z < x + y)):
	print("Tipo de triangulo: invalido ")
else:
	if((x==y)and(y==z)):
		print("Tipo de triangulo: equilatero")
	else:
		if((x==y) and (z==y) and (z==x)):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")

		
-- OUTPUT:
Entradas:  2.0 4.0 4.0
Tipo de triangulo: invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 20:42:20) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: ", x , y , z)

if ((x < y + z) or (y < x + z) or (z < x + y)):
	print("Tipo de triangulo: invalido ")
else:
	if((x==y)and(y==z)):
		print("Tipo de triangulo: equilatero")
	else:
		if((x==y) and (z==y) and (z==x)):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")

		
-- EXECUTION TIME:
0.128856
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 4.0 4.0
Tipo de triangulo: invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 4.4 5.5
Tipo de triangulo: invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 2.0 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:42:49) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: ", x "," y "," z)

if ((x < y + z) or (y < x + z) or (z < x + y)):
	print("Tipo de triangulo: invalido ")
else:
	if((x==y)and(y==z)):
		print("Tipo de triangulo: equilatero")
	else:
		if((x==y) and (z==y) and (z==x)):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")

		
-- ERROR:
File "XXXX", line 7
    print("Entradas: ", x "," y "," z)
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:42:55) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " x "," y "," z)

if ((x < y + z) or (y < x + z) or (z < x + y)):
	print("Tipo de triangulo: invalido ")
else:
	if((x==y)and(y==z)):
		print("Tipo de triangulo: equilatero")
	else:
		if((x==y) and (z==y) and (z==x)):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")

		
-- ERROR:
File "XXXX", line 7
    print("Entradas: " x "," y "," z)
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:43:14) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " x , y , z)

if ((x < y + z) or (y < x + z) or (z < x + y)):
	print("Tipo de triangulo: invalido ")
else:
	if((x==y)and(y==z)):
		print("Tipo de triangulo: equilatero")
	else:
		if((x==y) and (z==y) and (z==x)):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")

		
-- ERROR:
File "XXXX", line 7
    print("Entradas: " x , y , z)
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:43:28) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x , y , z)

if ((x < y + z) or (y < x + z) or (z < x + y)):
	print("Tipo de triangulo: invalido ")
else:
	if((x==y)and(y==z)):
		print("Tipo de triangulo: equilatero")
	else:
		if((x==y) and (z==y) and (z==x)):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")

		
-- OUTPUT:
Entradas:  2.0 4.0 4.0
Tipo de triangulo: invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 20:43:33) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x , y , z)

if ((x < y + z) or (y < x + z) or (z < x + y)):
	print("Tipo de triangulo: invalido ")
else:
	if((x==y)and(y==z)):
		print("Tipo de triangulo: equilatero")
	else:
		if((x==y) and (z==y) and (z==x)):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")

		
-- EXECUTION TIME:
0.195142
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 4.0 4.0
Tipo de triangulo: invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 4.4 5.5
Tipo de triangulo: invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 2.0 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:43:43) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x , y , z)

if ((x < y + z) or (y < x + z) or (z < x + y)):
	print("Tipo de triangulo: invalido ")
else:
	if((x==y)and(y==z)):
		print("Tipo de triangulo: equilatero")
	else:
		if((x==y) and (z==y) and (z==x)):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")

		
-- OUTPUT:
Entradas:  2.0 4.0 4.0
Tipo de triangulo: invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:44:39) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x , y , z)

if ((x < y + z) or (y < x + z) or (z < x + y)):
	if((x==y)and(y==z)):
		print("Tipo de triangulo: equilatero")
	else:
		if((x==y) and (z==y) and (z==x)):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")

		
-- OUTPUT:
Entradas:  2.0 4.0 4.0
Tipo de triangulo: escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:47:31) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x , y , z)

if ((x >= y + z) or (y >= x + z) or (z >= x + y)):
	print("Tipo de triangulo: invalido")
else:	
	if((x==y)and(y==z)):
		print("Tipo de triangulo: equilatero")
	else:
		if((x==y) or (z==y) or (z==x)):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")


		
-- OUTPUT:
Entradas:  2.0 4.0 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:47:35) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x , y , z)

if ((x >= y + z) or (y >= x + z) or (z >= x + y)):
	print("Tipo de triangulo: invalido")
else:	
	if((x==y)and(y==z)):
		print("Tipo de triangulo: equilatero")
	else:
		if((x==y) or (z==y) or (z==x)):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")


		
-- OUTPUT:
Entradas:  2.0 4.0 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 20:47:42) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x , y , z)

if ((x >= y + z) or (y >= x + z) or (z >= x + y)):
	print("Tipo de triangulo: invalido")
else:	
	if((x==y)and(y==z)):
		print("Tipo de triangulo: equilatero")
	else:
		if((x==y) or (z==y) or (z==x)):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")


		
-- EXECUTION TIME:
0.199167
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 4.0 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 4.4 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 2.0 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:47:48) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x , y , z)

if ((x >= y + z) or (y >= x + z) or (z >= x + y)):
	print("Tipo de triangulo: invalido")
else:	
	if((x==y)and(y==z)):
		print("Tipo de triangulo: equilatero")
	else:
		if((x==y) or (z==y) or (z==x)):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")


		
-- OUTPUT:
Entradas:  2.0 4.0 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:48:13) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x >= y + z) or (y >= x + z) or (z >= x + y)):
	print("Tipo de triangulo: invalido")
else:	
	if((x==y)and(y==z)):
		print("Tipo de triangulo: equilatero")
	else:
		if((x==y) or (z==y) or (z==x)):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")


		
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 20:48:18) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x >= y + z) or (y >= x + z) or (z >= x + y)):
	print("Tipo de triangulo: invalido")
else:	
	if((x==y)and(y==z)):
		print("Tipo de triangulo: equilatero")
	else:
		if((x==y) or (z==y) or (z==x)):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")


		
-- EXECUTION TIME:
0.12657
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:48:24) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x >= y + z) or (y >= x + z) or (z >= x + y)):
	print("Tipo de triangulo: invalido")
else:	
	if((x==y)and(y==z)):
		print("Tipo de triangulo: equilatero")
	else:
		if((x==y) or (z==y) or (z==x)):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")


		
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:48:28) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x >= y + z) or (y >= x + z) or (z >= x + y)):
	print("Tipo de triangulo: invalido")
else:	
	if((x==y)and(y==z)):
		print("Tipo de triangulo: equilatero")
	else:
		if((x==y) or (z==y) or (z==x)):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")


		
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 20:48:52) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x >= y + z) or (y >= x + z) or (z >= x + y)):
	print("Tipo de triangulo: invalido")
else:	
	if((x==y)and(y==z)):
		print("Tipo de triangulo: equilatero")
	else:
		if((x==y) or (z==y) or (z==x)):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")


		
-- EXECUTION TIME:
0.166684
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:50:53) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x >= y + z) or (y >= x + z) or (z >= x + y)):
	x = "invalido"
	print("Tipo de triangulo: " , x)
else:	
	if((x==y)and(y==z)):
		x = "equilatero"
		print("Tipo de triangulo: ", x)
	else:
		if((x==y) or (z==y) or (z==x)):
			x = "isoceles"
			print("Tipo de triangulo: ", x)
		else:
			x = "escaleno"
			print("Tipo de triangulo: ", x)


		
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 20:51:02) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x >= y + z) or (y >= x + z) or (z >= x + y)):
	x = "invalido"
	print("Tipo de triangulo: " , x)
else:	
	if((x==y)and(y==z)):
		x = "equilatero"
		print("Tipo de triangulo: ", x)
	else:
		if((x==y) or (z==y) or (z==x)):
			x = "isoceles"
			print("Tipo de triangulo: ", x)
		else:
			x = "escaleno"
			print("Tipo de triangulo: ", x)


		
-- EXECUTION TIME:
0.122249
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 , 4.4 , 5.5
Tipo de triangulo:  escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 , 2.0 , 7.0
Tipo de triangulo:  invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:51:04) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x >= y + z) or (y >= x + z) or (z >= x + y)):
	x = "invalido"
	print("Tipo de triangulo: " , x)
else:	
	if((x==y)and(y==z)):
		x = "equilatero"
		print("Tipo de triangulo: ", x)
	else:
		if((x==y) or (z==y) or (z==x)):
			x = "isoceles"
			print("Tipo de triangulo: ", x)
		else:
			x = "escaleno"
			print("Tipo de triangulo: ", x)


		
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:51:27) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x >= y + z) or (y >= x + z) or (z >= x + y)):
	x = "invalido"
	print("Tipo de triangulo: " , x)
else:	
	if((x==y)and(y==z)):
		x = "equilatero"
		print("Tipo de triangulo: ", x)
	else:
		if((x==y) or (z==y) or (z==x)):
			x = "isoceles"
			print("Tipo de triangulo: ", x)
		else:
			x = "escaleno"
			print("Tipo de triangulo: ", x)


		
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:51:33) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x >= y + z) or (y >= x + z) or (z >= x + y)):
	x = "invalido"
	print("Tipo de triangulo: " , x)
else:	
	if((x==y)and(y==z)):
		x = "equilatero"
		print("Tipo de triangulo: ", x)
	else:
		if((x==y) or (z==y) or (z==x)):
			x = "isoceles"
			print("Tipo de triangulo: ", x)
		else:
			x = "escaleno"
			print("Tipo de triangulo: ", x)


		
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 20:51:43) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x >= y + z) or (y >= x + z) or (z >= x + y)):
	x = "invalido"
	print("Tipo de triangulo: " , x)
else:	
	if((x==y)and(y==z)):
		x = "equilatero"
		print("Tipo de triangulo: ", x)
	else:
		if((x==y) or (z==y) or (z==x)):
			x = "isoceles"
			print("Tipo de triangulo: ", x)
		else:
			x = "escaleno"
			print("Tipo de triangulo: ", x)


		
-- EXECUTION TIME:
0.180992
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 , 4.4 , 5.5
Tipo de triangulo:  escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 , 2.0 , 7.0
Tipo de triangulo:  invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:51:44) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x >= y + z) or (y >= x + z) or (z >= x + y)):
	x = "invalido"
	print("Tipo de triangulo: " , x)
else:	
	if((x==y)and(y==z)):
		x = "equilatero"
		print("Tipo de triangulo: ", x)
	else:
		if((x==y) or (z==y) or (z==x)):
			x = "isoceles"
			print("Tipo de triangulo: ", x)
		else:
			x = "escaleno"
			print("Tipo de triangulo: ", x)


		
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 20:51:46) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x >= y + z) or (y >= x + z) or (z >= x + y)):
	x = "invalido"
	print("Tipo de triangulo: " , x)
else:	
	if((x==y)and(y==z)):
		x = "equilatero"
		print("Tipo de triangulo: ", x)
	else:
		if((x==y) or (z==y) or (z==x)):
			x = "isoceles"
			print("Tipo de triangulo: ", x)
		else:
			x = "escaleno"
			print("Tipo de triangulo: ", x)


		
-- EXECUTION TIME:
0.111419
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 , 4.4 , 5.5
Tipo de triangulo:  escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 , 2.0 , 7.0
Tipo de triangulo:  invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:53:49) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x<0) and (y<0) and (z<0)):
	print("Tipo de triangulo: invalido")
if ((x >= y + z) or (y >= x + z) or (z >= x + y)):
	x = "invalido"
	print("Tipo de triangulo: " , x)
else:	
	if((x==y)and(y==z)):
		x = "equilatero"
		print("Tipo de triangulo: ", x)
	else:
		if((x==y) or (z==y) or (z==x)):
			x = "isoceles"
			print("Tipo de triangulo: ", x)
		else:
			x = "escaleno"
			print("Tipo de triangulo: ", x)


		
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:53:54) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x<0) and (y<0) and (z<0)):
	print("Tipo de triangulo: invalido")
if ((x >= y + z) or (y >= x + z) or (z >= x + y)):
	x = "invalido"
	print("Tipo de triangulo: " , x)
else:	
	if((x==y)and(y==z)):
		x = "equilatero"
		print("Tipo de triangulo: ", x)
	else:
		if((x==y) or (z==y) or (z==x)):
			x = "isoceles"
			print("Tipo de triangulo: ", x)
		else:
			x = "escaleno"
			print("Tipo de triangulo: ", x)


		
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 20:54:01) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x<0) and (y<0) and (z<0)):
	print("Tipo de triangulo: invalido")
if ((x >= y + z) or (y >= x + z) or (z >= x + y)):
	x = "invalido"
	print("Tipo de triangulo: " , x)
else:	
	if((x==y)and(y==z)):
		x = "equilatero"
		print("Tipo de triangulo: ", x)
	else:
		if((x==y) or (z==y) or (z==x)):
			x = "isoceles"
			print("Tipo de triangulo: ", x)
		else:
			x = "escaleno"
			print("Tipo de triangulo: ", x)


		
-- EXECUTION TIME:
0.16337
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 , 4.4 , 5.5
Tipo de triangulo:  escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 , 2.0 , 7.0
Tipo de triangulo:  invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:55:02) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x<0) and (y<0) and (z<0)):
	print("Tipo de triangulo: invalido")
else:
	if ((x >= y + z) or (y >= x + z) or (z >= x + y)):
		x = "invalido"
		print("Tipo de triangulo: " , x)
	else:	
		if((x==y)and(y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
		if((x==y) or (z==y) or (z==x)):
			x = "isoceles"
			print("Tipo de triangulo: ", x)
		else:
			x = "escaleno"
			print("Tipo de triangulo: ", x)


		
-- ERROR:
File "XXXX", line 20
    if((x==y) or (z==y) or (z==x)):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:55:21) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x<0) and (y<0) and (z<0)):
	print("Tipo de triangulo: invalido")
else:
	if ((x >= y + z) or (y >= x + z) or (z >= x + y)):
		x = "invalido"
		print("Tipo de triangulo: " , x)
	else:	
		if((x==y)and(y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:55:25) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x<0) and (y<0) and (z<0)):
	print("Tipo de triangulo: invalido")
else:
	if ((x >= y + z) or (y >= x + z) or (z >= x + y)):
		x = "invalido"
		print("Tipo de triangulo: " , x)
	else:	
		if((x==y)and(y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 20:55:32) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x<0) and (y<0) and (z<0)):
	print("Tipo de triangulo: invalido")
else:
	if ((x >= y + z) or (y >= x + z) or (z >= x + y)):
		x = "invalido"
		print("Tipo de triangulo: " , x)
	else:	
		if((x==y)and(y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
-- EXECUTION TIME:
0.159627
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 , 4.4 , 5.5
Tipo de triangulo:  escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 , 2.0 , 7.0
Tipo de triangulo:  invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:55:40) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x<0) and (y<0) and (z<0)):
	print("Tipo de triangulo: invalido")
else:
	if ((x >= y + z) or (y >= x + z) or (z >= x + y)):
		x = "invalido"
		print("Tipo de triangulo: " , x)
	else:	
		if((x==y)and(y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:56:22) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x<0) and (y<0) and (z<0)):
	print("Tipo de triangulo: invalido")
else:
	if ((x >= y + z) or (y >= x + z) or (z >= x + y)):
		x = "invalido"
		print("Tipo de triangulo: " , x)
	else:	
		if((x==y)and(y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 20:56:31) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x<0) and (y<0) and (z<0)):
	print("Tipo de triangulo: invalido")
else:
	if ((x >= y + z) or (y >= x + z) or (z >= x + y)):
		x = "invalido"
		print("Tipo de triangulo: " , x)
	else:	
		if((x==y)and(y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
-- EXECUTION TIME:
0.152524
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 , 4.4 , 5.5
Tipo de triangulo:  escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 , 2.0 , 7.0
Tipo de triangulo:  invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 20:56:52) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x<0) or (y<0) or (z<0)):
	print("Tipo de triangulo: invalido")
else:
	if ((x >= y + z) or (y >= x + z) or (z >= x + y)):
		x = "invalido"
		print("Tipo de triangulo: " , x)
	else:	
		if((x==y)and(y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
-- EXECUTION TIME:
0.141291
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 , 4.4 , 5.5
Tipo de triangulo:  escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 , 2.0 , 7.0
Tipo de triangulo:  invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:18:34) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x<=0) or (y<=0) or (z<=0)):
	print("Tipo de triangulo: invalido")
else:
	if ((x >= y + z) or (y >= x + z) or (z >= x + y)):
		x = "invalido"
		print("Tipo de triangulo: " , x)
	else:	
		if((x==y)and(y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:18:44) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x<=0) or (y<=0) or (z<=0)):
	print("Tipo de triangulo: invalido")
else:
	if ((x >= y + z) or (y >= x + z) or (z >= x + y)):
		x = "invalido"
		print("Tipo de triangulo: " , x)
	else:	
		if((x==y)and(y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:18:49) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x<=0) or (y<=0) or (z<=0)):
	print("Tipo de triangulo: invalido")
else:
	if ((x >= y + z) or (y >= x + z) or (z >= x + y)):
		x = "invalido"
		print("Tipo de triangulo: " , x)
	else:	
		if((x==y)and(y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:18:56) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x<=0) or (y<=0) or (z<=0)):
	print("Tipo de triangulo: invalido")
else:
	if ((x >= y + z) or (y >= x + z) or (z >= x + y)):
		x = "invalido"
		print("Tipo de triangulo: " , x)
	else:	
		if((x==y)and(y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:19:09) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x<=0) or (y<=0) or (z<=0)):
	print("Tipo de triangulo: invalido")
else:
	if ((x >= y + z) or (y >= x + z) or (z >= x + y)):
		x = "invalido"
		print("Tipo de triangulo: " , x)
	else:	
		if((x==y)and(y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
-- EXECUTION TIME:
0.213082
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 , 4.4 , 5.5
Tipo de triangulo:  escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 , 2.0 , 7.0
Tipo de triangulo:  invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:21:21) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x<0) or (y<0) or (z<0)):
	print("Tipo de triangulo: invalido")
else:
	if ((x >= y + z) or (y >= x + z) or (z >= x + y)):
		x = "invalido"
		print("Tipo de triangulo: " , x)
	else:	
		if((x==y)and(y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:21:29) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x<0) or (y<0) or (z<0)):
	print("Tipo de triangulo: invalido")
else:
	if ((x >= y + z) or (y >= x + z) or (z >= x + y)):
		x = "invalido"
		print("Tipo de triangulo: " , x)
	else:	
		if((x==y)and(y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:21:36) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x<0) or (y<0) or (z<0)):
	print("Tipo de triangulo: invalido")
else:
	if ((x >= y + z) or (y >= x + z) or (z >= x + y)):
		x = "invalido"
		print("Tipo de triangulo: " , x)
	else:	
		if((x==y)and(y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
-- EXECUTION TIME:
0.160106
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 , 4.4 , 5.5
Tipo de triangulo:  escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 , 2.0 , 7.0
Tipo de triangulo:  invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:22:03) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x<0) or (y<0) or (z<0)):
	print("Tipo de triangulo: invalido")
else:
	if ((x > y + z) or (y > x + z) or (z > x + y)):
		x = "invalido"
		print("Tipo de triangulo: " , x)
	else:	
		if((x==y)and(y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:22:10) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x<0) or (y<0) or (z<0)):
	print("Tipo de triangulo: invalido")
else:
	if ((x > y + z) or (y > x + z) or (z > x + y)):
		x = "invalido"
		print("Tipo de triangulo: " , x)
	else:	
		if((x==y)and(y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:22:30) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x<0) or (y<0) or (z<0)):
	print("Tipo de triangulo: invalido")
else:
	if ((x > y + z) or (y > x + z) or (z > x + y)):
		x = "invalido"
		print("Tipo de triangulo: " , x)
	else:	
		if((x==y)and(y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) and (z==y) and (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:22:36) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x<0) or (y<0) or (z<0)):
	print("Tipo de triangulo: invalido")
else:
	if ((x > y + z) or (y > x + z) or (z > x + y)):
		x = "invalido"
		print("Tipo de triangulo: " , x)
	else:	
		if((x==y)and(y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) and (z==y) and (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:22:53) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x<0) or (y<0) or (z<0)):
	print("Tipo de triangulo: invalido")
else:
	if ((x > y + z) or (y > x + z) or (z > x + y)):
		x = "invalido"
		print("Tipo de triangulo: " , x)
	else:	
		if((x==y)and(y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:23:42) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x<0) and (y<0) and (z<0)):
	print("Tipo de triangulo: invalido")
else:
	if ((x > y + z) or (y > x + z) or (z > x + y)):
		x = "invalido"
		print("Tipo de triangulo: " , x)
	else:	
		if((x==y)and(y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:24:11) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x<0) or (y<0) or (z<0)):
	print("Tipo de triangulo: invalido")
else:
	if ((x > y + z) or (y > x + z) or (z > x + y)):
		x = "invalido"
		print("Tipo de triangulo: " , x)
	else:	
		if((x==y)and(y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:24:56) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x<0) or (y<0) or (z<0)):
	print("Tipo de triangulo: invalido")
else:
	if ((x > y + z) and (y > x + z) and (z > x + y)):
		x = "invalido"
		print("Tipo de triangulo: " , x)
	else:	
		if((x==y)and(y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:25:45) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x<0) or (y<0) or (z<0)):
	print("Tipo de triangulo: invalido")
else:
	if ((x > y + z) and (y > x + z) and (z > x + y)):
		x = "invalido"
		print("Tipo de triangulo: " , x)
	else:	
		if((x==y)and(y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:27:40) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x<0) or (y<0) or (z<0)):
	print("Tipo de triangulo: invalido")
else:
	if ((x > y + z) or (y > x + z) or (z > x + y)):
		x = "invalido"
		print("Tipo de triangulo: " , x)
	else:	
		if((x==y) and (y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:28:13) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x<0) or (y<0) or (z<0)):
	print("Tipo de triangulo: invalido")
else:
	if ((x > y + z) or (y > x + z) or (z > x + y)):
		x = "invalido"
		print("Tipo de triangulo: " , x)
	else:	
		if((x==y) and (y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:28:57) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x<0) and (y<0) and (z<0)):
	print("Tipo de triangulo: invalido")
else:
	if ((x > y + z) or (y > x + z) or (z > x + y)):
		x = "invalido"
		print("Tipo de triangulo: " , x)
	else:	
		if((x==y) and (y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:30:05) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x<0) or (y<0) or (z<0)):
	print("Tipo de triangulo: invalido")
else:
	if ((x > y + z) or (y > x + z) or (z > x + y)):
		x = "invalido"
		print("Tipo de triangulo: " , x)
	else:	
		if((x==y) and (y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:30:30) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x<0) or (y<0) or (z<0)):
	print("Tipo de triangulo: invalido")
else:
	if ((x > y + z) and (y > x + z) and (z > x + y)):
		x = "invalido"
		print("Tipo de triangulo: " , x)
	else:	
		if((x==y) and (y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:33:00) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x>0) and (y>0) and (z>0)):
	if ((x > y + z) and (y > x + z) and (z > x + y)):
		x = "invalido"
		print("Tipo de triangulo: " , x)
	else:	
		if((x==y) and (y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
else:	
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:33:06) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x>0) and (y>0) and (z>0)):
	if ((x > y + z) and (y > x + z) and (z > x + y)):
		x = "invalido"
		print("Tipo de triangulo: " , x)
	else:	
		if((x==y) and (y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
else:	
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:34:40) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x>0) and (y>0) and (z>0)):
	if ((x > y + z) or (y > x + z) or (z > x + y)):
		x = "invalido"
		print("Tipo de triangulo: " , x)
	else:	
		if((x==y) and (y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
else:	
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:36:46) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x>0) and (y>0) and (z>0)):
	if ((x < y + z) or (y > x + z) or (z > x + y)):
		if((x==y) and (y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
	else:
		print("Tipo de triangulo: invalido")
				
else:	
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:37:15) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x>0) and (y>0) and (z>0)):
	if ((x < y + z) or (y < x + z) or (z < x + y)):
		if((x==y) and (y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
	else:
		print("Tipo de triangulo: invalido")
				
else:	
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:39:19) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x>0) and (y>0) and (z>0)):
	if ((x < y + z) and (y < x + z) and (z < x + y)):
		if((x==y) and (y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
	else:
		print("Tipo de triangulo: invalido")
				
else:	
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:39:24) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x>0) and (y>0) and (z>0)):
	if ((x < y + z) and (y < x + z) and (z < x + y)):
		if((x==y) and (y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
	else:
		print("Tipo de triangulo: invalido")
				
else:	
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.141826
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 , 4.4 , 5.5
Tipo de triangulo:  escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:39:31) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x>0) and (y>0) and (z>0)):
	if ((x < y + z) and (y < x + z) and (z < x + y)):
		if((x==y) and (y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
	else:
		print("Tipo de triangulo: invalido")
				
else:	
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:39:37) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x>0) and (y>0) and (z>0)):
	if ((x < y + z) and (y < x + z) and (z < x + y)):
		if((x==y) and (y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
	else:
		print("Tipo de triangulo: invalido")
				
else:	
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:39:45) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x>0) and (y>0) and (z>0)):
	if ((x < y + z) and (y < x + z) and (z < x + y)):
		if((x==y) and (y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
	else:
		print("Tipo de triangulo: invalido")
				
else:	
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:40:15) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x>0) and (y>0) and (z>0)):
	if ((x < y + z) and (y < x + z) and (z < x + y)):
		if((x==y) and (y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
	else:
		print("Tipo de triangulo: invalido")
				
else:	
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.177899
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 , 4.4 , 5.5
Tipo de triangulo:  escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:40:25) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x>0) and (y>0) and (z>0)):
	if ((x < y + z) and (y < x + z) and (z < x + y)):
		if((x==y) and (y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
	else:
		print("Tipo de triangulo: invalido")
				
else:	
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:40:42) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x>0) and (y>0) and (z>0)):
	if ((x < y + z) and (y < x + z) and (z < x + y)):
		if((x==y) and (y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
	else:
		print("Tipo de triangulo: invalido")
				
else:	
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:40:52) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x>0) and (y>0) and (z>0)):
	if ((x < y + z) and (y < x + z) and (z < x + y)):
		if((x==y) and (y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
	else:
		print("Tipo de triangulo: invalido")
				
else:	
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.206974
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 , 4.4 , 5.5
Tipo de triangulo:  escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:41:28) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x>0) and (y>0) and (z>0)):
	if ((x < y + z) and (y < x + z) and (z < x + y)):
		if((x==y) and (y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
	else:
		print("Tipo de triangulo: invalido")
				
else:	
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:41:35) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x>0) and (y>0) and (z>0)):
	if ((x < y + z) and (y < x + z) and (z < x + y)):
		if((x==y) and (y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
	else:
		print("Tipo de triangulo: invalido")
				
else:	
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.1195
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 , 4.4 , 5.5
Tipo de triangulo:  escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:41:40) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x>0) and (y>0) and (z>0)):
	if ((x < y + z) and (y < x + z) and (z < x + y)):
		if((x==y) and (y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
	else:
		print("Tipo de triangulo: invalido")
				
else:	
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:41:46) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x>0) and (y>0) and (z>0)):
	if ((x < y + z) and (y < x + z) and (z < x + y)):
		if((x==y) and (y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
	else:
		print("Tipo de triangulo: invalido")
				
else:	
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.178629
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 , 4.4 , 5.5
Tipo de triangulo:  escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:42:26) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x>0) and (y>0) and (z>0)):
	if ((x < y + z) and (y < x + z) and (z < x + y)):
		if((x==y) and (y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
	else:
		print("Tipo de triangulo: invalido")
				
else:	
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.207839
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 , 4.4 , 5.5
Tipo de triangulo:  escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:42:28) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x>0) and (y>0) and (z>0)):
	if ((x < y + z) and (y < x + z) and (z < x + y)):
		if((x==y) and (y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
	else:
		print("Tipo de triangulo: invalido")
				
else:	
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:42:45) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x>0) and (y>0) and (z>0)):
	if ((x < y + z) and (y < x + z) and (z < x + y)):
		if((x==y) and (y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
	else:
		print("Tipo de triangulo: invalido")
				
else:	
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:42:47) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x>0) and (y>0) and (z>0)):
	if ((x < y + z) and (y < x + z) and (z < x + y)):
		if((x==y) and (y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
	else:
		print("Tipo de triangulo: invalido")
				
else:	
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.199658
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 , 4.4 , 5.5
Tipo de triangulo:  escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:43:24) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x>0) and (y>0) and (z>0)):
	if ((x < y + z) and (y < x + z) and (z < x + y)):
		if((x==y) and (y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
	else:
		x = "invalido"
		print("Tipo de triangulo: ", x)
				
else:	
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:43:27) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x>0) and (y>0) and (z>0)):
	if ((x < y + z) and (y < x + z) and (z < x + y)):
		if((x==y) and (y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
	else:
		x = "invalido"
		print("Tipo de triangulo: ", x)
				
else:	
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.152856
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 , 4.4 , 5.5
Tipo de triangulo:  escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 , 2.0 , 7.0
Tipo de triangulo:  invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:44:15) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x>0) and (y>0) and (z>0)):
	if ((x < y + z) and (y < x + z) and (z < x + y)):
		if((x==y) and (y==z)):
			x = "equilatero"
			print("Tipo de triangulo: ", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo: ", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo: ", x)
	else:
		x = "invalido"
		print("Tipo de triangulo: ", x)
				
else:	
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo:  isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:45:23) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x>0) and (y>0) and (z>0)):
	if ((x < y + z) and (y < x + z) and (z < x + y)):
		if((x==y) and (y==z)):
			x = "equilatero"
			print("Tipo de triangulo:", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo:", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo:", x)
	else:
		x = "invalido"
		print("Tipo de triangulo:", x)
				
else:	
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:45:25) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x>0) and (y>0) and (z>0)):
	if ((x < y + z) and (y < x + z) and (z < x + y)):
		if((x==y) and (y==z)):
			x = "equilatero"
			print("Tipo de triangulo:", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo:", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo:", x)
	else:
		x = "invalido"
		print("Tipo de triangulo:", x)
				
else:	
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.177863
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:48:06) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x>0) and (y>0) and (z>0)):
	if (x < y + z and y < x + z and z < x + y):
		if(x==y and y==z):
			x = "equilatero"
			print("Tipo de triangulo:", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo:", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo:", x)
	else:
		x = "invalido"
		print("Tipo de triangulo:", x)
				
else:	
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:48:18) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x>0) and (y>0) and (z>0)):
	if (x < y + z and y < x + z and z < x + y):
		if(x==y and y==z):
			x = "equilatero"
			print("Tipo de triangulo:", x)
		else:
			if((x==y) or (z==y) or (z==x)):
				x = "isoceles"
				print("Tipo de triangulo:", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo:", x)
	else:
		x = "invalido"
		print("Tipo de triangulo:", x)
				
else:	
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.20422
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:50:42) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x>0) and (y>0) and (z>0)):
	if (x < y + z and y < x + z and z < x + y):
		if(x==y and y==z):
			x = "equilatero"
			print("Tipo de triangulo:", x)
		elif(x==y and y!=z or z==y and z!=x):
				x = "isoceles"
				print("Tipo de triangulo:", x)
			else:
				x = "escaleno"
				print("Tipo de triangulo:", x)
	else:
		x = "invalido"
		print("Tipo de triangulo:", x)
				
else:	
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 17
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:51:11) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x>0) and (y>0) and (z>0)):
	if (x < y + z and y < x + z and z < x + y):
		if(x==y and y==z):
			x = "equilatero"
			print("Tipo de triangulo:", x)
		elif(x==y and y!=z or z==y and z!=x):
				x = "isoceles"
				print("Tipo de triangulo:", x)
		elif:
			x = "escaleno"
			print("Tipo de triangulo:", x)
	else:
		x = "invalido"
		print("Tipo de triangulo:", x)
				
else:	
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 17
    elif:
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:51:18) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x>0) and (y>0) and (z>0)):
	if (x < y + z and y < x + z and z < x + y):
		if(x==y and y==z):
			x = "equilatero"
			print("Tipo de triangulo:", x)
		elif(x==y and y!=z or z==y and z!=x):
			x = "isoceles"
			print("Tipo de triangulo:", x)
		elif:
			x = "escaleno"
			print("Tipo de triangulo:", x)
	else:
		x = "invalido"
		print("Tipo de triangulo:", x)
				
else:	
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 17
    elif:
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:57:00) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x>0) and (y>0) and (z>0)):
	if (x < y + z and y < x + z and z < x + y):
		if(x==y and y==z):
			h = "equilatero"
			print("Tipo de triangulo:", h)
		elif(x==y and y!=z or z==y and z!=x):
			h = "isoceles"
			print("Tipo de triangulo:", h)
		elif:
			h = "escaleno"
			print("Tipo de triangulo:", h)
	else:
		h = "invalido"
		print("Tipo de triangulo:", h)			
else:	
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 17
    elif:
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:57:51) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x>0) and (y>0) and (z>0)):
	if (x < y + z and y < x + z and z < x + y):
		if(x==y and y==z):
			h = "equilatero"
			print("Tipo de triangulo:", h)
		elif(x==y and y!=z or z==y and z!=x):
			h = "isoceles"
			print("Tipo de triangulo:", h)
		elif (x!=y or y!=z or x!=z):
			h = "escaleno"
			print("Tipo de triangulo:", h)
	else:
		h = "invalido"
		print("Tipo de triangulo:", h)			
else:	
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:57:57) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x>0) and (y>0) and (z>0)):
	if (x < y + z and y < x + z and z < x + y):
		if(x==y and y==z):
			h = "equilatero"
			print("Tipo de triangulo:", h)
		elif(x==y and y!=z or z==y and z!=x):
			h = "isoceles"
			print("Tipo de triangulo:", h)
		elif (x!=y or y!=z or x!=z):
			h = "escaleno"
			print("Tipo de triangulo:", h)
	else:
		h = "invalido"
		print("Tipo de triangulo:", h)			
else:	
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.187851
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:58:03) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x>0) and (y>0) and (z>0)):
	if (x < y + z and y < x + z and z < x + y):
		if(x==y and y==z):
			h = "equilatero"
			print("Tipo de triangulo:", h)
		elif(x==y and y!=z or z==y and z!=x):
			h = "isoceles"
			print("Tipo de triangulo:", h)
		elif (x!=y or y!=z or x!=z):
			h = "escaleno"
			print("Tipo de triangulo:", h)
	else:
		h = "invalido"
		print("Tipo de triangulo:", h)			
else:	
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:58:18) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x>0) and (y>0) and (z>0)):
	if (x < y + z and y < x + z and z < x + y):
		if(x==y and y==z):
			h = "equilatero"
			print("Tipo de triangulo:", h)
		elif(x==y and y!=z or z==y and z!=x):
			h = "isoceles"
			print("Tipo de triangulo:", h)
		elif (x!=y or y!=z or x!=z):
			h = "escaleno"
			print("Tipo de triangulo:", h)
	else:
		h = "invalido"
		print("Tipo de triangulo:", h)			
else:	
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:58:32) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x>0) and (y>0) and (z>0)):
	if (x < y + z and y < x + z and z < x + y):
		if(x==y and y==z):
			h = "equilatero"
			print("Tipo de triangulo:", h)
		elif(x==y and y!=z or z==y and z!=x):
			h = "isoceles"
			print("Tipo de triangulo:", h)
		elif (x!=y or y!=z or x!=z):
			h = "escaleno"
			print("Tipo de triangulo:", h)
	else:
		h = "invalido"
		print("Tipo de triangulo:", h)			
else:	
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:58:40) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x>0) and (y>0) and (z>0)):
	if (x < y + z and y < x + z and z < x + y):
		if(x==y and y==z):
			h = "equilatero"
			print("Tipo de triangulo:", h)
		elif(x==y and y!=z or z==y and z!=x):
			h = "isoceles"
			print("Tipo de triangulo:", h)
		elif (x!=y or y!=z or x!=z):
			h = "escaleno"
			print("Tipo de triangulo:", h)
	else:
		h = "invalido"
		print("Tipo de triangulo:", h)			
else:	
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.189029
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:59:02) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x>0) and (y>0) and (z>0)):
	if (x < y + z and y < x + z and z < x + y):
		if(x==y and y==z):
			h = "equilatero"
			print("Tipo de triangulo:", h)
		elif(x==y and y!=z or z==y and z!=x):
			h = "isoceles"
			print("Tipo de triangulo:", h)
		elif (x!=y or y!=z or x!=z):
			h = "escaleno"
			print("Tipo de triangulo:", h)
	else:
		h = "invalido"
		print("Tipo de triangulo:", h)			
else:	
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:59:22) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x>0) and (y>0) and (z>0)):
	if (x < y + z and y < x + z and z < x + y):
		if(x==y and y==z):
			h = "equilatero"
			print("Tipo de triangulo:", h)
		elif(x==y and y!=z or z==y and z!=x):
			h = "isoceles"
			print("Tipo de triangulo:", h)
		elif (x!=y or y!=z or x!=z):
			h = "escaleno"
			print("Tipo de triangulo:", h)
	else:
		h = "invalido"
		print("Tipo de triangulo:", h)			
else:	
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:59:27) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x>0) and (y>0) and (z>0)):
	if (x < y + z and y < x + z and z < x + y):
		if(x==y and y==z):
			h = "equilatero"
			print("Tipo de triangulo:", h)
		elif(x==y and y!=z or z==y and z!=x):
			h = "isoceles"
			print("Tipo de triangulo:", h)
		elif (x!=y or y!=z or x!=z):
			h = "escaleno"
			print("Tipo de triangulo:", h)
	else:
		h = "invalido"
		print("Tipo de triangulo:", h)			
else:	
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:59:36) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x>0) and (y>0) and (z>0)):
	if (x < y + z and y < x + z and z < x + y):
		if(x==y and y==z):
			h = "equilatero"
			print("Tipo de triangulo:", h)
		elif(x==y and y!=z or z==y and z!=x):
			h = "isoceles"
			print("Tipo de triangulo:", h)
		elif (x!=y or y!=z or x!=z):
			h = "escaleno"
			print("Tipo de triangulo:", h)
	else:
		h = "invalido"
		print("Tipo de triangulo:", h)			
else:	
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:59:42) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x>0) and (y>0) and (z>0)):
	if (x < y + z and y < x + z and z < x + y):
		if(x==y and y==z):
			h = "equilatero"
			print("Tipo de triangulo:", h)
		elif(x==y and y!=z or z==y and z!=x):
			h = "isoceles"
			print("Tipo de triangulo:", h)
		elif (x!=y or y!=z or x!=z):
			h = "escaleno"
			print("Tipo de triangulo:", h)
	else:
		h = "invalido"
		print("Tipo de triangulo:", h)			
else:	
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.212814
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:59:50) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if ((x>0) and (y>0) and (z>0)):
	if (x < y + z and y < x + z and z < x + y):
		if(x==y and y==z):
			h = "equilatero"
			print("Tipo de triangulo:", h)
		elif(x==y and y!=z or z==y and z!=x):
			h = "isoceles"
			print("Tipo de triangulo:", h)
		elif (x!=y or y!=z or x!=z):
			h = "escaleno"
			print("Tipo de triangulo:", h)
	else:
		h = "invalido"
		print("Tipo de triangulo:", h)			
else:	
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:00:24) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if (x>0 and y>0 and z>0):
	if (x < y + z and y < x + z and z < x + y):
		if(x==y and y==z):
			h = "equilatero"
			print("Tipo de triangulo:", h)
		elif(x==y and y!=z or z==y and z!=x):
			h = "isoceles"
			print("Tipo de triangulo:", h)
		elif (x!=y or y!=z or x!=z):
			h = "escaleno"
			print("Tipo de triangulo:", h)
	else:
		h = "invalido"
		print("Tipo de triangulo:", h)			
else:	
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:00:35) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if (x>0 and y>0 and z>0):
	if (x < y + z and y < x + z and z < x + y):
		if(x==y and y==z):
			h = "equilatero"
			print("Tipo de triangulo:", h)
		elif(x==y and y!=z or z==y and z!=x):
			h = "isoceles"
			print("Tipo de triangulo:", h)
		elif (x!=y or y!=z or x!=z):
			h = "escaleno"
			print("Tipo de triangulo:", h)
	else:
		h = "invalido"
		print("Tipo de triangulo:", h)			
else:	
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.161606
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:01:08) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if (x>0 and y>0 and z>0):
	if (x < y + z and y < x + z and z < x + y):
		if(x==y and y==z):
			h = "equilatero"
			print("Tipo de triangulo:", h)
		elif(x==y and y!=z or z==y and z!=x):
			h = "isoceles"
			print("Tipo de triangulo:", h)
		elif (x!=y or y!=z or x!=z):
			h = "escaleno"
			print("Tipo de triangulo:", h)
	else:
		h = "invalido"
		print("Tipo de triangulo:", h)			
else:	
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:01:13) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if (x>0 and y>0 and z>0):
	if (x < y + z and y < x + z and z < x + y):
		if(x==y and y==z):
			h = "equilatero"
			print("Tipo de triangulo:", h)
		elif(x==y and y!=z or z==y and z!=x):
			h = "isoceles"
			print("Tipo de triangulo:", h)
		elif (x!=y or y!=z or x!=z):
			h = "escaleno"
			print("Tipo de triangulo:", h)
	else:
		h = "invalido"
		print("Tipo de triangulo:", h)			
else:	
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.137144
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:02:16) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if (x>0 and y>0 and z>0):
	if (x < y + z and y < x + z and z < x + y):
		if(x==y and y==z):
			h = "equilatero"
			print("Tipo de triangulo:", h)
		elif(x==y and y!=z or z==y and z!=x):
			h = "isoceles"
			print("Tipo de triangulo:", h)
		elif (x!=y or y!=z or x!=z):
			h = "escaleno"
			print("Tipo de triangulo:", h)
	else:
		h = "invalido"
		print("Tipo de triangulo:", h)			
else:	
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:02:21) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if (x>0 and y>0 and z>0):
	if (x < y + z and y < x + z and z < x + y):
		if(x==y and y==z):
			h = "equilatero"
			print("Tipo de triangulo:", h)
		elif(x==y and y!=z or z==y and z!=x):
			h = "isoceles"
			print("Tipo de triangulo:", h)
		elif (x!=y or y!=z or x!=z):
			h = "escaleno"
			print("Tipo de triangulo:", h)
	else:
		h = "invalido"
		print("Tipo de triangulo:", h)			
else:	
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.161823
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:03:37) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if (x>0 and y>0 and z>0):
	if (x < y + z and y < x + z and z < x + y):
		if(x==y and y==z):
			h = "equilatero"
			print("Tipo de triangulo:", h)
		elif(x==y and y!=z or z==y and z!=x):
			h = "isoceles"
			print("Tipo de triangulo:", h)
		else:
			h = "escaleno"
			print("Tipo de triangulo:", h)
	else:
		h = "invalido"
		print("Tipo de triangulo:", h)			
else:	
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:04:22) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if (x>0 and y>0 and z>0):
	if (x < y + z and y < x + z and z < x + y):
		if(x==y and y==z):
			h = "equilatero"
			print("Tipo de triangulo:", h)
		elif(x==y and y!=z or z==y and z!=x):
			h = "isoceles"
			print("Tipo de triangulo:", h)
		else:
			h = "escaleno"
			print("Tipo de triangulo:", h)
	else:
		h = "invalido"
		print("Tipo de triangulo:", h)			
else:	
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:04:27) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if (x>0 and y>0 and z>0):
	if (x < y + z and y < x + z and z < x + y):
		if(x==y and y==z):
			h = "equilatero"
			print("Tipo de triangulo:", h)
		elif(x==y and y!=z or z==y and z!=x):
			h = "isoceles"
			print("Tipo de triangulo:", h)
		else:
			h = "escaleno"
			print("Tipo de triangulo:", h)
	else:
		h = "invalido"
		print("Tipo de triangulo:", h)			
else:	
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.156315
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:05:05) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x = float(input("Lado1: "))
y = float(input("Lado2: "))
z = float(input("Lado3: "))

print("Entradas: " , x ,",", y ,",", z)

if (x>0 and y>0 and z>0):
	if (x < y + z and y < x + z and z < x + y):
		if(x==y and y==z):
			h = "equilatero"
			print("Tipo de triangulo:", h)
		elif(x==y and y!=z or z==y and z!=x):
			h = "isosceles"
			print("Tipo de triangulo:", h)
		else:
			h = "escaleno"
			print("Tipo de triangulo:", h)
	else:
		h = "invalido"
		print("Tipo de triangulo:", h)			
else:	
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.126787
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
