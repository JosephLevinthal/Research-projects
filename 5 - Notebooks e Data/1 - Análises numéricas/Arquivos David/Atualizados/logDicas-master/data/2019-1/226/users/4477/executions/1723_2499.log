== TEST (2019-05-14 10:11:01) 
-- CODE:
from math import *
# Entradas
k = int(input("Determine o número"))

soma = 0     # Acumulativa
i = 0        # Contadora

# Laço
while (i <= k-1):
	soma = soma + 1 + 1 / factorial (i)
	i = i + 1

print (soma)
-- OUTPUT:
9.718055555555555
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:11:20) 
-- CODE:
from math import *
# Entradas
k = int(input("Determine o numero: "))

soma = 0     # Acumulativa
i = 0        # Contadora

# Laço
while (i <= k-1):
	soma = soma + 1 + 1 / factorial (i)
	i = i + 1

print (soma)
-- OUTPUT:
9.718055555555555
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:11:54) 
-- CODE:
from math import *
# Entradas
k = int(input("Determine o numero: "))

soma = 0     # Acumulativa
i = 0        # Contadora

# Laço
while (i <= k-1):
	soma = soma + 1 + 1 / factorial (i)
	i = i + 1

print(round(soma, 8)
-- ERROR:
File "XXXX", line 14
    
                        ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:12:01) 
-- CODE:
from math import *
# Entradas
k = int(input("Determine o numero: "))

soma = 0     # Acumulativa
i = 0        # Contadora

# Laço
while (i <= k-1):
	soma = soma + 1 + 1 / factorial (i)
	i = i + 1

print(round(soma, 8))
-- OUTPUT:
9.71805556
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:12:20) 
-- CODE:
from math import *
# Entradas
k = int(input("Determine o numero: "))

soma = 0     # Acumulativa
i = 0        # Contadora

# Laço
while (i <= k-1):
	soma = soma + 1 / factorial (i)
	i = i + 1

print(round(soma, 8))
-- OUTPUT:
2.71805556
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 10:12:26) 
-- CODE:
from math import *
# Entradas
k = int(input("Determine o numero: "))

soma = 0     # Acumulativa
i = 0        # Contadora

# Laço
while (i <= k-1):
	soma = soma + 1 / factorial (i)
	i = i + 1

print(round(soma, 8))
-- EXECUTION TIME:
0.123729
-- TEST CASE 1:
---- input:
7
---- correct output:
2.71805556
---- user output:
2.71805556
-- TEST CASE 2:
---- input:
15
---- correct output:
2.71828183
---- user output:
2.71828183
-- TEST CASE 3:
---- input:
6
---- correct output:
2.71666667
---- user output:
2.71666667
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
