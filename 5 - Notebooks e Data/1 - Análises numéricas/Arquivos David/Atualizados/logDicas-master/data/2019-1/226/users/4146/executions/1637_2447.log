== TEST (2019-04-09 10:36:22) 
-- CODE:
preco = float(input("Preco: "))
paga = float(input("Pagamento: "))

if (paga >= preco):
	volta = paga - preco
	mensagem = "Troco de " + volta
else:
	deve = preco - paga
	mensagem = "Falta " + deve
	
print(round(mensagem, 2))

	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    mensagem = "Falta " + deve
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:37:23) 
-- CODE:
preco = float(input("Preco: "))
paga = float(input("Pagamento: "))

if (paga >= preco):
	volta = paga - preco
	mensagem = "Troco de " + volta
else:
	deve = preco - paga
	mensagem = "Falta " + deve
	
print(round(mensagem, 2))

	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    mensagem = "Falta " + deve
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:37:38) 
-- CODE:
preco = float(input("Preco: "))
paga = float(input("Pagamento: "))

if (paga >= preco):
	volta = paga - preco
	mensagem = "Troco de " + volta
else:
	deve = preco - paga
	mensagem = "Falta " + deve
	
print(round(mensagem, 2))

	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    mensagem = "Falta " + deve
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:39:12) 
-- CODE:
preco = float(input("Preco: "))
paga = float(input("Pagamento: "))

if (paga >= preco):
	volta = paga - preco
	mensagem = "Troco de " + volta
else:
	deve = preco - paga
	mensagem = "Falta " + deve
	
print(round(mensagem, 2))

	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    mensagem = "Falta " + deve
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:42:06) 
-- CODE:
preco = float(input("Preco: "))
paga = float(input("Pagamento: "))

if (paga >= preco):
	volta = paga - preco
	mensagem = "Troco de " + volta
else:
	deve = preco - paga
	mensagem = "Falta " + deve
	
print(round(mensagem, 2))

	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    mensagem = "Falta " + deve
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:42:30) 
-- CODE:
preco = float(input("Preco: "))
paga = float(input("Pagamento: "))

if (paga >= preco):
	volta = paga - preco
	mensagem = "Troco de ", volta
else:
	deve = preco - paga
	mensagem = "Falta ", deve
	
print(round(mensagem, 2))

	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(round(mensagem, 2))
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:43:30) 
-- CODE:
preco = float(input("Preco: "))
paga = float(input("Pagamento: "))

if (paga >= preco):
	Y = paga - preco
	mensagem = "Troco de " + Y
else:
	X = preco - paga
	mensagem = "Falta " + X
	
print(round(mensagem, 2))

	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    mensagem = "Falta " + X
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:43:41) 
-- CODE:
preco = float(input("Preco: "))
paga = float(input("Pagamento: "))

if (paga >= preco):
	Y = paga - preco
	mensagem = "Troco de " + Y
else:
	X = preco - paga
	mensagem = "Falta " + X
	
print(round(mensagem, 2))

	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    mensagem = "Falta " + X
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:44:52) 
-- CODE:
preco = int(input("Preco: "))
paga = int(input("Pagamento: "))

if (paga >= preco):
	Y = paga - preco
	mensagem = "Troco de " + Y
else:
	X = preco - paga
	mensagem = "Falta " + X
	
print(float(round(mensagem, 2)))

	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    preco = int(input())
ValueError: invalid literal for int() with base 10: '38.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:44:58) 
-- CODE:
preco = int(input("Preco: "))
paga = int(input("Pagamento: "))

if (paga >= preco):
	Y = paga - preco
	mensagem = "Troco de " + Y
else:
	X = preco - paga
	mensagem = "Falta " + X
	
print(float(round(mensagem, 2)))

	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    preco = int(input())
ValueError: invalid literal for int() with base 10: '38.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:45:07) 
-- CODE:
preco = int(input("Preco: "))
paga = int(input("Pagamento: "))

if (paga >= preco):
	Y = paga - preco
	mensagem = "Troco de " + Y
else:
	X = preco - paga
	mensagem = "Falta " + X
	
print(float(round(mensagem, 2)))

	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    preco = int(input())
ValueError: invalid literal for int() with base 10: '38.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:45:27) 
-- CODE:
preco = float(input("Preco: "))
paga = float(input("Pagamento: "))

if (paga >= preco):
	Y = paga - preco
	mensagem = "Troco de " + Y
else:
	X = preco - paga
	mensagem = "Falta " + X
	
print(round(mensagem, 2))

	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    mensagem = "Falta " + X
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:46:06) 
-- CODE:
preco = float(input("Preco: "))
paga = float(input("Pagamento: "))

if (paga >= preco):
	Y = paga - preco
	mensagem = "Troco de " + Y
else:
	X = preco - paga
	mensagem = "Falta " + X
	
print(round(mensagem, 2))

	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    mensagem = "Falta " + X
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:48:08) 
-- CODE:
preco = float(input("Preco: "))
paga = float(input("Pagamento: "))

if (paga >= preco):
	Y = paga - preco
	print("Troco de ", round(Y, 2))
else:
	X = preco - paga
	print("Falta ", round(X, 2))
	


	
-- EXECUTION TIME:
0.158836
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta  26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de  28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de  0.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:48:23) 
-- CODE:
preco = float(input("Preco: "))
paga = float(input("Pagamento: "))

if (paga >= preco):
	Y = paga - preco
	print("Troco de ", round(Y, 2))
else:
	X = preco - paga
	print("Falta ", round(X, 2))
	


	
-- OUTPUT:
Falta  26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:48:31) 
-- CODE:
preco = float(input("Preco: "))
paga = float(input("Pagamento: "))

if (paga >= preco):
	Y = paga - preco
	print("Troco de ", round(Y, 2))
else:
	X = preco - paga
	print("Falta ", round(X, 2))
	


	
-- EXECUTION TIME:
0.144583
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta  26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de  28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de  0.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
