== TEST (2019-03-28 10:24:40) 
-- CODE:
a = float(input("Digite a coordenada x1: "))
b = float(input("Digite a coordenada x2: "))
c = float(input("Digite a coordenada y1: "))
d = float(input("Digite a coordenada y2: "))
pmx = round((a + b) / 2), 1
pmy = round((c + d) / 2), 1
print(pmx, pmy)
-- OUTPUT:
(38, 1) (39, 1)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:26:56) 
-- CODE:
a = float(input("Digite a coordenada x1: "))
b = float(input("Digite a coordenada x2: "))
c = float(input("Digite a coordenada y1: "))
d = float(input("Digite a coordenada y2: "))
pmx = (round((a + b) / 2), 1)
pmy = (round((c + d) / 2), 1)
print(pmx, pmy)
-- OUTPUT:
(38, 1) (39, 1)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:29:23) 
-- CODE:
a = float(input("Digite a coordenada x1: "))
b = float(input("Digite a coordenada x2: "))
c = float(input("Digite a coordenada y1: "))
d = float(input("Digite a coordenada y2: "))
pmx = (b + a) / 2
pmy = (d + c) / 2
print(round((pmx, pmy), 1))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(round((pmx, pmy), 1))
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:31:48) 
-- CODE:
a = float(input("Digite a coordenada x1: "))
b = float(input("Digite a coordenada x2: "))
c = float(input("Digite a coordenada y1: "))
d = float(input("Digite a coordenada y2: "))
pmx = (round((b + a) / 2), 1)
pmy = (round((d + c) / 2), 1)
print(pmx, pmy)
-- OUTPUT:
(38, 1) (39, 1)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:32:16) 
-- CODE:
a = float(input("Digite a coordenada x1: "))
b = float(input("Digite a coordenada x2: "))
c = float(input("Digite a coordenada y1: "))
d = float(input("Digite a coordenada y2: "))
pmx = ((b + a) / 2)
pmy = (d + c) / 2)
print(pmx, pmy)
-- ERROR:
File "XXXX", line 6
    pmy = (d + c) / 2)
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:32:31) 
-- CODE:
a = float(input("Digite a coordenada x1: "))
b = float(input("Digite a coordenada x2: "))
c = float(input("Digite a coordenada y1: "))
d = float(input("Digite a coordenada y2: "))
pmx = (b + a) / 2
pmy = (d + c) / 2
print(pmx, pmy)
-- OUTPUT:
37.5 39.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:33:11) 
-- CODE:
a = float(input("Digite a coordenada x1: "))
b = float(input("Digite a coordenada x2: "))
c = float(input("Digite a coordenada y1: "))
d = float(input("Digite a coordenada y2: "))
pmx = (b + a) / 2
pmy = (d + c) / 2
print(pmx,"," pmy)
-- ERROR:
File "XXXX", line 7
    print(pmx,"," pmy)
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:34:12) 
-- CODE:
a = float(input("Digite a coordenada x1: "))
b = float(input("Digite a coordenada x2: "))
c = float(input("Digite a coordenada y1: "))
d = float(input("Digite a coordenada y2: "))
pmx = (b + a) / 2
pmy = (d + c) / 2
print(pmx","pmy)
-- ERROR:
File "XXXX", line 7
    print(pmx","pmy)
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:34:17) 
-- CODE:
a = float(input("Digite a coordenada x1: "))
b = float(input("Digite a coordenada x2: "))
c = float(input("Digite a coordenada y1: "))
d = float(input("Digite a coordenada y2: "))
pmx = (b + a) / 2
pmy = (d + c) / 2
print(pmx "," pmy)
-- ERROR:
File "XXXX", line 7
    print(pmx "," pmy)
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:34:25) 
-- CODE:
a = float(input("Digite a coordenada x1: "))
b = float(input("Digite a coordenada x2: "))
c = float(input("Digite a coordenada y1: "))
d = float(input("Digite a coordenada y2: "))
pmx = (b + a) / 2
pmy = (d + c) / 2
print(pmx , pmy)
-- OUTPUT:
37.5 39.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:37:39) 
-- CODE:
a = float(input("Digite a coordenada x1: "))
b = float(input("Digite a coordenada x2: "))
c = float(input("Digite a coordenada y1: "))
d = float(input("Digite a coordenada y2: "))
pmx = (b + a) / 2
pmy = (d + c) / 2
print(round(pmx))
print(round(pmy))
-- OUTPUT:
38
39
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:38:15) 
-- CODE:
a = float(input("Digite a coordenada x1: "))
b = float(input("Digite a coordenada x2: "))
c = float(input("Digite a coordenada y1: "))
d = float(input("Digite a coordenada y2: "))
pmx = (b + a) / 2
pmy = (d + c) / 2
print(round(pmx, 1))
print(round(pmy, 1))
-- OUTPUT:
37.5
39.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:38:33) 
-- CODE:
a = float(input("Digite a coordenada x1: "))
b = float(input("Digite a coordenada x2: "))
c = float(input("Digite a coordenada y1: "))
d = float(input("Digite a coordenada y2: "))
pmx = (b + a) / 2
pmy = (d + c) / 2
print(round(pmx, 1))
print(round(pmy, 1))
-- OUTPUT:
37.5
39.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 10:38:35) 
-- CODE:
a = float(input("Digite a coordenada x1: "))
b = float(input("Digite a coordenada x2: "))
c = float(input("Digite a coordenada y1: "))
d = float(input("Digite a coordenada y2: "))
pmx = (b + a) / 2
pmy = (d + c) / 2
print(round(pmx, 1))
print(round(pmy, 1))
-- EXECUTION TIME:
0.196058
-- TEST CASE 1:
---- input:
50
25
30
48
---- correct output:
40.0
36.5
---- user output:
37.5
39.0
-- TEST CASE 2:
---- input:
2.5
3.0
5.0
1.8
---- correct output:
3.8
2.4
---- user output:
2.8
3.4
-- TEST CASE 3:
---- input:
1.22
2.33
3.44
4.55
---- correct output:
2.3
3.4
---- user output:
1.8
4.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:41:12) 
-- CODE:
a = float(input("Digite a coordenada x1: "))
b = float(input("Digite a coordenada x2: "))
c = float(input("Digite a coordenada y1: "))
d = float(input("Digite a coordenada y2: "))
pmx = (a + b) / 2
pmy = (d + c) / 2
print(round(pmx, 1))
print(round(pmy, 1))
-- OUTPUT:
37.5
39.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 10:43:07) 
-- CODE:
a = float(input("Digite a coordenada x1: "))
b = float(input("Digite a coordenada x2: "))
c = float(input("Digite a coordenada y1: "))
d = float(input("Digite a coordenada y2: "))
pmx = (b + a) / 2
pmy = (d + c) / 2
print(round(pmx, 1))
print(round(pmy, 1))
-- EXECUTION TIME:
0.166885
-- TEST CASE 1:
---- input:
50
25
30
48
---- correct output:
40.0
36.5
---- user output:
37.5
39.0
-- TEST CASE 2:
---- input:
2.5
3.0
5.0
1.8
---- correct output:
3.8
2.4
---- user output:
37.5
39.0
-- TEST CASE 3:
---- input:
1.22
2.33
3.44
4.55
---- correct output:
2.3
3.4
---- user output:
2.8
3.4
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 10:43:07) 
-- CODE:
a = float(input("Digite a coordenada x1: "))
b = float(input("Digite a coordenada x2: "))
c = float(input("Digite a coordenada y1: "))
d = float(input("Digite a coordenada y2: "))
pmx = (b + a) / 2
pmy = (d + c) / 2
print(round(pmx, 1))
print(round(pmy, 1))
-- EXECUTION TIME:
0.165648
-- TEST CASE 1:
---- input:
50
25
30
48
---- correct output:
40.0
36.5
---- user output:
37.5
39.0
-- TEST CASE 2:
---- input:
2.5
3.0
5.0
1.8
---- correct output:
3.8
2.4
---- user output:
2.8
3.4
-- TEST CASE 3:
---- input:
1.22
2.33
3.44
4.55
---- correct output:
2.3
3.4
---- user output:
1.8
4.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:43:23) 
-- CODE:
a = float(input("Digite a coordenada x1: "))
c = float(input("Digite a coordenada x2: "))
b = float(input("Digite a coordenada y1: "))
d = float(input("Digite a coordenada y2: "))
pmx = (b + a) / 2
pmy = (d + c) / 2
print(round(pmx, 1))
print(round(pmy, 1))
-- OUTPUT:
40.0
36.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 10:43:32) 
-- CODE:
a = float(input("Digite a coordenada x1: "))
c = float(input("Digite a coordenada x2: "))
b = float(input("Digite a coordenada y1: "))
d = float(input("Digite a coordenada y2: "))
pmx = (b + a) / 2
pmy = (d + c) / 2
print(round(pmx, 1))
print(round(pmy, 1))
-- EXECUTION TIME:
0.202388
-- TEST CASE 1:
---- input:
50
25
30
48
---- correct output:
40.0
36.5
---- user output:
40.0
36.5
-- TEST CASE 2:
---- input:
2.5
3.0
5.0
1.8
---- correct output:
3.8
2.4
---- user output:
3.8
2.4
-- TEST CASE 3:
---- input:
1.22
2.33
3.44
4.55
---- correct output:
2.3
3.4
---- user output:
2.3
3.4
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
