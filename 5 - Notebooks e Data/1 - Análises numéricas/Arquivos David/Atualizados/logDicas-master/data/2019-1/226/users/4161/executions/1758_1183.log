== TEST (2019-05-23 11:09:57) 
-- CODE:
from numpy import*
v = array(eval(input("vetor: ")))
t = 0
a = 0
n = size(v)
v1 = zeros(n, dtype=int)
while (t < n):
	if v[t]<0:
		a = a + 1
	else:
		v1[t] = v[t]
print(v1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 11:10:17) 
-- CODE:
from numpy import*
v = array(eval(input("vetor: ")))
t = 0
a = 0
n = size(v)
v1 = zeros(n, dtype=int)
while (t < n):
	if v[t]<0:
		a = a + 1
	else:
		v1[t] = v[t]
print(v1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 11:10:29) 
-- CODE:
from numpy import*
v = array(eval(input("vetor: ")))
t = 0
a = 0
n = size(v)
v1 = zeros(n, dtype=int)
while (t < n):
	if v[t]<0:
		a = a + 1
	else:
		v1[t] = v[t]
	t = t+1
print(v1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 11:12:02) 
-- CODE:
from numpy import*
v = array(eval(input("vetor: ")))
t = 0
a = 0
n = size(v)
while (t < n):
	if v[t]<0:
		a = a + 1
v1 = zeros(n-a, dtype=int)
while (t < n):
	if v[t]<0:
		a = a + 1
	else:
		v1[t] = v[t]
	t = t+1
print(v1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 11:12:18) 
-- CODE:
from numpy import*
v = array(eval(input("vetor: ")))
t = 0
a = 0
n = size(v)
while (t < n):
	if v[t]<0:
		a = a + 1
v1 = zeros(n-a, dtype=int)
while (t < n):
	if v[t]<0:
		a = a + 1
	else:
		v1[t] = v[t]
	t = t+1
print(v1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 11:12:35) 
-- CODE:
from numpy import*
v = array(eval(input("vetor: ")))
t = 0
a = 0
n = size(v)
while (t < n):
	if v[t]<0:
		a = a + 1
	t = t + 1
v1 = zeros(n-a, dtype=int)
t = 0
while (t < n):
	if v[t]<0:
		a = a + 1
	else:
		v1[t] = v[t]
	t = t+1
print(v1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 11:13:02) 
-- CODE:
from numpy import*
v = array(eval(input("vetor: ")))
t = 0
a = 0
n = size(v)
while (t < n):
	if v[t]<0:
		a = a + 1
	t = t + 1
v1 = zeros(n-a, dtype=int)
t = 0
while (t < n):
	if v[t]<0:
		a = a + 1
	else:
		v1[t] = v[t]
	t = t+1
print(v1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 11:15:25) 
-- CODE:
from numpy import*
v = array(eval(input("vetor: ")))
t = 0
a = 0
n = size(v)
while (t < n):
	if v[t]<0:
		a = a + 1
	t = t + 1
v1 = zeros(n-a, dtype=int)
t = 0
i = 0
while (t < n):
	if v[t]>=0:
		v1[i] = v[t]
		i = i + 1
		t = t + 1
	else:
		t = t+1
print(v1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-23 11:15:45) 
-- CODE:
from numpy import*
v = array(eval(input("vetor: ")))
t = 0
a = 0
n = size(v)
while (t < n):
	if v[t]<0:
		a = a + 1
	t = t + 1
v1 = zeros(n-a, dtype=int)
t = 0
i = 0
while (t < n):
	if v[t]>=0:
		v1[i] = v[t]
		i = i + 1
		t = t + 1
	else:
		t = t+1
print(v1)
-- EXECUTION TIME:
0.374627
-- TEST CASE 1:
---- input:
[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,1]
---- correct output:
[1]
---- user output:
[1]
-- TEST CASE 2:
---- input:
[2,-1,3,-4,5]
---- correct output:
[2 3 5]
---- user output:
[2 3 5]
-- TEST CASE 3:
---- input:
[-1,18,32,14,25,-6]
---- correct output:
[18 32 14 25]
---- user output:
[18 32 14 25]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
