== TEST (2019-04-11 10:26:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("digite a vo: "))
a = radians(float(input("digite a: "))
dH = float(input("digite a dH: "))
g = 9.8
r = ((vo**2) * (sin(2a))/g)
if (abs(r)==20):
				print("sim")

-- ERROR:
File "XXXX", line 7
    dH = float(input())
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:27:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("digite a vo: "))
a = radians(float(input("digite a: "))
dh = float(input("digite a dH: "))
g = 9.8
r = ((vo**2) * (sin(2a))/g)
if (abs(r)==20):
				print("sim")

-- ERROR:
File "XXXX", line 7
    dh = float(input())
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:27:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("digite a vo: "))
a = radians(float(input("digite a: "))
dh = float(input("digite a dH: "))
g = 9.8
r = ((vo**2) * (sin(2a))/g)
if (abs(r)==20):
				print("sim")

-- ERROR:
File "XXXX", line 7
    dh = float(input())
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:27:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("digite a vo: "))
a = radians(float(input("digite a: "))
d = float(input("digite a dH: "))
g = 9.8
r = ((vo**2) * (sin(2a))/g)
if (abs(r)==20):
				print("sim")

-- ERROR:
File "XXXX", line 7
    d = float(input())
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:27:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("digite a vo: "))
a = radians(float(input("digite a: "))
d = float(input("digite a dH: "))
g = 9.8
r = ((vo**2) * (sin(2a))/g)
if (abs(r)==20):
				print("sim")

-- ERROR:
File "XXXX", line 7
    d = float(input())
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:28:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("digite a vo: "))
a = radians(float(input("digite a: "))
#d = float(input("digite a dH: "))
g = 9.8
r = ((vo**2) * (sin(2a))/g)
if (abs(r)==20):
				print("sim")

-- ERROR:
File "XXXX", line 8
    g = 9.8
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:28:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("digite a vo: "))
a = radians(float(input("digite a: "))
#d = float(input("digite a dH: "))
#g = 9.8
r = ((vo**2) * (sin(2a))/g)
if (abs(r)==20):
				print("sim")

-- ERROR:
File "XXXX", line 9
    r = ((vo**2) * (sin(2a))/g)
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:28:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("digite a vo: "))
a = radians(float(input("digite a: "))
#d = float(input("digite a dH: "))
#g = 9.8
#r = ((vo**2) * (sin(2a))/g)
#if (abs(r)==20):
				print("sim")

-- ERROR:
File "XXXX", line 11
    print("sim")
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:28:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("digite a vo: "))
a = radians(float(input("digite a: "))
#d = float(input("digite a dH: "))
#g = 9.8
#r = ((vo**2) * (sin(2a))/g)
#if (abs(r)==20):
#				print("sim")

-- ERROR:
File "XXXX", line 12
    
                     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:28:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("digite a vo: "))
a = radians(float(input("digite a: "))
#d = float(input("digite a dH: "))
#g = 9.8
#r = ((vo**2) * (sin(2a))/g)
#if (abs(r)==20):
#				print("sim")
-- ERROR:
File "XXXX", line 12
    
                     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:29:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("digite a vo: "))
a = radians(float(input("digite a: "))

-- ERROR:
File "XXXX", line 7
    
                              ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:29:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("digite a vo: "))
a = radians(float(input("digite a: "))
-- ERROR:
File "XXXX", line 7
    
                              ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:29:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("digite a vo: "))
#a = radians(float(input("digite a: "))
#d = float(input("digite a dH: "))
#g = 9.8
#r = ((vo**2) * (sin(2a))/g)
#if (abs(r)==20):
#				print("sim")
-- ERROR:
File "XXXX", line 7
    
                              ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:29:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import radians
vo = float(input("digite a vo: "))
#a = radians(float(input("digite a: "))
#d = float(input("digite a dH: "))
#g = 9.8
#r = ((vo**2) * (sin(2a))/g)
#if (abs(r)==20):
#				print("sim")
-- ERROR:
File "XXXX", line 7
    
                              ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:30:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import radians
vo = float(input("digite a vo: "))
a = radians(float(input("digite a: "))
d = float(input("digite a dH: "))
g = 9.8
r = ((vo**2) * (sin(2a))/g)
if (abs(r)==20):
				print("sim")
-- ERROR:
File "XXXX", line 7
    d = float(input())
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:30:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import radians
vo = float(input("digite a vo: "))
a = radians(float(input("digite a: "))
d = float(input("digite a dH: "))
g = 9.8
r = ((vo**2) * (sin(2a))/g)
if (abs(r)==20):
				print("sim")
-- ERROR:
File "XXXX", line 7
    d = float(input())
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:31:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import radians
vo = float(input("digite a vo: "))
a = radians(float(input("digite a: "))
x = float(input("digite a dH: "))
g = 9.8
r = ((vo**2) * (sin(2a))/g)
if (abs(r)==20):
				print("sim")
-- ERROR:
File "XXXX", line 7
    x = float(input())
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:31:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import radians
vo = float(input("digite a vo: "))
a = radians(float(input("digite a: "))
d = float(input("digite a dH: "))
g = 9.8
r = ((vo**2) * (sin(2*a))/g)
if (abs(d-r)==20):
				print("sim")
else:
				print(nao)
-- ERROR:
File "XXXX", line 7
    d = float(input())
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:33:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
vo = float(input("digite a vo: "))
a = radians(float(input("digite a: "))
d = float(input("digite a dH: "))
g = 9.8
r = ((vo**2) * (sin(2*a))/g)
if (abs(d-r)==20):
				print("sim")
else:
				print(nao)
-- ERROR:
File "XXXX", line 7
    d = float(input())
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:34:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
vo = float(input("digite a vo: "))
a1= radians(float(input("digite a: "))
d = float(input("digite a dH: "))
g = 9.8
a = radians(a1)
r = ((vo**2) * (sin(2*a))/g)
if (abs(d-r) <= 0.1):
				print("sim")
else:
				print("nao")
-- ERROR:
File "XXXX", line 7
    d = float(input())
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:34:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
vo = float(input("digite a vo: "))
a1= radians(float(input("digite a: ")))
d = float(input("digite a dH: "))
g = 9.8
a = radians(a1)
r = ((vo**2) * (sin(2*a))/g)
if (abs(d-r) <= 0.1):
				print("sim")
else:
				print("nao")
-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:34:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
vo = float(input("digite a vo: "))
a1= radians(float(input("digite a: ")))
d = float(input("digite a dH: "))
g = 9.8
a = radians(a1)
r = ((vo**2) * (sin(2*a))/g)
if (abs(d-r) <= 0.1):
				print("sim")
else:
				print("nao")
-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:36:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
vo = float(input("digite a vo: "))
a1= radians(float(input("digite a: ")))
d = float(input("digite a dH: "))
g = 9.8
a = radians(a1)
r = ((vo**2) * (sin(2*a))/g)
if (abs(d-r) <= 0.1):
	print("sim")
else:
	print("nao")
-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 10:36:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
vo = float(input("digite a vo: "))
a1= radians(float(input("digite a: ")))
d = float(input("digite a dH: "))
g = 9.8
a = radians(a1)
r = ((vo**2) * (sin(2*a))/g)
if (abs(d-r) <= 0.1):
	print("sim")
else:
	print("nao")
-- EXECUTION TIME:
0.238851
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:36:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
vo = float(input("digite a vo: "))
a1= radians(float(input("digite a: ")))
d = float(input("digite a dH: "))
g = 9.8
a = radians(a1)
r = ((vo**2) * (sin(2*a))/g)
if (abs(d-r)<= 0.1):
	print("sim")
else:
	print("nao")
-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:37:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
vo = float(input("digite a vo: "))
a1= radians(float(input("digite a: ")))
d = float(input("digite a dH: "))
g = 9.8
a = radians(a1)
r = ((vo**2) * (sin(2*a))/g)
if abs(d -r)<=0.1:
	print("sim")
else:
	print("nao")
-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 10:37:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
vo = float(input("digite a vo: "))
a1= radians(float(input("digite a: ")))
d = float(input("digite a dH: "))
g = 9.8
a = radians(a1)
r = ((vo**2) * (sin(2*a))/g)
if abs(d -r)<=0.1:
	print("sim")
else:
	print("nao")
-- EXECUTION TIME:
0.211044
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:39:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
vo = float(input("digite a vo: "))
a1= radians(float(input("digite a: ")))
d = float(input("digite a dH: "))
g = 9.8
a = radians(a1)
r = ((vo**2) * (sin(2*a))/g)
if (abs(d-r)<=0.1):
	print("sim")
else:
	print("nao")
-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 10:39:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
vo = float(input("digite a vo: "))
a1= radians(float(input("digite a: ")))
d = float(input("digite a dH: "))
g = 9.8
a = radians(a1)
r = ((vo**2) * (sin(2*a))/g)
if (abs(d-r)<=0.1):
	print("sim")
else:
	print("nao")
-- EXECUTION TIME:
0.149351
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:39:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
vo = float(input("digite a vo: "))
a1= (float(input("digite a: ")))
d = float(input("digite a dH: "))
g = 9.8
a = radians(a1)
r = ((vo**2) * (sin(2*a))/g)
if (abs(d-r)<=0.1):
	print("sim")
else:
	print("nao")
-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 10:39:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
vo = float(input("digite a vo: "))
a1= (float(input("digite a: ")))
d = float(input("digite a dH: "))
g = 9.8
a = radians(a1)
r = ((vo**2) * (sin(2*a))/g)
if (abs(d-r)<=0.1):
	print("sim")
else:
	print("nao")
-- EXECUTION TIME:
0.190657
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
