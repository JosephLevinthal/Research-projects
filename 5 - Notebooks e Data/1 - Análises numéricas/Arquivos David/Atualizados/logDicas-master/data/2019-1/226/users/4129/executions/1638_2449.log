== TEST (2019-04-04 19:00:24) 
-- CODE:
from math import*
a = float(input("Coeficiente a:"))
b = float(input("Coeficiente b:"))
c = float(input("Coeficiente c:"))
d = float(input("Coeficiente d:"))
e = float(input("Coeficiente e:"))
f = float(input("Coeficiente f:"))
x = (c*e-b*f)/(a*e-b*d)
y = (a*f-c*d)/(a*e-b*d)
cond1 = a*e-b*d != 0      #Condição 
if (cond1):
	print(x)
	print(y)
else:
	print("Nao tem solucao")



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    x = (c*e-b*f)/(a*e-b*d)
ZeroDivisionError: float division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 19:01:00) 
-- CODE:
from math import*
a = float(input("Coeficiente a:"))
b = float(input("Coeficiente b:"))
c = float(input("Coeficiente c:"))
d = float(input("Coeficiente d:"))
e = float(input("Coeficiente e:"))
f = float(input("Coeficiente f:"))
x = (c*e-b*f)/(a*e-b*d)
y = (a*f-c*d)/(a*e-b*d)
cond1 = a*e-b*d != 0      #Condição 
if (cond1):
	print(x)
	print(y)
else:
	print("Nao tem solucao")



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    x = (c*e-b*f)/(a*e-b*d)
ZeroDivisionError: float division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 19:03:44) 
-- CODE:
from math import*
a = float(input("Coeficiente a:"))
b = float(input("Coeficiente b:"))
c = float(input("Coeficiente c:"))
d = float(input("Coeficiente d:"))
e = float(input("Coeficiente e:"))
f = float(input("Coeficiente f:"))

if(cond1 = a*e-b*d != 0):     #Condição 
	x = (c*e-b*f)/(a*e-b*d)
	y = (a*f-c*d)/(a*e-b*d) 
	print(x)
   print(y)
else:
	print("Nao tem solucao")

-- ERROR:
File "XXXX", line 9
    if(cond1 = a*e-b*d != 0):     #Condição 
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 19:04:14) 
-- CODE:
from math import*
a = float(input("Coeficiente a:"))
b = float(input("Coeficiente b:"))
c = float(input("Coeficiente c:"))
d = float(input("Coeficiente d:"))
e = float(input("Coeficiente e:"))
f = float(input("Coeficiente f:"))

if(a*e-b*d != 0):     #Condição 
	x = (c*e-b*f)/(a*e-b*d)
	y = (a*f-c*d)/(a*e-b*d) 
	print(x)
   print(y)
else:
	print("Nao tem solucao")

-- ERROR:
File "XXXX", line 13
    print(y)
           ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 19:04:49) 
-- CODE:
from math import*
a = float(input("Coeficiente a:"))
b = float(input("Coeficiente b:"))
c = float(input("Coeficiente c:"))
d = float(input("Coeficiente d:"))
e = float(input("Coeficiente e:"))
f = float(input("Coeficiente f:"))
if(a*e-b*d != 0):     #Condição 
	x = (c*e-b*f)/(a*e-b*d)
	y = (a*f-c*d)/(a*e-b*d) 
	print(x)
   print(y)
else
	print("Nao tem solucao")

-- ERROR:
File "XXXX", line 12
    print(y)
           ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 19:05:04) 
-- CODE:
from math import*
a = float(input("Coeficiente a:"))
b = float(input("Coeficiente b:"))
c = float(input("Coeficiente c:"))
d = float(input("Coeficiente d:"))
e = float(input("Coeficiente e:"))
f = float(input("Coeficiente f:"))
if(a*e-b*d != 0):     #Condição 
	x = (c*e-b*f)/(a*e-b*d)
	y = (a*f-c*d)/(a*e-b*d) 
	print(x)
   print()
else
	print("Nao tem solucao")

-- ERROR:
File "XXXX", line 12
    print()
          ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 19:05:13) 
-- CODE:
from math import*
a = float(input("Coeficiente a:"))
b = float(input("Coeficiente b:"))
c = float(input("Coeficiente c:"))
d = float(input("Coeficiente d:"))
e = float(input("Coeficiente e:"))
f = float(input("Coeficiente f:"))
if(a*e-b*d != 0):     #Condição 
	x = (c*e-b*f)/(a*e-b*d)
	y = (a*f-c*d)/(a*e-b*d) 
	print(x)
else
	print("Nao tem solucao")

-- ERROR:
File "XXXX", line 12
    else
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 19:05:20) 
-- CODE:
from math import*
a = float(input("Coeficiente a:"))
b = float(input("Coeficiente b:"))
c = float(input("Coeficiente c:"))
d = float(input("Coeficiente d:"))
e = float(input("Coeficiente e:"))
f = float(input("Coeficiente f:"))
if(a*e-b*d != 0):     #Condição 
	x = (c*e-b*f)/(a*e-b*d)
	y = (a*f-c*d)/(a*e-b*d) 
	print(x)
else:
	print("Nao tem solucao")

-- OUTPUT:
Nao tem solucao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 19:05:49) 
-- CODE:
from math import*
a = float(input("Coeficiente a:"))
b = float(input("Coeficiente b:"))
c = float(input("Coeficiente c:"))
d = float(input("Coeficiente d:"))
e = float(input("Coeficiente e:"))
f = float(input("Coeficiente f:"))
if(a*e-b*d != 0):     #Condição 
	x = (c*e-b*f)/(a*e-b*d)
	y = (a*f-c*d)/(a*e-b*d) 
	print(x)
	print(y)
else:
	print("Nao tem solucao")

-- OUTPUT:
Nao tem solucao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 19:06:08) 
-- CODE:
from math import*
a = float(input("Coeficiente a:"))
b = float(input("Coeficiente b:"))
c = float(input("Coeficiente c:"))
d = float(input("Coeficiente d:"))
e = float(input("Coeficiente e:"))
f = float(input("Coeficiente f:"))
if(a*e-b*d != 0):     #Condição 
	x = (c*e-b*f)/(a*e-b*d)
	y = (a*f-c*d)/(a*e-b*d) 
	print(x)
	print(y)
else:
	print("Nao tem solucao")

-- OUTPUT:
Nao tem solucao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-04 19:06:20) 
-- CODE:
from math import*
a = float(input("Coeficiente a:"))
b = float(input("Coeficiente b:"))
c = float(input("Coeficiente c:"))
d = float(input("Coeficiente d:"))
e = float(input("Coeficiente e:"))
f = float(input("Coeficiente f:"))
if(a*e-b*d != 0):     #Condição 
	x = (c*e-b*f)/(a*e-b*d)
	y = (a*f-c*d)/(a*e-b*d) 
	print(x)
	print(y)
else:
	print("Nao tem solucao")

-- EXECUTION TIME:
0.212548
-- TEST CASE 1:
---- input:
10.0
10.0
12.0
10.0
10.0
12.0
---- correct output:
Nao tem solucao
---- user output:
Nao tem solucao
-- TEST CASE 2:
---- input:
1.0
8.0
12.0
16.0
22.0
30.0
---- correct output:
-0.22641509433962265
1.528301886792453
---- user output:
-0.22641509433962265
1.528301886792453
-- TEST CASE 3:
---- input:
24.0
48.0
52.0
112.0
16.0
1.0
---- correct output:
-0.15705128205128205
1.1618589743589745
---- user output:
-0.15705128205128205
1.1618589743589745
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
