== TEST (2019-04-09 11:30:01) 
-- CODE:
aluno precisa comprar os tickets do RU e os passes de ônibus para o mês.

Elabore um programa que leia, nesta ordem:
din = float(input("digite seu orcamento: "))
RU = int(input("digite a quantidade que deseja de tickets: "))
tickets = 1.20
passes: int(input("digite a quantidade de passes que deseja: "))
passagem: 1.50
if (((RU*tickets)+(passes*passagem)) <= din):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- ERROR:
File "XXXX", line 1
    aluno precisa comprar os tickets do RU e os passes de ônibus para o mês.
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:30:40) 
-- CODE:
din = float(input("digite seu orcamento: "))
RU = int(input("digite a quantidade que deseja de tickets: "))
tickets = 1.20
passes: int(input("digite a quantidade de passes que deseja: "))
passagem: 1.50
if (((RU*tickets)+(passes*passagem)) <= din):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    passes: int(input())
ValueError: invalid literal for int() with base 10: '1.20'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:30:52) 
-- CODE:
din = float(input("digite seu orcamento: "))
RU = int(input("digite a quantidade que deseja de tickets: "))
tickets = 1.20
passes = int(input("digite a quantidade de passes que deseja: "))
passagem: 1.50
if (((RU*tickets)+(passes*passagem)) <= din):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    passes = int(input())
ValueError: invalid literal for int() with base 10: '1.20'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:31:00) 
-- CODE:
din = float(input("digite seu orcamento: "))
RU = int(input("digite a quantidade que deseja de tickets: "))
tickets = 1.20
passes = int(input("digite a quantidade de passes que deseja: "))
passagem = 1.50
if (((RU*tickets)+(passes*passagem)) <= din):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    passes = int(input())
ValueError: invalid literal for int() with base 10: '1.20'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:31:16) 
-- CODE:
din = float(input("digite seu orcamento: "))
RU = int(input("digite a quantidade que deseja de tickets: "))
tickets = 1.20
passes = int(input("digite a quantidade de passes que deseja: "))
passagem = 1.50
if (((RU*tickets)+(passes*passagem)) <= din):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- EXECUTION TIME:
0.197131
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1637/2711/main.py", line 4, in <module>
    passes = int(input())
ValueError: invalid literal for int() with base 10: '1.20'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:33:34) 
-- CODE:
din = float(input("digite seu orcamento: "))
RU = int(input("digite a quantidade que deseja de tickets: "))
tickets = float(input("valor do tickets: "))
passes = int(input("digite a quantidade de passes que deseja: "))
passagem = float(input("valor da passagem: "))
if (((RU*tickets)+(passes*passagem)) <= din):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:34:03) 
-- CODE:
din = float(input("digite seu orcamento: "))
RU = int(input("digite a quantidade que deseja de tickets: "))
tickets = float(input("valor do tickets: "))
passes = int(input("digite a quantidade de passes que deseja: "))
passagem = float(input("valor da passagem: "))
if (((RU*tickets)+(passes*passagem)) <= din):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:34:20) 
-- CODE:
din = float(input("digite seu orcamento: "))
RU = int(input("digite a quantidade que deseja de tickets: "))
tickets = float(input("valor do tickets: "))
passes = int(input("digite a quantidade de passes que deseja: "))
passagem = float(input("valor da passagem: "))
if (((RU*tickets)+(passes*passagem)) <= din):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- EXECUTION TIME:
0.145854
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
INSUFICIENTE
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
