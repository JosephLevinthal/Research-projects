== TEST (2019-03-22 16:20:08) 
-- CODE:
num = int(input('Numero de quatro digitos:'))
rest = num%num
div = num//num
print(div+rest)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 16:20:41) 
-- CODE:
num = int(input('Numero de quatro digitos:'))
rest = num%num
div = num//num
print(rest)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 16:21:29) 
-- CODE:
num = int(input('Numero de quatro digitos:'))
rest = num%2
div = num//num
print(rest)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 16:21:43) 
-- CODE:
num = int(input('Numero de quatro digitos:'))
rest = num%2
div = num//num
print(rest)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 16:21:56) 
-- CODE:
num = int(input('Numero de quatro digitos:'))
rest = num%3
div = num//num
print(rest)
-- OUTPUT:
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 16:22:10) 
-- CODE:
num = int(input('Numero de quatro digitos:'))
rest = num%3
div = num//num
print(rest)
-- OUTPUT:
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 16:22:15) 
-- CODE:
num = int(input('Numero de quatro digitos:'))
rest = num%3
div = num//num
print(rest)
-- OUTPUT:
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 16:22:17) 
-- CODE:
num = int(input('Numero de quatro digitos:'))
rest = num%3
div = num//num
print(rest)
-- OUTPUT:
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 16:22:46) 
-- CODE:
num = int(input('Numero de quatro digitos:'))
rest = num%3
div = num//num
print(rest)
-- OUTPUT:
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 16:23:03) 
-- CODE:
num = int(input('Numero de quatro digitos:'))
rest = num%3
div = num//num
print(rest)
-- OUTPUT:
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 16:24:11) 
-- CODE:
num = int(input('Numero de quatro digitos:'))

rest = num%num
div = num//num
print(rest, div)
-- OUTPUT:
0 1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 16:24:42) 
-- CODE:
num = int(input('Numero de quatro digitos:'))

rest = num%num/1000
div = num//num
print(rest, div)
-- OUTPUT:
0.0 1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 16:26:27) 
-- CODE:
num = int(input('Numero de quatro digitos:'))

mil = num//1000
cen = num//100
dez = num//10
uni = num//1
print(mil, cen, dez, uni)
-- OUTPUT:
9 91 917 9173
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 16:27:45) 
-- CODE:
num = int(input('Numero de quatro digitos:'))

mil = num//1000
cen = num//1000
dez = num//100
uni = num//10
print(mil, cen, dez, uni)
-- OUTPUT:
9 9 91 917
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 16:29:20) 
-- CODE:
num = int(input('Numero de quatro digitos:'))

mil = num//1000
cen = (num-mil)//100
dez = num//100
uni = num//10
print(mil, cen, dez, uni)
-- OUTPUT:
9 91 91 917
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 16:30:23) 
-- CODE:
num = int(input('Numero de quatro digitos:'))

mil = num//1000
cen = (num-mil*1000)//100
dez = (num-mil*1000-cen*100)//100
uni = num//10
print(mil, cen, dez, uni)
-- OUTPUT:
9 1 0 917
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 16:31:48) 
-- CODE:
num = int(input('Numero de quatro digitos:'))

mil = num//1000
cen = (num-mil*1000)//100
dez = (num-(mil*1000)-(cen*100))//10
uni = num//10
print(mil, cen, dez, uni)
-- OUTPUT:
9 1 7 917
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 16:32:40) 
-- CODE:
num = int(input('Numero de quatro digitos:'))

mil = num//1000
cen = (num-mil*1000)//100
dez = (num-(mil*1000)-(cen*100))//10
uni = (num-(mil*1000)-(cen*100)-(dez*10))//1
print(mil, cen, dez, uni)
-- OUTPUT:
9 1 7 3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 16:35:40) 
-- CODE:
num = int(input('Numero de quatro digitos:'))
#mil, cen, dez e uni representam unidade, dezena, centena e milhar
#Se dividirmos o primeio digito por 1000, teremos ele própri
#Ao subtrair o primeiro digito e dividir o valor inicial por 100, obtemos o terceiro digito
#A mesma ideia é acionada aqui, com intuito agora de conseguir o digito na casa dezenal
#Desse metodo se obtem todos os valores, por fim, soma-se
mil = num//1000
cen = (num-mil*1000)//100
dez = (num-(mil*1000)-(cen*100))//10
uni = (num-(mil*1000)-(cen*100)-(dez*10))//1
print(mil, cen, dez, uni)
-- OUTPUT:
9 1 7 3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 16:36:04) 
-- CODE:
num = int(input('Numero de quatro digitos:'))
#mil, cen, dez e uni representam unidade, dezena, centena e milhar
#Se dividirmos o primeio digito por 1000, teremos ele própri
#Ao subtrair o primeiro digito e dividir o valor inicial por 100, obtemos o terceiro digito
#A mesma ideia é acionada aqui, com intuito agora de conseguir o digito na casa dezenal
#Desse metodo se obtem todos os valores, por fim, soma-se
mil = num//1000
cen = (num-mil*1000)//100
dez = (num-(mil*1000)-(cen*100))//10
uni = (num-(mil*1000)-(cen*100)-(dez*10))//1
print(mil+cen+dez+uni)
-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 16:36:14) 
-- CODE:
num = int(input('Numero de quatro digitos:'))
#mil, cen, dez e uni representam unidade, dezena, centena e milhar
#Se dividirmos o primeio digito por 1000, teremos ele própri
#Ao subtrair o primeiro digito e dividir o valor inicial por 100, obtemos o terceiro digito
#A mesma ideia é acionada aqui, com intuito agora de conseguir o digito na casa dezenal
#Desse metodo se obtem todos os valores, por fim, soma-se
mil = num//1000
cen = (num-mil*1000)//100
dez = (num-(mil*1000)-(cen*100))//10
uni = (num-(mil*1000)-(cen*100)-(dez*10))//1
print(mil+cen+dez+uni)
-- EXECUTION TIME:
0.220715
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
