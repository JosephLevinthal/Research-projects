== SUBMITION (2019-04-10 21:33:30) 
-- CODE:
a = float(input("valor disponivel: "))
b = int(input("quantidade de tickets: "))
c = float(input("valor dos tickets: "))
d = int(input("passes de onibus: "))
e = float(input("valor do passe: "))

f = (b*c) + (d*e)

if (f<a):
	print(INSUFICIENTE)
else:
	print(SUFICIENTE)
-- EXECUTION TIME:
0.134294
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1637/2711/main.py", line 10, in <module>
    print(INSUFICIENTE)
NameError: name 'INSUFICIENTE' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 21:33:31) 
-- CODE:
a = float(input("valor disponivel: "))
b = int(input("quantidade de tickets: "))
c = float(input("valor dos tickets: "))
d = int(input("passes de onibus: "))
e = float(input("valor do passe: "))

f = (b*c) + (d*e)

if (f<a):
	print(INSUFICIENTE)
else:
	print(SUFICIENTE)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(INSUFICIENTE)
NameError: name 'INSUFICIENTE' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 21:35:45) 
-- CODE:
a = float(input("valor disponivel: "))
b = int(input("quantidade de tickets: "))
c = float(input("valor dos tickets: "))
d = int(input("passes de onibus: "))
e = float(input("valor do passe: "))

f = (b*c) + (d*e)

if (f<a):
	mensagem = INSUFICIENTE
	
else:
	mensagem = SUFICIENTE

print(mensagem)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    mensagem = INSUFICIENTE
NameError: name 'INSUFICIENTE' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 21:37:15) 
-- CODE:
a = float(input("valor disponivel: "))
b = int(input("quantidade de tickets: "))
c = float(input("valor dos tickets: "))
d = int(input("passes de onibus: "))
e = float(input("valor do passe: "))

f = (b*c) + (d*e)

if (f<a):
	mensagem = "INSUFICIENTE"
	
else:
	mensagem = "SUFICIENTE"

print(mensagem)

-- OUTPUT:
INSUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 21:38:00) 
-- CODE:
a = float(input("valor disponivel: "))
b = int(input("quantidade de tickets: "))
c = float(input("valor dos tickets: "))
d = int(input("passes de onibus: "))
e = float(input("valor do passe: "))

f = (b*c) + (d*e)

if (f<a):
	mensagem = "SUFICIENTE"
	
else:
	mensagem = "SUFICIENTE"

print(mensagem)

-- EXECUTION TIME:
0.143269
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
SUFICIENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 21:38:02) 
-- CODE:
a = float(input("valor disponivel: "))
b = int(input("quantidade de tickets: "))
c = float(input("valor dos tickets: "))
d = int(input("passes de onibus: "))
e = float(input("valor do passe: "))

f = (b*c) + (d*e)

if (f<a):
	mensagem = "SUFICIENTE"
	
else:
	mensagem = "SUFICIENTE"

print(mensagem)

-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 21:38:35) 
-- CODE:
a = float(input("valor disponivel: "))
b = int(input("quantidade de tickets: "))
c = float(input("valor dos tickets: "))
d = int(input("passes de onibus: "))
e = float(input("valor do passe: "))

f = (b*c) + (d*e)

if (a>f):
	mensagem = "SUFICIENTE"
	
else:
	mensagem = "INSUFICIENTE"

	print(mensagem)

-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 21:38:58) 
-- CODE:
a = float(input("valor disponivel: "))
b = int(input("quantidade de tickets: "))
c = float(input("valor dos tickets: "))
d = int(input("passes de onibus: "))
e = float(input("valor do passe: "))

f = (b*c) + (d*e)

if (a>f):
	mensagem = "SUFICIENTE"
	
else:
	mensagem = "INSUFICIENTE"

print(mensagem)

-- EXECUTION TIME:
0.157076
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
INSUFICIENTE
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
