== TEST (2019-04-09 10:52:32) 
-- CODE:
pr = float(input("preco do produto: "))
pa = float(input("quantia dada: "))

if (pr > pa):
	men = falta + (pr - pa)
	
else:	
	men = troco + (pa - pr)
print("men")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    men = falta + (pr - pa)
NameError: name 'falta' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:53:18) 
-- CODE:
pr = float(input("preco do produto: "))
pa = float(input("quantia dada: "))

if (pr > pa):
	men = "falta" + (pr - pa)
	
else:	
	men = "troco" + (pa - pr)
print("men")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    men = "falta" + (pr - pa)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:53:44) 
-- CODE:
pr = float(input("preco do produto: "))
pa = float(input("quantia dada: "))

if (pr > pa):
	men = falta + (pr - pa)
	
else:	
	men = troco + (pa - pr)
print("men")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    men = falta + (pr - pa)
NameError: name 'falta' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:54:33) 
-- CODE:
pr = float(input("preco do produto: "))
pa = float(input("quantia dada: "))

if (pr > pa):
	men = "falta + (pr - pa)"
	
else:	
	men = "troco + (pa - pr)"
print(men)
-- OUTPUT:
falta + (pr - pa)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:55:44) 
-- CODE:
pr = float(input("preco do produto: "))
pa = float(input("quantia dada: "))

if (pr > pa):
	men = "falta + (pr - pa)"
	
else:	
	print(troco de  + (pa - pr))
-- ERROR:
File "XXXX", line 8
    print(troco de  + (pa - pr))
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:57:58) 
-- CODE:
pr = float(input("preco do produto: "))
pa = float(input("quantia dada: "))
x = pr - pa 
y = pa - pr
if (pr > pa):
	men = Falta x
	
else:	
	men = Troco de y

print(round("men",2))
-- ERROR:
File "XXXX", line 6
    men = Falta x
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:58:12) 
-- CODE:
pr = float(input("preco do produto: "))
pa = float(input("quantia dada: "))
x = pr - pa 
y = pa - pr
if (pr > pa):
	men = Falta + x
	
else:	
	men = Troco de y

print(round("men",2))
-- ERROR:
File "XXXX", line 9
    men = Troco de y
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:58:19) 
-- CODE:
pr = float(input("preco do produto: "))
pa = float(input("quantia dada: "))
x = pr - pa 
y = pa - pr
if (pr > pa):
	men = Falta + x
	
else:	
	men = Troco de + y

print(round("men",2))
-- ERROR:
File "XXXX", line 9
    men = Troco de + y
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:59:01) 
-- CODE:
pr = float(input("preco do produto: "))
pa = float(input("quantia dada: "))
x = pr - pa 
y = pa - pr
if (pr > pa):
	men = Falta + x
	
else:	
	men = Troco de + y

print(round("men",2))
-- ERROR:
File "XXXX", line 9
    men = Troco de + y
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:59:34) 
-- CODE:
pr = float(input("preco do produto: "))
pa = float(input("quantia dada: "))
x = pr - pa 
y = pa - pr
if (pr > pa):
	men = Falta + x
	
else:	
	men = Troco de + "y"

print(round("men",2))
-- ERROR:
File "XXXX", line 9
    men = Troco de + "y"
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:00:04) 
-- CODE:
pr = float(input("preco do produto: "))
pa = float(input("quantia dada: "))
x = pr - pa 
y = pa - pr
#if (pr > pa):
men = Falta + x
	
#else:	
	#men = Troco de + y

print(round("men",2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    men = Falta + x
NameError: name 'Falta' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:00:28) 
-- CODE:
pr = float(input("preco do produto: "))
pa = float(input("quantia dada: "))
x = pr - pa 
y = pa - pr
#if (pr > pa):
men = "Falta" + x
	
#else:	
	#men = Troco de + y

print(round("men",2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    men = "Falta" + x
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:01:45) 
-- CODE:
pr = float(input("preco do produto: "))
pa = float(input("quantia dada: "))
x = pr - pa 
y = pa - pr
#if (pr > pa):
men = "Falta + x"
	
#else:	
	#men = Troco de + y

print(round("men",2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(round("men",2))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:02:06) 
-- CODE:
pr = float(input("preco do produto: "))
pa = float(input("quantia dada: "))
x = pr - pa 
y = pa - pr
#if (pr > pa):
men = "Falta + x"
	
#else:	
	#men = Troco de + y

print(round("men",2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(round("men",2))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:03:40) 
-- CODE:
pr = float(input("preco do produto: "))
pa = float(input("quantia dada: "))
x = pr - pa 
y = pa - pr
#if (pr > pa):
	print(men + x)
	
#else:	
	#men = Troco de + y

#print(round("men",2))
-- ERROR:
File "XXXX", line 6
    print(men + x)
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:04:19) 
-- CODE:
pr = float(input("preco do produto: "))
pa = float(input("quantia dada: "))
x = pr - pa 
y = pa - pr
if (pr > pa):
	men = falta
	print(men + x)
	
#else:	
	#men = Troco de + y

#print(round("men",2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    men = falta
NameError: name 'falta' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:04:45) 
-- CODE:
pr = float(input("preco do produto: "))
pa = float(input("quantia dada: "))
x = pr - pa 
y = pa - pr
if (pr > pa):
	men = "falta"
	print(men + x)
	
#else:	
	#men = Troco de + y

#print(round("men",2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(men + x)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:05:50) 
-- CODE:
pr = float(input("preco do produto: "))
pa = float(input("quantia dada: "))
x = pr - pa 
y = pa - pr
if (pr > pa):
	men = "falta"
	print(men + x)
	
else:	
	men = "Treco de"
	print(men + y)

#print(round("men",2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(men + x)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:08:40) 
-- CODE:
pr = float(input("preco do produto: "))
pa = float(input("quantia dada: "))
x = pr - pa 
y = pa - pr
if (pr > pa):
	men = "falta"
	tra = men + x
	
else:	
	men = "Treco de"
	tra = men + y

print(round("tra",2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    tra = men + x
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:08:55) 
-- CODE:
pr = float(input("preco do produto: "))
pa = float(input("quantia dada: "))
x = pr - pa 
y = pa - pr
if (pr > pa):
	men = "falta"
	tra = men + "x"
	
else:	
	men = "Treco de"
	tra = men + y

print(round("tra",2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    print(round("tra",2))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:11:07) 
-- CODE:
pr = float(input("preco do produto: "))
pa = float(input("quantia dada: "))
x = pr - pa 
y = pa - pr
if (pr > pa):
	men = ("Falta",round(pr - pa,2))
	
	
else:	
	men = ("Treco de",round(pa - pr,2))
	

print(round("men",2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    print(round("men",2))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:11:50) 
-- CODE:
pr = float(input("preco do produto: "))
pa = float(input("quantia dada: "))
x = pr - pa 
y = pa - pr
if (pr > pa):
	men = ("Falta",round(pr - pa,2))
	
	
else:	
	men = ("Troco de",round(pa - pr,2))
	

print(round("men",2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    print(round("men",2))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:12:22) 
-- CODE:
pr = float(input("preco do produto: "))
pa = float(input("quantia dada: "))
x = pr - pa 
y = pa - pr
if (pr > pa):
	men = ("Falta",round(pr - pa,2))
	
	
else:	
	men = ("Troco de",round(pa - pr,2))
	

print("men")
-- OUTPUT:
men
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:12:36) 
-- CODE:
pr = float(input("preco do produto: "))
pa = float(input("quantia dada: "))
x = pr - pa 
y = pa - pr
if (pr > pa):
	men = ("Falta",round(pr - pa,2))
	
	
else:	
	men = ("Troco de",round(pa - pr,2))
	

print(men)
-- OUTPUT:
('Falta', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:12:49) 
-- CODE:
pr = float(input("preco do produto: "))
pa = float(input("quantia dada: "))
x = pr - pa 
y = pa - pr
if (pr > pa):
	men = "Falta",round(pr - pa,2)
	
	
else:	
	men = "Troco de",round(pa - pr,2)
	

print(men)
-- OUTPUT:
('Falta', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:13:06) 
-- CODE:
pr = float(input("preco do produto: "))
pa = float(input("quantia dada: "))
x = pr - pa 
y = pa - pr
if (pr > pa):
	men = "Falta",round(pr - pa,2)
	
	
else:	
	men = "Troco de",round(pa - pr,2)
	

print(men)
-- EXECUTION TIME:
0.127323
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
('Falta', 26.0)
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
('Troco de', 28.0)
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
('Troco de', 0.0)
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:13:16) 
-- CODE:
pr = float(input("preco do produto: "))
pa = float(input("quantia dada: "))
x = pr - pa 
y = pa - pr
if (pr > pa):
	men = "Falta",round(pr - pa,2)
	
	
else:	
	men = "Troco de",round(pa - pr,2)
	

print(men)
-- OUTPUT:
('Falta', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:13:49) 
-- CODE:
pr = float(input("preco do produto: "))
pa = float(input("quantia dada: "))
x = pr - pa 
y = pa - pr
if (pr > pa):
	men = Falta,round(pr - pa,2)
	
	
else:	
	men = Troco de,round(pa - pr,2)
	

print(men)
-- ERROR:
File "XXXX", line 10
    men = Troco de,round(pa - pr,2)
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:14:08) 
-- CODE:
pr = float(input("preco do produto: "))
pa = float(input("quantia dada: "))
x = pr - pa 
y = pa - pr
if (pr > pa):
	men = "Falta",round(pr - pa,2)
	
	
else:	
	men = "Troco de",round(pa - pr,2)
	

print(men)
-- OUTPUT:
('Falta', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:15:17) 
-- CODE:
pr = float(input("preco do produto: "))
pa = float(input("quantia dada: "))
x = pr - pa 
y = pa - pr
if (pr > pa):
	men = "Falta",round(pr - pa,2)
	
	
else:	
	men = "Troco de"round(pa - pr,2)
	

print(men)
-- ERROR:
File "XXXX", line 10
    men = "Troco de"round(pa - pr,2)
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:16:36) 
-- CODE:
pr = float(input("preco do produto: "))
pa = float(input("quantia dada: "))

if (pr > pa):
	men = "Falta",round(pr - pa,2)
	
	
else:	
	men = "Troco de",round(pa - pr,2)
	

print(men)
-- OUTPUT:
('Falta', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:17:21) 
-- CODE:
pr = float(input("preco do produto: "))
pa = float(input("quantia dada: "))

if (pr > pa):
	men = ("Falta",round(pr - pa,2))
	
	
else:	
	men = ("Troco de",round(pa - pr,2))
	

print(men)
-- OUTPUT:
('Falta', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:18:04) 
-- CODE:
pr = float(input("preco do produto: "))
pa = float(input("quantia dada: "))

if (pr > pa):
	men=("Falta",round(pr - pa,2))
	
	
else:	
	men=("Troco de",round(pa - pr,2))
	

print(men)
-- OUTPUT:
('Falta', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:19:23) 
-- CODE:
pr = float(input("preco do produto: "))
pa = float(input("quantia dada: "))

if (pr > pa):
	men=("Falta",round(pr - pa,2))
	
	
else:	
	men=("Troco de",round(pa - pr,2))
	

print(men)
-- EXECUTION TIME:
0.145879
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
('Falta', 26.0)
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
('Troco de', 28.0)
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
('Troco de', 0.0)
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:20:22) 
-- CODE:
pr = float(input("preco do produto: "))
pa = float(input("quantia dada: "))

if (pr > pa):
	men="Falta",round(pr - pa,2)
	
	
else:	
	men="Troco de",round(pa - pr,2)
	

print(men)
-- OUTPUT:
('Falta', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:21:59) 
-- CODE:
pr = float(input("preco do produto: "))
pa = float(input("quantia dada: "))

if (pr > pa):
	print("Falta",round(pr - pa,2))
	
	
else:	
	print("Troco de",round(pa - pr,2))
	


-- OUTPUT:
Falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:22:07) 
-- CODE:
pr = float(input("preco do produto: "))
pa = float(input("quantia dada: "))

if (pr > pa):
	print("Falta",round(pr - pa,2))
	
	
else:	
	print("Troco de",round(pa - pr,2))
	


-- EXECUTION TIME:
0.136838
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
