== TEST (2019-03-25 14:32:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("Digite um valor para a: ""))

b = float(input("Digite um valor para b: "))

c = float(input("Digite um valor para c: "))

s = (a + b + c) / 2

area = (s * (s - a) * s * (s - b) * s * (s - c))**0.5 
					 
print(round(area, 5))
-- ERROR:
File "XXXX", line 4
    a = float(input("Digite um valor para a: ""))
                                                ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:32:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("Digite um valor para a: "))

b = float(input("Digite um valor para b: "))

c = float(input("Digite um valor para c: "))

s = (a + b + c) / 2

area = (s * (s - a) * s * (s - b) * s * (s - c))**0.5 
					 
print(round(area, 5))
-- OUTPUT:
1516.81989
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:34:08) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("Digite um valor para a: "))

b = float(input("Digite um valor para b: "))

c = float(input("Digite um valor para c: "))

s = (a + b + c) / 2

area = (s * (s - a) * s * (s - b) * s * (s - c)) ** 0.5 
					 
print(round(area, 5))
-- OUTPUT:
1516.81989
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:17:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *

a = float(input("Digite um valor para a: "))

b = float(input("Digite um valor para b: "))

c = float(input("Digite um valor para c: "))

sp = (a + b + c) / 2

area = sqrt(sp * (sp - a) * sp * (sp - b) * sp * (sp - c))
					 
print(round(area, 5))
-- OUTPUT:
1516.81989
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:17:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *

a = float(input("Digite um valor para a: "))

b = float(input("Digite um valor para b: "))

c = float(input("Digite um valor para c: "))

sp = (a + b + c) / 2

area = (sp * (sp - a) * sp * (sp - b) * sp * (sp - c)) ** 0.5
					 
print(round(area, 5))
-- OUTPUT:
1516.81989
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:20:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *

a = float(input("Digite um valor para a: "))

b = float(input("Digite um valor para b: "))

c = float(input("Digite um valor para c: "))

s = (a + b + c) / 2

area = (s * (s - a) * s * (s - b) * s * (s - c)).sqrt()
					 
print(round(area, 5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    area = (s * (s - a) * s * (s - b) * s * (s - c)).sqrt()
AttributeError: 'float' object has no attribute 'sqrt'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:21:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *

a = float(input("Digite um valor para a: "))

b = float(input("Digite um valor para b: "))

c = float(input("Digite um valor para c: "))

s = (a + b + c) / 2

area = sqrt((s * (s - a) * s * (s - b) * s * (s - c)))
					 
print(round(area, 5))
-- OUTPUT:
1516.81989
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:24:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *

a = float(input("Digite um valor para a: "))

b = float(input("Digite um valor para b: "))

c = float(input("Digite um valor para c: "))

s = (a + b + c) / 2

area = sqrt(s((s - a) * (s - b) * (s - c)))
					 
print(round(area, 5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    area = sqrt(s((s - a) * (s - b) * (s - c)))
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:25:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *

a = float(input("Digite um valor para a: "))

b = float(input("Digite um valor para b: "))

c = float(input("Digite um valor para c: "))

s = (a + b + c) / 2

area = sqrt(s * ((s - a) * (s - b) * (s - c)))
					 
print(round(area, 5))
-- OUTPUT:
69.41967
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 10:26:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *

a = float(input("Digite um valor para a: "))

b = float(input("Digite um valor para b: "))

c = float(input("Digite um valor para c: "))

s = (a + b + c) / 2

area = sqrt(s * ((s - a) * (s - b) * (s - c)))
					 
print(round(area, 5))
-- EXECUTION TIME:
0.145819
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.41967
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709.16654
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
