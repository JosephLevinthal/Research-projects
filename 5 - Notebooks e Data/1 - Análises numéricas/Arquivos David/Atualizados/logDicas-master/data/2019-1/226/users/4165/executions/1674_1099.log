== TEST (2019-04-25 10:47:15) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
x = "tipo de triangulo "
print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a>0, b>0, c>0 ):
	# Testa se medidas correspondem aas de um triangulo
if (a+b>c and b+c>a and a+c>b):
		print(x, " invalido")

else:
	if( a == b == c):
		print( x, "equilatero")
		
	else:
		if(a == b != c or c == a != b or c == b != a )
			print( x, "isosceles")
		
	
      
-- ERROR:
File "XXXX", line 15
    if (a+b>c and b+c>a and a+c>b):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:48:12) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
x = "tipo de triangulo "
print("Entradas:", a, ",", b, ",", c)


if (a>0, b>0, c>0 ):

	if(a+b>c and b+c>a and a+c>b):
		print(x, " invalido")

else:
	if( a == b == c):
		print( x, "equilatero")
		
	else:
		if(a == b != c or c == a != b or c == b != a )
			print( x, "isosceles")
		
	
      
-- ERROR:
File "XXXX", line 23
    if(a == b != c or c == a != b or c == b != a )
                                                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:50:17) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
x = "tipo de triangulo "
print("Entradas:", a, ",", b, ",", c)


if (a>0, b>0, c>0 ):

	if(a+b>c and b+c>a and a+c>b):
		print(x, " invalido")

else:
	if( a == b == c):
		print( x, "equilatero")
		
	else:
		if(a == b and b!= c or  c == b and b != a )
			print( x, "isosceles")
		
	
      
-- ERROR:
File "XXXX", line 23
    if(a == b and b!= c or  c == b and b != a )
                                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:50:37) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
x = "tipo de triangulo "
print("Entradas:", a, ",", b, ",", c)


if (a>0, b>0, c>0 ):

	if(a+b>c and b+c>a and a+c>b):
		print(x, " invalido")

else:
	if( a == b == c):
		print( x, "equilatero")
		
	else:
		if(a == b and b!= c or  c == b and b!= a )
			print( x, "isosceles")
		
	
      
-- ERROR:
File "XXXX", line 23
    if(a == b and b!= c or  c == b and b!= a )
                                             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:50:49) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
x = "tipo de triangulo "
print("Entradas:", a, ",", b, ",", c)


if (a>0, b>0, c>0 ):

	if(a+b>c and b+c>a and a+c>b):
		print(x, " invalido")

else:
	if( a == b == c):
		print( x, "equilatero")
		
	else:
		if(a == b and b!= c or  c == b and b!= a ):
			print( x, "isosceles")
		
	
      
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
tipo de triangulo   invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:51:13) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
x = "tipo de triangulo "
print("Entradas:", a, ",", b, ",", c)


if (a>0, b>0, c>0 ):

if(a+b>c and b+c>a and a+c>b):
		print(x, " invalido")

else:
	if( a == b == c):
		print( x, "equilatero")
		
	else:
		if(a == b != c or c == a != b or c == b != a ):
			print( x, "isosceles")
		
	
      
-- ERROR:
File "XXXX", line 15
    if(a+b>c and b+c>a and a+c>b):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:51:23) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
x = "tipo de triangulo "
print("Entradas:", a, ",", b, ",", c)


if (a>0, b>0, c>0 ):

	if(a+b>c and b+c>a and a+c>b):
		print(x, " invalido")

else:
	if( a == b == c):
		print( x, "equilatero")
		
	else:
		if(a == b != c or c == a != b or c == b != a ):
			print( x, "isosceles")
		
	
      
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
tipo de triangulo   invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:52:02) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
x = "tipo de triangulo "
print("Entradas:", a, ",", b, ",", c)


if (a>0, b>0, c>0 ):

	if(a+b>c and b+c>a and a+c>b):
		print(x, " invalido")

else:
	if( a == b == c):
		print( x, "equilatero")
		
	else:
		if(a == b != c or c == a != b or c == b != a ):
			print( x, "isosceles")
		
	
      
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
tipo de triangulo   invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:52:25) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
x = "tipo de triangulo "
print("Entradas:", a, ",", b, ",", c)


if (a>0, b>0, c>0 ):

	if(a+b>c and b+c>a and a+c>b):
		print(x, " invalido")

else:
	if( a == b == c):
		print( x, "equilatero")
		
	else:
		if(a == b != c or c == a != b or c == b != a ):
			print( x, "isosceles")
		
	
      
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
tipo de triangulo   invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:53:25) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
x = "tipo de triangulo "
print("Entradas:", a, ",", b, ",", c)


if (a>0, b>0, c>0 ):

	if(a+b>c and b+c>a and a+c>b):
		print(x, " invalido")

	else:
		if( a == b == c):
			print( x, "equilatero")
		
		else:
			if(a == b != c or c == a != b or c == b != a ):
				print( x, "isosceles")
		
	
      
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
tipo de triangulo   invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:55:41) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
x = "tipo de triangulo "
print("Entradas:", a, ",", b, ",", c)


if(a>0 or b>0 or c>0 or a+b>c or b+c>a or a+c>b):
	print(x, " invalido")

	else:
		if( a == b == c):
			print( x, "equilatero")
		
		else:
			if(a == b != c or c == a != b or c == b != a ):
				print( x, "isosceles")
		
	
      
-- ERROR:
File "XXXX", line 16
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:56:16) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
x = "tipo de triangulo "
print("Entradas:", a, ",", b, ",", c)


if(a>0 or b>0 or c>0 or a+b>c or b+c>a or a+c>b):
	print(x, " invalido")

else:
	if( a == b == c):
		print( x, "equilatero")
		
	else:
		if(a == b != c or c == a != b or c == b != a ):
			print( x, "isosceles")
		
	
      
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
tipo de triangulo   invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:57:23) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
x = "tipo de triangulo "
print("Entradas:", a, ",", b, ",", c)


if(a<0 or b<0 or c<0 or a+b<=c or b+c<=a or a+c<=b):
	print(x, " invalido")

else:
	if( a == b == c):
		print( x, "equilatero")
		
	else:
		if(a == b != c or c == a != b or c == b != a ):
			print( x, "isosceles")
		
	
      
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
tipo de triangulo  isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:57:35) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
x = "tipo de triangulo "
print("Entradas:", a, ",", b, ",", c)


if(a<0 or b<0 or c<0 or a+b<=c or b+c<=a or a+c<=b):
	print(x, " invalido")

else:
	if( a == b == c):
		print( x, "equilatero")
		
	else:
		if(a == b != c or c == a != b or c == b != a ):
			print( x, "isosceles")
		
	
      
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
tipo de triangulo  isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:57:46) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
x = "tipo de triangulo "
print("Entradas:", a, ",", b, ",", c)


if(a<0 or b<0 or c<0 or a+b<=c or b+c<=a or a+c<=b):
	print(x, " invalido")

else:
	if( a == b == c):
		print( x, "equilatero")
		
	else:
		if(a == b != c or c == a != b or c == b != a ):
			print( x, "isosceles")
		
	
      
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
tipo de triangulo  isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:59:41) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
x = "tipo de triangulo "
print("Entradas:", a, ",", b, ",", c)


if(a<0 or b<0 or c<0 or a+b<=c or b+c<=a or a+c<=b):
	print(x, " invalido")

else:
	if( a == b == c):
		print( x, "equilatero")
		
	else:
		if(a == b != c or c == a != b or c == b != a ):
			print( x, "isosceles")
			
		else
			if( a != b or c != b )
				print( x, "escaleno")
		
	
      
-- ERROR:
File "XXXX", line 24
    else
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:59:58) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
x = "tipo de triangulo "
print("Entradas:", a, ",", b, ",", c)


if(a<0 or b<0 or c<0 or a+b<=c or b+c<=a or a+c<=b):
	print(x, " invalido")

else:
	if( a == b == c):
		print( x, "equilatero")
		
	else:
		if(a == b != c or c == a != b or c == b != a ):
			print( x, "isosceles")
			
		else:
			if( a != b or c != b ):
				print( x, "escaleno")
		
	
      
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
tipo de triangulo  isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:00:11) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
x = "tipo de triangulo "
print("Entradas:", a, ",", b, ",", c)


if(a<0 or b<0 or c<0 or a+b<=c or b+c<=a or a+c<=b):
	print(x, " invalido")

else:
	if( a == b == c):
		print( x, "equilatero")
		
	else:
		if(a == b != c or c == a != b or c == b != a ):
			print( x, "isosceles")
			
		else:
			if( a != b or c != b ):
				print( x, "escaleno")
		
	
      
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
tipo de triangulo  isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:01:19) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
x = "Tipo de triangulo: "
print("Entradas:", a, ",", b, ",", c)


if(a<0 or b<0 or c<0 or a+b<=c or b+c<=a or a+c<=b):
	print(x, " invalido")

else:
	if( a == b == c):
		print( x, "equilatero")
		
	else:
		if(a == b != c or c == a != b or c == b != a ):
			print( x, "isosceles")
			
		else:
			if( a != b or c != b ):
				print( x, "escaleno")
		
	
      
-- EXECUTION TIME:
0.202407
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:  isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo:  escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:   invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
