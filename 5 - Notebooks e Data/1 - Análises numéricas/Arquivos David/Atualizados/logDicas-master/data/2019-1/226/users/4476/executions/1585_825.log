== TEST (2019-04-01 23:00:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("valor do raio: "))
print(3,14*a** 2)
print((4/3)3,14*a** 3)
-- ERROR:
File "XXXX", line 6
    print((4/3)3,14*a** 3)
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 23:00:44) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("valor do raio: "))
print(3,14*a** 2)
print((4/3)3,14*(a** 3))
-- ERROR:
File "XXXX", line 6
    print((4/3)3,14*(a** 3))
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 23:02:05) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("valor do raio: "))
print(3,14*a** 2)
var1 = 3,14*a** 3
print(var1*4/3)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(var1*4/3)
TypeError: unsupported operand type(s) for /: 'tuple' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 23:05:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("valor do raio: "))
import math *
area = pi*(a**2)
volume = 4*pi(a**3) / 3 
-- ERROR:
File "XXXX", line 5
    import math *
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 23:06:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("valor do raio: "))
from math import *
area = pi*(a**2)
volume = 4*pi(a**3) / 3 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    volume = 4*pi(a**3) / 3 
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 23:06:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("valor do raio: "))
from math import *
area = pi*(a**2)
volume = (4*pi(a**3)) / 3 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    volume = (4*pi(a**3)) / 3 
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 23:07:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("valor do raio: "))
from math import *
area = pi*(a**2)
volume = (4*pi(a**3)) / 3 
print(area)
print(volume)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    volume = (4*pi(a**3)) / 3 
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 23:07:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("valor do raio: "))
from math import *
area = pi*(a**2)
volume = (4*pi(a**3))/3 
print(area)
print(volume)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    volume = (4*pi(a**3))/3 
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 23:08:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("valor do raio: "))
from math import *
area = pi*(a**2)
volume = (4*pi*(a**3))/3 
print(area)
print(volume)
-- OUTPUT:
63.61725123519331
381.7035074111598
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 23:09:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("valor do raio: "))
from math import *
area = pi*(a**2)
volume = (4*pi*(a**3))/3 
print(round(area, 3))
print(round(volume, 3))
-- OUTPUT:
63.617
381.704
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 23:09:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("valor do raio: "))
from math import *
area = pi*(a**2)
volume = (4*pi*(a**3))/3 
print(round(area, 3))
print(round(volume, 3))
-- EXECUTION TIME:
0.209801
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.617
381.704
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.388
7871.076
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
