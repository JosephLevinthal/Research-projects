== TEST (2019-06-11 10:32:40) 
-- CODE:
from numpy import*

f = array(eval(input("Faltas:")))

d = zeros(6, dtype = int)

for i in range(size(f)):
	if(f[i]==2):
		d[0] = d[0] + 1
	elif(f[i]==3):
		d[1] = d[1] + 1
	elif(f[i]==4):
		d[2] = d[2] + 1
	elif(f[i]==5):
		d[3] = d[3]+1
	elif(f[i]==6):
		d[4] = d[4]+1
	elif(f[i]==7):
		d[5] = d[5]+1

a = round(d[0]*100 / size(f), 1)
b = round(d[1]*100 / size(f), 1)
c = round(d[2]*100 / size(f), 1)
d = round(d[3]*100 / size(f), 1)
e = round(d[4]*100 / size(f), 1)
f = round(d[5]*100 / size(f), 1)

print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 10:33:45) 
-- CODE:
from numpy import*

f = array(eval(input("Faltas:")))

d = zeros(6, dtype = int)

for i in range(size(f)):
	if(f[i]==2):
		d[0] = d[0] + 1
	elif(f[i]==3):
		d[1] = d[1] + 1
	elif(f[i]==4):
		d[2] = d[2] + 1
	elif(f[i]==5):
		d[3] = d[3]+1
	elif(f[i]==6):
		d[4] = d[4]+1
	elif(f[i]==7):
		d[5] = d[5]+1

a = round((d[0]*100) / size(f), 1)
b = round((d[1]*100) / size(f), 1)
c = round((d[2]*100) / size(f), 1)
d = round((d[3]*100) / size(f), 1)
e = round((d[4]*100) / size(f), 1)
f = round((d[5]*100) / size(f), 1)

print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 10:34:09) 
-- CODE:
from numpy import*

f = array(eval(input("Faltas:")))

d = zeros(6, dtype = int)

for i in range(size(f)):
	if(f[i]==2):
		d[0] = d[0] + 1
	elif(f[i]==3):
		d[1] = d[1] + 1
	elif(f[i]==4):
		d[2] = d[2] + 1
	elif(f[i]==5):
		d[3] = d[3]+1
	elif(f[i]==6):
		d[4] = d[4]+1
	elif(f[i]==7):
		d[5] = d[5]+1

s = round((d[0]*100) / size(f), 1)
t = round((d[1]*100) / size(f), 1)
q = round((d[2]*100) / size(f), 1)
qq = round((d[3]*100) / size(f), 1)
ss = round((d[4]*100) / size(f), 1)
sss = round((d[5]*100) / size(f), 1)

print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 10:36:49) 
-- CODE:
from numpy import*

f = array(eval(input("Faltas:")))

d = zeros(6, dtype = int)

for i in range(size(f)):
	if(f[i]==2):
		d[0] = d[0] + 1
	elif(f[i]==3):
		d[1] = d[1] + 1
	elif(f[i]==4):
		d[2] = d[2] + 1
	elif(f[i]==5):
		d[3] = d[3]+1
	elif(f[i]==6):
		d[4] = d[4]+1
	elif(f[i]==7):
		d[5] = d[5]+1

d[0] = round((d[0]*100) / size(f), 1)
d[1] = round((d[1]*100) / size(f), 1)
d[2] = round((d[2]*100) / size(f), 1)
d[3] = round((d[3]*100) / size(f), 1)
d[4] = round((d[4]*100) / size(f), 1)
d[5] = round((d[5]*100) / size(f), 1)

print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 10:37:08) 
-- CODE:
from numpy import*

f = array(eval(input("Faltas:")))

d = zeros(6, dtype = int)

for i in range(size(f)):
	if(f[i]==2):
		d[0] = d[0] + 1
	elif(f[i]==3):
		d[1] = d[1] + 1
	elif(f[i]==4):
		d[2] = d[2] + 1
	elif(f[i]==5):
		d[3] = d[3]+1
	elif(f[i]==6):
		d[4] = d[4]+1
	elif(f[i]==7):
		d[5] = d[5]+1

d[0] = round((d[0]*100) / size(f), 1)
d[1] = round((d[1]*100) / size(f), 1)
d[2] = round((d[2]*100) / size(f), 1)
d[3] = round((d[3]*100) / size(f), 1)
d[4] = round((d[4]*100) / size(f), 1)
d[5] = round((d[5]*100) / size(f), 1)

print(d)
-- EXECUTION TIME:
1.1104
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[18  0  0 18 25 37]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[ 4  8 16 20 20 32]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[15  7 23  7 15 30]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 10:37:18) 
-- CODE:
from numpy import*

f = array(eval(input("Faltas:")))

d = zeros(6, dtype = int)

for i in range(size(f)):
	if(f[i]==2):
		d[0] = d[0] + 1
	elif(f[i]==3):
		d[1] = d[1] + 1
	elif(f[i]==4):
		d[2] = d[2] + 1
	elif(f[i]==5):
		d[3] = d[3]+1
	elif(f[i]==6):
		d[4] = d[4]+1
	elif(f[i]==7):
		d[5] = d[5]+1

d[0] = round((d[0]*100) / size(f), 1)
d[1] = round((d[1]*100) / size(f), 1)
d[2] = round((d[2]*100) / size(f), 1)
d[3] = round((d[3]*100) / size(f), 1)
d[4] = round((d[4]*100) / size(f), 1)
d[5] = round((d[5]*100) / size(f), 1)

print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 10:37:29) 
-- CODE:
from numpy import*

f = array(eval(input("Faltas:")))

d = zeros(6, dtype = int)

for i in range(size(f)):
	if(f[i]==2):
		d[0] = d[0] + 1
	elif(f[i]==3):
		d[1] = d[1] + 1
	elif(f[i]==4):
		d[2] = d[2] + 1
	elif(f[i]==5):
		d[3] = d[3]+1
	elif(f[i]==6):
		d[4] = d[4]+1
	elif(f[i]==7):
		d[5] = d[5]+1

d[0] = round((d[0]*100) / size(f), 1)
d[1] = round((d[1]*100) / size(f), 1)
d[2] = round((d[2]*100) / size(f), 1)
d[3] = round((d[3]*100) / size(f), 1)
d[4] = round((d[4]*100) / size(f), 1)
d[5] = round((d[5]*100) / size(f), 1)

print(d)
-- EXECUTION TIME:
1.07064
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[18  0  0 18 25 37]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[ 4  8 16 20 20 32]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[15  7 23  7 15 30]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 10:48:37) 
-- CODE:
from numpy import*

f = array(eval(input("Faltas:")))

d = zeros(6, dtype = int)

for i in range(size(f)):
	if(f[i]==2):
		d[0] = d[0] + 1
	elif(f[i]==3):
		d[1] = d[1] + 1
	elif(f[i]==4):
		d[2] = d[2] + 1
	elif(f[i]==5):
		d[3] = d[3]+1
	elif(f[i]==6):
		d[4] = d[4]+1
	elif(f[i]==7):
		d[5] = d[5]+1

d[0] = round((d[0]*100) / size(f), 1)
d[1] = round((d[1]*100) / size(f), 1)
d[2] = round((d[2]*100) / size(f), 1)
d[3] = round((d[3]*100) / size(f), 1)
d[4] = round((d[4]*100) / size(f), 1)
d[5] = round((d[5]*100) / size(f), 1)

print(d)
-- EXECUTION TIME:
0.860306
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[18  0  0 18 25 37]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[ 4  8 16 20 20 32]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[15  7 23  7 15 30]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 10:48:46) 
-- CODE:
from numpy import*

f = array(eval(input("Faltas:")))

d = zeros(6, dtype = int)

for i in range(size(f)):
	if(f[i]==2):
		d[0] = d[0] + 1
	elif(f[i]==3):
		d[1] = d[1] + 1
	elif(f[i]==4):
		d[2] = d[2] + 1
	elif(f[i]==5):
		d[3] = d[3]+1
	elif(f[i]==6):
		d[4] = d[4]+1
	elif(f[i]==7):
		d[5] = d[5]+1

d[0] = round((d[0]*100) / size(f), 1)
d[1] = round((d[1]*100) / size(f), 1)
d[2] = round((d[2]*100) / size(f), 1)
d[3] = round((d[3]*100) / size(f), 1)
d[4] = round((d[4]*100) / size(f), 1)
d[5] = round((d[5]*100) / size(f), 1)

print(d)
-- EXECUTION TIME:
1.02257
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
Faltas:[18  0  0 18 25 37]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
Faltas:[ 4  8 16 20 20 32]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
Faltas:[15  7 23  7 15 30]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 10:48:49) 
-- CODE:
from numpy import*

f = array(eval(input("Faltas:")))

d = zeros(6, dtype = int)

for i in range(size(f)):
	if(f[i]==2):
		d[0] = d[0] + 1
	elif(f[i]==3):
		d[1] = d[1] + 1
	elif(f[i]==4):
		d[2] = d[2] + 1
	elif(f[i]==5):
		d[3] = d[3]+1
	elif(f[i]==6):
		d[4] = d[4]+1
	elif(f[i]==7):
		d[5] = d[5]+1

d[0] = round((d[0]*100) / size(f), 1)
d[1] = round((d[1]*100) / size(f), 1)
d[2] = round((d[2]*100) / size(f), 1)
d[3] = round((d[3]*100) / size(f), 1)
d[4] = round((d[4]*100) / size(f), 1)
d[5] = round((d[5]*100) / size(f), 1)

print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 10:48:50) 
-- CODE:
from numpy import*

f = array(eval(input("Faltas:")))

d = zeros(6, dtype = int)

for i in range(size(f)):
	if(f[i]==2):
		d[0] = d[0] + 1
	elif(f[i]==3):
		d[1] = d[1] + 1
	elif(f[i]==4):
		d[2] = d[2] + 1
	elif(f[i]==5):
		d[3] = d[3]+1
	elif(f[i]==6):
		d[4] = d[4]+1
	elif(f[i]==7):
		d[5] = d[5]+1

d[0] = round((d[0]*100) / size(f), 1)
d[1] = round((d[1]*100) / size(f), 1)
d[2] = round((d[2]*100) / size(f), 1)
d[3] = round((d[3]*100) / size(f), 1)
d[4] = round((d[4]*100) / size(f), 1)
d[5] = round((d[5]*100) / size(f), 1)

print(d)
-- EXECUTION TIME:
0.783381
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[18  0  0 18 25 37]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[ 4  8 16 20 20 32]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
Faltas:[15  7 23  7 15 30]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 10:49:41) 
-- CODE:
from numpy import*

f = array(eval(input("Faltas:")))

d = zeros(6, dtype = int)

for i in range(size(f)):
	if(f[i]==2):
		d[0] = d[0] + 1
	elif(f[i]==3):
		d[1] = d[1] + 1
	elif(f[i]==4):
		d[2] = d[2] + 1
	elif(f[i]==5):
		d[3] = d[3]+1
	elif(f[i]==6):
		d[4] = d[4]+1
	elif(f[i]==7):
		d[5] = d[5]+1

d[0] = round((d[0]*100) / size(f), 1)
d[1] = round((d[1]*100) / size(f), 1)
d[2] = round((d[2]*100) / size(f), 1)
d[3] = round((d[3]*100) / size(f), 1)
d[4] = round((d[4]*100) / size(f), 1)
d[5] = round((d[5]*100) / size(f), 1)+"."

print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 10:50:10) 
-- CODE:
from numpy import*

f = array(eval(input("Faltas:")))

d = zeros(6, dtype = float)

for i in range(size(f)):
	if(f[i]==2):
		d[0] = d[0] + 1
	elif(f[i]==3):
		d[1] = d[1] + 1
	elif(f[i]==4):
		d[2] = d[2] + 1
	elif(f[i]==5):
		d[3] = d[3]+1
	elif(f[i]==6):
		d[4] = d[4]+1
	elif(f[i]==7):
		d[5] = d[5]+1

d[0] = round((d[0]*100) / size(f), 1)
d[1] = round((d[1]*100) / size(f), 1)
d[2] = round((d[2]*100) / size(f), 1)
d[3] = round((d[3]*100) / size(f), 1)
d[4] = round((d[4]*100) / size(f), 1)
d[5] = round((d[5]*100) / size(f), 1)

print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 10:50:17) 
-- CODE:
from numpy import*

f = array(eval(input("Faltas:")))

d = zeros(6, dtype = float)

for i in range(size(f)):
	if(f[i]==2):
		d[0] = d[0] + 1
	elif(f[i]==3):
		d[1] = d[1] + 1
	elif(f[i]==4):
		d[2] = d[2] + 1
	elif(f[i]==5):
		d[3] = d[3]+1
	elif(f[i]==6):
		d[4] = d[4]+1
	elif(f[i]==7):
		d[5] = d[5]+1

d[0] = round((d[0]*100) / size(f), 1)
d[1] = round((d[1]*100) / size(f), 1)
d[2] = round((d[2]*100) / size(f), 1)
d[3] = round((d[3]*100) / size(f), 1)
d[4] = round((d[4]*100) / size(f), 1)
d[5] = round((d[5]*100) / size(f), 1)

print(d)
-- EXECUTION TIME:
1.12935
-- TEST CASE 1:
---- input:
[2,2,2,5,5,5,6,6,6,6,7,7,7,7,7,7]
---- correct output:
[18.8 0. 0. 18.8 25. 37.5]
---- user output:
[18.8  0.   0.  18.8 25.  37.5]
-- TEST CASE 2:
---- input:
[2,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7]
---- correct output:
[ 4. 8. 16. 20. 20. 32.]
---- user output:
[ 4.  8. 16. 20. 20. 32.]
-- TEST CASE 3:
---- input:
[2,2,3,4,4,4,5,6,6,7,7,7,7]
---- correct output:
[15.4 7.7 23.1 7.7 15.4 30.8]
---- user output:
[15.4  7.7 23.1  7.7 15.4 30.8]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
