== TEST (2019-05-28 11:09:01) 
-- CODE:
from numpy import*
v1 = array(eval(input("digite as notas: ")))
v2 = array(eval(input("digite o nome: ")))
i = 0 #contador do vetor
a = 0 #aprovados
j = 0 #reprovados
k = 0 #soma
l = 0 #contador da posicão da soma
m = 0 #contador de posicao para soma
while(i<size(v1)):
	if(v1[i]==-1):
		j = j + 1
		i = i + 1
	if(v1[i]>=6):
		a = a + 1
	if(v1[i]<6):
		j = j + 1
		i = i + 1
	if(v1[m]!=-1):
		if(i==0):
			k = k + v1[l]/i+1
		elif(l>0):
			k = k + v1[l]/l
			l = l + 1
	m = m + 1
print(k)
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 11:10:04) 
-- CODE:
from numpy import*
v1 = array(eval(input("digite as notas: ")))
v2 = array(eval(input("digite o nome: ")))
i = 0 #contador do vetor
a = 0 #aprovados
j = 0 #reprovados
k = 0 #soma
l = 0 #contador da posicão da soma
m = 0 #contador de posicao para soma
while(i<size(v1)):
	if(v1[i]==-1):
		j = j + 1
		i = i + 1
	if(v1[i]>=6):
		a = a + 1
	if(v1[i]<6):
		j = j + 1
		i = i + 1
	if(v1[m]!=-1):
		if(i==0):
			k = k + v1[l]/l + 1
		elif(l>0):
			k = k + v1[l]/l
			l = l + 1
	m = m + 1
print(k)
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 11:11:34) 
-- CODE:
from numpy import*
v1 = array(eval(input("digite as notas: ")))
v2 = array(eval(input("digite o nome: ")))
i = 0 #contador do vetor
a = 0 #aprovados
j = 0 #reprovados
k = 0 #soma
l = 0 #contador da posicão da soma
m = 0 #contador de posicao para soma
while(i<size(v1)):
	if(v1[i]==-1):
		j = j + 1
		i = i + 1
	if(v1[i]>=6):
		a = a + 1
	if(v1[i]<6):
		j = j + 1
		i = i + 1
	if(v1[m]!=-1):
		if(i==0):
			k = k + v1[l]/l + 1
		elif(l>0):
			k = k + v1[l]/l
			l = l + 1
	m = m + 1
print(a)
print(j)
print(round(k,2))
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 11:11:51) 
-- CODE:
from numpy import*
v1 = array(eval(input("digite as notas: ")))
v2 = array(eval(input("digite o nome: ")))
i = 0 #contador do vetor
a = 0 #aprovados
j = 0 #reprovados
k = 0 #soma
l = 0 #contador da posicão da soma
m = 0 #contador de posicao para soma
while(i<size(v1)):
	if(v1[i]==-1):
		j = j + 1
		i = i + 1
	if(v1[i]>=6):
		a = a + 1
	if(v1[i]<6):
		j = j + 1
		i = i + 1
	if(v1[m]!=-1):
		if(i==0):
			k = k + v1[l]/l + 1
		elif(l>0):
			k = k + v1[l]/l
			l = l + 1
	m = m + 1
print(a)
print(j)
print(round(k,2))
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 11:12:02) 
-- CODE:
from numpy import*
v1 = array(eval(input("digite as notas: ")))
v2 = array(eval(input("digite o nome: ")))
i = 0 #contador do vetor
a = 0 #aprovados
j = 0 #reprovados
k = 0 #soma
l = 0 #contador da posicão da soma
m = 0 #contador de posicao para soma
while(i<size(v1)):
	if(v1[i]==-1):
		j = j + 1
		i = i + 1
	if(v1[i]>=6):
		a = a + 1
	if(v1[i]<6):
		j = j + 1
		i = i + 1
	if(v1[m]!=-1):
		if(i==0):
			k = k + v1[l]/l + 1
		elif(l>0):
			k = k + v1[l]/l
			l = l + 1
	m = m + 1
print(a)
print(j)
print(round(k,2))
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 11:13:20) 
-- CODE:
from numpy import*
v1 = array(eval(input("digite as notas: ")))
v2 = array(eval(input("digite o nome: ")))
i = 0 #contador do vetor
a = 0 #aprovados
j = 0 #reprovados
k = 0 #soma
l = 0 #contador da posicão da soma
m = 0 #contador de posicao para soma
while(i<size(v1)):
	if(v1[i]==-1):
		j = j + 1
	if(v1[i]>=6):
		a = a + 1
	if(v1[i]<6):
		j = j + 1
		i = i + 1
	if(v1[m]!=-1):
		if(i==0):
			k = k + v1[l]/l + 1
		elif(l>0):
			k = k + v1[l]/l
			l = l + 1
	m = m + 1
print(a)
print(j)
print(round(k,2))
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 11:13:40) 
-- CODE:
from numpy import*
v1 = array(eval(input("digite as notas: ")))
v2 = array(eval(input("digite o nome: ")))
i = 0 #contador do vetor
a = 0 #aprovados
j = 0 #reprovados
k = 0 #soma
l = 0 #contador da posicão da soma
m = 0 #contador de posicao para soma
while(i<size(v1)):
	if(v1[i]==-1):
		j = j + 1
	if(v1[i]>=6):
		a = a + 1
	if(v1[i]<6):
		j = j + 1
		i = i + 1
	if(v1[m]!=-1):
		if(i==0):
			k = k + v1[l]/l + 1
		elif(l>0):
			k = k + v1[l]/l
			l = l + 1
	m = m + 1
print(a)
print(j)
print(round(k,2))
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 11:14:28) 
-- CODE:
from numpy import*
v1 = array(eval(input("digite as notas: ")))
v2 = array(eval(input("digite o nome: ")))
i = 0 #contador do vetor
a = 0 #aprovados
j = 0 #reprovados
k = 0 #soma
l = 0 #contador da posicão da soma
m = 0 #contador de posicao para soma
while(i<size(v1)):
	if(v1[i]==-1):
		j = j + 1
	if(v1[i]>=6):
		a = a + 1
	if(v1[i]<6):
		i = i + 1
	if(v1[m]!=-1):
		if(i==0):
			k = k + v1[l]/l + 1
		elif(l>0):
			k = k + v1[l]/l
			l = l + 1
	m = m + 1
print(a)
print(j)
print(round(k,2))
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 11:15:26) 
-- CODE:
from numpy import*
v1 = array(eval(input("digite as notas: ")))
v2 = array(eval(input("digite o nome: ")))
i = 0 #contador do vetor
a = 0 #aprovados
j = 0 #reprovados
k = 0 #soma
l = 0 #contador da posicão da soma
m = 0 #contador de posicao para soma
while(i<size(v1)):
	if(v1[i]==-1):
		j = j + 1
	if(v1[i]>=6):
		a = a + 1
	if(v1[i]<6):
		i = i + 1
	if(v1[m]!=-1):
		if(i==0):
			k = k + v1[l]/l + 1
		elif(l>0):
			k = k + v1[l]/l
			l = l + 1
	m = m + 1
print(a)
print(j)
print(round(k,2))
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 11:31:02) 
-- CODE:
from numpy import*
v1 = array(eval(input("digite as notas: ")))
v2 = array(eval(input("digite o nome: ")))
i = 0 #contador do vetor
a = 0 #aprovados
fault = 0
soma = 0
l = 0 #contador da posicão da soma
m = 0 #contador de posicao para soma
maior = -1
while(i<size(v1)):
	if(v1[i]==-1):
		fault = fault + 1
	elif(v1[i]>=6):
		a = a + 1
	elif(v1[i]<6)and (v1[i]!=-1):
		reprov = reprov + 1
	if(v1[i]!=-1):
		soma = soma + v1[i]
	if v1[i]== max[v1]
		maior = i
	i = i + 1
print(fault)
print(a)
print(reprov)
print(round((soma/size(v1)-fault),2))
print(v2[maior])
-- ERROR:
File "XXXX", line 20
    if v1[i]== max[v1]
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 11:31:58) 
-- CODE:
from numpy import*
v1 = array(eval(input("digite as notas: ")))
v2 = array(eval(input("digite o nome: ")))
i = 0 #contador do vetor
a = 0 #aprovados
fault = 0
soma = 0
maior = -1
while(i<size(v1)):
	if(v1[i]==-1):
		fault = fault + 1
	elif(v1[i]>=6):
		a = a + 1
	elif(v1[i]<6)and (v1[i]!=-1):
		reprov = reprov + 1
	if(v1[i]!=-1):
		soma = soma + v1[i]
	if v1[i]== max(v1)
		maior = i
	i = i + 1
print(fault)
print(a)
print(reprov)
print(round((soma/size(v1)-fault),2))
print(v2[maior])
-- ERROR:
File "XXXX", line 18
    if v1[i]== max(v1)
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 11:32:49) 
-- CODE:
from numpy import*
v1 = array(eval(input("digite as notas: ")))
v2 = array(eval(input("digite o nome: ")))
i = 0 #contador do vetor
a = 0 #aprovados
fault = 0
soma = 0
maior = -1
while(i<size(v1)):
	if(v1[i]==-1):
		fault = fault + 1
	elif(v1[i]>=6):
		a = a + 1
	elif(v1[i]<6)and (v1[i]!=-1):
		reprov = reprov + 1
	if(v1[i]!=-1):
		soma = soma + v1[i]
	if v1[i]==max(v1)
		maior = i
	i = i + 1
print(fault)
print(a)
print(reprov)
print(round((soma/size(v1)-fault),2))
print(v2[maior])
-- ERROR:
File "XXXX", line 18
    if v1[i]==max(v1)
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 11:33:58) 
-- CODE:
from numpy import*
v1 = array(eval(input("digite as notas: ")))
v2 = array(eval(input("digite o nome: ")))
i = 0 #contador do vetor
a = 0 #aprovados
fault = 0
soma = 0
maior = -1
while(i<size(v1)):
	if(v1[i]==-1):
		fault = fault + 1
	elif(v1[i]>=6):
		a = a + 1
	elif(v1[i]<6)and (v1[i]!=-1):
		reprov = reprov + 1
	if(v1[i]!=-1):
		soma = soma + v1[i]
	if v1[i]==max(v1):
		maior = i
	i = i + 1
print(fault)
print(a)
print(reprov)
print(round((soma/size(v1)-fault),2))
print(v2[maior])
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 11:35:02) 
-- CODE:
from numpy import*
v1 = array(eval(input("digite as notas: ")))
v2 = array(eval(input("digite o nome: ")))
i = 0 #contador do vetor
a = 0 #aprovados
reprov = 0
fault = 0
soma = 0
maior = -1
while(i<size(v1)):
	if(v1[i]==-1):
		fault = fault + 1
	elif(v1[i]>=6):
		a = a + 1
	elif(v1[i]<6)and (v1[i]!=-1):
		reprov = reprov + 1
	if(v1[i]!=-1):
		soma = soma + v1[i]
	if v1[i]==max(v1):
		maior = i
	i = i + 1
print(fault)
print(a)
print(reprov)
print(round((soma/size(v1)-fault),2))
print(v2[maior])
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 11:39:27) 
-- CODE:
from numpy import*
v1 = array(eval(input("digite as notas: ")))
v2 = array(eval(input("digite o nome: ")))
i = 0 #contador do vetor
a = 0 #aprovados
reprov = 0
fault = 0
soma = 0
maior = -1
while(i<size(v1)):
	if(v1[i]==-1):
		fault = fault + 1
	elif(v1[i]>=6):
		a = a + 1
	elif(v1[i]<6)and (v1[i]!=-1):
		reprov = reprov + 1
	if(v1[i]!=-1):
		soma = soma + v1[i]
	if v1[i]==max(v1):
		maior = i
	i = i + 1
print(fault)
print(a)
print(reprov)
print(round((soma/(size(v1)-fault)),2))
print(v2[maior])
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 11:39:34) 
-- CODE:
from numpy import*
v1 = array(eval(input("digite as notas: ")))
v2 = array(eval(input("digite o nome: ")))
i = 0 #contador do vetor
a = 0 #aprovados
reprov = 0
fault = 0
soma = 0
maior = -1
while(i<size(v1)):
	if(v1[i]==-1):
		fault = fault + 1
	elif(v1[i]>=6):
		a = a + 1
	elif(v1[i]<6)and (v1[i]!=-1):
		reprov = reprov + 1
	if(v1[i]!=-1):
		soma = soma + v1[i]
	if v1[i]==max(v1):
		maior = i
	i = i + 1
print(fault)
print(a)
print(reprov)
print(round((soma/(size(v1)-fault)),2))
print(v2[maior])
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 11:40:56) 
-- CODE:
from numpy import*
v1 = array(eval(input("digite as notas: ")))
v2 = array(eval(input("digite o nome: ")))
i = 0 #contador do vetor
a = 0 #aprovados
reprov = 0
fault = 0
soma = 0
maior = -1
while(i<size(v1)):
	if(v1[i]==-1):
		fault = fault + 1
	elif(v1[i]>=6):
		a = a + 1
	elif(v1[i]<6)and (v1[i]!=-1):
		reprov = reprov + 1
	if(v1[i]!=-1):
		soma = soma + v1[i]
	if v1[i]==max(v1):
		maior = i
	i = i + 1
print(fault)
print(a)
print(reprov)
print(round((soma/(size(v1)-fault)),2))
print(v2[maior])
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 11:41:51) 
-- CODE:
from numpy import*
v1 = array(eval(input("digite as notas: ")))
v2 = array(eval(input("digite o nome: ")))
i = 0 #contador do vetor
a = 0 #aprovados
reprov = 0
fault = 0
soma = 0
maior = -1
while(i<size(v1)):
	if(v1[i]==-1):
		fault = fault + 1
	elif(v1[i]>=6):
		a = a + 1
	elif(v1[i]<6)and (v1[i]!=-1):
		reprov = reprov + 1
	if(v1[i]!=-1):
		soma = soma + v1[i]
	if v1[i]==max(v1):
		maior = i
	i = i + 1
print(fault)
print(a)
print(reprov)
print(round((soma/(size(v1)-fault)),2))
print(v2[maior])
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-28 11:42:27) 
-- CODE:
from numpy import*
v1 = array(eval(input("digite as notas: ")))
v2 = array(eval(input("digite o nome: ")))
i = 0 #contador do vetor
a = 0 #aprovados
reprov = 0
fault = 0
soma = 0
maior = -1
while(i<size(v1)):
	if(v1[i]==-1):
		fault = fault + 1
	elif(v1[i]>=6):
		a = a + 1
	elif(v1[i]<6)and (v1[i]!=-1):
		reprov = reprov + 1
	if(v1[i]!=-1):
		soma = soma + v1[i]
	if v1[i]==max(v1):
		maior = i
	i = i + 1
print(fault)
print(a)
print(reprov)
print(round((soma/(size(v1)-fault)),2))
print(v2[maior])
-- EXECUTION TIME:
0.405303
-- TEST CASE 1:
---- input:
[9,8,7,6,5,4,3,2,1,-1,-1,-1]
['A','B','C','D','E','F','G','H','I','J','K','L']
---- correct output:
3
4
5
5.0
A
---- user output:
3
4
5
5.0
A
-- TEST CASE 2:
---- input:
[-1,1.2,-1,2.3,-1,3.4,-1,4.5,-1,5.6,-1]
['ALICE','BENTO','CLARA','DAVI','ELSON','FLAVIO','GABI','HELOISA','IRIS','JULIA','KARLA']
---- correct output:
6
0
5
3.4
JULIA
---- user output:
6
0
5
3.4
JULIA
-- TEST CASE 3:
---- input:
[1.23,3.45,5.67,6.78,7.89,8.9,9,10,0,9.8,7.6]
['CLARA','DAVI','ELSON','ALICE','BENTO','FLAVIO','GABI','HELOISA','IRIS','JULIA','KARLA']
---- correct output:
0
7
4
6.39
HELOISA
---- user output:
0
7
4
6.39
HELOISA
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
