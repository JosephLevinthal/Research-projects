== TEST (2019-06-27 10:57:12) 
-- CODE:
from numpy import*
from numpy.linalg import*
mat=array([[0,2,11,6,15,11,1],
			  [2,0,7,12,4,2,15],
			  [11,7,0,11,8,3,13],
			  [6,12,11,0,10,2,1],
			 [15,4,8,10,0,5,13],
			 [11,2,3,2,5,0,14],
			 [1,15,13,1,13,14,0]
			 ])
v=array([111,222,333,444,555,666,777])
a=0
b=0
c=int(input("digite: "))
d=int(input("digite: "))
for i in range(7):
	if(c==v[i]):
		a=i
		
for j in range(7)
	if(d==v[j]):
		b=j
print(mat[a,b])




-- ERROR:
File "XXXX", line 20
    for j in range(7)
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 10:57:21) 
-- CODE:
from numpy import*
from numpy.linalg import*
mat=array([[0,2,11,6,15,11,1],
			  [2,0,7,12,4,2,15],
			  [11,7,0,11,8,3,13],
			  [6,12,11,0,10,2,1],
			 [15,4,8,10,0,5,13],
			 [11,2,3,2,5,0,14],
			 [1,15,13,1,13,14,0]
			 ])
v=array([111,222,333,444,555,666,777])
a=0
b=0
c=int(input("digite: "))
d=int(input("digite: "))
for i in range(7):
	if(c==v[i]):
		a=i
		
for j in range(7):
	if(d==v[j]):
		b=j
print(mat[a,b])




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-27 10:57:43) 
-- CODE:
from numpy import*
from numpy.linalg import*
mat=array([[0,2,11,6,15,11,1],
			  [2,0,7,12,4,2,15],
			  [11,7,0,11,8,3,13],
			  [6,12,11,0,10,2,1],
			 [15,4,8,10,0,5,13],
			 [11,2,3,2,5,0,14],
			 [1,15,13,1,13,14,0]
			 ])
v=array([111,222,333,444,555,666,777])
a=0
b=0
c=int(input("digite: "))
d=int(input("digite: "))
for i in range(7):
	if(c==v[i]):
		a=i
		
for j in range(7):
	if(d==v[j]):
		b=j
print(mat[a,b])




-- EXECUTION TIME:
1.09045
-- TEST CASE 1:
---- input:
777
666
---- correct output:
14
---- user output:
14
-- TEST CASE 2:
---- input:
555
111
---- correct output:
15
---- user output:
15
-- TEST CASE 3:
---- input:
333
777
---- correct output:
13
---- user output:
13
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
