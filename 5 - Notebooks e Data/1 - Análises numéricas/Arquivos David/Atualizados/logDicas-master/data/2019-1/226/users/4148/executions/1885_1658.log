== TEST (2019-07-09 10:17:13) 
-- CODE:
from numpy import*

a = input('').upper()

vet = zeros(size(a), dtype=int)

for i in range(a):
	if a[i]=='CHN':
		vet[0] = vet[0] + 1
   elif a[i] == 'JPN':
		vet[1] == vet[1]+1
	elif a[i] == 'KOR':
		vet[2]=vet[2]+1
	elif a[i] == 'MGL':
		vet[3]=vet[3]+1
	elif a[i]== 'THA':
		vet[4]==vet[4]+1
	
print(max(vet))
print(vet)
-- ERROR:
File "XXXX", line 10
    elif a[i] == 'JPN':
                      ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 10:17:34) 
-- CODE:
from numpy import*

a = input('').upper()

vet = zeros(size(a), dtype=int)

for i in range(a):
	if a[i]=='CHN':
		vet[0] = vet[0] + 1
   elif a[i] == 'JPN':
		vet[1] == vet[1]+1
	elif a[i] == 'KOR':
		vet[2]=vet[2]+1
	elif a[i] == 'MGL':
		vet[3]=vet[3]+1
	elif a[i]== 'THA':
		vet[4]==vet[4]+1
	
print(max(vet))
print(vet)
-- ERROR:
File "XXXX", line 10
    elif a[i] == 'JPN':
                      ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 10:17:35) 
-- CODE:
from numpy import*

a = input('').upper()

vet = zeros(size(a), dtype=int)

for i in range(a):
	if a[i]=='CHN':
		vet[0] = vet[0] + 1
   elif a[i] == 'JPN':
		vet[1] == vet[1]+1
	elif a[i] == 'KOR':
		vet[2]=vet[2]+1
	elif a[i] == 'MGL':
		vet[3]=vet[3]+1
	elif a[i]== 'THA':
		vet[4]==vet[4]+1
	
print(max(vet))
print(vet)
-- ERROR:
File "XXXX", line 10
    elif a[i] == 'JPN':
                      ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 10:17:35) 
-- CODE:
from numpy import*

a = input('').upper()

vet = zeros(size(a), dtype=int)

for i in range(a):
	if a[i]=='CHN':
		vet[0] = vet[0] + 1
   elif a[i] == 'JPN':
		vet[1] == vet[1]+1
	elif a[i] == 'KOR':
		vet[2]=vet[2]+1
	elif a[i] == 'MGL':
		vet[3]=vet[3]+1
	elif a[i]== 'THA':
		vet[4]==vet[4]+1
	
print(max(vet))
print(vet)
-- ERROR:
File "XXXX", line 10
    elif a[i] == 'JPN':
                      ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 10:17:35) 
-- CODE:
from numpy import*

a = input('').upper()

vet = zeros(size(a), dtype=int)

for i in range(a):
	if a[i]=='CHN':
		vet[0] = vet[0] + 1
   elif a[i] == 'JPN':
		vet[1] == vet[1]+1
	elif a[i] == 'KOR':
		vet[2]=vet[2]+1
	elif a[i] == 'MGL':
		vet[3]=vet[3]+1
	elif a[i]== 'THA':
		vet[4]==vet[4]+1
	
print(max(vet))
print(vet)
-- ERROR:
File "XXXX", line 10
    elif a[i] == 'JPN':
                      ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 10:18:32) 
-- CODE:
from numpy import*

a = input('').upper()

vet = zeros(size(a), dtype=int)

for i in range(a):
	if a[i]=='CHN':
		vet[0] = vet[0] + 1
   elif a[i] =='JPN:
		vet[1] == vet[1]+1
	elif a[i] == 'KOR':
		vet[2]=vet[2]+1
	elif a[i] == 'MGL':
		vet[3]=vet[3]+1
	elif a[i]== 'THA':
		vet[4]==vet[4]+1
	
print(max(vet))
print(vet)
-- ERROR:
File "XXXX", line 10
    elif a[i] =='JPN:
                    ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 10:18:37) 
-- CODE:
from numpy import*

a = input('').upper()

vet = zeros(size(a), dtype=int)

for i in range(a):
	if a[i]=='CHN':
		vet[0] = vet[0] + 1
   elif a[i] =='JPN':
		vet[1] == vet[1]+1
	elif a[i] == 'KOR':
		vet[2]=vet[2]+1
	elif a[i] == 'MGL':
		vet[3]=vet[3]+1
	elif a[i]== 'THA':
		vet[4]==vet[4]+1
	
print(max(vet))
print(vet)
-- ERROR:
File "XXXX", line 10
    elif a[i] =='JPN':
                     ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 10:19:02) 
-- CODE:
from numpy import*
from mach import*

a = input('').upper()

vet = zeros(size(a), dtype=int)

for i in range(a):
	if a[i]=='CHN':
		vet[0] = vet[0] + 1
   elif a[i] =='JPN':
		vet[1] == vet[1]+1
	elif a[i] == 'KOR':
		vet[2]=vet[2]+1
	elif a[i] == 'MGL':
		vet[3]=vet[3]+1
	elif a[i]== 'THA':
		vet[4]==vet[4]+1
	
print(max(vet))
print(vet)
-- ERROR:
File "XXXX", line 11
    elif a[i] =='JPN':
                     ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 10:19:04) 
-- CODE:
from numpy import*
from mach import*

a = input('').upper()

vet = zeros(size(a), dtype=int)

for i in range(a):
	if a[i]=='CHN':
		vet[0] = vet[0] + 1
   elif a[i] =='JPN':
		vet[1] == vet[1]+1
	elif a[i] == 'KOR':
		vet[2]=vet[2]+1
	elif a[i] == 'MGL':
		vet[3]=vet[3]+1
	elif a[i]== 'THA':
		vet[4]==vet[4]+1
	
print(max(vet))
print(vet)
-- ERROR:
File "XXXX", line 11
    elif a[i] =='JPN':
                     ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 10:19:04) 
-- CODE:
from numpy import*
from mach import*

a = input('').upper()

vet = zeros(size(a), dtype=int)

for i in range(a):
	if a[i]=='CHN':
		vet[0] = vet[0] + 1
   elif a[i] =='JPN':
		vet[1] == vet[1]+1
	elif a[i] == 'KOR':
		vet[2]=vet[2]+1
	elif a[i] == 'MGL':
		vet[3]=vet[3]+1
	elif a[i]== 'THA':
		vet[4]==vet[4]+1
	
print(max(vet))
print(vet)
-- ERROR:
File "XXXX", line 11
    elif a[i] =='JPN':
                     ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 10:19:04) 
-- CODE:
from numpy import*
from mach import*

a = input('').upper()

vet = zeros(size(a), dtype=int)

for i in range(a):
	if a[i]=='CHN':
		vet[0] = vet[0] + 1
   elif a[i] =='JPN':
		vet[1] == vet[1]+1
	elif a[i] == 'KOR':
		vet[2]=vet[2]+1
	elif a[i] == 'MGL':
		vet[3]=vet[3]+1
	elif a[i]== 'THA':
		vet[4]==vet[4]+1
	
print(max(vet))
print(vet)
-- ERROR:
File "XXXX", line 11
    elif a[i] =='JPN':
                     ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 10:19:05) 
-- CODE:
from numpy import*
from mach import*

a = input('').upper()

vet = zeros(size(a), dtype=int)

for i in range(a):
	if a[i]=='CHN':
		vet[0] = vet[0] + 1
   elif a[i] =='JPN':
		vet[1] == vet[1]+1
	elif a[i] == 'KOR':
		vet[2]=vet[2]+1
	elif a[i] == 'MGL':
		vet[3]=vet[3]+1
	elif a[i]== 'THA':
		vet[4]==vet[4]+1
	
print(max(vet))
print(vet)
-- ERROR:
File "XXXX", line 11
    elif a[i] =='JPN':
                     ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 10:19:25) 
-- CODE:
from numpy import*
from mach import*

a = input('').upper()

vet = zeros(size(a), dtype=int)

for i in range(a):
	if a[i]=='CHN':
		vet[0] = vet[0] + 1
 
	elif a[i] == 'KOR':
		vet[2]=vet[2]+1
	elif a[i] == 'MGL':
		vet[3]=vet[3]+1
	elif a[i]== 'THA':
		vet[4]==vet[4]+1
	
print(max(vet))
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 10:20:04) 
-- CODE:
from numpy import*
from mach import*

a = input('').upper()

vet = zeros(size(a), dtype=int)

for i in range(a):
	if a[i]=='CHN':
		vet[0] = vet[0] + 1
	elif a[i]=='JPN':
		vet[1]=vet[1]+1
 
	elif a[i] == 'KOR':
		vet[2]=vet[2]+1
	elif a[i] == 'MGL':
		vet[3]=vet[3]+1
	elif a[i]== 'THA':
		vet[4]==vet[4]+1
	
print(max(vet))
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 10:20:12) 
-- CODE:
from numpy import*


a = input('').upper()

vet = zeros(size(a), dtype=int)

for i in range(a):
	if a[i]=='CHN':
		vet[0] = vet[0] + 1
	elif a[i]=='JPN':
		vet[1]=vet[1]+1
 
	elif a[i] == 'KOR':
		vet[2]=vet[2]+1
	elif a[i] == 'MGL':
		vet[3]=vet[3]+1
	elif a[i]== 'THA':
		vet[4]==vet[4]+1
	
print(max(vet))
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 10:21:08) 
-- CODE:
from numpy import*


a = input('').upper()

vet = zeros(size(a), dtype=int)

for i in range(a).split(''):
	if a[i]=='CHN':
		vet[0] = vet[0] + 1
	elif a[i]=='JPN':
		vet[1]=vet[1]+1
 
	elif a[i] == 'KOR':
		vet[2]=vet[2]+1
	elif a[i] == 'MGL':
		vet[3]=vet[3]+1
	elif a[i]== 'THA':
		vet[4]==vet[4]+1
	
print(max(vet))
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 10:22:09) 
-- CODE:
from numpy import*


a = input('').split(',')

vet = zeros(size(a), dtype=int)

for i in range(a):
	if a[i]=='CHN':
		vet[0] = vet[0] + 1
	elif a[i]=='JPN':
		vet[1]=vet[1]+1
 
	elif a[i] == 'KOR':
		vet[2]=vet[2]+1
	elif a[i] == 'MGL':
		vet[3]=vet[3]+1
	elif a[i]== 'THA':
		vet[4]==vet[4]+1
	
print(max(vet))
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 10:22:27) 
-- CODE:
from numpy import*


a = input('').split(',')

vet = zeros(size(a), dtype=int)

for i in range(size(a)):
	if a[i]=='CHN':
		vet[0] = vet[0] + 1
	elif a[i]=='JPN':
		vet[1]=vet[1]+1
 
	elif a[i] == 'KOR':
		vet[2]=vet[2]+1
	elif a[i] == 'MGL':
		vet[3]=vet[3]+1
	elif a[i]== 'THA':
		vet[4]==vet[4]+1
	
print(max(vet))
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 10:23:11) 
-- CODE:
from numpy import*


a = input('').split(',')

vet = zeros(size(a), dtype=int)

for i in range(size(a)):
	if a[i]=='CHN':
		vet[0] = vet[0] + 1
	elif a[i]=='JPN':
		vet[1]=vet[1]+1
 
	elif a[i] == 'KOR':
		vet[2]=vet[2]+1
	elif a[i] == 'MGL':
		vet[3]=vet[3]+1
	elif a[i]== 'THA':
		vet[4]=vet[4]+1
	
print(max(vet))
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-09 10:23:18) 
-- CODE:
from numpy import*


a = input('').split(',')

vet = zeros(size(a), dtype=int)

for i in range(size(a)):
	if a[i]=='CHN':
		vet[0] = vet[0] + 1
	elif a[i]=='JPN':
		vet[1]=vet[1]+1
 
	elif a[i] == 'KOR':
		vet[2]=vet[2]+1
	elif a[i] == 'MGL':
		vet[3]=vet[3]+1
	elif a[i]== 'THA':
		vet[4]=vet[4]+1
	
print(max(vet))
print(vet)
-- EXECUTION TIME:
0.745597
-- TEST CASE 1:
---- input:
JPN,CHN,JPN,JPN,JPN,CHN,THA,MGL,CHN,CHN
---- correct output:
4
[4 4 0 1 1]
---- user output:
4
[4 4 0 1 1 0 0 0 0 0]
-- TEST CASE 2:
---- input:
MGL,KOR,CHN,MGL,JPN,JPN,THA,MGL,MGL,MGL,THA,JPN,MGL,CHN,CHN,THA,KOR,MGL,JPN,KOR,JPN,JPN,MGL,JPN
---- correct output:
8
[3 7 3 8 3]
---- user output:
8
[3 7 3 8 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
-- TEST CASE 3:
---- input:
KOR,THA,KOR,THA,KOR,CHN,MGL,MGL,CHN,CHN,KOR
---- correct output:
4
[3 0 4 2 2]
---- user output:
4
[3 0 4 2 2 0 0 0 0 0 0]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-09 10:23:25) 
-- CODE:
from numpy import*


a = input('').split(',')

vet = zeros(size(a), dtype=int)

for i in range(size(a)):
	if a[i]=='CHN':
		vet[0] = vet[0] + 1
	elif a[i]=='JPN':
		vet[1]=vet[1]+1
 
	elif a[i] == 'KOR':
		vet[2]=vet[2]+1
	elif a[i] == 'MGL':
		vet[3]=vet[3]+1
	elif a[i]== 'THA':
		vet[4]=vet[4]+1
	
print(max(vet))
print(vet)
-- EXECUTION TIME:
0.88213
-- TEST CASE 1:
---- input:
JPN,CHN,JPN,JPN,JPN,CHN,THA,MGL,CHN,CHN
---- correct output:
4
[4 4 0 1 1]
---- user output:
4
[4 4 0 1 1 0 0 0 0 0]
-- TEST CASE 2:
---- input:
MGL,KOR,CHN,MGL,JPN,JPN,THA,MGL,MGL,MGL,THA,JPN,MGL,CHN,CHN,THA,KOR,MGL,JPN,KOR,JPN,JPN,MGL,JPN
---- correct output:
8
[3 7 3 8 3]
---- user output:
8
[3 7 3 8 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
-- TEST CASE 3:
---- input:
KOR,THA,KOR,THA,KOR,CHN,MGL,MGL,CHN,CHN,KOR
---- correct output:
4
[3 0 4 2 2]
---- user output:
4
[3 0 4 2 2 0 0 0 0 0 0]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 10:23:27) 
-- CODE:
from numpy import*


a = input('').split(',')

vet = zeros(size(a), dtype=int)

for i in range(size(a)):
	if a[i]=='CHN':
		vet[0] = vet[0] + 1
	elif a[i]=='JPN':
		vet[1]=vet[1]+1
 
	elif a[i] == 'KOR':
		vet[2]=vet[2]+1
	elif a[i] == 'MGL':
		vet[3]=vet[3]+1
	elif a[i]== 'THA':
		vet[4]=vet[4]+1
	
print(max(vet))
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 10:25:17) 
-- CODE:
from numpy import*


a = input('').split(',')

vet = zeros(5, dtype=int)

for i in range(size(a)):
	if a[i]=='CHN':
		vet[0] = vet[0] + 1
	elif a[i]=='JPN':
		vet[1]=vet[1]+1
 
	elif a[i] == 'KOR':
		vet[2]=vet[2]+1
	elif a[i] == 'MGL':
		vet[3]=vet[3]+1
	elif a[i]== 'THA':
		vet[4]=vet[4]+1
	
print(max(vet))
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-09 10:25:31) 
-- CODE:
from numpy import*


a = input('').split(',')

vet = zeros(5, dtype=int)

for i in range(size(a)):
	if a[i]=='CHN':
		vet[0] = vet[0] + 1
	elif a[i]=='JPN':
		vet[1]=vet[1]+1
 
	elif a[i] == 'KOR':
		vet[2]=vet[2]+1
	elif a[i] == 'MGL':
		vet[3]=vet[3]+1
	elif a[i]== 'THA':
		vet[4]=vet[4]+1
	
print(max(vet))
print(vet)
-- EXECUTION TIME:
0.745392
-- TEST CASE 1:
---- input:
JPN,CHN,JPN,JPN,JPN,CHN,THA,MGL,CHN,CHN
---- correct output:
4
[4 4 0 1 1]
---- user output:
4
[4 4 0 1 1]
-- TEST CASE 2:
---- input:
MGL,KOR,CHN,MGL,JPN,JPN,THA,MGL,MGL,MGL,THA,JPN,MGL,CHN,CHN,THA,KOR,MGL,JPN,KOR,JPN,JPN,MGL,JPN
---- correct output:
8
[3 7 3 8 3]
---- user output:
8
[3 7 3 8 3]
-- TEST CASE 3:
---- input:
KOR,THA,KOR,THA,KOR,CHN,MGL,MGL,CHN,CHN,KOR
---- correct output:
4
[3 0 4 2 2]
---- user output:
4
[3 0 4 2 2]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
