== TEST (2019-06-11 11:15:35) 
-- CODE:
from numpy import *
vet1 = array(eval(input("Vetor de gols do seu time: ")))
vet2 = array(eval(input("Vetor de gols do time adversÃ¡rio: ")))
soma1 = 0
soma2 = 0
soma3 = 0
vet3 = zeros(3, dtype=int)
for i in range(size(vet1)):
	if (vet1[i] > vet2[i]):
		soma1 = soma1 + 1
	elif (vet1[i] == vet2[i]):
		soma2 = soma2 + 1
	elif (vet1[i] < vet2[i]):
		soma3 = soma3 + 1
vet3[0] = soma1
vet3[1] = soma2
vet3[2] = soma3
print(vet3)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 11:16:06) 
-- CODE:
from numpy import *
vet1 = array(eval(input("Vetor de gols do seu time: ")))
vet2 = array(eval(input("Vetor de gols do time adversario: ")))
soma1 = 0
soma2 = 0
soma3 = 0
vet3 = zeros(3, dtype=int)
for i in range(size(vet1)):
	if (vet1[i] > vet2[i]):
		soma1 = soma1 + 1
	elif (vet1[i] == vet2[i]):
		soma2 = soma2 + 1
	elif (vet1[i] < vet2[i]):
		soma3 = soma3 + 1
vet3[0] = soma1
vet3[1] = soma2
vet3[2] = soma3
print(vet3)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 11:16:32) 
-- CODE:
from numpy import *
vet1 = array(eval(input("Vetor de gols do seu time: ")))
vet2 = array(eval(input("Vetor de gols do time adversario: ")))
soma1 = 0
soma2 = 0
soma3 = 0
vet3 = zeros(3, dtype=int)
for i in range(size(vet1)):
	if (vet1[i] > vet2[i]):
		soma1 = soma1 + 1
	elif (vet1[i] == vet2[i]):
		soma2 = soma2 + 1
	elif (vet1[i] < vet2[i]):
		soma3 = soma3 + 1
vet3[0] = soma1
vet3[1] = soma2
vet3[2] = soma3
print(vet3)

-- EXECUTION TIME:
1.06684
-- TEST CASE 1:
---- input:
[2,3,2,4,3,5,3,4,2,3,1,0]
[3,3,1,0,2,3,3,0,1,2,1,1]
---- correct output:
[7 3 2]
---- user output:
[7 3 2]
-- TEST CASE 2:
---- input:
[1,2,1,2,1,2,1,2,0]
[3,5,3,3,3,3,3,3,3]
---- correct output:
[0 0 9]
---- user output:
[0 0 9]
-- TEST CASE 3:
---- input:
[1,2,2,2,2,1,1,2,2,1,1,2,2]
[0,1,1,1,0,0,0,0,0,0,1,1,1]
---- correct output:
[12 1 0]
---- user output:
[12  1  0]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
