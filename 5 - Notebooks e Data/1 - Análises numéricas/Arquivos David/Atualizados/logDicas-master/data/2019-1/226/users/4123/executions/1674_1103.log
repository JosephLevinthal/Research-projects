== TEST (2019-04-25 11:34:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input())
a = float(input())
b = float(input())
if a<=x<=b:
	print(x," pertence ao intervalo ",a,", ",b)
elif not(a<=x<=b):
	print(x," nao pertence ao intervalo ",a,", ",b)
else:
	print("Entradas",a," e ",b," invalidas")

-- OUTPUT:
2.0  nao pertence ao intervalo  3.0 ,  4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:34:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input())
a = float(input())
b = float(input())
if a<=x<=b:
	print(x," pertence ao intervalo ",a,", ",b)
elif not(a<=x<=b):
	print(x," nao pertence ao intervalo ",a,", ",b)
else:
	print("Entradas",a," e ",b," invalidas")

-- OUTPUT:
2.0  nao pertence ao intervalo  3.0 ,  4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:35:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input())
a = float(input())
b = float(input())
if a<=x<=b:
	print(x," pertence ao intervalo ",a,", ",b)
elif not(a<=x<=b) and b>a:
	print(x," nao pertence ao intervalo ",a,", ",b)
else:
	print("Entradas",a," e ",b," invalidas")

-- OUTPUT:
2.0  nao pertence ao intervalo  3.0 ,  4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:35:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input())
a = float(input())
b = float(input())
if a<=x<=b:
	print(x," pertence ao intervalo ",a,", ",b)
elif not(a<=x<=b) and b>a:
	print(x," nao pertence ao intervalo ",a,", ",b)
else:
	print("Entradas",a," e ",b," invalidas")

-- EXECUTION TIME:
0.150724
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0  nao pertence ao intervalo  3.0 ,  4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5  e  3.5  invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5  pertence ao intervalo  1.1 ,  22.2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
