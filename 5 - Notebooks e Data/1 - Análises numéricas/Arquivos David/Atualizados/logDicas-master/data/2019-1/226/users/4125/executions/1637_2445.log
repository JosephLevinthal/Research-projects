== TEST (2019-04-11 11:11:17) 
-- CODE:
x = (input(" digite:"))
v = float(input("digite a temp: "))
C = (5/9)*(v-32)
f = (v*9/5) + 32
if (x == "F"):
	print(c)
else:
	print(f)
	
-- OUTPUT:
608.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 11:12:50) 
-- CODE:
x = (input(" digite:"))
v = float(input("digite a temp: "))
C = (5/9)*(v-32)
f = (v*(9/5) + 32
if (x.upper() == "F"):
	x1 = c
else:
	x1 = f

print(round(x1,2))
-- ERROR:
File "XXXX", line 5
    if (x.upper() == "F"):
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 11:13:00) 
-- CODE:
x = (input(" digite:"))
v = float(input("digite a temp: "))
C = (5/9)*(v-32)
f = (v*(9/5) + 32
if (x.upper() == "C"):
	x1 = c
else:
	x1 = f

print(round(x1,2))
-- ERROR:
File "XXXX", line 5
    if (x.upper() == "C"):
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 11:13:23) 
-- CODE:
x = (input(" digite:"))
v = float(input("digite a temp: "))
C = (5/9)*(v-32)
f = (v*(9/5) + 32)
if (x.upper() == "F"):
	x1 = c
else:
	x1 = f

print(round(x1,2))
-- OUTPUT:
608.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 11:13:41) 
-- CODE:
x = (input(" digite:"))
v = float(input("digite a temp: "))
c = (5/9)*(v-32)
f = (v*(9/5) + 32)
if (x.upper() == "F"):
	x1 = c
else:
	x1 = f

print(round(x1,2))
-- OUTPUT:
608.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 11:13:47) 
-- CODE:
x = (input(" digite:"))
v = float(input("digite a temp: "))
c = (5/9)*(v-32)
f = (v*(9/5) + 32)
if (x.upper() == "F"):
	x1 = c
else:
	x1 = f

print(round(x1,2))
-- EXECUTION TIME:
0.191287
-- TEST CASE 1:
---- input:
C
320
---- correct output:
608.0
---- user output:
608.0
-- TEST CASE 2:
---- input:
F
320
---- correct output:
160.0
---- user output:
160.0
-- TEST CASE 3:
---- input:
C
0
---- correct output:
32.0
---- user output:
32.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
