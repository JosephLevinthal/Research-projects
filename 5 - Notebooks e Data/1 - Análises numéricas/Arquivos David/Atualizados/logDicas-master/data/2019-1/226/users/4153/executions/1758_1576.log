== TEST (2019-05-23 10:36:51) 
-- CODE:
from numpy import *
# Sequencia de jogadas de Eusapia
v1 = array(eval(int(input("Insira um vetor: "))))
# Jogadas correspondentes de Barsanulfo
v2 = array(eval(int(input("Insira um vetor: "))))

pedra = 11
papel = 22
tesoura = 33

print(size(v2))

i = 0
somae = 0
somab = 0
somai = 0
while(i < size(v2)):
	if(v1[i] == v2[i]):
		somai = somai + 1
	elif((v1[i] == 11) and (v2[i] == 33) or (v1[i] == 22) and (v2[i] == 11) or (v1[i] == 33) and (v2[i] == 22)):
		somae = somae + 1
	else:
		somab = somab + 1
	i = i + 1
if(somae > somab):
	print("EUSAPIA")
elif(somae == somab):
	peinr("EMPATE")
else:
	print("BARSANULFO")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 10:37:28) 
-- CODE:
from numpy import *
# Sequencia de jogadas de Eusapia
v1 = array(eval(input("Insira um vetor: ")))
# Jogadas correspondentes de Barsanulfo
v2 = array(eval(input("Insira um vetor: ")))

pedra = 11
papel = 22
tesoura = 33

print(size(v2))

i = 0
somae = 0
somab = 0
somai = 0
while(i < size(v2)):
	if(v1[i] == v2[i]):
		somai = somai + 1
	elif((v1[i] == 11) and (v2[i] == 33) or (v1[i] == 22) and (v2[i] == 11) or (v1[i] == 33) and (v2[i] == 22)):
		somae = somae + 1
	else:
		somab = somab + 1
	i = i + 1
if(somae > somab):
	print("EUSAPIA")
elif(somae == somab):
	peinr("EMPATE")
else:
	print("BARSANULFO")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 10:37:44) 
-- CODE:
from numpy import *
# Sequencia de jogadas de Eusapia
v1 = array(eval(input("Insira um vetor: ")))
# Jogadas correspondentes de Barsanulfo
v2 = array(eval(input("Insira um vetor: ")))

pedra = 11
papel = 22
tesoura = 33

print(size(v2))

i = 0
somae = 0
somab = 0
somai = 0
while(i < size(v2)):
	if(v1[i] == v2[i]):
		somai = somai + 1
	elif((v1[i] == 11) and (v2[i] == 33) or (v1[i] == 22) and (v2[i] == 11) or (v1[i] == 33) and (v2[i] == 22)):
		somae = somae + 1
	else:
		somab = somab + 1
	i = i + 1
if(somae > somab):
	print("EUSAPIA")
elif(somae == somab):
	peinr("EMPATE")
else:
	print("BARSANULFO")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 10:38:17) 
-- CODE:
from numpy import *
# Sequencia de jogadas de Eusapia
v1 = array(eval(input("Insira um vetor: ")))
# Jogadas correspondentes de Barsanulfo
v2 = array(eval(input("Insira um vetor: ")))

pedra = 11
papel = 22
tesoura = 33

print(size(v2))

i = 0
somae = 0
somab = 0
somai = 0
while(i < size(v2)):
	if(v1[i] == v2[i]):
		somai = somai + 1
	elif((v1[i] == 11) and (v2[i] == 33) or (v1[i] == 22) and (v2[i] == 11) or (v1[i] == 33) and (v2[i] == 22)):
		somae = somae + 1
	else:
		somab = somab + 1
	i = i + 1
if(somae > somab):
	print("EUSAPIA")
elif(somae == somab):
	print("EMPATE")
else:
	print("BARSANULFO")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-23 10:38:31) 
-- CODE:
from numpy import *
# Sequencia de jogadas de Eusapia
v1 = array(eval(input("Insira um vetor: ")))
# Jogadas correspondentes de Barsanulfo
v2 = array(eval(input("Insira um vetor: ")))

pedra = 11
papel = 22
tesoura = 33

print(size(v2))

i = 0
somae = 0
somab = 0
somai = 0
while(i < size(v2)):
	if(v1[i] == v2[i]):
		somai = somai + 1
	elif((v1[i] == 11) and (v2[i] == 33) or (v1[i] == 22) and (v2[i] == 11) or (v1[i] == 33) and (v2[i] == 22)):
		somae = somae + 1
	else:
		somab = somab + 1
	i = i + 1
if(somae > somab):
	print("EUSAPIA")
elif(somae == somab):
	print("EMPATE")
else:
	print("BARSANULFO")
	
-- EXECUTION TIME:
0.287367
-- TEST CASE 1:
---- input:
[33,22,33,22,11,11,33,22,11,11,22,33]
[22,33,22,11,11,33,22,11,11,22,33,33]
---- correct output:
12
EUSAPIA
---- user output:
12
EUSAPIA
-- TEST CASE 2:
---- input:
[33,22,33,11,33,22,11,22,33,11]
[11,33,22,33,11,33,22,11,22,33]
---- correct output:
10
EMPATE
---- user output:
10
EMPATE
-- TEST CASE 3:
---- input:
[33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11,22]
[11,33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11]
---- correct output:
18
BARSANULFO
---- user output:
18
BARSANULFO
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
