== TEST (2019-04-15 12:41:01) 
-- CODE:
nome1 = input("Insira o nome: ")
nome2 = input("Insira o nome: ")

if((nome1 > nome2).upper()):
	print(nome1)
	print(nome2)
else:
	print(nome2)
   print(nome1)



-- ERROR:
File "XXXX", line 9
    print(nome1)
               ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:41:15) 
-- CODE:
nome1 = input("Insira o nome: ")
nome2 = input("Insira o nome: ")

if((nome1 > nome2).upper()):
	print(nome1)
	print(nome2)
else:
	print(nome2)
   print(nome1)
-- ERROR:
File "XXXX", line 9
    print(nome1)
               ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:41:49) 
-- CODE:
nome1 = input("Insira o nome: ")
nome2 = input("Insira o nome: ")

if((nome1 > nome2).upper()):
	print(nome1)
	print(nome2)
else:
	print(nome2)
   print(nome1)
-- ERROR:
File "XXXX", line 9
    print(nome1)
               ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 12:42:15) 
-- CODE:
nome1 = input("Insira o nome: ")
nome2 = input("Insira o nome: ")

if((nome1 > nome2).upper()):
	print(nome1)
	print(nome2)
else:
	print(nome2)
	print(nome1)
-- EXECUTION TIME:
0.171972
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1638/2450/main.py", line 4, in <module>
    if((nome1 > nome2).upper()):
AttributeError: 'bool' object has no attribute 'upper'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:42:17) 
-- CODE:
nome1 = input("Insira o nome: ")
nome2 = input("Insira o nome: ")

if((nome1 > nome2).upper()):
	print(nome1)
	print(nome2)
else:
	print(nome2)
	print(nome1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if((nome1 > nome2).upper()):
AttributeError: 'bool' object has no attribute 'upper'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 12:42:48) 
-- CODE:
nome1 = input("Insira o nome: ")
nome2 = input("Insira o nome: ")

if((nome1 < nome2).upper()):
	print(nome1)
	print(nome2)
else:
	print(nome2)
	print(nome1)
-- EXECUTION TIME:
0.238911
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1638/2450/main.py", line 4, in <module>
    if((nome1 < nome2).upper()):
AttributeError: 'bool' object has no attribute 'upper'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:42:49) 
-- CODE:
nome1 = input("Insira o nome: ")
nome2 = input("Insira o nome: ")

if((nome1 < nome2).upper()):
	print(nome1)
	print(nome2)
else:
	print(nome2)
	print(nome1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if((nome1 < nome2).upper()):
AttributeError: 'bool' object has no attribute 'upper'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 12:42:52) 
-- CODE:
nome1 = input("Insira o nome: ")
nome2 = input("Insira o nome: ")

if((nome1 < nome2).upper()):
	print(nome1)
	print(nome2)
else:
	print(nome2)
	print(nome1)
-- EXECUTION TIME:
0.156693
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1638/2450/main.py", line 4, in <module>
    if((nome1 < nome2).upper()):
AttributeError: 'bool' object has no attribute 'upper'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:42:53) 
-- CODE:
nome1 = input("Insira o nome: ")
nome2 = input("Insira o nome: ")

if((nome1 < nome2).upper()):
	print(nome1)
	print(nome2)
else:
	print(nome2)
	print(nome1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if((nome1 < nome2).upper()):
AttributeError: 'bool' object has no attribute 'upper'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 12:43:08) 
-- CODE:
nome1 = input("Insira o nome: ")
nome2 = input("Insira o nome: ")

if(nome1 < nome2.upper()):
	print(nome1)
	print(nome2)
else:
	print(nome2)
	print(nome1)
-- EXECUTION TIME:
0.211135
-- TEST CASE 1:
---- input:
Ada
Leon
---- correct output:
Ada
Leon
---- user output:
Ada
Leon
-- TEST CASE 2:
---- input:
Marcos
Demetrius
---- correct output:
Demetrius
Marcos
---- user output:
Demetrius
Marcos
-- TEST CASE 3:
---- input:
WILSON
george
---- correct output:
george
WILSON
---- user output:
george
WILSON
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
