== TEST (2019-07-01 21:01:15) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0
cot = 0
# Contadores de atributos do personagem
moeda = 11
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
   if x == 'A':
		xtab -= 1
    # Move personagem para DIREITA
    elif x == 'D':
		xtab +=1 
    # Move personagem para CIMA
    elif x == 'W':
		ytab -= 1
    # Move personagem para BAIXO
    elif x == 'S':
		ytab +=1 

    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
        cont += 1
        # Apaga moeda do tabuleiro
        tabuleiro[ytab,xtab] = 0
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
		life -= 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 26
    xtab -= 1
            ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 21:01:53) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0
cot = 0
# Contadores de atributos do personagem
moeda = 11
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
   if x == 'A':
		xtab -= 1
    # Move personagem para DIREITA
    elif x == 'D':
		xtab +=1 
    # Move personagem para CIMA
    elif x == 'W':
		ytab -= 1
    # Move personagem para BAIXO
    elif x == 'S':
		ytab +=1 

    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
        cont += 1
        # Apaga moeda do tabuleiro
        tabuleiro[ytab,xtab] = 0
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
		life -= 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 26
    xtab -= 1
            ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 21:02:52) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0
cot = 0
# Contadores de atributos do personagem
moeda = 11
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
   if x == 'A':
		xtab = xtab - 1
    # Move personagem para DIREITA
    elif x == 'D':
		xtab +=1 
    # Move personagem para CIMA
    elif x == 'W':
		ytab = ytab - 1
    # Move personagem para BAIXO
    elif x == 'S':
		ytab +=1 

    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
        cont += 1
        # Apaga moeda do tabuleiro
        tabuleiro[ytab,xtab] = 0
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
		life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 26
    xtab = xtab - 1
                  ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 21:03:10) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0
cot = 0
# Contadores de atributos do personagem
moeda = 11
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
	if x == 'A':
		xtab = xtab - 1
    # Move personagem para DIREITA
    elif x == 'D':
		xtab +=1 
    # Move personagem para CIMA
    elif x == 'W':
		ytab = ytab - 1
    # Move personagem para BAIXO
    elif x == 'S':
		ytab +=1 

    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
        cont += 1
        # Apaga moeda do tabuleiro
        tabuleiro[ytab,xtab] = 0
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
		life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 28
    elif x == 'D':
                 ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 21:04:38) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0
cot = 0
# Contadores de atributos do personagem
moeda = 11
life = 100

# Analise da jogada
for x in mov:
 # Move personagem para ESQUERDA
	if x == 'A':
		xtab = xtab - 1
 # Move personagem para DIREITA
	elif x == 'D':
		xtab +=1 
 # Move personagem para CIMA
	elif x == 'W':
		ytab = ytab - 1
 # Move personagem para BAIXO
 	elif x == 'S':
		ytab +=1 

 # Trata evento
 # Moeda
if tabuleiro[ytab,xtab] == 11:
	  cont += 1
	  # Apaga moeda do tabuleiro
	  tabuleiro[ytab,xtab] = 0
 # Zumbi
 elif tabuleiro[ytab,xtab] == 22:
	life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 34
    elif x == 'S':
                 ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 21:05:09) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0
cot = 0
# Contadores de atributos do personagem
moeda = 11
life = 100

# Analise da jogada
for x in mov:
 # Move personagem para ESQUERDA
	if x == 'A':
		xtab = xtab - 1
 # Move personagem para DIREITA
	elif x == 'D':
		xtab +=1 
 # Move personagem para CIMA
	elif x == 'W':
		ytab = ytab - 1
 # Move personagem para BAIXO
	elif x == 'S':
		ytab +=1 

 # Trata evento
 # Moeda
if tabuleiro[ytab,xtab] == 11:
	  cont += 1
	  # Apaga moeda do tabuleiro
	  tabuleiro[ytab,xtab] = 0
 # Zumbi
 elif tabuleiro[ytab,xtab] == 22:
	life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 44
    elif tabuleiro[ytab,xtab] == 22:
                                   ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 21:05:59) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0
cot = 0
# Contadores de atributos do personagem
moeda = 11
life = 100

# Analise da jogada
for x in mov:
 # Move personagem para ESQUERDA
	if x == 'A':
		xtab = xtab - 1
 # Move personagem para DIREITA
	elif x == 'D':
		xtab +=1 
 # Move personagem para CIMA
	elif x == 'W':
		ytab = ytab - 1
 # Move personagem para BAIXO
	elif x == 'S':
		ytab +=1 

 # Trata evento
 # Moeda
	if tabuleiro[ytab,xtab] == 11:
		cont += 1
	  # Apaga moeda do tabuleiro
		tabuleiro[ytab,xtab] = 0
 # Zumbi
	elif tabuleiro[ytab,xtab] == 22:
		life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 21:06:32) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0
cot = 0
# Contnadores de atributos do personagem
moeda = 11
life = 100

# Analise da jogada
for x in mov:
 # Move personagem para ESQUERDA
	if x == 'A':
		xtab = xtab - 1
 # Move personagem para DIREITA
	elif x == 'D':
		xtab +=1 
 # Move personagem para CIMA
	elif x == 'W':
		ytab = ytab - 1
 # Move personagem para BAIXO
	elif x == 'S':
		ytab +=1 

 # Trata evento
 # Moeda
	if tabuleiro[ytab,xtab] == 11:
		cont += 1
	  # Apaga moeda do tabuleiro
		tabuleiro[ytab,xtab] = 0
 # Zumbi
	elif tabuleiro[ytab,xtab] == 22:
		life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 21:07:04) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0
cont = 0
# Contnadores de atributos do personagem
moeda = 11
life = 100

# Analise da jogada
for x in mov:
 # Move personagem para ESQUERDA
	if x == 'A':
		xtab = xtab - 1
 # Move personagem para DIREITA
	elif x == 'D':
		xtab +=1 
 # Move personagem para CIMA
	elif x == 'W':
		ytab = ytab - 1
 # Move personagem para BAIXO
	elif x == 'S':
		ytab +=1 

 # Trata evento
 # Moeda
	if tabuleiro[ytab,xtab] == 11:
		cont += 1
	  # Apaga moeda do tabuleiro
		tabuleiro[ytab,xtab] = 0
 # Zumbi
	elif tabuleiro[ytab,xtab] == 22:
		life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 21:08:49) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0
cont = 0
# Contnadores de atributos do personagem
moeda = 11
life = 100

# Analise da jogada
for x in mov:
 # Move personagem para ESQUERDA
	if x == 'A':
		xtab = xtab - 1
 # Move personagem para DIREITA
	elif x == 'D':
		xtab +=1 
 # Move personagem para CIMA
	elif x == 'W':
		ytab = ytab - 1
 # Move personagem para BAIXO
	elif x == 'S':
		ytab +=1 

 # Trata evento
 # Moeda
	if tabuleiro[ytab,xtab] == 11:
		cont += 1
	  # Apaga moeda do tabuleiro
		tabuleiro[ytab,xtab] = 0
 # Zumbi
	elif tabuleiro[ytab,xtab] == 22:
		life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", cont)
print("life: ", life)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-01 21:09:14) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0
cont = 0
# Contnadores de atributos do personagem
moeda = 11
life = 100

# Analise da jogada
for x in mov:
 # Move personagem para ESQUERDA
	if x == 'A':
		xtab = xtab - 1
 # Move personagem para DIREITA
	elif x == 'D':
		xtab +=1 
 # Move personagem para CIMA
	elif x == 'W':
		ytab = ytab - 1
 # Move personagem para BAIXO
	elif x == 'S':
		ytab +=1 

 # Trata evento
 # Moeda
	if tabuleiro[ytab,xtab] == 11:
		cont += 1
	  # Apaga moeda do tabuleiro
		tabuleiro[ytab,xtab] = 0
 # Zumbi
	elif tabuleiro[ytab,xtab] == 22:
		life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", cont)
print("life: ", life)

-- EXECUTION TIME:
1.19358
-- TEST CASE 1:
---- input:
[[0,11,0,11,0,11,22,0,11,0,11,0,11],[11,0,22,11,0,11,11,0,11,0,0,0,22],[11,22,22,11,0,11,11,0,22,0,11,11,22],[22,11,0,11,0,11,11,0,22,0,0,0,0],[22,11,11,11,0,11,22,0,11,0,22,0,22],[11,11,22,11,0,0,11,0,22,0,0,22,11],[0,11,0,11,0,11,22,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,11,0,0,11,11],[11,11,22,11,0,0,11,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,22,0,0,0,11],[0,11,22,11,0,0,11,0,22,0,11,0,11]]
DDDDSDSAAWW
---- correct output:
posicao x:  3
posicao y:  0
moedas:  6
life:  100

---- user output:
posicao x:  3
posicao y:  0
moedas:  6
life:  100
-- TEST CASE 2:
---- input:
[[22,11,0,11,0,11,11,0,22,0,0,0,0],[22,11,11,11,0,11,22,0,11,0,22,0,22],[11,11,22,11,0,0,11,0,22,0,0,22,11],[0,11,0,11,0,11,22,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,11,0,0,11,11],[11,11,22,11,0,0,11,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,22,0,0,0,11],[0,11,22,11,0,0,11,0,22,0,11,0,11]]
DSSSDSAASD
---- correct output:
posicao x:  1
posicao y:  5
moedas:  7
life:  95
---- user output:
posicao x:  1
posicao y:  5
moedas:  7
life:  95
-- TEST CASE 3:
---- input:
[[22,22,11,11,11,11,22,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,11,0,0,11,11],[11,11,22,11,0,0,11,0,22,0,22,0,11],[0,11,0,11,0,11,22,0,11,0,11,0,11],[11,0,22,11,0,11,11,0,11,0,0,0,22],[11,22,22,11,0,11,11,0,22,0,11,11,22],[0,11,22,11,0,11,22,0,22,0,0,0,11],[0,11,22,11,0,0,11,0,22,0,11,0,11]]
DDDSSSAWDWAS
---- correct output:
posicao x:  2
posicao y:  2
moedas:  5
life:  80
---- user output:
posicao x:  2
posicao y:  2
moedas:  5
life:  80
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
