== TEST (2019-05-17 09:15:12) 
-- CODE:
x = input("insira um nome": ).upper()
y = input("insira um nome": ).upper()

if x == "pa":
	print(y)
	print(x)
else:
	print(x)
	print(y)

-- ERROR:
File "XXXX", line 1
    x = input("insira um nome": ).upper()
                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-17 09:15:42) 
-- CODE:
x = input("insira um nome": ).upper()
y = input("insira um nome": ).upper()

if x == "pa":
	print(y)
	print(x)
else:
	print(x)
	print(y)

-- ERROR:
File "XXXX", line 1
    x = input("insira um nome": ).upper()
                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-17 09:16:33) 
-- CODE:
x = input(("insira um nome": ).upper())
y = input("insira um nome": ).upper()

if x == "pa":
	print(y)
	print(x)
else:
	print(x)
	print(y)

-- ERROR:
File "XXXX", line 1
    x = input(("insira um nome": ).upper())
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-17 09:18:13) 
-- CODE:
x = input("insira um nome" ).upper()
y = input("insira um nome" ).upper()

if x == "pa":
	print(y)
	print(x)
else:
	print(x)
	print(y)

-- OUTPUT:
ADA
LEON
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-17 09:19:12) 
-- CODE:
x = input("insira um nome" ).upper()
y = input("insira um nome" )

if x == "paulo":
	print(y)
	print(x)
else:
	print(x)
	print(y)

-- OUTPUT:
ADA
Leon
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-17 09:19:51) 
-- CODE:
x = input("insira um nome" ).upper()
y = input("insira um nome" )

if (y == "paulo"):
	print(y)
	print(x)
else:
	print(x)
	print(y)

-- OUTPUT:
ADA
Leon
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-17 09:20:11) 
-- CODE:
x = input("insira um nome" ).upper()
y = input("insira um nome" )

if (y == "paulo"):
	print(y)
	print(x)
else:
	print(x)
	print(y)

-- EXECUTION TIME:
0.118907
-- TEST CASE 1:
---- input:
Ada
Leon
---- correct output:
Ada
Leon
---- user output:
ADA
Leon
-- TEST CASE 2:
---- input:
Marcos
Demetrius
---- correct output:
Demetrius
Marcos
---- user output:
MARCOS
Demetrius
-- TEST CASE 3:
---- input:
WILSON
george
---- correct output:
george
WILSON
---- user output:
WILSON
george
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
