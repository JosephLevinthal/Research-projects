== TEST (2019-04-30 10:12:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a= float(input("qual seu ponto a? "))
b= float(input("qual seu ponto b? "))
c= float(input("qual seu ponto c? "))
d= float(input("qual seu ponto d? "))

print("Intervalo 1:", a,",", b)
print("Intervalo 2:", c, ",", d)

if(a>b or c>d):
	print("Entradas invalidas")
elif (c>b and c>a):
	print("Nao ha intersecao")
else:
	print("Ha intersecao")
	

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:12:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a= float(input("qual seu ponto a? "))
b= float(input("qual seu ponto b? "))
c= float(input("qual seu ponto c? "))
d= float(input("qual seu ponto d? "))

print("Intervalo 1:", a,",", b)
print("Intervalo 2:", c, ",", d)

if(a>b or c>d):
	print("Entradas invalidas")
elif (c>b and c>a):
	print("Nao ha intersecao")
else:
	print("Ha intersecao")
	

-- EXECUTION TIME:
0.151433
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
