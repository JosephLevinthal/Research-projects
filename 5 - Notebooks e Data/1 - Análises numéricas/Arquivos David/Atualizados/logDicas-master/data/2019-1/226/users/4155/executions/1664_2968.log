== TEST (2019-04-16 10:31:50) 
-- CODE:
x = input("lanche: ")
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) * 4.00
x = "S"

if(x.upper == "S"):
	msg = (q * 3.50) + (r * 4.00)
else:
	msg = (q * 5) + (r * 4.00)
	
r = round(msg, 2)
print(r)
-- OUTPUT:
37.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:33:57) 
-- CODE:
x = input("lanche: ")
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) * 4.00
x = "L"

if(x.upper == "L"):
	msg = (q * 5) + (r * 4.00)
else:
	msg = (q * 3.50) + (r * 4.00)
	
r = round(msg, 2)
print(r)
-- OUTPUT:
35.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:34:30) 
-- CODE:
x = input("lanche: ")
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) * 4.00
x = "L"

if(x.upper == "L"):
	msg = (q * 5) + (r * 4)
else:
	msg = (q * 3.5) + (r * 4)
	
r = round(msg, 2)
print(r)
-- OUTPUT:
35.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:35:18) 
-- CODE:
x = input("lanche: ")
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) 
x = "L"

if(x.upper == "L"):
	msg = (q * 5) + (r * 4)
else:
	msg = (q * 3.5) + (r * 4)
	
r = round(msg, 2)
print(r)
-- OUTPUT:
11.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:36:53) 
-- CODE:
x = input("lanche: ")
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) 
x = L

if(x.upper == "L"):
	msg = (q * 5) + (r * 4)
else:
	msg = (q * 3.5) + (r * 4)
	
r = round(msg, 2)
print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    x = L
NameError: name 'L' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:37:06) 
-- CODE:
x = input("lanche: ")
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) 
x = L

if(x.upper == "L"):
	msg = (q * 5) + (r * 4)
else:
	msg = (q * 3.5) + (r * 4)
	
r = round(msg, 2)
print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    x = L
NameError: name 'L' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:37:25) 
-- CODE:
x = input("lanche: ")
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) 

if(x.upper == "L"):
	msg = (q * 5) + (r * 4)
else:
	msg = (q * 3.5) + (r * 4)
	
r = round(msg, 2)
print(r)
-- OUTPUT:
11.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:38:11) 
-- CODE:
x = input("lanche: ")
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) 

if(x.upper == L):
	msg = (q * 5) + (r * 4)
else:
	msg = (q * 3.5) + (r * 4)
	
r = round(msg, 2)
print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if(x.upper == L):
NameError: name 'L' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:38:36) 
-- CODE:
x = input("lanche: ")
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) 

if(x.upper == "L"):
	msg = (q * 5) + (r * 4)
else:
	msg = (q * 3.5) + (r * 4)
	
r = round(msg, 2)
print(r)
-- OUTPUT:
11.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:39:30) 
-- CODE:
x = input("lanche: ")
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) 
x = "L"
if(x.upper == "L"):
	msg = (q * 5) + (r * 4)
else:
	msg = (q * 3.5) + (r * 4)
	
r = round(msg, 2)
print(r)
-- OUTPUT:
11.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:39:59) 
-- CODE:
x = input("lanche: ").upper()
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) 
x = "L"
if(x == "L"):
	msg = (q * 5) + (r * 4)
else:
	msg = (q * 3.5) + (r * 4)
	
r = round(msg, 2)
print(r)
-- OUTPUT:
13
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:40:27) 
-- CODE:
x = input("lanche: ").upper()
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) 
x = "L"
if(x == "L"):
	msg = (q * 5.00) + (r * 4.00)
else:
	msg = (q * 3.5) + (r * 4.00)
	
r = round(msg, 2)
print(r)
-- OUTPUT:
13.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 10:40:39) 
-- CODE:
x = input("lanche: ").upper()
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) 
x = "L"
if(x == "L"):
	msg = (q * 5.00) + (r * 4.00)
else:
	msg = (q * 3.5) + (r * 4.00)
	
r = round(msg, 2)
print(r)
-- EXECUTION TIME:
0.127682
-- TEST CASE 1:
---- input:
S
1
2
---- correct output:
11.5
---- user output:
13.0
-- TEST CASE 2:
---- input:
L
6
7
---- correct output:
58.0
---- user output:
58.0
-- TEST CASE 3:
---- input:
S
2
2
---- correct output:
15.0
---- user output:
18.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:40:47) 
-- CODE:
x = input("lanche: ").upper()
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) 
x = "L"
if(x == "L"):
	msg = (q * 5.00) + (r * 4.00)
else:
	msg = (q * 3.50) + (r * 4.00)
	
r = round(msg, 2)
print(r)
-- OUTPUT:
13.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:41:47) 
-- CODE:
x = input("lanche: ").upper()
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) 
x = "L"
if(x == "L"):
	msg = (q * 5.000) + (r * 4.00)
else:
	msg = (q * 3.50) + (r * 4.00)
	
r = round(msg, 2)
print(r)
-- OUTPUT:
13.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:42:12) 
-- CODE:
x = input("lanche: ").upper()
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) 
x = "L"
if(x == "L"):
	msg = q * 5.00 + r * 4.00
else:
	msg = (q * 3.50) + (r * 4.00)
	
r = round(msg, 2)
print(r)
-- OUTPUT:
13.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:43:03) 
-- CODE:
x = input("lanche: ").upper()
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) 
x = "L"
if(x == "L"):
	msg = q * 5.000 + r * 4.000
else:
	msg = (q * 3.50) + (r * 4.00)
	
r = round(msg, 2)
print(r)
-- OUTPUT:
13.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:44:08) 
-- CODE:
x = input("lanche: ").upper()
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) 
x = "L"
if(x == "L"):
	msg = q * 5.00 + r * 4.00
else:
	msg = (q * 3.50) + (r * 4.00)
	
r = round(msg, 2)
print(r)
-- OUTPUT:
13.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:44:21) 
-- CODE:
x = input("lanche: ").upper()
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) 
x = "L"
if(x == "L"):
	msg = q * 5.00 + r * 4.00
else:
	msg = (q * 3.50) + (r * 4.00)
	
r = round(msg, 3)
print(r)
-- OUTPUT:
13.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:44:58) 
-- CODE:
x = input("lanche: ").upper()
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) 
x = "L"
if(x == "L"):
	msg = (q * 5.00) + (r * 4.00)
else:
	msg = (q * 3.50) + (r * 4.00)
	
r = round(msg, 2)
print(r)
-- OUTPUT:
13.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:45:37) 
-- CODE:
x = input("lanche: ").upper()
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) 
x = "L"
if(x == "L"):
	msg = (q * 5.00) + (r * 4.00) * 100
else:
	msg = (q * 3.50) + (r * 4.00)
	
r = round(msg, 2)
print(r)
-- OUTPUT:
805.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:45:49) 
-- CODE:
x = input("lanche: ").upper()
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) 
x = "L"
if(x == "L"):
	msg = (q * 5.00) + (r * 4.00) * 10
else:
	msg = (q * 3.50) + (r * 4.00)
	
r = round(msg, 2)
print(r)
-- OUTPUT:
85.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:46:43) 
-- CODE:
x = input("lanche: ").upper()
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) 
x = "L"
if(x == "L"):
	msg = ((q * 5.00) + (r * 4.00)) * 0,10
else:
	msg = (q * 3.50) + (r * 4.00)
	
r = round(msg, 2)
print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    r = round(msg, 2)
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:47:01) 
-- CODE:
x = input("lanche: ").upper()
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) 
x = "L"
if(x == "L"):
	msg = ((q * 5.00) + (r * 4.00)) * 100
else:
	msg = (q * 3.50) + (r * 4.00)
	
r = round(msg, 2)
print(r)
-- OUTPUT:
1300.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:47:17) 
-- CODE:
x = input("lanche: ").upper()
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) 
x = "L"

if(x == "L"):
	msg = (q * 5.00) + (r * 4.00)
else:
	msg = (q * 3.50) + (r * 4.00)
	
r = round(msg, 2)
print(r)
-- OUTPUT:
13.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:47:48) 
-- CODE:
x = input("lanche: ").upper()
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) 
x = "L"

if(x == "L"):
	msg = (q * 5.00) + (r * 4)
else:
	msg = (q * 3.50) + (r * 4.00)
	
r = round(msg, 2)
print(r)
-- OUTPUT:
13.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:47:57) 
-- CODE:
x = input("lanche: ").upper()
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) 
x = "L"

if(x == "L"):
	msg = (q * 5) + (r * 4)
else:
	msg = (q * 3.50) + (r * 4.00)
	
r = round(msg, 2)
print(r)
-- OUTPUT:
13
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:48:12) 
-- CODE:
x = input("lanche: ").upper()
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) 
x = "L"

if(x == "L"):
	msg = (q * 500) + (r * 400)
else:
	msg = (q * 3.50) + (r * 4.00)
	
r = round(msg, 2)
print(r)
-- OUTPUT:
1300
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:48:26) 
-- CODE:
x = input("lanche: ").upper()
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) 
x = "L"

if(x == "L"):
	msg = (q * 500) + (r * 400) / 100
else:
	msg = (q * 3.50) + (r * 4.00)
	
r = round(msg, 2)
print(r)
-- OUTPUT:
508.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:48:38) 
-- CODE:
x = input("lanche: ").upper()
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) 
x = "L"

if(x == "L"):
	msg = (q * 500) + (r * 400) / 10
else:
	msg = (q * 3.50) + (r * 4.00)
	
r = round(msg, 2)
print(r)
-- OUTPUT:
580.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:48:54) 
-- CODE:
x = input("lanche: ").upper()
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) 
x = "L"

if(x == "L"):
	msg = (q * 500) + (r * 400) / 0.10
else:
	msg = (q * 3.50) + (r * 4.00)
	
r = round(msg, 2)
print(r)
-- OUTPUT:
8500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 10:49:18) 
-- CODE:
x = input("lanche: ").upper()
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) 
x = "L"

if(x == "L"):
	msg = (q * 500) + (r * 400) / 1000
else:
	msg = (q * 3.50) + (r * 4.00)
	
r = round(msg, 2)
print(r)
-- EXECUTION TIME:
0.183974
-- TEST CASE 1:
---- input:
S
1
2
---- correct output:
11.5
---- user output:
500.8
-- TEST CASE 2:
---- input:
L
6
7
---- correct output:
58.0
---- user output:
3002.8
-- TEST CASE 3:
---- input:
S
2
2
---- correct output:
15.0
---- user output:
1000.8
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:49:19) 
-- CODE:
x = input("lanche: ").upper()
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) 
x = "L"

if(x == "L"):
	msg = (q * 500) + (r * 400) / 1000
else:
	msg = (q * 3.50) + (r * 4.00)
	
r = round(msg, 2)
print(r)
-- OUTPUT:
500.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:49:33) 
-- CODE:
x = input("lanche: ").upper()
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) 
x = "L"

if(x == "L"):
	msg = (q * 500) + (r * 400) / 100
else:
	msg = (q * 3.50) + (r * 4.00)
	
r = round(msg, 2)
print(r)
-- OUTPUT:
508.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:49:57) 
-- CODE:
x = input("lanche: ").upper()
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) 
x = "L"

if(x == "L"):
	msg = (q * 5.00) + (r * 4.00) 
else:
	msg = (q * 3.50) + (r * 4.00)
	
r = round(msg, 2)
print(r)
-- OUTPUT:
13.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 10:50:11) 
-- CODE:
x = input("lanche: ").upper()
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) 
x = "L"

if(x == "L"):
	msg = (q * 5.00) + (r * 4.00) 
else:
	msg = (q * 3.50) + (r * 4.00)
	
r = round(msg, 2)
print(r)
-- EXECUTION TIME:
0.162445
-- TEST CASE 1:
---- input:
S
1
2
---- correct output:
11.5
---- user output:
13.0
-- TEST CASE 2:
---- input:
L
6
7
---- correct output:
58.0
---- user output:
58.0
-- TEST CASE 3:
---- input:
S
2
2
---- correct output:
15.0
---- user output:
18.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:50:32) 
-- CODE:
x = input("lanche: ").upper()
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) 
x = "L"

if(x == "L"):
	msg = (q * 5.00) + (r * 4.00) 
else:
	msg = (q * 3.50) + (r * 4.00)
	
r = round(msg, 2)
print(r)
-- OUTPUT:
13.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:51:31) 
-- CODE:
x = input("lanche: ").upper()
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) 
x = "L"

if(x == "L"):
	msg = (q * 5.00) + (r * 4.00) 
else:
	msg = (q * 3.50) + (r * 4.00)
	
r = round(msg, 2)
print(r)
-- OUTPUT:
13.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 10:52:25) 
-- CODE:
x = input("lanche: ").upper()
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) 
x = "L"

if(x == "L"):
	msg = (q * 5.00) + (r * 4.00) 
else:
	msg = (q * 3.50) + (r * 4.00)
	
r = round(msg, 2)
print(r)
-- EXECUTION TIME:
0.229622
-- TEST CASE 1:
---- input:
S
1
2
---- correct output:
11.5
---- user output:
13.0
-- TEST CASE 2:
---- input:
L
6
7
---- correct output:
58.0
---- user output:
58.0
-- TEST CASE 3:
---- input:
S
2
2
---- correct output:
15.0
---- user output:
18.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:53:00) 
-- CODE:
x = input("lanche: ").upper()
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) 
x = "L"

if(x != "L"):
	msg = (q * 5.00) + (r * 4.00) 
else:
	msg = (q * 3.50) + (r * 4.00)
	
r = round(msg, 2)
print(r)
-- OUTPUT:
11.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 10:53:10) 
-- CODE:
x = input("lanche: ").upper()
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) 
x = "L"

if(x != "L"):
	msg = (q * 5.00) + (r * 4.00) 
else:
	msg = (q * 3.50) + (r * 4.00)
	
r = round(msg, 2)
print(r)
-- EXECUTION TIME:
0.130551
-- TEST CASE 1:
---- input:
S
1
2
---- correct output:
11.5
---- user output:
11.5
-- TEST CASE 2:
---- input:
L
6
7
---- correct output:
58.0
---- user output:
49.0
-- TEST CASE 3:
---- input:
S
2
2
---- correct output:
15.0
---- user output:
15.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:53:12) 
-- CODE:
x = input("lanche: ").upper()
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) 
x = "L"

if(x != "L"):
	msg = (q * 5.00) + (r * 4.00) 
else:
	msg = (q * 3.50) + (r * 4.00)
	
r = round(msg, 2)
print(r)
-- OUTPUT:
11.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:54:47) 
-- CODE:
x = input("lanche: ").upper()
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) 
x = "L"

if(x != "L"):
	msg = (q * 3.50) + (r * 4.00)
else:
	msg = (q * 5.00) + (r * 4.00)
	
r = round(msg, 2)
print(r)
-- OUTPUT:
13.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 10:55:05) 
-- CODE:
x = input("lanche: ").upper()
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) 
x = "L"

if(x != "L"):
	msg = (q * 3.50) + (r * 4.00)
else:
	msg = (q * 5.00) + (r * 4.00)
	
r = round(msg, 2)
print(r)
-- EXECUTION TIME:
0.181215
-- TEST CASE 1:
---- input:
S
1
2
---- correct output:
11.5
---- user output:
13.0
-- TEST CASE 2:
---- input:
L
6
7
---- correct output:
58.0
---- user output:
58.0
-- TEST CASE 3:
---- input:
S
2
2
---- correct output:
15.0
---- user output:
18.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 15:05:15) 
-- CODE:
x = input("lanche: ").upper()
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) 
x = "L"

if(x != "L"):
	msg = (q * 3.50) + (r * 4.00)
else:
	msg = (q * 5.00) + (r * 4.00)
	
r = round(msg, 2)
print(r)
-- OUTPUT:
13.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 15:06:12) 
-- CODE:
x = input("lanche: ").upper()
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) 
x = "L"

if(x != "L"):
	msg = (q * 3.50) + (r * 4.00)
else:
	msg = (q * 5.00) + (r * 4.00)
	
r = round(msg, 2)
print(r)
-- OUTPUT:
13.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 15:06:20) 
-- CODE:
x = input("lanche: ").upper()
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) 
x = "L"

if(x != "L"):
	msg = (q * 3.50) + (r * 4.00)
else:
	msg = (q * 5.00) + (r * 4.00)
	
r = round(msg, 2)
print(r)
-- OUTPUT:
13.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 00:48:15) 
-- CODE:
x = input("lanche: ").upper()
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) 
x = "L"

if(x != "L"):
	msg = (q * 3.50) + (r * 4.00)
else:
	msg = (q * 5.00) + (r * 4.00)
	
r = round(msg, 2)
print(r)
-- OUTPUT:
13.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 00:48:29) 
-- CODE:
x = input("lanche: ").upper()
q = int(input("quantidade: ")) 
r = int(input("refrigerante: ")) 
x = "L"

if(x != "L"):
	msg = (q * 3.50) + (r * 4.00)
else:
	msg = (q * 5.00) + (r * 4.00)
	
r = round(msg, 2)
print(r)
-- OUTPUT:
13.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
