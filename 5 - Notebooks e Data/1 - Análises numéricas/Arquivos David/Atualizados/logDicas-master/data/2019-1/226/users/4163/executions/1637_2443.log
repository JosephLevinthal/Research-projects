== TEST (2019-04-11 10:24:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
 import math from*
r = float(input("o raio do tanque: "))
a = float(input("a altura da coluna de ar: "))
n = input(" o numero da opcao desejada (1/2): ")

if v= (4*pi*r**3)/3
	print(v)
-- ERROR:
File "XXXX", line 4
    import math from*
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:24:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math from*
r = float(input("o raio do tanque: "))
a = float(input("a altura da coluna de ar: "))
n = input(" o numero da opcao desejada (1/2): ")

if v= (4*pi*r**3)/3
	print(v)
-- ERROR:
File "XXXX", line 4
    import math from*
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:25:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("o raio do tanque: "))
a = float(input("a altura da coluna de ar: "))
n = input(" o numero da opcao desejada (1/2): ")

if v= (4*pi*r**3)/3
	print(v)
-- ERROR:
File "XXXX", line 9
    if v= (4*pi*r**3)/3
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:25:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("o raio do tanque: "))
a = float(input("a altura da coluna de ar: "))
n = input(" o numero da opcao desejada (1/2): ")

if v = (4*pi*r**3)/3:
	print(v)
-- ERROR:
File "XXXX", line 9
    if v = (4*pi*r**3)/3:
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:26:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("o raio do tanque: "))
a = float(input("a altura da coluna de ar: "))
n = input(" o numero da opcao desejada (1/2): ")

if v = ((4*pi*r**3)/3):
	print(v)
-- ERROR:
File "XXXX", line 9
    if v = ((4*pi*r**3)/3):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:27:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("o raio do tanque: "))
a = float(input("a altura da coluna de ar: "))
n = input(" o numero da opcao desejada (1/2): ")

if v = (((4*pi)*(r**3)/3):
	print(v)
-- ERROR:
File "XXXX", line 9
    if v = (((4*pi)*(r**3)/3):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:27:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("o raio do tanque: "))
a = float(input("a altura da coluna de ar: "))
n = input(" o numero da opcao desejada (1/2): ")

if v = (((4*pi)*(r**3)/3):
	 msg(v)
		  
print(v)
-- ERROR:
File "XXXX", line 9
    if v = (((4*pi)*(r**3)/3):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:28:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("o raio do tanque: "))
a = float(input("a altura da coluna de ar: "))
n = input(" o numero da opcao desejada (1/2): ")

v = (((4*pi)*(r**3)/3):
	 msg(v)
		  
print(v)
-- ERROR:
File "XXXX", line 9
    v = (((4*pi)*(r**3)/3):
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:28:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("o raio do tanque: "))
a = float(input("a altura da coluna de ar: "))
n = input(" o numero da opcao desejada (1/2): ")

v = (((4*pi)*(r**3)/3)
	 msg(v)
		  
print(v)
-- ERROR:
File "XXXX", line 10
    msg(v)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:28:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("o raio do tanque: "))
a = float(input("a altura da coluna de ar: "))
n = input(" o numero da opcao desejada (1/2): ")

v = (((4*pi)*(r**3)/3)
	 
		  
print(v)
-- ERROR:
File "XXXX", line 12
    print(v)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:28:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("o raio do tanque: "))
a = float(input("a altura da coluna de ar: "))
n = input(" o numero da opcao desejada (1/2): ")

v = (((4*pi)*(r**3)/3)
print(v)
-- ERROR:
File "XXXX", line 10
    print(v)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:29:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("o raio do tanque: "))
a = float(input("a altura da coluna de ar: "))
n = input(" o numero da opcao desejada (1/2): ")


-- ERROR:
File "XXXX", line 10
    print(v)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:35:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("o raio do tanque: "))
a = float(input("a altura da coluna de ar: "))
n = input(" o numero da opcao desejada (1/2): ")
v1 = (4 * pi * (r**3))/3
print(v1)


-- OUTPUT:
179.5943800302165
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:45:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("o raio do tanque: "))
x= float(input("a altura da coluna de ar: "))
n = input(" o numero da opcao desejada (1/2): ")

v1 = (4 * pi * (r**3))/3

v2 = (pi*(x**2)*(3*r-x))/3

if (n== "1"):
	print(round(v2, 4)



-- ERROR:
File "XXXX", line 17
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:45:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("o raio do tanque: "))
x= float(input("a altura da coluna de ar: "))
n = input(" o numero da opcao desejada (1/2): ")

v1 = (4 * pi * (r**3))/3

v2 = (pi*(x**2)*(3*r-x))/3

if (n== "1"):
	print(round(v2, 4)



-- ERROR:
File "XXXX", line 17
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:45:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("o raio do tanque: "))
x= float(input("a altura da coluna de ar: "))
n = input(" o numero da opcao desejada (1/2): ")

v1 = (4 * pi * (r**3))/3

v2 = (pi*(x**2)*(3*r-x))/3

if (n== "1"):
	print(round(v2, 4)
-- ERROR:
File "XXXX", line 15
    
                       ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:46:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("o raio do tanque: "))
x= float(input("a altura da coluna de ar: "))
n = input(" o numero da opcao desejada (1/2): ")

v1 = (4 * pi * (r**3))/3

v2 = (pi*(x**2)*(3*r-x))/3

if(n== "1"):
	print(round(v2, 4)
-- ERROR:
File "XXXX", line 15
    
                       ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:46:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("o raio do tanque: "))
x= float(input("a altura da coluna de ar: "))
n = input(" o numero da opcao desejada (1/2): ")

v1 = (4 * pi * (r**3))/3

v2 = (pi*(x**2)*(3*r-x))/3

if(n== "1"):
print(round(v2, 4)
-- ERROR:
File "XXXX", line 14
    print(round(v2, 4)
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:46:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("o raio do tanque: "))
x= float(input("a altura da coluna de ar: "))
n = input(" o numero da opcao desejada (1/2): ")

v1 = (4 * pi * (r**3))/3

v2 = (pi*(x**2)*(3*r-x))/3

if(n== "1"):

print(round(v2, 4)
-- ERROR:
File "XXXX", line 15
    print(round(v2, 4)
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:47:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("o raio do tanque: "))
x= float(input("a altura da coluna de ar: "))
n = input(" o numero da opcao desejada (1/2): ")

v1 = (4 * pi * (r**3))/3

v2 = (pi*(x**2)*(3*r-x))/3

if(n== "1"):
	print(round(v2, 4))
else:
	print(round(v1, 4))
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:48:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("o raio do tanque: "))
x= float(input("a altura da coluna de ar: "))
n = input(" o numero da opcao desejada (1/2): ")

v1 = (4 * pi * (r**3))/3

v2 = (pi*(x**2)*(3*r-x))/3

if(n== "2"):
	print(round(v2, 4))
else:
	print(round(v1, 4))
-- OUTPUT:
179.5944
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:52:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("o raio do tanque: "))
x= float(input("a altura da coluna de ar: "))
n = input(" o numero da opcao desejada (1/2): ")

v1 = (4 * pi * (r**3))/3

v2 = (pi*(x**2)* ((3*r)-x))/3

if(n== "1"):
	print(round(v2, 4))
else:
	print(round(v1, 4))
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:54:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("o raio do tanque: "))
x= float(input("a altura da coluna de ar: "))
n = input(" o numero da opcao desejada (1/2): ")

v1 = (4 * pi * (r**3))/3

v2 = (pi*(x**2)* ((3*r)-x))/3

if(n== "1"):
	print(round(v2, 4))
else:
	print(round(v1-v2, 4))
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 10:54:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("o raio do tanque: "))
x= float(input("a altura da coluna de ar: "))
n = input(" o numero da opcao desejada (1/2): ")

v1 = (4 * pi * (r**3))/3

v2 = (pi*(x**2)* ((3*r)-x))/3

if(n== "1"):
	print(round(v2, 4))
else:
	print(round(v1-v2, 4))
-- EXECUTION TIME:
0.183168
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
