== TEST (2019-05-02 11:23:29) 
-- CODE:
x = float(input("valor de x: "))

if (x<=1):
	print("1")
elif(1<x<=2):
	print("2")
-- OUTPUT:
46.66
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:25:39) 
-- CODE:
from math import*
x = float(input("valor de x: "))

if (x<=1):
	print("1")
elif(1<x<=2):
	print("2")
elif(2<x<=3):
	print(sqrt((x)**1/2))
-- OUTPUT:
46.66
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:26:13) 
-- CODE:
from math import*
x = float(input("valor de x: "))

if (x<=1):
	print("1")
elif(1<x<=2):
	print("2")
elif(2<x<=3):
	print(str(sqrt((x)**1/2))
-- ERROR:
File "XXXX", line 10
    
                              ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:27:13) 
-- CODE:
from math import*
x = float(input("valor de x: "))

if (x<=1):
	print("1")
elif(1<x<=2):
	print("2")
elif(2<x<=3):
	print(round(x**2))
	
-- ERROR:
File "XXXX", line 10
    
                              ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:27:41) 
-- CODE:
from math import*
x = float(input("valor de x: "))

if (x<=1):
	print("1")
elif(1<x<=2):
	print("2")
elif(2<x<=3):
	print(round(x**2, 2))
	
-- ERROR:
File "XXXX", line 10
    
                              ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:28:40) 
-- CODE:
from math import*
x = float(input("valor de x: "))

if (x<=1):
	print("1")
elif(1<x<=2):
	print("2")
elif(2<x<=3):
	print(round(x**2, 2))
elif(x>3):
	print(round(x**3, 2))
-- OUTPUT:
46.66
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 11:28:43) 
-- CODE:
from math import*
x = float(input("valor de x: "))

if (x<=1):
	print("1")
elif(1<x<=2):
	print("2")
elif(2<x<=3):
	print(round(x**2, 2))
elif(x>3):
	print(round(x**3, 2))
-- EXECUTION TIME:
0.167117
-- TEST CASE 1:
---- input:
3.6
---- correct output:
46.66
---- user output:
46.66
-- TEST CASE 2:
---- input:
2.9
---- correct output:
8.41
---- user output:
8.41
-- TEST CASE 3:
---- input:
1.2
---- correct output:
2
---- user output:
2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
