== TEST (2019-06-09 18:16:37) 
-- CODE:
from numpy import *
senha=input()
a=0
b=0
for i in range(len(senha)):
	if(senha[i].islower()):
		a-a+1
	if(senha[i].isupper()):
		b=b+1
if(len(senha>=8) and a!=0 and b!=0 ):
	print("SENHA VALIDA")
else: 
	print("SENHA INVALIDA")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 18:17:25) 
-- CODE:
from numpy import *
senha=input()
a=0
b=0
for i in range(len(senha)):
	if(senha[i].islower()):
		a=a+1
	if(senha[i].isupper()):
		b=b+1
if(len(senha>=8) and a!=0 and b!=0 ):
	print("SENHA VALIDA")
else: 
	print("SENHA INVALIDA")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 18:18:22) 
-- CODE:
from numpy import *
senha=input()
a=0
b=0
for i in range(len(senha)):
	if(senha[i].islower()):
		a=a+1
	if(senha[i].isupper()):
		b=b+1
if(len(senha)>=8 and a!=0 and b!=0 ):
	print("SENHA VALIDA")
else: 
	print("SENHA INVALIDA")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-09 18:18:43) 
-- CODE:
from numpy import *
senha=input()
a=0
b=0
for i in range(len(senha)):
	if(senha[i].islower()):
		a=a+1
	if(senha[i].isupper()):
		b=b+1
if(len(senha)>=8 and a!=0 and b!=0 ):
	print("SENHA VALIDA")
else: 
	print("SENHA INVALIDA")

-- EXECUTION TIME:
1.0559
-- TEST CASE 1:
---- input:
123A456b
---- correct output:
SENHA VALIDA
---- user output:
SENHA VALIDA
-- TEST CASE 2:
---- input:
123
---- correct output:
SENHA INVALIDA
---- user output:
SENHA INVALIDA
-- TEST CASE 3:
---- input:
123456789
---- correct output:
SENHA INVALIDA
---- user output:
SENHA INVALIDA
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
