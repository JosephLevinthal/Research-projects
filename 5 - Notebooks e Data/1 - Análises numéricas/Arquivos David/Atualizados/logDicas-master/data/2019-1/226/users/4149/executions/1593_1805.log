== TEST (2019-03-28 10:28:35) 
-- CODE:
x1= float(input("coloque as coordenadas do ponto x1: "))
x2= float(input("coloque as coordenadas do ponto x2: "))
y1=float(input("coloque as coordenadas do ponto y1: "))
y2=float(input("coloque as coordenadas do ponto y2: "))

xm= (x2+x1)/2
ym= (y2+y1)/2
print(round(xm,1),round(ym,1))

-- OUTPUT:
37.5 39.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 10:28:54) 
-- CODE:
x1= float(input("coloque as coordenadas do ponto x1: "))
x2= float(input("coloque as coordenadas do ponto x2: "))
y1=float(input("coloque as coordenadas do ponto y1: "))
y2=float(input("coloque as coordenadas do ponto y2: "))

xm= (x2+x1)/2
ym= (y2+y1)/2
print(round(xm,1),round(ym,1))

-- EXECUTION TIME:
0.146153
-- TEST CASE 1:
---- input:
50
25
30
48
---- correct output:
40.0
36.5
---- user output:
37.5 39.0
-- TEST CASE 2:
---- input:
2.5
3.0
5.0
1.8
---- correct output:
3.8
2.4
---- user output:
2.8 3.4
-- TEST CASE 3:
---- input:
1.22
2.33
3.44
4.55
---- correct output:
2.3
3.4
---- user output:
1.8 4.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 10:30:30) 
-- CODE:
x1= float(input("coloque as coordenadas do ponto x1: "))
x2= float(input("coloque as coordenadas do ponto x2: "))
y1=float(input("coloque as coordenadas do ponto y1: "))
y2=float(input("coloque as coordenadas do ponto y2: "))

xm= ((x2+x1)/2)
ym= ((y2+y1)/2)
print(round(xm,1),round(ym,1))

-- EXECUTION TIME:
0.138205
-- TEST CASE 1:
---- input:
50
25
30
48
---- correct output:
40.0
36.5
---- user output:
37.5 39.0
-- TEST CASE 2:
---- input:
2.5
3.0
5.0
1.8
---- correct output:
3.8
2.4
---- user output:
2.8 3.4
-- TEST CASE 3:
---- input:
1.22
2.33
3.44
4.55
---- correct output:
2.3
3.4
---- user output:
1.8 4.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:38:01) 
-- CODE:
x1= float(input("coloque as coordenadas do ponto x1: "))
x2= float(input("coloque as coordenadas do ponto x2: "))
y1=float(input("coloque as coordenadas do ponto y1: "))
y2=float(input("coloque as coordenadas do ponto y2: "))

xm= (x2+x1)/2
ym= (y2+y1)/2
print(round(xm,1))
print(round(ym,1))

-- OUTPUT:
37.5
39.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 10:38:24) 
-- CODE:
x1= float(input("coloque as coordenadas do ponto x1: "))
x2= float(input("coloque as coordenadas do ponto x2: "))
y1=float(input("coloque as coordenadas do ponto y1: "))
y2=float(input("coloque as coordenadas do ponto y2: "))

xm= (x2+x1)/2
ym= (y2+y1)/2
print(round(xm,1))
print(round(ym,1))

-- EXECUTION TIME:
0.102751
-- TEST CASE 1:
---- input:
50
25
30
48
---- correct output:
40.0
36.5
---- user output:
37.5
39.0
-- TEST CASE 2:
---- input:
2.5
3.0
5.0
1.8
---- correct output:
3.8
2.4
---- user output:
2.8
3.4
-- TEST CASE 3:
---- input:
1.22
2.33
3.44
4.55
---- correct output:
2.3
3.4
---- user output:
1.8
4.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 10:40:54) 
-- CODE:
x1= float(input("coloque as coordenadas do ponto x1: "))
y1= float(input("coloque as coordenadas do ponto y1: "))
x2=float(input("coloque as coordenadas do ponto x2: "))
y2=float(input("coloque as coordenadas do ponto y2: "))

xm= (x2+x1)/2
ym= (y2+y1)/2
print(round(xm,1))
print(round(ym,1))

-- EXECUTION TIME:
0.184348
-- TEST CASE 1:
---- input:
50
25
30
48
---- correct output:
40.0
36.5
---- user output:
40.0
36.5
-- TEST CASE 2:
---- input:
2.5
3.0
5.0
1.8
---- correct output:
3.8
2.4
---- user output:
3.8
2.4
-- TEST CASE 3:
---- input:
1.22
2.33
3.44
4.55
---- correct output:
2.3
3.4
---- user output:
2.3
3.4
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:41:10) 
-- CODE:
x1= float(input("coloque as coordenadas do ponto x1: "))
y1= float(input("coloque as coordenadas do ponto y1: "))
x2=float(input("coloque as coordenadas do ponto x2: "))
y2=float(input("coloque as coordenadas do ponto y2: "))

xm= (x2+x1)/2
ym= (y2+y1)/2
print(round(xm,1))
print(round(ym,1))

-- OUTPUT:
40.0
36.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
