== TEST (2019-04-29 17:43:09) 
-- CODE:
H=float(input())
h=float(input())
r=float(input())
from math import*
print("Entradas: ",H," , ",h," ,", r)
if(h>H or r>H ):
	print("Entradas invalidas")
else:
	if(H==h):
		v= (4pi/3)r**3 + ((H-2*r)*pi*r**2
		print("Volume: ",round(v,3))
-- ERROR:
File "XXXX", line 10
    v= (4pi/3)r**3 + ((H-2*r)*pi*r**2
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 17:43:33) 
-- CODE:
H=float(input())
h=float(input())
r=float(input())
from math import*
print("Entradas: ",H," , ",h," ,", r)
if(h>H or r>H ):
	print("Entradas invalidas")
else:
	if(H==h):
		v= (4*pi/3)r**3 + ((H-2*r)*pi*r**2
		print("Volume: ",round(v,3))
-- ERROR:
File "XXXX", line 10
    v= (4*pi/3)r**3 + ((H-2*r)*pi*r**2
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 17:44:20) 
-- CODE:
H=float(input())
h=float(input())
r=float(input())
from math import*
print("Entradas: ",H," , ",h," ,", r)
if(h>H or r>H ):
	print("Entradas invalidas")
else:
	if(H==h):
		v= (4/3)*pi*r**3 + ((H-2*r)*pi*r**2
		print("Volume: ",round(v,3))
-- ERROR:
File "XXXX", line 11
    print("Volume: ",round(v,3))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 17:44:52) 
-- CODE:
H=float(input())
h=float(input())
r=float(input())
from math import*
print("Entradas: ",H," , ",h," ,", r)
if(h>H or r>H ):
	print("Entradas invalidas")
else:
	if(H==h):
		v= (4/3)*pi*r**3 + ((H-2*r)*pi*r**2)
		print("Volume: ",round(v,3))
-- OUTPUT:
Entradas:  11.3  ,  5.7  , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 17:46:18) 
-- CODE:
H=float(input())
h=float(input())
r=float(input())
from math import*
print("Entradas:",H,",",h,",", r)
if(h>H or r>H ):
	print("Entradas invalidas")
else:
	if(H==h):
		v= ((4/3)*pi*r**3 + ((H-2*r)*pi*r**2))*1000
		print("Volume: ",round(v,3))
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:31:07) 
-- CODE:
H=float(input())
h=float(input())
r=float(input())
from math import*
print("Entradas:",H,",",h,",", r)
if(h>H or r>H ):
	print("Entradas invalidas")
else:
	if(H==h):
		v= ((4/3)*pi*r**3 + ((H-2*r)*pi*r**2))*1000
		print("Volume: ",round(v,3))
	elif(h>r and h<H and h>r+(H-2*r)):
		v= (((4/3)*pi*r**3)/2 + pi*r**2*(H-2*r) +(((4*pi/3)*r**3)/2) -((pi/3)*(H-h)**2)*(3*r-(H-h)))*1000
		print("Volume: ",round(v,3))
	elif(h>r and h<H and h==H-r):
		v=(((4/3)*pi*r**3)/2 +pi*r**2*(H-2*r))*1000
		print("Volume: ",round(v,3))
	elif((h>r and h<H and h<(H+r)):
		v=(((4/3)*pi*r**3)/2+ pi*r**2*(h-r))*1000
		print("Volume: ",round(v,3))
	elif(h==r):
		v=(((4/3)*pi*r**3)/2)*1000
		print("Volume: ",round(v,3))
	elif(h<r):
		v=(pi/3)*h**2*(3*r-h)
		print("Volume: ",round(v,3))
			

		 
	
	
-- ERROR:
File "XXXX", line 18
    elif((h>r and h<H and h<(H+r)):
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:31:33) 
-- CODE:
H=float(input())
h=float(input())
r=float(input())
from math import*
print("Entradas:",H,",",h,",", r)
if(h>H or r>H ):
	print("Entradas invalidas")
else:
	if(H==h):
		v= ((4/3)*pi*r**3 + ((H-2*r)*pi*r**2))*1000
		print("Volume: ",round(v,3))
	elif(h>r and h<H and h>r+(H-2*r)):
		v= (((4/3)*pi*r**3)/2 + pi*r**2*(H-2*r) +(((4*pi/3)*r**3)/2) -((pi/3)*(H-h)**2)*(3*r-(H-h)))*1000
		print("Volume: ",round(v,3))
	elif(h>r and h<H and h==H-r):
		v=(((4/3)*pi*r**3)/2 +pi*r**2*(H-2*r))*1000
		print("Volume: ",round(v,3))
	elif((h>r and h<H and h<(H+r)):
		v=(((4/3)*pi*r**3)/2+ pi*r**2*(h-r))*1000
		print("Volume: ",round(v,3))
	elif(h==r):
		v=(((4/3)*pi*r**3)/2)*1000
		print("Volume: ",round(v,3))
	elif(h<r):
		v=(pi/3)*h**2*(3*r-h)
		print("Volume: ",round(v,3))
			

		 
	
	
-- ERROR:
File "XXXX", line 18
    elif((h>r and h<H and h<(H+r)):
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:31:56) 
-- CODE:
H=float(input())
h=float(input())
r=float(input())
from math import*
print("Entradas:",H,",",h,",", r)
if(h>H or r>H ):
	print("Entradas invalidas")
else:
	if(H==h):
		v= ((4/3)*pi*r**3 + ((H-2*r)*pi*r**2))*1000
		print("Volume: ",round(v,3))
	elif(h>r and h<H and h>r+(H-2*r)):
		v= (((4/3)*pi*r**3)/2 + pi*r**2*(H-2*r) +(((4*pi/3)*r**3)/2) -((pi/3)*(H-h)**2)*(3*r-(H-h)))*1000
		print("Volume: ",round(v,3))
	elif(h>r and h<H and h==H-r):
		v=(((4/3)*pi*r**3)/2 +pi*r**2*(H-2*r))*1000
		print("Volume: ",round(v,3))
	elif((h>r and h<H and h<(H+r)):
		v=(((4/3)*pi*r**3)/2+ pi*r**2*(h-r))*1000
		print("Volume: ",round(v,3))
	elif(h==r):
		v=(((4/3)*pi*r**3)/2)*1000
		print("Volume: ",round(v,3))
	elif(h<r):
		v=(pi/3)*h**2*(3*r-h)
		print("Volume: ",round(v,3))
			

		 
	
	
-- ERROR:
File "XXXX", line 18
    elif((h>r and h<H and h<(H+r)):
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:32:37) 
-- CODE:
H=float(input())
h=float(input())
r=float(input())
from math import*
print("Entradas:",H,",",h,",", r)
if(h>H or r>H ):
	print("Entradas invalidas")
else:
	if(H==h):
		v= ((4/3)*pi*r**3 + ((H-2*r)*pi*r**2))*1000
		print("Volume: ",round(v,3))
	elif(h>r and h<H and h>r+(H-2*r)):
		v= (((4/3)*pi*r**3)/2 + pi*r**2*(H-2*r) +(((4*pi/3)*r**3)/2) -((pi/3)*(H-h)**2)*(3*r-(H-h)))*1000
		print("Volume: ",round(v,3))
	elif(h>r and h<H and h==H-r):
		v=(((4/3)*pi*r**3)/2 +pi*r**2*(H-2*r))*1000
		print("Volume: ",round(v,3))
	elif((h>r and h<H and h<(H+r)):
		v=(((4/3)*pi*r**3)/2+ pi*r**2*(h-r))*1000
		print("Volume: ",round(v,3))
	elif(h==r):
		v=(((4/3)*pi*r**3)/2)*1000
		print("Volume: ",round(v,3))
	elif(h<r):
		v=(pi/3)*h**2*(3*r-h)
		print("Volume: ",round(v,3))
			

		 
	
	
-- ERROR:
File "XXXX", line 18
    elif((h>r and h<H and h<(H+r)):
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:32:45) 
-- CODE:
H=float(input())
h=float(input())
r=float(input())
from math import*
print("Entradas:",H,",",h,",", r)
if(h>H or r>H ):
	print("Entradas invalidas")
else:
	if(H==h):
		v= ((4/3)*pi*r**3 + ((H-2*r)*pi*r**2))*1000
		print("Volume: ",round(v,3))
	elif(h>r and h<H and h>r+(H-2*r)):
		v= (((4/3)*pi*r**3)/2 + pi*r**2*(H-2*r) +(((4*pi/3)*r**3)/2) -((pi/3)*(H-h)**2)*(3*r-(H-h)))*1000
		print("Volume: ",round(v,3))
	elif(h>r and h<H and h==H-r):
		v=(((4/3)*pi*r**3)/2 +pi*r**2*(H-2*r))*1000
		print("Volume: ",round(v,3))
	elif((h>r and h<H and h<(H+r)):
		v=(((4/3)*pi*r**3)/2+ pi*r**2*(h-r))*1000
		print("Volume: ",round(v,3))
	elif(h==r):
		v=(((4/3)*pi*r**3)/2)*1000
		print("Volume: ",round(v,3))
	elif(h<r):
		v=(pi/3)*h**2*(3*r-h)
		print("Volume: ",round(v,3))
			

		 
	
	
-- ERROR:
File "XXXX", line 18
    elif((h>r and h<H and h<(H+r)):
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:33:50) 
-- CODE:
H=float(input())
h=float(input())
r=float(input())
from math import*
print("Entradas:",H,",",h,",", r)
if(h>H or r>H ):
	print("Entradas invalidas")
else:
	if(H==h):
		v= ((4/3)*pi*r**3 + ((H-2*r)*pi*r**2))*1000
		print("Volume: ",round(v,3))
	elif(h>r and h<H and h>r+(H-2*r)):
		v= (((4/3)*pi*r**3)/2 + pi*r**2*(H-2*r) +(((4*pi/3)*r**3)/2) -((pi/3)*(H-h)**2)*(3*r-(H-h)))*1000
		print("Volume: ",round(v,3))
	elif(h>r and h<H and h==H-r):
		v=(((4/3)*pi*r**3)/2 +pi*r**2*(H-2*r))*1000
		print("Volume: ",round(v,3))
	elif((h>r and h<H and h<(H-r)):
		v=(((4/3)*pi*r**3)/2+ pi*r**2*(h-r))*1000
		print("Volume: ",round(v,3))
	elif(h==r):
		v=(((4/3)*pi*r**3)/2)*1000
		print("Volume: ",round(v,3))
	elif(h<r):
		v=(pi/3)*h**2*(3*r-h)
		print("Volume: ",round(v,3))
			

		 
	
	
-- ERROR:
File "XXXX", line 18
    elif((h>r and h<H and h<(H-r)):
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:36:51) 
-- CODE:
H=float(input())
h=float(input())
r=float(input())
from math import*
print("Entradas:",H,",",h,",", r)
if(h>H or r>H ):
	print("Entradas invalidas")
else:
	if(H==h):
		v= ((4/3)*pi*r**3 + ((H-2*r)*pi*r**2))*1000
		print("Volume: ",round(v,3))
	elif(h>r and h<H and h>r+(H-2*r)):
		v= (((4/3)*pi*r**3)/2 + pi*r**2*(H-2*r) +(((4*pi/3)*r**3)/2) -((pi/3)*(H-h)**2)*(3*r-(H-h)))*1000
		print("Volume: ",round(v,3))
	elif(h>r and h<H and h==H-r):
		v=(((4/3)*pi*r**3)/2 +pi*r**2*(H-2*r))*1000
		print("Volume: ",round(v,3))
	elif(h>r and h<H and h<(H-r)):
		v=(((4/3)*pi*r**3)/2+ pi*r**2*(h-r))*1000
		print("Volume: ",round(v,3))
	elif(h==r):
		v=(((4/3)*pi*r**3)/2)*1000
		print("Volume: ",round(v,3))
	elif(h<r):
		v=(pi/3)*h**2*(3*r-h)
		print("Volume: ",round(v,3))
			

		 
	
	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume:  81987.191
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:37:20) 
-- CODE:
H=float(input())
h=float(input())
r=float(input())
from math import*
print("Entradas:",H,",",h,",", r)
if(h>H or r>H ):
	print("Entradas invalidas")
else:
	if(H==h):
		v= ((4/3)*pi*r**3 + ((H-2*r)*pi*r**2))*1000
		print("Volume: ",round(v,3))
	elif(h>r and h<H and h>r+(H-2*r)):
		v= (((4/3)*pi*r**3)/2 + pi*r**2*(H-2*r) +(((4*pi/3)*r**3)/2) -((pi/3)*(H-h)**2)*(3*r-(H-h)))*1000
		print("Volume: ",round(v,3))
	elif(h>r and h<H and h==H-r):
		v=(((4/3)*pi*r**3)/2 +pi*r**2*(H-2*r))*1000
		print("Volume: ",round(v,3))
	elif(h>r and h<H and h<(H-r)):
		v=(((4/3)*pi*r**3)/2+ pi*r**2*(h-r))*1000
		print("Volume: ",round(v,3))
	elif(h==r):
		v=(((4/3)*pi*r**3)/2)*1000
		print("Volume: ",round(v,3))
	elif(h<r):
		v=(pi/3)*h**2*(3*r-h)
		print("Volume: ",round(v,3))
			

		 
	
	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume:  81987.191
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:37:45) 
-- CODE:
H=float(input())
h=float(input())
r=float(input())
from math import*
print("Entradas:",H,",",h,",", r)
if(h>H or r>H ):
	print("Entradas invalidas")
else:
	if(H==h):
		v= ((4/3)*pi*r**3 + ((H-2*r)*pi*r**2))*1000
		print("Volume: ",round(v,3))
	elif(h>r and h<H and h>r+(H-2*r)):
		v= (((4/3)*pi*r**3)/2 + pi*r**2*(H-2*r) +(((4*pi/3)*r**3)/2) -((pi/3)*(H-h)**2)*(3*r-(H-h)))*1000
		print("Volume: ",round(v,3))
	elif(h>r and h<H and h==H-r):
		v=(((4/3)*pi*r**3)/2 +pi*r**2*(H-2*r))*1000
		print("Volume: ",round(v,3))
	elif(h>r and h<H and h<(H-r)):
		v=(((4/3)*pi*r**3)/2+ pi*r**2*(h-r))*1000
		print("Volume: ",round(v,3))
	elif(h==r):
		v=(((4/3)*pi*r**3)/2)*1000
		print("Volume: ",round(v,3))
	elif(h<r):
		v=(pi/3)*h**2*(3*r-h)
		print("Volume: ",round(v,3))
			

		 
	
	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume:  81987.191
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:38:02) 
-- CODE:
H=float(input())
h=float(input())
r=float(input())
from math import*
print("Entradas:",H,",",h,",", r)
if(h>H or r>H ):
	print("Entradas invalidas")
else:
	if(H==h):
		v= ((4/3)*pi*r**3 + ((H-2*r)*pi*r**2))*1000
		print("Volume: ",round(v,3))
	elif(h>r and h<H and h>r+(H-2*r)):
		v= (((4/3)*pi*r**3)/2 + pi*r**2*(H-2*r) +(((4*pi/3)*r**3)/2) -((pi/3)*(H-h)**2)*(3*r-(H-h)))*1000
		print("Volume: ",round(v,3))
	elif(h>r and h<H and h==H-r):
		v=(((4/3)*pi*r**3)/2 +pi*r**2*(H-2*r))*1000
		print("Volume: ",round(v,3))
	elif(h>r and h<H and h<(H-r)):
		v=(((4/3)*pi*r**3)/2+ pi*r**2*(h-r))*1000
		print("Volume: ",round(v,3))
	elif(h==r):
		v=(((4/3)*pi*r**3)/2)*1000
		print("Volume: ",round(v,3))
	elif(h<r):
		v=(pi/3)*h**2*(3*r-h)
		print("Volume: ",round(v,3))
			

		 
	
	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume:  81987.191
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:38:19) 
-- CODE:
H=float(input())
h=float(input())
r=float(input())
from math import*
print("Entradas:",H,",",h,",", r)
if(h>H or r>H ):
	print("Entradas invalidas")
else:
	if(H==h):
		v= ((4/3)*pi*r**3 + ((H-2*r)*pi*r**2))*1000
		print("Volume: ",round(v,3))
	elif(h>r and h<H and h>r+(H-2*r)):
		v= (((4/3)*pi*r**3)/2 + pi*r**2*(H-2*r) +(((4*pi/3)*r**3)/2) -((pi/3)*(H-h)**2)*(3*r-(H-h)))*1000
		print("Volume: ",round(v,3))
	elif(h>r and h<H and h==H-r):
		v=(((4/3)*pi*r**3)/2 +pi*r**2*(H-2*r))*1000
		print("Volume: ",round(v,3))
	elif(h>r and h<H and h<(H-r)):
		v=(((4/3)*pi*r**3)/2+ pi*r**2*(h-r))*1000
		print("Volume: ",round(v,3))
	elif(h==r):
		v=(((4/3)*pi*r**3)/2)*1000
		print("Volume: ",round(v,3))
	elif(h<r):
		v=(pi/3)*h**2*(3*r-h)
		print("Volume: ",round(v,3))
			

		 
	
	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume:  81987.191
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:38:27) 
-- CODE:
H=float(input())
h=float(input())
r=float(input())
from math import*
print("Entradas:",H,",",h,",", r)
if(h>H or r>H ):
	print("Entradas invalidas")
else:
	if(H==h):
		v= ((4/3)*pi*r**3 + ((H-2*r)*pi*r**2))*1000
		print("Volume: ",round(v,3))
	elif(h>r and h<H and h>r+(H-2*r)):
		v= (((4/3)*pi*r**3)/2 + pi*r**2*(H-2*r) +(((4*pi/3)*r**3)/2) -((pi/3)*(H-h)**2)*(3*r-(H-h)))*1000
		print("Volume: ",round(v,3))
	elif(h>r and h<H and h==H-r):
		v=(((4/3)*pi*r**3)/2 +pi*r**2*(H-2*r))*1000
		print("Volume: ",round(v,3))
	elif(h>r and h<H and h<(H-r)):
		v=(((4/3)*pi*r**3)/2+ pi*r**2*(h-r))*1000
		print("Volume: ",round(v,3))
	elif(h==r):
		v=(((4/3)*pi*r**3)/2)*1000
		print("Volume: ",round(v,3))
	elif(h<r):
		v=(pi/3)*h**2*(3*r-h)
		print("Volume: ",round(v,3))
			

		 
	
	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume:  81987.191
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:39:14) 
-- CODE:
H=float(input())
h=float(input())
r=float(input())
from math import*
print("Entradas:",H,",",h,",", r)
if(h>H or r>H ):
	print("Entradas invalidas")
else:
	if(H==h):
		v= ((4/3)*pi*r**3 + ((H-2*r)*pi*r**2))*1000
		print("Volume: ",round(v,3))
	elif(h>r and h<H and h>r+(H-2*r)):
		v= (((4/3)*pi*r**3)/2 + pi*r**2*(H-2*r) +(((4*pi/3)*r**3)/2) -((pi/3)*(H-h)**2)*(3*r-(H-h)))*1000
		print("Volume: ",round(v,3))
	elif(h>r and h<H and h==H-r):
		v=(((4/3)*pi*r**3)/2 +pi*r**2*(H-2*r))*1000
		print("Volume: ",round(v,3))
	elif(h>r and h<H and h<(H-r)):
		v=(((4/3)*pi*r**3)/2+ pi*r**2*(h-r))*1000
		print("Volume: ",round(v,3))
	elif(h==r):
		v=(((4/3)*pi*r**3)/2)*1000
		print("Volume: ",round(v,3))
	elif(h<r):
		v=(pi/3)*h**2*(3*r-h)
		print("Volume: ",round(v,3))
			

		 
	
	
-- EXECUTION TIME:
0.144659
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume:  81987.191
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume:  234.572
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:39:20) 
-- CODE:
H=float(input())
h=float(input())
r=float(input())
from math import*
print("Entradas:",H,",",h,",", r)
if(h>H or r>H ):
	print("Entradas invalidas")
else:
	if(H==h):
		v= ((4/3)*pi*r**3 + ((H-2*r)*pi*r**2))*1000
		print("Volume: ",round(v,3))
	elif(h>r and h<H and h>r+(H-2*r)):
		v= (((4/3)*pi*r**3)/2 + pi*r**2*(H-2*r) +(((4*pi/3)*r**3)/2) -((pi/3)*(H-h)**2)*(3*r-(H-h)))*1000
		print("Volume: ",round(v,3))
	elif(h>r and h<H and h==H-r):
		v=(((4/3)*pi*r**3)/2 +pi*r**2*(H-2*r))*1000
		print("Volume: ",round(v,3))
	elif(h>r and h<H and h<(H-r)):
		v=(((4/3)*pi*r**3)/2+ pi*r**2*(h-r))*1000
		print("Volume: ",round(v,3))
	elif(h==r):
		v=(((4/3)*pi*r**3)/2)*1000
		print("Volume: ",round(v,3))
	elif(h<r):
		v=(pi/3)*h**2*(3*r-h)
		print("Volume: ",round(v,3))
			

		 
	
	
-- EXECUTION TIME:
0.163486
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume:  81987.191
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume:  234.572
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:39:56) 
-- CODE:
H=float(input())
h=float(input())
r=float(input())
from math import*
print("Entradas:",H,",",h,",", r)
if(h>H or r>H ):
	print("Entradas invalidas")
else:
	if(H==h):
		v= ((4/3)*pi*r**3 + ((H-2*r)*pi*r**2))*1000
		print("Volume: ",round(v,3))
	elif(h>r and h<H and h>r+(H-2*r)):
		v= (((4/3)*pi*r**3)/2 + pi*r**2*(H-2*r) +(((4*pi/3)*r**3)/2) -((pi/3)*(H-h)**2)*(3*r-(H-h)))*1000
		print("Volume: ",round(v,3))
	elif(h>r and h<H and h==H-r):
		v=(((4/3)*pi*r**3)/2 +pi*r**2*(H-2*r))*1000
		print("Volume: ",round(v,3))
	elif(h>r and h<H and h<(H-r)):
		v=(((4/3)*pi*r**3)/2+ pi*r**2*(h-r))*1000
		print("Volume: ",round(v,3))
	elif(h==r):
		v=(((4/3)*pi*r**3)/2)*1000
		print("Volume: ",round(v,3))
	elif(h<r):
		v=(pi/3)*h**2*(3*r-h)
		print("Volume: ",round(v,3))
			

		 
	
	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume:  81987.191
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:40:17) 
-- CODE:
H=float(input())
h=float(input())
r=float(input())
from math import*
print("Entradas:",H,",",h,",", r)
if(h>H or r>H ):
	print("Entradas invalidas")
else:
	if(H==h):
		v= ((4/3)*pi*r**3 + ((H-2*r)*pi*r**2))*1000
		print("Volume: ",round(v,3))
	elif(h>r and h<H and h>r+(H-2*r)):
		v= (((4/3)*pi*r**3)/2 + pi*r**2*(H-2*r) +(((4*pi/3)*r**3)/2) -((pi/3)*(H-h)**2)*(3*r-(H-h)))*1000
		print("Volume: ",round(v,3))
	elif(h>r and h<H and h==H-r):
		v=(((4/3)*pi*r**3)/2 +pi*r**2*(H-2*r))*1000
		print("Volume: ",round(v,3))
	elif(h>r and h<H and h<(H-r)):
		v=(((4/3)*pi*r**3)/2+ pi*r**2*(h-r))*1000
		print("Volume: ",round(v,3))
	elif(h==r):
		v=(((4/3)*pi*r**3)/2)*1000
		print("Volume: ",round(v,3))
	elif(h<r):
		v=((pi/3)*h**2*(3*r-h))*1000
		print("Volume: ",round(v,3))
			

		 
	
	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume:  81987.191
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:40:24) 
-- CODE:
H=float(input())
h=float(input())
r=float(input())
from math import*
print("Entradas:",H,",",h,",", r)
if(h>H or r>H ):
	print("Entradas invalidas")
else:
	if(H==h):
		v= ((4/3)*pi*r**3 + ((H-2*r)*pi*r**2))*1000
		print("Volume: ",round(v,3))
	elif(h>r and h<H and h>r+(H-2*r)):
		v= (((4/3)*pi*r**3)/2 + pi*r**2*(H-2*r) +(((4*pi/3)*r**3)/2) -((pi/3)*(H-h)**2)*(3*r-(H-h)))*1000
		print("Volume: ",round(v,3))
	elif(h>r and h<H and h==H-r):
		v=(((4/3)*pi*r**3)/2 +pi*r**2*(H-2*r))*1000
		print("Volume: ",round(v,3))
	elif(h>r and h<H and h<(H-r)):
		v=(((4/3)*pi*r**3)/2+ pi*r**2*(h-r))*1000
		print("Volume: ",round(v,3))
	elif(h==r):
		v=(((4/3)*pi*r**3)/2)*1000
		print("Volume: ",round(v,3))
	elif(h<r):
		v=((pi/3)*h**2*(3*r-h))*1000
		print("Volume: ",round(v,3))
			

		 
	
	
-- EXECUTION TIME:
0.148378
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume:  81987.191
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume:  234572.251
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:43:19) 
-- CODE:
H=float(input())
h=float(input())
r=float(input())
from math import*
print("Entradas:",H,",",h,",", r)
if(h>H or r>H ):
	print("Entradas invalidas")
else:
	if(H==h):
		v= ((4/3)*pi*r**3 + ((H-2*r)*pi*r**2))*1000
		print("Volume: ",round(v,3) ,"litros")
	elif(h>r and h<H and h>r+(H-2*r)):
		v= (((4/3)*pi*r**3)/2 + pi*r**2*(H-2*r) +(((4*pi/3)*r**3)/2) -((pi/3)*(H-h)**2)*(3*r-(H-h)))*1000
		print("Volume: ",round(v,3) ,"litros")
	elif(h>r and h<H and h==H-r):
		v=(((4/3)*pi*r**3)/2 +pi*r**2*(H-2*r))*1000
		print("Volume: ",round(v,3) ,"litros")
	elif(h>r and h<H and h<(H-r)):
		v=(((4/3)*pi*r**3)/2+ pi*r**2*(h-r))*1000
		print("Volume: ",round(v,3) ,"litros")
	elif(h==r):
		v=(((4/3)*pi*r**3)/2)*1000
		print("Volume: ",round(v,3) ,"litros")
	elif(h<r):
		v=((pi/3)*h**2*(3*r-h))*1000
		print("Volume: ",round(v,3) ,"litros")
			

		 
	
	
-- EXECUTION TIME:
0.155541
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume:  81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume:  234572.251 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:43:25) 
-- CODE:
H=float(input())
h=float(input())
r=float(input())
from math import*
print("Entradas:",H,",",h,",", r)
if(h>H or r>H ):
	print("Entradas invalidas")
else:
	if(H==h):
		v= ((4/3)*pi*r**3 + ((H-2*r)*pi*r**2))*1000
		print("Volume: ",round(v,3) ,"litros")
	elif(h>r and h<H and h>r+(H-2*r)):
		v= (((4/3)*pi*r**3)/2 + pi*r**2*(H-2*r) +(((4*pi/3)*r**3)/2) -((pi/3)*(H-h)**2)*(3*r-(H-h)))*1000
		print("Volume: ",round(v,3) ,"litros")
	elif(h>r and h<H and h==H-r):
		v=(((4/3)*pi*r**3)/2 +pi*r**2*(H-2*r))*1000
		print("Volume: ",round(v,3) ,"litros")
	elif(h>r and h<H and h<(H-r)):
		v=(((4/3)*pi*r**3)/2+ pi*r**2*(h-r))*1000
		print("Volume: ",round(v,3) ,"litros")
	elif(h==r):
		v=(((4/3)*pi*r**3)/2)*1000
		print("Volume: ",round(v,3) ,"litros")
	elif(h<r):
		v=((pi/3)*h**2*(3*r-h))*1000
		print("Volume: ",round(v,3) ,"litros")
			

		 
	
	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume:  81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:43:37) 
-- CODE:
H=float(input())
h=float(input())
r=float(input())
from math import*
print("Entradas:",H,",",h,",", r)
if(h>H or r>H ):
	print("Entradas invalidas")
else:
	if(H==h):
		v= ((4/3)*pi*r**3 + ((H-2*r)*pi*r**2))*1000
		print("Volume: ",round(v,3) ,"litros")
	elif(h>r and h<H and h>r+(H-2*r)):
		v= (((4/3)*pi*r**3)/2 + pi*r**2*(H-2*r) +(((4*pi/3)*r**3)/2) -((pi/3)*(H-h)**2)*(3*r-(H-h)))*1000
		print("Volume: ",round(v,3) ,"litros")
	elif(h>r and h<H and h==H-r):
		v=(((4/3)*pi*r**3)/2 +pi*r**2*(H-2*r))*1000
		print("Volume: ",round(v,3) ,"litros")
	elif(h>r and h<H and h<(H-r)):
		v=(((4/3)*pi*r**3)/2+ pi*r**2*(h-r))*1000
		print("Volume: ",round(v,3) ,"litros")
	elif(h==r):
		v=(((4/3)*pi*r**3)/2)*1000
		print("Volume: ",round(v,3) ,"litros")
	elif(h<r):
		v=((pi/3)*h**2*(3*r-h))*1000
		print("Volume: ",round(v,3) ,"litros")
			

		 
	
	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume:  81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:44:58) 
-- CODE:
H=float(input())
h=float(input())
r=float(input())
from math import*
print("Entradas:",H,",",h,",", r)
if(h>H or r>H ):
	print("Entradas invalidas")
else:
	if(H==h):
		v= ((4/3)*pi*r**3 + ((H-2*r)*pi*r**2))*1000
		print("Volume: ",round(v,3) ,"litros")
	elif(h>r and h<H and h>r+(H-2*r)):
		v= (((4/3)*pi*r**3)/2 + pi*r**2*(H-2*r) +(((4*pi/3)*r**3)/2) -((pi/3)*(H-h)**2)*(3*r-(H-h)))*1000
		print("Volume: ",round(v,3) ,"litros")
	elif(h>r and h<H and h==H-r):
		v=(((4/3)*pi*r**3)/2 +pi*r**2*(H-2*r))*1000
		print("Volume: ",round(v,3) ,"litros")
	elif(h>r and h<H and h<(H-r)):
		v=(((4/3)*pi*r**3)/2+ pi*r**2*(h-r))*1000
		print("Volume: ",round(v,3) ,"litros")
	elif(h==r):
		v=(((4/3)*pi*r**3)/2)*1000
		print("Volume: ",round(v,3) ,"litros")
	elif(h<r):
		v=((pi/3)*h**2*(3*r-h))*1000
		print("Volume: ",round(v,3) ,"litros")
			

		 
	
	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume:  81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:46:49) 
-- CODE:
H=float(input())
h=float(input())
r=float(input())
from math import*
print("Entradas:",H,",",h,",", r)
if(h>H or r>H ):
	print("Entradas invalidas")
else:
	if(H==h):
		v= ((4/3)*pi*r**3 + ((H-2*r)*pi*r**2))*1000
		print("Volume: ",round(v,3) ,"litros")
	elif(h>r and h<H and h>(r+(H-2*r))):
		v= (((4/3)*pi*r**3)/2 + pi*r**2*(H-2*r) +(((4*pi/3)*r**3)/2) -((pi/3)*(H-h)**2)*(3*r-(H-h)))*1000
		print("Volume: ",round(v,3) ,"litros")
	elif(h>r and h<H and h==H-r):
		v=(((4/3)*pi*r**3)/2 +pi*r**2*(H-2*r))*1000
		print("Volume: ",round(v,3) ,"litros")
	elif(h>r and h<H and h<(H-r)):
		v=(((4/3)*pi*r**3)/2+ pi*r**2*(h-r))*1000
		print("Volume: ",round(v,3) ,"litros")
	elif(h==r):
		v=(((4/3)*pi*r**3)/2)*1000
		print("Volume: ",round(v,3) ,"litros")
	elif(h<r):
		v=((pi/3)*h**2*(3*r-h))*1000
		print("Volume: ",round(v,3) ,"litros")
			

		 
	
	
-- EXECUTION TIME:
0.230561
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume:  81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume:  234572.251 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:46:53) 
-- CODE:
H=float(input())
h=float(input())
r=float(input())
from math import*
print("Entradas:",H,",",h,",", r)
if(h>H or r>H ):
	print("Entradas invalidas")
else:
	if(H==h):
		v= ((4/3)*pi*r**3 + ((H-2*r)*pi*r**2))*1000
		print("Volume: ",round(v,3) ,"litros")
	elif(h>r and h<H and h>(r+(H-2*r))):
		v= (((4/3)*pi*r**3)/2 + pi*r**2*(H-2*r) +(((4*pi/3)*r**3)/2) -((pi/3)*(H-h)**2)*(3*r-(H-h)))*1000
		print("Volume: ",round(v,3) ,"litros")
	elif(h>r and h<H and h==H-r):
		v=(((4/3)*pi*r**3)/2 +pi*r**2*(H-2*r))*1000
		print("Volume: ",round(v,3) ,"litros")
	elif(h>r and h<H and h<(H-r)):
		v=(((4/3)*pi*r**3)/2+ pi*r**2*(h-r))*1000
		print("Volume: ",round(v,3) ,"litros")
	elif(h==r):
		v=(((4/3)*pi*r**3)/2)*1000
		print("Volume: ",round(v,3) ,"litros")
	elif(h<r):
		v=((pi/3)*h**2*(3*r-h))*1000
		print("Volume: ",round(v,3) ,"litros")
			

		 
	
	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume:  81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:14:51) 
-- CODE:
H=float(input())
h=float(input())
r=float(input())
from math import*
print("Entradas:",H,",",h,",", r)
if(h>H or r>H ):
	print("Entradas invalidas")
else:
	if(H==h):
		v= ((4/3)*pi*r**3 + ((H-2*r)*pi*r**2))*1000
		print("Volume: ",round(v,3) ,"litros")
	elif(h>r and h<H and h>(r+(H-2*r))):
		v= (((4/3)*pi*r**3)/2 + pi*r**2*(H-2*r) +(((4*pi/3)*r**3)/2) -((pi/3)*(H-h)**2)*(3*r-(H-h)))*1000
		print("Volume: ",round(v,3) ,"litros")
	elif(h>r and h<H and h==H-r):
		v=(((4/3)*pi*r**3)/2 +pi*r**2*(H-2*r))*1000
		print("Volume: ",round(v,3) ,"litros")
	elif(h>r and h<H and h<(H-r)):
		v=(((4/3)*pi*r**3)/2+ pi*r**2*(h-r))*1000
		print("Volume: ",round(v,3) ,"litros")
	elif(h==r):
		v=(((4/3)*pi*r**3)/2)*1000
		print("Volume: ",round(v,3) ,"litros")
	elif(h<r):
		v=((pi/3)*h**2*(3*r-h))*1000
		print("Volume: ",round(v,3) ,"litros")
			

		 
	
	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume:  81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 11:16:36) 
-- CODE:
H=float(input())
h=float(input())
r=float(input())
from math import*
print("Entradas:",H,",",h,",", r)
if(h>H or r>H ):
	print("Entradas invalidas")
else:
	if(H==h):
		v= ((4/3)*pi*r**3 + ((H-2*r)*pi*r**2))*1000
		print("Volume:",round(v,3) ,"litros")
	elif(h>r and h<H and h>(r+(H-2*r))):
		v= (((4/3)*pi*r**3)/2 + pi*r**2*(H-2*r) +(((4*pi/3)*r**3)/2) -((pi/3)*(H-h)**2)*(3*r-(H-h)))*1000
		print("Volume:",round(v,3) ,"litros")
	elif(h>r and h<H and h==H-r):
		v=(((4/3)*pi*r**3)/2 +pi*r**2*(H-2*r))*1000
		print("Volume:",round(v,3) ,"litros")
	elif(h>r and h<H and h<(H-r)):
		v=(((4/3)*pi*r**3)/2+ pi*r**2*(h-r))*1000
		print("Volume:",round(v,3) ,"litros")
	elif(h==r):
		v=(((4/3)*pi*r**3)/2)*1000
		print("Volume:",round(v,3) ,"litros")
	elif(h<r):
		v=((pi/3)*h**2*(3*r-h))*1000
		print("Volume:",round(v,3) ,"litros")
			

		 
	
	
-- EXECUTION TIME:
0.142331
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 234572.251 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:16:39) 
-- CODE:
H=float(input())
h=float(input())
r=float(input())
from math import*
print("Entradas:",H,",",h,",", r)
if(h>H or r>H ):
	print("Entradas invalidas")
else:
	if(H==h):
		v= ((4/3)*pi*r**3 + ((H-2*r)*pi*r**2))*1000
		print("Volume:",round(v,3) ,"litros")
	elif(h>r and h<H and h>(r+(H-2*r))):
		v= (((4/3)*pi*r**3)/2 + pi*r**2*(H-2*r) +(((4*pi/3)*r**3)/2) -((pi/3)*(H-h)**2)*(3*r-(H-h)))*1000
		print("Volume:",round(v,3) ,"litros")
	elif(h>r and h<H and h==H-r):
		v=(((4/3)*pi*r**3)/2 +pi*r**2*(H-2*r))*1000
		print("Volume:",round(v,3) ,"litros")
	elif(h>r and h<H and h<(H-r)):
		v=(((4/3)*pi*r**3)/2+ pi*r**2*(h-r))*1000
		print("Volume:",round(v,3) ,"litros")
	elif(h==r):
		v=(((4/3)*pi*r**3)/2)*1000
		print("Volume:",round(v,3) ,"litros")
	elif(h<r):
		v=((pi/3)*h**2*(3*r-h))*1000
		print("Volume:",round(v,3) ,"litros")
			

		 
	
	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:17:48) 
-- CODE:
H=float(input())
h=float(input())
r=float(input())
from math import*
print("Entradas:",H,",",h,",", r)
if(h>H or r>H ):
	print("Entradas invalidas")
else:
	if(H==h):
		v= ((4/3)*pi*r**3 + ((H-2*r)*pi*r**2))*1000
		print("Volume:",round(v,3) ,"litros")
	elif(h>r and h<H and h>(r+(H-2*r))):
		v= (((4/3)*pi*r**3)/2 + pi*r**2*(H-2*r) +(((4*pi/3)*r**3)/2) -((pi/3)*(H-h)**2)*(3*r-(H-h)))*1000
		print("Volume:",round(v,3) ,"litros")
	elif(h>r and h<H and h==H-r):
		v=(((4/3)*pi*r**3)/2 +pi*r**2*(H-2*r))*1000
		print("Volume:",round(v,3) ,"litros")
	elif(h>r and h<H and h<(H-r)):
		v=(((4/3)*pi*r**3)/2+ pi*r**2*(h-r))*1000
		print("Volume:",round(v,3) ,"litros")
	elif(h==r):
		v=(((4/3)*pi*r**3)/2)*1000
		print("Volume:",round(v,3) ,"litros")
	elif(h<r):
		v=((pi/3)*h**2*(3*r-h))*1000
		print("Volume:",round(v,3) ,"litros")
			

		 
	
	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:18:33) 
-- CODE:
H=float(input())
h=float(input())
r=float(input())
from math import*
print("Entradas:",H,",",h,",", r)
if(h>H or r>H ):
	print("Entradas invalidas")
else:
	if(H==h):
		v= ((4/3)*pi*r**3 + ((H-2*r)*pi*r**2))*1000
		print("Volume:",round(v,3) ,"litros")
	elif(h>r and h<H and h>(r+(H-2*r))):
		v= (((4/3)*pi*r**3)/2 + pi*r**2*(H-2*r) +(((4*pi/3)*r**3)/2) -((pi/3)*(H-h)**2)*(3*r-(H-h)))*1000
		print("Volume:",round(v,3) ,"litros")
	elif(h>r and h<H and h==H-r):
		v=(((4/3)*pi*r**3)/2 +pi*r**2*(H-2*r))*1000
		print("Volume:",round(v,3) ,"litros")
	elif(h>r and h<H and h<(H-r)):
		v=(((4/3)*pi*r**3)/2+ pi*r**2*(h-r))*1000
		print("Volume:",round(v,3) ,"litros")
	elif(h==r):
		v=(((4/3)*pi*r**3)/2)*1000
		print("Volume:",round(v,3) ,"litros")
	elif(h<r):
		v=((pi/3)*h**2*(3*r-h))*1000
		print("Volume:",round(v,3) ,"litros")
			

		 
	
	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:25:49) 
-- CODE:
H=float(input())
h=float(input())
r=float(input())
from math import*
print("Entradas:",H,",",h,",", r)
if(H<=0 or h<=0 or r<=0 or H<h or H<h or H<2*r):
	print("Entradas invalidas")
else:
	if(H==h):
		v= ((4/3)*pi*r**3 + ((H-2*r)*pi*r**2))*1000
		print("Volume:",round(v,3) ,"litros")
	elif(h>r and h<H and h>(r+(H-2*r))):
		v= (((4/3)*pi*r**3)/2 + pi*r**2*(H-2*r) +(((4*pi/3)*r**3)/2) -((pi/3)*(H-h)**2)*(3*r-(H-h)))*1000
		print("Volume:",round(v,3) ,"litros")
	elif(h>r and h<H and h==H-r):
		v=(((4/3)*pi*r**3)/2 +pi*r**2*(H-2*r))*1000
		print("Volume:",round(v,3) ,"litros")
	elif(h>r and h<H and h<(H-r)):
		v=(((4/3)*pi*r**3)/2+ pi*r**2*(h-r))*1000
		print("Volume:",round(v,3) ,"litros")
	elif(h==r):
		v=(((4/3)*pi*r**3)/2)*1000
		print("Volume:",round(v,3) ,"litros")
	elif(h<r):
		v=((pi/3)*h**2*(3*r-h))*1000
		print("Volume:",round(v,3) ,"litros")
			

		 
	
	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 11:25:59) 
-- CODE:
H=float(input())
h=float(input())
r=float(input())
from math import*
print("Entradas:",H,",",h,",", r)
if(H<=0 or h<=0 or r<=0 or H<h or H<h or H<2*r):
	print("Entradas invalidas")
else:
	if(H==h):
		v= ((4/3)*pi*r**3 + ((H-2*r)*pi*r**2))*1000
		print("Volume:",round(v,3) ,"litros")
	elif(h>r and h<H and h>(r+(H-2*r))):
		v= (((4/3)*pi*r**3)/2 + pi*r**2*(H-2*r) +(((4*pi/3)*r**3)/2) -((pi/3)*(H-h)**2)*(3*r-(H-h)))*1000
		print("Volume:",round(v,3) ,"litros")
	elif(h>r and h<H and h==H-r):
		v=(((4/3)*pi*r**3)/2 +pi*r**2*(H-2*r))*1000
		print("Volume:",round(v,3) ,"litros")
	elif(h>r and h<H and h<(H-r)):
		v=(((4/3)*pi*r**3)/2+ pi*r**2*(h-r))*1000
		print("Volume:",round(v,3) ,"litros")
	elif(h==r):
		v=(((4/3)*pi*r**3)/2)*1000
		print("Volume:",round(v,3) ,"litros")
	elif(h<r):
		v=((pi/3)*h**2*(3*r-h))*1000
		print("Volume:",round(v,3) ,"litros")
			

		 
	
	
-- EXECUTION TIME:
0.278317
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
