== TEST (2019-04-09 11:04:15) 
-- CODE:
n = float(input("Ṕreco: ")
n1 = float(input("Pagamento: "))
			 
if(n >= "10.0")
	mensagem = falta x
else:
	mensagem = troco + 
			 
print(round(mensagem, 2))
-- ERROR:
File "XXXX", line 2
    n1 = float(input())
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:04:44) 
-- CODE:
n = float(input("Ṕreco: ")
n1 = float(input("Pagamento: "))
			 
if(n >= "10.0")
	mensagem = falta n
else:
	mensagem = troco n1
			 
print(round(mensagem, 2))
-- ERROR:
File "XXXX", line 2
    n1 = float(input())
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:05:04) 
-- CODE:
n = float(input("Ṕreco: ")
n1 = intnput("Pagamento: "))
			 
if(n >= "10.0")
	mensagem = falta n
else:
	mensagem = troco n1
			 
print(round(mensagem, 2))
-- ERROR:
File "XXXX", line 2
    n1 = intnput("Pagamento: "))
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:05:24) 
-- CODE:
n = float(input("Ṕreco: ")
n1 = int(input("Pagamento: ")
			 
if(n >= "10.0")
	mensagem = falta n
else:
	mensagem = troco n1
			 
print(round(mensagem, 2))
-- ERROR:
File "XXXX", line 2
    n1 = int(input()
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:08:22) 
-- CODE:
n = float(input("Ṕreco: ")
n1 = int(input("Pagamento: ")
			 
if(n - n1 >= "10.0")
	mensagem = falta
else:
	mensagem = troco
			 
print(round(mensagem, 2))
-- ERROR:
File "XXXX", line 2
    n1 = int(input()
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:08:31) 
-- CODE:
n = float(input("Ṕreco: ")
n1 = float(input("Pagamento: ")
			 
if(n - n1 >= "10.0")
	mensagem = falta
else:
	mensagem = troco
			 
print(round(mensagem, 2))
-- ERROR:
File "XXXX", line 2
    n1 = float(input()
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:09:38) 
-- CODE:
n = float(input("Ṕreco: ")
n1 = float(input("Pagamento: ")
			 
if(n > n1):
	mensagem = falta
else:
	mensagem = troco
			 
print(round(mensagem, 2))
-- ERROR:
File "XXXX", line 2
    n1 = float(input()
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:10:57) 
-- CODE:
n = float(input("preco: ")
n1 = float(input("pagamento: ")
			 
if(n > n1):
	mensagem = ("falta", round(n - n1, 2))
else:
	mensagem = ("troco", round(n1 - n, 2))
			 
print(mensagem)
-- ERROR:
File "XXXX", line 2
    n1 = float(input()
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:11:25) 
-- CODE:
n = float(input("preco: ")
m = float(input("pagamento: ")
			 
if(n > m):
	mensagem = ("falta", round(n - m, 2))
else:
	mensagem = ("troco", round(m - n, 2))
			 
print(mensagem)
-- ERROR:
File "XXXX", line 2
    m = float(input()
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:11:48) 
-- CODE:
n = float(input("valor do produto: ")
m = float(input("valor do pagamento: ")
			 
if(n > m):
	mensagem = ("falta", round(n - m, 2))
else:
	mensagem = ("troco", round(m - n, 2))
			 
print(mensagem)
-- ERROR:
File "XXXX", line 2
    m = float(input()
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:12:16) 
-- CODE:
n = float(input("valor do produto: "))
m = float(input("valor do pagamento: "))
			 
if(n > m):
	mensagem = ("falta", round(n - m, 2))
else:
	mensagem = ("troco", round(m - n, 2))
			 
print(mensagem)
-- OUTPUT:
('falta', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:12:30) 
-- CODE:
n = float(input("valor do produto: "))
m = float(input("valor do pagamento: "))
			 
if(n > m):
	mensagem = ("falta", round(n - m, 2))
else:
	mensagem = ("troco", round(m - n, 2))
			 
print(mensagem)
-- EXECUTION TIME:
0.185157
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
('falta', 26.0)
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
('troco', 28.0)
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
('troco', 0.0)
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:13:04) 
-- CODE:
n = float(input("valor do produto: "))
m = float(input("valor do pagamento: "))
			 
if(n > m):
	mensagem = falta
else:
	mensagem = troco
			 
print(round(mensagem, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    mensagem = falta
NameError: name 'falta' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:13:21) 
-- CODE:
n = float(input("valor do produto: "))
m = float(input("valor do pagamento: "))
			 
if(n > m):
	mensagem = "falta"
else:
	mensagem = "troco"
			 
print(round(mensagem, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(round(mensagem, 2))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:14:22) 
-- CODE:
n = float(input("valor do produto: "))
m = float(input("valor do pagamento: "))
			 
if(n > m):
	mensagem = ("falta" + round(n - m, 2))
else:
	mensagem = ("troco" + round(m - n, 2))
			 
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    mensagem = ("falta" + round(n - m, 2))
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:15:14) 
-- CODE:
n = float(input("valor do produto: "))
m = float(input("valor do pagamento: "))
			 
if(n > m):
	mensagem = ("falta" + round(n - m, 2))
else:
	mensagem = ("troco" + round(m - n, 2))
			 
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    mensagem = ("falta" + round(n - m, 2))
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:15:33) 
-- CODE:
n = float(input("valor do produto: "))
m = float(input("valor do pagamento: "))
			 
if(n > m):
	mensagem = ("falta", round(n - m, 2))
else:
	mensagem = ("troco", round(m - n, 2))
			 
print(mensagem)
-- OUTPUT:
('falta', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:15:38) 
-- CODE:
n = float(input("valor do produto: "))
m = float(input("valor do pagamento: "))
			 
if(n > m):
	mensagem = ("falta", round(n - m, 2))
else:
	mensagem = ("troco", round(m - n, 2))
			 
print(mensagem)
-- EXECUTION TIME:
0.138568
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
('falta', 26.0)
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
('troco', 28.0)
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
('troco', 0.0)
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:15:52) 
-- CODE:
n = float(input("valor do produto: "))
m = float(input("valor do pagamento: "))
			 
if(n > m):
	mensagem = ("falta", round(n - m, 2))
else:
	mensagem = ("troco", round(m - n, 2))
			 
print(mensagem)
-- OUTPUT:
('falta', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:16:12) 
-- CODE:
n = float(input("valor do produto: "))
m = float(input("valor do pagamento: "))
			 
if(n > m):
	mensagem = ("falta", round(n - m, 2))
else:
	mensagem = ("troco de", round(m - n, 2))
			 
print(mensagem)
-- OUTPUT:
('falta', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:16:22) 
-- CODE:
n = float(input("valor do produto: "))
m = float(input("valor do pagamento: "))
			 
if(n > m):
	mensagem = ("falta", round(n - m, 2))
else:
	mensagem = ("troco de", round(m - n, 2))
			 
print(mensagem)
-- EXECUTION TIME:
0.147662
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
('falta', 26.0)
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
('troco de', 28.0)
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
('troco de', 0.0)
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:17:27) 
-- CODE:
n = float(input("valor do produto: "))
m = float(input("valor do pagamento: "))

y = round(n - m, 2)
z = round(m - n, 2)
			 
if(n > m):
	mensagem = ("falta" y)
else:
	mensagem = ("troco de" z)
			 
print(mensagem)
-- ERROR:
File "XXXX", line 8
    mensagem = ("falta" y)
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:17:39) 
-- CODE:
n = float(input("valor do produto: "))
m = float(input("valor do pagamento: "))

y = round(n - m, 2)
z = round(m - n, 2)
			 
if(n > m):
	mensagem = "falta" y
else:
	mensagem = "troco de" z
			
print(mensagem)
-- ERROR:
File "XXXX", line 8
    mensagem = "falta" y
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:18:32) 
-- CODE:
n = float(input("valor do produto: "))
m = float(input("valor do pagamento: "))
			 
if(n > m):
	mensagem = ("falta", round(n - m, 2))
else:
	mensagem = ("troco de" round(m - n, 2))
			
print(mensagem)
-- ERROR:
File "XXXX", line 7
    mensagem = ("troco de" round(m - n, 2))
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:18:37) 
-- CODE:
n = float(input("valor do produto: "))
m = float(input("valor do pagamento: "))
			 
if(n > m):
	mensagem = ("falta", round(n - m, 2))
else:
	mensagem = ("troco de", round(m - n, 2))
			
print(mensagem)
-- OUTPUT:
('falta', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:18:44) 
-- CODE:
n = float(input("valor do produto: "))
m = float(input("valor do pagamento: "))
			 
if(n > m):
	mensagem = ("falta", round(n - m, 2))
else:
	mensagem = ("troco de", round(m - n, 2))
			
print(mensagem)
-- EXECUTION TIME:
0.135631
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
('falta', 26.0)
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
('troco de', 28.0)
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
('troco de', 0.0)
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:18:56) 
-- CODE:
n = float(input("valor do produto: "))
m = float(input("valor do pagamento: "))
			 
if(n > m):
	mensagem = "falta", round(n - m, 2)
else:
	mensagem = "troco de", round(m - n, 2)
			
print(mensagem)
-- OUTPUT:
('falta', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:21:46) 
-- CODE:
n = float(input("valor do produto: "))
m = float(input("valor do pagamento: "))
			 
if(n > m):
	print("falta", round(n - m, 2))
else:
	print("troco de", round(m - n, 2))
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:21:52) 
-- CODE:
n = float(input("valor do produto: "))
m = float(input("valor do pagamento: "))
			 
if(n > m):
	print("falta", round(n - m, 2))
else:
	print("troco de", round(m - n, 2))
-- EXECUTION TIME:
0.180098
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:22:14) 
-- CODE:
n = float(input("valor do produto: "))
m = float(input("valor do pagamento: "))
			 
if(n > m):
	print("Falta", round(n - m, 2))
else:
	print("Troco de", round(m - n, 2))
-- OUTPUT:
Falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:22:19) 
-- CODE:
n = float(input("valor do produto: "))
m = float(input("valor do pagamento: "))
			 
if(n > m):
	print("Falta", round(n - m, 2))
else:
	print("Troco de", round(m - n, 2))
-- EXECUTION TIME:
0.147141
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:24:14) 
-- CODE:
n = float(input("valor do produto: "))
m = float(input("valor do pagamento: "))
			 
if(n > m):
	print("Falta", round(n - m, 2))
else:
	print("Troco de", round(m - n, 2))
-- EXECUTION TIME:
0.147034
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:24:19) 
-- CODE:
n = float(input("valor do produto: "))
m = float(input("valor do pagamento: "))
			 
if(n > m):
	print("Falta", round(n - m, 2))
else:
	print("Troco de", round(m - n, 2))
-- EXECUTION TIME:
0.218486
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
