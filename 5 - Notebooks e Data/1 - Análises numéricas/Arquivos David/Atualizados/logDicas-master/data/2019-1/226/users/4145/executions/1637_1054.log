== TEST (2019-04-09 10:23:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input(" valor de x: "))
y = float(input("valor de y: "))

if (2*x + y == 3):
	print("ponto pertence a reta "lower())
	
else:
	print("ponto nao pertence a reta "lower.())
-- ERROR:
File "XXXX", line 8
    print("ponto pertence a reta "lower())
                                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:24:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input(" valor de x: "))
y = float(input("valor de y: "))

if (2*x + y == 3):
	print("ponto pertence a reta ".lower())
	
else:
	print("ponto nao pertence a reta ".lower())
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:24:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input(" valor de x: "))
y = float(input("valor de y: "))

if (2*x + y == 3):
	print("ponto pertence a reta ".lower())
	
else:
	print("ponto nao pertence a reta ".lower())
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:24:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input(" valor de x: "))
y = float(input("valor de y: "))

if (2*x + y == 3):
	print("ponto pertence a reta ".lower())
	
else:
	print("ponto nao pertence a reta ".lower())
-- EXECUTION TIME:
0.163923
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
