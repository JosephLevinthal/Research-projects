== TEST (2019-03-21 11:58:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

Ldoados = (2/3) * Vlitro
Lficados = (1/3) * Vlitro

Vlitro = int(input("Quantos litros foram comprados? "))
equacao = Ldoados + Lficados
print(equacao)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    Ldoados = (2/3) * Vlitro
NameError: name 'Vlitro' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:59:44) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

Ldoados = (2/3) * var1
Lficados = (1/3) * var1

var1 = int(input("Quantos litros foram comprados? "))
equacao = Ldoados + Lficados
print(equacao)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    Ldoados = (2/3) * var1
NameError: name 'var1' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 12:00:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var1 = int(input("Quantos litros foram comprados? "))
equacao = Ldoados + Lficados

Ldoados = (2/3) * var1
Lficados = (1/3) * var1

print(equacao)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    equacao = Ldoados + Lficados
NameError: name 'Ldoados' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 12:00:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var1 = int(input("Quantos litros foram comprados? "))
equacao = Ldoados + Lficados

var2 = (2/3) * var1
var3 = (1/3) * var1

print(equacao)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    equacao = Ldoados + Lficados
NameError: name 'Ldoados' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 12:01:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var1 = int(input("Quantos litros foram comprados? "))

var2 = (2/3) * var1
var3 = (1/3) * var1

equacao = var3 + var2

print(equacao)

-- OUTPUT:
6.999999999999999
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 12:01:13) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var1 = int(input("Quantos litros foram comprados? "))

var2 = (2/3) * var1
var3 = (1/3) * var1

equacao = var3 + var2

print(equacao)

-- EXECUTION TIME:
0.122324
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
6.999999999999999
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:

-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
15.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 12:15:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var1 = float(input("Quantos litros foram comprados? "))

var2 = (2/3) * var1
var3 = (1/3) * var1

equacao = var3 + var2

print(equacao)

-- OUTPUT:
6.999999999999999
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 12:18:21) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var1 = float(input("Quantos litros foram comprados? "))

var2 = var1 * (1/3)

print(var2)

-- OUTPUT:
2.333333333333333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 12:18:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var1 = float(input("Quantos litros foram comprados? "))

var2 = var1 * (1/3)

print(var2)

-- EXECUTION TIME:
0.194285
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
2.333333333333333
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
6.666666666666666
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
5.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 12:20:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var1 = float(input("Quantos litros foram comprados? "))

var2 = var1 * (1/3)

print(round(var2, 3))

-- OUTPUT:
2.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 12:20:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var1 = float(input("Quantos litros foram comprados? "))

var2 = var1 * (1/3)

print(round(var2, 3))

-- EXECUTION TIME:
0.125589
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
2.333
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
6.667
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
5.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
