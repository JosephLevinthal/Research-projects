== TEST (2019-07-09 10:08:25) 
-- CODE:
from numpy import*
v = array(eval(input('v: ')))
new = zeros(size(v), dtype=int)
print(new)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 10:12:10) 
-- CODE:
from numpy import*
v = array(eval(input('v: ')))
new = zeros(size(v), dtype=int)
s1 = 0
s2 = 0
s3 = 0
s4 = 0
for x in range(v):
	if x == 1:
		new[0] = s1 + 1
	elif x == 2:
		new[1] = new[1] + 1
	elif x == 3:
		new[2] = new[2] + 1
	elif x == 4:
		new[3] = new[3] + 1
print(new)
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 10:13:09) 
-- CODE:
from numpy import*
v = array(eval(input('v: ')))
new = zeros(size(v), dtype=int)
s1 = 0
s2 = 0
s3 = 0
s4 = 0
for x in range(v):
	if x == 1:
		new[0] = new[0] + 1
	elif x == 2:
		new[1] = new[1] + 1
	elif x == 3:
		new[2] = new[2] + 1
	elif x == 4:
		new[3] = new[3] + 1
print(new)
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 10:13:22) 
-- CODE:
from numpy import*
v = array(eval(input('v: ')))
new = zeros(size(v), dtype=int)
s1 = 0
s2 = 0
s3 = 0
s4 = 0
for x in range(size(v)):
	if x == 1:
		new[0] = new[0] + 1
	elif x == 2:
		new[1] = new[1] + 1
	elif x == 3:
		new[2] = new[2] + 1
	elif x == 4:
		new[3] = new[3] + 1
print(new)
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 10:13:49) 
-- CODE:
from numpy import*
v = array(eval(input('v: ')))
new = zeros(4, dtype=int)
s1 = 0
s2 = 0
s3 = 0
s4 = 0
for x in range(size(v)):
	if x == 1:
		new[0] = new[0] + 1
	elif x == 2:
		new[1] = new[1] + 1
	elif x == 3:
		new[2] = new[2] + 1
	elif x == 4:
		new[3] = new[3] + 1
print(new)
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 10:16:18) 
-- CODE:
from numpy import*
v = array(eval(input('v: ')))
new = zeros(4, dtype=int)
s1 = 0
new[0] = s1
s2 = 0
new[1] = s2
s3 = 0
new[2] = s3
s4 = 0
new[3] = s4
for x in range(v):
	if x == 1:
		s1 = s1 + 1
	elif x == 2:
		s2 = s2 + 1
	elif x == 3:
		s3 = s3 + 1
	elif x == 4:
		s4 = s4 + 1
print(new)
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 10:16:34) 
-- CODE:
from numpy import*
v = array(eval(input('v: ')))
new = zeros(4, dtype=int)
s1 = 0
new[0] = s1
s2 = 0
new[1] = s2
s3 = 0
new[2] = s3
s4 = 0
new[3] = s4
for x in range(size(v)):
	if x == 1:
		s1 = s1 + 1
	elif x == 2:
		s2 = s2 + 1
	elif x == 3:
		s3 = s3 + 1
	elif x == 4:
		s4 = s4 + 1
print(new)
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 10:17:26) 
-- CODE:
from numpy import*
v = array(eval(input('v: ')))
new = zeros(4, dtype=int)
s1 = 0
s2 = 0
s3 = 0
s4 = 0
for x in range(size(v)):
	if x == 1:
		s1 = s1 + 1
	elif x == 2:
		s2 = s2 + 1
	elif x == 3:
		s3 = s3 + 1
	elif x == 4:
		s4 = s4 + 1
s1 = new[0]
s2 = new[1]
s3 = new[2]
s4 = new[3]
print(new)

		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 10:19:35) 
-- CODE:
from numpy import*
v = array(eval(input('v: ')))
new = zeros(4, dtype=int)

for x in range(size(v)):
	for y in range(size(new))
	if x == 1:
		new[0] = new[0] + 1
	elif x == 2:
		new[1] = new[1] + 1
	elif x == 3:
		new[2] = new[2] + 1
	elif x == 4:
		new[3] = new[3] + 1

print(new)

		
-- ERROR:
File "XXXX", line 6
    for y in range(size(new))
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 10:19:42) 
-- CODE:
from numpy import*
v = array(eval(input('v: ')))
new = zeros(4, dtype=int)

for x in range(size(v)):
	for y in range(size(new)):
	if x == 1:
		new[0] = new[0] + 1
	elif x == 2:
		new[1] = new[1] + 1
	elif x == 3:
		new[2] = new[2] + 1
	elif x == 4:
		new[3] = new[3] + 1

print(new)

		
-- ERROR:
File "XXXX", line 7
    if x == 1:
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 10:20:21) 
-- CODE:
from numpy import*
v = array(eval(input('v: ')))
new = zeros(4, dtype=int)

for x in arrange(v):
	if x == 1:
		new[0] = new[0] + 1
	elif x == 2:
		new[1] = new[1] + 1
	elif x == 3:
		new[2] = new[2] + 1
	elif x == 4:
		new[3] = new[3] + 1

print(new)

		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-09 10:26:38) 
-- CODE:
from numpy import*
v = array(eval(input('v: ')))
new = zeros(4, dtype=int)

for x in v:
	if x == 1:
		new[0] = new[0] + 1
	elif x == 2:
		new[1] = new[1] + 1
	elif x == 3:
		new[2] = new[2] + 1
	elif x == 4:
		new[3] = new[3] + 1

print(new)

		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-09 10:26:52) 
-- CODE:
from numpy import*
v = array(eval(input('v: ')))
new = zeros(4, dtype=int)

for x in v:
	if x == 1:
		new[0] = new[0] + 1
	elif x == 2:
		new[1] = new[1] + 1
	elif x == 3:
		new[2] = new[2] + 1
	elif x == 4:
		new[3] = new[3] + 1

print(new)

		
-- EXECUTION TIME:
1.11056
-- TEST CASE 1:
---- input:
[1,2,3,4,3,2,1,2,3,2,4,1]
---- correct output:
[3 4 3 2]
---- user output:
[3 4 3 2]
-- TEST CASE 2:
---- input:
[1,3,3,4,1,3,1]
---- correct output:
[3 0 3 1]
---- user output:
[3 0 3 1]
-- TEST CASE 3:
---- input:
[1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4]
---- correct output:
[4 4 4 4]
---- user output:
[4 4 4 4]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
