== TEST (2019-04-08 16:55:11) 
-- CODE:
disp= float(input("Qual o valor que voce tem disponivel?"))
ru= int(input("quantos tickets de ru voce quer comprar?"))
vru= float(input("qual o valor dos tickets do ru?"))
passe= int(input("qual a quantidade de passes do onibus?"))
vpasse= float(input("qual o valor dos passes?"))

comida= (ru+vru)
transp= (passe+vpasse)
total= comida+transp

print(total)
-- OUTPUT:
47.7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 16:55:53) 
-- CODE:
disp= float(input("Qual o valor que voce tem disponivel?"))
ru= int(input("quantos tickets de ru voce quer comprar?"))
vru= float(input("qual o valor dos tickets do ru?"))
passe= int(input("qual a quantidade de passes do onibus?"))
vpasse= float(input("qual o valor dos passes?"))

comida= (ru+vru)
transp= (passe+vpasse)
total= comida+transp

if (disp>total):
	print(SUFICIENTE)
else:
	print(INSUFICIENTE)
-- EXECUTION TIME:
0.210405
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1637/2711/main.py", line 12, in <module>
    print(SUFICIENTE)
NameError: name 'SUFICIENTE' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 16:55:55) 
-- CODE:
disp= float(input("Qual o valor que voce tem disponivel?"))
ru= int(input("quantos tickets de ru voce quer comprar?"))
vru= float(input("qual o valor dos tickets do ru?"))
passe= int(input("qual a quantidade de passes do onibus?"))
vpasse= float(input("qual o valor dos passes?"))

comida= (ru+vru)
transp= (passe+vpasse)
total= comida+transp

if (disp>total):
	print(SUFICIENTE)
else:
	print(INSUFICIENTE)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    print(SUFICIENTE)
NameError: name 'SUFICIENTE' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 16:56:43) 
-- CODE:
disp= float(input("Qual o valor que voce tem disponivel?"))
ru= int(input("quantos tickets de ru voce quer comprar?"))
vru= float(input("qual o valor dos tickets do ru?"))
passe= int(input("qual a quantidade de passes do onibus?"))
vpasse= float(input("qual o valor dos passes?"))

comida= (ru+vru)
transp= (passe+vpasse)
total= comida+transp

if (disp>total):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")

-- EXECUTION TIME:
0.14221
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
SUFICIENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 16:56:44) 
-- CODE:
disp= float(input("Qual o valor que voce tem disponivel?"))
ru= int(input("quantos tickets de ru voce quer comprar?"))
vru= float(input("qual o valor dos tickets do ru?"))
passe= int(input("qual a quantidade de passes do onibus?"))
vpasse= float(input("qual o valor dos passes?"))

comida= (ru+vru)
transp= (passe+vpasse)
total= comida+transp

if (disp>total):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")

-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 16:58:08) 
-- CODE:
disp= float(input("Qual o valor que voce tem disponivel?"))
ru= int(input("quantos tickets de ru voce quer comprar?"))
vru= float(input("qual o valor dos tickets do ru?"))
passe= int(input("qual a quantidade de passes do onibus?"))
vpasse= float(input("qual o valor dos passes?"))

comida= (ru+vru)
transp= (passe+vpasse)
total= comida+transp

if (disp>total):
	msg="SUFICIENTE"
else:
	msg="INSUFICIENTE"
print(msg)
-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 16:58:19) 
-- CODE:
disp= float(input("Qual o valor que voce tem disponivel?"))
ru= int(input("quantos tickets de ru voce quer comprar?"))
vru= float(input("qual o valor dos tickets do ru?"))
passe= int(input("qual a quantidade de passes do onibus?"))
vpasse= float(input("qual o valor dos passes?"))

comida= (ru+vru)
transp= (passe+vpasse)
total= comida+transp

if (disp>total):
	msg="SUFICIENTE"
else:
	msg="INSUFICIENTE"
print(msg)
-- EXECUTION TIME:
0.208183
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
SUFICIENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 16:59:40) 
-- CODE:
disp= int(input("Qual o valor que voce tem disponivel?"))
ru= int(input("quantos tickets de ru voce quer comprar?"))
vru= float(input("qual o valor dos tickets do ru?"))
passe= int(input("qual a quantidade de passes do onibus?"))
vpasse= float(input("qual o valor dos passes?"))

comida= (ru+vru)
transp= (passe+vpasse)
total= comida+transp

if (disp>total):
	msg="SUFICIENTE"
else:
	msg="INSUFICIENTE"
print(msg)
-- EXECUTION TIME:
0.226368
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
SUFICIENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 16:59:50) 
-- CODE:
disp= int(input("Qual o valor que voce tem disponivel?"))
ru= int(input("quantos tickets de ru voce quer comprar?"))
vru= float(input("qual o valor dos tickets do ru?"))
passe= int(input("qual a quantidade de passes do onibus?"))
vpasse= float(input("qual o valor dos passes?"))

comida= (ru+vru)
transp= (passe+vpasse)
total= comida+transp

if (disp>total):
	msg="SUFICIENTE"
else:
	msg="INSUFICIENTE"
print(msg)
-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 17:01:11) 
-- CODE:
disp= int(input("Qual o valor que voce tem disponivel?"))
ru= int(input("quantos tickets de ru voce quer comprar?"))
vru= float(input("qual o valor dos tickets do ru?"))
passe= int(input("qual a quantidade de passes do onibus?"))
vpasse= float(input("qual o valor dos passes?"))

total= disp-(ru+vru+passe+vpasse)

if (total>0):
	msg="SUFICIENTE"
else:
	msg="INSUFICIENTE"
print(msg)
-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 17:01:23) 
-- CODE:
disp= int(input("Qual o valor que voce tem disponivel?"))
ru= int(input("quantos tickets de ru voce quer comprar?"))
vru= float(input("qual o valor dos tickets do ru?"))
passe= int(input("qual a quantidade de passes do onibus?"))
vpasse= float(input("qual o valor dos passes?"))

total= disp-(ru+vru+passe+vpasse)

if (total>0):
	msg="SUFICIENTE"
else:
	msg="INSUFICIENTE"
print(msg)
-- EXECUTION TIME:
0.248396
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
SUFICIENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 17:02:16) 
-- CODE:
disp= int(input("Qual o valor que voce tem disponivel?"))
ru= int(input("quantos tickets de ru voce quer comprar?"))
vru= float(input("qual o valor dos tickets do ru?"))
passe= int(input("qual a quantidade de passes do onibus?"))
vpasse= float(input("qual o valor dos passes?"))

total= disp-(ru+vru+passe+vpasse)

if (total>0):
	msg="suficiente".upper()
else:
	msg="INSUFICIENTE"
print(msg)
-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 17:02:40) 
-- CODE:
disp= int(input("Qual o valor que voce tem disponivel?"))
ru= int(input("quantos tickets de ru voce quer comprar?"))
vru= float(input("qual o valor dos tickets do ru?"))
passe= int(input("qual a quantidade de passes do onibus?"))
vpasse= float(input("qual o valor dos passes?"))

total= disp-(ru+vru+passe+vpasse)

if (total>0):
	msg="suficiente".upper()
else:
	msg="insuficiente".upper()
print(msg)
-- EXECUTION TIME:
0.274092
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
SUFICIENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 17:02:49) 
-- CODE:
disp= int(input("Qual o valor que voce tem disponivel?"))
ru= int(input("quantos tickets de ru voce quer comprar?"))
vru= float(input("qual o valor dos tickets do ru?"))
passe= int(input("qual a quantidade de passes do onibus?"))
vpasse= float(input("qual o valor dos passes?"))

total= disp-(ru+vru+passe+vpasse)

if (total>0):
	msg="suficiente".upper()
else:
	msg="insuficiente".upper()
print(msg)
-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 17:03:03) 
-- CODE:
disp= int(input("Qual o valor que voce tem disponivel?"))
ru= int(input("quantos tickets de ru voce quer comprar?"))
vru= float(input("qual o valor dos tickets do ru?"))
passe= int(input("qual a quantidade de passes do onibus?"))
vpasse= float(input("qual o valor dos passes?"))

total= disp-(ru+vru+passe+vpasse)

if (total>0):
	msg="suficiente".upper()
else:
	msg="insuficiente".upper()
print(msg)
-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 17:03:15) 
-- CODE:
disp= int(input("Qual o valor que voce tem disponivel?"))
ru= int(input("quantos tickets de ru voce quer comprar?"))
vru= float(input("qual o valor dos tickets do ru?"))
passe= int(input("qual a quantidade de passes do onibus?"))
vpasse= float(input("qual o valor dos passes?"))

total= disp-(ru+vru+passe+vpasse)

if (total>0):
	msg="suficiente".upper()
else:
	msg="insuficiente".upper()
print(msg)
-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 17:03:29) 
-- CODE:
disp= int(input("Qual o valor que voce tem disponivel?"))
ru= int(input("quantos tickets de ru voce quer comprar?"))
vru= float(input("qual o valor dos tickets do ru?"))
passe= int(input("qual a quantidade de passes do onibus?"))
vpasse= float(input("qual o valor dos passes?"))

total= disp-(ru+vru+passe+vpasse)

if (total>0):
	msg="suficiente".upper()
else:
	msg="insuficiente".upper()
print(msg)
-- EXECUTION TIME:
0.147048
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
SUFICIENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:03:33) 
-- CODE:
disp= int(input("Qual o valor que voce tem disponivel?"))
ru= int(input("quantos tickets de ru voce quer comprar?"))
vru= float(input("qual o valor dos tickets do ru?"))
passe= int(input("qual a quantidade de passes do onibus?"))
vpasse= float(input("qual o valor dos passes?"))

total= disp-(ru+vru+passe+vpasse)

if (total>0):
	msg="suficiente".upper()
if (total<0)
	msg="insuficiente".upper()
print(msg)
-- EXECUTION TIME:
0.118411
-- ERROR:
  File "/home/codebench/codes/1637/2711/main.py", line 11
    if (total<0)
               ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:03:35) 
-- CODE:
disp= int(input("Qual o valor que voce tem disponivel?"))
ru= int(input("quantos tickets de ru voce quer comprar?"))
vru= float(input("qual o valor dos tickets do ru?"))
passe= int(input("qual a quantidade de passes do onibus?"))
vpasse= float(input("qual o valor dos passes?"))

total= disp-(ru+vru+passe+vpasse)

if (total>0):
	msg="suficiente".upper()
if (total<0)
	msg="insuficiente".upper()
print(msg)
-- ERROR:
File "XXXX", line 11
    if (total<0)
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:03:41) 
-- CODE:
disp= int(input("Qual o valor que voce tem disponivel?"))
ru= int(input("quantos tickets de ru voce quer comprar?"))
vru= float(input("qual o valor dos tickets do ru?"))
passe= int(input("qual a quantidade de passes do onibus?"))
vpasse= float(input("qual o valor dos passes?"))

total= disp-(ru+vru+passe+vpasse)

if (total>0):
	msg="suficiente".upper()
if (total<0):
	msg="insuficiente".upper()
print(msg)
-- EXECUTION TIME:
0.183223
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
SUFICIENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:03:42) 
-- CODE:
disp= int(input("Qual o valor que voce tem disponivel?"))
ru= int(input("quantos tickets de ru voce quer comprar?"))
vru= float(input("qual o valor dos tickets do ru?"))
passe= int(input("qual a quantidade de passes do onibus?"))
vpasse= float(input("qual o valor dos passes?"))

total= disp-(ru+vru+passe+vpasse)

if (total>0):
	msg="suficiente".upper()
if (total<0):
	msg="insuficiente".upper()
print(msg)
-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:04:02) 
-- CODE:
disp= int(input("Qual o valor que voce tem disponivel?"))
ru= int(input("quantos tickets de ru voce quer comprar?"))
vru= float(input("qual o valor dos tickets do ru?"))
passe= int(input("qual a quantidade de passes do onibus?"))
vpasse= float(input("qual o valor dos passes?"))

total= disp-(ru+vru+passe+vpasse)

if (total>0):
	msg="suficiente".upper()
if (total<0):
	msg="insuficiente".upper()
print(msg)
-- EXECUTION TIME:
0.161202
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
SUFICIENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:06:29) 
-- CODE:
disp= int(input("Qual o valor que voce tem disponivel?"))
ru= int(input("quantos tickets de ru voce quer comprar?"))
vru= float(input("qual o valor dos tickets do ru?"))
passe= int(input("qual a quantidade de passes do onibus?"))
vpasse= float(input("qual o valor dos passes?"))

total= disp-((ru*vru)+(passe*vpasse))

if (total>0):
	msg="suficiente".upper()
if (total<0):
	msg="insuficiente".upper()
print(msg)
-- EXECUTION TIME:
0.170024
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
INSUFICIENTE
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
