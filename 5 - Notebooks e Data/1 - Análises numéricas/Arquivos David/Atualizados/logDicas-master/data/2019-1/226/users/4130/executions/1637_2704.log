== TEST (2019-04-09 10:33:53) 
-- CODE:
x = float(input("Nota do aluno: "))
x1 = input("Vai receber ou não: ")

d = 10 / 100

if (x == 6):
	mensagem = x + (d * x)
else:
	mensagem = x
	
print(mensagem)
-- OUTPUT:
5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:36:11) 
-- CODE:
x = float(input("Nota do aluno: "))

d = 10 / 100

if (x == 6):
	mensagem = x + (d * x)
else:
	mensagem = x
	
print(mensagem)
-- OUTPUT:
5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:36:17) 
-- CODE:
x = float(input("Nota do aluno: "))

d = 10 / 100

if (x == 6):
	mensagem = x + (d * x)
else:
	mensagem = x
	
print(mensagem)
-- EXECUTION TIME:
0.151138
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.0
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.0
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:36:21) 
-- CODE:
x = float(input("Nota do aluno: "))

d = 10 / 100

if (x == 6):
	mensagem = x + (d * x)
else:
	mensagem = x
	
print(mensagem)
-- OUTPUT:
5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:38:01) 
-- CODE:
x = float(input("Nota do aluno: "))
b = input("Bonificação: ")

d = 10 / 100

if (x == 6):
	mensagem = x + (d * x)
else:
	mensagem = x
	
print(mensagem)
-- OUTPUT:
5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:38:33) 
-- CODE:
x = float(input("Nota do aluno: "))
b = input("Bonificação: ")

d = 10 / 100

if (x == b):
	mensagem = x + (d * x)
	
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(mensagem)
NameError: name 'mensagem' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:42:36) 
-- CODE:
x = float(input("Nota do aluno: "))
b = input("Bonificação: (S ou N)")

d = 10 / 100

S = x + (x * d) 
N = x

if (x == b):
	
print(mensagem)
-- ERROR:
File "XXXX", line 11
    print(mensagem)
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:47:36) 
-- CODE:
x = float(input("Nota do aluno: "))
b = input("Bonificação: ")

if (x == "S"):
	mensagem = x + (x * 10/100)
else:
	mensagem = x
		
	
print(mensagem)
-- OUTPUT:
5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:47:51) 
-- CODE:
x = float(input("Nota do aluno: "))
b = input("Bonificação: ")

if (x == "S"):
	mensagem = "x + (x * 10/100)"
else:
	mensagem = "x"
		
	
print(mensagem)
-- OUTPUT:
x
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:48:13) 
-- CODE:
x = float(input("Nota do aluno: "))
b = input("Receber bonificação: ")

if (x == "S"):
	mensagem = "x + (x * 10/100)"
else:
	mensagem = "x"
		
	
print(mensagem)
-- OUTPUT:
x
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:48:50) 
-- CODE:
x = float(input("Nota do aluno: "))
b = input("Receber bonificação: ")

if (b == "S"):
	mensagem = x + (x * 10/100)
else:
	mensagem = x
		
print(mensagem)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:49:21) 
-- CODE:
x = float(input("Nota do aluno: "))
b = input("Receber bonificacao: ")

if (b == "S"):
	mensagem = x + (x * (10/100)
else:
	mensagem = x
		
print(mensagem)
-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:49:28) 
-- CODE:
x = float(input("Nota do aluno: "))
b = input("Receber bonificacao: ")

if (b == "S"):
	mensagem = x + (x * (10/100))
	mensagem = x
		
print(mensagem)
-- OUTPUT:
5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:49:37) 
-- CODE:
x = float(input("Nota do aluno: "))
b = input("Receber bonificacao: ")

if (b == "S"):
	mensagem = x + (x * (10/100))
else:
	mensagem = x
		
print(mensagem)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:49:45) 
-- CODE:
x = float(input("Nota do aluno: "))
b = input("Receber bonificacao: ")

if (b == "S"):
	mensagem = x + (x * (10/100))
else:
	mensagem = x
		
print(mensagem)
-- EXECUTION TIME:
0.183724
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:24:22) 
-- CODE:
x = float(input("Nota do aluno: "))
b = input("Receber bonificacao: ")

if (b == "S"):
	mensagem = x + (x * (10/100))
else:
	mensagem = x
		
print(mensagem)
-- EXECUTION TIME:
0.150699
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 21:59:27) 
-- CODE:
x = float(input("Nota do aluno: "))
b = input("Receber bonificacao (S / N): ")

if (b == "S"):
	mensagem = x + (x * (10/100))
else:
	mensagem = x
		
print(mensagem)
-- EXECUTION TIME:
0.165929
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
