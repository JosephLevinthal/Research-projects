== TEST (2019-05-09 21:12:47) 
-- CODE:
from math import*
ax = eval(input("angulo: "))
k = int(input("numero termos da serie: "))

soma = 0
i = 3
fim = k+2

while(i <= fim):
	soma = soma + (-1 * (x**3)/factorial(i))
	i = i + 1

print(round(soma,10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    soma = soma + (-1 * (x**3)/factorial(i))
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:14:34) 
-- CODE:
from math import*
ax = eval(input("angulo: "))
k = int(input("numero termos da serie: "))

soma = 0
i = 3
fim = k+2

while(i <= fim):
	soma = soma + (-1 * (ax**3)/factorial(i))
	i = i + 1

print(round(soma,10))
-- OUTPUT:
-0.8459053658
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:20:32) 
-- CODE:
from math import*
ax = eval(input("angulo: "))
k = int(input("numero termos da serie: "))

soma = 0
i = 1
fim = k

while(i <= fim):
	soma = soma + (-1 * (ax**(3*(i+1+i)))/factorial((i+1+i)))
	i = i + 1

print(round(soma,10))
-- OUTPUT:
-20.2164121
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:23:30) 
-- CODE:
from math import*
ax = eval(input("angulo: "))
k = int(input("numero termos da serie: "))

soma = 0
i = 1
fim = k

while(i <= fim):
	soma = soma +(-1 * (ax**(i+1+i))/factorial((i+1+i)))
	i = i + 1

print(round(soma,10))
-- OUTPUT:
-0.7305025179
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:28:43) 
-- CODE:
from math import*
ax = eval(input("angulo: "))
k = int(input("numero termos da serie: "))

soma = 0
i = 1
fim = k

while(i <= fim):
	soma = soma + ((ax**(i+1+i))/factorial((i+1+i))*(-1**i))
	i = i + 1

print(round(soma,10))
-- OUTPUT:
-0.7305025179
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:29:16) 
-- CODE:
from math import*
ax = eval(input("angulo: "))
k = int(input("numero termos da serie: "))

soma = 0
i = 1
fim = k

while(i <= fim):
	soma = soma + ((ax**(i+1+i))/factorial((i+1+i))*(-1**i))
	i = i + 1
	print(i)

print(round(soma,10))
-- OUTPUT:
2
3
4
5
6
-0.7305025179
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:29:55) 
-- CODE:
from math import*
ax = eval(input("angulo: "))
k = int(input("numero termos da serie: "))

soma = 0
i = 1
fim = k - 1

while(i <= fim):
	soma = soma + ((ax**(i+1+i))/factorial((i+1+i))*(-1**i))
	i = i + 1
	print(i)

print(round(soma,10))
-- OUTPUT:
2
3
4
5
-0.7304989191
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:30:57) 
-- CODE:
from math import*
ax = eval(input("angulo: "))
k = int(input("numero termos da serie: "))

soma = 0
i = 1
fim = k - 1

while(i <= fim):
	soma = ax + ((ax**(i+1+i))/factorial((i+1+i))*(-1**i))
	i = i + 1
	print(i)

print(round(soma,10))
-- OUTPUT:
2
3
4
5
1.5706358856
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:31:26) 
-- CODE:
from math import*
ax = eval(input("angulo: "))
k = int(input("numero termos da serie: "))

soma = 0
i = 1
fim = k

while(i <= fim):
	soma = ax + ((ax**(i+1+i))/factorial((i+1+i))*(-1**i))
	i = i + 1
	print(i)

print(round(soma,10))
-- OUTPUT:
2
3
4
5
6
1.570792728
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:32:25) 
-- CODE:
from math import*
ax = eval(input("angulo: "))
k = int(input("numero termos da serie: "))

soma = 0
i = 1
fim = k - 1

while(i <= fim):
	soma = ax + ((ax**(i+1+i))/factorial((i+1+i))*(-1**i))
	i = i + 1
	print(i)

print(round(soma,10))
-- OUTPUT:
2
3
4
5
1.5706358856
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:33:28) 
-- CODE:
from math import*
ax = eval(input("angulo: "))
k = int(input("numero termos da serie: "))

soma = 0
i = 1
fim = k - 1

while(i <= fim):
	soma = ax - ((ax**(i+1+i))/factorial((i+1+i))
	i = i + 1
	print(i)

print(round(soma,10))
-- ERROR:
File "XXXX", line 11
    i = i + 1
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:33:41) 
-- CODE:
from math import*
ax = eval(input("angulo: "))
k = int(input("numero termos da serie: "))

soma = 0
i = 1
fim = k - 1

while(i <= fim):
	soma = ax - ((ax**(i+1+i))/factorial((i+1+i)))
	i = i + 1
	print(i)

print(round(soma,10))
-- OUTPUT:
2
3
4
5
1.5706358856
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:34:36) 
-- CODE:
from math import*
ax = eval(input("angulo: "))
k = int(input("numero termos da serie: "))

soma = 0
i = 1
fim = k - 1

while(i <= fim):
	soma = ax - ((ax**(i+1+i))/factorial((i+1+i)))
	i = i + 1
	print(i)

print(round(soma,10))
-- OUTPUT:
2
3
4
5
1.5706358856
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:35:05) 
-- CODE:
from math import*
ax = eval(input("angulo: "))
k = int(input("numero termos da serie: "))

soma = 0
i = 1
fim = k - 1

while(i <= fim):
	soma = ax - ((ax**(i+1+i))/factorial((i+1+i)))
	i = i + 1
	print(i)

print(round(soma,10))
-- OUTPUT:
2
3
4
5
1.5706358856
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:36:01) 
-- CODE:
from math import*
ax = eval(input("angulo: "))
k = int(input("numero termos da serie: "))

soma = 0
i = 1
fim = k - 1

while(i <= fim):
	soma = ax - ((ax**(i+1+i))/factorial((i+1+i)))
	i = i + 1
	print(i)

print(round(soma,10))
-- OUTPUT:
2
3
4
5
1.5706358856
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:36:15) 
-- CODE:
from math import*
ax = eval(input("angulo: "))
k = int(input("numero termos da serie: "))

soma = 0
i = 1
fim = k - 1

while(i <= fim):
	soma = ax - ((ax**(i+1+i))/factorial((i+1+i)))
	i = i + 1
	print(i)

print(round(soma,10))
-- OUTPUT:
2
3
4
5
1.5706358856
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:36:24) 
-- CODE:
from math import*
ax = eval(input("angulo: "))
k = int(input("numero termos da serie: "))

soma = 0
i = 1
fim = k - 1

while(i <= fim):
	soma = ax - ((ax**(i+1+i))/factorial((i+1+i)))
	i = i + 1
	print(i)

print(round(soma,10))
-- OUTPUT:
2
3
4
5
1.5706358856
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:39:35) 
-- CODE:
from math import*
ax = radians(eval(input("angulo: ")))
k = int(input("numero termos da serie: "))

soma = 0
i = 1
fim = k - 1

while(i <= fim):
	soma = ax - ((ax**(i+1+i))/factorial((i+1+i)))
	i = i + 1
	print(i)

print(round(soma,10))
-- OUTPUT:
2
3
4
5
0.0274155678
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:40:08) 
-- CODE:
from math import*
ax = radians(eval(input("angulo: ")))
k = int(input("numero termos da serie: "))

soma = 0
i = 1
fim = k - 1

while(i <= fim):
	soma = ax - ((ax**(i+1+i))/factorial((i+1+i)))
	i = i + 1
	print(i)

print(round(soma,10))
-- OUTPUT:
2
3
4
5
0.0274155678
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:40:44) 
-- CODE:
from math import*
ax = eval(input("angulo: "))
k = int(input("numero termos da serie: "))

soma = 0
i = 1
fim = k - 1

while(i <= fim):
	soma = ax - ((ax**(i+1+i))/factorial((i+1+i)))
	i = i + 1
	print(i)

print(round(soma,10))
-- OUTPUT:
2
3
4
5
1.5706358856
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:41:12) 
-- CODE:
from math import*
ax = eval(input("angulo: "))
k = int(input("numero termos da serie: "))

soma = 0
i = 1
fim = k - 1

while(i <= fim):
	soma = ax - ((ax**(i+1+i))/factorial((i+1+i)))
	i = i + 1
	print(i)

print(round(soma,10))
-- OUTPUT:
2
3
4
5
1.5706358856
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:43:40) 
-- CODE:
from math import*
ax = eval(input("angulo: "))
k = int(input("numero termos da serie: "))

soma = 0
i = 1
fim = k

while(i <= fim):
	soma = ax - ((ax**(i+1+i))/factorial((i+1+i)))
	i = i + 1
	print(i)

print(round(soma,10))
-- OUTPUT:
2
3
4
5
6
1.570792728
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:44:12) 
-- CODE:
from math import*
ax = eval(input("angulo: "))
k = int(input("numero termos da serie: "))

soma = 0
i = 1
fim = k

while(i <= fim):
	soma = ax - ((ax**(i+1+i))/factorial((i+1+i)))
	i = i + 1
	print(i)

print(round(soma,10))
-- OUTPUT:
2
3
4
5
6
1.570792728
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:47:39) 
-- CODE:
from math import*
ax = eval(input("angulo: "))
k = int(input("numero termos da serie: "))

soma = 0
i = 1
fim = k

while(i <= fim):
	soma = soma - ((ax**(i+1+i))/factorial((i+1+i)))
	i = i + 1
	print(i)

print(round(soma,10))
-- OUTPUT:
2
3
4
5
6
-0.7305025179
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:48:13) 
-- CODE:
from math import*
ax = radians(eval(input("angulo: ")))
k = int(input("numero termos da serie: "))

soma = 0
i = 1
fim = k

while(i <= fim):
	soma = soma - ((ax**(i+1+i))/factorial((i+1+i)))
	i = i + 1
	print(i)

print(round(soma,10))
-- OUTPUT:
2
3
4
5
6
-3.4344e-06
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:49:27) 
-- CODE:
from math import*
ax = radians(eval(input("angulo: ")))
k = int(input("numero termos da serie: "))

soma = 0
i = 1
fim = k

while(i <= fim):
	soma = soma - ((soma**(i+1+i))/factorial((i+1+i)))
	i = i + 1
	print(i)

print(round(soma,10))
-- OUTPUT:
2
3
4
5
6
0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 21:49:43) 
-- CODE:
from math import*
ax = radians(eval(input("angulo: ")))
k = int(input("numero termos da serie: "))

soma = 0
i = 1
fim = k

while(i <= fim):
	soma = soma - ((soma**(i+1+i))/factorial((i+1+i)))
	i = i + 1
	print(i)

print(round(soma,10))
-- OUTPUT:
2
3
4
5
6
0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 22:15:34) 
-- CODE:
from math import*
ax = radians(eval(input("angulo: ")))
k = int(input("numero termos da serie: "))

soma = 0
i = 0

while(i < k):
	soma = soma + (((-1)**i)*((ax**(2*i+1))/factorial((i+1+i))))
	i = i + 1
while (i < fim):
	soma = soma + (-1)**i / (2 * i + 1)**3
	i = i + 1

	print(i)

print(round(soma,10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    while (i < fim):
NameError: name 'fim' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 22:16:38) 
-- CODE:
from math import*
ax = radians(eval(input("angulo: ")))
k = int(input("numero termos da serie: "))

soma = 0
i = 0

while(i < k):
	soma = soma + (((-1)**i)*((ax**(2*i+1))/factorial((2*i+1))))
	i = i + 1
	print(i)

print(round(soma,10))
-- OUTPUT:
1
2
3
4
5
0.0274121336
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 22:17:32) 
-- CODE:
from math import*
ax = radians(eval(input("angulo: ")))
k = int(input("numero termos da serie: "))

soma = 0
i = 0

while(i < k):
	soma = soma - (((-1)**i)*((ax**(2*i+1))/factorial((2*i+1))))
	i = i + 1
	print(i)

print(round(soma,10))
-- OUTPUT:
1
2
3
4
5
-0.0274121336
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 22:19:51) 
-- CODE:
from math import*
ax = radians(eval(input("angulo: ")))
k = int(input("numero termos da serie: "))

soma = 0
i = 0
fim = k-1

while(i<=fim):
	soma = soma - (((-1)**i)*((ax**(2*i+1))/factorial((2*i+1))))
	i = i + 1
	print(i)

print(round(soma,10))
-- OUTPUT:
1
2
3
4
5
-0.0274121336
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 22:20:33) 
-- CODE:
from math import*
ax = radians(input("angulo: "))
k = int(input("numero termos da serie: "))

soma = 0
i = 0
fim = k-1

while(i<=fim):
	soma = soma - (((-1)**i)*((ax**(2*i+1))/factorial((2*i+1))))
	i = i + 1
	print(i)

print(round(soma,10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    ax = radians(input())
TypeError: must be real number, not str
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 22:21:27) 
-- CODE:
from math import*
ax = radians(float(input("angulo: ")))
k = int(input("numero termos da serie: "))

soma = 0
i = 0
fim = k-1

while(i<=fim):
	soma = soma - (((-1)**i)*((ax**(2*i+1))/factorial((2*i+1))))
	i = i + 1
	print(i)

print(round(soma,10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    ax = radians(float(input()))
ValueError: could not convert string to float: 'pi/2'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 22:22:12) 
-- CODE:
from math import*
ax = radians(eval(input("angulo: ")))
k = int(input("numero termos da serie: "))

soma = 0
i = 0
fim = k-1

while(i<=fim):
	soma = soma - (((-1)**i)*((ax**(2*i+1))/factorial((2*i+1))))
	i = i + 1
	print(i)

print(round(soma,10))
-- OUTPUT:
1
2
3
4
5
-0.0274121336
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 22:22:45) 
-- CODE:
from math import*
ax = radians(eval(input("angulo: ")))
k = int(input("numero termos da serie: "))

soma = 0
i = 0
fim = k-1

while(i<=fim):
	soma = soma - (((-1)**i)*((ax**(2*i+1))/factorial((2*i+1))))
	i = i + 1
	print(i,soma)

print(round(soma,10))
-- OUTPUT:
1 -0.027415567780803774
2 -0.027412133462982647
3 -0.027412133592046604
4 -0.027412133592044294
5 -0.027412133592044294
-0.0274121336
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 22:24:00) 
-- CODE:
from math import*
ax = radians(eval(input("angulo: ")))
k = int(input("numero termos da serie: "))

soma = 0
i = 0
fim = k-1

while(i<=fim):
	soma = soma + (((-1)**i)*((ax**(2*i+1))/factorial((2*i+1))))
	i = i + 1
	print(i,soma)

print(round(soma,10))
-- OUTPUT:
1 0.027415567780803774
2 0.027412133462982647
3 0.027412133592046604
4 0.027412133592044294
5 0.027412133592044294
0.0274121336
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 22:25:07) 
-- CODE:
from math import*
ax = radians(eval(input("angulo: ")))
k = int(input("numero termos da serie: "))

soma = 0
i = 0
fim = k-1
print(ax)

while(i<=fim):
	soma = soma + (((-1)**i)*((ax**(2*i+1))/factorial((2*i+1))))
	i = i + 1
	print(i,soma)

print(round(soma,10))
-- OUTPUT:
0.027415567780803774
1 0.027415567780803774
2 0.027412133462982647
3 0.027412133592046604
4 0.027412133592044294
5 0.027412133592044294
0.0274121336
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 22:25:35) 
-- CODE:
from math import*
ax = radians(eval(input("angulo: ")))
k = int(input("numero termos da serie: "))

soma = 0
i = 0
fim = k-1
print(round(ax,10)

while(i<=fim):
	soma = soma + (((-1)**i)*((ax**(2*i+1))/factorial((2*i+1))))
	i = i + 1
	print(i,soma)

print(round(soma,10))
-- ERROR:
File "XXXX", line 10
    while(i<=fim):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 22:25:54) 
-- CODE:
from math import*
ax = radians(eval(input("angulo: ")))
k = int(input("numero termos da serie: "))

soma = 0
i = 0
fim = k-1
print(round(ax,10))

while(i<=fim):
	soma = soma + (((-1)**i)*((ax**(2*i+1))/factorial((2*i+1))))
	i = i + 1
	print(i,soma)

print(round(soma,10))
-- OUTPUT:
0.0274155678
1 0.027415567780803774
2 0.027412133462982647
3 0.027412133592046604
4 0.027412133592044294
5 0.027412133592044294
0.0274121336
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 22:26:23) 
-- CODE:
from math import*
ax = eval(input("angulo: "))
k = int(input("numero termos da serie: "))

soma = 0
i = 0
fim = k-1
print(round(ax,10))

while(i<=fim):
	soma = soma + (((-1)**i)*((ax**(2*i+1))/factorial((2*i+1))))
	i = i + 1
	print(i,soma)

print(round(soma,10))
-- OUTPUT:
1.5707963268
1 1.5707963267948966
2 0.9248322292886504
3 1.0045248555348174
4 0.9998431013994987
5 1.0000035425842861
1.0000035426
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 22:27:00) 
-- CODE:
from math import*
ax = eval(input("angulo: "))
k = int(input("numero termos da serie: "))

soma = 0
i = 0
fim = k-1
print(round(ax,10))

while(i<=fim):
	soma = soma + (((-1)**i)*((ax**(2*i+1))/factorial((2*i+1))))
	i = i + 1
	print(i,soma)

print(round(soma,10))
-- OUTPUT:
1.5707963268
1 1.5707963267948966
2 0.9248322292886504
3 1.0045248555348174
4 0.9998431013994987
5 1.0000035425842861
1.0000035426
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 22:27:59) 
-- CODE:
from math import*
ax = eval(input("angulo: "))
k = int(input("numero termos da serie: "))

soma = 0
i = 0
fim = k-1

while(i<=fim):
	soma = soma + (((-1)**i)*((ax**(2*i+1))/factorial((2*i+1))))
	i = i + 1

print(round(soma,10))
-- OUTPUT:
1.0000035426
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-09 22:28:15) 
-- CODE:
from math import*
ax = eval(input("angulo: "))
k = int(input("numero termos da serie: "))

soma = 0
i = 0
fim = k-1

while(i<=fim):
	soma = soma + (((-1)**i)*((ax**(2*i+1))/factorial((2*i+1))))
	i = i + 1

print(round(soma,10))
-- EXECUTION TIME:
0.153947
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
1.0000035426
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-0.9998431014
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.8662952838
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-09 22:29:36) 
-- CODE:
from math import*
ax = eval(input("angulo: "))
k = int(input("numero termos da serie: "))

soma = 0
i = 0
fim = k-1

while(i<=fim):
	soma = soma + (((-1)**i)*((ax**(2*i+1))/factorial((2*i+1))))
	i = i + 1

print(round(soma,10))
-- EXECUTION TIME:
0.181346
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
1.0000035426
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-0.9998431014
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.8662952838
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-09 22:29:42) 
-- CODE:
from math import*
ax = eval(input("angulo: "))
k = int(input("numero termos da serie: "))

soma = 0
i = 0
fim = k-1

while(i<=fim):
	soma = soma + (((-1)**i)*((ax**(2*i+1))/factorial((2*i+1))))
	i = i + 1

print(round(soma,10))
-- EXECUTION TIME:
0.180923
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
1.0000035426
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-0.9998431014
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.8662952838
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-09 22:31:50) 
-- CODE:
from math import*
ax = eval(input("angulo: "))
k = int(input("numero termos da serie: "))

soma = 0
i = 0
fim = k-1

while(i<=fim):
	soma = soma + (((-1)**i)*((ax**(2*i+1))/factorial((2*i+1))))
	i = i + 1

print(round(soma,10))
-- EXECUTION TIME:
0.121506
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
1.0000035426
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-0.9998431014
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.8662952838
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 14:36:03) 
-- CODE:
from math import*
ax = eval(input("angulo: "))
k = int(input("numero termos da serie: "))

soma = 0
i = 0
fim = k-1

while(i<=fim):
	soma = soma + (((-1)**i)*((ax**(2*i+1))/factorial((2*i+1))))
	i = i + 1

print(round(soma,10))
-- EXECUTION TIME:
0.194626
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
1.0000035426
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-0.9998431014
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.8662952838
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
