== TEST (2019-07-04 10:25:09) 
-- CODE:
from math import *
x = float(input("x: "))
k = int(input("k: "))
soma = 0
while (i < k):
	soma = (x ** (i + 2))/(factorial(i + 2))
print(soma)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    while (i < k):
NameError: name 'i' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:25:41) 
-- CODE:
from math import *
x = float(input("x: "))
k = int(input("k: "))
soma = 0
i = 1
while (i < k):
	soma = (x ** (i + 2))/(factorial(i + 2))
print(soma)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    while (i < k):
NameError: name 'i' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:26:34) 
-- CODE:
from math import *
x = float(input("x: "))
k = int(input("k: "))
soma = 0
i = 1
while (i < k):
	soma = (x ** (i + 2))/(factorial(i + 2))
	i = i + 1
print(soma)
-- OUTPUT:
0.08888888888888889
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-04 10:26:47) 
-- CODE:
from math import *
x = float(input("x: "))
k = int(input("k: "))
soma = 0
i = 1
while (i < k):
	soma = (x ** (i + 2))/(factorial(i + 2))
	i = i + 1
print(soma)
-- EXECUTION TIME:
1.56598
-- TEST CASE 1:
---- input:
2.0
5
---- correct output:
3.62680776
---- user output:
0.08888888888888889
-- TEST CASE 2:
---- input:
10.0
2
---- correct output:
176.666666667
---- user output:
166.66666666666666
-- TEST CASE 3:
---- input:
12.0
35
---- correct output:
81377.39570643
---- user output:
0.0019054155651168907
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:27:09) 
-- CODE:
from math import *
x = float(input("x: "))
k = int(input("k: "))
soma = 0
i = 1
while (i < k):
	soma = (x ** (i + 2))/(factorial(i + 2))
	i = i + 1
print(round(soma, 9))
-- OUTPUT:
0.088888889
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-04 10:27:19) 
-- CODE:
from math import *
x = float(input("x: "))
k = int(input("k: "))
soma = 0
i = 1
while (i < k):
	soma = (x ** (i + 2))/(factorial(i + 2))
	i = i + 1
print(round(soma, 9))
-- EXECUTION TIME:
1.28392
-- TEST CASE 1:
---- input:
2.0
5
---- correct output:
3.62680776
---- user output:
0.088888889
-- TEST CASE 2:
---- input:
10.0
2
---- correct output:
176.666666667
---- user output:
166.666666667
-- TEST CASE 3:
---- input:
12.0
35
---- correct output:
81377.39570643
---- user output:
0.001905416
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:27:27) 
-- CODE:
from math import *
x = float(input("x: "))
k = int(input("k: "))
soma = 0
i = 1
while (i < k):
	soma = (x ** (i + 2))/(factorial(i + 2))
	i = i + 1
print(round(soma, 9))
-- OUTPUT:
0.088888889
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:28:10) 
-- CODE:
from math import *
x = float(input("x: "))
k = int(input("k: "))
soma = 0
i = 1
while (i < k):
	soma = soma + (x ** (i + 2))/(factorial(i + 2))
	i = i + 1
print(round(soma, 9))
-- OUTPUT:
2.355555556
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:28:16) 
-- CODE:
from math import *
x = float(input("x: "))
k = int(input("k: "))
soma = 0
i = 1
while (i < k):
	soma = soma + (x ** (i + 2))/(factorial(i + 2))
	i = i + 1
print(round(soma, 9))
-- OUTPUT:
2.355555556
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:28:46) 
-- CODE:
from math import *
x = float(input("x: "))
k = int(input("k: "))
soma = 0
i = 1
while (i < k):
	soma = soma + ((x ** (i + 2))/(factorial(i + 2)))
	i = i + 1
print(round(soma, 9))
-- OUTPUT:
2.355555556
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:29:03) 
-- CODE:
from math import *
x = float(input("x: "))
k = int(input("k: "))
soma = 0
i = 1
while (i < k):
	soma = soma + ((x ** (i + 2))/(factorial(i + 2)))
	i = i + 1
print(round(soma, 9))
-- OUTPUT:
2.355555556
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-04 10:32:02) 
-- CODE:
from math import *
x = float(input("x: "))
k = int(input("k: "))
soma = 0
i = 1
while (i < k):
	soma = (x ** (i + 2))/(factorial(i + 2))
print(soma)
-- EXECUTION TIME:
373.031
-- ERROR:
Killed

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:34:15) 
-- CODE:
from math import *
x = float(input("x: "))
k = int(input("k: "))
soma = 0
i = 1
while (i < k):
	soma = soma + ((x ** ((2 * i) - 1)/(factorial((2 * i) - 1))
	i = i + 1
print(round(soma, 9))
-- ERROR:
File "XXXX", line 8
    i = i + 1
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:34:38) 
-- CODE:
from math import *
x = float(input("x: "))
k = int(input("k: "))
soma = 0
i = 1
while (i < k):
	soma = soma + ((x ** ((2 * i) - 1)/(factorial((2 * i) - 1))
	i = i + 1
print(round(soma, 9))
-- ERROR:
File "XXXX", line 8
    i = i + 1
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-04 10:35:04) 
-- CODE:
from math import *
x = float(input("x: "))
k = int(input("k: "))
soma = 0
i = 1
while (i < k):
	soma = soma + ((x ** ((2 * i) - 1)/(factorial((2 * i) - 1))
	i = i + 1
print(round(soma, 9))
-- EXECUTION TIME:
0.840306
-- ERROR:
  File "/home/codebench/codes/1865/1532/main.py", line 8
    i = i + 1
    ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:35:07) 
-- CODE:
from math import *
x = float(input("x: "))
k = int(input("k: "))
soma = 0
i = 1
while (i < k):
	soma = soma + ((x ** ((2 * i) - 1)/(factorial((2 * i) - 1))
	i = i + 1
print(round(soma, 9))
-- ERROR:
File "XXXX", line 8
    i = i + 1
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:35:58) 
-- CODE:
from math import *
x = float(input("x: "))
k = int(input("k: "))
soma = 0
i = 1
while (i < k):
	soma = soma + ((x ** ((2 * i) - 1))/(factorial(((2 * i) - 1))
	i = i + 1
print(round(soma, 9))
-- ERROR:
File "XXXX", line 8
    i = i + 1
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:36:33) 
-- CODE:
from math import *
x = float(input("x: "))
k = int(input("k: "))
soma = 0
i = 1
while (i < k):
	soma = soma + (x ** ((2 * i) - 1))/(factorial((2 * i) - 1))
	i = i + 1
print(round(soma, 9))
-- OUTPUT:
3.625396825
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:36:41) 
-- CODE:
from math import *
x = float(input("x: "))
k = int(input("k: "))
soma = 0
i = 1
while (i < k):
	soma = soma + (x ** ((2 * i) - 1))/(factorial((2 * i) - 1))
	i = i + 1
print(round(soma, 9))
-- OUTPUT:
3.625396825
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:36:54) 
-- CODE:
from math import *
x = float(input("x: "))
k = int(input("k: "))
soma = 0
i = 1
while (i < k):
	soma = soma + (x ** ((2 * i) - 1))/(factorial((2 * i) - 1))
	i = i + 1
print(round(soma, 9))
-- OUTPUT:
3.625396825
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-04 10:37:05) 
-- CODE:
from math import *
x = float(input("x: "))
k = int(input("k: "))
soma = 0
i = 1
while (i < k):
	soma = soma + (x ** ((2 * i) - 1))/(factorial((2 * i) - 1))
	i = i + 1
print(round(soma, 9))
-- EXECUTION TIME:
0.813325
-- TEST CASE 1:
---- input:
2.0
5
---- correct output:
3.62680776
---- user output:
3.625396825
-- TEST CASE 2:
---- input:
10.0
2
---- correct output:
176.666666667
---- user output:
10.0
-- TEST CASE 3:
---- input:
12.0
35
---- correct output:
81377.39570643
---- user output:
81377.39570643
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:37:21) 
-- CODE:
from math import *
x = float(input("x: "))
k = int(input("k: "))
soma = 0
i = 1
while (i < k):
	soma = soma + (x ** ((2 * i) - 1))/(factorial((2 * i) - 1))
	i = i + 1
print(round(soma, 9))
-- OUTPUT:
3.625396825
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:37:34) 
-- CODE:
from math import *
x = float(input("x: "))
k = int(input("k: "))
soma = 0
i = 1
while (i < k):
	soma = soma + (x ** ((2 * i) - 1))/(factorial((2 * i) - 1))
	i = i + 1
print(round(soma, 9))
-- OUTPUT:
3.625396825
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-04 10:42:19) 
-- CODE:
from math import *
x = float(input("x: "))
k = int(input("k: "))
soma = 0
i = 1
while (i < k):
	soma = soma + (x ** ((2 * i) - 1))/(factorial((2 * i) - 1))
	i = i + 1
print(round(soma, 9))
-- EXECUTION TIME:
0.822829
-- TEST CASE 1:
---- input:
2.0
5
---- correct output:
3.62680776
---- user output:
3.625396825
-- TEST CASE 2:
---- input:
10.0
2
---- correct output:
176.666666667
---- user output:
10.0
-- TEST CASE 3:
---- input:
12.0
35
---- correct output:
81377.39570643
---- user output:
81377.39570643
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:49:10) 
-- CODE:
from math import *
x = float(input("x: "))
k = int(input("k: "))
soma = 0
i = 1
while (i < k):
	soma = soma + (x ** ((2 * i) - 1))/(factorial((2 * i) - 1))
	i = i + 1
print(round(soma, 9))
-- OUTPUT:
3.625396825
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:49:39) 
-- CODE:
from math import *
x = float(input("x: "))
k = int(input("k: "))
soma = 0
i = 1
while (i < k):
	soma = soma + (x ** ((2 * i) - 1))/(factorial((2 * i) - 1))
	i = i + 1
print(round(soma, 9))
-- OUTPUT:
3.625396825
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:49:48) 
-- CODE:
from math import *
x = float(input("x: "))
k = int(input("k: "))
soma = 0
i = 1
while (i < k):
	soma = soma + (x ** ((2 * i) - 1))/(factorial((2 * i) - 1))
	i = i + 1
print(round(soma, 9))
-- OUTPUT:
3.625396825
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:52:03) 
-- CODE:
from math import *
x = float(input("x: "))
k = int(input("k: "))
soma = 0
i = 1
while (i < k):
	soma = soma + (x ** i)/(factorial(i)
	i = i + 2
print(round(soma, 9))
-- ERROR:
File "XXXX", line 8
    i = i + 2
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:53:02) 
-- CODE:
from math import *
x = float(input("x: "))
k = int(input("k: "))
soma = 0
i = 1
while (i < k):
	soma = (soma + (x ** i))/(factorial(i))
	i = i + 2
print(round(soma, 9))
-- OUTPUT:
1.666666667
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:53:09) 
-- CODE:
from math import *
x = float(input("x: "))
k = int(input("k: "))
soma = 0
i = 1
while (i < k):
	soma = (soma + (x ** i))/(factorial(i))
	i = i + 2
print(round(soma, 9))
-- OUTPUT:
1.666666667
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:53:44) 
-- CODE:
from math import *
x = float(input("x: "))
k = int(input("k: "))
soma = 0
i = 0
while (i < k):
	soma = (soma + (x ** i))/(factorial(i))
	i = i + 2
print(round(soma, 9))
-- OUTPUT:
0.770833333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:53:50) 
-- CODE:
from math import *
x = float(input("x: "))
k = int(input("k: "))
soma = 0
i = 0
while (i < k):
	soma = (soma + (x ** i))/(factorial(i))
	i = i + 2
print(round(soma, 9))
-- OUTPUT:
0.770833333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-04 10:54:25) 
-- CODE:
from math import *
x = float(input("x: "))
k = int(input("k: "))
soma = 0
i = 1
while (i < k):
	soma = (soma + (x ** i))/(factorial(i))
	i = i + 2
print(round(soma, 9))
-- EXECUTION TIME:
0.694952
-- TEST CASE 1:
---- input:
2.0
5
---- correct output:
3.62680776
---- user output:
1.666666667
-- TEST CASE 2:
---- input:
10.0
2
---- correct output:
176.666666667
---- user output:
10.0
-- TEST CASE 3:
---- input:
12.0
35
---- correct output:
81377.39570643
---- user output:
0.047238428
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:54:49) 
-- CODE:
from math import *
x = float(input("x: "))
k = int(input("k: "))
soma = 0
i = 1
while (i < k):
	soma = (soma + (x ** i))/(factorial(i))
	i = i + 2
print(round(soma, 9))
-- OUTPUT:
1.666666667
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:55:00) 
-- CODE:
from math import *
x = float(input("x: "))
k = int(input("k: "))
soma = 0
i = 1
while (i < k):
	soma = (soma + (x ** i))/(factorial(i))
	i = i + 2
print(round(soma, 9))
-- OUTPUT:
1.666666667
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
