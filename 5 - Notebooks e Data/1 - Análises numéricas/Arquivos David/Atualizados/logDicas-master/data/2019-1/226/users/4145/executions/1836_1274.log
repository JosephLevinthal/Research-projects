== TEST (2019-06-24 18:25:28) 
-- CODE:
x = int(input("numero: ")
z= zeros(x,x)
print(z)
-- ERROR:
File "XXXX", line 2
    z= zeros(x,x)
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 18:29:19) 
-- CODE:
x = int(input("numero: ")
z=zeros([x,x])
print(z)
-- ERROR:
File "XXXX", line 2
    z=zeros([x,x])
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 18:29:57) 
-- CODE:
x = int(input("numero: ")
z=zeros((x,x))
print(z)
-- ERROR:
File "XXXX", line 2
    z=zeros((x,x))
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 18:31:08) 
-- CODE:
from numpy import*
from numpy.linalg import*

x = int(input("numero: ")
z=zeros((x,x))
print(z)
-- ERROR:
File "XXXX", line 5
    z=zeros((x,x))
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 18:32:28) 
-- CODE:
from numpy import*

from numpy.linalg import *
x = int(input("numero: ")
z=zeros((x,x))
print(z)
-- ERROR:
File "XXXX", line 5
    z=zeros((x,x))
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 19:34:14) 
-- CODE:
from numpy import*

from numpy.linalg import *
x = int(input("numero: ")
z=zeros((x,x))
print(z)
-- ERROR:
File "XXXX", line 5
    z=zeros((x,x))
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 19:34:22) 
-- CODE:
from numpy import*

from numpy.linalg import *
x = int(input("numero: ")
k=zeros((x,x))
print(z)
-- ERROR:
File "XXXX", line 5
    k=zeros((x,x))
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 19:34:49) 
-- CODE:
from numpy import*

from numpy.linalg import *
x = int(input("numero: ")
k=zeros((x,x),d=type=int)
print(z)
-- ERROR:
File "XXXX", line 5
    k=zeros((x,x),d=type=int)
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 19:35:03) 
-- CODE:
from numpy import*

from numpy.linalg import *
x = int(input("numero: ")
k=zeros((x,x),dtype==int)
print(z)
-- ERROR:
File "XXXX", line 5
    k=zeros((x,x),dtype==int)
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 19:36:22) 
-- CODE:
from numpy import*

from numpy.linalg import *
x = int(input("numero: ")
#k=zeros((x,x),dtype==int)
z=zeros((3,3))
print(z)
-- ERROR:
File "XXXX", line 6
    z=zeros((3,3))
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 19:36:29) 
-- CODE:
from numpy import*

from numpy.linalg import *
x = int(input("numero: ")
#k=zeros((x,x),dtype==int)
z=zeros((3,2))
print(z)
-- ERROR:
File "XXXX", line 6
    z=zeros((3,2))
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 10:36:20) 
-- CODE:
from numpy import*
from numpy.linalg import *
n = int(input("numero: ")
x = zeros((n,n),dtype==int)
-- ERROR:
File "XXXX", line 4
    x = zeros((n,n),dtype==int)
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 10:36:33) 
-- CODE:
from numpy import*
from numpy.linalg import *
n = int(input("numero: ")
x = zeros((n,n),dtype=int)
-- ERROR:
File "XXXX", line 4
    x = zeros((n,n),dtype=int)
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 10:36:43) 
-- CODE:
from numpy import*
from numpy.linalg import *
n = int(input("numero: "))
x = zeros((n,n),dtype=int)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 10:37:24) 
-- CODE:
from numpy import*
from numpy.linalg import *
n = int(input("numero: "))
x = zeros((n,n),dtype=int)
print(x)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 10:38:18) 
-- CODE:
from numpy import*
from numpy.linalg import *
n = int(input("numero: "))
x = zeros((n,n),dtype=int)
print(x[2,1])
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 10:50:56) 
-- CODE:
from numpy import*
from numpy.linalg import *
n = int(input("numero: "))
x = zeros((n,n),dtype=int)

for i in range(x):
	for j in range(x):
		if(i==j):
			x[i,j]= i+1
		elif(i>j ):
			x[i,j]=j
		elif(i<j):
			x[i,j]=i+1
			
		
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 10:51:19) 
-- CODE:
from numpy import*
from numpy.linalg import *
n = int(input("numero: "))
x = zeros((n,n),dtype=int)

for i in range(x):
	for j in range(x):
		if(i==j):
			x[i,j]= i+1
		elif(i>j ):
			x[i,j]=j
		elif(i<j):
			x[i,j]=i+1

print(x)
			
		
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 10:51:56) 
-- CODE:
from numpy import*
from numpy.linalg import *
n = int(input("numero: "))
x = zeros((n,n),dtype=int)

for i in range(n):
	for j in range(n):
		if(i==j):
			x[i,j]= i+1
		elif(i>j ):
			x[i,j]=j
		elif(i<j):
			x[i,j]=i+1

print(x)
			
		
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-25 10:52:03) 
-- CODE:
from numpy import*
from numpy.linalg import *
n = int(input("numero: "))
x = zeros((n,n),dtype=int)

for i in range(n):
	for j in range(n):
		if(i==j):
			x[i,j]= i+1
		elif(i>j ):
			x[i,j]=j
		elif(i<j):
			x[i,j]=i+1

print(x)
			
		
			
-- EXECUTION TIME:
0.711493
-- TEST CASE 1:
---- input:
3
---- correct output:
[[1 1 1]
 [1 2 2]
 [1 2 3]]
---- user output:
[[1 1 1]
 [0 2 2]
 [0 1 3]]
-- TEST CASE 2:
---- input:
8
---- correct output:
[[1 1 1 1 1 1 1 1]
 [1 2 2 2 2 2 2 2]
 [1 2 3 3 3 3 3 3]
 [1 2 3 4 4 4 4 4]
 [1 2 3 4 5 5 5 5]
 [1 2 3 4 5 6 6 6]
 [1 2 3 4 5 6 7 7]
 [1 2 3 4 5 6 7 8]]
---- user output:
[[1 1 1 1 1 1 1 1]
 [0 2 2 2 2 2 2 2]
 [0 1 3 3 3 3 3 3]
 [0 1 2 4 4 4 4 4]
 [0 1 2 3 5 5 5 5]
 [0 1 2 3 4 6 6 6]
 [0 1 2 3 4 5 7 7]
 [0 1 2 3 4 5 6 8]]
-- TEST CASE 3:
---- input:
1
---- correct output:
[[1]]
---- user output:
[[1]]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 10:52:12) 
-- CODE:
from numpy import*
from numpy.linalg import *
n = int(input("numero: "))
x = zeros((n,n),dtype=int)

for i in range(n):
	for j in range(n):
		if(i==j):
			x[i,j]= i+1
		elif(i>j ):
			x[i,j]=j
		elif(i<j):
			x[i,j]=i+1

print(x)
			
		
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 10:52:53) 
-- CODE:
from numpy import*
from numpy.linalg import *
n = int(input("numero: "))
x = zeros((n,n),dtype=int)

for i in range(n):
	for j in range(n):
		if(i==j):
			x[i,j]= i+1
		elif(i>j ):
			x[i,j]=j+1
		elif(i<j):
			x[i,j]=i+1

print(x)
			
		
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-25 10:53:02) 
-- CODE:
from numpy import*
from numpy.linalg import *
n = int(input("numero: "))
x = zeros((n,n),dtype=int)

for i in range(n):
	for j in range(n):
		if(i==j):
			x[i,j]= i+1
		elif(i>j ):
			x[i,j]=j+1
		elif(i<j):
			x[i,j]=i+1

print(x)
			
		
			
-- EXECUTION TIME:
1.12001
-- TEST CASE 1:
---- input:
3
---- correct output:
[[1 1 1]
 [1 2 2]
 [1 2 3]]
---- user output:
[[1 1 1]
 [1 2 2]
 [1 2 3]]
-- TEST CASE 2:
---- input:
8
---- correct output:
[[1 1 1 1 1 1 1 1]
 [1 2 2 2 2 2 2 2]
 [1 2 3 3 3 3 3 3]
 [1 2 3 4 4 4 4 4]
 [1 2 3 4 5 5 5 5]
 [1 2 3 4 5 6 6 6]
 [1 2 3 4 5 6 7 7]
 [1 2 3 4 5 6 7 8]]
---- user output:
[[1 1 1 1 1 1 1 1]
 [1 2 2 2 2 2 2 2]
 [1 2 3 3 3 3 3 3]
 [1 2 3 4 4 4 4 4]
 [1 2 3 4 5 5 5 5]
 [1 2 3 4 5 6 6 6]
 [1 2 3 4 5 6 7 7]
 [1 2 3 4 5 6 7 8]]
-- TEST CASE 3:
---- input:
1
---- correct output:
[[1]]
---- user output:
[[1]]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
