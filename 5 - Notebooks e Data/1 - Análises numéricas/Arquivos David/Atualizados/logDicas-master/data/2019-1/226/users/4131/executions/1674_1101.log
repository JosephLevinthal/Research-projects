== SUBMITION (2019-05-01 23:17:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input("consumo:"))
t = input("ric:")
print("Entradas:", c,"kwh e tipo", t)
y = "Dados invalidos"
if((t.lower()!= "r")and (t.lower()!="i")and(t.lower()!="c"))or(c<0):
	print(y)
elif(c<=500)and(t.lower()=="r"):
	a=c*0.44
	print('Valor total: R$', round(a,2))
elif(c>500) and (t.lower()=="r"):
	a = c*0.65
	print('Valor total: R$',round(a,2))
elif(c<=1000)and (t.lower()=="c"):
	a=c*0.55
	print('Valor total: R$',round(a,2))
elif(c>1000) and (t.lower()== "c"):
	a=c*0.60
	print('Valor total: R$', round(a,2))
elif (c<=5000)and(t.lower()=="i"):
	a=c*0.55
	print('Valor total: R$', round(a,2))
-- EXECUTION TIME:
0.197394
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:30:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input("consumo:"))
t = input("ric:")
print("Entradas:", c,"kwh e tipo", t)
y = "Dados invalidos"
if((t.lower()!= "r")and (t.lower()!="i")and(t.lower()!="c"))or(c<0):
	print(y)
elif(c<=500)and(t.lower()=="r"):
	a=c*0.44
	print('Valor total: R$', round(a,2))
elif(c>500) and (t.lower()=="r"):
	a = c*0.65
	print('Valor total: R$',round(a,2))
elif(c<=1000)and (t.lower()=="c"):
	a=c*0.55
	print('Valor total: R$',round(a,2))
elif(c>1000) and (t.lower()== "c"):
	a=c*0.60
	print('Valor total: R$', round(a,2))
elif (c<=5000)and(t.lower()=="i"):
	a=c*0.55
	print('Valor total: R$', round(a,2))
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 23:30:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input("consumo:"))
t = input("ric:")
print("Entradas:", c,"kwh e tipo", t)
y = "Dados invalidos"
if((t.lower()!= "r")and (t.lower()!="i")and(t.lower()!="c"))or(c<0):
	print(y)
elif(c<=500)and(t.lower()=="r"):
	a=c*0.44
	print('Valor total: R$', round(a,2))
elif(c>500) and (t.lower()=="r"):
	a = c*0.65
	print('Valor total: R$',round(a,2))
elif(c<=1000)and (t.lower()=="c"):
	a=c*0.55
	print('Valor total: R$',round(a,2))
elif(c>1000) and (t.lower()== "c"):
	a=c*0.60
	print('Valor total: R$', round(a,2))
elif (c<=5000)and(t.lower()=="i"):
	a=c*0.55
	print('Valor total: R$', round(a,2))
-- EXECUTION TIME:
0.211643
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:30:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input("consumo:"))
t = input("ric:")
print("Entradas:", c,"kwh e tipo", t)
y = "Dados invalidos"
if((t.lower()!= "r")and (t.lower()!="i")and(t.lower()!="c"))or(c<0):
	print(y)
elif(c<=500)and(t.lower()=="r"):
	a=c*0.44
	print('Valor total: R$', round(a,2))
elif(c>500) and (t.lower()=="r"):
	a = c*0.65
	print('Valor total: R$',round(a,2))
elif(c<=1000)and (t.lower()=="c"):
	a=c*0.55
	print('Valor total: R$',round(a,2))
elif(c>1000) and (t.lower()== "c"):
	a=c*0.60
	print('Valor total: R$', round(a,2))
elif (c<=5000)and(t.lower()=="i"):
	a=c*0.55
	print('Valor total: R$', round(a,2))
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:30:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input("consumo:"))
t = input("ric:")
print("Entradas:", c,"kwh e tipo", t)
y = "Dados invalidos"
if((t.lower()!= "r")and (t.lower()!="i")and(t.lower()!="c"))or(c<0):
	print(y)
elif(c<=500)and(t.lower()=="r"):
	a=c*0.44
	print('Valor total: R$', round(a,2))
elif(c>500) and (t.lower()=="r"):
	a = c*0.65
	print('Valor total: R$',round(a,2))
elif(c<=1000)and (t.lower()=="c"):
	a=c*0.55
	print('Valor total: R$',round(a,2))
elif(c>1000) and (t.lower()== "c"):
	a=c*0.60
	print('Valor total: R$', round(a,2))
elif (c<=5000)and(t.lower()=="i"):
	a=c*0.55
	print('Valor total: R$', round(a,2))
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 23:31:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input("consumo:"))
t = input("ric:")
print("Entradas:", c,"kwh e tipo", t)
y = "Dados invalidos"
if((t.lower()!= "R")and (t.lower()!="I")and(t.lower()!="C"))or(c<0):
	print(y)
elif(c<=500)and(t.lower()=="R"):
	a=c*0.44
	print('Valor total: R$', round(a,2))
elif(c>500) and (t.lower()=="R"):
	a = c*0.65
	print('Valor total: R$',round(a,2))
elif(c<=1000)and (t.lower()=="C"):
	a=c*0.55
	print('Valor total: R$',round(a,2))
elif(c>1000) and (t.lower()== "C"):
	a=c*0.60
	print('Valor total: R$', round(a,2))
elif (c<=5000)and(t.lower()=="I"):
	a=c*0.55
	print('Valor total: R$', round(a,2))
-- EXECUTION TIME:
0.162229
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Dados invalidos
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:31:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input("consumo:"))
t = input("ric:")
print("Entradas:", c,"kwh e tipo", t)
y = "Dados invalidos"
if((t.lower()!= "R")and (t.lower()!="I")and(t.lower()!="C"))or(c<0):
	print(y)
elif(c<=500)and(t.lower()=="R"):
	a=c*0.44
	print('Valor total: R$', round(a,2))
elif(c>500) and (t.lower()=="R"):
	a = c*0.65
	print('Valor total: R$',round(a,2))
elif(c<=1000)and (t.lower()=="C"):
	a=c*0.55
	print('Valor total: R$',round(a,2))
elif(c>1000) and (t.lower()== "C"):
	a=c*0.60
	print('Valor total: R$', round(a,2))
elif (c<=5000)and(t.lower()=="I"):
	a=c*0.55
	print('Valor total: R$', round(a,2))
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 23:36:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input("consumo:"))
t = input("ric:")
print("Entradas:", c,"kwh e tipo", t)
y = "Dados invalidos"
if((t.lower()!= "r")and (t.lower()!="i")and(t.lower()!="c"))or(c<0):
	print(y)
elif(c<=500)and(t.lower()=="r"):
	a=c*0.44
	print('Valor total: R$', round(a,2))
elif(c>500) and (t.lower()=="r"):
	a = c*0.65
	print('Valor total: R$',round(a,2))
elif(c<=1000)and (t.lower()=="c"):
	a=c*0.55
	print('Valor total: R$',round(a,2))
elif(c>1000) and (t.lower()== "c"):
	a=c*0.60
	print('Valor total: R$', round(a,2))
elif (c<=5000)and(t.lower()=="i"):
	a=c*0.55
elif(c>5000)and(t.lower()=="i"):
	a = c*0.60
	print('Valor total: R$', round(a,2))
-- EXECUTION TIME:
0.222415
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:38:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input("consumo:"))
t = input("ric:")
print("Entradas:", c,"kwh e tipo", t)
y = "Dados invalidos"
if((t.lower()!= "r")and (t.lower()!="i")and(t.lower()!="c"))or(c<0):
	print(y)
elif(c<=500)and(t.lower()=="r"):
	a=c*0.44
	print('Valor total: R$', round(a,2))
elif(c>500) and (t.lower()=="r"):
	a = c*0.65
	print('Valor total: R$',round(a,2))
elif(c<=1000)and (t.lower()=="c"):
	a=c*0.55
	print('Valor total: R$',round(a,2))
elif(c>1000) and (t.lower()== "c"):
	a=c*0.60
	print('Valor total: R$', round(a,2))
elif (c<=5000)and(t.lower()=="i"):
	a=c*0.55
elif(c>5000)and(t.lower()=="i"):
	a = c*0.60
	print('Valor total: R$', round(a,2))
-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:39:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input("consumo:"))
t = input("ric:")
print("Entradas:", c,"kWh e tipo", t)
y = "Dados invalidos"
if((t.lower()!= "R")and (t.lower()!="I")and(t.lower()!="C"))or(c<0):
	print(y)
elif(c<=500)and(t.lower()=="R"):
	a=c*0.44
	print('Valor total: R$', round(a,2))
elif(c>500) and (t.lower()=="R"):
	a = c*0.65
	print('Valor total: R$',round(a,2))
elif(c<=1000)and (t.lower()=="C"):
	a=c*0.55
	print('Valor total: R$',round(a,2))
elif(c>1000) and (t.lower()== "C"):
	a=c*0.60
	print('Valor total: R$', round(a,2))
elif (c<=5000)and(t.lower()=="I"):
	a=c*0.55
elif(c>5000)and(t.lower()=="I"):
	a = c*0.60
	print('Valor total: R$', round(a,2))
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 23:56:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input("consumo:"))
t = input("ric:")
print("Entradas:", c,"kWh e tipo", t)
y = "Dados invalidos"
if((t.lower()!= "r")and (t.lower()!="i")and(t.lower()!="c"))or(c<0):
	print(y)
elif(c<=500)and(t.lower()=="r"):
	a=c*0.44
	print('Valor total: R$', round(a,2))
elif(c>500) and (t.lower()=="r"):
	a = c*0.65
	print('Valor total: R$',round(a,2))
elif(c<=1000)and (t.lower()=="c"):
	a=c*0.55
	print('Valor total: R$',round(a,2))
elif(c>1000) and (t.lower()== "c"):
	a=c*0.60
	print('Valor total: R$', round(a,2))
elif (c<=5000)and(t.lower()=="i"):
	a=c*0.55
elif(c>5000)and(t.lower()=="i"):
	a = c*0.60
	print('Valor total: R$', round(a,2))
-- EXECUTION TIME:
0.160112
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
