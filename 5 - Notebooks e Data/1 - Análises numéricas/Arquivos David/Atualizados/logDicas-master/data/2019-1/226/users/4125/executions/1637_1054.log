== TEST (2019-04-09 10:38:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a coordenada x: "))
y = float(input("digite a coordenada y: "))
if (2*x + y = 3):
	m = "ponto pertence a reta"
else:
	m = "ponto nao pertence a reta"
print(m)
-- ERROR:
File "XXXX", line 6
    if (2*x + y = 3):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:38:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a coordenada x: "))
y = float(input("digite a coordenada y: "))
if (2*x + y =+ 3):
	m = "ponto pertence a reta"
else:
	m = "ponto nao pertence a reta"
print(m)
-- ERROR:
File "XXXX", line 6
    if (2*x + y =+ 3):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:38:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a coordenada x: "))
y = float(input("digite a coordenada y: "))
if (2*x + y == 3):
	m = "ponto pertence a reta"
else:
	m = "ponto nao pertence a reta"
print(m)
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:38:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a coordenada x: "))
y = float(input("digite a coordenada y: "))
if (2*x + y == 3):
	m = "ponto pertence a reta"
else:
	m = "ponto nao pertence a reta"
print(m)
-- EXECUTION TIME:
0.16023
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
