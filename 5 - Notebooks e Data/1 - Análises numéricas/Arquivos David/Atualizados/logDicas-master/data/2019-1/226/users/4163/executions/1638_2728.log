== TEST (2019-05-29 13:35:52) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km . 0.125
else:
	a = 1 / 12
	c = km . a
print(c)
-- ERROR:
File "XXXX", line 5
    c = km . 0.125
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 13:36:05) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
else:
	a = 1 / 12
	c = km * a
print(c)
-- OUTPUT:
5.416666666666666
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-29 13:36:18) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
else:
	a = 1 / 12
	c = km * a
print(c)
-- EXECUTION TIME:
0.182534
-- TEST CASE 1:
---- input:
65
B

---- correct output:
5.42
---- user output:
5.416666666666666
-- TEST CASE 2:
---- input:
65
A
---- correct output:
8.12
---- user output:
8.125
-- TEST CASE 3:
---- input:
200
A
---- correct output:
25.0
---- user output:
25.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 13:36:22) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
else:
	a = 1 / 12
	c = km * a
print(c)
-- OUTPUT:
5.416666666666666
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 13:41:34) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
else:
	c =  1.0001* km
print(c)
-- OUTPUT:
65.0065
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 13:41:44) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
else:
	c =  1.0001* km
print(c)
-- OUTPUT:
65.0065
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 13:42:44) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
else:
	c =  1.0001* km
print(round(c, 2))
-- OUTPUT:
65.01
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 13:43:33) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
else:
	c = km * (0.125 + 4)
print(round(c, 2))
-- OUTPUT:
268.12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 13:44:41) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
else:
	c =  4 + km * 0.125
print(round(c, 2))
-- OUTPUT:
12.12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-29 13:44:55) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
else:
	c =  4 + km * 0.125
print(round(c, 2))
-- EXECUTION TIME:
0.180546
-- TEST CASE 1:
---- input:
65
B

---- correct output:
5.42
---- user output:
12.12
-- TEST CASE 2:
---- input:
65
A
---- correct output:
8.12
---- user output:
8.12
-- TEST CASE 3:
---- input:
200
A
---- correct output:
25.0
---- user output:
25.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 13:45:10) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
else:
	c =  (4 + km) * 0.125
print(round(c, 2))
-- OUTPUT:
8.62
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 13:45:47) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
else:
	c =  4 * km * 0.125
print(round(c, 2))
-- OUTPUT:
32.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-29 13:45:57) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
else:
	c =  4 * km * 0.125
print(round(c, 2))
-- EXECUTION TIME:
0.147036
-- TEST CASE 1:
---- input:
65
B

---- correct output:
5.42
---- user output:
32.5
-- TEST CASE 2:
---- input:
65
A
---- correct output:
8.12
---- user output:
8.12
-- TEST CASE 3:
---- input:
200
A
---- correct output:
25.0
---- user output:
25.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:16:57) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
else:
	c =  (4 * km) * 0.125
print(round(c, 2))
-- OUTPUT:
32.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-30 12:17:30) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
else:
	c =  (4 * km) * 0.125
print(round(c, 2))
-- EXECUTION TIME:
0.166238
-- TEST CASE 1:
---- input:
65
B

---- correct output:
5.42
---- user output:
32.5
-- TEST CASE 2:
---- input:
65
A
---- correct output:
8.12
---- user output:
8.12
-- TEST CASE 3:
---- input:
200
A
---- correct output:
25.0
---- user output:
25.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:18:00) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
else:
	c =  4 * (km * 0.125)
print(round(c, 2))
-- OUTPUT:
32.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:19:04) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
else:
	c =  km * (4 * 0.125)
print(round(c, 2))
-- OUTPUT:
32.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:19:36) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
else:
	c =  km * (4 * 0.125)
print(round(c, 2))
-- OUTPUT:
32.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:20:15) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
else:
	c =  km * (4 * 0.125)
print(round(c, 2))
-- OUTPUT:
32.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:20:47) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 1.25
else:
	c =  km * (4 * 0.125)
print(round(c, 2))
-- OUTPUT:
32.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:21:04) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 12.5
else:
	c =  km * (4 * 0.125)
print(round(c, 2))
-- OUTPUT:
32.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:21:28) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 12.5
else:
	c =  km * (4 * 12.5)
print(round(c, 2))
-- OUTPUT:
3250.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:22:11) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 12.5
else:
	c =  4 + km * (12.5)
print(round(c, 2))
-- OUTPUT:
816.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:22:48) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 12.5
else:
	c =   km * (12.5 + 4)
print(round(c, 2))
-- OUTPUT:
1072.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:23:12) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 12.5
else:
	c =   km * 12.5 + 4
print(round(c, 2))
-- OUTPUT:
816.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:23:27) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 12.5
else:
	c =   km * 12.5 
print(round(c, 2))
-- OUTPUT:
812.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:24:06) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
else:
	c =   km * 12.5 
print(round(c, 2))
-- OUTPUT:
812.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:24:17) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
else:
	c =   km * 12.5 
print(round(c, 2))
-- OUTPUT:
812.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:25:22) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
else:
	c =   km * 12.5 
print(round(c, 2))
-- OUTPUT:
812.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:25:34) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
else:
	c =   km * 12.5 
print(round(c, 2))
-- OUTPUT:
812.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:25:45) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
else:
	c =   km * 1.25 
print(round(c, 2))
-- OUTPUT:
81.25
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:26:14) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
else:
	c =  4 + km * 0.125 
print(round(c, 2))
-- OUTPUT:
12.12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:26:39) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
else:
	c =   km * 0.125 
print(round(c, 2))
-- OUTPUT:
8.12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:27:15) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
else:
	c =   km * 1.5
print(round(c, 2))
-- OUTPUT:
97.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:27:38) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
else:
	c =   km * 1.5 - 4
print(round(c, 2))
-- OUTPUT:
93.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:27:52) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
else:
	c =   km * 1.5 - 6
print(round(c, 2))
-- OUTPUT:
91.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:28:01) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
else:
	c =   km * 1.5 - 6
print(round(c, 2))
-- OUTPUT:
91.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-30 12:28:11) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
else:
	c =   km * 1.5 - 6
print(round(c, 2))
-- EXECUTION TIME:
0.13832
-- TEST CASE 1:
---- input:
65
B

---- correct output:
5.42
---- user output:
91.5
-- TEST CASE 2:
---- input:
65
A
---- correct output:
8.12
---- user output:
8.12
-- TEST CASE 3:
---- input:
200
A
---- correct output:
25.0
---- user output:
25.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:29:26) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
elif tp=="B"
	c =   km * 1.5 - 6
print(round(c, 2))
-- ERROR:
File "XXXX", line 6
    elif tp=="B"
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:29:33) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
elif tp=="B":
	c =   km * 1.5 - 6
print(round(c, 2))
-- OUTPUT:
91.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:30:29) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
elif tp=="B":
	c =  4 + km * 0.125
print(round(c, 2))
-- OUTPUT:
12.12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:30:42) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
elif tp=="B":
	c =  km * 0.125
print(round(c, 2))
-- OUTPUT:
8.12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:31:24) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
elif tp=="B":
	c =  km * 0.12
print(round(c, 2))
-- OUTPUT:
7.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:31:37) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
elif tp=="B":
	c =  km * 0.11
print(round(c, 2))
-- OUTPUT:
7.15
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:31:47) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
elif tp=="B":
	c =  km * 0.1
print(round(c, 2))
-- OUTPUT:
6.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:32:02) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
elif tp=="B":
	c =  km * 0.01
print(round(c, 2))
-- OUTPUT:
0.65
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:32:29) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
elif tp=="B":
	c =  km * 0.1 -0.01
print(round(c, 2))
-- OUTPUT:
6.49
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:32:46) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
elif tp=="B":
	c =  km * 0.1 -0.20
print(round(c, 2))
-- OUTPUT:
6.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-30 12:32:56) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
elif tp=="B":
	c =  km * 0.1 -0.20
print(round(c, 2))
-- EXECUTION TIME:
0.193785
-- TEST CASE 1:
---- input:
65
B

---- correct output:
5.42
---- user output:
6.3
-- TEST CASE 2:
---- input:
65
A
---- correct output:
8.12
---- user output:
8.12
-- TEST CASE 3:
---- input:
200
A
---- correct output:
25.0
---- user output:
25.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:33:01) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
elif tp=="B":
	c =  km * 0.1 -0.20
print(round(c, 2))
-- OUTPUT:
6.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:33:08) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
elif tp=="B":
	c =  km * 0.1 -0.20
print(round(c, 2))
-- OUTPUT:
6.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:33:20) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
elif tp=="B":
	c =  km * 0.1 -0.20
print(round(c, 2))
-- OUTPUT:
6.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:33:51) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
elif tp=="B":
	c =  (km * 0.1) -0.20
print(round(c, 2))
-- OUTPUT:
6.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:34:26) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
elif tp=="B":
	c =  (km * 0.1) -0.20
print(round(c, 2))
-- OUTPUT:
6.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:34:58) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
elif tp=="B":
	c =  km-0.20 * 0.1
print(round(c, 2))
-- OUTPUT:
64.98
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:35:43) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
elif tp=="B":
	c =  km * 0.1-0.020
print(round(c, 2))
-- OUTPUT:
6.48
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:36:48) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
elif tp=="B":
	c =  (km/ 0.020)* 0.1
print(round(c, 2))
-- OUTPUT:
325.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:38:05) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
elif tp=="B":
	c =  km * 12
print(round(c, 2))
-- OUTPUT:
780.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-30 12:38:21) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
elif tp=="B":
	c =  km * 12
print(round(c, 2))
-- EXECUTION TIME:
0.144629
-- TEST CASE 1:
---- input:
65
B

---- correct output:
5.42
---- user output:
780.0
-- TEST CASE 2:
---- input:
65
A
---- correct output:
8.12
---- user output:
8.12
-- TEST CASE 3:
---- input:
200
A
---- correct output:
25.0
---- user output:
25.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:38:35) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 8
elif tp=="B":
	c =  km * 12
print(round(c, 2))
-- OUTPUT:
780.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:45:37) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
elif tp=="B":
	c =  km * 0.125
print(round(c, 2))
-- OUTPUT:
8.12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:47:45) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
elif tp=="B":
	c =  km * 1.5
print(round(c, 2))
-- OUTPUT:
97.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:48:06) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
elif tp=="B":
	c =  km * 1.0
print(round(c, 2))
-- OUTPUT:
65.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:48:20) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
elif tp=="B":
	c =  km * 1.0
print(round(c, 2))
-- OUTPUT:
65.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-30 12:48:47) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
elif tp=="B":
	c =  km * 1.0
print(round(c, 2))
-- EXECUTION TIME:
0.147028
-- TEST CASE 1:
---- input:
65
B

---- correct output:
5.42
---- user output:
65.0
-- TEST CASE 2:
---- input:
65
A
---- correct output:
8.12
---- user output:
8.12
-- TEST CASE 3:
---- input:
200
A
---- correct output:
25.0
---- user output:
25.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 12:48:50) 
-- CODE:
km = float(input("percurso de uma viagem: "))
tp = input("carro A ou B").upper()

if (tp=="A"):
	c = km * 0.125
elif tp=="B":
	c =  km * 1.0
print(round(c, 2))
-- OUTPUT:
65.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
