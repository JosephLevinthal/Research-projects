== TEST (2019-04-06 19:15:48) 
-- CODE:
# Teste seu código aos poucos.
c = float(input( "preco"))
desconto = c *2%
print(desconto)
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

-- ERROR:
File "XXXX", line 3
    desconto = c *2%
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 19:18:28) 
-- CODE:
# Teste seu código aos poucos.
c = float(input( "preco"))
desconto = c *100%2
print(desconto)
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

-- OUTPUT:
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 19:18:54) 
-- CODE:
# Teste seu código aos poucos.
c = float(input( "preco"))
desconto = (c *100)%2
print(desconto)
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

-- OUTPUT:
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 19:19:43) 
-- CODE:
# Teste seu código aos poucos.
c = float(input( "preco"))
desconto = (c *2)%100
print(desconto)
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

-- OUTPUT:
0.18000000000000682
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 19:20:45) 
-- CODE:
# Teste seu código aos poucos.
c = float(input( "preco"))
desconto = (c *2)/100
print(desconto)
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

-- OUTPUT:
4.0018
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 19:26:08) 
-- CODE:
# Teste seu código aos poucos.
c = float(input( "preco"))
desconto = (c *0,2
print(desconto)
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

-- ERROR:
File "XXXX", line 4
    print(desconto)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 19:26:21) 
-- CODE:
# Teste seu código aos poucos.
c = float(input( "preco"))
desconto = (c *0,2)
print(desconto)
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

-- OUTPUT:
(0.0, 2)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 19:26:37) 
-- CODE:
# Teste seu código aos poucos.
c = float(input( "preco"))
desconto = (c *0.2)
print(desconto)
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

-- OUTPUT:
40.018
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 19:27:11) 
-- CODE:
# Teste seu código aos poucos.
c = float(input( "preco"))
desconto = (c *0.02)
print(desconto)
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

-- OUTPUT:
4.0018
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 19:27:38) 
-- CODE:
# Teste seu código aos poucos.
c = float(input( "preco"))
desconto = (c *0.05)
print(desconto)
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

-- OUTPUT:
10.0045
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 19:29:46) 
-- CODE:
# Teste seu código aos poucos.
c = float(input( "preco"))
desconto = (c *0.05)
v = desconto - c 
print(v)
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

-- OUTPUT:
-190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 19:30:13) 
-- CODE:
# Teste seu código aos poucos.
c = float(input( "preco"))
desconto = (c *0.05)
v = c - desconto 
print(v)
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 19:30:24) 
-- CODE:
# Teste seu código aos poucos.
c = float(input( "preco"))
desconto = (c *0.05)
v = c - desconto 
print(v)
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

-- EXECUTION TIME:
0.129685
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.0855
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5035
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 20:32:30) 
-- CODE:
# Teste seu código aos poucos.
comp = float(input( "preco"))
#valor = comp - desconto 
desconto = comp * 0.05
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
if (comp>=200):
	x = (comp - desconto)
else: 
	x = comp
	
print(x)
-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 20:33:16) 
-- CODE:
# Teste seu código aos poucos.
comp = float(input( "preco"))
#valor = comp - desconto 
desconto = comp * 0.05
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
if (comp>=200):
	x = (comp - desconto)
else: 
	x = comp
	
print(x)
-- EXECUTION TIME:
0.198375
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.0855
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5035
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 20:34:29) 
-- CODE:
# Teste seu código aos poucos.
comp = float(input( "preco"))
#valor = comp - desconto 
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
if (comp>=200):
	x = (comp * 0.05) comp - desconto
else: 
	x = comp
	
print(x)
-- ERROR:
File "XXXX", line 7
    x = (comp * 0.05) comp - desconto
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 20:35:52) 
-- CODE:
# Teste seu código aos poucos.
comp = float(input( "preco"))
#valor = comp - desconto 
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
if (comp>=200):
	x = comp-(comp * 0.05)
else: 
	x = comp
	
print(x)
-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 20:36:04) 
-- CODE:
# Teste seu código aos poucos.
comp = float(input( "preco"))
#valor = comp - desconto 
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
if (comp>=200):
	x = comp-(comp * 0.05)
else: 
	x = comp
	
print(x)
-- EXECUTION TIME:
0.241505
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.0855
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5035
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:03:07) 
-- CODE:
# Teste seu código aos poucos.
comp = float(input( "preco")) 
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
if (comp>=200):
	x = comp-(comp * 0.05)
else: 
	x = comp
	
print(x)
-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:04:24) 
-- CODE:
# Teste seu código aos poucos.
comp = float(input( "preco")) 
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
if (comp>=200):
	x = comp-(comp * 0.05)
else: 
	x = comp
	
print(x)
-- EXECUTION TIME:
0.133061
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.0855
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5035
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:06:39) 
-- CODE:
# Teste seu código aos poucos.
comp = float(input( "preco")) 
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
if (comp>=200):
	x = comp-(comp * 0.05)
else: 
	x = comp
	
print(round(x, 2)
-- ERROR:
File "XXXX", line 11
    
                     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:06:52) 
-- CODE:
# Teste seu código aos poucos.
comp = float(input( "preco")) 
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
if (comp>=200):
	x = comp-(comp * 0.05)
else: 
	x = comp
	
print(round(x, 2))
-- OUTPUT:
190.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:07:09) 
-- CODE:
# Teste seu código aos poucos.
comp = float(input( "preco")) 
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
if (comp>=200):
	x = comp-(comp * 0.05)
else: 
	x = comp
	
print(round(x, 2))
-- EXECUTION TIME:
0.199777
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.09
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
