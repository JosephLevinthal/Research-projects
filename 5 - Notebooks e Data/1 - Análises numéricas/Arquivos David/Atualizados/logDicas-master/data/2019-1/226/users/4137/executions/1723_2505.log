== TEST (2019-05-12 08:53:38) 
-- CODE:
from math import *
seno = radians(input("Angulo x:"))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    seno = radians(input())
TypeError: must be real number, not str
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 08:53:58) 
-- CODE:
from math import *
seno = float(input("Angulo x:"))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    seno = float(input())
ValueError: could not convert string to float: 'pi/2'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 08:54:08) 
-- CODE:
from math import *
seno = float(input("Angulo x:"))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    seno = float(input())
ValueError: could not convert string to float: 'pi/2'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 08:54:15) 
-- CODE:
from math import *
seno = radians(input("Angulo x:"))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    seno = radians(input())
TypeError: must be real number, not str
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 08:54:20) 
-- CODE:
from math import *
seno = radians(input("Angulo x:"))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    seno = radians(input())
TypeError: must be real number, not str
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 08:54:27) 
-- CODE:
from math import *
seno = radians(float((input("Angulo x:")))
-- ERROR:
File "XXXX", line 3
    
                                   ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 08:54:37) 
-- CODE:
from math import *
seno = radians(float(input("Angulo x:")))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    seno = radians(float(input()))
ValueError: could not convert string to float: 'pi/2'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 09:13:44) 
-- CODE:
from math import *
seno = input("Angulo x em radianos:")
k = int(input("Numero de termos da serie:"))
radians(seno)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    radians(seno)
TypeError: must be real number, not str
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 09:31:55) 
-- CODE:
from math import *
seno = eval(input("Angulo x em radianos:"))
k = int(input("Numero de termos da serie:"))

i =  0
k = k-1

while(i<k):
	x = seno - (seno**i / factorial(i))
	i = i + 2
	
print(round(x, 10))	
-- OUTPUT:
0.3370957767
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 09:32:20) 
-- CODE:
from math import *
seno = eval(input("Angulo x em radianos:"))
k = int(input("Numero de termos da serie:"))

i =  0
k = k-1

while(i<k):
	x = seno - (seno**i / factorial(i))
	i = i + 2
	print(round(x, 10))
	
-- OUTPUT:
0.5707963268
0.3370957767
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 09:32:37) 
-- CODE:
from math import *
seno = eval(input("Angulo x em radianos:"))
k = int(input("Numero de termos da serie:"))

i =  0
k = k-1

while(i>k):
	x = seno - (seno**i / factorial(i))
	i = i + 2
	print(round(x, 10))
	
-- OUTPUT:
0.5707963268
0.3370957767
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 09:32:47) 
-- CODE:
from math import *
seno = eval(input("Angulo x em radianos:"))
k = int(input("Numero de termos da serie:"))

i =  0
k = k-1

while(i<k):
	x = seno - (seno**i / factorial(i))
	i = i + 2
	print(round(x, 10))
	
-- OUTPUT:
0.5707963268
0.3370957767
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 09:33:51) 
-- CODE:
from math import *
seno = eval(input("Angulo x em radianos:"))
k = int(input("Numero de termos da serie:"))

i =  0
k = k

while(i<k):
	x = seno - (seno**i / factorial(i))
	i = i + 2
	print(round(x, 10))
	
-- OUTPUT:
0.5707963268
0.3370957767
1.3171268189
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 09:34:17) 
-- CODE:
from math import *
seno = eval(input("Angulo x em radianos:"))
k = int(input("Numero de termos da serie:"))

i =  0
k = k 

while(i<k):
	x = seno - (seno**i / factorial(i))
	i = i + 2
	k = k - 1
	print(round(x, 10))
	
-- OUTPUT:
0.5707963268
0.3370957767
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 09:35:19) 
-- CODE:
from math import *
seno = eval(input("Angulo x em radianos:"))
k = int(input("Numero de termos da serie:"))

i =  0
k = k - 1

while(i<=k):
	x = seno - (seno**i / factorial(i))
	i = i + 2
	print(round(x, 10))
	
-- OUTPUT:
0.5707963268
0.3370957767
1.3171268189
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 09:35:24) 
-- CODE:
from math import *
seno = eval(input("Angulo x em radianos:"))
k = int(input("Numero de termos da serie:"))

i =  0
k = k - 1

while(i<=k):
	x = seno - (seno**i / factorial(i))
	i = i + 2
	print(round(x, 10))
	
-- OUTPUT:
0.5707963268
0.3370957767
1.3171268189
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 09:35:28) 
-- CODE:
from math import *
seno = eval(input("Angulo x em radianos:"))
k = int(input("Numero de termos da serie:"))

i =  0
k = k - 1

while(i<=k):
	x = seno - (seno**i / factorial(i))
	i = i + 2
	print(round(x, 10))
	
-- OUTPUT:
0.5707963268
0.3370957767
1.3171268189
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 09:36:24) 
-- CODE:
from math import *
seno = eval(input("Angulo x em radianos:"))
k = int(input("Numero de termos da serie:"))

i =  1
k = k - 1

while(i<=k):
	x = seno - (seno**i / factorial(i))
	i = i + 2
	print(round(x, 10))
	
-- OUTPUT:
0.0
0.9248322293
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 10:05:10) 
-- CODE:
from math import *
seno = eval(input("Angulo x em radianos:"))
k = int(input("Numero de termos da serie:"))

i =  1
k = k - 1

while(i<=k):
	x = seno - (seno**i / factorial(i))
	i = i + 2
	print(round(x, 10))
	
-- OUTPUT:
0.0
0.9248322293
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 10:05:20) 
-- CODE:
from math import *
seno = eval(input("Angulo x em radianos:"))
k = int(input("Numero de termos da serie:"))

i =  1
k = k - 1

while(i<=k):
	x = seno - (seno**i / factorial(i))
	i = i + 2
	print(round(x, 10))
	
-- OUTPUT:
0.0
0.9248322293
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 10:11:48) 
-- CODE:
from math import *
seno = eval(input("Angulo x em radianos:"))
k = int(input("Numero de termos da serie:"))

i =  1
k = k - 1

while(i<=k):
	x = seno - (seno**i / factorial(i))
	i = i + 2
	print(round(x, 10))
	
-- OUTPUT:
0.0
0.9248322293
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 10:12:35) 
-- CODE:
from math import *
seno = eval(input("Angulo x em radianos:"))
k = int(input("Numero de termos da serie:"))

i =  1
k = k

while(i<=k):
	x = seno - (seno**i / factorial(i))
	i = i + 2
	k  = k -  1
	print(round(x, 10))
	
-- OUTPUT:
0.0
0.9248322293
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 15:53:35) 
-- CODE:
from math import *
seno = eval(input("Angulo x em radianos:"))
k = int(input("Numero de termos da serie:"))

i = 3
soma = 0
fim = k-1

while(i<fim):
	
	soma = soma + (-1)* (seno**i/factorial(i)) 
	i = i + 2
	
	print(round(soma, 10))
	
-- OUTPUT:
-0.6459640975
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 15:53:48) 
-- CODE:
from math import *
seno = eval(input("Angulo x em radianos:"))
k = int(input("Numero de termos da serie:"))

i = 3
soma = 0
fim = k-1

while(i<fim):
	
	soma = soma + (-1)* (seno**i/factorial(i)) 
	i = i + 2
	
	print(round(soma, 10))
-- OUTPUT:
-0.6459640975
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 15:54:19) 
-- CODE:
from math import *
seno = eval(input("Angulo x em radianos:"))
k = int(input("Numero de termos da serie:"))

i = 3
soma = seno
fim = k-1

while(i<fim):
	
	soma = soma - (-1)* (seno**i/factorial(i)) 
	i = i + 2
	
	print(round(soma, 10))
-- OUTPUT:
2.2167604243
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 15:54:33) 
-- CODE:
from math import *
seno = eval(input("Angulo x em radianos:"))
k = int(input("Numero de termos da serie:"))

i = 3
soma = 0
fim = k-1

while(i<fim):
	
	soma = soma + (-1)* (seno**i/factorial(i)) 
	i = i + 2
	
	print(round(soma, 10))
-- OUTPUT:
-0.6459640975
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 20:35:17) 
-- CODE:
from math import *
seno = eval(input("Angulo x em radianos:"))
k = int(input("Numero de termos da serie:"))

i = 3
soma = 0
fim = k-1

while(i<fim):
	
	soma = soma + ((-1)* (seno**i/factorial(i))) 
	i = i + 2
	
	print(round(soma, 10))
-- OUTPUT:
-0.6459640975
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 20:35:18) 
-- CODE:
from math import *
seno = eval(input("Angulo x em radianos:"))
k = int(input("Numero de termos da serie:"))

i = 3
soma = 0
fim = k-1

while(i<fim):
	
	soma = soma + ((-1)* (seno**i/factorial(i))) 
	i = i + 2
	
	print(round(soma, 10))
-- OUTPUT:
-0.6459640975
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 20:42:34) 
-- CODE:
from math import *
seno = eval(input("Angulo x em radianos:"))
k = int(input("Numero de termos da serie:"))

i = 3
soma = 0
fim = k-1
cont = 0

while(cont<fim):
	
	soma = soma + ((-1)* (seno**i/factorial(i))) 
	i = i + 2
	cont = cont + 1
	print(round(soma, 10))
-- OUTPUT:
-0.6459640975
-0.7256567238
-0.7303384779
-0.7304989191
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 20:42:55) 
-- CODE:
from math import *
seno = eval(input("Angulo x em radianos:"))
k = int(input("Numero de termos da serie:"))

i = 3
soma = 0
fim = k-1
cont = 0

while(cont<fim):
	
	soma = soma + ( (seno**i/factorial(i))) 
	i = i + 2
	cont = cont + 1
	print(round(soma, 10))
-- OUTPUT:
0.6459640975
0.7256567238
0.7303384779
0.7304989191
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 20:44:39) 
-- CODE:
from math import *
seno = eval(input("Angulo x em radianos:"))
k = int(input("Numero de termos da serie:"))

i = 3
soma = 0
fim = k
cont = 0

while(cont<fim):
	
	soma = soma + (seno-(seno**i/factorial(i))) 
	i = i + 2
	cont = cont + 1
	print(round(soma, 10))
-- OUTPUT:
0.9248322293
2.4159359298
3.9820505025
5.5526863881
7.1234791161
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 20:44:51) 
-- CODE:
from math import *
seno = eval(input("Angulo x em radianos:"))
k = int(input("Numero de termos da serie:"))

i = 3
soma = 0
fim = k
cont = 0

while(cont<fim):
	
	soma = soma + (seno -(seno**i/factorial(i))) 
	i = i + 2
	cont = cont + 1
	print(round(soma, 10))
-- OUTPUT:
0.9248322293
2.4159359298
3.9820505025
5.5526863881
7.1234791161
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 20:46:38) 
-- CODE:
from math import *
seno = eval(input("Angulo x em radianos:"))
k = int(input("Numero de termos da serie:"))

i = 3
soma = 0
fim = k
cont = 0
j = 3
while(cont<fim):
	
	soma = soma + ((-1**j)*(seno**i/factorial(i)))
	i = i + 2
	cont = cont + 1
	j = j+1
	print(round(soma, 10))
-- OUTPUT:
-0.6459640975
-0.7256567238
-0.7303384779
-0.7304989191
-0.7305025179
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 20:46:43) 
-- CODE:
from math import *
seno = eval(input("Angulo x em radianos:"))
k = int(input("Numero de termos da serie:"))

i = 3
soma = 0
fim = k
cont = 0
j = 3
while(cont<fim):
	
	soma = soma + ((-1**j)*(seno**i/factorial(i)))
	i = i + 2
	cont = cont + 1
	j = j+1
	print(round(soma, 10))
-- OUTPUT:
-0.6459640975
-0.7256567238
-0.7303384779
-0.7304989191
-0.7305025179
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 20:46:47) 
-- CODE:
from math import *
seno = eval(input("Angulo x em radianos:"))
k = int(input("Numero de termos da serie:"))

i = 3
soma = 0
fim = k
cont = 0
j = 3
while(cont<fim):
	
	soma = soma + ((-1**j)*(seno**i/factorial(i)))
	i = i + 2
	cont = cont + 1
	j = j+1
	print(round(soma, 10))
-- OUTPUT:
-0.6459640975
-0.7256567238
-0.7303384779
-0.7304989191
-0.7305025179
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 21:01:06) 
-- CODE:
from math import *
x = eval(input("Angulo x em radianos:"))
k = int(input("Numero de termos da serie:"))

i = 3
soma = 0
fim = k
cont = 0

while(cont<fim):
	soma = soma + (x**i/factorial(i))
	i = i + 2
	cont = cont + 1
	
	print(round(soma, 10))
-- OUTPUT:
0.6459640975
0.7256567238
0.7303384779
0.7304989191
0.7305025179
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 21:01:58) 
-- CODE:
from math import *
x = eval(input("Angulo x em radianos:"))
k = int(input("Numero de termos da serie:"))

i = 3
soma = 0
fim = k
cont = 0
j = 1
while(cont<fim):
	soma = soma + ((-1)**j)*(x**i/factorial(i))
	i = i + 2
	cont = cont + 1
	j = j+1
	print(round(soma, 10))
-- OUTPUT:
-0.6459640975
-0.5662714713
-0.5709532254
-0.5707927842
-0.5707963831
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 21:02:02) 
-- CODE:
from math import *
x = eval(input("Angulo x em radianos:"))
k = int(input("Numero de termos da serie:"))

i = 3
soma = 0
fim = k
cont = 0
j = 1
while(cont<fim):
	soma = soma + ((-1)**j)*(x**i/factorial(i))
	i = i + 2
	cont = cont + 1
	j = j+1
	print(round(soma, 10))
-- OUTPUT:
-0.6459640975
-0.5662714713
-0.5709532254
-0.5707927842
-0.5707963831
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 21:02:20) 
-- CODE:
from math import *
x = eval(input("Angulo x em radianos:"))
k = int(input("Numero de termos da serie:"))

i = 3
soma = 0
fim = k
cont = 0
j = 1
while(cont<fim):
	soma = soma + (-1)**j*(x**i/factorial(i))
	i = i + 2
	cont = cont + 1
	j = j+1
	print(round(soma, 10))
-- OUTPUT:
-0.6459640975
-0.5662714713
-0.5709532254
-0.5707927842
-0.5707963831
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 21:02:29) 
-- CODE:
from math import *
x = eval(input("Angulo x em radianos:"))
k = int(input("Numero de termos da serie:"))

i = 3
soma = 0
fim = k
cont = 0
j = 2
while(cont<fim):
	soma = soma + (-1)**j*(x**i/factorial(i))
	i = i + 2
	cont = cont + 1
	j = j+1
	print(round(soma, 10))
-- OUTPUT:
0.6459640975
0.5662714713
0.5709532254
0.5707927842
0.5707963831
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 21:03:01) 
-- CODE:
from math import *
x = eval(input("Angulo x em radianos:"))
k = int(input("Numero de termos da serie:"))

i = 3
soma = 0
fim = k
cont = 0
j = 2
while(cont<fim):
	soma = soma + ((-1)**j)*(x**i/factorial(i))
	i = i + 2
	cont = cont + 1
	j = j+1
	print(round(soma, 10))
-- OUTPUT:
0.6459640975
0.5662714713
0.5709532254
0.5707927842
0.5707963831
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 12:43:26) 
-- CODE:
from math import *
x = eval(input("Angulo x em radianos:"))
k = int(input("Numero de termos da serie:"))

i = 1
soma = 0
fim = k
cont = 0
j = 2
while(cont<fim):
	soma = soma + ((-1)**i)*(x**i/factorial(i))
	i = i + 2
	cont = cont + 1
	print(round(soma, 10))
-- OUTPUT:
-1.5707963268
-2.2167604243
-2.2964530505
-2.3011348047
-2.3012952459
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 12:43:33) 
-- CODE:
from math import *
x = eval(input("Angulo x em radianos:"))
k = int(input("Numero de termos da serie:"))

i = 1
soma = 0
fim = k
cont = 0
j = 2
while(cont<fim):
	soma = soma + ((-1)**i)*(x**i/factorial(i))
	i = i + 2
	cont = cont + 1
	print(round(soma, 10))
-- OUTPUT:
-1.5707963268
-2.2167604243
-2.2964530505
-2.3011348047
-2.3012952459
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 12:45:13) 
-- CODE:
from math import *
x = eval(input("Angulo x em radianos:"))
k = int(input("Numero de termos da serie:"))

i = 1
soma = 0
fim = k
cont = 0
n = 2
while(cont<fim):
	soma = soma + ((-1)**n)*(x**i/factorial(i))
	i = i + 2
	cont = cont + 1
	n = n+1
	print(round(soma, 10))
-- OUTPUT:
1.5707963268
0.9248322293
1.0045248555
0.9998431014
1.0000035426
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 12:45:30) 
-- CODE:
from math import *
x = eval(input("Angulo x em radianos:"))
k = int(input("Numero de termos da serie:"))

i = 1
soma = 0
fim = k
cont = 0
n = 2
while(cont<fim):
	soma = soma + ((-1)**n)*(x**i/factorial(i))
	i = i + 2
	cont = cont + 1
	n = n+1
print(round(soma, 10))
-- EXECUTION TIME:
0.161681
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
1.0000035426
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-0.9998431014
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.8662952838
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
