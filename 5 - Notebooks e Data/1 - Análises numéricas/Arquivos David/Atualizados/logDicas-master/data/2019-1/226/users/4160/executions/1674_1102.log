== TEST (2019-05-01 13:05:20) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite a altura total do tanque: "))
h = float(input("Digite o nível de combustível no tanque: "))
r = float(input("Digite o raio dos bojos semiesféricos inferior e superior: "))
print("Entradas:",x ,",",h,",",r)
print("Volume:",v "litros")
-- ERROR:
File "XXXX", line 10
    print("Volume:",v "litros")
                             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 13:05:39) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite a altura total do tanque: "))
h = float(input("Digite o nível de combustível no tanque: "))
r = float(input("Digite o raio dos bojos semiesféricos inferior e superior: "))
print("Entradas:",x ,",",h,",",r)

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 13:06:08) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite a altura total do tanque: "))
h = float(input("Digite o nivel de combustivel no tanque: "))
r = float(input("Digite o raio dos bojos semiesfericos inferior e superior: "))
print("Entradas:",x ,",",h,",",r)

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 13:08:47) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite a altura total do tanque: "))
h = float(input("Digite o nivel de combustivel no tanque: "))
r = float(input("Digite o raio dos bojos semiesfericos inferior e superior: "))

print("Entradas:",x ,",",h,",",r)

if (x==0 or h==0 or r==0):
	print("Entradas invalidas")


-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 13:08:59) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite a altura total do tanque: "))
h = float(input("Digite o nivel de combustivel no tanque: "))
r = float(input("Digite o raio dos bojos semiesfericos inferior e superior: "))

print("Entradas:",x ,",",h,",",r)

if (x==0 or h==0 or r==0):
	print("Entradas invalidas")


-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 13:10:18) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite a altura total do tanque: "))
h = float(input("Digite o nivel de combustivel no tanque: "))
r = float(input("Digite o raio dos bojos semiesfericos inferior e superior: "))

print("Entradas:",x ,",",h,",",r)

if ((x==0 or h==0 or r==0) and (x < h or x < 2*r):
	print("Entradas invalidas")


-- ERROR:
File "XXXX", line 12
    if ((x==0 or h==0 or r==0) and (x < h or x < 2*r):
                                                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 13:10:38) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite a altura total do tanque: "))
h = float(input("Digite o nivel de combustivel no tanque: "))
r = float(input("Digite o raio dos bojos semiesfericos inferior e superior: "))
b = 2*r
print("Entradas:",x ,",",h,",",r)

if ((x==0 or h==0 or r==0) and (x < h or x < b):
	print("Entradas invalidas")


-- ERROR:
File "XXXX", line 12
    if ((x==0 or h==0 or r==0) and (x < h or x < b):
                                                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 13:10:55) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite a altura total do tanque: "))
h = float(input("Digite o nivel de combustivel no tanque: "))
r = float(input("Digite o raio dos bojos semiesfericos inferior e superior: "))
b = 2*r
print("Entradas:",x ,",",h,",",r)

if ((x==0 or h==0 or r==0) and (x < h or x < b)):
	print("Entradas invalidas")


-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 13:11:41) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite a altura total do tanque: "))
h = float(input("Digite o nivel de combustivel no tanque: "))
r = float(input("Digite o raio dos bojos semiesfericos inferior e superior: "))
b = 2*r
print("Entradas:",x ,",",h,",",r)

if ((x==0 or h==0 or r==0) or (x < h or x < b)):
	print("Entradas invalidas")


-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 13:39:16) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite a altura total do tanque: "))
h = float(input("Digite o nivel de combustivel no tanque: "))
r = float(input("Digite o raio dos bojos semiesfericos inferior e superior: "))
b = 2*r
print("Entradas:",x ,",",h,",",r)
from math import *
# Volume do cilindro:
vc = pi * r **2 * x
# Volume da esfera: 
ve = 4/3 * pi * r **3
# Volume da calota:
va = pi/3 * h **2 *(3*r - h)

if ((x==0 or h==0 or r==0) or (x < h or x < b)):
	print("Entradas invalidas")
else:
	if ():


-- ERROR:
File "XXXX", line 24
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 13:39:32) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite a altura total do tanque: "))
h = float(input("Digite o nivel de combustivel no tanque: "))
r = float(input("Digite o raio dos bojos semiesfericos inferior e superior: "))
b = 2*r
print("Entradas:",x ,",",h,",",r)
from math import *
# Volume do cilindro:
vc = pi * r **2 * x
# Volume da esfera: 
ve = 4/3 * pi * r **3
# Volume da calota:
va = pi/3 * h **2 *(3*r - h)

if ((x==0 or h==0 or r==0) or (x < h or x < b)):
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 13:39:43) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite a altura total do tanque: "))
h = float(input("Digite o nivel de combustivel no tanque: "))
r = float(input("Digite o raio dos bojos semiesfericos inferior e superior: "))
b = 2*r
print("Entradas:",x ,",",h,",",r)
from math import *
# Volume do cilindro:
vc = pi * r **2 * x
# Volume da esfera: 
ve = 4/3 * pi * r **3
# Volume da calota:
va = pi/3 * h **2 *(3*r - h)

if ((x==0 or h==0 or r==0) or (x < h or x < b)):
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 16:35:57) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite a altura total do tanque: "))
h = float(input("Digite o nivel de combustivel no tanque: "))
r = float(input("Digite o raio dos bojos semiesfericos inferior e superior: "))
b = 2*r
print("Entradas:",x ,",",h,",",r)
from math import *
# Volume do cilindro:
vc = pi * r **2 * x
# Volume da esfera: 
ve = 4/3 * pi * r **3
# Volume da calota:
v = (pi/3) * (h **2) * (3*r - h)

if ((x==0 or h==0 or r==0) or (x < h or x < b)):
	print("Entradas invalidas")
else:
	if (h <= r):
		v= (pi/3) * (h **2) * (3*r - h)
		print("Volume: ",round (v * 1000, 3),"litros")
	elif(r<h and h<= x -r):
		v = (4 * pi * (r**3)/6) + (pi * (r**2) * (h - r))
		print("Volume: ",round(v* 1000,3), "litros")
	elif(h > x - r):
		v= ((4 * pi * (r**3))/6) + ((pi/3) * (r**2) * (h - r))*2
		print("Volume: ",round(v* 1000,3), "litros")

	
	
	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume:  81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 16:36:00) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite a altura total do tanque: "))
h = float(input("Digite o nivel de combustivel no tanque: "))
r = float(input("Digite o raio dos bojos semiesfericos inferior e superior: "))
b = 2*r
print("Entradas:",x ,",",h,",",r)
from math import *
# Volume do cilindro:
vc = pi * r **2 * x
# Volume da esfera: 
ve = 4/3 * pi * r **3
# Volume da calota:
v = (pi/3) * (h **2) * (3*r - h)

if ((x==0 or h==0 or r==0) or (x < h or x < b)):
	print("Entradas invalidas")
else:
	if (h <= r):
		v= (pi/3) * (h **2) * (3*r - h)
		print("Volume: ",round (v * 1000, 3),"litros")
	elif(r<h and h<= x -r):
		v = (4 * pi * (r**3)/6) + (pi * (r**2) * (h - r))
		print("Volume: ",round(v* 1000,3), "litros")
	elif(h > x - r):
		v= ((4 * pi * (r**3))/6) + ((pi/3) * (r**2) * (h - r))*2
		print("Volume: ",round(v* 1000,3), "litros")

	
	
	
-- EXECUTION TIME:
0.147477
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume:  81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
