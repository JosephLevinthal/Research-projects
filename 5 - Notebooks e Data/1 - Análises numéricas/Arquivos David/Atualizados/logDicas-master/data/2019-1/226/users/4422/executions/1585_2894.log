== TEST (2019-03-21 11:41:11) 
-- CODE:
float(site1 = input("80.0 + 45.0"))
float(site2 = input("85.0 + 45.0"))
float(site3 = input("90.0 + 45.0"))
float(site4 = input("90.0 + 45.0"))
float(site5 = input("85.0 + 45.0"))
float(site6 = input("60.0 + 45.0"))
float(site7 = input("95.0 + 45.0"))
float(site8 = input("80.0 + 45.0"))



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    float(site1 = input())
TypeError: 'site1' is an invalid keyword argument for this function
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:41:15) 
-- CODE:
float(site1 = input("80.0 + 45.0"))
float(site2 = input("85.0 + 45.0"))
float(site3 = input("90.0 + 45.0"))
float(site4 = input("90.0 + 45.0"))
float(site5 = input("85.0 + 45.0"))
float(site6 = input("60.0 + 45.0"))
float(site7 = input("95.0 + 45.0"))
float(site8 = input("80.0 + 45.0"))



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    float(site1 = input())
TypeError: 'site1' is an invalid keyword argument for this function
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:41:16) 
-- CODE:
float(site1 = input("80.0 + 45.0"))
float(site2 = input("85.0 + 45.0"))
float(site3 = input("90.0 + 45.0"))
float(site4 = input("90.0 + 45.0"))
float(site5 = input("85.0 + 45.0"))
float(site6 = input("60.0 + 45.0"))
float(site7 = input("95.0 + 45.0"))
float(site8 = input("80.0 + 45.0"))



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    float(site1 = input())
TypeError: 'site1' is an invalid keyword argument for this function
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:41:17) 
-- CODE:
float(site1 = input("80.0 + 45.0"))
float(site2 = input("85.0 + 45.0"))
float(site3 = input("90.0 + 45.0"))
float(site4 = input("90.0 + 45.0"))
float(site5 = input("85.0 + 45.0"))
float(site6 = input("60.0 + 45.0"))
float(site7 = input("95.0 + 45.0"))
float(site8 = input("80.0 + 45.0"))



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    float(site1 = input())
TypeError: 'site1' is an invalid keyword argument for this function
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:41:19) 
-- CODE:
float(site1 = input("80.0 + 45.0"))
float(site2 = input("85.0 + 45.0"))
float(site3 = input("90.0 + 45.0"))
float(site4 = input("90.0 + 45.0"))
float(site5 = input("85.0 + 45.0"))
float(site6 = input("60.0 + 45.0"))
float(site7 = input("95.0 + 45.0"))
float(site8 = input("80.0 + 45.0"))



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    float(site1 = input())
TypeError: 'site1' is an invalid keyword argument for this function
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:42:12) 
-- CODE:
float(site1 = input("80.0 + 45.0"))
float(site2 = input("85.0 + 45.0"))
float(site3 = input("90.0 + 45.0"))
float(site4 = input("90.0 + 45.0"))
float(site5 = input("85.0 + 45.0"))
float(site6 = input("60.0 + 45.0"))
float(site7 = input("95.0 + 45.0"))
float(site8 = input("80.0 + 45.0"))

print( site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8 )

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    float(site1 = input())
TypeError: 'site1' is an invalid keyword argument for this function
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:42:13) 
-- CODE:
float(site1 = input("80.0 + 45.0"))
float(site2 = input("85.0 + 45.0"))
float(site3 = input("90.0 + 45.0"))
float(site4 = input("90.0 + 45.0"))
float(site5 = input("85.0 + 45.0"))
float(site6 = input("60.0 + 45.0"))
float(site7 = input("95.0 + 45.0"))
float(site8 = input("80.0 + 45.0"))

print( site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8 )

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    float(site1 = input())
TypeError: 'site1' is an invalid keyword argument for this function
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:42:14) 
-- CODE:
float(site1 = input("80.0 + 45.0"))
float(site2 = input("85.0 + 45.0"))
float(site3 = input("90.0 + 45.0"))
float(site4 = input("90.0 + 45.0"))
float(site5 = input("85.0 + 45.0"))
float(site6 = input("60.0 + 45.0"))
float(site7 = input("95.0 + 45.0"))
float(site8 = input("80.0 + 45.0"))

print( site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8 )

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    float(site1 = input())
TypeError: 'site1' is an invalid keyword argument for this function
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:42:15) 
-- CODE:
float(site1 = input("80.0 + 45.0"))
float(site2 = input("85.0 + 45.0"))
float(site3 = input("90.0 + 45.0"))
float(site4 = input("90.0 + 45.0"))
float(site5 = input("85.0 + 45.0"))
float(site6 = input("60.0 + 45.0"))
float(site7 = input("95.0 + 45.0"))
float(site8 = input("80.0 + 45.0"))

print( site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8 )

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    float(site1 = input())
TypeError: 'site1' is an invalid keyword argument for this function
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:42:15) 
-- CODE:
float(site1 = input("80.0 + 45.0"))
float(site2 = input("85.0 + 45.0"))
float(site3 = input("90.0 + 45.0"))
float(site4 = input("90.0 + 45.0"))
float(site5 = input("85.0 + 45.0"))
float(site6 = input("60.0 + 45.0"))
float(site7 = input("95.0 + 45.0"))
float(site8 = input("80.0 + 45.0"))

print( site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8 )

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    float(site1 = input())
TypeError: 'site1' is an invalid keyword argument for this function
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:42:15) 
-- CODE:
float(site1 = input("80.0 + 45.0"))
float(site2 = input("85.0 + 45.0"))
float(site3 = input("90.0 + 45.0"))
float(site4 = input("90.0 + 45.0"))
float(site5 = input("85.0 + 45.0"))
float(site6 = input("60.0 + 45.0"))
float(site7 = input("95.0 + 45.0"))
float(site8 = input("80.0 + 45.0"))

print( site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8 )

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    float(site1 = input())
TypeError: 'site1' is an invalid keyword argument for this function
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:42:15) 
-- CODE:
float(site1 = input("80.0 + 45.0"))
float(site2 = input("85.0 + 45.0"))
float(site3 = input("90.0 + 45.0"))
float(site4 = input("90.0 + 45.0"))
float(site5 = input("85.0 + 45.0"))
float(site6 = input("60.0 + 45.0"))
float(site7 = input("95.0 + 45.0"))
float(site8 = input("80.0 + 45.0"))

print( site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8 )

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    float(site1 = input())
TypeError: 'site1' is an invalid keyword argument for this function
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:42:15) 
-- CODE:
float(site1 = input("80.0 + 45.0"))
float(site2 = input("85.0 + 45.0"))
float(site3 = input("90.0 + 45.0"))
float(site4 = input("90.0 + 45.0"))
float(site5 = input("85.0 + 45.0"))
float(site6 = input("60.0 + 45.0"))
float(site7 = input("95.0 + 45.0"))
float(site8 = input("80.0 + 45.0"))

print( site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8 )

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    float(site1 = input())
TypeError: 'site1' is an invalid keyword argument for this function
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:42:15) 
-- CODE:
float(site1 = input("80.0 + 45.0"))
float(site2 = input("85.0 + 45.0"))
float(site3 = input("90.0 + 45.0"))
float(site4 = input("90.0 + 45.0"))
float(site5 = input("85.0 + 45.0"))
float(site6 = input("60.0 + 45.0"))
float(site7 = input("95.0 + 45.0"))
float(site8 = input("80.0 + 45.0"))

print( site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8 )

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    float(site1 = input())
TypeError: 'site1' is an invalid keyword argument for this function
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:42:15) 
-- CODE:
float(site1 = input("80.0 + 45.0"))
float(site2 = input("85.0 + 45.0"))
float(site3 = input("90.0 + 45.0"))
float(site4 = input("90.0 + 45.0"))
float(site5 = input("85.0 + 45.0"))
float(site6 = input("60.0 + 45.0"))
float(site7 = input("95.0 + 45.0"))
float(site8 = input("80.0 + 45.0"))

print( site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8 )

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    float(site1 = input())
TypeError: 'site1' is an invalid keyword argument for this function
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:42:16) 
-- CODE:
float(site1 = input("80.0 + 45.0"))
float(site2 = input("85.0 + 45.0"))
float(site3 = input("90.0 + 45.0"))
float(site4 = input("90.0 + 45.0"))
float(site5 = input("85.0 + 45.0"))
float(site6 = input("60.0 + 45.0"))
float(site7 = input("95.0 + 45.0"))
float(site8 = input("80.0 + 45.0"))

print( site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8 )

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    float(site1 = input())
TypeError: 'site1' is an invalid keyword argument for this function
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:42:16) 
-- CODE:
float(site1 = input("80.0 + 45.0"))
float(site2 = input("85.0 + 45.0"))
float(site3 = input("90.0 + 45.0"))
float(site4 = input("90.0 + 45.0"))
float(site5 = input("85.0 + 45.0"))
float(site6 = input("60.0 + 45.0"))
float(site7 = input("95.0 + 45.0"))
float(site8 = input("80.0 + 45.0"))

print( site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8 )

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    float(site1 = input())
TypeError: 'site1' is an invalid keyword argument for this function
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:42:16) 
-- CODE:
float(site1 = input("80.0 + 45.0"))
float(site2 = input("85.0 + 45.0"))
float(site3 = input("90.0 + 45.0"))
float(site4 = input("90.0 + 45.0"))
float(site5 = input("85.0 + 45.0"))
float(site6 = input("60.0 + 45.0"))
float(site7 = input("95.0 + 45.0"))
float(site8 = input("80.0 + 45.0"))

print( site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8 )

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    float(site1 = input())
TypeError: 'site1' is an invalid keyword argument for this function
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:43:10) 
-- CODE:
site1 = input("80.0 + 45.0")
site2 = input("85.0 + 45.0")
site3 = input("90.0 + 45.0")
site4 = input("90.0 + 45.0")
site5 = input("85.0 + 45.0")
site6 = input("60.0 + 45.0")
site7 = input("95.0 + 45.0")
site8 = input("80.0 + 45.0")

print( site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8 )

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    site2 = input()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:43:11) 
-- CODE:
site1 = input("80.0 + 45.0")
site2 = input("85.0 + 45.0")
site3 = input("90.0 + 45.0")
site4 = input("90.0 + 45.0")
site5 = input("85.0 + 45.0")
site6 = input("60.0 + 45.0")
site7 = input("95.0 + 45.0")
site8 = input("80.0 + 45.0")

print( site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8 )

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    site2 = input()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:43:12) 
-- CODE:
site1 = input("80.0 + 45.0")
site2 = input("85.0 + 45.0")
site3 = input("90.0 + 45.0")
site4 = input("90.0 + 45.0")
site5 = input("85.0 + 45.0")
site6 = input("60.0 + 45.0")
site7 = input("95.0 + 45.0")
site8 = input("80.0 + 45.0")

print( site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8 )

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    site2 = input()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:43:13) 
-- CODE:
site1 = input("80.0 + 45.0")
site2 = input("85.0 + 45.0")
site3 = input("90.0 + 45.0")
site4 = input("90.0 + 45.0")
site5 = input("85.0 + 45.0")
site6 = input("60.0 + 45.0")
site7 = input("95.0 + 45.0")
site8 = input("80.0 + 45.0")

print( site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8 )

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    site2 = input()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:43:14) 
-- CODE:
site1 = input("80.0 + 45.0")
site2 = input("85.0 + 45.0")
site3 = input("90.0 + 45.0")
site4 = input("90.0 + 45.0")
site5 = input("85.0 + 45.0")
site6 = input("60.0 + 45.0")
site7 = input("95.0 + 45.0")
site8 = input("80.0 + 45.0")

print( site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8 )

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    site2 = input()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:43:14) 
-- CODE:
site1 = input("80.0 + 45.0")
site2 = input("85.0 + 45.0")
site3 = input("90.0 + 45.0")
site4 = input("90.0 + 45.0")
site5 = input("85.0 + 45.0")
site6 = input("60.0 + 45.0")
site7 = input("95.0 + 45.0")
site8 = input("80.0 + 45.0")

print( site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8 )

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    site2 = input()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:43:14) 
-- CODE:
site1 = input("80.0 + 45.0")
site2 = input("85.0 + 45.0")
site3 = input("90.0 + 45.0")
site4 = input("90.0 + 45.0")
site5 = input("85.0 + 45.0")
site6 = input("60.0 + 45.0")
site7 = input("95.0 + 45.0")
site8 = input("80.0 + 45.0")

print( site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8 )

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    site2 = input()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:43:14) 
-- CODE:
site1 = input("80.0 + 45.0")
site2 = input("85.0 + 45.0")
site3 = input("90.0 + 45.0")
site4 = input("90.0 + 45.0")
site5 = input("85.0 + 45.0")
site6 = input("60.0 + 45.0")
site7 = input("95.0 + 45.0")
site8 = input("80.0 + 45.0")

print( site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8 )

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    site2 = input()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:43:15) 
-- CODE:
site1 = input("80.0 + 45.0")
site2 = input("85.0 + 45.0")
site3 = input("90.0 + 45.0")
site4 = input("90.0 + 45.0")
site5 = input("85.0 + 45.0")
site6 = input("60.0 + 45.0")
site7 = input("95.0 + 45.0")
site8 = input("80.0 + 45.0")

print( site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8 )

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    site2 = input()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:43:15) 
-- CODE:
site1 = input("80.0 + 45.0")
site2 = input("85.0 + 45.0")
site3 = input("90.0 + 45.0")
site4 = input("90.0 + 45.0")
site5 = input("85.0 + 45.0")
site6 = input("60.0 + 45.0")
site7 = input("95.0 + 45.0")
site8 = input("80.0 + 45.0")

print( site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8 )

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    site2 = input()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:43:15) 
-- CODE:
site1 = input("80.0 + 45.0")
site2 = input("85.0 + 45.0")
site3 = input("90.0 + 45.0")
site4 = input("90.0 + 45.0")
site5 = input("85.0 + 45.0")
site6 = input("60.0 + 45.0")
site7 = input("95.0 + 45.0")
site8 = input("80.0 + 45.0")

print( site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8 )

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    site2 = input()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:43:15) 
-- CODE:
site1 = input("80.0 + 45.0")
site2 = input("85.0 + 45.0")
site3 = input("90.0 + 45.0")
site4 = input("90.0 + 45.0")
site5 = input("85.0 + 45.0")
site6 = input("60.0 + 45.0")
site7 = input("95.0 + 45.0")
site8 = input("80.0 + 45.0")

print( site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8 )

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    site2 = input()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:43:15) 
-- CODE:
site1 = input("80.0 + 45.0")
site2 = input("85.0 + 45.0")
site3 = input("90.0 + 45.0")
site4 = input("90.0 + 45.0")
site5 = input("85.0 + 45.0")
site6 = input("60.0 + 45.0")
site7 = input("95.0 + 45.0")
site8 = input("80.0 + 45.0")

print( site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8 )

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    site2 = input()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:43:16) 
-- CODE:
site1 = input("80.0 + 45.0")
site2 = input("85.0 + 45.0")
site3 = input("90.0 + 45.0")
site4 = input("90.0 + 45.0")
site5 = input("85.0 + 45.0")
site6 = input("60.0 + 45.0")
site7 = input("95.0 + 45.0")
site8 = input("80.0 + 45.0")

print( site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8 )

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    site2 = input()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:43:16) 
-- CODE:
site1 = input("80.0 + 45.0")
site2 = input("85.0 + 45.0")
site3 = input("90.0 + 45.0")
site4 = input("90.0 + 45.0")
site5 = input("85.0 + 45.0")
site6 = input("60.0 + 45.0")
site7 = input("95.0 + 45.0")
site8 = input("80.0 + 45.0")

print( site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8 )

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    site2 = input()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:43:16) 
-- CODE:
site1 = input("80.0 + 45.0")
site2 = input("85.0 + 45.0")
site3 = input("90.0 + 45.0")
site4 = input("90.0 + 45.0")
site5 = input("85.0 + 45.0")
site6 = input("60.0 + 45.0")
site7 = input("95.0 + 45.0")
site8 = input("80.0 + 45.0")

print( site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8 )

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    site2 = input()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:43:16) 
-- CODE:
site1 = input("80.0 + 45.0")
site2 = input("85.0 + 45.0")
site3 = input("90.0 + 45.0")
site4 = input("90.0 + 45.0")
site5 = input("85.0 + 45.0")
site6 = input("60.0 + 45.0")
site7 = input("95.0 + 45.0")
site8 = input("80.0 + 45.0")

print( site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8 )

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    site2 = input()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:43:17) 
-- CODE:
site1 = input("80.0 + 45.0")
site2 = input("85.0 + 45.0")
site3 = input("90.0 + 45.0")
site4 = input("90.0 + 45.0")
site5 = input("85.0 + 45.0")
site6 = input("60.0 + 45.0")
site7 = input("95.0 + 45.0")
site8 = input("80.0 + 45.0")

print( site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8 )

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    site2 = input()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:43:17) 
-- CODE:
site1 = input("80.0 + 45.0")
site2 = input("85.0 + 45.0")
site3 = input("90.0 + 45.0")
site4 = input("90.0 + 45.0")
site5 = input("85.0 + 45.0")
site6 = input("60.0 + 45.0")
site7 = input("95.0 + 45.0")
site8 = input("80.0 + 45.0")

print( site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8 )

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    site2 = input()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:43:17) 
-- CODE:
site1 = input("80.0 + 45.0")
site2 = input("85.0 + 45.0")
site3 = input("90.0 + 45.0")
site4 = input("90.0 + 45.0")
site5 = input("85.0 + 45.0")
site6 = input("60.0 + 45.0")
site7 = input("95.0 + 45.0")
site8 = input("80.0 + 45.0")

print( site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8 )

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    site2 = input()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:43:17) 
-- CODE:
site1 = input("80.0 + 45.0")
site2 = input("85.0 + 45.0")
site3 = input("90.0 + 45.0")
site4 = input("90.0 + 45.0")
site5 = input("85.0 + 45.0")
site6 = input("60.0 + 45.0")
site7 = input("95.0 + 45.0")
site8 = input("80.0 + 45.0")

print( site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8 )

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    site2 = input()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:43:17) 
-- CODE:
site1 = input("80.0 + 45.0")
site2 = input("85.0 + 45.0")
site3 = input("90.0 + 45.0")
site4 = input("90.0 + 45.0")
site5 = input("85.0 + 45.0")
site6 = input("60.0 + 45.0")
site7 = input("95.0 + 45.0")
site8 = input("80.0 + 45.0")

print( site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8 )

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    site2 = input()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:43:17) 
-- CODE:
site1 = input("80.0 + 45.0")
site2 = input("85.0 + 45.0")
site3 = input("90.0 + 45.0")
site4 = input("90.0 + 45.0")
site5 = input("85.0 + 45.0")
site6 = input("60.0 + 45.0")
site7 = input("95.0 + 45.0")
site8 = input("80.0 + 45.0")

print( site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8 )

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    site2 = input()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:44:06) 
-- CODE:
site1 = 80.0 + 45.0
site2 = 85.0 + 45.0
site3 = 90.0 + 45.0
site4 = 90.0 + 45.0
site5 = 85.0 + 45.0
site6 = 60.0 + 45.0
site7 = 95.0 + 45.0
site8 = 80.0 + 45.0

print( site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8 )

-- OUTPUT:
1025.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 11:44:09) 
-- CODE:
site1 = 80.0 + 45.0
site2 = 85.0 + 45.0
site3 = 90.0 + 45.0
site4 = 90.0 + 45.0
site5 = 85.0 + 45.0
site6 = 60.0 + 45.0
site7 = 95.0 + 45.0
site8 = 80.0 + 45.0

print( site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8 )

-- EXECUTION TIME:
0.175659
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
1025.0
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
1025.0
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
1025.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:45:09) 
-- CODE:
site1 = 80.0 
site2 = 85.0
site3 = 90.0
site4 = 90.0 
site5 = 85.0 
site6 = 60.0 
site7 = 95.0
site8 = 80.0 

print( site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8 ) * 45

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print( site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8 ) * 45
TypeError: unsupported operand type(s) for *: 'NoneType' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:45:33) 
-- CODE:
site1 = 80.0 
site2 = 85.0
site3 = 90.0
site4 = 90.0 
site5 = 85.0 
site6 = 60.0 
site7 = 95.0
site8 = 80.0 

print( (site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8) * 45 ) 

-- OUTPUT:
29925.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:45:54) 
-- CODE:
site1 = 80.0 
site2 = 85.0
site3 = 90.0
site4 = 90.0 
site5 = 85.0 
site6 = 60.0 
site7 = 95.0
site8 = 80.0 

print( (site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8) + 45 ) 

-- OUTPUT:
710.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 11:45:56) 
-- CODE:
site1 = 80.0 
site2 = 85.0
site3 = 90.0
site4 = 90.0 
site5 = 85.0 
site6 = 60.0 
site7 = 95.0
site8 = 80.0 

print( (site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8) + 45 ) 

-- EXECUTION TIME:
0.133769
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
710.0
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
710.0
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
710.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 11:45:57) 
-- CODE:
site1 = 80.0 
site2 = 85.0
site3 = 90.0
site4 = 90.0 
site5 = 85.0 
site6 = 60.0 
site7 = 95.0
site8 = 80.0 

print( (site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8) + 45 ) 

-- EXECUTION TIME:
0.196126
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
710.0
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
710.0
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
710.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:45:57) 
-- CODE:
site1 = 80.0 
site2 = 85.0
site3 = 90.0
site4 = 90.0 
site5 = 85.0 
site6 = 60.0 
site7 = 95.0
site8 = 80.0 

print( (site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8) + 45 ) 

-- OUTPUT:
710.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 11:45:57) 
-- CODE:
site1 = 80.0 
site2 = 85.0
site3 = 90.0
site4 = 90.0 
site5 = 85.0 
site6 = 60.0 
site7 = 95.0
site8 = 80.0 

print( (site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8) + 45 ) 

-- EXECUTION TIME:
0.185337
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
710.0
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
710.0
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
710.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:47:26) 
-- CODE:
input(site1 = 80.0) 
input(site2 = 85.0)
input(site3 = 90.0)
input(site4 = 90.0) 
input(site5 = 85.0) 
input(site6 = 60.0)
input(site7 = 95.0)
input(site8 = 80.0) 

print( (site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8) + 45 ) 

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    input(site1 = 80.0) 
TypeError: input() takes no keyword arguments
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:49:01) 
-- CODE:
input(float(site1 = 80.0)) 
input(float(site2 = 85.0))
input(float(site3 = 90.0))
input(float(site4 = 90.0))
input(float(site5 = 85.0)) 
input(float(site6 = 60.0))
input(float(site7 = 95.0))
input(float(site8 = 80.0)) 

print( (site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8) + 45 ) 

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    input(float(site1 = 80.0)) 
TypeError: 'site1' is an invalid keyword argument for this function
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:49:13) 
-- CODE:
input(float(80.0)) 
input(float(site2 = 85.0))
input(float(site3 = 90.0))
input(float(site4 = 90.0))
input(float(site5 = 85.0)) 
input(float(site6 = 60.0))
input(float(site7 = 95.0))
input(float(site8 = 80.0)) 

print( (site1 + site2 + site3 + site4+ site5 + site6 + site7 + site8) + 45 ) 

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    input(float(site2 = 85.0))
TypeError: 'site2' is an invalid keyword argument for this function
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:51:10) 
-- CODE:
valor1 = input(90.0 + 45.0)
valor2 = input(80.0 + 45.0)
valor3 = input(85.0 + 45.0)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    valor2 = input(80.0 + 45.0)
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:55:51) 
-- CODE:
valor1 = input(90.0 + 45.0)
valor2 = input(80.0 + 45.0)
valor3 = input(85.0 + 45.0)
valor4 = input(95.5 + 45.0)
valor5 = input(80.0 + 45.0)
valor6 = input(75.0 + 45.0)
valor7 = input(100.0 + 45.0)
valor8 = input(75.0 + 45.0)

print(valor1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    valor2 = input(80.0 + 45.0)
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 11:51:13) 
-- CODE:
valor1 = input( )
valor1 = float(valor1)
valor2 = input( )
valor2 = float(valor2)
valor3 = input( )
valor3 = float(valor3)
valor4 = input( )
valor4 = float(valor4)
valor5 = input( )
valor5 = float(valor5)
valor6 = input( )
valor6 = float(valor6)
valor7 = input( )
valor7 = float(valor7) 
valor8 = input( )
valor8 = float(valor8)

 print( (valor1 + valor2 + valor3 + valor4 + valor5 + valor6 + valor7 + valor )
-- ERROR:
File "XXXX", line 18
    print( (valor1 + valor2 + valor3 + valor4 + valor5 + valor6 + valor7 + valor )
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 11:51:22) 
-- CODE:
valor1 = input( )
valor1 = float(valor1)
valor2 = input( )
valor2 = float(valor2)
valor3 = input( )
valor3 = float(valor3)
valor4 = input( )
valor4 = float(valor4)
valor5 = input( )
valor5 = float(valor5)
valor6 = input( )
valor6 = float(valor6)
valor7 = input( )
valor7 = float(valor7) 
valor8 = input( )
valor8 = float(valor8)

 print( valor1 + valor2 + valor3 + valor4 + valor5 + valor6 + valor7 + valor )
-- ERROR:
File "XXXX", line 18
    print( valor1 + valor2 + valor3 + valor4 + valor5 + valor6 + valor7 + valor )
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 11:51:53) 
-- CODE:
valor1 = input( )
valor1 = float(valor1)
valor2 = input( )
valor2 = float(valor2)
valor3 = input( )
valor3 = float(valor3)
valor4 = input( )
valor4 = float(valor4)
valor5 = input( )
valor5 = float(valor5)
valor6 = input( )
valor6 = float(valor6)
valor7 = input( )
valor7 = float(valor7) 
valor8 = input( )
valor8 = float(valor8)

 print( total )
-- ERROR:
File "XXXX", line 18
    print( total )
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 11:53:29) 
-- CODE:
valor1 = input( )
valor1 = float(valor1)
valor2 = input( )
valor2 = float(valor2)
valor3 = input( )
valor3 = float(valor3)
valor4 = input( )
valor4 = float(valor4)
valor5 = input( )
valor5 = float(valor5)
valor6 = input( )
valor6 = float(valor6)
valor7 = input( )
valor7 = float(valor7) 
valor8 = input( )
valor8 = float(valor8)
 total = valor1 + valor2 + valor3 + valor4 + valor5 + valor6 + valor7 + valor8
print(total)
-- ERROR:
File "XXXX", line 17
    total = valor1 + valor2 + valor3 + valor4 + valor5 + valor6 + valor7 + valor8
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 11:53:43) 
-- CODE:
valor1 = input( )
valor1 = float(valor1)
valor2 = input( )
valor2 = float(valor2)
valor3 = input( )
valor3 = float(valor3)
valor4 = input( )
valor4 = float(valor4)
valor5 = input( )
valor5 = float(valor5)
valor6 = input( )
valor6 = float(valor6)
valor7 = input( )
valor7 = float(valor7) 
valor8 = input( )
valor8 = float(valor8)
 total = valor1 + valor2 + valor3 + valor4 + valor5 + valor6 + valor7 + valor8
print(total)
-- ERROR:
File "XXXX", line 17
    total = valor1 + valor2 + valor3 + valor4 + valor5 + valor6 + valor7 + valor8
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 11:53:43) 
-- CODE:
valor1 = input( )
valor1 = float(valor1)
valor2 = input( )
valor2 = float(valor2)
valor3 = input( )
valor3 = float(valor3)
valor4 = input( )
valor4 = float(valor4)
valor5 = input( )
valor5 = float(valor5)
valor6 = input( )
valor6 = float(valor6)
valor7 = input( )
valor7 = float(valor7) 
valor8 = input( )
valor8 = float(valor8)
 total = valor1 + valor2 + valor3 + valor4 + valor5 + valor6 + valor7 + valor8
print(total)
-- ERROR:
File "XXXX", line 17
    total = valor1 + valor2 + valor3 + valor4 + valor5 + valor6 + valor7 + valor8
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 11:53:44) 
-- CODE:
valor1 = input( )
valor1 = float(valor1)
valor2 = input( )
valor2 = float(valor2)
valor3 = input( )
valor3 = float(valor3)
valor4 = input( )
valor4 = float(valor4)
valor5 = input( )
valor5 = float(valor5)
valor6 = input( )
valor6 = float(valor6)
valor7 = input( )
valor7 = float(valor7) 
valor8 = input( )
valor8 = float(valor8)
 total = valor1 + valor2 + valor3 + valor4 + valor5 + valor6 + valor7 + valor8
print(total)
-- EXECUTION TIME:
0.131668
-- ERROR:
  File "/home/codebench/codes/1585/2894/main.py", line 17
    total = valor1 + valor2 + valor3 + valor4 + valor5 + valor6 + valor7 + valor8
    ^
IndentationError: unexpected indent

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:41:11) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132.0 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(?????)
-- ERROR:
File "XXXX", line 11
    print(?????)
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:41:21) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132.0 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- OUTPUT:
1056.046.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 12:41:23) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132.0 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.124633
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
1056.046.23
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
1056.0401.0
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
1056.0124032.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:41:30) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- OUTPUT:
105646.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 12:41:32) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.127162
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
105646.23
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
1056401.0
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
1056124032.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:41:32) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- OUTPUT:
105646.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:41:32) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- OUTPUT:
105646.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:41:33) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- OUTPUT:
105646.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 12:41:33) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.126436
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
105646.23
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
1056401.0
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
105646.23
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:41:33) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- OUTPUT:
105646.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 12:41:33) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.0897191
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1585/2894/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:41:33) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- OUTPUT:
105646.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:41:34) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- OUTPUT:
105646.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:41:34) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- OUTPUT:
105646.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 12:41:34) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.11557
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
105646.23
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
1056401.0
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
105646.23
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:41:34) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- OUTPUT:
105646.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:41:34) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- OUTPUT:
105646.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 12:41:34) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.137651
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
105646.23
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
1056401.0
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
105646.23
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:41:35) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- OUTPUT:
105646.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 12:41:35) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.294248
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
105646.23
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
1056401.0
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
105646.23
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 12:41:35) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.101394
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
105646.23
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
1056401.0
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:41:35) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- OUTPUT:
105646.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 12:41:35) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.277615
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
1056124032.0
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:

-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
105646.23
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:41:35) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- OUTPUT:
105646.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:41:35) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- OUTPUT:
105646.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:41:36) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- OUTPUT:
105646.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 12:41:36) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.178305
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
105646.23
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
105646.23
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
105646.23
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:41:36) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- OUTPUT:
105646.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 12:41:36) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.183996
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
105646.23
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
105646.23
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
1056401.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:41:36) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- OUTPUT:
105646.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 12:41:36) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.172005
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1585/2894/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 12:41:37) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.161094
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1585/2894/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:41:37) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- OUTPUT:
105646.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:41:37) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- OUTPUT:
105646.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:41:37) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- OUTPUT:
105646.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 12:41:37) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.145349
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
105646.23
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
105646.23
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
105646.23
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:41:37) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- OUTPUT:
105646.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 12:41:38) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.19049
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
105646.23
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
105646.23
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
105646.23
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:41:38) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- OUTPUT:
105646.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:41:38) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- OUTPUT:
105646.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:41:38) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- OUTPUT:
105646.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 12:41:38) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.421126
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
105646.23
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
1056124032.0
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 12:41:38) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.398119
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1585/2894/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 12:41:39) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.392091
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
105646.23
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:

-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
1056124032.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:41:39) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- OUTPUT:
105646.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:41:39) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- OUTPUT:
105646.23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 12:41:39) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.59167
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
1056401.0
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
105646.23
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
1056401.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 12:41:39) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.527153
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
1056124032.0
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
105646.23
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
1056401.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 12:41:39) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.525684
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1585/2894/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 12:41:39) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.506031
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
105646.23
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
105646.23
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
1056401.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 12:41:39) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.380926
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
1056124032.0
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
1056124032.0
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 12:41:39) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
precot = float(input(132 * 8))

# Calculo do valor a ser pago, incluindo o frete:
total = precot + 45.0

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.3216
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
1056401.0
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
1056124032.0
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 12:44:22) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
valor = float(input("Qual o valor unitario do jogo? "))

# Calculo do valor a ser pago, incluindo o frete:
total = (valor * 8) + 45

# Impressao do valor total:
print(total)
-- OUTPUT:
54.84
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 12:44:24) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
valor = float(input("Qual o valor unitario do jogo? "))

# Calculo do valor a ser pago, incluindo o frete:
total = (valor * 8) + 45

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.265242
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
54.84
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
2893.0
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
991941.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:08:52) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
valor = float(input("Qual o valor unitario do jogo? "))

# Calculo do valor a ser pago, incluindo o frete:
total = (valor * 8) + 45

# Impressao do valor total:
print(total)
-- OUTPUT:
54.84
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:19:18) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
valor = float(input("Qual o valor unitario do jogo? "))

# Calculo do valor a ser pago, incluindo o frete:
total = (valor * 8) + 45

# Impressao do valor total:
print(total)
-- OUTPUT:
54.84
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
