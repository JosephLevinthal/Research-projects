== TEST (2019-04-30 10:46:03) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input())
h = float(input())
r = float(input())
pi = 3.141592
if H<=0 or h<=0 or r<=0 or H<h or H<2*r:
	print("Entradas: ",H , h , r)
	print("Entradas invalidas")
else:
	v = 4/3*pi*r**3+(h-r)*2*pi*r
	print("Entradas: ",H , h , r)
	print("Volume: ",v," litros")
-- OUTPUT:
Entradas:  11.3 5.7 2.3
Volume:  100.09949869866666  litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:47:25) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input())
h = float(input())
r = float(input())
pi = 3.141592
if H<=0 or h<=0 or r<=0 or H<h or H<2*r:
	print("Entradas: ",H , h , r)
	print("Entradas invalidas")
else:
	v = 4/3*pi*r**3+(h-r)*2*pi*r
	print("Entradas:",H ,",", h ,",", r)
	print("Volume:",round(v,3),"litros")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 100.099 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:47:34) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input())
h = float(input())
r = float(input())
pi = 3.141592
if H<=0 or h<=0 or r<=0 or H<h or H<2*r:
	print("Entradas: ",H , h , r)
	print("Entradas invalidas")
else:
	v = 4/3*pi*r**3+(h-r)*2*pi*r
	print("Entradas:",H ,",", h ,",", r)
	print("Volume:",round(v,3),"litros")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 100.099 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:49:18) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input())
h = float(input())
r = float(input())
pi = 3.141592
if H<=0 or h<=0 or r<=0 or H<h or H<2*r:
	print("Entradas:",H ,",", h ,",", r)
	print("Entradas invalidas")
else:
	v = 4/6*pi*r**3+(h-r)*2*pi*r
	print("Entradas:",H ,",", h ,",", r)
	print("Volume:",round(v,3),"litros")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 74.617 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:51:08) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input())
h = float(input())
r = float(input())
pi = 3.141592
if H<=0 or h<=0 or r<=0 or H<h or H<2*r:
	print("Entradas:",H ,",", h ,",", r)
	print("Entradas invalidas")
else:
	v = (4/3)*pi*(r**3)+(h-r)*pi*r**2
	print("Entradas:",H ,",", h ,",", r)
	print("Volume:",round(v,3),"litros")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 107.47 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:51:21) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input())
h = float(input())
r = float(input())
pi = 3.141592
if H<=0 or h<=0 or r<=0 or H<h or H<2*r:
	print("Entradas:",H ,",", h ,",", r)
	print("Entradas invalidas")
else:
	v = (4/6)*pi*(r**3)+(h-r)*pi*r**2
	print("Entradas:",H ,",", h ,",", r)
	print("Volume:",round(v,3),"litros")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:51:39) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input())
h = float(input())
r = float(input())
pi = 3.141592
if H<=0 or h<=0 or r<=0 or H<h or H<2*r:
	print("Entradas:",H ,",", h ,",", r)
	print("Entradas invalidas")
else:
	v = (4/6)*pi*(r**3)+(h-r)*pi*r**2
	print("Entradas:",H ,",", h ,",", r)
	print("Volume:",round(v*1000,3),"litros")
-- EXECUTION TIME:
0.147268
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.174 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:51:43) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input())
h = float(input())
r = float(input())
pi = 3.141592
if H<=0 or h<=0 or r<=0 or H<h or H<2*r:
	print("Entradas:",H ,",", h ,",", r)
	print("Entradas invalidas")
else:
	v = (4/6)*pi*(r**3)+(h-r)*pi*r**2
	print("Entradas:",H ,",", h ,",", r)
	print("Volume:",round(v*1000,3),"litros")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.174 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:52:26) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input())
h = float(input())
r = float(input())
pi = 3.14159265359
if H<=0 or h<=0 or r<=0 or H<h or H<2*r:
	print("Entradas:",H ,",", h ,",", r)
	print("Entradas invalidas")
else:
	v = (4/6)*pi*(r**3)+(h-r)*pi*r**2
	print("Entradas:",H ,",", h ,",", r)
	print("Volume:",round(v*1000,3),"litros")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:52:35) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input())
h = float(input())
r = float(input())
pi = 3.14159265359
if H<=0 or h<=0 or r<=0 or H<h or H<2*r:
	print("Entradas:",H ,",", h ,",", r)
	print("Entradas invalidas")
else:
	v = (4/6)*pi*(r**3)+(h-r)*pi*r**2
	print("Entradas:",H ,",", h ,",", r)
	print("Volume:",round(v*1000,3),"litros")
-- EXECUTION TIME:
0.135511
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
