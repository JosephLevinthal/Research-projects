== TEST (2019-03-22 00:32:17) 
-- CODE:
a=input("nome do objeto:")
b=input("quantidade de vezes a se repetir:")

print(abra + a * b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(abra + a * b)
NameError: name 'abra' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 00:33:28) 
-- CODE:
a=input("nome do objeto:")
b=input("quantidade de vezes a se repetir:")

print("abra" + a" " * b)
-- ERROR:
File "XXXX", line 4
    print("abra" + a" " * b)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 00:33:58) 
-- CODE:
a=input("nome do objeto:")
b=input("quantidade de vezes a se repetir:")

print("abra"+a*b" ")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print("abra"+a*b" ")
TypeError: can't multiply sequence by non-int of type 'bytes'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 00:35:57) 
-- CODE:
a=input("nome do objeto:")
b=input("quantidade de vezes a se repetir:")

print("abra"+a*b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print("abra"+a*b)
TypeError: can't multiply sequence by non-int of type 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 00:36:18) 
-- CODE:
a=input("nome do objeto:")
b=input("quantidade de vezes a se repetir:")

print("abra"+a*b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print("abra"+a*b)
TypeError: can't multiply sequence by non-int of type 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 00:36:53) 
-- CODE:
a=input("nome do objeto:")
b=input("quantidade de vezes a se repetir:")

print("abra"+a)*b
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print("abra"+a)*b
TypeError: can't multiply sequence by non-int of type 'NoneType'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 00:37:58) 
-- CODE:
a=input("nome do objeto:")
b=input("quantidade de vezes a se repetir:")

print("abra"+a*b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print("abra"+a*b)
TypeError: can't multiply sequence by non-int of type 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 00:39:03) 
-- CODE:
a=input("nome do objeto:")
b=int(input("quantidade de vezes a se repetir:"))

print("abra"+a*b)
-- OUTPUT:
abralivrolivrolivrolivrolivrolivrolivrolivro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 00:39:31) 
-- CODE:
a=input("nome do objeto:")
b=int(input("quantidade de vezes a se repetir:"))

print("abra "+a)*b
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print("abra "+a)*b
TypeError: unsupported operand type(s) for *: 'NoneType' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 00:41:07) 
-- CODE:
a=input("nome do objeto:")
b=int(input("quantidade de vezes a se repetir:"))

print"abra "+a*b
-- ERROR:
File "XXXX", line 4
    print"abra "+a*b
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 00:41:30) 
-- CODE:
a=input("nome do objeto:")
b=int(input("quantidade de vezes a se repetir:"))

print("abra "+a*b)
-- OUTPUT:
abra livrolivrolivrolivrolivrolivrolivrolivro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 00:42:32) 
-- CODE:
a=input("nome do objeto:")
b=int(input("quantidade de vezes a se repetir: "))

print("abra "+a*b)
-- OUTPUT:
abra livrolivrolivrolivrolivrolivrolivrolivro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 00:43:10) 
-- CODE:
a=input("nome do objeto: ")
b=int(input("quantidade de vezes a se repetir:"))

print("abra "+a*b)
-- OUTPUT:
abra livrolivrolivrolivrolivrolivrolivrolivro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 00:43:34) 
-- CODE:
a=input("nome do objeto: ")
b=int(input("quantidade de vezes a se repetir:"))

print("abra "+a*b)
-- OUTPUT:
abra livrolivrolivrolivrolivrolivrolivrolivro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 00:45:54) 
-- CODE:
a=input("nome do objeto:")
b=int(input("quantidade de vezes a se repetir:"))

print("abra "*b+a*b)
-- OUTPUT:
abra abra abra abra abra abra abra abra livrolivrolivrolivrolivrolivrolivrolivro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 00:46:49) 
-- CODE:
a=input("nome do objeto:")
b=int(input("quantidade de vezes a se repetir:"))

print(("abra "a)*b)
-- ERROR:
File "XXXX", line 4
    print(("abra "a)*b)
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 00:47:00) 
-- CODE:
a=input("nome do objeto:")
b=int(input("quantidade de vezes a se repetir:"))

print(("abra "+a)*b)
-- OUTPUT:
abra livroabra livroabra livroabra livroabra livroabra livroabra livroabra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 00:47:46) 
-- CODE:
a=input("nome do objeto:")
b=int(input("quantidade de vezes a se repetir:"))

print((" abra "+a)*b)
-- OUTPUT:
abra livro abra livro abra livro abra livro abra livro abra livro abra livro abra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 00:47:58) 
-- CODE:
a=input("nome do objeto:")
b=int(input("quantidade de vezes a se repetir:"))

print((" abra "+a)*b)
-- EXECUTION TIME:
0.145392
-- TEST CASE 1:
---- input:
livro
8
---- correct output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
---- user output:
abra livro abra livro abra livro abra livro abra livro abra livro abra livro abra livro
-- TEST CASE 2:
---- input:
carro
2
---- correct output:
Abra carro Abra carro
---- user output:
abra carro abra carro
-- TEST CASE 3:
---- input:
caixa
1
---- correct output:
Abra caixa
---- user output:
abra caixa
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 00:49:00) 
-- CODE:
a=input("nome do objeto:"" ")
b=int(input("quantidade de vezes a se repetir:"))

print(("abra "+a)*b)
-- OUTPUT:
nome do objeto: abra livroabra livroabra livroabra livroabra livroabra livroabra livroabra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 00:49:14) 
-- CODE:
a=input("nome do objeto:"" ")
b=int(input("quantidade de vezes a se repetir:"))

print(("abra "+a)*b)
-- EXECUTION TIME:
0.285202
-- TEST CASE 1:
---- input:
livro
8
---- correct output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
---- user output:
nome do objeto: abra livroabra livroabra livroabra livroabra livroabra livroabra livroabra livro
-- TEST CASE 2:
---- input:
carro
2
---- correct output:
Abra carro Abra carro
---- user output:
nome do objeto: abra carroabra carro
-- TEST CASE 3:
---- input:
caixa
1
---- correct output:
Abra caixa
---- user output:
nome do objeto: abra caixa
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 00:49:47) 
-- CODE:
a=input("nome do objeto:")
b=int(input("quantidade de vezes a se repetir:"))

print((" Abra "+a)*b)
-- OUTPUT:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 00:50:02) 
-- CODE:
a=input("nome do objeto:")
b=int(input("quantidade de vezes a se repetir:"))

print((" Abra "+a)*b)
-- EXECUTION TIME:
0.135437
-- TEST CASE 1:
---- input:
livro
8
---- correct output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
---- user output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
-- TEST CASE 2:
---- input:
carro
2
---- correct output:
Abra carro Abra carro
---- user output:
Abra carro Abra carro
-- TEST CASE 3:
---- input:
caixa
1
---- correct output:
Abra caixa
---- user output:
Abra caixa
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
