== TEST (2019-03-21 12:31:37) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=10
b=3
c=float(a/b)
d=int(a%b)
print(a)
print(b)
print()
print()
-- OUTPUT:
10
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 12:31:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=10
b=3
c=float(a/b)
d=int(a%b)
print(a)
print(b)
print(c)
print(d)
-- OUTPUT:
10
3
3.3333333333333335
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 12:33:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=10
b=3
c=float(round(a/b,2)
d=int(a%b)
print(a)
print(b)
print(c)
print(d)
-- ERROR:
File "XXXX", line 7
    d=int(a%b)
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 12:33:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=10
b=3
c=float(a/b)
d=int(a%b)
print(a)
print(b)
print(round(c,2))
print(d)
-- OUTPUT:
10
3
3.33
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 12:34:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=10
b=3
c=float(a/b)
d=int(a%b)
print(a)
print(b)
print(round(c,2))
print(d)
-- EXECUTION TIME:
0.195944
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
10
3
3.33
1
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
10
3
3.33
1
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
10
3
3.33
1
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 12:34:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=346
b=2
c=float(a/b)
d=int(a%b)
print(a)
print(b)
print(round(c,2))
print(d)
-- OUTPUT:
346
2
173.0
0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 12:35:05) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=346
b=2
c=float(a/b)
d=int(a%b)
print(a)
print(b)
print(c)
print(d)
-- OUTPUT:
346
2
173.0
0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 12:35:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=346
b=2
c=float(a/b)
d=int(a%b)
print(a)
print(b)
print(int(c))
print(d)
-- OUTPUT:
346
2
173
0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 12:35:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=346
b=2
c=float(a/b)
d=int(a%b)
print(a)
print(b)
print(int(c))
print(d)
-- EXECUTION TIME:
0.155711
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
346
2
173
0
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
346
2
173
0
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
346
2
173
0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 12:37:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=input("dividendo:")
b=input("divisor:")
c=float(a/b)
d=int(a%b)
print(a)
print(b)
print(int(c))
print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    c=float(a/b)
TypeError: unsupported operand type(s) for /: 'str' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 12:38:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=input(float("dividendo:"))
b=input(float("divisor:"))
c=float(a/b)
d=int(a%b)
print(a)
print(b)
print(int(c))
print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    a=input(float("dividendo:"))
ValueError: could not convert string to float: 'dividendo:'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 12:39:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=input(float("dividendo:"))
b=input(float("divisor:"))
c=float(a/b)
d=int(a%b)
print(a)
print(b)
print(int(c))
print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    a=input(float("dividendo:"))
ValueError: could not convert string to float: 'dividendo:'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 12:40:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=float(input("dividendo:"))
b=float(input("divisor:"))
c=float(a/b)
d=int(a%b)
print(a)
print(b)
print(int(c))
print(d)
-- OUTPUT:
8.0
5.0
1
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 12:41:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=float(input("dividendo:"))
b=float(input("divisor:"))
c=float(a/b)
d=int(a%b)
print(int(a))
print(int(b))
print(int(c))
print(int(d))
-- OUTPUT:
8
5
1
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 12:41:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=float(input("dividendo:"))
b=float(input("divisor:"))
c=float(a/b)
d=int(a%b)
print(int(a))
print(int(b))
print(int(c))
print(int(d))
-- EXECUTION TIME:
0.178595
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
8
5
1
3
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
14
2
7
0
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
347
2
173
1
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 12:47:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=float(input("dividendo:"))
b=float(input("divisor:"))
c=float(a/b)
d=int(a%b)
print(int(a))
print(int(b))
print(int(c))
print(int(d))
-- EXECUTION TIME:
0.12804
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
8
5
1
3
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
14
2
7
0
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
347
2
173
1
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 12:47:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=float(input("dividendo:"))
b=float(input("divisor:"))
c=float(a/b)
d=int(a%b)
print(int(a))
print(int(b))
print(int(c))
print(int(d))
-- EXECUTION TIME:
0.1296
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
8
5
1
3
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
14
2
7
0
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
347
2
173
1
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
