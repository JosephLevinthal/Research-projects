== TEST (2019-05-13 17:46:11) 
-- CODE:
h = int(input("insira um numero:"))

i = 0
x = 1
y = 2

while(i < h):
	pi = (4/x) *(-1)**y
	i = i + 1
	x = x + 2 

print(round(pi, 8))
-- OUTPUT:
0.01476015
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 17:46:18) 
-- CODE:
h = int(input("insira um numero:"))

i = 0
x = 1
y = 2

while(i < h):
	pi = (4/x) *(-1)**y
	i = i + 1
	x = x + 2 

print(round(pi, 8))
-- OUTPUT:
0.01476015
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 17:46:35) 
-- CODE:
h = int(input("insira um numero:"))

i = 0
x = 1
y = 2

while(i < h):
	pi = (4/x) *(-1)**y
	i = i + 1
	x = x + 2 

print(round(pi, 8))
-- EXECUTION TIME:
0.16633
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
0.01476015
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
0.09302326
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:
0.13793103
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 17:47:07) 
-- CODE:
h = int(input("insira um numero:"))

i = 0
x = 1
y = 2

while(i < h):
	pi = (4/x) *(-1)**y
	i = i + 1
	x = x + 2 
	y = y + 1
print(round(pi, 8))
-- OUTPUT:
-0.01476015
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 17:47:10) 
-- CODE:
h = int(input("insira um numero:"))

i = 0
x = 1
y = 2

while(i < h):
	pi = (4/x) *(-1)**y
	i = i + 1
	x = x + 2 
	y = y + 1
print(round(pi, 8))
-- OUTPUT:
-0.01476015
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 17:48:00) 
-- CODE:
h = int(input("insira um numero:"))
pi = 0
i = 0
x = 1
y = 2

while(i < h):
	pi = (4/x) *(-1)**y + pi
	i = i + 1
	x = x + 2 
	y = y + 1
print(round(pi, 8))
-- OUTPUT:
3.13423981
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 17:48:06) 
-- CODE:
h = int(input("insira um numero:"))
pi = 0
i = 0
x = 1
y = 2

while(i < h):
	pi = (4/x) *(-1)**y + pi
	i = i + 1
	x = x + 2 
	y = y + 1
print(round(pi, 8))
-- EXECUTION TIME:
0.274134
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
3.13423981
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
3.09616153
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:
3.20818565
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
