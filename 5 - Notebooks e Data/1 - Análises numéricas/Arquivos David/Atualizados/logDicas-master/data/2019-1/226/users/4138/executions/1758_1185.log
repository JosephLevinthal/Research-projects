== TEST (2019-05-28 12:03:33) 
-- CODE:
glicose = array(eval(input("insira o nivel de glicose:")))

i = 0
j = 0
while(j < size(glicose)):
	if(glicose[i]> 99):
		i = i + 1
		print(i)
	j = j + 1
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    glicose = array(eval(input()))
NameError: name 'array' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 12:03:57) 
-- CODE:
from numpy import *
glicose = array(eval(input("insira o nivel de glicose:")))

i = 0
j = 0
while(j < size(glicose)):
	if(glicose[i]> 99):
		i = i + 1
		print(i)
	j = j + 1

		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 12:05:46) 
-- CODE:
from numpy import *
glicose = array(eval(input("insira o nivel de glicose:")))

i = 0
j = 0
while(i < size(glicose)):
	if(glicose[i]> 99):
		i = i + 1
		print(i)
	j = j + 1

		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 12:06:22) 
-- CODE:
from numpy import *
glicose = array(eval(input("insira o nivel de glicose:")))

i = 0

while(i < size(glicose)):
	if(glicose[i]> 99):
		 print(i)
	i = i + 1

		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 12:06:40) 
-- CODE:
from numpy import *
glicose = array(eval(input("insira o nivel de glicose:")))

i = 0

while(i < size(glicose)):
	if(glicose[i]> 99):
		 print(i)
	i = i + 1

		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 12:08:23) 
-- CODE:
from numpy import *
glicose = array(eval(input("insira o nivel de glicose:")))

i = 0
j = 0
while(i < size(glicose)):
	if(glicose[i]> 99):
		j = j + 1
		 print(i)
	i = i + 1
print(j)
		
-- ERROR:
File "XXXX", line 9
    print(i)
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 12:09:03) 
-- CODE:
from numpy import *
glicose = array(eval(input("insira o nivel de glicose:")))

i = 0
j = 0
while(i < size(glicose)):
	if(glicose[i]> 99):
		print(i)
		j = j + 1
	i = i + 1
print(j)
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-28 12:09:26) 
-- CODE:
from numpy import *
glicose = array(eval(input("insira o nivel de glicose:")))

i = 0
j = 0
while(i < size(glicose)):
	if(glicose[i]> 99):
		print(i)
		j = j + 1
	i = i + 1
print(j)
		
-- EXECUTION TIME:
1.38481
-- TEST CASE 1:
---- input:
[101,89,105,88,104,87]
---- correct output:
0
2
4
3
---- user output:
0
2
4
3
-- TEST CASE 2:
---- input:
[88,100,105,107,100,108,110,99,98,100]
---- correct output:
1
2
3
4
5
6
9
7
---- user output:
1
2
3
4
5
6
9
7
-- TEST CASE 3:
---- input:
[99,98,98,99,98,97]
---- correct output:
0
---- user output:
0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-28 12:12:02) 
-- CODE:
from numpy import *
glicose = array(eval(input("insira o nivel de glicose:")))

i = 0
j = 0
while(i < size(glicose)):
	if(glicose[i]> 99):
		i = i + 1
		print(i)
	j = j + 1

		
-- EXECUTION TIME:
376.185
-- ERROR:
Killed

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-28 12:44:44) 
-- CODE:
from numpy import *
glicose = array(eval(input("insira o nivel de glicose:")))

i = 0
j = 0
while(i < size(glicose)):
	if(glicose[i]> 99):
		print(i)
		j = j + 1
	i = i + 1
print(j)
		
-- EXECUTION TIME:
0.441255
-- TEST CASE 1:
---- input:
[101,89,105,88,104,87]
---- correct output:
0
2
4
3
---- user output:
0
2
4
3
-- TEST CASE 2:
---- input:
[88,100,105,107,100,108,110,99,98,100]
---- correct output:
1
2
3
4
5
6
9
7
---- user output:
1
2
3
4
5
6
9
7
-- TEST CASE 3:
---- input:
[99,98,98,99,98,97]
---- correct output:
0
---- user output:
0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
