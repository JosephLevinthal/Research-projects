== TEST (2019-07-04 10:32:43) 
-- CODE:
from numpy import*
from math import*
x=eval(input("Digite o angulo: "))
k=int(input("Gite o n de termos: "))
i=1
sinal=1
while(i>0):
	i=i*2
	x=x**i
	sinal=-sinal
	fac=factorial(i)
	cos=sinaal-x/fac
print(cos)	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:33:05) 
-- CODE:
from numpy import*
from math import*
x=eval(input("Digite o angulo: "))
k=int(input("Gite o n de termos: "))
i=1
sinal=1
while(i>0):
	i=i*2
	x=x**i
	sinal=-sinal
	fac=factorial(i)
	cos=sinal-x/fac
print(cos)	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:33:48) 
-- CODE:
from numpy import*
from math import*
x=eval(input("Digite o angulo: "))
k=int(input("Gite o n de termos: "))
i=1
sinal=1
while(i>0):
	i=i*2
	x=x**i
	sinal=-sinal
	fac=factorial(i)
	cos=sinal*x/fac
print(cos)	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-04 10:37:30) 
-- CODE:
from numpy import*
from math import*
x=eval(input("Digite o angulo: "))
k=int(input("Gite o n de termos: "))
i=1
sinal=1
while(i>0):
	i=i*2
	x=x**i
	sinal=-sinal
	fac=factorial(i)
	cos=sinal*x/fac
print(cos)	
-- EXECUTION TIME:
1.29121
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1865/1531/main.py", line 12, in <module>
    cos=sinal*x/fac
OverflowError: int too large to convert to float

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:38:45) 
-- CODE:
from numpy import*
from math import*
x=eval(input("Digite o angulo: "))
k=int(input("Gite o n de termos: "))
i=1
sinal=1
while(i>0):
	i=i*2
	x=x**i
	sinal=-sinal
	fac=math.factorial(i)
	cos=sinal*x/fac
if(k>0):	
print(cos)	
-- ERROR:
File "XXXX", line 14
    print(cos)	
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:38:58) 
-- CODE:
from numpy import*
from math import*
x=eval(input("Digite o angulo: "))
k=int(input("Gite o n de termos: "))
i=1
sinal=1
while(i>0):
	i=i*2
	x=x**i
	sinal=-sinal
	fac=math.factorial(i)
cos=sinal*x/fac
if(k>0):	
print(cos)	
-- ERROR:
File "XXXX", line 14
    print(cos)	
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:39:13) 
-- CODE:
from numpy import*
from math import*
x=eval(input("Digite o angulo: "))
k=int(input("Gite o n de termos: "))
i=1
sinal=1
while(i>0):
	i=i*2
	x=x**i
	sinal=-sinal
	fac=math.factorial(i)
cos=sinal*x/fac
if(k>0):
	print(cos)	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:39:34) 
-- CODE:
from numpy import*
from math import*
x=eval(input("Digite o angulo: "))
k=int(input("Gite o n de termos: "))
i=1
sinal=1
while(i>0):
	i=i*2
	x=x**i
	sinal=-sinal
	fac=math.factorial(i)
   cos=sinal*x/fac
if(k>0):
	print(cos)	
-- ERROR:
File "XXXX", line 12
    cos=sinal*x/fac
                  ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:40:18) 
-- CODE:
from numpy import*
from math import*
x=eval(input("Digite o angulo: "))
k=int(input("Gite o n de termos: "))
i=1
sinal=1
while(i>0):
	i=i*2
	x=x**i
	print(x)
	sinal=-sinal
	fac=math.factorial(i)
	print(fac)
   cos=sinal*x/fac
if(k>0):
	print(cos)	
-- ERROR:
File "XXXX", line 14
    cos=sinal*x/fac
                  ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:40:26) 
-- CODE:
from numpy import*
from math import*
x=eval(input("Digite o angulo: "))
k=int(input("Gite o n de termos: "))
i=1
sinal=1
while(i>0):
	i=i*2
	x=x**i
	print(x)
	sinal=-sinal
	fac=math.factorial(i)
	print(fac)
cos=sinal*x/fac
if(k>0):
	print(cos)	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:41:21) 
-- CODE:
from numpy import*
from math import*
x=eval(input("Digite o angulo: "))
k=int(input("Gite o n de termos: "))
i=1
sinal=1
while(i>0):
	i=i*2
	x=x**i
	#print(x)
	sinal=-sinal
	fac=math.factorial(i)
	#print(fac)
cos=sinal*x/fac
if(k>0):
	print(round(cos,10))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:41:51) 
-- CODE:
from numpy import*
from math import*
x=eval(input("Digite o angulo: "))
k=int(input("Gite o n de termos: "))
i=1
sinal=1
while(i>0):
	i=i*2
	x=x**i
	#print(x)
	sinal=-sinal
	fac=math.factorial(i)
	print(fac)
cos=sinal*x/fac
if(k>0):
	print(round(cos,10))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:42:15) 
-- CODE:
from numpy import*
from math import*
x=eval(input("Digite o angulo: "))
k=int(input("Gite o n de termos: "))
i=1
sinal=1
while(i>0):
	i=i*2
	x=x**i
	#print(x)
	sinal=-sinal
	fac=math.factorial(i)
	
cos=sinal*x/fac
if(k>0):
	print(round(cos,10))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:42:29) 
-- CODE:
from numpy import*
from math import*
x=eval(input("Digite o angulo: "))
k=int(input("Gite o n de termos: "))
i=1
sinal=1
while(i>0):
	i=i*2
	x=x**i
	print(x)
	sinal=-sinal
	fac=math.factorial(i)
	
cos=sinal*x/fac
if(k>0):
	print(round(cos,10))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:46:32) 
-- CODE:
from numpy import*
from math import*
x=eval(input("Digite o angulo: "))
k=int(input("Gite o n de termos: "))
i=1
sinal=1
while(i>0):
	i=i*2
	x=x**i
	sinal=-sinal
	fac=factorial(i)
	
cos=sinal*x/fac
if(k>0):
	print(round(cos,10))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:49:15) 
-- CODE:
from numpy import*
from math import*
x=eval(input("Digite o angulo: "))
k=int(input("Gite o n de termos: "))
i=0
sinal=1
while(x>0):
	i=(i+1)*2
	x=x**i
	sinal=-sinal
	fac=factorial(i)
	
cos=sinal*x/fac
if(k>0):
	print(round(cos,10))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:49:22) 
-- CODE:
from numpy import*
from math import*
x=eval(input("Digite o angulo: "))
k=int(input("Gite o n de termos: "))
i=0
sinal=1
while(x>0):
	i=(i+1)*2
	x=x**i
	sinal=-sinal
	fac=factorial(i)
	
cos=sinal*x/fac
if(k>0):
	print(round(cos,10))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-04 10:49:26) 
-- CODE:
from numpy import*
from math import*
x=eval(input("Digite o angulo: "))
k=int(input("Gite o n de termos: "))
i=0
sinal=1
while(x>0):
	i=(i+1)*2
	x=x**i
	sinal=-sinal
	fac=factorial(i)
	
cos=sinal*x/fac
if(k>0):
	print(round(cos,10))	
-- EXECUTION TIME:
2.34835
-- TEST CASE 1:
---- input:
pi/9
6
---- correct output:
0.9396926208
---- user output:
0.0
-- TEST CASE 2:
---- input:
pi/10
20
---- correct output:
0.9510565163
---- user output:
Digite o angulo: Gite o n de termos: 0.0
-- TEST CASE 3:
---- input:
pi
9
---- correct output:
-0.9999998647
---- user output:
Digite o angulo: Gite o n de termos:
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-04 10:55:03) 
-- CODE:
from numpy import*
from math import*
x=eval(input("Digite o angulo: "))
k=int(input("Gite o n de termos: "))
i=1
sinal=1
while(i>0):
	i=i*2
	x=x**i
	sinal=-sinal
	fac=factorial(i)
	
cos=sinal*x/fac
if(k>0):
	print(round(cos,10))	
-- EXECUTION TIME:
494.743
-- ERROR:
Killed

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
