== TEST (2019-06-18 21:16:31) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12 ,1 ], [12 , 0 , 2 ], [0 , 2 , 3 ]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = dot( , )

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[0] == min(preco):
    print("banana")
else:
    print("caqui")

-- ERROR:
File "XXXX", line 18
    preco = dot( , )
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 21:18:11) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12 ,1 ], [12 , 0 , 2 ], [0 , 2 , 3 ]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = dot( frutas,compras )

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[0] == min(preco):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-18 21:18:23) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12 ,1 ], [12 , 0 , 2 ], [0 , 2 , 3 ]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = dot( frutas,compras )

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[0] == min(preco):
    print("banana")
else:
    print("caqui")

-- EXECUTION TIME:
0.849423
-- TEST CASE 1:
---- input:
nada
---- correct output:
abacate:  2.9
banana:  0.5
caqui:  8.9
caqui

---- user output:
abacate:  729.7
banana:  338.6
caqui:  188.3
abacate
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 21:18:47) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12 ,1 ], [12 , 0 , 2 ], [0 , 2 , 3 ]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = dot( frutas,compras )

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] == max(preco):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-18 21:19:07) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12 ,1 ], [12 , 0 , 2 ], [0 , 2 , 3 ]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = dot( frutas,compras )

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] == max(preco):
    print("banana")
else:
    print("caqui")

-- EXECUTION TIME:
0.954663
-- TEST CASE 1:
---- input:
nada
---- correct output:
abacate:  2.9
banana:  0.5
caqui:  8.9
caqui

---- user output:
abacate:  729.7
banana:  338.6
caqui:  188.3
abacate
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 21:21:33) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12 ,1 ], [12 , 0 , 2 ], [0 , 2 , 3 ]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = dot( frutas,compras )

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] == max(preco):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 21:43:59) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12 ,1 ], [12 , 0 , 2 ], [0 , 2 , 3 ]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])


# Resolucao do sistema de equacoes lineares
preco = dot( frutas,compras )

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] == max(preco):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-18 21:44:03) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12 ,1 ], [12 , 0 , 2 ], [0 , 2 , 3 ]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])


# Resolucao do sistema de equacoes lineares
preco = dot( frutas,compras )

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] == max(preco):
    print("banana")
else:
    print("caqui")

-- EXECUTION TIME:
0.995227
-- TEST CASE 1:
---- input:
nada
---- correct output:
abacate:  2.9
banana:  0.5
caqui:  8.9
caqui

---- user output:
abacate:  729.7
banana:  338.6
caqui:  188.3
abacate
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 21:46:09) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12 ,1 ], [12 , 0 , 2 ], [0 , 2 , 3 ]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])


# Resolucao do sistema de equacoes lineares
preco = dot( frutas,compras )

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] == max(preco):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 21:47:12) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12 ,1 ], [12 , 0 , 2 ], [0 , 2 , 3 ]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])


# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas),compras )

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] == max(preco):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 21:47:41) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12 ,1 ], [12 , 0 , 2 ], [0 , 2 , 3 ]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas),compras )

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] == max(preco):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-18 21:47:57) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12 ,1 ], [12 , 0 , 2 ], [0 , 2 , 3 ]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas),compras )

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] == max(preco):
    print("banana")
else:
    print("caqui")

-- EXECUTION TIME:
1.09899
-- TEST CASE 1:
---- input:
nada
---- correct output:
abacate:  2.9
banana:  0.5
caqui:  8.9
caqui

---- user output:
abacate:  2.9
banana:  0.5
caqui:  8.9
caqui
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 08:18:20) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import*
from numpy.linalg import*

# Alice : 2A + 12B + 1C = 23.60
# Beto: 12A + 2C = 52.60
# Carol: 2B + 3C = 27.70
frutas = array([2 , 12 , 1],
					[12, 0, 2],
					[0, 2, 3])
print(frutas)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 08:18:42) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import*
from numpy.linalg import*

# Alice : 2A + 12B + 1C = 23.60
# Beto: 12A + 2C = 52.60
# Carol: 2B + 3C = 27.70
frutas = array([[2 , 12 , 1],
					[12, 0, 2],
					[0, 2, 3]])
print(frutas)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 08:19:18) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import*
from numpy.linalg import*

# Alice : 2A + 12B + 1C = 23.60
# Beto: 12A + 2C = 52.60
# Carol: 2B + 3C = 27.70
frutas = array([[2 , 12 , 1],
					[12, 0, 2],
					[0, 2, 3]])
frutas = frutas.T


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 08:19:27) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import*
from numpy.linalg import*

# Alice : 2A + 12B + 1C = 23.60
# Beto: 12A + 2C = 52.60
# Carol: 2B + 3C = 27.70
frutas = array([[2 , 12 , 1],
					[12, 0, 2],
					[0, 2, 3]])
frutas = frutas.T
print(frutas)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 08:21:56) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import*
from numpy.linalg import*

# Alice : 2A + 12B + 1C = 23.60
# Beto: 12A + 2C = 52.60
# Carol: 2B + 3C = 27.70
frutas = array([[2 , 12 , 1],
					[12, 0, 2],
					[0, 2, 3]])
compras = array([[23.6, 52.6, 27.7]])
compras = compras.T
preco = dot(inv(frutas),compras)
print(preco)


frutas = frutas.T
print(frutas)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 08:22:25) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import*
from numpy.linalg import*

# Alice : 2A + 12B + 1C = 23.60
# Beto: 12A + 2C = 52.60
# Carol: 2B + 3C = 27.70
frutas = array([[2 , 12 , 1],
					[12, 0, 2],
					[0, 2, 3]])
compras = array([[23.6, 52.6, 27.7]])
compras = compras.T
preco = dot(inv(frutas),compras)
print(round(preco,1))


frutas = frutas.T
print(frutas)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 08:24:17) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import*
from numpy.linalg import*

# Alice : 2A + 12B + 1C = 23.60
# Beto: 12A + 2C = 52.60
# Carol: 2B + 3C = 27.70
frutas = array([[2 , 12 , 1],
					[12, 0, 2],
					[0, 2, 3]])
compras = array([[23.6, 52.6, 27.7]])
compras = compras.T
preco = dot(inv(frutas),compras)

# Preco de cada fruta
print("abacate:",round(preco[0],1))



frutas = frutas.T
print(frutas)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 08:25:14) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import*
from numpy.linalg import*

# Alice : 2A + 12B + 1C = 23.60
# Beto: 12A + 2C = 52.60
# Carol: 2B + 3C = 27.70
frutas = array([[2 , 12 , 1],
					[12, 0, 2],
					[0, 2, 3]])
compras = array([[23.6, 52.6, 27.7]])
compras = compras.T
preco = dot(inv(frutas),compras)

# Preco de cada fruta
print("abacate:",round(preco[0],1))
print("banana:",round(preco[1],1))
print("caqui:",round(preco[2],1))




frutas = frutas.T
print(frutas)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 08:26:19) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import*
from numpy.linalg import*

# Alice : 2A + 12B + 1C = 23.60
# Beto: 12A + 2C = 52.60
# Carol: 2B + 3C = 27.70
frutas = array([[2 , 12 , 1],
					[12, 0, 2],
					[0, 2, 3]])
compras = array([[23.6, 52.6, 27.7]])
compras = compras.T
preco = dot(inv(frutas),compras)


print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] == max(preco):
    print("banana")
else:
    print("caqui")




frutas = frutas.T
print(frutas)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 08:26:33) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import*
from numpy.linalg import*

# Alice : 2A + 12B + 1C = 23.60
# Beto: 12A + 2C = 52.60
# Carol: 2B + 3C = 27.70
frutas = array([[2 , 12 , 1],
					[12, 0, 2],
					[0, 2, 3]])
compras = array([[23.6, 52.6, 27.7]])
compras = compras.T
preco = dot(inv(frutas),compras)


print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] == max(preco):
    print("banana")
else:
    print("caqui")





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 08:26:40) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import*
from numpy.linalg import*

# Alice : 2A + 12B + 1C = 23.60
# Beto: 12A + 2C = 52.60
# Carol: 2B + 3C = 27.70
frutas = array([[2 , 12 , 1],
					[12, 0, 2],
					[0, 2, 3]])
compras = array([[23.6, 52.6, 27.7]])
compras = compras.T
preco = dot(inv(frutas),compras)

print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] == max(preco):
    print("banana")
else:
    print("caqui")





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 08:27:09) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import*
from numpy.linalg import*

# Alice : 2A + 12B + 1C = 23.60
# Beto: 12A + 2C = 52.60
# Carol: 2B + 3C = 27.70
frutas = array([[2 , 12 , 1],
					[12, 0, 2],
					[0, 2, 3]])
compras = array([[23.6, 52.6, 27.7]])
compras = compras.T
preco = dot(inv(frutas),compras)

print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] == max(preco):
    print("banana")
else:
    print("caqui")





-- EXECUTION TIME:
1.07234
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1836/2601/main.py", line 20, in <module>
    print("abacate: ", round(preco[0], 1))
TypeError: type numpy.ndarray doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 08:27:27) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import*
from numpy.linalg import*

# Alice : 2A + 12B + 1C = 23.60
# Beto: 12A + 2C = 52.60
# Carol: 2B + 3C = 27.70
frutas = array([[2 , 12 , 1],[12, 0, 2],[0, 2, 3]])
compras = array([[23.6, 52.6, 27.7]])
compras = compras.T
preco = dot(inv(frutas),compras)

print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] == max(preco):
    print("banana")
else:
    print("caqui")





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 08:28:21) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import*
from numpy.linalg import*

# Alice : 2A + 12B + 1C = 23.60
# Beto: 12A + 2C = 52.60
# Carol: 2B + 3C = 27.70
frutas = array([[2 , 12 , 1],[12, 0, 2],[0, 2, 3]])
compras = array([[23.6, 52.6, 27.7]])
compras = compras.T
preco = dot(inv(frutas),compras)

print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] == max(preco):
    print("banana")
else:
    print("caqui")





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 08:28:58) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import*
from numpy.linalg import*

# Alice : 2A + 12B + 1C = 23.60
# Beto: 12A + 2C = 52.60
# Carol: 2B + 3C = 27.70
frutas = array([[2 , 12 , 1],[12, 0, 2],[0, 2, 3]])
compras = array([[23.6, 52.6, 27.7]])
compras = compras.T
preco = dot(inv(frutas),compras)
print(preco)
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] == max(preco):
    print("banana")
else:
    print("caqui")





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 08:29:46) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import*
from numpy.linalg import*

# Alice : 2A + 12B + 1C = 23.60
# Beto: 12A + 2C = 52.60
# Carol: 2B + 3C = 27.70
frutas = array([[2 , 12 , 1],[12, 0, 2],[0, 2, 3]])
compras = array([23.6, 52.6, 27.7])
compras = compras.T
preco = dot(inv(frutas),compras)
print(preco)
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] == max(preco):
    print("banana")
else:
    print("caqui")





-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 08:29:59) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import*
from numpy.linalg import*

# Alice : 2A + 12B + 1C = 23.60
# Beto: 12A + 2C = 52.60
# Carol: 2B + 3C = 27.70
frutas = array([[2 , 12 , 1],[12, 0, 2],[0, 2, 3]])
compras = array([23.6, 52.6, 27.7])
compras = compras.T
preco = dot(inv(frutas),compras)
print(preco)
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] == max(preco):
    print("banana")
else:
    print("caqui")





-- EXECUTION TIME:
1.14003
-- TEST CASE 1:
---- input:
nada
---- correct output:
abacate:  2.9
banana:  0.5
caqui:  8.9
caqui

---- user output:
[2.92788462 0.75096154 8.73269231]
abacate:  2.9
banana:  0.8
caqui:  8.7
caqui
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 08:30:30) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import*
from numpy.linalg import*


# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12 ,1 ], [12 , 0 , 2 ], [0 , 2 , 3 ]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas),compras )

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] == max(preco):
    print("banana")
else:
    print("caqui")

-- EXECUTION TIME:
1.19383
-- TEST CASE 1:
---- input:
nada
---- correct output:
abacate:  2.9
banana:  0.5
caqui:  8.9
caqui

---- user output:
abacate:  2.9
banana:  0.5
caqui:  8.9
caqui
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 08:30:38) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import*
from numpy.linalg import*


# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12 ,1 ], [12 , 0 , 2 ], [0 , 2 , 3 ]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas),compras )

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[1] == max(preco):
    print("banana")
else:
    print("caqui")

-- EXECUTION TIME:
0.982839
-- TEST CASE 1:
---- input:
nada
---- correct output:
abacate:  2.9
banana:  0.5
caqui:  8.9
caqui

---- user output:
abacate:  2.9
banana:  0.5
caqui:  8.9
caqui
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
