== TEST (2019-06-25 11:12:41) 
-- CODE:
from numpy import*
from numpy.linalg import*

n = int(input("numero da matriz: "))

mat = zeros((n,n))
print(mat)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 20:19:26) 
-- CODE:
from numpy import*
from numpy.linalg import*

n = int(input("numero da matriz: "))
mat = ones((n,n))

for i in range(mat):
	for j in range(mat):
		mat[i,j] = 1
print(mat)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 20:20:12) 
-- CODE:
from numpy import*
from numpy.linalg import*

n = int(input("numero da matriz: "))
mat = ones((n,n))

for i in range(n):
	for j in range(n):
		mat[i,j] = 1
print(mat)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 20:46:33) 
-- CODE:
from numpy import*
from numpy.linalg import*

n = int(input("numero da matriz: "))
mat = ones((n,n))

for i in range(n):
	for j in range(n):
		mat[i,j] = 1
		if i == j
		mat[i,j] = mat[i,j] + 1

		print(mat)
-- ERROR:
File "XXXX", line 10
    if i == j
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 20:47:03) 
-- CODE:
from numpy import*
from numpy.linalg import*

n = int(input("numero da matriz: "))
mat = ones((n,n))

for i in range(n):
	for j in range(n):
		mat[i,j] = 1
		if i == j:
			mat[i,j] = mat[i,j] + 1

		print(mat)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 20:47:56) 
-- CODE:
from numpy import*
from numpy.linalg import*

n = int(input("numero da matriz: "))
mat = ones((n,n))

for i in range(n):
	for j in range(n):
		mat[i,j] = 1
		if i == j:
			mat[i,j] = mat[i,j] + 1

		print(mat)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 20:48:09) 
-- CODE:
from numpy import*
from numpy.linalg import*

n = int(input("numero da matriz: "))
mat = ones((n,n))

for i in range(n):
	for j in range(n):
		mat[i,j] = 1
		if i == j:
			mat[i,j] = mat[i,j] + 1

		print(mat)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 20:51:51) 
-- CODE:
from numpy import*
from numpy.linalg import*

n = int(input("numero da matriz: "))
mat = ones((n,n))

for i in range(n):
	for j in range(n):
		mat[i,j] += 1
			

		print(mat)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 20:52:16) 
-- CODE:
from numpy import*
from numpy.linalg import*

n = int(input("numero da matriz: "))
mat = ones((n,n))

for i in range(n):
	for j in range(n):
		mat[i,j] += 1
			

		print(mat)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 20:53:34) 
-- CODE:
from numpy import*
from numpy.linalg import*

n = int(input("numero da matriz: "))
mat = ones((n,n))

for i in range(n):
	for j in range(n):
		mat[i,j] += 1


print(mat)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 20:54:42) 
-- CODE:
from numpy import*
from numpy.linalg import*

n = int(input("numero da matriz: "))
mat = ones((n,n))

for i in range(n):
	for j in range(n):
		if i == j:
			mat[i,j] += 1


print(mat)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 20:56:10) 
-- CODE:
from numpy import*
from numpy.linalg import*

n = int(input("numero da matriz: "))
mat = ones((n,n))

for i in range(n):
	for j in range(n):
		if i == j and i + j > 0:
			mat[i,j] += 1


print(mat)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 21:04:42) 
-- CODE:
from numpy import*
from numpy.linalg import*

n = int(input("numero da matriz: "))
mat = ones((n,n))

for i in range(n):
	if i 
	for j in range(n):
		if i == j and i + j > 0:
			mat[i,j] += 1
		if i > j:
			mat[i,j] = 1
		if j > i:
			mat[i,j] = i*j


print(mat)
-- ERROR:
File "XXXX", line 8
    if i 
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 21:04:51) 
-- CODE:
from numpy import*
from numpy.linalg import*

n = int(input("numero da matriz: "))
mat = ones((n,n))

for i in range(n):
	for j in range(n):
		if i == j and i + j > 0:
			mat[i,j] += 1
		if i > j:
			mat[i,j] = 1
		if j > i:
			mat[i,j] = i*j


print(mat)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 21:05:27) 
-- CODE:
from numpy import*
from numpy.linalg import*

n = int(input("numero da matriz: "))
mat = ones((n,n)dtype=int)

for i in range(n):
	for j in range(n):
		if i == j and i + j > 0:
			mat[i,j] += 1
		if i > j:
			mat[i,j] = 1
		if j > i:
			mat[i,j] = i*j


print(mat)
-- ERROR:
File "XXXX", line 5
    mat = ones((n,n)dtype=int)
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 21:34:14) 
-- CODE:
from numpy import*
from numpy.linalg import*

n = int(input("numero da matriz: "))
mat = zeros((n,n),dtype=int)

mat = ones((n,n),dtype=int)
nov = zeros((n,n),dtype=int)

for i in range(n):
	for j in range(n):
		nov[i,j] = min(i,j) + 1

print(mat)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 21:37:39) 
-- CODE:
from numpy import*
from numpy.linalg import*

n = int(input("numero da matriz: "))
mat = ones((n,n),dtype=int)

nov = zeros((n,n),dtype=int)

for i in range(n):
	for j in range(n):
		nov[i,j] = min(i,j) + 1

print(new)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 21:37:49) 
-- CODE:
from numpy import*
from numpy.linalg import*

n = int(input("numero da matriz: "))
mat = ones((n,n),dtype=int)

nov = zeros((n,n),dtype=int)

for i in range(n):
	for j in range(n):
		nov[i,j] = min(i,j) + 1

print(nov)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-01 21:38:03) 
-- CODE:
from numpy import*
from numpy.linalg import*

n = int(input("numero da matriz: "))
mat = ones((n,n),dtype=int)

nov = zeros((n,n),dtype=int)

for i in range(n):
	for j in range(n):
		nov[i,j] = min(i,j) + 1

print(nov)
-- EXECUTION TIME:
0.872717
-- TEST CASE 1:
---- input:
3
---- correct output:
[[1 1 1]
 [1 2 2]
 [1 2 3]]
---- user output:
[[1 1 1]
 [1 2 2]
 [1 2 3]]
-- TEST CASE 2:
---- input:
8
---- correct output:
[[1 1 1 1 1 1 1 1]
 [1 2 2 2 2 2 2 2]
 [1 2 3 3 3 3 3 3]
 [1 2 3 4 4 4 4 4]
 [1 2 3 4 5 5 5 5]
 [1 2 3 4 5 6 6 6]
 [1 2 3 4 5 6 7 7]
 [1 2 3 4 5 6 7 8]]
---- user output:
[[1 1 1 1 1 1 1 1]
 [1 2 2 2 2 2 2 2]
 [1 2 3 3 3 3 3 3]
 [1 2 3 4 4 4 4 4]
 [1 2 3 4 5 5 5 5]
 [1 2 3 4 5 6 6 6]
 [1 2 3 4 5 6 7 7]
 [1 2 3 4 5 6 7 8]]
-- TEST CASE 3:
---- input:
1
---- correct output:
[[1]]
---- user output:
[[1]]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-01 21:38:17) 
-- CODE:
from numpy import*
from numpy.linalg import*

n = int(input("numero da matriz: "))
mat = ones((n,n),dtype=int)

nov = zeros((n,n),dtype=int)

for i in range(n):
	for j in range(n):
		nov[i,j] = min(i,j) + 1

print(nov)
-- EXECUTION TIME:
0.986125
-- TEST CASE 1:
---- input:
3
---- correct output:
[[1 1 1]
 [1 2 2]
 [1 2 3]]
---- user output:
[[1 1 1]
 [1 2 2]
 [1 2 3]]
-- TEST CASE 2:
---- input:
8
---- correct output:
[[1 1 1 1 1 1 1 1]
 [1 2 2 2 2 2 2 2]
 [1 2 3 3 3 3 3 3]
 [1 2 3 4 4 4 4 4]
 [1 2 3 4 5 5 5 5]
 [1 2 3 4 5 6 6 6]
 [1 2 3 4 5 6 7 7]
 [1 2 3 4 5 6 7 8]]
---- user output:
[[1 1 1 1 1 1 1 1]
 [1 2 2 2 2 2 2 2]
 [1 2 3 3 3 3 3 3]
 [1 2 3 4 4 4 4 4]
 [1 2 3 4 5 5 5 5]
 [1 2 3 4 5 6 6 6]
 [1 2 3 4 5 6 7 7]
 [1 2 3 4 5 6 7 8]]
-- TEST CASE 3:
---- input:
1
---- correct output:
[[1]]
---- user output:
[[1]]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
