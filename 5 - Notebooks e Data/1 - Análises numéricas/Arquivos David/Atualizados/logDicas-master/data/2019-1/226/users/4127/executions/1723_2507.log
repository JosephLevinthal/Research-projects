== TEST (2019-05-15 08:26:48) 
-- CODE:
qp= int(input("qual a quantidade inicial de pirarucus?"))
cp= int(input("qual o percentual de crescimento?"))
pt=0
m=0
while (qp>0) and (qp<8000):
	qp=qp+(cp/100)*qp
	pt=int(input("qual a quantidade de pirarucus retirados?"))
	m=m+1
	if (qp-pt<=0):
		print("ZERO")
	elif (qp-pt>8000):
		print("MAXIMO")
-- OUTPUT:
MAXIMO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 08:28:27) 
-- CODE:
qp= int(input("qual a quantidade inicial de pirarucus?"))
cp= int(input("qual o percentual de crescimento?"))
pt=0
m=0
while (qp>0) and (qp<8000):
	qp=qp+(cp/100)*qp
	pt=int(input("qual a quantidade de pirarucus retirados?"))
	m=m+1
	if (qp-pt<=0):
		print("ZERO")
	elif (qp-pt>8000):
		print("MAXIMO")
print(m)
-- OUTPUT:
MAXIMO
5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 08:28:49) 
-- CODE:
qp= int(input("qual a quantidade inicial de pirarucus?"))
cp= int(input("qual o percentual de crescimento?"))
pt=0
m=0
while (qp>0) and (qp<8000):
	qp=qp+(cp/100)*qp
	pt=int(input("qual a quantidade de pirarucus retirados?"))
	m=m+1
	if (qp-pt<=0):
		print("ZERO")
	elif (qp-pt>8000):
		print("MAXIMO")
print(m)
-- OUTPUT:
MAXIMO
5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 08:29:51) 
-- CODE:
qp= int(input("qual a quantidade inicial de pirarucus?"))
cp= int(input("qual o percentual de crescimento?"))
pt=0
m=0
while (qp>0) and (qp<8000):
	qp=qp+(cp/100)*qp
	pt=int(input("qual a quantidade de pirarucus retirados?"))
	m=m+1
if (qp-pt<=0):
	print("ZERO")
elif (qp-pt>8000):
	print("MAXIMO")
print(m)
-- OUTPUT:
MAXIMO
5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 08:30:09) 
-- CODE:
qp= int(input("qual a quantidade inicial de pirarucus?"))
cp= int(input("qual o percentual de crescimento?"))
pt=0
m=0
while (qp>0) and (qp<8000):
	qp=qp+(cp/100)*qp
	pt=int(input("qual a quantidade de pirarucus retirados?"))
	m=m+1
if (qp-pt<=0):
	print("ZERO")
elif (qp-pt>8000):
	print("MAXIMO")
print(m)
-- EXECUTION TIME:
0.202292
-- TEST CASE 1:
---- input:
1234
56
7
8
9
10
11
---- correct output:
MAXIMO
5
---- user output:
MAXIMO
5
-- TEST CASE 2:
---- input:
5432
1
987
654
4321
---- correct output:
ZERO
3
---- user output:

-- TEST CASE 3:
---- input:
2468
35
1234
900
1
2
3
4
5
---- correct output:
MAXIMO
7
---- user output:
MAXIMO
4
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 08:30:18) 
-- CODE:
qp= int(input("qual a quantidade inicial de pirarucus?"))
cp= int(input("qual o percentual de crescimento?"))
pt=0
m=0
while (qp>0) and (qp<8000):
	qp=qp+(cp/100)*qp
	pt=int(input("qual a quantidade de pirarucus retirados?"))
	m=m+1
if (qp-pt<=0):
	print("ZERO")
elif (qp-pt>8000):
	print("MAXIMO")
print(m)
-- OUTPUT:
MAXIMO
5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 08:31:12) 
-- CODE:
qp= int(input("qual a quantidade inicial de pirarucus?"))
cp= int(input("qual o percentual de crescimento?"))
pt=0
m=0
while (qp>0) and (qp<8000):
	qp=qp+(cp/100)*qp
	pt=int(input("qual a quantidade de pirarucus retirados?"))
	m=m+1
if (qp<=0):
	print("ZERO")
elif (qp>8000):
	print("MAXIMO")
print(m)
-- OUTPUT:
MAXIMO
5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 08:32:01) 
-- CODE:
qp= int(input("qual a quantidade inicial de pirarucus?"))
cp= int(input("qual o percentual de crescimento?"))
pt=0
m=0
while (qp>0) and (qp<8000):
	qp=qp+(cp/100)*qp
	pt=int(input("qual a quantidade de pirarucus retirados?"))
	qp=qp-pt
	m=m+1
if (qp<=0):
	print("ZERO")
elif (qp>8000):
	print("MAXIMO")
print(m)
-- OUTPUT:
MAXIMO
5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 08:32:29) 
-- CODE:
qp= int(input("qual a quantidade inicial de pirarucus?"))
cp= int(input("qual o percentual de crescimento?"))
pt=0
m=0
while (qp>0) and (qp<8000):
	qp=qp+(cp/100)*qp
	pt=int(input("qual a quantidade de pirarucus retirados?"))
	qp=qp-pt
	m=m+1
if (qp<=0):
	print("ZERO")
elif (qp>8000):
	print("MAXIMO")
print(m)
-- EXECUTION TIME:
0.137984
-- TEST CASE 1:
---- input:
1234
56
7
8
9
10
11
---- correct output:
MAXIMO
5
---- user output:
MAXIMO
5
-- TEST CASE 2:
---- input:
5432
1
987
654
4321
---- correct output:
ZERO
3
---- user output:
ZERO
3
-- TEST CASE 3:
---- input:
2468
35
1234
900
1
2
3
4
5
---- correct output:
MAXIMO
7
---- user output:
MAXIMO
7
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
