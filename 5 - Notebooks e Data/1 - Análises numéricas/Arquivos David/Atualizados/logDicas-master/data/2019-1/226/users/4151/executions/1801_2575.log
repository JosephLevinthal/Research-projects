== TEST (2019-06-12 19:34:04) 
-- CODE:
from numpy import*
v=array(eval(input("digite "))).upper()
x=zeros(3, dtype=int)
for i in range(size(v)):
	if(v[i]=="TV"):
	x[0]=x[0]+1
	elif(v[i]=="NETFLIX"):
	x[1]=x[1]+1
	elif(v[i]=="YOUTUBE"):
	x[2]=x[2]+1
print(x)
-- ERROR:
File "XXXX", line 6
    x[0]=x[0]+1
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 19:34:17) 
-- CODE:
from numpy import*
v=array(eval(input("digite "))).upper()
x=zeros(3, dtype=int)
for i in range(size(v)):
	if(v[i]=="TV"):
		x[0]=x[0]+1
	elif(v[i]=="NETFLIX"):
		x[1]=x[1]+1
	elif(v[i]=="YOUTUBE"):
		x[2]=x[2]+1
print(x)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 19:36:22) 
-- CODE:
from numpy import*
v=array(eval(input("digite ")))
x=zeros(3, dtype=int)
for i in range(size(v)):
	if(.upper(v[i])=="TV"):
		x[0]=x[0]+1
	elif(.upper(v[i])=="NETFLIX"):
		x[1]=x[1]+1
	elif(.upper(v[i])=="YOUTUBE"):
		x[2]=x[2]+1
print(x)
-- ERROR:
File "XXXX", line 5
    if(.upper(v[i])=="TV"):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 19:36:43) 
-- CODE:
from numpy import*
v=array(eval(input("digite ")))
x=zeros(3, dtype=int)
for i in range(size(v)):
	if(.upper()(v[i])=="TV"):
		x[0]=x[0]+1
	elif(.upper()(v[i])=="NETFLIX"):
		x[1]=x[1]+1
	elif(.upper()(v[i])=="YOUTUBE"):
		x[2]=x[2]+1
print(x)
-- ERROR:
File "XXXX", line 5
    if(.upper()(v[i])=="TV"):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 19:37:48) 
-- CODE:
from numpy import*
v=array(input("digite ")).upper()
x=zeros(3, dtype=int)
for i in range(size(v)):
	if(v[i]=="TV"):
		x[0]=x[0]+1
	elif(v[i])=="NETFLIX"):
		x[1]=x[1]+1
	elif(v[i]=="YOUTUBE"):
		x[2]=x[2]+1
print(x)
-- ERROR:
File "XXXX", line 7
    elif(v[i])=="NETFLIX"):
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 19:38:08) 
-- CODE:
from numpy import*
v=array(input("digite ")).upper()
x=zeros(3, dtype=int)
for i in range(size(v)):
	if(v[i]=="TV"):
		x[0]=x[0]+1
	elif(v[i]=="NETFLIX"):
		x[1]=x[1]+1
	elif(v[i]=="YOUTUBE"):
		x[2]=x[2]+1
print(x)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 19:42:55) 
-- CODE:
from numpy import*
v=input("digite ").upper().split(",")
x=zeros(3, dtype=int)
for i in range(size(v)):
	if(v[i]=="TV"):
		x[0]=x[0]+1
	elif(v[i]=="NETFLIX"):
		x[1]=x[1]+1
	elif(v[i]=="YOUTUBE"):
		x[2]=x[2]+1
print(x)
-- EXECUTION TIME:
1.20835
-- TEST CASE 1:
---- input:
['NETFLIX','TV','NETFLIX','NETFLIX']
---- correct output:
[1 3 0]
---- user output:
[0 0 0]
-- TEST CASE 2:
---- input:
['NETFLIX','TV','YOUTUBE']
---- correct output:
[1 1 1]
---- user output:
[0 0 0]
-- TEST CASE 3:
---- input:
['NETFLIX','TV','YOUTUBE','NETFLIX','TV','YOUTUBE']
---- correct output:
[2 2 2]
---- user output:
[0 0 0]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 19:44:36) 
-- CODE:
from numpy import*
v=input("digite ").upper().split(",")
x=zeros(4, dtype=int)
for i in range(size(v)):
	if(v[i]=="TV"):
		x[0]=x[0]+1
	elif(v[i]=="NETFLIX"):
		x[1]=x[1]+1
	elif(v[i]=="YOUTUBE"):
		x[2]=x[2]+1
print(x)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 19:46:53) 
-- CODE:
from numpy import*
v=input("digite ").upper().split(",")
x=zeros(3, dtype=int)
for i in range(size(v)):
	if(v[i]=="TV"):
		x[0]=x[0]+1
	elif(v[i]=="NETFLIX"):
		x[1]=x[1]+1
	elif(v[i]=="YOUTUBE"):
		x[2]=x[2]+1
print(x)
-- EXECUTION TIME:
1.18607
-- TEST CASE 1:
---- input:
['NETFLIX','TV','NETFLIX','NETFLIX']
---- correct output:
[1 3 0]
---- user output:
[0 0 0]
-- TEST CASE 2:
---- input:
['NETFLIX','TV','YOUTUBE']
---- correct output:
[1 1 1]
---- user output:
[0 0 0]
-- TEST CASE 3:
---- input:
['NETFLIX','TV','YOUTUBE','NETFLIX','TV','YOUTUBE']
---- correct output:
[2 2 2]
---- user output:
[0 0 0]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
