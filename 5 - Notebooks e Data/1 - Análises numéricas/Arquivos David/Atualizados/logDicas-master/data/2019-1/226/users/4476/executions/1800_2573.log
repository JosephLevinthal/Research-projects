== TEST (2019-06-11 00:23:48) 
-- CODE:
from numpy import *
p = array(eval(input("digite: ")))
a = array(eval(input("digite: ")))

v = zeros(size(p), dtype=float)

for i in range(size(p)) and range(size(a)):
	imc = p[i]/(a[i]*a[i])
	v[i] = v[i] + 1
print(v)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 00:25:35) 
-- CODE:
from numpy import *
p = array(eval(input("digite: ")))
a = array(eval(input("digite: ")))

v = zeros(size(p), dtype=float)

for i in range(size(p)) and range(size(a)):
	imc = p[i]/(a[i]*a[i])
	v[1] = v[1] + 1
print(v)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 00:28:04) 
-- CODE:
from numpy import *
p = array(eval(input("digite: ")))
a = array(eval(input("digite: ")))

v = zeros(3, dtype=float)

for i in range(size(p)) and range(size(a)):
	imc = p[i]/(a[i]*a[i])
	v[0] = v[0] + 1
	v[2] = v[2] + 1
print(v)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 00:29:12) 
-- CODE:
from numpy import *
p = array(eval(input("digite: ")))
a = array(eval(input("digite: ")))

v = zeros(3, dtype=float)

for i in range(size(p)) and range(size(a)):
	imc = p[i] / a[i]**2
	v[0] = v[0] + 1
	v[2] = v[2] + 1
print(v)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 10:31:05) 
-- CODE:
from numpy import *
p = array(eval(input("digite: ")))
a = array(eval(input("digite: ")))

v = zeros(3, dtype=float)

for i in range(size(p)) and range(size(a)):
	imc = p[i] / a[i]**2
	v[0] = v[0] + 1
	v[2] = v[2] + 1
	v[3] = v[3] + 1
print(v)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 10:31:57) 
-- CODE:
from numpy import *
p = array(eval(input("digite: ")))
a = array(eval(input("digite: ")))

v = zeros(3, dtype=float)

for i in range(size(p)) and range(size(a)):
	imc = p[i] / a[i]**2
	v[0] = v[0] + 1
	v[1] = v[1] + 1
	v[2] = v[2] + 1
print(v)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 10:35:04) 
-- CODE:
from numpy import *
p = array(eval(input("digite: ")))
a = array(eval(input("digite: ")))

v = zeros(size(p), dtype=float)

for i in range(size(p)) and range(size(a)):
	imc = p[i] / a[i]**2
	v[i] = v[i] + 1
	imc = 0
print(v)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 10:40:22) 
-- CODE:
from numpy import *
p = array(eval(input("digite: ")))
a = array(eval(input("digite: ")))

v = zeros(size(p), dtype=float)

for i in range(size(p)) and range(size(a)):
	imc = p[i] / a[i]**2
	v[i] = imc
	imc = 0
print(v)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 10:41:25) 
-- CODE:
from numpy import *
p = array(eval(input("digite: ")))
a = array(eval(input("digite: ")))

v = zeros(size(p), dtype=float)

for i in range(size(p)) and range(size(a)):
	imc = p[i] / a[i]**2
	v[i] = imc
	imc = 0
print(round(v, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 10:43:59) 
-- CODE:
from numpy import *
p = array(eval(input("digite: ")))
a = array(eval(input("digite: ")))

v = zeros(size(p), dtype=float)

for i in range(size(p)) and range(size(a)):
	imc = p[i] / a[i]**2
	v[i] = round(imc, 2)
	imc = 0
print(v)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 11:15:16) 
-- CODE:
from numpy import *
p = array(eval(input("digite: ")))
a = array(eval(input("digite: ")))

v = zeros(size(p), dtype=float)

for i in range(size(p)) and range(size(a)):
	imc = p[i] / a[i]**2
	v[i] = round(imc, 2)
	imc = 0

print(v)
print("O MAIOR IMC DA TURMA EH:", max(v))

for i in v:
	if v[i] < 17:
		print("MUITO ABAIXO DO PESO")
	elif v[i] >= 17 and <= 18,49:
		print("ABAIXO DO PESO")
	elif v[i] >= 18,5 <= 24.99:
		print("PESO NORMAL")
	elif v[i] >= 25 <= 29,99:
		print("ACIMA DO PESO")
	elif v[i] >= 30 <= 34,99:
		print("OBESIDADE")
	elif v[i] >= 35 <= 39,99:
		print("OBESIDADE SEVERA")
	elif v[i] >= 40:
		print("OBESIDADE MORBIDA")

-- ERROR:
File "XXXX", line 18
    elif v[i] >= 17 and <= 18,49:
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 11:16:17) 
-- CODE:
from numpy import *
p = array(eval(input("digite: ")))
a = array(eval(input("digite: ")))

v = zeros(size(p), dtype=float)

for i in range(size(p)) and range(size(a)):
	imc = p[i] / a[i]**2
	v[i] = round(imc, 2)
	imc = 0

print(v)
print("O MAIOR IMC DA TURMA EH:", max(v))

for i in v:
	if v[i] < 17:
		print("MUITO ABAIXO DO PESO")
	elif (v[i] >= 17) and v[i] <= 18,49:
		print("ABAIXO DO PESO")
	elif (v[i] >= 18,5) v[i] <= 24.99:
		print("PESO NORMAL")
	elif (v[i] >= 25) v[i] <= 29,99:
		print("ACIMA DO PESO")
	elif (v[i] >= 30) v[i] <= 34,99:
		print("OBESIDADE")
	elif (v[i] >= 35) v[i] <= 39,99:
		print("OBESIDADE SEVERA")
	elif v[i] >= 40:
		print("OBESIDADE MORBIDA")

-- ERROR:
File "XXXX", line 18
    elif (v[i] >= 17) and v[i] <= 18,49:
                                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 11:16:26) 
-- CODE:
from numpy import *
p = array(eval(input("digite: ")))
a = array(eval(input("digite: ")))

v = zeros(size(p), dtype=float)

for i in range(size(p)) and range(size(a)):
	imc = p[i] / a[i]**2
	v[i] = round(imc, 2)
	imc = 0

print(v)
print("O MAIOR IMC DA TURMA EH:", max(v))

for i in v:
	if v[i] < 17:
		print("MUITO ABAIXO DO PESO")
	elif (v[i] >= 17) and (v[i] <= 18,49):
		print("ABAIXO DO PESO")
	elif (v[i] >= 18,5) v[i] <= 24.99:
		print("PESO NORMAL")
	elif (v[i] >= 25) v[i] <= 29,99:
		print("ACIMA DO PESO")
	elif (v[i] >= 30) v[i] <= 34,99:
		print("OBESIDADE")
	elif (v[i] >= 35) v[i] <= 39,99:
		print("OBESIDADE SEVERA")
	elif v[i] >= 40:
		print("OBESIDADE MORBIDA")

-- ERROR:
File "XXXX", line 20
    elif (v[i] >= 18,5) v[i] <= 24.99:
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 11:16:52) 
-- CODE:
from numpy import *
p = array(eval(input("digite: ")))
a = array(eval(input("digite: ")))

v = zeros(size(p), dtype=float)

for i in range(size(p)) and range(size(a)):
	imc = p[i] / a[i]**2
	v[i] = round(imc, 2)
	imc = 0

print(v)
print("O MAIOR IMC DA TURMA EH:", max(v))

for i in v:
	if v[i] < 17:
		print("MUITO ABAIXO DO PESO")
	elif (v[i] >= 17) and (v[i] <= 18,49):
		print("ABAIXO DO PESO")
	elif (v[i] >= 18,5) and (v[i] <= 24.99):
		print("PESO NORMAL")
	elif (v[i] >= 25) and (v[i] <= 29,99):
		print("ACIMA DO PESO")
	elif (v[i] >= 30) v[i] <= 34,99:
		print("OBESIDADE")
	elif (v[i] >= 35) v[i] <= 39,99:
		print("OBESIDADE SEVERA")
	elif v[i] >= 40:
		print("OBESIDADE MORBIDA")

-- ERROR:
File "XXXX", line 24
    elif (v[i] >= 30) v[i] <= 34,99:
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 11:17:10) 
-- CODE:
from numpy import *
p = array(eval(input("digite: ")))
a = array(eval(input("digite: ")))

v = zeros(size(p), dtype=float)

for i in range(size(p)) and range(size(a)):
	imc = p[i] / a[i]**2
	v[i] = round(imc, 2)
	imc = 0

print(v)
print("O MAIOR IMC DA TURMA EH:", max(v))

for i in v:
	if v[i] < 17:
		print("MUITO ABAIXO DO PESO")
	elif (v[i] >= 17) and (v[i] <= 18,49):
		print("ABAIXO DO PESO")
	elif (v[i] >= 18,5) and (v[i] <= 24.99):
		print("PESO NORMAL")
	elif (v[i] >= 25) and (v[i] <= 29,99):
		print("ACIMA DO PESO")
	elif (v[i] >= 30) and (v[i] <= 34,99):
		print("OBESIDADE")
	elif (v[i] >= 35) and (v[i] <= 39,99):
		print("OBESIDADE SEVERA")
	elif v[i] >= 40:
		print("OBESIDADE MORBIDA")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 11:18:20) 
-- CODE:
from numpy import *
p = array(eval(input("digite: ")))
a = array(eval(input("digite: ")))

v = zeros(size(p), dtype=float)

for i in range(size(p)) and range(size(a)):
	imc = p[i] / a[i]**2
	v[i] = round(imc, 2)
	imc = 0

print(v)
print("O MAIOR IMC DA TURMA EH:", max(v))

for i in v:
	if (v[i] < 17):
		print("MUITO ABAIXO DO PESO")
	elif (v[i] >= 17) and (v[i] <= 18,49):
		print("ABAIXO DO PESO")
	elif (v[i] >= 18,5) and (v[i] <= 24.99):
		print("PESO NORMAL")
	elif (v[i] >= 25) and (v[i] <= 29,99):
		print("ACIMA DO PESO")
	elif (v[i] >= 30) and (v[i] <= 34,99):
		print("OBESIDADE")
	elif (v[i] >= 35) and (v[i] <= 39,99):
		print("OBESIDADE SEVERA")
	elif v[i] >= 40:
		print("OBESIDADE MORBIDA")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 11:18:35) 
-- CODE:
from numpy import *
p = array(eval(input("digite: ")))
a = array(eval(input("digite: ")))

v = zeros(size(p), dtype=float)

for i in range(size(p)) and range(size(a)):
	imc = p[i] / a[i]**2
	v[i] = round(imc, 2)
	imc = 0

print(v)
print("O MAIOR IMC DA TURMA EH:", max(v))

for i in v:
	if (v[i] < 17):
		print("MUITO ABAIXO DO PESO")
	elif (v[i] >= 17) and (v[i] <= 18,49):
		print("ABAIXO DO PESO")
	elif (v[i] >= 18,5) and (v[i] <= 24.99):
		print("PESO NORMAL")
	elif (v[i] >= 25) and (v[i] <= 29,99):
		print("ACIMA DO PESO")
	elif (v[i] >= 30) and (v[i] <= 34,99):
		print("OBESIDADE")
	elif (v[i] >= 35) and (v[i] <= 39,99):
		print("OBESIDADE SEVERA")
	elif v[i] >= 40:
		print("OBESIDADE MORBIDA")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 11:19:42) 
-- CODE:
from numpy import *
p = array(eval(input("digite: ")))
a = array(eval(input("digite: ")))

v = zeros(size(p), dtype=float)

for i in range(size(p)) and range(size(a)):
	imc = p[i] / a[i]**2
	v[i] = round(imc, 2)
	imc = 0

print(v)
print("O MAIOR IMC DA TURMA EH:", max(v))

for i in v:
	if (v[i] < 17):
		print("MUITO ABAIXO DO PESO")
	elif (v[i] >= 17) and (v[i] <= 18,49):
		print("ABAIXO DO PESO")
	elif (v[i] >= 18,5) and (v[i] <= 24.99):
		print("PESO NORMAL")
	elif (v[i] >= 25) and (v[i] <= 29,99):
		print("ACIMA DO PESO")
	elif (v[i] >= 30) and (v[i] <= 34,99):
		print("OBESIDADE")
	elif (v[i] >= 35) and (v[i] <= 39,99):
		print("OBESIDADE SEVERA")
	elif (v[i] >= 40):
		print("OBESIDADE MORBIDA")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 11:22:43) 
-- CODE:
from numpy import *
p = array(eval(input("digite: ")))
a = array(eval(input("digite: ")))

v = zeros(size(p), dtype=float)

for i in range(size(p)) and range(size(a)):
	imc = p[i] / a[i]**2
	v[i] = round(imc, 2)
	imc = 0

print(v)
print("O MAIOR IMC DA TURMA EH:", max(v))

if (max(v) < 17):
	print("MUITO ABAIXO DO PESO")
elif (max(v) >= 17) and (v[i] <= 18,49):
	print("ABAIXO DO PESO")
elif (max(v) >= 18,5) and (v[i] <= 24.99):
	print("PESO NORMAL")
elif (max(v) >= 25) and (v[i] <= 29,99):
	print("ACIMA DO PESO")
elif (max(v) >= 30) and (v[i] <= 34,99):
	print("OBESIDADE")
elif (max(v) >= 35) and (v[i] <= 39,99):
	print("OBESIDADE SEVERA")
elif (max(v) >= 40):
	print("OBESIDADE MORBIDA")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 11:33:13) 
-- CODE:
from numpy import *
p = array(eval(input("digite: ")))
a = array(eval(input("digite: ")))

v = zeros(size(p), dtype=float)

for i in range(size(p)) and range(size(a)):
	imc = p[i] / a[i]**2
	v[i] = round(imc, 2)
	imc = 0

print(v)
print("O MAIOR IMC DA TURMA EH:", max(v))

if (max(v) < 17):
	print("MUITO ABAIXO DO PESO")
elif (max(v) >= 17) and (max(v) <= 18,49):
	print("ABAIXO DO PESO")
elif (max(v) >= 18,5) and (max(v) <= 24.99):
	print("PESO NORMAL")
elif (max(v) >= 25) and (max(v) <= 29,99):
	print("ACIMA DO PESO")
elif (max(v) >= 30) and (max(v) <= 34,99):
	print("OBESIDADE")
elif (max(v) >= 35) and (max(v) <= 39,99):
	print("OBESIDADE SEVERA")
elif (max(v) >= 40):
	print("OBESIDADE MORBIDA")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 11:44:04) 
-- CODE:
from numpy import *
p = array(eval(input("digite: ")))
a = array(eval(input("digite: ")))

v = zeros(size(p), dtype=float)

for i in range(size(p)) and range(size(a)):
	imc = p[i] / a[i]**2
	v[i] = round(imc, 2)
	imc = 0

print(v)
print("O MAIOR IMC DA TURMA EH:", max(v))

if (max(v) < 17):
	print("MUITO ABAIXO DO PESO")
elif (max(v) >= 17) and (max(v) <= 18,49):
	print("ABAIXO DO PESO")
elif (max(v) >= 18,5) and (max(v) <= 24.99):
	print("PESO NORMAL")
elif (max(v) >= 25) and (max(v) <= 29,99):
	print("ACIMA DO PESO")
elif (max(v) >= 30) and (max(v) <= 34,99):
	print("OBESIDADE")
elif (max(v) >= 35) and (max(v) <= 39,99):
	print("OBESIDADE SEVERA")
elif (max(v) >= 40):
	print("OBESIDADE MORBIDA")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 11:44:34) 
-- CODE:
from numpy import *
p = array(eval(input("digite: ")))
a = array(eval(input("digite: ")))

v = zeros(size(p), dtype=float)

for i in range(size(p)) and range(size(a)):
	imc = p[i] / a[i]**2
	v[i] = round(imc, 2)
	imc = 0

print(v)
print("O MAIOR IMC DA TURMA EH:", max(v))

if (max(v) < 17):
	print("MUITO ABAIXO DO PESO")
elif (max(v) >= 17) and (max(v) <= 18,49):
	print("ABAIXO DO PESO")
elif (max(v) >= 18,5) and (max(v) <= 24.99):
	print("PESO NORMAL")
elif (max(v) >= 25) and (max(v) <= 29,99):
	print("ACIMA DO PESO")
elif (max(v) >= 30) and (max(v) <= 34,99):
	print("OBESIDADE")
elif (max(v) >= 35) and (max(v) <= 39,99):
	print("OBESIDADE SEVERA")
elif (max(v) >= 40):
	print("OBESIDADE MORBIDA")

-- EXECUTION TIME:
0.955329
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
ABAIXO DO PESO
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
ABAIXO DO PESO
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 11:45:57) 
-- CODE:
from numpy import *
p = array(eval(input("digite: ")))
a = array(eval(input("digite: ")))

v = zeros(size(p), dtype=float)

for i in range(size(p)) and range(size(a)):
	imc = p[i] / a[i]**2
	v[i] = round(imc, 2)
	imc = 0

print(v)
print("O MAIOR IMC DA TURMA EH:", max(v))

if (max(v) < 17):
	print("MUITO ABAIXO DO PESO")
elif (max(v) >= 17) and (max(v) <= 18,49):
	print("ABAIXO DO PESO")
elif (max(v) >= 18,5) and (max(v) <= 24.99):
	print("PESO NORMAL")
elif (max(v) >= 25) and (max(v) <= 29,99):
	print("ACIMA DO PESO")
elif (max(v) >= 30) and (max(v) <= 34,99):
	print("OBESIDADE")
elif (max(v) >= 35) and (max(v) <= 39,99):
	print("OBESIDADE SEVERA")
elif (max(v) >= 40):
	print("OBESIDADE MORBIDA")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 11:46:52) 
-- CODE:
from numpy import *
p = array(eval(input("digite: ")))
a = array(eval(input("digite: ")))

v = zeros(size(p), dtype=float)

for i in range(size(p)) and range(size(a)):
	imc = p[i] / a[i]**2
	v[i] = round(imc, 2)
	imc = 0

print(v)
print("O MAIOR IMC DA TURMA EH:", max(v))

if (max(v) < 17):
	print("MUITO ABAIXO DO PESO")
elif (max(v) >= 17) and (max(v) <= 18,49):
	print("ABAIXO DO PESO")
elif (max(v) >= 18,5) and (max(v) <= 24.99):
	print("PESO NORMAL")
elif (max(v) >= 25) and (max(v) <= 29,99):
	print("ACIMA DO PESO")
elif (max(v) >= 30) and (max(v) <= 34,99):
	print("OBESIDADE")
elif (max(v) >= 35) and (max(v) <= 39,99):
	print("OBESIDADE SEVERA")
elif (max(v) >= 40):
	print("OBESIDADE MORBIDA")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 20:32:01) 
-- CODE:
from numpy import *
p = array(eval(input("digite: ")))
a = array(eval(input("digite: ")))

v = zeros(size(p), dtype=float)

for i in range(size(p)) and range(size(a)):
	imc = p[i] / a[i]**2
	v[i] = round(imc, 2)
	imc = 0

print(v)
print("O MAIOR IMC DA TURMA EH:", max(v))

if (max(v) < 17):
	print("MUITO ABAIXO DO PESO")
elif (17 < max(v) <= 18,49):
	print("ABAIXO DO PESO")
elif (18,5 < max(v) <= 24.99):
	print("PESO NORMAL")
elif (25 < max(v) <= 29,99):
	print("ACIMA DO PESO")
elif (30 < max(v) <= 34,99):
	print("OBESIDADE")
elif (35 < max(v) <= 39,99):
	print("OBESIDADE SEVERA")
elif (max(v) > 40):
	print("OBESIDADE MORBIDA")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 20:36:06) 
-- CODE:
from numpy import *
p = array(eval(input("digite: ")))
a = array(eval(input("digite: ")))

v = zeros(size(p), dtype=float)

for i in range(size(p)) and range(size(a)):
	imc = p[i] / a[i]**2
	v[i] = round(imc, 2)
	imc = 0

print(v)
print("O MAIOR IMC DA TURMA EH:", max(v))

if (max(v) < 17):
	print("MUITO ABAIXO DO PESO")
elif (17 < max(v) <= 18,49):
	print("ABAIXO DO PESO")
elif (18.5 < max(v) <= 24.99):
	print("PESO NORMAL")
elif (25 < max(v) <= 29.99):
	print("ACIMA DO PESO")
elif (30 < max(v) <= 34.99):
	print("OBESIDADE")
elif (35 < max(v) <= 39.99):
	print("OBESIDADE SEVERA")
elif (max(v) > 40):
	print("OBESIDADE MORBIDA")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 20:39:00) 
-- CODE:
from numpy import *
p = array(eval(input("digite: ")))
a = array(eval(input("digite: ")))

v = zeros(size(p), dtype=float)

for i in range(size(p)) and range(size(a)):
	imc = p[i] / a[i]**2
	v[i] = round(imc, 2)
	imc = 0

print(v)
print("O MAIOR IMC DA TURMA EH:", max(v))

if (max(v) < 17):
	print("MUITO ABAIXO DO PESO")
elif (17 <= max(v) <= 18.49):
	print("ABAIXO DO PESO")
elif (18.5 <= max(v) <= 24.99):
	print("PESO NORMAL")
elif (25 <= max(v) <= 29.99):
	print("ACIMA DO PESO")
elif (30 <= max(v) <= 34.99):
	print("OBESIDADE")
elif (35 <= max(v) <= 39.99):
	print("OBESIDADE SEVERA")
elif (max(v) > 40):
	print("OBESIDADE MORBIDA")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 20:39:39) 
-- CODE:
from numpy import *
p = array(eval(input("digite: ")))
a = array(eval(input("digite: ")))

v = zeros(size(p), dtype=float)

for i in range(size(p)) and range(size(a)):
	imc = p[i] / a[i]**2
	v[i] = round(imc, 2)
	imc = 0

print(v)
print("O MAIOR IMC DA TURMA EH:", max(v))

if (max(v) < 17):
	print("MUITO ABAIXO DO PESO")
elif (17 <= max(v) <= 18.49):
	print("ABAIXO DO PESO")
elif (18.5 <= max(v) <= 24.99):
	print("PESO NORMAL")
elif (25 <= max(v) <= 29.99):
	print("ACIMA DO PESO")
elif (30 <= max(v) <= 34.99):
	print("OBESIDADE")
elif (35 <= max(v) <= 39.99):
	print("OBESIDADE SEVERA")
elif (max(v) > 40):
	print("OBESIDADE MORBIDA")

-- EXECUTION TIME:
1.1492
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
