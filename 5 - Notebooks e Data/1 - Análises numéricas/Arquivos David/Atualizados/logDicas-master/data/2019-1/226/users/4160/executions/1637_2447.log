== TEST (2019-04-09 10:53:16) 
-- CODE:
preco = float(input("Digite o preco: "))
pag = float(input("Digite o pagamento: "))
x = pag - preco

if (preco >= pag):
	resp = "Falta " + pag - preco
else: 
	resp = "Troco de y " + pag - preco
	
print(round(resp,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    resp = "Falta " + pag - preco
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:53:50) 
-- CODE:
preco = float(input("Digite o preco: "))
pag = float(input("Digite o pagamento: "))
x = pag - preco

if (preco >= pag):
	resp = "Falta " + pag - preco
else: 
	resp = Troco de y  + pag - preco
	
print(round(resp,2))
-- ERROR:
File "XXXX", line 8
    resp = Troco de y  + pag - preco
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:54:30) 
-- CODE:
preco = float(input("Digite o preco: "))
pag = float(input("Digite o pagamento: "))
x = pag - preco
y = pag - preco

if (preco >= pag):
	resp = "Falta " + pag - preco
else: 
	resp = "Troco " + pag - preco
	
print(round(resp,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    resp = "Falta " + pag - preco
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:55:47) 
-- CODE:
preco = float(input("Digite o preco: "))
pag = float(input("Digite o pagamento: "))
x = pag - preco
y = pag - preco

if (preco >= pag):
	resp = "Falta " + (pag - preco)
else: 
	resp = "Troco " + (pag - preco)
	
print(round(resp,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    resp = "Falta " + (pag - preco)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:58:47) 
-- CODE:
preco = float(input("Digite o preco: "))
pag = float(input("Digite o pagamento: "))
x = preco - pag
y = pag - preco

if (preco >= pag):
	resp = "Falta " , x
else: 
	resp = "Troco " , y
	
print(round(resp,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(round(resp,2))
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:59:45) 
-- CODE:
preco = float(input("Digite o preco: "))
pag = float(input("Digite o pagamento: "))
x = preco - pag
y = pag - preco

if (preco > pag):
	resp = "Falta " , x
else: 
	resp = "Troco " , y
	
print(round(resp,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(round(resp,2))
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:00:05) 
-- CODE:
preco = float(input("Digite o preco: "))
pag = float(input("Digite o pagamento: "))
x = preco - pag
y = pag - preco

if (preco > pag):
	resp = "Falta " + x
else: 
	resp = "Troco " + y
	
print(round(resp,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    resp = "Falta " + x
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:00:41) 
-- CODE:
preco = float(input("Digite o preco: "))
pag = float(input("Digite o pagamento: "))
x = float(preco - pag)
y = float(pag - preco)

if (preco > pag):
	resp = "Falta " + x
else: 
	resp = "Troco " + y
	
print(round(resp,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    resp = "Falta " + x
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:01:22) 
-- CODE:
preco = float(input("Digite o preco: "))
pag = float(input("Digite o pagamento: "))
x = float(preco - pag)
y = float(pag - preco)

if (preco > pag):
	resp = "Falta " + x
else: 
	resp = "Troco de " + y
	
print(round(resp,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    resp = "Falta " + x
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:01:41) 
-- CODE:
preco = float(input("Digite o preco: "))
pag = float(input("Digite o pagamento: "))
x = float(preco - pag)
y = float(pag - preco)

if (preco > pag):
	resp = "Falta " + x
else: 
	resp = "Troco de " + "y"
	
print(round(resp,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    resp = "Falta " + x
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:02:01) 
-- CODE:
preco = float(input("Digite o preco: "))
pag = float(input("Digite o pagamento: "))
x = float(preco - pag)
y = float(pag - preco)

if (preco > pag):
	resp = "Falta " + x
else: 
	resp = "Troco de " + y
	
print(round(resp,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    resp = "Falta " + x
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:05:34) 
-- CODE:
preco = float(input("Digite o preco: "))
pag = float(input("Digite o pagamento: "))
x = x = pag - prec

y = float(pag - preco)

if (preco > pag):
   resp = "Falta " + float(pag - preco)
else: 	
	resp = "Troco de " + float(preco - pag)
	
print(round(resp,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    x = x = pag - prec
NameError: name 'prec' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:05:53) 
-- CODE:
preco = float(input("Digite o preco: "))
pag = float(input("Digite o pagamento: "))

if (preco > pag):
   resp = "Falta " + float(pag - preco)
else: 	
	resp = "Troco de " + float(preco - pag)
	
print(round(resp,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    resp = "Falta " + float(pag - preco)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:27:11) 
-- CODE:
preco = float(input("Digite o preco: "))
pag = float(input("Digite o pagamento: "))

if (preco > pag):
   resp = "Falta " + float(pag - preco)
else: 	
	resp = "Troco de " + float(preco - pag)
	
print(round(resp,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    resp = "Falta " + float(pag - preco)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:27:46) 
-- CODE:
preco = float(input("Digite o preco: "))
pag = float(input("Digite o pagamento: "))

if (preco > pag):
   resp = "Falta " + float(pag - preco)
else: 	
	resp = "Troco de " + float(preco - pag)
	
print(round(resp,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    resp = "Falta " + float(pag - preco)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:27:59) 
-- CODE:
preco = float(input("Digite o preco: "))
pag = float(input("Digite o pagamento: "))

if (preco > pag):
   resp = "Falta " + float(pag - preco)
else: 	
	resp = "Troco de " + float(preco - pag)
	
print(round(resp,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    resp = "Falta " + float(pag - preco)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:28:25) 
-- CODE:
preco = float(input("Digite o preco: "))
pag = float(input("Digite o pagamento: "))

if (preco > pag):
   resp = "Falta " + float(pag - preco)
else: 	
	resp = "Troco de " + float(pag - preco)
	
print(round(resp,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    resp = "Falta " + float(pag - preco)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:30:31) 
-- CODE:
preco = float(input("Digite o preco: "))
pag = float(input("Digite o pagamento: "))

if (preco > pag):
   resp = "Falta " + (pag - preco)
   print(resp)
else: 	
	resp = "Troco de " + (pag - preco)
	print(resp)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    resp = "Falta " + (pag - preco)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:32:35) 
-- CODE:
preco = float(input("Digite o preco: "))
pag = float(input("Digite o pagamento: "))

if (preco > pag):
   resp = pag - preco
   print("Falta" , resp)
else: 	
	resp = pag - preco
	print("Troco", resp)

-- OUTPUT:
Falta -26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:32:44) 
-- CODE:
preco = float(input("Digite o preco: "))
pag = float(input("Digite o pagamento: "))

if (preco > pag):
   resp = pag - preco
   print("Falta" , resp)
else: 	
	resp = pag - preco
	print("Troco", resp)

-- EXECUTION TIME:
0.153127
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta -26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:32:49) 
-- CODE:
preco = float(input("Digite o preco: "))
pag = float(input("Digite o pagamento: "))

if (preco > pag):
   resp = pag - preco
   print("Falta" , resp)
else: 	
	resp = pag - preco
	print("Troco de", resp)

-- EXECUTION TIME:
0.181859
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta -26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:32:52) 
-- CODE:
preco = float(input("Digite o preco: "))
pag = float(input("Digite o pagamento: "))

if (preco > pag):
   resp = pag - preco
   print("Falta" , resp)
else: 	
	resp = pag - preco
	print("Troco de", resp)

-- OUTPUT:
Falta -26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:33:03) 
-- CODE:
preco = float(input("Digite o preco: "))
pag = float(input("Digite o pagamento: "))

if (preco > pag):
   resp = pag - preco
   print("Falta" , resp)
else: 	
	resp = pag - preco
	print("Troco de", resp)

-- EXECUTION TIME:
0.149213
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta -26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:33:28) 
-- CODE:
preco = float(input("Digite o preco: "))
pag = float(input("Digite o pagamento: "))

if (preco > pag):
   resp = pag - preco
   print("Falta" , resp)
else: 	
	resp = pag - preco
	print("Troco de", resp)

-- EXECUTION TIME:
0.133494
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta -26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:33:33) 
-- CODE:
preco = float(input("Digite o preco: "))
pag = float(input("Digite o pagamento: "))

if (preco > pag):
   resp = pag - preco
   print("Falta" , resp)
else: 	
	resp = pag - preco
	print("Troco de", resp)

-- OUTPUT:
Falta -26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:33:40) 
-- CODE:
preco = float(input("Digite o preco: "))
pag = float(input("Digite o pagamento: "))

if (preco > pag):
   resp = pag - preco
   print("Falta" , resp)
else: 	
	resp = pag - preco
	print("Troco de", resp)

-- EXECUTION TIME:
0.133255
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta -26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:33:52) 
-- CODE:
preco = float(input("Digite o preco: "))
pag = float(input("Digite o pagamento: "))

if (preco > pag):
   resp = pag - preco
   print("Falta" , resp)
else: 	
	resp = pag - preco
	print("Troco de", resp)

-- OUTPUT:
Falta -26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:34:14) 
-- CODE:
preco = float(input("Digite o preco: "))
pag = float(input("Digite o pagamento: "))

if (preco > pag):
   resp = preco - pag
   print("Falta" , resp)
else: 	
	resp = pag - preco
	print("Troco de", resp)

-- EXECUTION TIME:
0.175621
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
