== TEST (2019-04-16 11:04:56) 
-- CODE:
h = int(input("Quantidade de horas trabalhadas:"))

if(h<=20):
	x = h*20
	print(x)
else:	
	x1 = (50*20) + ((h-20)*70)
	print(x1)
	
-- OUTPUT:
300
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 11:05:51) 
-- CODE:
h = int(input("Quantidade de horas trabalhadas:"))

if(h<=20):
	x = h*20
	float(print(round(x, 2)))
else:	
	x1 = (50*20) + ((h-20)*70)
	float(print(round(x1, 2)))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    float(print(round(x, 2)))
TypeError: float() argument must be a string or a number, not 'NoneType'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 11:06:05) 
-- CODE:
h = int(input("Quantidade de horas trabalhadas:"))

if(h<=20):
	x = h*20
	print(round(x, 2))
else:	
	x1 = (50*20) + ((h-20)*70)
	print(round(x1, 2))
	
-- OUTPUT:
300
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 11:06:10) 
-- CODE:
h = int(input("Quantidade de horas trabalhadas:"))

if(h<=20):
	x = h*20
	print(round(x, 2))
else:	
	x1 = (50*20) + ((h-20)*70)
	print(round(x1, 2))
	
-- EXECUTION TIME:
0.192456
-- TEST CASE 1:
---- input:
15
---- correct output:
750.0
---- user output:
300
-- TEST CASE 2:
---- input:
45
---- correct output:
2750.0
---- user output:
2750
-- TEST CASE 3:
---- input:
48
---- correct output:
2960
---- user output:
2960
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 11:06:14) 
-- CODE:
h = int(input("Quantidade de horas trabalhadas:"))

if(h<=20):
	x = h*20
	print(round(x, 2))
else:	
	x1 = (50*20) + ((h-20)*70)
	print(round(x1, 2))
	
-- OUTPUT:
300
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 11:06:31) 
-- CODE:
h = float(input("Quantidade de horas trabalhadas:"))

if(h<=20):
	x = h*20
	print(round(x, 2))
else:	
	x1 = (50*20) + ((h-20)*70)
	print(round(x1, 2))
	
-- EXECUTION TIME:
0.214796
-- TEST CASE 1:
---- input:
15
---- correct output:
750.0
---- user output:
300.0
-- TEST CASE 2:
---- input:
45
---- correct output:
2750.0
---- user output:
2750.0
-- TEST CASE 3:
---- input:
48
---- correct output:
2960
---- user output:
2960.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 11:06:31) 
-- CODE:
h = float(input("Quantidade de horas trabalhadas:"))

if(h<=20):
	x = h*20
	print(round(x, 2))
else:	
	x1 = (50*20) + ((h-20)*70)
	print(round(x1, 2))
	
-- OUTPUT:
300.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 11:07:29) 
-- CODE:
h = int(input("Quantidade de horas trabalhadas:"))

if(h<=20):
	x = h*20
	
else:	
	x = (50*20) + ((h-20)*70)
	
print(float(round(x, 2)))
-- OUTPUT:
300.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 11:07:33) 
-- CODE:
h = int(input("Quantidade de horas trabalhadas:"))

if(h<=20):
	x = h*20
	
else:	
	x = (50*20) + ((h-20)*70)
	
print(float(round(x, 2)))
-- EXECUTION TIME:
0.190258
-- TEST CASE 1:
---- input:
15
---- correct output:
750.0
---- user output:
300.0
-- TEST CASE 2:
---- input:
45
---- correct output:
2750.0
---- user output:
2750.0
-- TEST CASE 3:
---- input:
48
---- correct output:
2960
---- user output:
2960.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 11:07:37) 
-- CODE:
h = int(input("Quantidade de horas trabalhadas:"))

if(h<=20):
	x = h*20
	
else:	
	x = (50*20) + ((h-20)*70)
	
print(float(round(x, 2)))
-- OUTPUT:
300.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 11:07:54) 
-- CODE:
h = int(input("Quantidade de horas trabalhadas:"))

if(h<=20):
	x = h*20
	
else:	
	x = (50*20) + ((h-20)*70)
	
print(float(round(x, 2)))
-- EXECUTION TIME:
0.128056
-- TEST CASE 1:
---- input:
15
---- correct output:
750.0
---- user output:
300.0
-- TEST CASE 2:
---- input:
45
---- correct output:
2750.0
---- user output:
2750.0
-- TEST CASE 3:
---- input:
48
---- correct output:
2960
---- user output:
2960.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 11:07:55) 
-- CODE:
h = int(input("Quantidade de horas trabalhadas:"))

if(h<=20):
	x = h*20
	
else:	
	x = (50*20) + ((h-20)*70)
	
print(float(round(x, 2)))
-- OUTPUT:
300.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 11:08:08) 
-- CODE:
h = int(input("Quantidade de horas trabalhadas:"))

if(h<20):
	x = h*20
	
else:	
	x = (50*20) + ((h-20)*70)
	
print(float(round(x, 2)))
-- EXECUTION TIME:
0.205191
-- TEST CASE 1:
---- input:
15
---- correct output:
750.0
---- user output:
300.0
-- TEST CASE 2:
---- input:
45
---- correct output:
2750.0
---- user output:
2750.0
-- TEST CASE 3:
---- input:
48
---- correct output:
2960
---- user output:
2960.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 11:08:09) 
-- CODE:
h = int(input("Quantidade de horas trabalhadas:"))

if(h<20):
	x = h*20
	
else:	
	x = (50*20) + ((h-20)*70)
	
print(float(round(x, 2)))
-- OUTPUT:
300.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 11:08:24) 
-- CODE:
h = int(input("Quantidade de horas trabalhadas:"))

if(h<=20):
	x = h*50
	
else:	
	x = (50*20) + ((h-20)*70)
	
print(float(round(x, 2)))
-- EXECUTION TIME:
0.153418
-- TEST CASE 1:
---- input:
15
---- correct output:
750.0
---- user output:
750.0
-- TEST CASE 2:
---- input:
45
---- correct output:
2750.0
---- user output:
2750.0
-- TEST CASE 3:
---- input:
48
---- correct output:
2960
---- user output:
2960.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
