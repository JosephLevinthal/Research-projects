== TEST (2019-07-04 10:17:08) 
-- CODE:
from math import*
x = eval(input("angulo: "))
k = int(input("serie: "))
n = 1
cosx = 1
while n<k-1:
	if n%2 !=0:
		cosx = cosx - (x**(2*n))/factorial(2*n)
	else:
		cosx = cosx + (x**(2*n))/factorial(2*n)
	n = n + 1
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:17:29) 
-- CODE:
from math import*
x = eval(input("angulo: "))
k = int(input("serie: "))
n = 1
cosx = 1
while n<k-1:
	if n%2 !=0:
		cosx = cosx - (x**(2*n))/factorial(2*n)
	else:
		cosx = cosx + (x**(2*n))/factorial(2*n)
	n = n + 1
print(round(cosx, 10))
-- OUTPUT:
0.9396926208
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:17:39) 
-- CODE:
from math import*
x = eval(input("angulo: "))
k = int(input("serie: "))
n = 1
cosx = 1
while n<k-1:
	if n%2 !=0:
		cosx = cosx - (x**(2*n))/factorial(2*n)
	else:
		cosx = cosx + (x**(2*n))/factorial(2*n)
	n = n + 1
print(round(cosx, 10))
-- OUTPUT:
0.9396926208
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:17:52) 
-- CODE:
from math import*
x = eval(input("angulo: "))
k = int(input("serie: "))
n = 1
cosx = 1
while n<k-1:
	if n%2 !=0:
		cosx = cosx - (x**(2*n))/factorial(2*n)
	else:
		cosx = cosx + (x**(2*n))/factorial(2*n)
	n = n + 1
print(round(cosx, 10))
-- OUTPUT:
0.9396926208
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:18:04) 
-- CODE:
from math import*
x = eval(input("angulo: "))
k = int(input("serie: "))
n = 1
cosx = 1
while n<k-1:
	if n%2 !=0:
		cosx = cosx - (x**(2*n))/factorial(2*n)
	else:
		cosx = cosx + (x**(2*n))/factorial(2*n)
	n = n + 1
print(round(cosx, 10))
-- OUTPUT:
0.9396926208
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:18:12) 
-- CODE:
from math import*
x = eval(input("angulo: "))
k = int(input("serie: "))
n = 0
cosx = 1
while n<k-1:
	if n%2 !=0:
		cosx = cosx - (x**(2*n))/factorial(2*n)
	else:
		cosx = cosx + (x**(2*n))/factorial(2*n)
	n = n + 1
print(round(cosx, 10))
-- OUTPUT:
1.9396926208
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:18:26) 
-- CODE:
from math import*
x = eval(input("angulo: "))
k = int(input("serie: "))
n = 2
cosx = 1
while n<k-1:
	if n%2 !=0:
		cosx = cosx - (x**(2*n))/factorial(2*n)
	else:
		cosx = cosx + (x**(2*n))/factorial(2*n)
	n = n + 1
print(round(cosx, 10))
-- OUTPUT:
1.0006161048
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:18:40) 
-- CODE:
from math import*
x = eval(input("angulo: "))
k = int(input("serie: "))
n = 2
cosx = 1
while n<k-1:
	if n%2 !=0:
		cosx = cosx - (x**(2*n))/factorial(2*n)
	else:
		cosx = cosx + (x**(2*n))/factorial(2*n)
	n = n + 1
print(round(cosx, 10))
-- OUTPUT:
1.0006161048
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:18:53) 
-- CODE:
from math import*
x = eval(input("angulo: "))
k = int(input("serie: "))
n = 1
cosx = 1
while n<k:
	if n%2 !=0:
		cosx = cosx - (x**(2*n))/factorial(2*n)
	else:
		cosx = cosx + (x**(2*n))/factorial(2*n)
	n = n + 1
print(round(cosx, 10))
-- OUTPUT:
0.9396926208
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:19:01) 
-- CODE:
from math import*
x = eval(input("angulo: "))
k = int(input("serie: "))
n = 1
cosx = 1
while n<k:
	if n%2 !=0:
		cosx = cosx - (x**(2*n))/factorial(2*n)
	else:
		cosx = cosx + (x**(2*n))/factorial(2*n)
	n = n + 1
print(round(cosx, 10))
-- OUTPUT:
0.9396926208
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:19:08) 
-- CODE:
from math import*
x = eval(input("angulo: "))
k = int(input("serie: "))
n = 1
cosx = 1
while n<k:
	if n%2 !=0:
		cosx = cosx - (x**(2*n))/factorial(2*n)
	else:
		cosx = cosx + (x**(2*n))/factorial(2*n)
	n = n + 1
print(round(cosx, 10))
-- OUTPUT:
0.9396926208
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-04 10:19:23) 
-- CODE:
from math import*
x = eval(input("angulo: "))
k = int(input("serie: "))
n = 1
cosx = 1
while n<k:
	if n%2 !=0:
		cosx = cosx - (x**(2*n))/factorial(2*n)
	else:
		cosx = cosx + (x**(2*n))/factorial(2*n)
	n = n + 1
print(round(cosx, 10))
-- EXECUTION TIME:
0.7196
-- TEST CASE 1:
---- input:
pi/9
6
---- correct output:
0.9396926208
---- user output:
0.9396926208
-- TEST CASE 2:
---- input:
pi/10
20
---- correct output:
0.9510565163
---- user output:
0.9510565163
-- TEST CASE 3:
---- input:
pi
9
---- correct output:
-0.9999998647
---- user output:
-0.9999998647
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:19:46) 
-- CODE:
from math import*
x = eval(input("angulo: "))
k = int(input("serie: "))
n = 1
cosx = 1
while n<k:
	if n%2 !=0:
		cosx = cosx - (x**(2*n))/factorial(2*n)
	else:
		cosx = cosx + (x**(2*n))/factorial(2*n)
	n = n + 1
print(round(cosx, 10))
-- OUTPUT:
0.9396926208
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 10:20:22) 
-- CODE:
from math import*
x = eval(input("angulo: "))
k = int(input("serie: "))
n = 1
cosx = 1
while n<k:
	if n%2 !=0:
		cosx = cosx - (x**(2*n))/factorial(2*n)
	else:
		cosx = cosx + (x**(2*n))/factorial(2*n)
	n = n + 1
print(round(cosx, 10))
-- OUTPUT:
0.9396926208
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-04 10:20:44) 
-- CODE:
from math import*
x = eval(input("angulo: "))
k = int(input("serie: "))
n = 1
cosx = 1
while n<k:
	if n%2 !=0:
		cosx = cosx - (x**(2*n))/factorial(2*n)
	else:
		cosx = cosx + (x**(2*n))/factorial(2*n)
	n = n + 1
print(round(cosx, 10))
-- EXECUTION TIME:
0.72766
-- TEST CASE 1:
---- input:
pi/9
6
---- correct output:
0.9396926208
---- user output:
0.9396926208
-- TEST CASE 2:
---- input:
pi/10
20
---- correct output:
0.9510565163
---- user output:
0.9510565163
-- TEST CASE 3:
---- input:
pi
9
---- correct output:
-0.9999998647
---- user output:
-0.9999998647
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
