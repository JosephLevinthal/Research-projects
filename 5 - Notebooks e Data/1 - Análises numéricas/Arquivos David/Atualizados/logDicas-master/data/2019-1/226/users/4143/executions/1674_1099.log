== TEST (2019-04-25 10:40:15) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a> 0) and (b>0) and (c>0):
	# Testa se medidas correspondem aas de um triangulo
	if (a< b +c and b<a+c and c< a+b):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a> 0) and (b>0) and (c>0):
	# Testa se medidas correspondem aas de um triangulo
	if (a< b +c and b<a+c and c< a+b):
		if ( (a==b) and (b==c))
			print("equilaterio")
		elif ((a==b) or (b==c) or (c==a)):
			print("isoceles")
		elif ((a!=b) and (a!=c) and (b!=c)):
			print("escaleno")
	else:
		print("Tipo de triangulo: invalido")
		
else:
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 40
    if ( (a==b) and (b==c))
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:40:36) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a> 0) and (b>0) and (c>0):
	# Testa se medidas correspondem aas de um triangulo
	if (a< b +c and b<a+c and c< a+b):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a> 0) and (b>0) and (c>0):
	# Testa se medidas correspondem aas de um triangulo
	if (a< b +c and b<a+c and c< a+b):
		if ( (a==b) and (b==c)):
			print("equilaterio")
		elif ((a==b) or (b==c) or (c==a)):
			print("isoceles")
		elif ((a!=b) and (a!=c) and (b!=c)):
			print("escaleno")
	else:
		print("Tipo de triangulo: invalido")
		
else:
	print("Tipo de triangulo: invalido")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 30, in <module>
    a = float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:41:17) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a> 0) and (b>0) and (c>0):
	# Testa se medidas correspondem aas de um triangulo
	if (a< b +c and b<a+c and c< a+b):
		if ( (a==b) and (b==c)):
			print("equilaterio")
		elif ((a==b) or (b==c) or (c==a)):
			print("isoceles")
		elif ((a!=b) and (a!=c) and (b!=c)):
			print("escaleno")
	else:
		print("Tipo de triangulo: invalido")
		
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:41:27) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a> 0) and (b>0) and (c>0):
	# Testa se medidas correspondem aas de um triangulo
	if (a< b +c and b<a+c and c< a+b):
		if ( (a==b) and (b==c)):
			print("equilaterio")
		elif ((a==b) or (b==c) or (c==a)):
			print("isoceles")
		elif ((a!=b) and (a!=c) and (b!=c)):
			print("escaleno")
	else:
		print("Tipo de triangulo: invalido")
		
else:
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.178719
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:42:14) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a> 0) and (b>0) and (c>0):
	# Testa se medidas correspondem aas de um triangulo
	if (a< b +c and b<a+c and c< a+b):
		if ( (a==b) and (b==c)):
			print("Tipo de triangulo: equilaterio")
		elif ((a==b) or (b==c) or (c==a)):
			print("Tipo de triangulo: isoceles")
		elif ((a!=b) and (a!=c) and (b!=c)):
			print("Tipo de triangulo: escaleno")
	else:
		print("Tipo de triangulo: invalido")
		
else:
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.204602
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:42:17) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a> 0) and (b>0) and (c>0):
	# Testa se medidas correspondem aas de um triangulo
	if (a< b +c and b<a+c and c< a+b):
		if ( (a==b) and (b==c)):
			print("Tipo de triangulo: equilaterio")
		elif ((a==b) or (b==c) or (c==a)):
			print("Tipo de triangulo: isoceles")
		elif ((a!=b) and (a!=c) and (b!=c)):
			print("Tipo de triangulo: escaleno")
	else:
		print("Tipo de triangulo: invalido")
		
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:43:40) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a> 0) and (b>0) and (c>0):
	# Testa se medidas correspondem aas de um triangulo
	if (a< b +c and b<a+c and c< a+b):
		if ( (a==b) and (b==c)):
			print("Tipo de triangulo: equilaterio")
		elif ((a==b) or (b==c) or (c==a)):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")
	else:
		print("Tipo de triangulo: invalido")
		
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:43:47) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a> 0) and (b>0) and (c>0):
	# Testa se medidas correspondem aas de um triangulo
	if (a< b +c and b<a+c and c< a+b):
		if ( (a==b) and (b==c)):
			print("Tipo de triangulo: equilaterio")
		elif ((a==b) or (b==c) or (c==a)):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")
	else:
		print("Tipo de triangulo: invalido")
		
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:44:20) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a> 0) and (b>0) and (c>0):
	# Testa se medidas correspondem aas de um triangulo
	if (a< b +c and b<a+c and c< a+b):
		if ( (a==b) and (b==c)):
			print("Tipo de triangulo: equilaterio")
		elif ((a==b) or (b==c) or (c==a)):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")
	else:
		print("Tipo de triangulo: invalido")
		

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:48:43) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a> 0) and (b>0) and (c>0):
	# Testa se medidas correspondem aas de um triangulo
	if (a< b +c and b<a+c and c< a+b):
		if ( (a==b) and (b==c)):
			print("Tipo de triangulo:", "equilaterio")
		elif (a==b and b!=c or b==c b!=a):
			print("Tipo de triangulo:", "isoceles")
		else:
			print("Tipo de triangulo:", "escaleno")
	elif(a> b+c):
		print("Tipo de triangulo: invalido")
		

-- EXECUTION TIME:
0.185307
-- ERROR:
  File "/home/codebench/codes/1674/1099/main.py", line 20
    elif (a==b and b!=c or b==c b!=a):
                                ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:50:02) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a> 0) and (b>0) and (c>0):
	# Testa se medidas correspondem aas de um triangulo
	if (a< b +c and b<a+c and c< a+b):
		if ( (a==b) and (b==c)):
			print("Tipo de triangulo:", "equilaterio")
		elif (a==b and b!=c or b==c b!=a):
			print("Tipo de triangulo:", "isoceles")
		else:
			print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo: invalido")
		

-- EXECUTION TIME:
0.177432
-- ERROR:
  File "/home/codebench/codes/1674/1099/main.py", line 20
    elif (a==b and b!=c or b==c b!=a):
                                ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:50:40) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
	# Testa se medidas correspondem aas de um triangulo
	if (a< b +c and b<a+c and c< a+b):
		if ( (a==b) and (b==c)):
			print("Tipo de triangulo:", "equilaterio")
		elif (a==b and b!=c or b==c b!=a):
			print("Tipo de triangulo:", "isoceles")
		else:
			print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo: invalido")
		

-- EXECUTION TIME:
0.145166
-- ERROR:
  File "/home/codebench/codes/1674/1099/main.py", line 14
    if (a< b +c and b<a+c and c< a+b):
    ^
IndentationError: unexpected indent

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:51:03) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
	# Testa se medidas correspondem aas de um triangulo
	if (a< b +c and b<a+c and c< a+b):
		if ( (a==b) and (b==c)):
			print("Tipo de triangulo:", "equilaterio")
		elif (a==b and b!=c or b==c b!=a):
			print("Tipo de triangulo:", "isoceles")
		else:
			print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo: invalido")
		

-- ERROR:
File "XXXX", line 14
    if (a< b +c and b<a+c and c< a+b):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:53:05) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
	# Testa se medidas correspondem aas de um triangulo
	if ((a < b +c) and (b< a+c) and (c < a+b):
		if ( (a==b) and (b==c)):
			print("Tipo de triangulo:", "equilaterio")
		elif (a==b and b!=c or b==c and b!=a):
			print("Tipo de triangulo:", "isoceles")
		else:
			print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo: invalido")
		

-- ERROR:
File "XXXX", line 14
    if ((a < b +c) and (b< a+c) and (c < a+b):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:53:18) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
	# Testa se medidas correspondem aas de um triangulo
	if ((a < b +c) and (b< a+c) and (c < a+b)):
		if ( (a==b) and (b==c)):
			print("Tipo de triangulo:", "equilaterio")
		elif (a==b and b!=c or b==c and b!=a):
			print("Tipo de triangulo:", "isoceles")
		else:
			print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo: invalido")
		

-- ERROR:
File "XXXX", line 14
    if ((a < b +c) and (b< a+c) and (c < a+b)):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:53:58) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
	# Testa se medidas correspondem aas de um triangulo
if ((a < b +c) and (b< a+c) and (c < a+b)):
		if ( (a==b) and (b==c)):
			print("Tipo de triangulo:", "equilaterio")
		elif (a==b and b!=c or b==c and b!=a):
			print("Tipo de triangulo:", "isoceles")
		else:
			print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo: invalido")
		

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:54:21) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
	# Testa se medidas correspondem aas de um triangulo
if ((a < b +c) and (b< a+c) and (c < a+b)):
		if ( (a==b) and (b==c)):
			print("Tipo de triangulo:", "equilaterio")
		elif (a==b and b!=c or b==c and b!=a):
			print("Tipo de triangulo:", "isoceles")
		else:
			print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo: invalido")
		

-- EXECUTION TIME:
0.207744
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:54:45) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
	# Testa se medidas correspondem aas de um triangulo
if ((a < b +c) and (b< a+c) and (c < a+b)):
	if ( (a==b) and (b==c)):
		print("Tipo de triangulo:", "equilaterio")
	elif (a==b and b!=c or b==c and b!=a):
			print("Tipo de triangulo:", "isoceles")
	else:
			print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo: invalido")
		

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:54:52) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
	# Testa se medidas correspondem aas de um triangulo
if ((a < b +c) and (b< a+c) and (c < a+b)):
	if ( (a==b) and (b==c)):
		print("Tipo de triangulo:", "equilaterio")
	elif (a==b and b!=c or b==c and b!=a):
			print("Tipo de triangulo:", "isoceles")
	else:
			print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo: invalido")
		

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:54:58) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
	# Testa se medidas correspondem aas de um triangulo
if ((a < b +c) and (b< a+c) and (c < a+b)):
	if ( (a==b) and (b==c)):
		print("Tipo de triangulo:", "equilaterio")
	elif (a==b and b!=c or b==c and b!=a):
			print("Tipo de triangulo:", "isoceles")
	else:
			print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo: invalido")
		

-- EXECUTION TIME:
0.200024
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:55:16) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
	# Testa se medidas correspondem aas de um triangulo
if ((a < b +c) and (b< a+c) and (c < a+b)):
	if ( (a==b) and (b==c)):
		print("Tipo de triangulo:", "equilaterio")
	elif (a==b and b!=c or b==c and b!=a):
		print("Tipo de triangulo:", "isoceles")
	else:
		print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo: invalido")
		

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:55:24) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
	# Testa se medidas correspondem aas de um triangulo
if ((a < b +c) and (b< a+c) and (c < a+b)):
	if ( (a==b) and (b==c)):
		print("Tipo de triangulo:", "equilaterio")
	elif (a==b and b!=c or b==c and b!=a):
		print("Tipo de triangulo:", "isoceles")
	else:
		print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo: invalido")
		

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:55:25) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
	# Testa se medidas correspondem aas de um triangulo
if ((a < b +c) and (b< a+c) and (c < a+b)):
	if ( (a==b) and (b==c)):
		print("Tipo de triangulo:", "equilaterio")
	elif (a==b and b!=c or b==c and b!=a):
		print("Tipo de triangulo:", "isoceles")
	else:
		print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo: invalido")
		

-- EXECUTION TIME:
0.135903
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:55:26) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
	# Testa se medidas correspondem aas de um triangulo
if ((a < b +c) and (b< a+c) and (c < a+b)):
	if ( (a==b) and (b==c)):
		print("Tipo de triangulo:", "equilaterio")
	elif (a==b and b!=c or b==c and b!=a):
		print("Tipo de triangulo:", "isoceles")
	else:
		print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo: invalido")
		

-- EXECUTION TIME:
0.122004
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:55:26) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
	# Testa se medidas correspondem aas de um triangulo
if ((a < b +c) and (b< a+c) and (c < a+b)):
	if ( (a==b) and (b==c)):
		print("Tipo de triangulo:", "equilaterio")
	elif (a==b and b!=c or b==c and b!=a):
		print("Tipo de triangulo:", "isoceles")
	else:
		print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo: invalido")
		

-- EXECUTION TIME:
0.125175
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:

-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:55:26) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
	# Testa se medidas correspondem aas de um triangulo
if ((a < b +c) and (b< a+c) and (c < a+b)):
	if ( (a==b) and (b==c)):
		print("Tipo de triangulo:", "equilaterio")
	elif (a==b and b!=c or b==c and b!=a):
		print("Tipo de triangulo:", "isoceles")
	else:
		print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo: invalido")
		

-- EXECUTION TIME:
0.204825
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:55:53) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
	# Testa se medidas correspondem aas de um triangulo
if ((a < b +c) and (b< a+c) and (c < a+b)):
	if ((a==b) and (b==c)):
		print("Tipo de triangulo:", "equilaterio")
	elif (a==b and b!=c or b==c and b!=a):
		print("Tipo de triangulo:", "isoceles")
	else:
		print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo: invalido")
		

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:55:59) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
	# Testa se medidas correspondem aas de um triangulo
if ((a < b +c) and (b< a+c) and (c < a+b)):
	if ((a==b) and (b==c)):
		print("Tipo de triangulo:", "equilaterio")
	elif (a==b and b!=c or b==c and b!=a):
		print("Tipo de triangulo:", "isoceles")
	else:
		print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo: invalido")
		

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:56:06) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
	# Testa se medidas correspondem aas de um triangulo
if ((a < b +c) and (b< a+c) and (c < a+b)):
	if ((a==b) and (b==c)):
		print("Tipo de triangulo:", "equilaterio")
	elif (a==b and b!=c or b==c and b!=a):
		print("Tipo de triangulo:", "isoceles")
	else:
		print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo: invalido")
		

-- EXECUTION TIME:
0.118589
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:58:35) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
	# Testa se medidas correspondem aas de um triangulo
if (a + b<c):
	if ((a==b) and (b==c)):
		print("Tipo de triangulo:", "equilaterio")
	elif (a==b and b!=c  b==c and b!=a):
		print("Tipo de triangulo:", "isoceles")
	else:
		print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo: invalido")
		

-- ERROR:
File "XXXX", line 17
    elif (a==b and b!=c  b==c and b!=a):
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:58:46) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
	# Testa se medidas correspondem aas de um triangulo
if (a + b<c):
	if ((a==b) and (b==c)):
		print("Tipo de triangulo:", "equilaterio")
	elif (a==b and b!=c or b==c and b!=a):
		print("Tipo de triangulo:", "isoceles")
	else:
		print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo: invalido")
		

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:59:16) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
	# Testa se medidas correspondem aas de um triangulo
if (a + b<c):
	if ((a==b) and (b==c)):
		print("Tipo de triangulo:", "equilaterio")
	elif (a==b and b!=c or b==c and b!=a):
		print("Tipo de triangulo:", "isoceles")
	else:
		print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo:", "invalido")
		

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:59:22) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
	# Testa se medidas correspondem aas de um triangulo
if (a + b<c):
	if ((a==b) and (b==c)):
		print("Tipo de triangulo:", "equilaterio")
	elif (a==b and b!=c or b==c and b!=a):
		print("Tipo de triangulo:", "isoceles")
	else:
		print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo:", "invalido")
		

-- EXECUTION TIME:
0.199312
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:01:01) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
	# Testa se medidas correspondem aas de um triangulo
if ((a + b) < c):
	if ((a==b) and (b==c)):
		print("Tipo de triangulo:", "equilaterio")
	elif (a==b and b!=c or b==c and b!=a):
		print("Tipo de triangulo:", "isoceles")
	else:
		print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo:", "invalido")
		

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:01:12) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
	# Testa se medidas correspondem aas de um triangulo
if ((a + b) < c):
	if ((a==b) and (b==c)):
		print("Tipo de triangulo:", "equilaterio")
	elif (a==b and b!=c or b==c and b!=a):
		print("Tipo de triangulo:", "isoceles")
	else:
		print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo:", "invalido")
		

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:02:23) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if (a> 0) and (b>0) and (c>0):
	# Testa se medidas correspondem aas de um triangulo
if ((a + b) < c):
	if ((a==b) and (b==c)):
		print("Tipo de triangulo:", "equilaterio")
	elif (a==b and b!=c or b==c and b!=a):
		print("Tipo de triangulo:", "isoceles")
	else:
		print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo:", "invalido")
		

-- ERROR:
File "XXXX", line 15
    if ((a + b) < c):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:03:33) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if (a> 0) and (b>0) and (c>0):
	# Testa se medidas correspondem aas de um triangulo
if ((a + b) < c):
	if ((a==b) and (b==c)):
		print("Tipo de triangulo:", "equilaterio")
	elif (a==b and b!=c or b==c and b!=a):
		print("Tipo de triangulo:", "isoceles")
	else:
		print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo:", "invalido")
		

-- ERROR:
File "XXXX", line 15
    if ((a + b) < c):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:03:34) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if (a> 0) and (b>0) and (c>0):
	# Testa se medidas correspondem aas de um triangulo
if ((a + b) < c):
	if ((a==b) and (b==c)):
		print("Tipo de triangulo:", "equilaterio")
	elif (a==b and b!=c or b==c and b!=a):
		print("Tipo de triangulo:", "isoceles")
	else:
		print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo:", "invalido")
		

-- ERROR:
File "XXXX", line 15
    if ((a + b) < c):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:04:06) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if (a> 0) and (b>0) and (c>0):
	# Testa se medidas correspondem aas de um triangulo
	if ((a + b) < c):
		if ((a==b) and (b==c)):
		print("Tipo de triangulo:", "equilaterio")
		elif (a==b and b!=c or b==c and b!=a):
		print("Tipo de triangulo:", "isoceles")
	else:
		print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo:", "invalido")
		

-- ERROR:
File "XXXX", line 17
    print("Tipo de triangulo:", "equilaterio")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:04:14) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if (a> 0) and (b>0) and (c>0):
	# Testa se medidas correspondem aas de um triangulo
	if ((a + b) < c):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo:", "equilaterio")
		elif (a==b and b!=c or b==c and b!=a):
			print("Tipo de triangulo:", "isoceles")
	else:
		print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo:", "invalido")
		

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:04:19) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if (a> 0) and (b>0) and (c>0):
	# Testa se medidas correspondem aas de um triangulo
	if ((a + b) < c):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo:", "equilaterio")
		elif (a==b and b!=c or b==c and b!=a):
			print("Tipo de triangulo:", "isoceles")
	else:
		print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo:", "invalido")
		

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:04:24) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if (a> 0) and (b>0) and (c>0):
	# Testa se medidas correspondem aas de um triangulo
	if ((a + b) < c):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo:", "equilaterio")
		elif (a==b and b!=c or b==c and b!=a):
			print("Tipo de triangulo:", "isoceles")
	else:
		print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo:", "invalido")
		

-- EXECUTION TIME:
0.149502
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:04:32) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if (a> 0) and (b>0) and (c>0):
	# Testa se medidas correspondem aas de um triangulo
	if ((a + b) < c):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo:", "equilaterio")
		elif (a==b and b!=c or b==c and b!=a):
			print("Tipo de triangulo:", "isoceles")
	else:
		print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo:", "invalido")
		

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:04:42) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if (a> 0) and (b>0) and (c>0):
	# Testa se medidas correspondem aas de um triangulo
	if ((a + b) < c):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo:", "equilaterio")
		elif (a==b and b!=c or b==c and b!=a):
			print("Tipo de triangulo:", "isoceles")
	else:
		print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo:", "invalido")
		

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:06:35) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if (a> 0) and (b>0) and (c>0):
# Testa se medidas correspondem aas de um triangulo
	if ((a + b) < c and (b+c)<a and (a+c)<b):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo:", "equilaterio")
		elif (a==b and b!=c or b==c and b!=a):
			print("Tipo de triangulo:", "isoceles")
	else:
		print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo:", "invalido")
		

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:07:04) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if (a> 0) and (b>0) and (c>0):
# Testa se medidas correspondem aas de um triangulo
	if ((a + b) < c and (b+c)<a and (a+c)<b):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo:", "equilaterio")
		elif (a==b and b!=c or b==c and b!=a):
			print("Tipo de triangulo:", "isosceles")
	else:
		print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo:", "invalido")
		

-- EXECUTION TIME:
0.134361
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:07:22) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if (a> 0) and (b>0) and (c>0):
# Testa se medidas correspondem aas de um triangulo
	if ((a + b) < c and (b+c)<a and (a+c)<b):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo:", "equilatero")
		elif (a==b and b!=c or b==c and b!=a):
			print("Tipo de triangulo:", "isosceles")
	else:
		print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo:", "invalido")
		

-- EXECUTION TIME:
0.14098
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:07:23) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if (a> 0) and (b>0) and (c>0):
# Testa se medidas correspondem aas de um triangulo
	if ((a + b) < c and (b+c)<a and (a+c)<b):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo:", "equilatero")
		elif (a==b and b!=c or b==c and b!=a):
			print("Tipo de triangulo:", "isosceles")
	else:
		print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo:", "invalido")
		

-- EXECUTION TIME:
0.182259
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:07:24) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if (a> 0) and (b>0) and (c>0):
# Testa se medidas correspondem aas de um triangulo
	if ((a + b) < c and (b+c)<a and (a+c)<b):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo:", "equilatero")
		elif (a==b and b!=c or b==c and b!=a):
			print("Tipo de triangulo:", "isosceles")
	else:
		print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo:", "invalido")
		

-- EXECUTION TIME:
0.120867
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:07:24) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if (a> 0) and (b>0) and (c>0):
# Testa se medidas correspondem aas de um triangulo
	if ((a + b) < c and (b+c)<a and (a+c)<b):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo:", "equilatero")
		elif (a==b and b!=c or b==c and b!=a):
			print("Tipo de triangulo:", "isosceles")
	else:
		print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo:", "invalido")
		

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:07:24) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if (a> 0) and (b>0) and (c>0):
# Testa se medidas correspondem aas de um triangulo
	if ((a + b) < c and (b+c)<a and (a+c)<b):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo:", "equilatero")
		elif (a==b and b!=c or b==c and b!=a):
			print("Tipo de triangulo:", "isosceles")
	else:
		print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo:", "invalido")
		

-- EXECUTION TIME:
0.165295
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:

-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:07:25) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if (a> 0) and (b>0) and (c>0):
# Testa se medidas correspondem aas de um triangulo
	if ((a + b) < c and (b+c)<a and (a+c)<b):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo:", "equilatero")
		elif (a==b and b!=c or b==c and b!=a):
			print("Tipo de triangulo:", "isosceles")
	else:
		print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo:", "invalido")
		

-- EXECUTION TIME:
0.332908
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:07:25) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if (a> 0) and (b>0) and (c>0):
# Testa se medidas correspondem aas de um triangulo
	if ((a + b) < c and (b+c)<a and (a+c)<b):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo:", "equilatero")
		elif (a==b and b!=c or b==c and b!=a):
			print("Tipo de triangulo:", "isosceles")
	else:
		print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo:", "invalido")
		

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:07:25) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if (a> 0) and (b>0) and (c>0):
# Testa se medidas correspondem aas de um triangulo
	if ((a + b) < c and (b+c)<a and (a+c)<b):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo:", "equilatero")
		elif (a==b and b!=c or b==c and b!=a):
			print("Tipo de triangulo:", "isosceles")
	else:
		print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo:", "invalido")
		

-- EXECUTION TIME:
0.262246
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1674/1099/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:07:25) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if (a> 0) and (b>0) and (c>0):
# Testa se medidas correspondem aas de um triangulo
	if ((a + b) < c and (b+c)<a and (a+c)<b):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo:", "equilatero")
		elif (a==b and b!=c or b==c and b!=a):
			print("Tipo de triangulo:", "isosceles")
	else:
		print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo:", "invalido")
		

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:07:25) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if (a> 0) and (b>0) and (c>0):
# Testa se medidas correspondem aas de um triangulo
	if ((a + b) < c and (b+c)<a and (a+c)<b):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo:", "equilatero")
		elif (a==b and b!=c or b==c and b!=a):
			print("Tipo de triangulo:", "isosceles")
	else:
		print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo:", "invalido")
		

-- EXECUTION TIME:
0.504223
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:07:26) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if (a> 0) and (b>0) and (c>0):
# Testa se medidas correspondem aas de um triangulo
	if ((a + b) < c and (b+c)<a and (a+c)<b):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo:", "equilatero")
		elif (a==b and b!=c or b==c and b!=a):
			print("Tipo de triangulo:", "isosceles")
	else:
		print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo:", "invalido")
		

-- EXECUTION TIME:
0.397283
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:07:26) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if (a> 0) and (b>0) and (c>0):
# Testa se medidas correspondem aas de um triangulo
	if ((a + b) < c and (b+c)<a and (a+c)<b):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo:", "equilatero")
		elif (a==b and b!=c or b==c and b!=a):
			print("Tipo de triangulo:", "isosceles")
	else:
		print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo:", "invalido")
		

-- EXECUTION TIME:
0.450252
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1674/1099/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:07:26) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if (a> 0) and (b>0) and (c>0):
# Testa se medidas correspondem aas de um triangulo
	if ((a + b) < c and (b+c)<a and (a+c)<b):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo:", "equilatero")
		elif (a==b and b!=c or b==c and b!=a):
			print("Tipo de triangulo:", "isosceles")
	else:
		print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo:", "invalido")
		

-- EXECUTION TIME:
0.404094
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1674/1099/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:07:26) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if (a> 0) and (b>0) and (c>0):
# Testa se medidas correspondem aas de um triangulo
	if ((a + b) < c and (b+c)<a and (a+c)<b):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo:", "equilatero")
		elif (a==b and b!=c or b==c and b!=a):
			print("Tipo de triangulo:", "isosceles")
	else:
		print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo:", "invalido")
		

-- EXECUTION TIME:
0.472723
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:07:27) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if (a> 0) and (b>0) and (c>0):
# Testa se medidas correspondem aas de um triangulo
	if ((a + b) < c and (b+c)<a and (a+c)<b):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo:", "equilatero")
		elif (a==b and b!=c or b==c and b!=a):
			print("Tipo de triangulo:", "isosceles")
	else:
		print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo:", "invalido")
		

-- EXECUTION TIME:
0.556917
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:07:27) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if (a> 0) and (b>0) and (c>0):
# Testa se medidas correspondem aas de um triangulo
	if ((a + b) < c and (b+c)<a and (a+c)<b):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo:", "equilatero")
		elif (a==b and b!=c or b==c and b!=a):
			print("Tipo de triangulo:", "isosceles")
	else:
		print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo:", "invalido")
		

-- EXECUTION TIME:
0.571393
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1674/1099/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:07:27) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if (a> 0) and (b>0) and (c>0):
# Testa se medidas correspondem aas de um triangulo
	if ((a + b) < c and (b+c)<a and (a+c)<b):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo:", "equilatero")
		elif (a==b and b!=c or b==c and b!=a):
			print("Tipo de triangulo:", "isosceles")
	else:
		print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo:", "invalido")
		

-- EXECUTION TIME:
0.509202
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1674/1099/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:07:27) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if (a> 0) and (b>0) and (c>0):
# Testa se medidas correspondem aas de um triangulo
	if ((a + b) < c and (b+c)<a and (a+c)<b):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo:", "equilatero")
		elif (a==b and b!=c or b==c and b!=a):
			print("Tipo de triangulo:", "isosceles")
	else:
		print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo:", "invalido")
		

-- EXECUTION TIME:
0.402087
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:08:04) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if (a> 0) and (b>0) and (c>0):
# Testa se medidas correspondem aas de um triangulo
	if ((a + b) < c and (b+c)<a and (a+c)<b):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo:", "equilatero")
		elif (a==b and b!=c or b==c and b!=a):
			print("Tipo de triangulo:", "isosceles")
	else:
		print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo:", "invalido")
		

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:09:17) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if (a> 0) and (b>0) and (c>0):
# Testa se medidas correspondem aas de um triangulo
	if ((a + b) < c and (b+c)<a and (a+c)<b):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo:", "equilatero")
		elif (a==b and b!=c or b==c and b!=a):
			print("Tipo de triangulo:", "isosceles")
		else:
			print("Tipo de triangulo:", "escaleno")
else:
	print("Tipo de triangulo:", "invalido")
		

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:10:57) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if (a> 0) and (b>0) and (c>0):
# Testa se medidas correspondem aas de um triangulo
	if ((a + b) < c and (b+c)<a and (a+c)<b):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo:", "equilatero")
		elif (a==b and b!=c or b==c and b!=a):
			print("Tipo de triangulo:", "isosceles")
		else:
			print("Tipo de triangulo:", "escaleno")
	else:
		print("Tipo de triangulo:", "invalido")
else:
	print("Tipo de triangulo:", "invalido")
		

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:11:08) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if (a> 0) and (b>0) and (c>0):
# Testa se medidas correspondem aas de um triangulo
	if ((a + b) < c and (b+c)<a and (a+c)<b):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo:", "equilatero")
		elif (a==b and b!=c or b==c and b!=a):
			print("Tipo de triangulo:", "isosceles")
		else:
			print("Tipo de triangulo:", "escaleno")
	else:
		print("Tipo de triangulo:", "invalido")
else:
	print("Tipo de triangulo:", "invalido")
		

-- EXECUTION TIME:
0.147844
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:11:35) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if (a> 0) and (b>0) and (c>0):
# Testa se medidas correspondem aas de um triangulo
	if ((a + b) < c and (b+c)<a and (a+c)<b):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo:", "equilatero")
		elif (a==b and b!=c or b==c and b!=a):
			print("Tipo de triangulo:", "isosceles")
		else:
			print("Tipo de triangulo:", "escaleno")
	else:
		print("Tipo de triangulo:", "invalido")
else:
	print("Tipo de triangulo:", "invalido")
		

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:13:58) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if (a> 0) and (b>0) and (c>0):
# Testa se medidas correspondem aas de um triangulo
	if ((a + b) < c and (b+c)<a and (a+c)<b):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo:", "equilatero")
		elif (a==b or b==c or c==a):
			print("Tipo de triangulo:", "isosceles")
		else:
			print("Tipo de triangulo:", "escaleno")
	else:
		print("Tipo de triangulo:", "invalido")
else:
	print("Tipo de triangulo:", "invalido")
		

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:14:50) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if (a> 0) and (b>0) and (c>0):
# Testa se medidas correspondem aas de um triangulo
	if ((a + b) < c and (b+c)<a and (a+c)<b):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo:", "equilatero")
		elif (a==b or b==c or c==a):
			print("Tipo de triangulo:", "isosceles")
		else:
			print("Tipo de triangulo:", "escaleno")
	else:
		print("Tipo de triangulo:", "invalido")
else:
	print("Tipo de triangulo:", "invalido")
		

-- EXECUTION TIME:
0.146433
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:15:30) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if (a> 0) and (b>0) and (c>0):
# Testa se medidas correspondem aas de um triangulo
	if ((a + b) < c and (b+c)<a and (a+c)<b):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo:", "equilatero")
		elif (a==b or b==c or c==a):
			print("Tipo de triangulo:", "isosceles")
		else:
			print("Tipo de triangulo:", "escaleno")
	else:
		print("Tipo de triangulo:", "invalido")
else:
	print("Tipo de triangulo:", "invalido")
		

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:15:42) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if (a> 0) and (b>0) and (c>0):
# Testa se medidas correspondem aas de um triangulo
	if ((a + b) < c and (b+c)<a and (a+c)<b):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo:", "equilatero")
		elif (a==b or b==c or c==a):
			print("Tipo de triangulo:", "isosceles")
		else:
			print("Tipo de triangulo:", "escaleno")
	else:
		print("Tipo de triangulo:", "invalido")
else:
	print("Tipo de triangulo:", "invalido")
		

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:19:36) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if (a> 0) and (b>0) and (c>0):
# Testa se medidas correspondem aas de um triangulo
	if ((a < b+c and (b< c +a  and (c<a+b):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo:", "equilatero")
		elif (a==b or b==c or c==a):
			print("Tipo de triangulo:", "isosceles")
		else:
			print("Tipo de triangulo:", "escaleno")
	else:
		print("Tipo de triangulo:", "invalido")
else:
	print("Tipo de triangulo:", "invalido")
		

-- ERROR:
File "XXXX", line 15
    if ((a < b+c and (b< c +a  and (c<a+b):
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:19:48) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if (a> 0) and (b>0) and (c>0):
# Testa se medidas correspondem aas de um triangulo
	if ((a < b+c) and (b< c +a)  and (c<a+b):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo:", "equilatero")
		elif (a==b or b==c or c==a):
			print("Tipo de triangulo:", "isosceles")
		else:
			print("Tipo de triangulo:", "escaleno")
	else:
		print("Tipo de triangulo:", "invalido")
else:
	print("Tipo de triangulo:", "invalido")
		

-- ERROR:
File "XXXX", line 15
    if ((a < b+c) and (b< c +a)  and (c<a+b):
                                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:19:57) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if (a> 0) and (b>0) and (c>0):
# Testa se medidas correspondem aas de um triangulo
	if ((a < b+c) and (b< c +a)  and (c<a+b)):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo:", "equilatero")
		elif (a==b or b==c or c==a):
			print("Tipo de triangulo:", "isosceles")
		else:
			print("Tipo de triangulo:", "escaleno")
	else:
		print("Tipo de triangulo:", "invalido")
else:
	print("Tipo de triangulo:", "invalido")
		

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 11:20:03) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if (a> 0) and (b>0) and (c>0):
# Testa se medidas correspondem aas de um triangulo
	if ((a < b+c) and (b< c +a)  and (c<a+b)):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo:", "equilatero")
		elif (a==b or b==c or c==a):
			print("Tipo de triangulo:", "isosceles")
		else:
			print("Tipo de triangulo:", "escaleno")
	else:
		print("Tipo de triangulo:", "invalido")
else:
	print("Tipo de triangulo:", "invalido")
		

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 11:20:08) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)
if (a> 0) and (b>0) and (c>0):
# Testa se medidas correspondem aas de um triangulo
	if ((a < b+c) and (b< c +a)  and (c<a+b)):
		if ((a==b) and (b==c)):
			print("Tipo de triangulo:", "equilatero")
		elif (a==b or b==c or c==a):
			print("Tipo de triangulo:", "isosceles")
		else:
			print("Tipo de triangulo:", "escaleno")
	else:
		print("Tipo de triangulo:", "invalido")
else:
	print("Tipo de triangulo:", "invalido")
		

-- EXECUTION TIME:
0.195895
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
