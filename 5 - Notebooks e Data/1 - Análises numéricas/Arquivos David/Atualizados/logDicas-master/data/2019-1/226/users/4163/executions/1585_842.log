== TEST (2019-03-28 10:18:16) 
-- CODE:
# Teste seu codigo aos poucos.
x = int(input())
# Nao teste tudo no final, pois fica mais dificil de identificar erros.

# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
primeiro_caso_de_teste
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:18:50) 
-- CODE:
# Teste seu codigo aos poucos.
x = int(input())
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
print(x)
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
9173
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:22:39) 
-- CODE:
# Teste seu codigo aos poucos.
x = int(input())
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
y = (x//10)
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
z = y%10

-- OUTPUT:
9173
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:23:41) 
-- CODE:
# Teste seu codigo aos poucos.
x = int(input())
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
y = int(x//10)
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
z = int(y%10)

-- OUTPUT:
9173
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:32:20) 
-- CODE:
# Teste seu codigo aos poucos.
x = int(input())
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
y = int(x%10)
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
print(y)

-- OUTPUT:
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:34:21) 
-- CODE:
# Teste seu codigo aos poucos.
x = int(input())
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
y = int(x%10)
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
z = int(x//10)
print(z)

-- OUTPUT:
917
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:36:39) 
-- CODE:
# Teste seu codigo aos poucos.
x = int(input())
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
y = int(x%10)#soma
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
z = int(x//10)
l = int(z%10)

print(l)

-- OUTPUT:
7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:38:37) 
-- CODE:
# Teste seu codigo aos poucos.
x = int(input())
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
y = int(x%10)#soma
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
z = int(x//10)
l = int(z%10)#soma
m = int(x//100)

print(m)

-- OUTPUT:
91
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:39:42) 
-- CODE:
# Teste seu codigo aos poucos.
x = int(input())
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
y = int(x%10)#soma
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
z = int(x//10)
l = int(z%10)#soma
m = int(x//100)
n = int(m%10)

print(n)

-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:40:46) 
-- CODE:
# Teste seu codigo aos poucos.
x = int(input())
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
y = int(x%10)#soma
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
z = int(x//10)
l = int(z%10)#soma
m = int(x//100)
n = int(m%10)#soma
o = int(x//1000)

print(o)

-- OUTPUT:
9
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:41:54) 
-- CODE:
# Teste seu codigo aos poucos.
x = int(input())
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
y = int(x%10)#soma
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
z = int(x//10)
l = int(z%10)#soma
m = int(x//100)
n = int(m%10)#soma
o = int(x//1000)#soma

print(y+l+n+o)

-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 10:42:13) 
-- CODE:
# Teste seu codigo aos poucos.
x = int(input())
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
y = int(x%10)#soma
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
z = int(x//10)
l = int(z%10)#soma
m = int(x//100)
n = int(m%10)#soma
o = int(x//1000)#soma

print(y+l+n+o)

-- EXECUTION TIME:
0.188718
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
