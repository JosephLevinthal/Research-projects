== TEST (2019-05-13 16:39:20) 
-- CODE:
n=int(input())
i=0
j=0
while(i<=n):
	i=i+1
	if(n%i==0):
		print(i)
		j=j+i
j=j-n
if(j==n):
	print("PERFEITO")
else:
	print("NAO PERFEITO")
		 
	
-- OUTPUT:
1
2
4
8
16
31
62
124
248
496
PERFEITO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 16:39:34) 
-- CODE:
n=int(input())
i=0
j=0
while(i<=n):
	i=i+1
	if(n%i==0):
		print(i)
		j=j+i
j=j-n
if(j==n):
	print("PERFEITO")
else:
	print("NAO PERFEITO")
		 
	
-- EXECUTION TIME:
0.131194
-- TEST CASE 1:
---- input:
496
---- correct output:
1
2
4
8
16
31
62
124
248
PERFEITO
---- user output:
1
2
4
8
16
31
62
124
248
496
PERFEITO
-- TEST CASE 2:
---- input:
8128
---- correct output:
1
2
4
8
16
32
64
127
254
508
1016
2032
4064
PERFEITO
---- user output:
1
2
4
8
16
32
64
127
254
508
1016
2032
4064
8128
PERFEITO
-- TEST CASE 3:
---- input:
20
---- correct output:
1
2
4
5
10
NAO PERFEITO
---- user output:
1
2
4
5
10
20
NAO PERFEITO
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 16:39:40) 
-- CODE:
n=int(input())
i=0
j=0
while(i<=n):
	i=i+1
	if(n%i==0):
		print(i)
		j=j+i
j=j-n
if(j==n):
	print("PERFEITO")
else:
	print("NAO PERFEITO")
		 
	
-- OUTPUT:
1
2
4
8
16
31
62
124
248
496
PERFEITO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 16:40:39) 
-- CODE:
n=int(input())
i=0
j=0
while(i<=n):
	i=i+1
	if(n%i==0 and n!=i):
		print(i)
		j=j+i
if(j==n):
	print("PERFEITO")
else:
	print("NAO PERFEITO")
		 
	
-- OUTPUT:
1
2
4
8
16
31
62
124
248
PERFEITO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 16:40:51) 
-- CODE:
n=int(input())
i=0
j=0
while(i<=n):
	i=i+1
	if(n%i==0 and n!=i):
		print(i)
		j=j+i
if(j==n):
	print("PERFEITO")
else:
	print("NAO PERFEITO")
		 
	
-- EXECUTION TIME:
0.18619
-- TEST CASE 1:
---- input:
496
---- correct output:
1
2
4
8
16
31
62
124
248
PERFEITO
---- user output:
1
2
4
8
16
31
62
124
248
PERFEITO
-- TEST CASE 2:
---- input:
8128
---- correct output:
1
2
4
8
16
32
64
127
254
508
1016
2032
4064
PERFEITO
---- user output:
1
2
4
8
16
32
64
127
254
508
1016
2032
4064
PERFEITO
-- TEST CASE 3:
---- input:
20
---- correct output:
1
2
4
5
10
NAO PERFEITO
---- user output:
1
2
4
5
10
NAO PERFEITO
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
