== TEST (2019-03-28 10:26:19) 
-- CODE:
obj = input("nome do objeto: ")

eq = abra + obj

eq1 = ((eq)*5)

print(eq1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    eq = abra + obj
NameError: name 'abra' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:27:11) 
-- CODE:
obj = input("nome do objeto: ")
obj1 = ("abra")
eq = obj1 + obj

eq1 = ((eq)*5)

print(eq1)
-- OUTPUT:
abralivroabralivroabralivroabralivroabralivro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 10:27:20) 
-- CODE:
obj = input("nome do objeto: ")
obj1 = ("abra")
eq = obj1 + obj

eq1 = ((eq)*5)

print(eq1)
-- EXECUTION TIME:
0.158978
-- TEST CASE 1:
---- input:
livro
8
---- correct output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
---- user output:
abralivroabralivroabralivroabralivroabralivro
-- TEST CASE 2:
---- input:
carro
2
---- correct output:
Abra carro Abra carro
---- user output:
abracarroabracarroabracarroabracarroabracarro
-- TEST CASE 3:
---- input:
caixa
1
---- correct output:
Abra caixa
---- user output:
abracaixaabracaixaabracaixaabracaixaabracaixa
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:27:46) 
-- CODE:
obj = input("nome do objeto: ")
obj1 = ("abra ")
eq = obj1 + obj

eq1 = (( eq )*5)

print(eq1)
-- OUTPUT:
abra livroabra livroabra livroabra livroabra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 10:27:59) 
-- CODE:
obj = input("nome do objeto: ")
obj1 = ("abra ")
eq = obj1 + obj

eq1 = (( eq )* 5)

print(eq1)
-- EXECUTION TIME:
0.137081
-- TEST CASE 1:
---- input:
livro
8
---- correct output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
---- user output:
abra livroabra livroabra livroabra livroabra livro
-- TEST CASE 2:
---- input:
carro
2
---- correct output:
Abra carro Abra carro
---- user output:
abra carroabra carroabra carroabra carroabra carro
-- TEST CASE 3:
---- input:
caixa
1
---- correct output:
Abra caixa
---- user output:
abra caixaabra caixaabra caixaabra caixaabra caixa
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:27:59) 
-- CODE:
obj = input("nome do objeto: ")
obj1 = ("abra ")
eq = obj1 + obj

eq1 = (( eq )* 5)

print(eq1)
-- OUTPUT:
abra livroabra livroabra livroabra livroabra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:29:20) 
-- CODE:
obj = input("nome do objeto: ")
obj1 = ("abra ")
eq = obj1 + obj

eq1 = (( eq )* 5)
eq2 = ( )


print(eq1 + eq2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(eq1 + eq2)
TypeError: must be str, not tuple
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 10:30:51) 
-- CODE:
obj = input("nome do objeto: ")
obj1 = ("abra ")
eq = obj1 + obj

eq1 = (( eq )* 5)
eq2 = (  )


print(eq1 + eq2)
-- EXECUTION TIME:
0.172
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1593/1801/main.py", line 9, in <module>
    print(eq1 + eq2)
TypeError: Can't convert 'tuple' object to str implicitly

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:30:52) 
-- CODE:
obj = input("nome do objeto: ")
obj1 = ("abra ")
eq = obj1 + obj

eq1 = (( eq )* 5)
eq2 = (  )


print(eq1 + eq2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(eq1 + eq2)
TypeError: must be str, not tuple
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:31:06) 
-- CODE:
obj = input("nome do objeto: ")
obj1 = ("abra ")
eq = obj1 + obj

eq1 = (( eq )* 5)
eq2 = (f)


print(eq1 + eq2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    eq2 = (f)
NameError: name 'f' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:32:09) 
-- CODE:
obj = input("nome do objeto: ")
obj1 = ("abra ")
obj3 = (" ")
eq = obj1 + obj

eq1 = (( eq )* 5)
eq2 = (eq1 + obj3)


print(eq1 + eq2)
-- OUTPUT:
abra livroabra livroabra livroabra livroabra livroabra livroabra livroabra livroabra livroabra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:33:03) 
-- CODE:
obj = input("nome do objeto: ")
obj1 = ("abra ")
obj3 = (" ")
eq = obj1 + obj + obj3

eq1 = (( eq )* 5)

print(eq1)
-- OUTPUT:
abra livro abra livro abra livro abra livro abra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 10:33:10) 
-- CODE:
obj = input("nome do objeto: ")
obj1 = ("abra ")
obj3 = (" ")
eq = obj1 + obj + obj3

eq1 = (( eq )* 5)

print(eq1)
-- EXECUTION TIME:
0.180694
-- TEST CASE 1:
---- input:
livro
8
---- correct output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
---- user output:
abra livro abra livro abra livro abra livro abra livro
-- TEST CASE 2:
---- input:
carro
2
---- correct output:
Abra carro Abra carro
---- user output:
abra carro abra carro abra carro abra carro abra carro
-- TEST CASE 3:
---- input:
caixa
1
---- correct output:
Abra caixa
---- user output:
abra caixa abra caixa abra caixa abra caixa abra caixa
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:33:15) 
-- CODE:
obj = input("nome do objeto: ")
obj1 = ("abra ")
obj3 = (" ")
eq = obj1 + obj + obj3

eq1 = (( eq )* 5)

print(eq1)
-- OUTPUT:
abra livro abra livro abra livro abra livro abra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 10:33:32) 
-- CODE:
obj = input("nome do objeto: ")
obj1 = ("abra ")
obj3 = (" ")
eq = obj1 + obj + obj3

eq1 = (( eq )* 5)

print(eq1)
-- EXECUTION TIME:
0.140481
-- TEST CASE 1:
---- input:
livro
8
---- correct output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
---- user output:
abra livro abra livro abra livro abra livro abra livro
-- TEST CASE 2:
---- input:
carro
2
---- correct output:
Abra carro Abra carro
---- user output:
abra carro abra carro abra carro abra carro abra carro
-- TEST CASE 3:
---- input:
caixa
1
---- correct output:
Abra caixa
---- user output:
abra caixa abra caixa abra caixa abra caixa abra caixa
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 10:34:16) 
-- CODE:
obj = input("nome do objeto: ")
obj1 = ("abra")
obj3 = (" ")
eq = obj1 + obj + obj3

eq1 = (( eq )* 5)

print(eq1)
-- EXECUTION TIME:
0.18902
-- TEST CASE 1:
---- input:
livro
8
---- correct output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
---- user output:
abralivro abralivro abralivro abralivro abralivro
-- TEST CASE 2:
---- input:
carro
2
---- correct output:
Abra carro Abra carro
---- user output:
abracarro abracarro abracarro abracarro abracarro
-- TEST CASE 3:
---- input:
caixa
1
---- correct output:
Abra caixa
---- user output:
abracaixa abracaixa abracaixa abracaixa abracaixa
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:35:11) 
-- CODE:
obj = input("nome do objeto: ")
vzs = input("Numero de vezes: ")
obj1 = ("abra")
obj3 = (" ")
eq = obj1 + obj + obj3

eq1 = (( eq )* vzs)

print(eq1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    eq1 = (( eq )* vzs)
TypeError: can't multiply sequence by non-int of type 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:35:34) 
-- CODE:
obj = input("nome do objeto: ")
vzs = input("Numero de vezes: ")
obj1 = ("abra")
obj3 = (" ")
eq = obj1 + obj + obj3

eq1 = ( eq )* vzs

print(eq1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    eq1 = ( eq )* vzs
TypeError: can't multiply sequence by non-int of type 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:35:34) 
-- CODE:
obj = input("nome do objeto: ")
vzs = input("Numero de vezes: ")
obj1 = ("abra")
obj3 = (" ")
eq = obj1 + obj + obj3

eq1 = ( eq )* vzs

print(eq1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    eq1 = ( eq )* vzs
TypeError: can't multiply sequence by non-int of type 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:36:20) 
-- CODE:
obj = input("nome do objeto: ")
vzs = input("Numero de vezes: ")
obj1 = ("abra")
obj3 = (" ")
eq = obj1 + obj + obj3

eq1 = (eq)

print(eq1 * vzs)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(eq1 * vzs)
TypeError: can't multiply sequence by non-int of type 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:36:53) 
-- CODE:
obj = input("nome do objeto: ")
vzs = input("Numero de vezes: ")
obj1 = ("abra")
obj3 = (" ")
eq = ((obj1 + obj + obj3) * vzs)

eq1 = (eq)

print(eq1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    eq = ((obj1 + obj + obj3) * vzs)
TypeError: can't multiply sequence by non-int of type 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:37:29) 
-- CODE:
obj = input("nome do objeto: ")
vzs = input(int("Numero de vezes: ")
obj1 = ("abra")
obj3 = (" ")
eq = ((obj1 + obj + obj3) * vzs)

eq1 = (eq)

print(eq1)
-- ERROR:
File "XXXX", line 3
    obj1 = ("abra")
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:37:54) 
-- CODE:
obj = input("nome do objeto: ")
obj1 = ("abra")
obj3 = (" ")
vzs = input(int("Numero de vezes: ")
eq = ((obj1 + obj + obj3) * vzs)

eq1 = (eq)

print(eq1)
-- ERROR:
File "XXXX", line 5
    eq = ((obj1 + obj + obj3) * vzs)
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:38:37) 
-- CODE:
obj = input("nome do objeto: ")
obj1 = ("abra")
obj3 = (" ")
vz = input(int("Numero de vezes: ")

eq = (obj1 + obj + obj3) * vz)

eq1 = (eq)

print(eq1)
-- ERROR:
File "XXXX", line 6
    eq = (obj1 + obj + obj3) * vz)
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:38:46) 
-- CODE:
obj = input("nome do objeto: ")
obj1 = ("abra")
obj3 = (" ")
vz = input(int("Numero de vezes: ")

eq = obj1 + obj + obj3) * vz

eq1 = (eq)

print(eq1)
-- ERROR:
File "XXXX", line 6
    eq = obj1 + obj + obj3) * vz
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:39:10) 
-- CODE:
obj = input("nome do objeto: ")
obj1 = ("abra")
obj3 = (" ")
x = input(int("Numero de vezes: ")

eq = obj1 + obj + obj3)*x

eq1 = (eq)

print(eq1)
-- ERROR:
File "XXXX", line 6
    eq = obj1 + obj + obj3)*x
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:40:00) 
-- CODE:
obj = input("nome do objeto: ")
obj1 = ("abra")
obj3 = (" ")
x = (int(input("Numero de vezes: ")))

eq = (obj1 + obj + obj3)*x

eq1 = (eq)

print(eq1)
-- OUTPUT:
abralivro abralivro abralivro abralivro abralivro abralivro abralivro abralivro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:40:57) 
-- CODE:
obj1 = ("abra")
ob2 = (" ")
obj = input("nome do objeto: ")
obj3 = (" ")
x = (int(input("Numero de vezes: ")))

eq = (obj1 + ob2 + obj + obj3)*x

eq1 = (eq)

print(eq1)
-- OUTPUT:
abra livro abra livro abra livro abra livro abra livro abra livro abra livro abra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 10:41:03) 
-- CODE:
obj1 = ("abra")
ob2 = (" ")
obj = input("nome do objeto: ")
obj3 = (" ")
x = (int(input("Numero de vezes: ")))

eq = (obj1 + ob2 + obj + obj3)*x

eq1 = (eq)

print(eq1)
-- EXECUTION TIME:
0.180654
-- TEST CASE 1:
---- input:
livro
8
---- correct output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
---- user output:
abra livro abra livro abra livro abra livro abra livro abra livro abra livro abra livro
-- TEST CASE 2:
---- input:
carro
2
---- correct output:
Abra carro Abra carro
---- user output:
abra carro abra carro
-- TEST CASE 3:
---- input:
caixa
1
---- correct output:
Abra caixa
---- user output:
abra caixa
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:41:58) 
-- CODE:
obj1 = ("abra")
ob2 = (" ")
obj = input("nome do objeto: ")
obj3 = (" ")
x = (int(input("Numero de vezes: ")))

eq = (obj1 + ob2 + obj + obj3)

eq1 = (eq)

print(eq1 * x)
-- OUTPUT:
abra livro abra livro abra livro abra livro abra livro abra livro abra livro abra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 10:42:10) 
-- CODE:
obj1 = ("abra")
ob2 = (" ")
obj = input("nome do objeto: ")
obj3 = (" ")
x = (int(input("Numero de vezes: ")))

eq = (obj1 + ob2 + obj + obj3)

eq1 = (eq)

print(eq1 * x)
-- EXECUTION TIME:
0.185439
-- TEST CASE 1:
---- input:
livro
8
---- correct output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
---- user output:
abra livro abra livro abra livro abra livro abra livro abra livro abra livro abra livro
-- TEST CASE 2:
---- input:
carro
2
---- correct output:
Abra carro Abra carro
---- user output:
abra carro abra carro
-- TEST CASE 3:
---- input:
caixa
1
---- correct output:
Abra caixa
---- user output:
abra caixa
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:45:19) 
-- CODE:
ob2 = (" ")
obj = input("nome do objeto: ")
x = (int(input("Numero de vezes: ")))

eq = (obj1 + ob2 + obj + obj3)

eq1 = (eq)

print(d*("abra" + ob2 + obj + ob2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    eq = (obj1 + ob2 + obj + obj3)
NameError: name 'obj1' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:45:34) 
-- CODE:
ob2 = (" ")
obj = input("nome do objeto: ")
x = (int(input("Numero de vezes: ")))

print(d*("abra" + ob2 + obj + ob2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(d*("abra" + ob2 + obj + ob2))
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:45:46) 
-- CODE:
ob2 = (" ")
obj = input("nome do objeto: ")
x = (int(input("Numero de vezes: ")))

print(x*("abra" + ob2 + obj + ob2))
-- OUTPUT:
abra livro abra livro abra livro abra livro abra livro abra livro abra livro abra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 10:45:54) 
-- CODE:
ob2 = (" ")
obj = input("nome do objeto: ")
x = (int(input("Numero de vezes: ")))

print(x*("abra" + ob2 + obj + ob2))
-- EXECUTION TIME:
0.12368
-- TEST CASE 1:
---- input:
livro
8
---- correct output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
---- user output:
abra livro abra livro abra livro abra livro abra livro abra livro abra livro abra livro
-- TEST CASE 2:
---- input:
carro
2
---- correct output:
Abra carro Abra carro
---- user output:
abra carro abra carro
-- TEST CASE 3:
---- input:
caixa
1
---- correct output:
Abra caixa
---- user output:
abra caixa
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:46:25) 
-- CODE:
obj = input("nome do objeto: ")
x = (int(input("Numero de vezes: ")))

print(x*("abra" + " " + obj + " "))
-- OUTPUT:
abra livro abra livro abra livro abra livro abra livro abra livro abra livro abra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 10:46:31) 
-- CODE:
obj = input("nome do objeto: ")
x = (int(input("Numero de vezes: ")))

print(x*("abra" + " " + obj + " "))
-- EXECUTION TIME:
0.180928
-- TEST CASE 1:
---- input:
livro
8
---- correct output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
---- user output:
abra livro abra livro abra livro abra livro abra livro abra livro abra livro abra livro
-- TEST CASE 2:
---- input:
carro
2
---- correct output:
Abra carro Abra carro
---- user output:
abra carro abra carro
-- TEST CASE 3:
---- input:
caixa
1
---- correct output:
Abra caixa
---- user output:
abra caixa
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 10:47:21) 
-- CODE:
obj = input("nome do objeto: ")
x = (int(input("Numero de vezes: ")))

print(x*("abra " + obj + " "))
-- EXECUTION TIME:
0.14606
-- TEST CASE 1:
---- input:
livro
8
---- correct output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
---- user output:
abra livro abra livro abra livro abra livro abra livro abra livro abra livro abra livro
-- TEST CASE 2:
---- input:
carro
2
---- correct output:
Abra carro Abra carro
---- user output:
abra carro abra carro
-- TEST CASE 3:
---- input:
caixa
1
---- correct output:
Abra caixa
---- user output:
abra caixa
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:47:22) 
-- CODE:
obj = input("nome do objeto: ")
x = (int(input("Numero de vezes: ")))

print(x*("abra " + obj + " "))
-- OUTPUT:
abra livro abra livro abra livro abra livro abra livro abra livro abra livro abra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 10:47:40) 
-- CODE:
obj = input("nome do objeto: ")
x = (int(input("Numero de vezes: ")))

print(x*("abra " + obj + " "))
-- OUTPUT:
abra livro abra livro abra livro abra livro abra livro abra livro abra livro abra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 10:47:59) 
-- CODE:
obj = input("nome do objeto: ")
x = (int(input("Numero de vezes: ")))

print(x*("Abra " + obj + " "))
-- EXECUTION TIME:
0.135306
-- TEST CASE 1:
---- input:
livro
8
---- correct output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
---- user output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
-- TEST CASE 2:
---- input:
carro
2
---- correct output:
Abra carro Abra carro
---- user output:
Abra carro Abra carro
-- TEST CASE 3:
---- input:
caixa
1
---- correct output:
Abra caixa
---- user output:
Abra caixa
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
