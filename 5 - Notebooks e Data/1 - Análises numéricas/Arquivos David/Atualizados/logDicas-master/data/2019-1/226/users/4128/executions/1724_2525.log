== TEST (2019-05-14 11:19:34) 
-- CODE:
a = int(input("kkkkkkkk:"))

i = 0 

while(i < a):
	a = a / i
	i = i + 1
	print(a)
print(i,"divisores")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    a = a / i
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 11:20:01) 
-- CODE:
a = int(input("kkkkkkkk:"))

i = 0 

while(i < a):
	a = a / k
	k = k + 1 
	i = i + 1
	print(a)
print(i,"divisores")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    a = a / k
NameError: name 'k' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 11:20:13) 
-- CODE:
a = int(input("kkkkkkkk:"))

k = 1
i = 0 

while(i < a):
	a = a / k
	k = k + 1 
	i = i + 1
	print(a)
print(i,"divisores")
-- OUTPUT:
12.0
6.0
2.0
3 divisores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 11:21:17) 
-- CODE:
a = int(input("kkkkkkkk:"))

k = 1
i = 0 

while(i < a):
	print(a)
	a = a / k
	i = i + 1
	k = k + 1 
print(i,"divisores")
-- OUTPUT:
12
12.0
6.0
3 divisores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 11:22:11) 
-- CODE:
a = int(input("kkkkkkkk:"))

k = 1
i = 0 

while(i < a):
	a = a // k
	i = i + 1
	k = k + 1 
	print(a)
print(i,"divisores")
-- OUTPUT:
12
6
2
3 divisores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 11:24:45) 
-- CODE:
a = int(input("thanos:"))

k = 1
i = 0 

while(i < a):
	a = a // k
	i = i + 1
	k = k + 1 
	print(a)
	if(k == a)
		print(i,"divisores")
	else:
		print(i,"divisor")
-- ERROR:
File "XXXX", line 11
    if(k == a)
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 11:24:55) 
-- CODE:
a = int(input("thanos:"))

k = 1
i = 0 

while(i < a):
	a = a // k
	i = i + 1
	k = k + 1 
	print(a)
	if(k == a):
		print(i,"divisores")
	else:
		print(i,"divisor")
-- OUTPUT:
12
1 divisor
6
2 divisor
2
3 divisor
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 11:25:16) 
-- CODE:
a = int(input("thanos:"))

k = 1
i = 0 

while(i < a):
	a = a // k
	i = i + 1
	k = k + 1 
	print(a)
if(k == a):
	print(i,"divisores")
else:
	print(i,"divisor")
-- OUTPUT:
12
6
2
3 divisor
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 11:25:31) 
-- CODE:
a = int(input("thanos:"))

k = 1
i = 0 

while(i < a):
	a = a // k
	i = i + 1
	k = k + 1 
	print(a)
if(k == a):
	print(i,"divisor")
else:
	print(i,"divisores")
-- OUTPUT:
12
6
2
3 divisores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 11:25:45) 
-- CODE:
a = int(input("thanos:"))

k = 1
i = 0 

while(i < a):
	a = a // k
	i = i + 1
	k = k + 1 
	print(a)
if(k == a):
	print(i,"divisor")
else:
	print(i,"divisores")
-- OUTPUT:
12
6
2
3 divisores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 11:26:09) 
-- CODE:
a = int(input("thanos:"))

k = 1
i = 0 

while(i < a):
	i = i + 1
	k = k + 1 
	a = a // k
	print(a)
if(k == a):
	print(i,"divisor")
else:
	print(i,"divisores")
-- OUTPUT:
6
2
2 divisores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 11:26:59) 
-- CODE:
a = int(input("thanos:"))

k = 1
i = 0 

while(i < a):
	i = i + 1
	k = k + 1 
	a = a % k
	print(a)
if(k == a):
	print(i,"divisor")
else:
	print(i,"divisores")
-- OUTPUT:
0
1 divisores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 11:29:51) 
-- CODE:
a = int(input("thanos:"))

k = 1
i = 0 

while(i < a):
	a = a % k
	i = i + 1
	k = k + 1 
	
	print(a)
if(k == a):
	print(i,"divisor")
else:
	print(i,"divisores")
-- OUTPUT:
0
1 divisores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 11:33:03) 
-- CODE:
a = int(input("thanos:"))

k = 1
i = 0 

while(i < a):
	a = a // k
	i = i + 1
	k = k + 1 
	
	print(a)
if(k == a):
	print(i,"divisor")
else:
	print(i,"divisores")
-- OUTPUT:
12
6
2
3 divisores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 10:15:23) 
-- CODE:
a = int(input("thanos:"))
k = 1
i = 0 

while(i < a):
	a = a // k
	i = i + 1
	k = k + 1 
	
	print(a)
if(k == a):
	print("1 divisor")
else:
	print(i,"divisores")
-- OUTPUT:
12
6
2
3 divisores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
