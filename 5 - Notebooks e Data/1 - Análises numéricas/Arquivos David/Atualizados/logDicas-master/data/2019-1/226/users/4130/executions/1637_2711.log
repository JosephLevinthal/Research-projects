== SUBMITION (2019-04-09 11:49:12) 
-- CODE:
x = int(input("Valor disponivel: "))
x1 = int(input("Tickets que quer comprar: "))
x2 = float(input("Valor dos tickets: "))
x3 = int(input("Quantidade de passes do onibus: "))
x4 = float(input("Valor dos passes: "))

total = x - ((x1 * x2) + (x3 * x4)) 

if(total > 0):
	mensagem = "suficiente".upper()
if(total < 0):
	mensagem = "insuficiente".upper()
	
print(mensagem)
-- EXECUTION TIME:
0.227202
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
Valor disponivel: Tickets que quer comprar: Valor dos tickets: Quantidade de passes do onibus: Valor dos passes: SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
Valor disponivel: Tickets que quer comprar: Valor dos tickets: Quantidade de passes do onibus: Valor dos passes: INSUFICIENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:49:45) 
-- CODE:
x = int(input("Valor disponivel: "))
x1 = int(input("Tickets que quer comprar: "))
x2 = float(input("Valor dos tickets: "))
x3 = int(input("Quantidade de passes do onibus: "))
x4 = float(input("Valor dos passes: "))

total = x - ((x1 * x2) + (x3 * x4)) 

if(total > 0):
	mensagem = "suficiente".upper()
if(total < 0):
	mensagem = "insuficiente".upper()
	
print(mensagem)
-- EXECUTION TIME:
0.144019
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
INSUFICIENTE
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:50:56) 
-- CODE:
x = int(input("Valor disponivel: "))
x1 = int(input("Tickets que quer comprar: "))
x2 = float(input("Valor dos tickets: "))
x3 = int(input("Quantidade de passes do onibus: "))
x4 = float(input("Valor dos passes: "))

total = x - ((x1 * x2) + (x3 * x4)) 

if(total > 0):
	mensagem = "suficiente".upper()
if(total < 0):
	mensagem = "insuficiente".upper()
	
print(mensagem)
-- EXECUTION TIME:
0.155249
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
INSUFICIENTE
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:51:10) 
-- CODE:
x = int(input("Valor disponivel: "))
x1 = int(input("Tickets que quer comprar: "))
x2 = float(input("Valor dos tickets: "))
x3 = int(input("Quantidade de passes do onibus: "))
x4 = float(input("Valor dos passes: "))

total = x - ((x1 * x2) + (x3 * x4)) 

if(total > 0):
	mensagem = "suficiente".upper()
if(total < 0):
	mensagem = "insuficiente".upper()
	
print(mensagem)
-- EXECUTION TIME:
0.143251
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
INSUFICIENTE
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 15:30:07) 
-- CODE:
x = int(input("Valor disponivel: "))
x1 = int(input("Tickets que quer comprar: "))
x2 = float(input("Valor dos tickets: "))
x3 = int(input("Quantidade de passes do onibus: "))
x4 = float(input("Valor dos passes: "))

total = x - ((x1 * x2) + (x3 * x4)) 

if(total > 0):
	mensagem = "suficiente".upper()
if(total < 0):
	mensagem = "insuficiente".upper()
	
print(mensagem)
-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 15:30:40) 
-- CODE:
x = int(input("Valor disponivel: "))
x1 = int(input("Tickets que quer comprar: "))
x2 = float(input("Valor dos tickets: "))
x3 = int(input("Quantidade de passes do onibus: "))
x4 = float(input("Valor dos passes: "))

total = x - ((x1 * x2) + (x3 * x4)) 

if(total > 0):
	mensagem = "suficiente".upper()
if(total < 0):
	mensagem = "insuficiente".upper()
	
print(mensagem)
-- EXECUTION TIME:
0.183261
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
INSUFICIENTE
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
