== TEST (2019-04-30 10:37:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("insira a:"))
b = float(input("insira b:"))
c = float(input("insira c:"))
d = float(input("insira d:"))

print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)

if( b < a or d <c):
	print("Entradas invalidas")

elif((b > d) and (c > a)):
	print("Ha intersecao")

elif((d < b) and ( a > c)):
	print("Nao ha intersecao")

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:37:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("insira a:"))
b = float(input("insira b:"))
c = float(input("insira c:"))
d = float(input("insira d:"))

print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)

if( b < a or d <c):
	print("Entradas invalidas")

elif((b > d) and (c > a)):
	print("Ha intersecao")

elif((d < b) and ( a > c)):
	print("Nao ha intersecao")

-- EXECUTION TIME:
0.15075
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:43:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("insira a:"))
b = float(input("insira b:"))
c = float(input("insira c:"))
d = float(input("insira d:"))

print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)

if( b < a or d <c):
	print("Entradas invalidas")

elif((c <= b) and (d >= a)):
	print("Ha intersecao")

else:
	print("Nao ha intersecao")

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:43:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("insira a:"))
b = float(input("insira b:"))
c = float(input("insira c:"))
d = float(input("insira d:"))

print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)

if( b < a or d <c):
	print("Entradas invalidas")

elif((c <= b) and (d >= a)):
	print("Ha intersecao")

else:
	print("Nao ha intersecao")

-- EXECUTION TIME:
0.120176
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
