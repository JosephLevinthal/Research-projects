== TEST (2019-04-30 20:26:08) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustível no tanque:"))
r = float(input("Raio dos bojos semiesféricos infeior e superior:"))

vlc = (pi*(r**2)* H)
vle = (((4/3)*pi)*r**3)
vlca = ((pi/3)*H**2)*(3r - H)

if(( H < 0 or h < 0 or r < 0) and H > h and h > 2*r)
	print("Entradas:", H, h, r)
	print("Entradas invalidas")

else:
-- ERROR:
File "XXXX", line 13
    vlca = ((pi/3)*H**2)*(3r - H)
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 20:26:29) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustível no tanque:"))
r = float(input("Raio dos bojos semiesféricos infeior e superior:"))

vlc = (pi*(r**2)* H)
vle = (((4/3)*pi)*r**3)
vlca = ((pi/3)*H**2)*(3*r - H)

if(( H < 0 or h < 0 or r < 0) and H > h and h > 2*r)
	print("Entradas:", H, h, r)
	print("Entradas invalidas")

else:
-- ERROR:
File "XXXX", line 15
    if(( H < 0 or h < 0 or r < 0) and H > h and h > 2*r)
                                                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 20:26:36) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustível no tanque:"))
r = float(input("Raio dos bojos semiesféricos infeior e superior:"))

vlc = (pi*(r**2)* H)
vle = (((4/3)*pi)*r**3)
vlca = ((pi/3)*H**2)*(3*r - H)

if(( H < 0 or h < 0 or r < 0) and H > h and h > 2*r):
	print("Entradas:", H, h, r)
	print("Entradas invalidas")

else:
-- ERROR:
File "XXXX", line 20
    
         ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 20:26:43) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustível no tanque:"))
r = float(input("Raio dos bojos semiesféricos infeior e superior:"))

vlc = (pi*(r**2)* H)
vle = (((4/3)*pi)*r**3)
vlca = ((pi/3)*H**2)*(3*r - H)

if(( H < 0 or h < 0 or r < 0) and H > h and h > 2*r):
	print("Entradas:", H, h, r)
	print("Entradas invalidas")


-- ERROR:
File "XXXX", line 20
    
         ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 20:27:01) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustível no tanque:"))
r = float(input("Raio dos bojos semiesféricos infeior e superior:"))

vlc = (pi*(r**2)* H)
vle = (((4/3)*pi)*r**3)
vlca = ((pi/3)*H**2)*(3*r - H)

if(( H < 0 or h < 0 or r < 0) and H > h and h > 2*r):
	print("Entradas:", H, h, r)
	print("Entradas invalidas")


-- ERROR:
File "XXXX", line 20
    
         ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 10:13:09) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustível no tanque:"))
r = float(input("Raio dos bojos semiesféricos infeior e superior:"))

vlc = (pi*(r**2)* H) #volume do cilindro#
vle = (((4/3)*pi)*r**3) #volume da esfera#
vlca = ((pi/3)*H**2)*(3*r - H) #volume da calota semiesférica#

#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if(( H < 0 or h < 0 or r < 0) and H > h and h > 2*r):
	print("Entradas:", H, h, r)
	print("Entradas invalidas")
elif(h == vlca):
	print("Entradas:", H, h, r)
	print("Volume:", vlca*1000, "litros")
elif(h > vlca and h < vlca+vle-vlc ):
	print("Entradas:", H, h, r)
	print("Volume:", (vlc+vlca)*1000, "litros")
elif(h > vlca+vlc):
	print("Entradas:", H, h, r)
	print("Volume:", (vlc+vle)*1000, "litros")
	


-- OUTPUT:
Entradas: 11.3 5.7 2.3
Volume: 238759.99447527304 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 10:13:28) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesféricos infeior e superior:"))

vlc = (pi*(r**2)* H) #volume do cilindro#
vle = (((4/3)*pi)*r**3) #volume da esfera#
vlca = ((pi/3)*H**2)*(3*r - H) #volume da calota semiesférica#

#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if(( H < 0 or h < 0 or r < 0) and H > h and h > 2*r):
	print("Entradas:", H, h, r)
	print("Entradas invalidas")
elif(h == vlca):
	print("Entradas:", H, h, r)
	print("Volume:", vlca*1000, "litros")
elif(h > vlca and h < vlca+vle-vlc ):
	print("Entradas:", H, h, r)
	print("Volume:", (vlc+vlca)*1000, "litros")
elif(h > vlca+vlc):
	print("Entradas:", H, h, r)
	print("Volume:", (vlc+vle)*1000, "litros")
	


-- OUTPUT:
Entradas: 11.3 5.7 2.3
Volume: 238759.99447527304 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 10:13:41) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

vlc = (pi*(r**2)* H) #volume do cilindro#
vle = (((4/3)*pi)*r**3) #volume da esfera#
vlca = ((pi/3)*H**2)*(3*r - H) #volume da calota semiesférica#

#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if(( H < 0 or h < 0 or r < 0) and H > h and h > 2*r):
	print("Entradas:", H, h, r)
	print("Entradas invalidas")
elif(h == vlca):
	print("Entradas:", H, h, r)
	print("Volume:", vlca*1000, "litros")
elif(h > vlca and h < vlca+vle-vlc ):
	print("Entradas:", H, h, r)
	print("Volume:", (vlc+vlca)*1000, "litros")
elif(h > vlca+vlc):
	print("Entradas:", H, h, r)
	print("Volume:", (vlc+vle)*1000, "litros")
	


-- OUTPUT:
Entradas: 11.3 5.7 2.3
Volume: 238759.99447527304 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 10:17:00) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

vlc = (pi*(r**2)* H) #volume do cilindro#
vle = (((4/3)*pi)*r**3) #volume da esfera#
vlca = ((pi/3)*H**2)*(3*r - H) #volume da calota semiesférica#

#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if(( H < 0 or h < 0 or r < 0) and H > h and h > 2*r):
	print("Entradas:", H, h, r)
	print("Entradas invalidas")
elif(h == vlca):
	print("Entradas:", H, h, r)
	print("Volume:", vlca*1000, "litros")
elif(h > vlca and h < vlca+(vle/2) ):
	print("Entradas:", H, h, r)
	print("Volume:", (vlc+vlca)*1000, "litros")
elif(h > vlca+vlc):
	print("Entradas:", H, h, r)
	print("Volume:", (vlc+vle)*1000, "litros")
	


-- OUTPUT:
Entradas: 11.3 5.7 2.3
Volume: 238759.99447527304 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 10:18:40) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

vlc = (pi*(r**2)* h) #volume do cilindro#
vle = (((4/3)*pi)*r**3) #volume da esfera#
vlca = ((pi/3)*h**2)*(3*r - h) #volume da calota semiesférica#

#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if(( H < 0 or h < 0 or r < 0) and H > h and h > 2*r):
	print("Entradas:", H, h, r)
	print("Entradas invalidas")
elif(h == vlca):
	print("Entradas:", H, h, r)
	print("Volume:", vlca*1000, "litros")
elif(h > vlca and h < vlca+vle-vlc ):
	print("Entradas:", H, h, r)
	print("Volume:", (vlc+vlca)*1000, "litros")
elif(h > vlca+vlc):
	print("Entradas:", H, h, r)
	print("Volume:", (vlc+vle)*1000, "litros")
	


-- OUTPUT:
Entradas: 11.3 5.7 2.3
Volume: 238759.99447527304 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 10:21:21) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

vlc = (pi*(r**2)* h) #volume do cilindro#
vle = (((4/3)*pi)*r**3) #volume da esfera#
vlca = ((pi/3)*h**2)*(3*r - h) #volume da calota semiesférica#
vlt = vlc+vle #volume do tanque#

#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if(( H < 0 or h < 0 or r < 0) and H > h and h > 2*r):
	print("Entradas:", H, h, r)
	print("Entradas invalidas")
elif(h == vlca):
	print("Entradas:", H, h, r)
	print("Volume:", vlca*1000, "litros")
elif(h > vlca and h < vlca+vle-vlc ):
	print("Entradas:", H, h, r)
	print("Volume:", (vlt-vlc)*1000, "litros")
elif(h > vlca+vlc):
	print("Entradas:", H, h, r)
	print("Volume:", (vlc+vle)*1000, "litros")
	


-- OUTPUT:
Entradas: 11.3 5.7 2.3
Volume: 238759.99447527304 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 10:22:21) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

vlc = (pi*(r**2)* h) #volume do cilindro#
vle = (((4/3)*pi)*r**3) #volume da esfera#
vlca = ((pi/3)*h**2)*(3*r - h) #volume da calota semiesférica#
vlt = vlc+vle #volume do tanque#

#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if(( H < 0 or h < 0 or r < 0) and H > h and h > 2*r):
	print("Entradas:", H, h, r)
	print("Entradas invalidas")
elif(h == vlca):
	print("Entradas:", H, h, r)
	print("Volume:", vlca*1000, "litros")
elif(h > vlca and h <= vlt-vlc ):
	print("Entradas:", H, h, r)
	print("Volume:", (vlt-vlc)*1000, "litros")
elif(h > vlca+vlc):
	print("Entradas:", H, h, r)
	print("Volume:", (vlc+vle)*1000, "litros")
	


-- OUTPUT:
Entradas: 11.3 5.7 2.3
Volume: 238759.99447527304 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 10:23:03) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

vlc = (pi*(r**2)* h) #volume do cilindro#
vle = (((4/3)*pi)*r**3) #volume da esfera#
vlca = ((pi/3)*h**2)*(3*r - h) #volume da calota semiesférica#
vlt = vlc+vle #volume do tanque#

#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if(( H < 0 or h < 0 or r < 0) and H > h and h > 2*r):
	print("Entradas:", H, h, r)
	print("Entradas invalidas")
elif(h == vlca):
	print("Entradas:", H, h, r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(h > vlca and h <= vlt-vlc ):
	print("Entradas:", H, h, r)
	print("Volume:", round((vlt-vlc)*1000, 3), "litros")
elif(h > vlca+vlc):
	print("Entradas:", H, h, r)
	print("Volume:", round((vlc+vle)*1000, 3), "litros")
	


-- OUTPUT:
Entradas: 11.3 5.7 2.3
Volume: 238759.99447527304 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 10:24:16) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

vlc = (pi*(r**2)* h) #volume do cilindro#
vle = (((4/3)*pi)*r**3) #volume da esfera#
vlca = ((pi/3)*h**2)*(3*r - h) #volume da calota semiesférica#
vlt = vlc+vle #volume do tanque#

#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if(( H < 0 or h < 0 or r < 0) and H > h and h > 2*r):
	print("Entradas:", H, h, r)
	print("Entradas invalidas")
elif(h == vlca):
	print("Entradas:", H, h, r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(h > vlca and h <= vlt-vlc ):
	print("Entradas:", H, h, r)
	print("Volume:", round((vlc+vlca)*1000, 3), "litros")
elif(h > vlca+vlc):
	print("Entradas:", H, h, r)
	print("Volume:", round((vlc+vle)*1000, 3), "litros")
	


-- OUTPUT:
Entradas: 11.3 5.7 2.3
Volume: 238759.99447527304 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 10:58:22) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

vlc = (pi*(r**2)* h) #volume do combustivel no cilindro#
vle = (((4/3)*pi)*r**3) #volume do combustivel na esfera#
vlca = ((pi/3)*h**2)*(3*r - h) #volume do combustivel na calota semiesférica#

vlt = vlrc+(2*vlrca)
vlrc = (pi*(r**2)* H)
vlrca = ((pi/3)*H**2)*(3*r - H)

#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if(( H < 0 or h < 0 or r < 0) and H < h and h > 2*r):
	print("Entradas:", H, h, r)
	print("Entradas invalidas")
elif(vlc+vlca <= vlrca):
	print("Entradas:", H, h, r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(vlc+vlca > vlrca and vlc+vlca <= vlrca+vlrc ):
	print("Entradas:", H, h, r)
	print("Volume:", round((vlc+vlca)*1000, 3), "litros")
elif(h > vlca+vlc):
	print("Entradas:", H, h, r)
	print("Volume:", round((vlc+vle)*1000, 3), "litros")
	


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 15, in <module>
    vlt = vlrc+(2*vlrca)
NameError: name 'vlrc' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 10:58:25) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

vlc = (pi*(r**2)* h) #volume do combustivel no cilindro#
vle = (((4/3)*pi)*r**3) #volume do combustivel na esfera#
vlca = ((pi/3)*h**2)*(3*r - h) #volume do combustivel na calota semiesférica#

vlt = vlrc+(2*vlrca)
vlrc = (pi*(r**2)* H)
vlrca = ((pi/3)*H**2)*(3*r - H)

#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if(( H < 0 or h < 0 or r < 0) and H < h and h > 2*r):
	print("Entradas:", H, h, r)
	print("Entradas invalidas")
elif(vlc+vlca <= vlrca):
	print("Entradas:", H, h, r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(vlc+vlca > vlrca and vlc+vlca <= vlrca+vlrc ):
	print("Entradas:", H, h, r)
	print("Volume:", round((vlc+vlca)*1000, 3), "litros")
elif(h > vlca+vlc):
	print("Entradas:", H, h, r)
	print("Volume:", round((vlc+vle)*1000, 3), "litros")
	


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 15, in <module>
    vlt = vlrc+(2*vlrca)
NameError: name 'vlrc' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 10:59:02) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

vlc = (pi*(r**2)* h) #volume do combustivel no cilindro#
vle = (((4/3)*pi)*r**3) #volume do combustivel na esfera#
vlca = ((pi/3)*h**2)*(3*r - h) #volume do combustivel na calota semiesférica#


vlrc = (pi*(r**2)* H)
vlt = vlrc+(2*vlrca)
vlrca = ((pi/3)*H**2)*(3*r - H)

#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if(( H < 0 or h < 0 or r < 0) and H < h and h > 2*r):
	print("Entradas:", H, h, r)
	print("Entradas invalidas")
elif(vlc+vlca <= vlrca):
	print("Entradas:", H, h, r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(vlc+vlca > vlrca and vlc+vlca <= vlrca+vlrc ):
	print("Entradas:", H, h, r)
	print("Volume:", round((vlc+vlca)*1000, 3), "litros")
elif(h > vlca+vlc):
	print("Entradas:", H, h, r)
	print("Volume:", round((vlc+vle)*1000, 3), "litros")
	


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 17, in <module>
    vlt = vlrc+(2*vlrca)
NameError: name 'vlrca' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 10:59:22) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

vlc = (pi*(r**2)* h) #volume do combustivel no cilindro#
vle = (((4/3)*pi)*r**3) #volume do combustivel na esfera#
vlca = ((pi/3)*h**2)*(3*r - h) #volume do combustivel na calota semiesférica#


vlrc = (pi*(r**2)* H)
vlrca = ((pi/3)*H**2)*(3*r - H)
vlt = vlrc+(2*vlrca)

#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if(( H < 0 or h < 0 or r < 0) and H < h and h > 2*r):
	print("Entradas:", H, h, r)
	print("Entradas invalidas")
elif(vlc+vlca <= vlrca):
	print("Entradas:", H, h, r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(vlc+vlca > vlrca and vlc+vlca <= vlrca+vlrc ):
	print("Entradas:", H, h, r)
	print("Volume:", round((vlc+vlca)*1000, 3), "litros")
elif(h > vlca+vlc):
	print("Entradas:", H, h, r)
	print("Volume:", round((vlc+vle)*1000, 3), "litros")
	


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 17, in <module>
    vlt = vlrc+(2*vlrca)
NameError: name 'vlrca' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 11:00:05) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

vlc = (pi*(r**2)* h) #volume do combustivel no cilindro#
vle = (((4/3)*pi)*r**3) #volume do combustivel na esfera#
vlca = ((pi/3)*h**2)*(3*r - h) #volume do combustivel na calota semiesférica#


vlrc = (pi*(r**2)* H)
vlrca = ((pi/3)*H**2)*(3*r - H)
vlt = vlrc+(2*vlrca)

#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if(( H < 0 or h < 0 or r < 0) and H < h and h > 2*r):
	print("Entradas:", H, h, r)
	print("Entradas invalidas")
elif(vlc+vlca <= vlrca):
	print("Entradas:", H, h, r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(vlc+vlca > vlrca and vlc+vlca <= vlrca+vlrc ):
	print("Entradas:", H, h, r)
	print("Volume:", round((vlc)*1000, 3), "litros")
elif(h > vlca+vlc):
	print("Entradas:", H, h, r)
	print("Volume:", round((vlc+vle)*1000, 3), "litros")
	


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 17, in <module>
    vlt = vlrc+(2*vlrca)
NameError: name 'vlrca' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 11:00:12) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

vlc = (pi*(r**2)* h) #volume do combustivel no cilindro#
vle = (((4/3)*pi)*r**3) #volume do combustivel na esfera#
vlca = ((pi/3)*h**2)*(3*r - h) #volume do combustivel na calota semiesférica#


vlrc = (pi*(r**2)* H)
vlrca = ((pi/3)*H**2)*(3*r - H)
vlt = vlrc+(2*vlrca)

#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if(( H < 0 or h < 0 or r < 0) and H < h and h > 2*r):
	print("Entradas:", H, h, r)
	print("Entradas invalidas")
elif(vlc+vlca <= vlrca):
	print("Entradas:", H, h, r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(vlc+vlca > vlrca and vlc+vlca <= vlrca+vlrc ):
	print("Entradas:", H, h, r)
	print("Volume:", round((vlc)*1000, 3), "litros")
elif(h > vlca+vlc):
	print("Entradas:", H, h, r)
	print("Volume:", round((vlc+vle)*1000, 3), "litros")
	


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 17, in <module>
    vlt = vlrc+(2*vlrca)
NameError: name 'vlrca' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 11:00:34) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

vlc = (pi*(r**2)* h) #volume do combustivel no cilindro#
vle = (((4/3)*pi)*r**3) #volume do combustivel na esfera#
vlca = ((pi/3)*h**2)*(3*r - h) #volume do combustivel na calota semiesférica#


vlrc = (pi*(r**2)* H)
vlrca = ((pi/3)*H**2)*(3*r - H)
vlt = vlrc+(2*vlrca)

#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if(( H < 0 or h < 0 or r < 0) and H < h and h > 2*r):
	print("Entradas:", H, h, r)
	print("Entradas invalidas")
elif(vlc+vlca <= vlrca):
	print("Entradas:", H, h, r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(vlc+vlca > vlrca and vlc+vlca <= vlrca+vlrc ):
	print("Entradas:", H, h, r)
	print("Volume:", round((vlc)*1000, 3), "litros")
elif(h > vlca+vlc):
	print("Entradas:", H, h, r)
	print("Volume:", round((vlc+vle)*1000, 3), "litros")
	


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 17, in <module>
    vlt = vlrc+(2*vlrca)
NameError: name 'vlrca' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 11:01:30) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

vlc = (pi*(r**2)* h) #volume do combustivel no cilindro#
vle = (((4/3)*pi)*r**3) #volume do combustivel na esfera#
vlca = ((pi/3)*h**2)*(3*r - h) #volume do combustivel na calota semiesférica#


vlrc = (pi*(r**2)* H)
vlrca = ((pi/3)*H**2)*(3*r - H)
vlt = vlrc+(2*vlrca)

#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if(( H < 0 or h < 0 or r < 0) and H < h and h > 2*r):
	print("Entradas:", H, h, r)
	print("Entradas invalidas")
elif(vlc+vlca <= vlrca):
	print("Entradas:", H, h, r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(vlc+vlca > vlrca and vlc+vlca <= vlrca+vlrc ):
	print("Entradas:", H, h, r)
	print("Volume:", round((vlc+vlca)*1000, 3), "litros")
elif(vlrc+vlrca < vlca+vlc):
	print("Entradas:", H, h, r)
	print("Volume:", round((vlc+vle)*1000, 3), "litros")
	


-- OUTPUT:
Entradas: 11.3 5.7 2.3
Volume: 145693.454 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 11:18:06) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

vlc = (pi*(r**2)* h) #volume do combustivel no cilindro#
vle = (((4/3)*pi)*r**3) #volume do combustivel na esfera#
vlca = ((pi/3)*h**2)*(3*r - h) #volume do combustivel na calota semiesférica#


vlrc = (pi*(r**2)* H)
vlrca = ((pi/3)*H**2)*(3*r - H)
vlt = vlrc+(2*vlrca)

#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if(( H < 0 or h < 0 or r < 0) and H < h and h > 2*r):
	print("Entradas:", H, h, r)
	print("Entradas invalidas")
elif(vlc+vlca <= vlrca):
	print("Entradas:", H, h, r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(vlc+vlca > vlrca and vlc+vlca <= vlrca+vlrc ):
	print("Entradas:", H, h, r)
	print("Volume:", round((vlc+vlca)*1000, 3), "litros")
elif(vlrc+vlrca < vlca+vlc):
	print("Entradas:", H, h, r)
	print("Volume:", round((vlc+vle)*1000, 3), "litros")
	


-- EXECUTION TIME:
0.140961
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 5.7 2.3
Volume: 145693.454 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 9.5 2.2
Volume: -129627.349 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 4.0 6.0
Volume: 686961.594 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 11:23:20) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

vlc = (pi*(r**2)* h) #volume do combustivel no cilindro#
vle = (((4/3)*pi)*r**3) #volume do combustivel na esfera#
vlca = ((pi/3)*h**2)*(3*r - h) #volume do combustivel na calota semiesférica#


vlrc = (pi*(r**2)* H)
vlrca = ((pi/3)*H**2)*(3*r - H)
vlt = vlrc+(2*vlrca)

#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if(( H < 0 or h < 0 or r < 0) and H < h and h > 2*r):
	print("Entradas:", H, h, r)
	print("Entradas invalidas")
elif(vlc+vlca <= vlrca):
	print("Entradas:", H, h, r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(vlc+vlca > vlrca and vlc+vlca <= vlrca+vlrc ):
	print("Entradas:", H, h, r)
	print("Volume:", round((vlc+vlca)*1000, 3), "litros")
elif(vlrc+vlrca < vlca+vlc):
	print("Entradas:", H, h, r)
	print("Volume:", round((vlc+vle)*1000, 3), "litros")
	


-- OUTPUT:
Entradas: 11.3 5.7 2.3
Volume: 145693.454 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 12:27:29) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2
vlc = (pi*(r**2)* alt) #volume do combustivel no cilindro#
vle = (((4/3)*pi)*r**3) #volume do combustivel na esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume do combustivel na calota semiesférica#


vlrc = (pi*(r**2)* H)
vlrca = ((pi/3)*H**2)*(3*r - H)
vlt = vlrc+(2*vlrca)

#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if(( H < 0 or h < 0 or r < 0) and H < h and h > 2*r):
	print("Entradas:", H, h, r)
	print("Entradas invalidas")
elif(vlc+vlca <= vlrca):
	print("Entradas:", H, h, r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(vlc+vlca > vlrca and vlc+vlca <= vlrca+vlrc ):
	print("Entradas:", H, h, r)
	print("Volume:", round((vlc+vlca)*1000, 3), "litros")
elif(vlrc+vlrca < vlca+vlc):
	print("Entradas:", H, h, r)
	print("Volume:", round((vlc+vle)*1000, 3), "litros")
	


-- OUTPUT:
Entradas: 11.3 5.7 2.3
Volume: 162312.479 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 13:10:38) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do combustivel no cilindro#
vle = (((4/3)*pi)*r**3) #volume do combustivel na esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume do combustivel na calota semiesférica#


vlrc = (pi*(r**2)* H)
vlrca = ((pi/3)*H**2)*(3*r - H)
vlt = vlrc+(2*vlrca)

#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if(( H < 0 or h < 0 or r < 0) and H < h and h > 2*r):
	print("Entradas:", H, h, r)
	print("Entradas invalidas")
elif(vlc+vlca <= vlrca):
	print("Entradas:", H, h, r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(vlc+vlca > vlrca and vlc+vlca <= vlrca+vlrc ):
	print("Entradas:", H, h, r)
	print("Volume:", round((vlc+vlca)*1000, 3), "litros")
elif(vlrc+vlrca < vlca+vlc):
	print("Entradas:", H, h, r)
	print("Volume:", round((vlc+vle)*1000, 3), "litros")
	


-- EXECUTION TIME:
0.181356
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 5.7 2.3
Volume: 162312.479 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 9.5 2.2
Volume: 106944.003 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 4.0 6.0
Volume: 452389.342 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 14:09:29) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do combustivel no cilindro#
vle = (((4/3)*pi)*r**3) #volume do combustivel na esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume do combustivel na calota semiesférica#


vlrc = (pi*(r**2)* H)
vlrca = ((pi/3)*H**2)*(3*r - H)
vlt = vlrc+(2*vlrca)

#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if(( H < 0 or h < 0 or r < 0) and H < h and h > 2*r):
	print("Entradas:", H, h, r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H, h, r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H, h, r)
	print("Volume:", round((vlc+vlca)*1000, 3), "litros")
elif(vlrc+vlrca < vlca+vlc):
	print("Entradas:", H, h, r)
	print("Volume:", round((vlc+vle)*1000, 3), "litros")
	


-- OUTPUT:
Entradas: 11.3 5.7 2.3
Volume: 136829.974 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 14:11:27) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do combustivel no cilindro#
vle = (((4/3)*pi)*r**3) #volume do combustivel na esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume do combustivel na calota semiesférica#


vlrc = (pi*(r**2)* H)
vlrca = ((pi/3)*H**2)*(3*r - H)
vlt = vlrc+(2*vlrca)

#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if(( H < 0 or h < 0 or r < 0) and H < h and h > 2*r):
	print("Entradas:", H,"," h,"," r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,"," h,"," r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H, h, r)
	print("Volume:", round((vlc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,"," h,"," r)
	print("Volume:", round((vlc+vle)*1000, 3), "litros")
	


-- ERROR:
File "XXXX", line 26
    print("Entradas:", H,"," h,"," r)
                             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 14:11:40) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do combustivel no cilindro#
vle = (((4/3)*pi)*r**3) #volume do combustivel na esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume do combustivel na calota semiesférica#


vlrc = (pi*(r**2)* H)
vlrca = ((pi/3)*H**2)*(3*r - H)
vlt = vlrc+(2*vlrca)

#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if(( H < 0 or h < 0 or r < 0) and H < h and h > 2*r):
	print("Entradas:", H, "," h, "," r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,"," h, "," r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H, h, r)
	print("Volume:", round((vlc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,"," h,"," r)
	print("Volume:", round((vlc+vle)*1000, 3), "litros")
	


-- ERROR:
File "XXXX", line 26
    print("Entradas:", H, "," h, "," r)
                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 14:12:10) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do combustivel no cilindro#
vle = (((4/3)*pi)*r**3) #volume do combustivel na esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume do combustivel na calota semiesférica#


vlrc = (pi*(r**2)* H)
vlrca = ((pi/3)*H**2)*(3*r - H)
vlt = vlrc+(2*vlrca)

#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if(( H < 0 or h < 0 or r < 0) and H < h and h > 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlc+vle)*1000, 3), "litros")
	


-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 14:12:18) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do combustivel no cilindro#
vle = (((4/3)*pi)*r**3) #volume do combustivel na esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume do combustivel na calota semiesférica#


vlrc = (pi*(r**2)* H)
vlrca = ((pi/3)*H**2)*(3*r - H)
vlt = vlrc+(2*vlrca)

#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if(( H < 0 or h < 0 or r < 0) and H < h and h > 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlc+vle)*1000, 3), "litros")
	


-- EXECUTION TIME:
0.137465
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Volume: 106944.003 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 452389.342 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 14:12:20) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do combustivel no cilindro#
vle = (((4/3)*pi)*r**3) #volume do combustivel na esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume do combustivel na calota semiesférica#


vlrc = (pi*(r**2)* H)
vlrca = ((pi/3)*H**2)*(3*r - H)
vlt = vlrc+(2*vlrca)

#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if(( H < 0 or h < 0 or r < 0) and H < h and h > 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlc+vle)*1000, 3), "litros")
	


-- EXECUTION TIME:
0.162908
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Volume: 106944.003 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 452389.342 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 14:12:22) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do combustivel no cilindro#
vle = (((4/3)*pi)*r**3) #volume do combustivel na esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume do combustivel na calota semiesférica#


vlrc = (pi*(r**2)* H)
vlrca = ((pi/3)*H**2)*(3*r - H)
vlt = vlrc+(2*vlrca)

#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if(( H < 0 or h < 0 or r < 0) and H < h and h > 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlc+vle)*1000, 3), "litros")
	


-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 14:13:58) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do combustivel no cilindro#
vle = (((4/3)*pi)*r**3) #volume do combustivel na esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume do combustivel na calota semiesférica#


vlrc = (pi*(r**2)* H)
vlrca = ((pi/3)*H**2)*(3*r - H)
vlt = vlrc+(2*vlrca)

#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if(( H < 0 or h < 0 or r < 0) and H < h and H < 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlc+vle)*1000, 3), "litros")
	


-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 14:14:17) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do combustivel no cilindro#
vle = (((4/3)*pi)*r**3) #volume do combustivel na esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume do combustivel na calota semiesférica#


vlrc = (pi*(r**2)* H)
vlrca = ((pi/3)*H**2)*(3*r - H)
vlt = vlrc+(2*vlrca)

#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if (H < 0 or h < 0 or r < 0 and H < h and H < 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlc+vle)*1000, 3), "litros")
	


-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 14:14:22) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do combustivel no cilindro#
vle = (((4/3)*pi)*r**3) #volume do combustivel na esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume do combustivel na calota semiesférica#


vlrc = (pi*(r**2)* H)
vlrca = ((pi/3)*H**2)*(3*r - H)
vlt = vlrc+(2*vlrca)

#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if (H < 0 or h < 0 or r < 0 and H < h and H < 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlc+vle)*1000, 3), "litros")
	


-- EXECUTION TIME:
0.176791
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Volume: 106944.003 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 452389.342 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 14:14:23) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do combustivel no cilindro#
vle = (((4/3)*pi)*r**3) #volume do combustivel na esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume do combustivel na calota semiesférica#


vlrc = (pi*(r**2)* H)
vlrca = ((pi/3)*H**2)*(3*r - H)
vlt = vlrc+(2*vlrca)

#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if (H < 0 or h < 0 or r < 0 and H < h and H < 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlc+vle)*1000, 3), "litros")
	


-- EXECUTION TIME:
0.115598
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Volume: 106944.003 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 452389.342 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 14:14:36) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do combustivel no cilindro#
vle = (((4/3)*pi)*r**3) #volume do combustivel na esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume do combustivel na calota semiesférica#


vlrc = (pi*(r**2)* H)
vlrca = ((pi/3)*H**2)*(3*r - H)
vlt = vlrc+(2*vlrca)

#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if (H < 0 or h < 0 or r < 0 and H < h and H < 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlc+vle)*1000, 3), "litros")
	


-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 15:07:38) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do combustivel no cilindro#
vle = (((4/3)*pi)*r**3) #volume do combustivel na esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume do combustivel na calota semiesférica#


vlrc = (pi*(r**2)* H)
vlrca = ((pi/3)*H**2)*(3*r - H)
vlt = vlrc+(2*vlrca)

#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if (H < 0 or h < 0 or r < 0 and H < h and H < 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlt - vlc + vlca )*1000, 3), "litros")
	


-- EXECUTION TIME:
0.14031
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Volume: -198303.611 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 452389.342 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:07:39) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do combustivel no cilindro#
vle = (((4/3)*pi)*r**3) #volume do combustivel na esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume do combustivel na calota semiesférica#


vlrc = (pi*(r**2)* H)
vlrca = ((pi/3)*H**2)*(3*r - H)
vlt = vlrc+(2*vlrca)

#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if (H < 0 or h < 0 or r < 0 and H < h and H < 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlt - vlc + vlca )*1000, 3), "litros")
	


-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:07:44) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do combustivel no cilindro#
vle = (((4/3)*pi)*r**3) #volume do combustivel na esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume do combustivel na calota semiesférica#


vlrc = (pi*(r**2)* H)
vlrca = ((pi/3)*H**2)*(3*r - H)
vlt = vlrc+(2*vlrca)

#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if (H < 0 or h < 0 or r < 0 and H < h and H < 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlt - vlc + vlca )*1000, 3), "litros")
	


-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 15:07:50) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do combustivel no cilindro#
vle = (((4/3)*pi)*r**3) #volume do combustivel na esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume do combustivel na calota semiesférica#


vlrc = (pi*(r**2)* H)
vlrca = ((pi/3)*H**2)*(3*r - H)
vlt = vlrc+(2*vlrca)

#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if (H < 0 or h < 0 or r < 0 and H < h and H < 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlt - vlc + vlca )*1000, 3), "litros")
	


-- EXECUTION TIME:
0.147899
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Volume: -198303.611 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 452389.342 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 15:07:52) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do combustivel no cilindro#
vle = (((4/3)*pi)*r**3) #volume do combustivel na esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume do combustivel na calota semiesférica#


vlrc = (pi*(r**2)* H)
vlrca = ((pi/3)*H**2)*(3*r - H)
vlt = vlrc+(2*vlrca)

#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if (H < 0 or h < 0 or r < 0 and H < h and H < 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlt - vlc + vlca )*1000, 3), "litros")
	


-- EXECUTION TIME:
0.190491
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Volume: -198303.611 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 452389.342 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:15:42) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do combustivel no cilindro#
vle = (((4/3)*pi)*r**3) #volume do combustivel na esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume do combustivel na calota semiesférica#
vlt = vlc+vle 
vlar = 

#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if (H < 0 or h < 0 or r < 0 and H < h and H < 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlt  )*1000, 3), "litros")
	


-- ERROR:
File "XXXX", line 16
    vlar = 
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:15:47) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do combustivel no cilindro#
vle = (((4/3)*pi)*r**3) #volume do combustivel na esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume do combustivel na calota semiesférica#
vlt = vlc+vle 


#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if (H < 0 or h < 0 or r < 0 and H < h and H < 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlt  )*1000, 3), "litros")
	


-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:52:59) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do cilindro#
vle = (((4/3)*pi)*r**3) #volume da esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume da calota semiesférica#
vlt = vlc+vle 

vlcc = (pi*(r**2)* h) - vlca
vlcca = ((pi/3)*r**2)*(3*r - r)


#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if (H < 0 or h < 0 or r < 0 and H < h and H < 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlcc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlt  )*1000, 3), "litros")
	


-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 94728.443 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:54:53) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do cilindro#
vle = (((4/3)*pi)*r**3) #volume da esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume da calota semiesférica#
vlt = vlc+vle 

vlcc = (pi*(r**2)* h) 
vlcca = ((pi/3)*r**2)*(3*r - r)


#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if (H < 0 or h < 0 or r < 0 and H < h and H < 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlcc)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlt  )*1000, 3), "litros")
	


-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 94728.443 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:55:12) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do cilindro#
vle = (((4/3)*pi)*r**3) #volume da esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume da calota semiesférica#
vlt = vlc+vle 

vlcc = (pi*(r**2)* h) 
vlcca = ((pi/3)*r**2)*(3*r - r)


#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if (H < 0 or h < 0 or r < 0 and H < h and H < 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlt  )*1000, 3), "litros")
	


-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 15:55:19) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do cilindro#
vle = (((4/3)*pi)*r**3) #volume da esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume da calota semiesférica#
vlt = vlc+vle 

vlcc = (pi*(r**2)* h) 
vlcca = ((pi/3)*r**2)*(3*r - r)


#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if (H < 0 or h < 0 or r < 0 and H < h and H < 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlt  )*1000, 3), "litros")
	


-- EXECUTION TIME:
0.137043
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Volume: 106944.003 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 452389.342 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 15:55:21) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do cilindro#
vle = (((4/3)*pi)*r**3) #volume da esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume da calota semiesférica#
vlt = vlc+vle 

vlcc = (pi*(r**2)* h) 
vlcca = ((pi/3)*r**2)*(3*r - r)


#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if (H < 0 or h < 0 or r < 0 and H < h and H < 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlt  )*1000, 3), "litros")
	


-- EXECUTION TIME:
0.221849
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Volume: 106944.003 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Volume: 106944.003 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 15:55:21) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do cilindro#
vle = (((4/3)*pi)*r**3) #volume da esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume da calota semiesférica#
vlt = vlc+vle 

vlcc = (pi*(r**2)* h) 
vlcca = ((pi/3)*r**2)*(3*r - r)


#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if (H < 0 or h < 0 or r < 0 and H < h and H < 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlt  )*1000, 3), "litros")
	


-- EXECUTION TIME:
0.356102
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Volume: 106944.003 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Volume: 106944.003 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 15:55:22) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do cilindro#
vle = (((4/3)*pi)*r**3) #volume da esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume da calota semiesférica#
vlt = vlc+vle 

vlcc = (pi*(r**2)* h) 
vlcca = ((pi/3)*r**2)*(3*r - r)


#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if (H < 0 or h < 0 or r < 0 and H < h and H < 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlt  )*1000, 3), "litros")
	


-- EXECUTION TIME:
0.606342
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Volume: 106944.003 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 452389.342 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 15:55:22) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do cilindro#
vle = (((4/3)*pi)*r**3) #volume da esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume da calota semiesférica#
vlt = vlc+vle 

vlcc = (pi*(r**2)* h) 
vlcca = ((pi/3)*r**2)*(3*r - r)


#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if (H < 0 or h < 0 or r < 0 and H < h and H < 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlt  )*1000, 3), "litros")
	


-- EXECUTION TIME:
0.433144
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Volume: 106944.003 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 452389.342 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 15:55:22) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do cilindro#
vle = (((4/3)*pi)*r**3) #volume da esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume da calota semiesférica#
vlt = vlc+vle 

vlcc = (pi*(r**2)* h) 
vlcca = ((pi/3)*r**2)*(3*r - r)


#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if (H < 0 or h < 0 or r < 0 and H < h and H < 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlt  )*1000, 3), "litros")
	


-- EXECUTION TIME:
0.834596
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Volume: 106944.003 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 452389.342 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 15:55:22) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do cilindro#
vle = (((4/3)*pi)*r**3) #volume da esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume da calota semiesférica#
vlt = vlc+vle 

vlcc = (pi*(r**2)* h) 
vlcca = ((pi/3)*r**2)*(3*r - r)


#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if (H < 0 or h < 0 or r < 0 and H < h and H < 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlt  )*1000, 3), "litros")
	


-- EXECUTION TIME:
0.903151
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Volume: 106944.003 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Volume: 106944.003 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 15:55:22) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do cilindro#
vle = (((4/3)*pi)*r**3) #volume da esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume da calota semiesférica#
vlt = vlc+vle 

vlcc = (pi*(r**2)* h) 
vlcca = ((pi/3)*r**2)*(3*r - r)


#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if (H < 0 or h < 0 or r < 0 and H < h and H < 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlt  )*1000, 3), "litros")
	


-- EXECUTION TIME:
0.817527
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Volume: 106944.003 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 452389.342 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 15:55:22) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do cilindro#
vle = (((4/3)*pi)*r**3) #volume da esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume da calota semiesférica#
vlt = vlc+vle 

vlcc = (pi*(r**2)* h) 
vlcca = ((pi/3)*r**2)*(3*r - r)


#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if (H < 0 or h < 0 or r < 0 and H < h and H < 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlt  )*1000, 3), "litros")
	


-- EXECUTION TIME:
0.791008
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Volume: 106944.003 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 452389.342 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 15:55:22) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do cilindro#
vle = (((4/3)*pi)*r**3) #volume da esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume da calota semiesférica#
vlt = vlc+vle 

vlcc = (pi*(r**2)* h) 
vlcca = ((pi/3)*r**2)*(3*r - r)


#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if (H < 0 or h < 0 or r < 0 and H < h and H < 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlt  )*1000, 3), "litros")
	


-- EXECUTION TIME:
1.19865
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Volume: 106944.003 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 452389.342 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 15:55:23) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do cilindro#
vle = (((4/3)*pi)*r**3) #volume da esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume da calota semiesférica#
vlt = vlc+vle 

vlcc = (pi*(r**2)* h) 
vlcca = ((pi/3)*r**2)*(3*r - r)


#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if (H < 0 or h < 0 or r < 0 and H < h and H < 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlt  )*1000, 3), "litros")
	


-- EXECUTION TIME:
0.361437
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 452389.342 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Volume: 106944.003 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 15:55:23) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do cilindro#
vle = (((4/3)*pi)*r**3) #volume da esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume da calota semiesférica#
vlt = vlc+vle 

vlcc = (pi*(r**2)* h) 
vlcca = ((pi/3)*r**2)*(3*r - r)


#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if (H < 0 or h < 0 or r < 0 and H < h and H < 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlt  )*1000, 3), "litros")
	


-- EXECUTION TIME:
0.375681
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Volume: 106944.003 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 452389.342 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 15:55:23) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do cilindro#
vle = (((4/3)*pi)*r**3) #volume da esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume da calota semiesférica#
vlt = vlc+vle 

vlcc = (pi*(r**2)* h) 
vlcca = ((pi/3)*r**2)*(3*r - r)


#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if (H < 0 or h < 0 or r < 0 and H < h and H < 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlt  )*1000, 3), "litros")
	


-- EXECUTION TIME:
0.612592
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 452389.342 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Volume: 106944.003 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 452389.342 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 15:55:23) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do cilindro#
vle = (((4/3)*pi)*r**3) #volume da esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume da calota semiesférica#
vlt = vlc+vle 

vlcc = (pi*(r**2)* h) 
vlcca = ((pi/3)*r**2)*(3*r - r)


#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if (H < 0 or h < 0 or r < 0 and H < h and H < 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlt  )*1000, 3), "litros")
	


-- EXECUTION TIME:
0.506166
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 452389.342 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Volume: 106944.003 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 15:55:23) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do cilindro#
vle = (((4/3)*pi)*r**3) #volume da esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume da calota semiesférica#
vlt = vlc+vle 

vlcc = (pi*(r**2)* h) 
vlcca = ((pi/3)*r**2)*(3*r - r)


#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if (H < 0 or h < 0 or r < 0 and H < h and H < 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round(vlca*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlt  )*1000, 3), "litros")
	


-- EXECUTION TIME:
0.657707
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Volume: 106944.003 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:

-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 16:40:16) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do cilindro#
vle = (((4/3)*pi)*r**3) #volume da esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume da calota semiesférica#
vlt = vlc+vle 

vlcc = (pi*(r**2)* alt) 
vlcca = ((pi/3)*h**2)*(3*r - h)


#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if (H < 0 or h < 0 or r < 0 and H < h and H < 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round((vlca-vlcca)*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlcc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlt )*1000, 3), "litros")
	


-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 16:41:58) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do cilindro#
vle = (((4/3)*pi)*r**3) #volume da esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume da calota semiesférica#
vlt = vlc+vle 

vlcc = (pi*(r**2)* (h-r)) 
vlcca = ((pi/3)*h**2)*(3*r - h)


#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if (H < 0 or h < 0 or r < 0 and H < h and H < 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round((vlca-vlcca)*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlcc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlt )*1000, 3), "litros")
	


-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 16:42:17) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do cilindro#
vle = (((4/3)*pi)*r**3) #volume da esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume da calota semiesférica#
vlt = vlc+vle 

vlcc = (pi*(r**2)* (h-r)) 
vlcca = ((pi/3)*h**2)*(3*r - h)


#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if (H < 0 or h < 0 or r < 0 and H < h and H < 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round((vlca-vlcca)*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlcc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlt )*1000, 3), "litros")
	


-- EXECUTION TIME:
0.211775
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Volume: 106944.003 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 217817.091 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 16:51:06) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do cilindro#
vle = (((4/3)*pi)*r**3) #volume da esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume da calota semiesférica#
vlt = vlc+vle 

vlcc = (pi*(r**2)* (h-r)) 
vlcca = ((pi/3)*h**2)*(3*r - h)
vlca-vlcca = arcal
arcal-vlca = vlcal
altu = (r + alt) - h
vlcas = ((pi/3)*altu**2)*(3*r - altu)
vlcas - vlca = arcals
vlca - arcals = x


#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if (H < 0 or h < 0 or r < 0 and H < h and H < 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round((vlcal)*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlcc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlca+vlc+x )*1000, 3), "litros")
	


-- ERROR:
File "XXXX", line 19
    vlca-vlcca = arcal
    ^
SyntaxError: can't assign to operator
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 16:51:28) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do cilindro#
vle = (((4/3)*pi)*r**3) #volume da esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume da calota semiesférica#
vlt = vlc+vle 

vlcc = (pi*(r**2)* (h-r)) 
vlcca = ((pi/3)*h**2)*(3*r - h)
vlca - vlcca = arcal
arcal - vlca = vlcal
altu = (r + alt) - h
vlcas = ((pi/3)*altu**2)*(3*r - altu)
vlcas - vlca = arcals
vlca - arcals = x


#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if (H < 0 or h < 0 or r < 0 and H < h and H < 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round((vlcal)*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlcc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlca+vlc+x )*1000, 3), "litros")
	


-- ERROR:
File "XXXX", line 19
    vlca - vlcca = arcal
    ^
SyntaxError: can't assign to operator
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:03:22) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do cilindro#
vle = (((4/3)*pi)*r**3) #volume da esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume da calota semiesférica#
vlt = vlc+vle 

vlcc = (pi*(r**2)* (h-r)) 
vlcca = ((pi/3)*h**2)*(3*r - h)
x = (H-h)-r
x1 = ((pi/3)*x**2)*(3*r - x)




#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if (H < 0 or h < 0 or r < 0 and H < h and H < 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round((vlcca)*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlcc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round(x1+vlca+vlc )*1000, 3), "litros")
	


-- ERROR:
File "XXXX", line 40
    print("Volume:", round(x1+vlca+vlc )*1000, 3), "litros")
                                                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:03:42) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do cilindro#
vle = (((4/3)*pi)*r**3) #volume da esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume da calota semiesférica#
vlt = vlc+vle 

vlcc = (pi*(r**2)* (h-r)) 
vlcca = ((pi/3)*h**2)*(3*r - h)
x = (H-h)-r
x1 = ((pi/3)*x**2)*(3*r - x)




#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if (H < 0 or h < 0 or r < 0 and H < h and H < 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round((vlcca)*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlcc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", (round(x1+vlca+vlc)*1000, 3), "litros")
	


-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 17:03:51) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do cilindro#
vle = (((4/3)*pi)*r**3) #volume da esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume da calota semiesférica#
vlt = vlc+vle 

vlcc = (pi*(r**2)* (h-r)) 
vlcca = ((pi/3)*h**2)*(3*r - h)
x = (H-h)-r
x1 = ((pi/3)*x**2)*(3*r - x)




#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if (H < 0 or h < 0 or r < 0 and H < h and H < 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round((vlcca)*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlcc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", (round(x1+vlca+vlc)*1000, 3), "litros")
	


-- EXECUTION TIME:
0.141128
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Volume: (190000, 3) litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 234572.251 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 17:03:53) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do cilindro#
vle = (((4/3)*pi)*r**3) #volume da esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume da calota semiesférica#
vlt = vlc+vle 

vlcc = (pi*(r**2)* (h-r)) 
vlcca = ((pi/3)*h**2)*(3*r - h)
x = (H-h)-r
x1 = ((pi/3)*x**2)*(3*r - x)




#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if (H < 0 or h < 0 or r < 0 and H < h and H < 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round((vlcca)*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlcc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", (round(x1+vlca+vlc)*1000, 3), "litros")
	


-- EXECUTION TIME:
0.148235
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Volume: (190000, 3) litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 17:03:54) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do cilindro#
vle = (((4/3)*pi)*r**3) #volume da esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume da calota semiesférica#
vlt = vlc+vle 

vlcc = (pi*(r**2)* (h-r)) 
vlcca = ((pi/3)*h**2)*(3*r - h)
x = (H-h)-r
x1 = ((pi/3)*x**2)*(3*r - x)




#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if (H < 0 or h < 0 or r < 0 and H < h and H < 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round((vlcca)*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlcc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", (round(x1+vlca+vlc)*1000, 3), "litros")
	


-- EXECUTION TIME:
0.206561
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Volume: (190000, 3) litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Volume: (190000, 3) litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 17:03:54) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do cilindro#
vle = (((4/3)*pi)*r**3) #volume da esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume da calota semiesférica#
vlt = vlc+vle 

vlcc = (pi*(r**2)* (h-r)) 
vlcca = ((pi/3)*h**2)*(3*r - h)
x = (H-h)-r
x1 = ((pi/3)*x**2)*(3*r - x)




#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if (H < 0 or h < 0 or r < 0 and H < h and H < 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round((vlcca)*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlcc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", (round(x1+vlca+vlc)*1000, 3), "litros")
	


-- EXECUTION TIME:
0.422742
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1674/1102/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 17:03:54) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do cilindro#
vle = (((4/3)*pi)*r**3) #volume da esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume da calota semiesférica#
vlt = vlc+vle 

vlcc = (pi*(r**2)* (h-r)) 
vlcca = ((pi/3)*h**2)*(3*r - h)
x = (H-h)-r
x1 = ((pi/3)*x**2)*(3*r - x)




#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if (H < 0 or h < 0 or r < 0 and H < h and H < 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round((vlcca)*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlcc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", (round(x1+vlca+vlc)*1000, 3), "litros")
	


-- EXECUTION TIME:
0.330302
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Volume: (190000, 3) litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 234572.251 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 17:03:54) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do cilindro#
vle = (((4/3)*pi)*r**3) #volume da esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume da calota semiesférica#
vlt = vlc+vle 

vlcc = (pi*(r**2)* (h-r)) 
vlcca = ((pi/3)*h**2)*(3*r - h)
x = (H-h)-r
x1 = ((pi/3)*x**2)*(3*r - x)




#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if (H < 0 or h < 0 or r < 0 and H < h and H < 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round((vlcca)*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlcc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", (round(x1+vlca+vlc)*1000, 3), "litros")
	


-- EXECUTION TIME:
0.300558
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 234572.251 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:

-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:04:02) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do cilindro#
vle = (((4/3)*pi)*r**3) #volume da esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume da calota semiesférica#
vlt = vlc+vle 

vlcc = (pi*(r**2)* (h-r)) 
vlcca = ((pi/3)*h**2)*(3*r - h)
x = (H-h)-r
x1 = ((pi/3)*x**2)*(3*r - x)




#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if (H < 0 or h < 0 or r < 0 and H < h and H < 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round((vlcca)*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlcc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((x1+vlca+vlc)*1000, 3), "litros")
	


-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 17:04:03) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do cilindro#
vle = (((4/3)*pi)*r**3) #volume da esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume da calota semiesférica#
vlt = vlc+vle 

vlcc = (pi*(r**2)* (h-r)) 
vlcca = ((pi/3)*h**2)*(3*r - h)
x = (H-h)-r
x1 = ((pi/3)*x**2)*(3*r - x)




#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if (H < 0 or h < 0 or r < 0 and H < h and H < 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round((vlcca)*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlcc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((x1+vlca+vlc)*1000, 3), "litros")
	


-- EXECUTION TIME:
0.187959
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Volume: 189731.252 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 234572.251 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:04:13) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do cilindro#
vle = (((4/3)*pi)*r**3) #volume da esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume da calota semiesférica#
vlt = vlc+vle 

vlcc = (pi*(r**2)* (h-r)) 
vlcca = ((pi/3)*h**2)*(3*r - h)
x = (H-h)-r
x1 = ((pi/3)*x**2)*(3*r - x)




#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if (H < 0 or h < 0 or r < 0 and H < h and H < 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round((vlcca)*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlcc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((x1+vlca+vlc)*1000, 3), "litros")
	


-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:04:27) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

alt = H - r*2 #áltura do cilindo#
vlc = (pi*(r**2)* alt) #volume do cilindro#
vle = (((4/3)*pi)*r**3) #volume da esfera#
vlca = ((pi/3)*r**2)*(3*r - r) #volume da calota semiesférica#
vlt = vlc+vle 

vlcc = (pi*(r**2)* (h-r)) 
vlcca = ((pi/3)*h**2)*(3*r - h)
x = (H-h)-r
x1 = ((pi/3)*x**2)*(3*r - x)




#o calculo do volume do tanque pode ser dado pelo volume das esferas mais o volume do cilindo,#
#pode-se observar que o raio representa tanto o raio do cilindro quanto a "altura" da semiesfera#
#sabendo disso podemos calcular o volume do cilindo separadamente do da esfera"

if (H < 0 or h < 0 or r < 0 and H < h and H < 2*r):
	print("Entradas:", H, ",", h, ",", r)
	print("Entradas invalidas")
elif(h <= r):
	print("Entradas:", H,",", h, ",", r)
	print("Volume:", round((vlcca)*1000, 3), "litros")
elif(h > r and h <= r+alt ):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((vlcc+vlca)*1000, 3), "litros")
elif(r+alt < h):
	print("Entradas:", H,",", h,",", r)
	print("Volume:", round((x1+vlca+vlc)*1000, 3), "litros")
	


-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:55:27) 
-- CODE:

from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

print("Entradas:", H, ",", h, ",", r)

v = (pi/3) * (h**2) * (3*r-h)
v1 = (4*pi*(r**3)/6)+(pi*(r**2)*(h-r))
v2 = ((4*pi*(r**3))/6) + ((pi/3)*((r**2) * (h-r)) *2)

if(H>0 and h>0 and r>0 and H>0 and H>2*r):
	if(h <= r):
		print("Volume: ", round(v * 1000, 3), "litros")
	elif(r < h and h <= H-r):
		print("Volume: ", round(v1 * 1000, 3), "litros")
	elif(h > H-r):
		print("Volume: ", round(v2 * 1000, 3), "litros")
else:
	("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume:  81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 17:55:29) 
-- CODE:

from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

print("Entradas:", H, ",", h, ",", r)

v = (pi/3) * (h**2) * (3*r-h)
v1 = (4*pi*(r**3)/6)+(pi*(r**2)*(h-r))
v2 = ((4*pi*(r**3))/6) + ((pi/3)*((r**2) * (h-r)) *2)

if(H>0 and h>0 and r>0 and H>0 and H>2*r):
	if(h <= r):
		print("Volume: ", round(v * 1000, 3), "litros")
	elif(r < h and h <= H-r):
		print("Volume: ", round(v1 * 1000, 3), "litros")
	elif(h > H-r):
		print("Volume: ", round(v2 * 1000, 3), "litros")
else:
	("Entradas invalidas")
-- EXECUTION TIME:
0.246997
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume:  81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Volume:  96300.287 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 17:55:30) 
-- CODE:

from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

print("Entradas:", H, ",", h, ",", r)

v = (pi/3) * (h**2) * (3*r-h)
v1 = (4*pi*(r**3)/6)+(pi*(r**2)*(h-r))
v2 = ((4*pi*(r**3))/6) + ((pi/3)*((r**2) * (h-r)) *2)

if(H>0 and h>0 and r>0 and H>0 and H>2*r):
	if(h <= r):
		print("Volume: ", round(v * 1000, 3), "litros")
	elif(r < h and h <= H-r):
		print("Volume: ", round(v1 * 1000, 3), "litros")
	elif(h > H-r):
		print("Volume: ", round(v2 * 1000, 3), "litros")
else:
	("Entradas invalidas")
-- EXECUTION TIME:
0.146882
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume:  81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Volume:  96300.287 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:56:00) 
-- CODE:

from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

print("Entradas:", H, ",", h, ",", r)

v = (pi/3) * (h**2) * (3*r-h)
v1 = (4*pi*(r**3)/6)+(pi*(r**2)*(h-r))
v2 = ((4*pi*(r**3))/6) + ((pi/3)*((r**2) * (h-r)) *2)

if(H>0 and h>0 and r>0 and H>0 and H>2*r):
	if(h <= r):
		print("Volume: ", round(v * 1000, 3), "litros")
	elif(r < h and h <= H-r):
		print("Volume: ", round(v1 * 1000, 3), "litros")
	elif(h > H-r):
		print("Volume: ", round(v2 * 1000, 3), "litros")
else:
	("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume:  81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 17:57:01) 
-- CODE:

from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

print("Entradas:", H, ",", h, ",", r)

v = (pi/3) * (h**2) * (3*r-h)
v1 = (4*pi*(r**3)/6)+(pi*(r**2)*(h-r))
v2 = ((4*pi*(r**3))/6) + ((pi/3)*((r**2) * (h-r)) *2)

if(H>0 and h>0 and r>0 and H>h and H>2*r):
	if(h <= r):
		print("Volume: ", round(v * 1000, 3), "litros")
	elif(r < h and h <= H-r):
		print("Volume: ", round(v1 * 1000, 3), "litros")
	elif(h > H-r):
		print("Volume: ", round(v2 * 1000, 3), "litros")
else:
	("Entradas invalidas")
-- EXECUTION TIME:
0.190978
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume:  81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:57:02) 
-- CODE:

from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

print("Entradas:", H, ",", h, ",", r)

v = (pi/3) * (h**2) * (3*r-h)
v1 = (4*pi*(r**3)/6)+(pi*(r**2)*(h-r))
v2 = ((4*pi*(r**3))/6) + ((pi/3)*((r**2) * (h-r)) *2)

if(H>0 and h>0 and r>0 and H>h and H>2*r):
	if(h <= r):
		print("Volume: ", round(v * 1000, 3), "litros")
	elif(r < h and h <= H-r):
		print("Volume: ", round(v1 * 1000, 3), "litros")
	elif(h > H-r):
		print("Volume: ", round(v2 * 1000, 3), "litros")
else:
	("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume:  81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:57:23) 
-- CODE:

from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

print("Entradas:", H, ",", h, ",", r)

v = (pi/3) * (h**2) * (3*r-h)
v1 = (4*pi*(r**3)/6)+(pi*(r**2)*(h-r))
v2 = ((4*pi*(r**3))/6) + ((pi/3)*((r**2) * (h-r)) *2)

if(H>0 or h>0 or r>0 or H>h or H>2*r):
	if(h <= r):
		print("Volume: ", round(v * 1000, 3), "litros")
	elif(r < h and h <= H-r):
		print("Volume: ", round(v1 * 1000, 3), "litros")
	elif(h > H-r):
		print("Volume: ", round(v2 * 1000, 3), "litros")
else:
	("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume:  81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 17:58:09) 
-- CODE:

from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

print("Entradas:", H, ",", h, ",", r)

v = (pi/3) * (h**2) * (3*r-h)
v1 = (4*pi*(r**3)/6)+(pi*(r**2)*(h-r))
v2 = ((4*pi*(r**3))/6) + ((pi/3)*((r**2) * (h-r)) *2)

if(H>0 and h>0 and r>0 and H>h and H>2*r):
	if(h <= r):
		print("Volume: ", round(v * 1000, 3), "litros")
	elif(r < h and h <= H-r):
		print("Volume: ", round(v1 * 1000, 3), "litros")
	elif(h > H-r):
		print("Volume: ", round(v2 * 1000, 3), "litros")
else:
	("Entradas invalidas")
-- EXECUTION TIME:
0.139079
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume:  81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:58:10) 
-- CODE:

from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

print("Entradas:", H, ",", h, ",", r)

v = (pi/3) * (h**2) * (3*r-h)
v1 = (4*pi*(r**3)/6)+(pi*(r**2)*(h-r))
v2 = ((4*pi*(r**3))/6) + ((pi/3)*((r**2) * (h-r)) *2)

if(H>0 and h>0 and r>0 and H>h and H>2*r):
	if(h <= r):
		print("Volume: ", round(v * 1000, 3), "litros")
	elif(r < h and h <= H-r):
		print("Volume: ", round(v1 * 1000, 3), "litros")
	elif(h > H-r):
		print("Volume: ", round(v2 * 1000, 3), "litros")
else:
	("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume:  81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:58:21) 
-- CODE:

from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

print("Entradas:", H, ",", h, ",", r)

v = (pi/3) * (h**2) * (3*r-h)
v1 = (4*pi*(r**3)/6)+(pi*(r**2)*(h-r))
v2 = ((4*pi*(r**3))/6) + ((pi/3)*((r**2) * (h-r)) *2)

if(H>0 and h>0 and r>0 and H>h and H>2*r):
	if(h <= r):
		print("Volume: ", round(v * 1000, 3), "litros")
	elif(r < h and h <= H-r):
		print("Volume: ", round(v1 * 1000, 3), "litros")
	elif(h > H-r):
		print("Volume: ", round(v2 * 1000, 3), "litros")
		else:
	("Entradas invalidas")
-- ERROR:
File "XXXX", line 20
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:58:30) 
-- CODE:

from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

print("Entradas:", H, ",", h, ",", r)

v = (pi/3) * (h**2) * (3*r-h)
v1 = (4*pi*(r**3)/6)+(pi*(r**2)*(h-r))
v2 = ((4*pi*(r**3))/6) + ((pi/3)*((r**2) * (h-r)) *2)

if(H>0 and h>0 and r>0 and H>h and H>2*r):
	if(h <= r):
		print("Volume: ", round(v * 1000, 3), "litros")
	elif(r < h and h <= H-r):
		print("Volume: ", round(v1 * 1000, 3), "litros")
	elif(h > H-r):
		print("Volume: ", round(v2 * 1000, 3), "litros")
	else:
	("Entradas invalidas")
-- ERROR:
File "XXXX", line 21
    ("Entradas invalidas")
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:58:34) 
-- CODE:

from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

print("Entradas:", H, ",", h, ",", r)

v = (pi/3) * (h**2) * (3*r-h)
v1 = (4*pi*(r**3)/6)+(pi*(r**2)*(h-r))
v2 = ((4*pi*(r**3))/6) + ((pi/3)*((r**2) * (h-r)) *2)

if(H>0 and h>0 and r>0 and H>h and H>2*r):
	if(h <= r):
		print("Volume: ", round(v * 1000, 3), "litros")
	elif(r < h and h <= H-r):
		print("Volume: ", round(v1 * 1000, 3), "litros")
	elif(h > H-r):
		print("Volume: ", round(v2 * 1000, 3), "litros")
else:
	("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume:  81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 17:58:40) 
-- CODE:

from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

print("Entradas:", H, ",", h, ",", r)

v = (pi/3) * (h**2) * (3*r-h)
v1 = (4*pi*(r**3)/6)+(pi*(r**2)*(h-r))
v2 = ((4*pi*(r**3))/6) + ((pi/3)*((r**2) * (h-r)) *2)

if(H>0 and h>0 and r>0 and H>h and H>2*r):
	if(h <= r):
		print("Volume: ", round(v * 1000, 3), "litros")
	elif(r < h and h <= H-r):
		print("Volume: ", round(v1 * 1000, 3), "litros")
	elif(h > H-r):
		print("Volume: ", round(v2 * 1000, 3), "litros")
else:
	("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume:  81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 18:00:00) 
-- CODE:

from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

print("Entradas:", H, ",", h, ",", r)

v = (pi/3) * (h**2) * (3*r-h)
v1 = (4*pi*(r**3)/6)+(pi*(r**2)*(h-r))
v2 = ((4*pi*(r**3))/6) + ((pi/3)*((r**2) * (h-r)) *2)

if(H<0 or h<0 or r<0 or H<h or H<2*r):
	print("Entradas invalidas")
	elif(h <= r):
		print("Volume: ", round(v * 1000, 3), "litros")
	elif(r < h and h <= H-r):
		print("Volume: ", round(v1 * 1000, 3), "litros")
	elif(h > H-r):
		print("Volume: ", round(v2 * 1000, 3), "litros")

	("Entradas invalidas")
-- ERROR:
File "XXXX", line 15
    elif(h <= r):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 18:00:06) 
-- CODE:

from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

print("Entradas:", H, ",", h, ",", r)

v = (pi/3) * (h**2) * (3*r-h)
v1 = (4*pi*(r**3)/6)+(pi*(r**2)*(h-r))
v2 = ((4*pi*(r**3))/6) + ((pi/3)*((r**2) * (h-r)) *2)

if(H<0 or h<0 or r<0 or H<h or H<2*r):
	print("Entradas invalidas")
	if(h <= r):
		print("Volume: ", round(v * 1000, 3), "litros")
	elif(r < h and h <= H-r):
		print("Volume: ", round(v1 * 1000, 3), "litros")
	elif(h > H-r):
		print("Volume: ", round(v2 * 1000, 3), "litros")

	("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 18:00:12) 
-- CODE:

from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

print("Entradas:", H, ",", h, ",", r)

v = (pi/3) * (h**2) * (3*r-h)
v1 = (4*pi*(r**3)/6)+(pi*(r**2)*(h-r))
v2 = ((4*pi*(r**3))/6) + ((pi/3)*((r**2) * (h-r)) *2)

if(H<0 or h<0 or r<0 or H<h or H<2*r):
	print("Entradas invalidas")
	if(h <= r):
		print("Volume: ", round(v * 1000, 3), "litros")
	elif(r < h and h <= H-r):
		print("Volume: ", round(v1 * 1000, 3), "litros")
	elif(h > H-r):
		print("Volume: ", round(v2 * 1000, 3), "litros")

	("Entradas invalidas")
-- EXECUTION TIME:
0.148168
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
Volume:  96300.287 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
Volume:  234572.251 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 18:00:13) 
-- CODE:

from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

print("Entradas:", H, ",", h, ",", r)

v = (pi/3) * (h**2) * (3*r-h)
v1 = (4*pi*(r**3)/6)+(pi*(r**2)*(h-r))
v2 = ((4*pi*(r**3))/6) + ((pi/3)*((r**2) * (h-r)) *2)

if(H<0 or h<0 or r<0 or H<h or H<2*r):
	print("Entradas invalidas")
	if(h <= r):
		print("Volume: ", round(v * 1000, 3), "litros")
	elif(r < h and h <= H-r):
		print("Volume: ", round(v1 * 1000, 3), "litros")
	elif(h > H-r):
		print("Volume: ", round(v2 * 1000, 3), "litros")

	("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 18:00:40) 
-- CODE:

from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

print("Entradas:", H, ",", h, ",", r)

v = (pi/3) * (h**2) * (3*r-h)
v1 = (4*pi*(r**3)/6)+(pi*(r**2)*(h-r))
v2 = ((4*pi*(r**3))/6) + ((pi/3)*((r**2) * (h-r)) *2)

if(H<0 or h<0 or r<0 or H<h or H<2*r):
	print("Entradas invalidas")
	elif(h <= r):
		print("Volume: ", round(v * 1000, 3), "litros")
	elif(r < h and h <= H-r):
		print("Volume: ", round(v1 * 1000, 3), "litros")
	elif(h > H-r):
		print("Volume: ", round(v2 * 1000, 3), "litros")

	("Entradas invalidas")
-- ERROR:
File "XXXX", line 15
    elif(h <= r):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 18:00:48) 
-- CODE:

from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

print("Entradas:", H, ",", h, ",", r)

v = (pi/3) * (h**2) * (3*r-h)
v1 = (4*pi*(r**3)/6)+(pi*(r**2)*(h-r))
v2 = ((4*pi*(r**3))/6) + ((pi/3)*((r**2) * (h-r)) *2)

if(H<0 or h<0 or r<0 or H<h or H<2*r):
	print("Entradas invalidas")
elif(h <= r):
		print("Volume: ", round(v * 1000, 3), "litros")
	elif(r < h and h <= H-r):
		print("Volume: ", round(v1 * 1000, 3), "litros")
	elif(h > H-r):
		print("Volume: ", round(v2 * 1000, 3), "litros")

	("Entradas invalidas")
-- ERROR:
File "XXXX", line 17
    elif(r < h and h <= H-r):
                            ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 18:00:53) 
-- CODE:

from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

print("Entradas:", H, ",", h, ",", r)

v = (pi/3) * (h**2) * (3*r-h)
v1 = (4*pi*(r**3)/6)+(pi*(r**2)*(h-r))
v2 = ((4*pi*(r**3))/6) + ((pi/3)*((r**2) * (h-r)) *2)

if(H<0 or h<0 or r<0 or H<h or H<2*r):
	print("Entradas invalidas")
elif(h <= r):
		print("Volume: ", round(v * 1000, 3), "litros")
elif(r < h and h <= H-r):
		print("Volume: ", round(v1 * 1000, 3), "litros")
elif(h > H-r):
		print("Volume: ", round(v2 * 1000, 3), "litros")

	("Entradas invalidas")
-- ERROR:
File "XXXX", line 22
    ("Entradas invalidas")
                         ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 18:00:59) 
-- CODE:

from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

print("Entradas:", H, ",", h, ",", r)

v = (pi/3) * (h**2) * (3*r-h)
v1 = (4*pi*(r**3)/6)+(pi*(r**2)*(h-r))
v2 = ((4*pi*(r**3))/6) + ((pi/3)*((r**2) * (h-r)) *2)

if(H<0 or h<0 or r<0 or H<h or H<2*r):
	print("Entradas invalidas")
elif(h <= r):
		print("Volume: ", round(v * 1000, 3), "litros")
elif(r < h and h <= H-r):
		print("Volume: ", round(v1 * 1000, 3), "litros")
elif(h > H-r):
		print("Volume: ", round(v2 * 1000, 3), "litros")

	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume:  81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 18:01:05) 
-- CODE:

from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

print("Entradas:", H, ",", h, ",", r)

v = (pi/3) * (h**2) * (3*r-h)
v1 = (4*pi*(r**3)/6)+(pi*(r**2)*(h-r))
v2 = ((4*pi*(r**3))/6) + ((pi/3)*((r**2) * (h-r)) *2)

if(H<0 or h<0 or r<0 or H<h or H<2*r):
	print("Entradas invalidas")
elif(h <= r):
		print("Volume: ", round(v * 1000, 3), "litros")
elif(r < h and h <= H-r):
		print("Volume: ", round(v1 * 1000, 3), "litros")
elif(h > H-r):
		print("Volume: ", round(v2 * 1000, 3), "litros")

	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume:  81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 18:01:09) 
-- CODE:

from math import*
H = float(input("Altura total do tanque:"))
h = float(input("Nivel de combustivel no tanque:"))
r = float(input("Raio dos bojos semiesfericos infeior e superior:"))

print("Entradas:", H, ",", h, ",", r)

v = (pi/3) * (h**2) * (3*r-h)
v1 = (4*pi*(r**3)/6)+(pi*(r**2)*(h-r))
v2 = ((4*pi*(r**3))/6) + ((pi/3)*((r**2) * (h-r)) *2)

if(H<0 or h<0 or r<0 or H<h or H<2*r):
	print("Entradas invalidas")
elif(h <= r):
		print("Volume: ", round(v * 1000, 3), "litros")
elif(r < h and h <= H-r):
		print("Volume: ", round(v1 * 1000, 3), "litros")
elif(h > H-r):
		print("Volume: ", round(v2 * 1000, 3), "litros")

	
-- EXECUTION TIME:
0.207043
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume:  81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
