== TEST (2019-04-25 10:28:50) 
-- CODE:
a=float(input());
b=float(input());
c=float(input());
print("Entradas: "a", "b ", "c)
if(a<0 or b<0 or c<0):
	print("Tipo de triangulo: invalido")
	
	
	

-- ERROR:
File "XXXX", line 4
    print("Entradas: "a", "b ", "c)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:29:04) 
-- CODE:
a=float(input());
b=float(input());
c=float(input());
print("Entradas: "a ", "b ", "c)
if(a<0 or b<0 or c<0):
	print("Tipo de triangulo: invalido")
	
	
	

-- ERROR:
File "XXXX", line 4
    print("Entradas: "a ", "b ", "c)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:29:11) 
-- CODE:
a=float(input());
b=float(input());
c=float(input());
print("Entradas: " a ", "b ", "c)
if(a<0 or b<0 or c<0):
	print("Tipo de triangulo: invalido")
	
	
	

-- ERROR:
File "XXXX", line 4
    print("Entradas: " a ", "b ", "c)
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:30:18) 
-- CODE:
a=float(input());
b=float(input());
c=float(input());
print("Entradas: " a, ",", b, ",", c)
if(a<0 or b<0 or c<0):
	print("Tipo de triangulo: invalido")
	
	
	

-- ERROR:
File "XXXX", line 4
    print("Entradas: " a, ",", b, ",", c)
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:31:01) 
-- CODE:
a=float(input());
b=float(input());
c=float(input());
print("Entradas:", a, ",", b, ",", c)
if(a<0 or b<0 or c<0):
	print("Tipo de triangulo: invalido")
	
	
	

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:31:48) 
-- CODE:
a=float(input());
b=float(input());
c=float(input());
print("Entradas:", a, ",", b, ",", c)


	
	
	

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:42:04) 
-- CODE:
a=float(input());
b=float(input());
c=float(input());
print("Entradas:", a, ",", b, ",", c)
if (a<=0 or b<=0 or c<=0 ):
	print("Tipo de triangulo: invalido");
else:
	if(a+b)>c and (a+c)>b and (b+c)>c:
		if(a==b and b==c):
			print("Tipo de triangulo: equilatero")
		else:
			if(a==b or b==c or a==c):
				print("Tipo de triangulo: isosceles");
			else:
				print("Tipo de triangulo: escaleno");
	else:
		print("Tipo de triangulo: invalido")
	

	
	
	

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:43:19) 
-- CODE:
a=float(input());
b=float(input());
c=float(input());
print("Entradas:", a, ",", b, ",", c)
if (a<=0 or b<=0 or c<=0 ):
	print("Tipo de triangulo: invalido");
else:
	if(a+b)>c and (a+c)>b and (b+c)>c:
		if(a==b and b==c):
			print("Tipo de triangulo: equilatero")
		else:
			if(a==b or b==c or a==c):
				print("Tipo de triangulo: isosceles");
			else:
				print("Tipo de triangulo: escaleno");
	else:
		print("Tipo de triangulo: invalido")
	

	
	
	

-- EXECUTION TIME:
0.150663
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
