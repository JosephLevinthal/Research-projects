== TEST (2019-05-02 10:22:46) 
-- CODE:
po = int(input("quantidade de pecas de ouro: "))
na = input("nome da armadura: ").upper()
d = int(input("destreza sorteada no dado: "))
if((d<=8)and(d>=1)or(na!=INTEIRA)or(na!=PLACA)or(na!=MALHA)):
	if((na==INTEIRA)and(po>=200)):
		da=30*d - 20
	elif((na==MALHA)and(po>=50)):
		da= 15*d-1
	elif((na==PLACA)and(po>=100)):
		da=20*d-18
	print(da)	
else:
	print("Entrada invalida")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if((na==INTEIRA)and(po>=200)):
NameError: name 'INTEIRA' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:23:28) 
-- CODE:
po = int(input("quantidade de pecas de ouro: "))
na = input("nome da armadura: ").upper()
d = int(input("destreza sorteada no dado: "))
if((d<=8)and(d>=1)or(na!=INTEIRA)or(na!=PLACA)or(na!=MALHA)):
	if((na=="INTEIRA")and(po>=200)):
		da=30*d - 20
	elif((na=="MALHA")and(po>=50)):
		da= 15*d-1
	elif((na=="PLACA")and(po>=100)):
		da=20*d-18
	print(da)	
else:
	print("Entrada invalida")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(da)	
NameError: name 'da' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:25:10) 
-- CODE:
po = int(input("quantidade de pecas de ouro: "))
na = input("nome da armadura: ").upper()
d = int(input("destreza sorteada no dado: "))
if((d<=8)and(d>=1)or(na!=INTEIRA)or(na!=PLACA)or(na!=MALHA)):
	if((na=="INTEIRA")and(po>=200)):
		da=30*d - 20
	elif((na=="MALHA")and(po>=50)):
		da= 15*d-1
	elif((na=="PLACA")and(po>=100)):
		da=20*d-18
	print(da)	
	elif(po<50)
		print("PO insuficiente")	
else:
	print("Entrada invalida")
-- ERROR:
File "XXXX", line 12
    elif(po<50)
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:25:20) 
-- CODE:
po = int(input("quantidade de pecas de ouro: "))
na = input("nome da armadura: ").upper()
d = int(input("destreza sorteada no dado: "))
if((d<=8)and(d>=1)or(na!=INTEIRA)or(na!=PLACA)or(na!=MALHA)):
	if((na=="INTEIRA")and(po>=200)):
		da=30*d - 20
	elif((na=="MALHA")and(po>=50)):
		da= 15*d-1
	elif((na=="PLACA")and(po>=100)):
		da=20*d-18
	print(da)	
	elif(po<50):
		print("PO insuficiente")	
else:
	print("Entrada invalida")
-- ERROR:
File "XXXX", line 12
    elif(po<50):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:27:02) 
-- CODE:
po = int(input("quantidade de pecas de ouro: "))
na = input("nome da armadura: ").upper()
d = int(input("destreza sorteada no dado: "))
if((d<=8)and(d>=1)or(na!=INTEIRA)or(na!=PLACA)or(na!=MALHA)):
	if((na=="INTEIRA")and(po>=200)):
		da=30*d - 20
	elif((na=="MALHA")and(po>=50)):
		da= 15*d-1
	elif((na=="PLACA")and(po>=100)):
		da=20*d-18
	print(da)	
	else:
		print("PO insuficiente")	
else:
	print("Entrada invalida")
-- ERROR:
File "XXXX", line 12
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:27:24) 
-- CODE:
po = int(input("quantidade de pecas de ouro: "))
na = input("nome da armadura: ").upper()
d = int(input("destreza sorteada no dado: "))
if((d<=8)and(d>=1)or(na!=INTEIRA)or(na!=PLACA)or(na!=MALHA)):
	if((na=="INTEIRA")and(po>=200)):
		da=30*d - 20
	elif((na=="MALHA")and(po>=50)):
		da= 15*d-1
	elif((na=="PLACA")and(po>=100)):
		da=20*d-18
	print(da)	
	else:
	print("PO insuficiente")	
else:
	print("Entrada invalida")
-- ERROR:
File "XXXX", line 12
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:27:42) 
-- CODE:
po = int(input("quantidade de pecas de ouro: "))
na = input("nome da armadura: ").upper()
d = int(input("destreza sorteada no dado: "))
if((d<=8)and(d>=1)or(na!=INTEIRA)or(na!=PLACA)or(na!=MALHA)):
	if((na=="INTEIRA")and(po>=200)):
		da=30*d - 20
	elif((na=="MALHA")and(po>=50)):
		da= 15*d-1
	elif((na=="PLACA")and(po>=100)):
		da=20*d-18
	print(da)	
	#else:
	#print("PO insuficiente")	
else:
	print("Entrada invalida")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(da)	
NameError: name 'da' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:28:00) 
-- CODE:
po = int(input("quantidade de pecas de ouro: "))
na = input("nome da armadura: ").upper()
d = int(input("destreza sorteada no dado: "))
if((d<=8)and(d>=1)or(na!=INTEIRA)or(na!=PLACA)or(na!=MALHA)):
	if((na=="INTEIRA")and(po>=200)):
		da=30*d - 20
	elif((na=="MALHA")and(po>=50)):
		da= 15*d-1
	elif((na=="PLACA")and(po>=100)):
		da=20*d-18
	print(da)	
	#else:
	#print("PO insuficiente")	
else:
	print("Entrada invalida")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(da)	
NameError: name 'da' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:29:23) 
-- CODE:
po = int(input("quantidade de pecas de ouro: "))
na = input("nome da armadura: ").upper()
d = int(input("destreza sorteada no dado: "))
if((d<=8)and(d>=1)or(na!="INTEIRA")or(na!="PLACA")or(na!="MALHA")):
	if(po<50):
		print("PO insuficiente")
	elif((na=="INTEIRA")and(po>=200)):
		da=30*d - 20
	elif((na=="MALHA")and(po>=50)):
		da= 15*d-1
	elif((na=="PLACA")and(po>=100)):
		da=20*d-18
	print(da)	
		
else:
	print("Entrada invalida")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    print(da)	
NameError: name 'da' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:30:18) 
-- CODE:
po = int(input("quantidade de pecas de ouro: "))
na = input("nome da armadura: ").upper()
d = int(input("destreza sorteada no dado: "))
if((d<=8)and(d>=1)or(na!="INTEIRA")or(na!="PLACA")or(na!="MALHA")):
	if(po<50):
		print("PO insuficiente")
		if((na=="INTEIRA")and(po>=200)):
			da=30*d - 20
		elif((na=="MALHA")and(po>=50)):
			da= 15*d-1
		elif((na=="PLACA")and(po>=100)):
			da=20*d-18
		print(da)	
		
else:
	print("Entrada invalida")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    print(da)	
NameError: name 'da' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:32:42) 
-- CODE:
po = int(input("quantidade de pecas de ouro: "))
na = input("nome da armadura: ").upper()
d = int(input("destreza sorteada no dado: "))
if((d<=8)and(d>=1)or(na!="INTEIRA")or(na!="PLACA")or(na!="MALHA")):
	if(po>=50):
	elif((na=="INTEIRA")and(po>=200)):
		da=30*d - 20
	elif((na=="MALHA")and(po>=50)):
		da= 15*d-1
	elif((na=="PLACA")and(po>=100)):
		da=20*d-18
	print(da)	
	else:
		print("PO insuficiente")
else:
	print("Entrada invalida")
-- ERROR:
File "XXXX", line 6
    elif((na=="INTEIRA")and(po>=200)):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:33:03) 
-- CODE:
po = int(input("quantidade de pecas de ouro: "))
na = input("nome da armadura: ").upper()
d = int(input("destreza sorteada no dado: "))
if((d<=8)and(d>=1)or(na!="INTEIRA")or(na!="PLACA")or(na!="MALHA")):
	if(po>=50):
		elif((na=="INTEIRA")and(po>=200)):
			da=30*d - 20
		elif((na=="MALHA")and(po>=50)):
			da= 15*d-1
		elif((na=="PLACA")and(po>=100)):
			da=20*d-18
		print(da)	
	else:
		print("PO insuficiente")
else:
	print("Entrada invalida")
-- ERROR:
File "XXXX", line 6
    elif((na=="INTEIRA")and(po>=200)):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:34:01) 
-- CODE:
po = int(input("quantidade de pecas de ouro: "))
na = input("nome da armadura: ").upper()
d = int(input("destreza sorteada no dado: "))
if((d<=8)and(d>=1)or(na!="INTEIRA")or(na!="PLACA")or(na!="MALHA")):
	if(200>=po>=50):
		elif((na=="INTEIRA")and(po>=200)):
			da=30*d - 20
		elif((na=="MALHA")and(po>=50)):
			da= 15*d-1
		elif((na=="PLACA")and(po>=100)):
			da=20*d-18
		print(da)	
	else:
		print("PO insuficiente")
else:
	print("Entrada invalida")
-- ERROR:
File "XXXX", line 6
    elif((na=="INTEIRA")and(po>=200)):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:34:56) 
-- CODE:
po = int(input("quantidade de pecas de ouro: "))
na = input("nome da armadura: ").upper()
d = int(input("destreza sorteada no dado: "))
if((d<=8)and(d>=1)or(na!="INTEIRA")or(na!="PLACA")or(na!="MALHA")):
	if(200>=po>=50):
		elif(na=="INTEIRA"):
			da=30*d - 20
		elif(na=="MALHA"):
			da= 15*d-1
		elif(na=="PLACA"):
			da=20*d-18
		print(da)	
	else:
		print("PO insuficiente")
else:
	print("Entrada invalida")
-- ERROR:
File "XXXX", line 6
    elif(na=="INTEIRA"):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:35:25) 
-- CODE:
po = int(input("quantidade de pecas de ouro: "))
na = input("nome da armadura: ").upper()
d = int(input("destreza sorteada no dado: "))
if((d<=8)and(d>=1)or(na!="INTEIRA")or(na!="PLACA")or(na!="MALHA")):
	if(200>=po>=50):
		elif('na' =="INTEIRA"):
			da=30*d - 20
		elif('na'=="MALHA"):
			da= 15*d-1
		elif('na'=="PLACA"):
			da=20*d-18
		print(da)	
	else:
		print("PO insuficiente")
else:
	print("Entrada invalida")
-- ERROR:
File "XXXX", line 6
    elif('na' =="INTEIRA"):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:42:50) 
-- CODE:
po = int(input("quantidade de pecas de ouro: "))
na = input("nome da armadura: ").upper()
d = int(input("destreza sorteada no dado: "))
if((d<=8)and(d>=1)or(na!="INTEIRA")or(na!="PLACA")or(na!="MALHA")):
	if((po<50)or(po<100)and(na=="PLACA")or(po<200)and(na=="INTEIRA")):
		print("PO insuficiente")
	elif((a=="INTEIRA"):
		  da=30*d -20
		  print(da)
	elif(na=="MALHA"):	
		  da=15*d -1
		  print(da)
	elif(na=="PLACA"):
		  da= 20*d-18
		  print(da)
else:
	print("Entrada invalida")
-- ERROR:
File "XXXX", line 7
    elif((a=="INTEIRA"):
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:43:05) 
-- CODE:
po = int(input("quantidade de pecas de ouro: "))
na = input("nome da armadura: ").upper()
d = int(input("destreza sorteada no dado: "))
if((d<=8)and(d>=1)or(na!="INTEIRA")or(na!="PLACA")or(na!="MALHA")):
	if((po<50)or(po<100)and(na=="PLACA")or(po<200)and(na=="INTEIRA")):
		print("PO insuficiente")
	elif(na=="INTEIRA"):
		  da=30*d -20
		  print(da)
	elif(na=="MALHA"):	
		  da=15*d -1
		  print(da)
	elif(na=="PLACA"):
		  da= 20*d-18
		  print(da)
else:
	print("Entrada invalida")
-- OUTPUT:
PO insuficiente
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 10:43:17) 
-- CODE:
po = int(input("quantidade de pecas de ouro: "))
na = input("nome da armadura: ").upper()
d = int(input("destreza sorteada no dado: "))
if((d<=8)and(d>=1)or(na!="INTEIRA")or(na!="PLACA")or(na!="MALHA")):
	if((po<50)or(po<100)and(na=="PLACA")or(po<200)and(na=="INTEIRA")):
		print("PO insuficiente")
	elif(na=="INTEIRA"):
		  da=30*d -20
		  print(da)
	elif(na=="MALHA"):	
		  da=15*d -1
		  print(da)
	elif(na=="PLACA"):
		  da= 20*d-18
		  print(da)
else:
	print("Entrada invalida")
-- EXECUTION TIME:
0.114076
-- TEST CASE 1:
---- input:
-2
INTEIRA
2
---- correct output:
PO insuficiente
---- user output:
PO insuficiente
-- TEST CASE 2:
---- input:
8
MALHA
8
---- correct output:
PO insuficiente
---- user output:
PO insuficiente
-- TEST CASE 3:
---- input:
56
MALHA
5
---- correct output:
74
---- user output:
74
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
