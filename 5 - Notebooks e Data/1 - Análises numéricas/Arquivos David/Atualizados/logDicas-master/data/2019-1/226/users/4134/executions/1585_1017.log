== TEST (2019-03-22 14:13:08) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

import math

Lt = math.radians(float(input("Latitude de t1 em p1: "))
Lg = math.radians(float(input("Longetude de g1 em p1: "))
Lt2 = math.radians(float(input("Latitude de t2 em p2: "))
Lg2 = math.radians(float(input("Longetude de g2 em p2"))

e = Lt + Lg

print(e)
-- ERROR:
File "XXXX", line 8
    Lg = math.radians(float(input())
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 14:13:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

import math

Lt = radians(float(input("Latitude de t1 em p1: "))
Lg = radians(float(input("Longetude de g1 em p1: "))
Lt2 = radians(float(input("Latitude de t2 em p2: "))
Lg2 = radians(float(input("Longetude de g2 em p2"))

e = Lt + Lg

print(e)
-- ERROR:
File "XXXX", line 8
    Lg = radians(float(input())
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 14:14:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

import math

Lt = radians(float(input("Latitude de t1 em p1: "))
Lg = radians(float(input("Longetude de g1 em p1: "))
Lat = radians(float(input("Latitude de t2 em p2: "))
Loge = radians(float(input("Longetude de g2 em p2"))

e = Lt + Lg

print(e)

-- ERROR:
File "XXXX", line 8
    Lg = radians(float(input())
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 14:14:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

import math

Latee = radians(float(input("Latitude de t1 em p1: "))
Logee = radians(float(input("Longetude de g1 em p1: "))
Lat = radians(float(input("Latitude de t2 em p2: "))
Loge = radians(float(input("Longetude de g2 em p2"))

e = Lt + Lg

print(e)

-- ERROR:
File "XXXX", line 8
    Logee = radians(float(input())
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 14:14:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

import math

Latee = radians(float(input("Latitude de t1 em p1: "))
x = radians(float(input("Longetude de g1 em p1: "))
Lat = radians(float(input("Latitude de t2 em p2: "))
Loge = radians(float(input("Longetude de g2 em p2"))

e = Lt + Lg

print(e)

-- ERROR:
File "XXXX", line 8
    x = radians(float(input())
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 14:18:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

ang1 = radians(float(input("Angulo1: ")))
ang2 = radians(float(input("Angulo2: ")))
ang3 = radians(float(input("Angulo3: ")))
ang4 = radians(float(input("Angulo4: ")))

print(ang1 + ang2 + ang3)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    ang1 = radians(float(input()))
NameError: name 'radians' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 14:20:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

ang = radians(float(input("Angulo1: ")))


print(ang1 + 10)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    ang = radians(float(input()))
NameError: name 'radians' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 14:20:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

import math

ang = radians(float(input("Angulo1: ")))


print(ang1 + 10)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    ang = radians(float(input()))
NameError: name 'radians' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 14:21:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

import math

ang = math.radians(float(input("Angulo1: ")))


print(ang1 + 10)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(ang1 + 10)
NameError: name 'ang1' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 14:21:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

import math

ang = math.radians(float(input("Angulo1: ")))


print(ang + 10)

-- OUTPUT:
9.947009517528132
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 14:28:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

import math

ang = math.radians(float(input("Angulo1: ")))

print(round(ang, 2))

-- OUTPUT:
-0.05
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:15:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

import math

ang = math.radians(float(input("Angulo1: ")))

print(round(ang, 2))

-- OUTPUT:
-0.05
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:39:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math

t1 = math.radians(float(input("Latitude de P1: ")))
g1 = math.radians(float(input("Longitude de P1:  ")))
t2 = math.radians(float(input("Latitude de P2: ")))
g2 = math.radians(float(input("Longitude de P2: ")))

r = float(6371.01)
d = r*arcoss((sin(t1)*sin(t2)) + cos(t1) * cos(t2) * cos(g1-g2))

print(round(d, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    d = r*arcoss((sin(t1)*sin(t2)) + cos(t1) * cos(t2) * cos(g1-g2))
NameError: name 'arcoss' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 10:39:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math

t1 = math.radians(float(input("Latitude de P1: ")))
g1 = math.radians(float(input("Longitude de P1:  ")))
t2 = math.radians(float(input("Latitude de P2: ")))
g2 = math.radians(float(input("Longitude de P2: ")))

r = float(6371.01)
d = r*arcoss((sin(t1)*sin(t2)) + cos(t1) * cos(t2) * cos(g1-g2))

print(round(d, 2))
-- EXECUTION TIME:
0.143227
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1585/1017/main.py", line 12, in <module>
    d = r*arcoss((sin(t1)*sin(t2)) + cos(t1) * cos(t2) * cos(g1-g2))
NameError: name 'arcoss' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 10:40:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*

t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("Longitude de P1:  ")))
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("Longitude de P2: ")))

r = float(6371.01)
d = r*arccos((sin(t1)*sin(t2)) + cos(t1) * cos(t2) * cos(g1-g2))

print(round(d, 2))
-- EXECUTION TIME:
0.132509
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1585/1017/main.py", line 12, in <module>
    d = r*arccos((sin(t1)*sin(t2)) + cos(t1) * cos(t2) * cos(g1-g2))
NameError: name 'arccos' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:40:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*

t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("Longitude de P1:  ")))
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("Longitude de P2: ")))

r = float(6371.01)
d = r*arccos((sin(t1)*sin(t2)) + cos(t1) * cos(t2) * cos(g1-g2))

print(round(d, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    d = r*arccos((sin(t1)*sin(t2)) + cos(t1) * cos(t2) * cos(g1-g2))
NameError: name 'arccos' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 10:40:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*

t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("Longitude de P1:  ")))
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("Longitude de P2: ")))

r = float(6371.01)
d = r*acos((sin(t1)*sin(t2)) + cos(t1) * cos(t2) * cos(g1-g2))

print(round(d, 2))
-- EXECUTION TIME:
0.149545
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
50.44
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:41:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*

t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("Longitude de P1:  ")))
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("Longitude de P2: ")))

r = float(6371.01)
d = r*acos((sin(t1)*sin(t2)) + cos(t1) * cos(t2) * cos(g1-g2))

print(round(d, 2))
-- OUTPUT:
50.44
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 10:41:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*

t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("Longitude de P1:  ")))
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("Longitude de P2: ")))

r = float(6371.01)
d = r*acos((sin(t1)*sin(t2)) + cos(t1) * cos(t2) * cos(g1-g2))

print(round(d, 2))
-- EXECUTION TIME:
0.179642
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
50.44
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 11:18:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*

t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("Longitude de P1:  ")))
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("Longitude de P2: ")))

r = (6371.01)
d = r*acos((sin(t1)*sin(t2)) + cos(t1) * cos(t2) * cos(g1-g2))

print(round(d, 2))
-- EXECUTION TIME:
0.13863
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
50.44
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
