== TEST (2019-03-21 11:57:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero1=int(input("digite o numero: "))
numero2=int(input("digite o numero: "))
numero3=int(input("digite o numero: "))
frist=min(numero1,numero2,numero3)
third=max(numero1,numero2,numero3)
second= frist-third
print frist,second,third
-- ERROR:
File "XXXX", line 10
    print frist,second,third
              ^
SyntaxError: Missing parentheses in call to 'print'. Did you mean print(frist,second,third)?
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:57:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero1=int(input("digite o numero: "))
numero2=int(input("digite o numero: "))
numero3=int(input("digite o numero: "))
frist=min(numero1,numero2,numero3)
third=max(numero1,numero2,numero3)
second= frist-third
print (frist)
print(second)
print(third)

-- OUTPUT:
-2
-12
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 11:58:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero1=int(input("digite o numero: "))
numero2=int(input("digite o numero: "))
numero3=int(input("digite o numero: "))
frist=min(numero1,numero2,numero3)
third=max(numero1,numero2,numero3)
second= frist-third
print (frist)
print(second)
print(third)

-- EXECUTION TIME:
0.184175
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
-12
10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:59:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero1=int(input("digite o numero: "))
numero2=int(input("digite o numero: "))
numero3=int(input("digite o numero: "))
frist=min(numero1,numero2,numero3)
third=max(numero1,numero2,numero3)
second= frist-third
print(frist)

-- OUTPUT:
-2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:59:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero1=int(input("digite o numero: "))
numero2=int(input("digite o numero: "))
numero3=int(input("digite o numero: "))
frist=min(numero1,numero2,numero3)
third=max(numero1,numero2,numero3)
second= frist-third
print(frist)
print(third)
-- OUTPUT:
-2
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 12:01:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero1=int(input("digite o numero: "))
numero2=int(input("digite o numero: "))
numero3=int(input("digite o numero: "))
first=min(numero1,numero2,numero3)
third=max(numero1,numero2,numero3)
second= third-first
print(first)
print(second)
print(third)
-- OUTPUT:
-2
12
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 12:01:21) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero1=int(input("digite o numero: "))
numero2=int(input("digite o numero: "))
numero3=int(input("digite o numero: "))
first=min(numero1,numero2,numero3)
third=max(numero1,numero2,numero3)
second= third-first
print(first)
print(second)
print(third)
-- EXECUTION TIME:
0.124211
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
12
10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 12:02:08) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero1=int(input("digite o numero: "))
numero2=int(input("digite o numero: "))
numero3=int(input("digite o numero: "))
first=min(numero1,numero2,numero3)
third=max(numero1,numero2,numero3)
second= third-first
print(first)
print(second)
print(third)
-- OUTPUT:
-2
12
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 12:02:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero1=int(input("digite o numero: "))
numero2=int(input("digite o numero: "))
numero3=int(input("digite o numero: "))
first=min(numero1,numero2,numero3)
third=max(numero1,numero2,numero3)
second= third-first
print(first)
print(second)
print(third)
-- OUTPUT:
-2
12
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 12:02:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero1=int(input("digite o numero: "))
numero2=int(input("digite o numero: "))
numero3=int(input("digite o numero: "))
first=min(numero1,numero2,numero3)
third=max(numero1,numero2,numero3)
second= third-first
print(first)
print(second)
print(third)
-- OUTPUT:
-2
12
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 12:03:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero1=int(input("digite o numero: "))
numero2=int(input("digite o numero: "))
numero3=int(input("digite o numero: "))
first=min(numero1,numero2,numero3)
third=max(numero1,numero2,numero3)
second= third-first
print(first)
print(second)
print(third)
-- OUTPUT:
-2
12
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 12:03:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero1=int(input("digite o numero: "))
numero2=int(input("digite o numero: "))
numero3=int(input("digite o numero: "))
first=min(numero1,numero2,numero3)
third=max(numero1,numero2,numero3)
second= third-first
print(first)
print(second)
print(third)
-- EXECUTION TIME:
0.143129
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
12
10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 12:03:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero1=int(input("digite o numero: "))
numero2=int(input("digite o numero: "))
numero3=int(input("digite o numero: "))
first=min(numero1,numero2,numero3)
third=max(numero1,numero2,numero3)
second= third-first
print(first)
print(second)
print(third)
-- OUTPUT:
-2
12
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 12:05:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero1=int(input("digite o numero: "))
numero2=int(input("digite o numero: "))
numero3=int(input("digite o numero: "))
first=min(numero1,numero2,numero3)
third=max(numero1,numero2,numero3)
second= third-first
print(first)
print(second)
print(third)
-- EXECUTION TIME:
0.139917
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
12
10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 22:06:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero1=int(input("digite o numero: "))
numero2=int(input("digite o numero: "))
numero3=int(input("digite o numero: "))
first=min(numero1,numero2,numero3)
third=max(numero1,numero2,numero3)
second= third-first
print(first)
print(second)
print(third)
-- OUTPUT:
-2
12
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 22:13:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero1=int(input("digite o numero: "))
numero2=int(input("digite o numero: "))
numero3=int(input("digite o numero: "))
first=min(numero1,numero2,numero3)
third=max(numero1,numero2,numero3)
second= (numero1+numero2+numero3) - first - third
print(first)
print(second)
print(third)
-- OUTPUT:
-2
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 22:13:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero1=int(input("digite o numero: "))
numero2=int(input("digite o numero: "))
numero3=int(input("digite o numero: "))
first=min(numero1,numero2,numero3)
third=max(numero1,numero2,numero3)
second= (numero1+numero2+numero3) - first - third
print(first)
print(second)
print(third)
-- EXECUTION TIME:
0.246343
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
0
10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:32:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero1=int(input("digite o numero: "))
numero2=int(input("digite o numero: "))
numero3=int(input("digite o numero: "))
first=min(numero1,numero2,numero3)
third=max(numero1,numero2,numero3)
second= (numero1+numero2+numero3) - (first - third)
print(first)
print(second)
print(third)
-- OUTPUT:
-2
20
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:32:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero1=int(input("digite o numero: "))
numero2=int(input("digite o numero: "))
numero3=int(input("digite o numero: "))
first=min(numero1,numero2,numero3)
third=max(numero1,numero2,numero3)
second= (numero1+numero2+numero3) - (first - third)
print(first)
print(second)
print(third)
-- OUTPUT:
-2
20
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 10:32:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero1=int(input("digite o numero: "))
numero2=int(input("digite o numero: "))
numero3=int(input("digite o numero: "))
first=min(numero1,numero2,numero3)
third=max(numero1,numero2,numero3)
second= (numero1+numero2+numero3) - first - third
print(first)
print(second)
print(third)
-- OUTPUT:
-2
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
