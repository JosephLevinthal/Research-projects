== TEST (2019-04-09 10:57:31) 
-- CODE:
a = float(input("Preco a pagar: "))
b = float(input("Pagamento:"))
eq = a - b
eq2 = b-a
if ( a > b):
	mgs = "Falta" " " eq
else: 
	mgs = "Troco de" " " eq2
print(round(mgs))
-- ERROR:
File "XXXX", line 6
    mgs = "Falta" " " eq
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:57:59) 
-- CODE:
a = float(input("Preco a pagar: "))
b = float(input("Pagamento:"))
eq = a - b
eq2 = b-a
if ( a > b):
	mgs = "Falta" " " + eq
else: 
	mgs = "Troco de" " " + eq2
print(round(mgs))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    mgs = "Falta" " " + eq
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:59:02) 
-- CODE:
a = input("Preco a pagar: ")
b = input("Pagamento:")
eq = a - b
eq2 = b-a
if ( a > b):
	mgs = "Falta" " " + eq
else: 
	mgs = "Troco de" " " + eq2
print(round(mgs))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    eq = a - b
TypeError: unsupported operand type(s) for -: 'str' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:59:31) 
-- CODE:
a = input("Preco a pagar: ")
b = input("Pagamento:")
eq = a - b
eq2 = b-a
if ( a > b):
	mgs = "Falta" " " + eq
else: 
	mgs = "Troco de" " " + eq2
print(round(mgs))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    eq = a - b
TypeError: unsupported operand type(s) for -: 'str' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:00:06) 
-- CODE:
a = input("Preco a pagar: ")
b = input("Pagamento:")
eq = (a - b)
eq2 = (b-a)
if ( a > b):
	mgs = "Falta" " " + eq
else: 
	mgs = "Troco de" " " + eq2
print(round(mgs))
-- EXECUTION TIME:
0.164965
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1637/2447/main.py", line 3, in <module>
    eq = (a - b)
TypeError: unsupported operand type(s) for -: 'str' and 'str'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:00:09) 
-- CODE:
a = input("Preco a pagar: ")
b = input("Pagamento:")
eq = (a - b)
eq2 = (b-a)
if ( a > b):
	mgs = "Falta" " " + eq
else: 
	mgs = "Troco de" " " + eq2
print(round(mgs))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    eq = (a - b)
TypeError: unsupported operand type(s) for -: 'str' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:04:31) 
-- CODE:
a = float(input("Preco a pagar: "))
b = float(input("Pagamento:"))
if ( a > b):
	 eq = a - b
	print(round("Falta",eq))
else: 
	eq = b - a
	print(round("Troco", eq))
-- EXECUTION TIME:
0.184542
-- ERROR:
  File "/home/codebench/codes/1637/2447/main.py", line 5
    print(round("Falta",eq))
                           ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:04:36) 
-- CODE:
a = float(input("Preco a pagar: "))
b = float(input("Pagamento:"))
if ( a > b):
	 eq = a - b
	print(round("Falta",eq))
else: 
	eq = b - a
	print(round("Troco", eq))
-- ERROR:
File "XXXX", line 5
    print(round("Falta",eq))
                           ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:05:06) 
-- CODE:
a = float(input("Preco a pagar: "))
b = float(input("Pagamento:"))
if ( a > b):
	 eq = a - b
	print(round("Falta" , eq))
else: 
	eq = b - a
	print(round("Troco", eq))
-- ERROR:
File "XXXX", line 5
    print(round("Falta" , eq))
                             ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:05:17) 
-- CODE:
a = float(input("Preco a pagar: "))
b = float(input("Pagamento:"))
if ( a > b):
	 eq = a - b
	print(round("Falta"  eq))
else: 
	eq = b - a
	print(round("Troco" eq))
-- ERROR:
File "XXXX", line 5
    print(round("Falta"  eq))
                            ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:06:33) 
-- CODE:
a = float(input("Preco a pagar: "))
b = float(input("Pagamento:"))
if ( a > b):
	 eq = a - b
	print(round("Falta"  eq))
else: 
	eq = b - a
	print(round("Troco" eq))
-- ERROR:
File "XXXX", line 5
    print(round("Falta"  eq))
                            ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:06:46) 
-- CODE:
a = float(input("Preco a pagar: "))
b = float(input("Pagamento:"))
if ( a > b):
	 eq = a - b
	print(round("Falta" + eq))
else: 
	eq = b - a
	print(round("Troco" eq))
-- ERROR:
File "XXXX", line 5
    print(round("Falta" + eq))
                             ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:06:59) 
-- CODE:
a = float(input("Preco a pagar: "))
b = float(input("Pagamento:"))
if ( a > b):
	 eq = a - b
	print("Falta" + eq)
else: 
	eq = b - a
	print(("Troco" eq)
-- ERROR:
File "XXXX", line 5
    print("Falta" + eq)
                      ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:07:41) 
-- CODE:
a = float(input("Preco a pagar: "))
b = float(input("Pagamento:"))
if ( a > b):
	 eq = a - b
	print(round("Falta" + eq, 2))
else: 
	eq = b - a
	print(round("Troco" eq, 2))
-- ERROR:
File "XXXX", line 5
    print(round("Falta" + eq, 2))
                                ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:14:01) 
-- CODE:
a = float(input("Preco a pagar: "))
b = float(input("Pagamento:"))
if ( a > b):
	eq = a - b
	round(eq,2)
	mgs = "Falta "
else: 
	eq = b - a
	round(eq,2)
	mgs = "Troco de "
print(mgs,eq)
-- EXECUTION TIME:
0.202331
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta  26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de  28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de  0.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
