== TEST (2019-04-30 10:41:19) 
-- CODE:
cons=int(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalaçao: (R/I/C)").upper()

print("Entradas:",cons,"e","tipo",tip)

if((val<0)and(tip!="R"or tip!="R" or tip!="C")):
	print("Dados invalidos")
elif(tip=="R"):
	if(cons<=500):
		vr=cons*0.44
	   print("Valor total:","R$",vr)

-- ERROR:
File "XXXX", line 11
    print("Valor total:","R$",vr)
                                ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:41:27) 
-- CODE:
cons=int(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalaçao: (R/I/C)").upper()

print("Entradas:",cons,"e","tipo",tip)

if((val<0)and(tip!="R"or tip!="R" or tip!="C")):
	print("Dados invalidos")
elif(tip=="R"):
	if(cons<=500):
		vr=cons*0.44
	    print("Valor total:","R$",vr)

-- ERROR:
File "XXXX", line 11
    print("Valor total:","R$",vr)
                                ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:41:30) 
-- CODE:
cons=int(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalaçao: (R/I/C)").upper()

print("Entradas:",cons,"e","tipo",tip)

if((val<0)and(tip!="R"or tip!="R" or tip!="C")):
	print("Dados invalidos")
elif(tip=="R"):
	if(cons<=500):
		vr=cons*0.44
	       print("Valor total:","R$",vr)

-- ERROR:
File "XXXX", line 11
    print("Valor total:","R$",vr)
                                ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:41:36) 
-- CODE:
cons=int(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalaçao: (R/I/C)").upper()

print("Entradas:",cons,"e","tipo",tip)

if((val<0)and(tip!="R"or tip!="R" or tip!="C")):
	print("Dados invalidos")
elif(tip=="R"):
	if(cons<=500):
		vr=cons*0.44
	print("Valor total:","R$",vr)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if((val<0)and(tip!="R"or tip!="R" or tip!="C")):
NameError: name 'val' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:42:31) 
-- CODE:
cons=int(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()

print("Entradas:",cons,"e","tipo",tip)

if((val<0)and(tip!="R"or tip!="R" or tip!="C")):
	print("Dados invalidos")
elif(tip=="R"):
	if(cons<=500):
		vr=cons*0.44
	print("Valor total:","R$",vr)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if((val<0)and(tip!="R"or tip!="R" or tip!="C")):
NameError: name 'val' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:42:56) 
-- CODE:
cons=int(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()

print("Entradas:",cons,"e","tipo",tip)

if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
	print("Dados invalidos")
elif(tip=="R"):
	if(cons<=500):
		vr=cons*0.44
	print("Valor total:","R$",vr)

-- OUTPUT:
Entradas: -56 e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:45:25) 
-- CODE:
cons=int(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()

print("Entradas:",cons,"e","tipo",tip)

if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
	print("Dados invalidos")
elif(tip=="R"):
	if(cons<=500):
		vr=cons*0.44
	print("Valor total:","R$",vr)
	else:
		vr1=cons*0.65
		print("Valor total:","R$",vr1)

-- ERROR:
File "XXXX", line 12
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:45:53) 
-- CODE:
cons=int(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()

print("Entradas:",cons,"e","tipo",tip)

if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
	print("Dados invalidos")
elif(tip=="R"):
	if(cons<=500):
		vr=cons*0.44
	print("Valor total:","R$",vr)
else:
		vr1=cons*0.65
		print("Valor total:","R$",vr1)

-- OUTPUT:
Entradas: -56 e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:46:20) 
-- CODE:
cons=int(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()

print("Entradas:",cons,"e","tipo",tip)

if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
	print("Dados invalidos")
elif(tip=="R"):
	if(cons<=500):
		vr=cons*0.44
	print("Valor total:","R$",vr)
else:
		vr1=cons*0.65
		print("Valor total:","R$",vr1)

-- OUTPUT:
Entradas: -56 e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:46:47) 
-- CODE:
cons=int(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()

print("Entradas:",cons,"e","tipo",tip)

if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
	print("Dados invalidos")
elif(tip=="R"):
	if(cons<=500):
		vr=cons*0.44
	print("Valor total:","R$",vr)
   else:
		vr1=cons*0.65
		print("Valor total:","R$",vr1)

-- ERROR:
File "XXXX", line 12
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:48:02) 
-- CODE:
cons=int(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()

print("Entradas:",cons,"e","tipo",tip)

if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
	print("Dados invalidos")
elif(tip=="R"):
	if(cons<=500):
		vr=cons*0.44
	   print("Valor total:","R$",vr)
	
   else:
		vr1=cons*0.65
		print("Valor total:","R$",vr1)

-- ERROR:
File "XXXX", line 11
    print("Valor total:","R$",vr)
                                ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:48:07) 
-- CODE:
cons=int(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()

print("Entradas:",cons,"e","tipo",tip)

if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
	print("Dados invalidos")
elif(tip=="R"):
	if(cons<=500):
		vr=cons*0.44
	print("Valor total:","R$",vr)
	
   else:
		vr1=cons*0.65
		print("Valor total:","R$",vr1)

-- ERROR:
File "XXXX", line 13
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:48:10) 
-- CODE:
cons=int(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()

print("Entradas:",cons,"e","tipo",tip)

if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
	print("Dados invalidos")
elif(tip=="R"):
	if(cons<=500):
		vr=cons*0.44
print("Valor total:","R$",vr)
	
   else:
		vr1=cons*0.65
		print("Valor total:","R$",vr1)

-- ERROR:
File "XXXX", line 13
    else:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:48:41) 
-- CODE:
cons=int(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()

print("Entradas:",cons,"e","tipo",tip)

if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
	print("Dados invalidos")
elif(tip=="R"):
	if(cons<=500):
		vr=cons*0.44
   print("Valor total:","R$",vr)
else:
		vr1=cons*0.65
		print("Valor total:","R$",vr1)

-- ERROR:
File "XXXX", line 11
    print("Valor total:","R$",vr)
                                ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:49:19) 
-- CODE:
cons=int(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()

print("Entradas:",cons,"e","tipo",tip)

if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
	print("Dados invalidos")
elif(tip=="R"):
	if(cons<=500):
		vr=cons*0.44
   print("Valor total:","R$",vr)
   else:
		vr1=cons*0.65
		print("Valor total:","R$",vr1)

-- ERROR:
File "XXXX", line 11
    print("Valor total:","R$",vr)
                                ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:51:04) 
-- CODE:
cons=int(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()

print("Entradas:",cons,"e","tipo",tip)

if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
	print("Dados invalidos")
elif(tip=="R"):
	if(cons<=500):
		vr=cons*0.44
      print("Valor total:","R$",vr)
   else:
		vr1=cons*0.65
		print("Valor total:","R$",vr1)

-- ERROR:
File "XXXX", line 11
    print("Valor total:","R$",vr)
                                ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:53:28) 
-- CODE:
cons=int(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()

print("Entradas:",cons,"e","tipo",tip)

if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
	print("Dados invalidos")
elif(tip=="R"):
	if(cons<=500):
		vr=cons*0.44
		print("Valor total:","R$",vr)
	else:
		vr1=cons*0.65
		print("Valor total:","R$",vr1)

-- OUTPUT:
Entradas: -56 e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:53:47) 
-- CODE:
cons=int(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()

print("Entradas:",cons,"e","tipo",tip)

if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
	print("Dados invalidos")
elif(tip=="R"):
	if(cons<=500):
		vr=cons*0.44
		print("Valor total:","R$",vr)
	else:
		vr1=cons*0.65
		print("Valor total:","R$",vr1)

-- OUTPUT:
Entradas: -56 e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:57:17) 
-- CODE:
cons=int(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()

print("Entradas:",cons,"e","tipo",tip)

if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
	print("Dados invalidos")
elif(tip=="R"):
	if(cons<=500):
		vr=cons*0.44
		print("Valor total:","R$",vr)
	else:
		vr1=cons*0.65
		print("Valor total:","R$",vr1)
elif(tip=="I"):
	if(cons<=1000):
		vi=cons*0.55
		print("Valor total:","R$",vi)
	else:
		vi1=cons*0.60
		print("Valor total:","R$",vi1)
-- OUTPUT:
Entradas: -56 e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:00:46) 
-- CODE:
cons=int(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()

print("Entradas:",cons,"e","tipo",tip)

if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
	print("Dados invalidos")
elif(tip=="R"):
	if(cons<=500):
		vr=cons*0.44
		print("Valor total:","R$",vr)
	else:
		vr1=cons*0.65
		print("Valor total:","R$",vr1)
elif(tip=="I"):
	if(cons<=5000):
		vi=cons*0.55
		print("Valor total:","R$",vi)
	else:
		vi1=cons*0.60
		print("Valor total:","R$",vi1)
elif(tip=="C"):
	if(cons<=1000):
		vc=cons*0.55
		print("Valor total:","R$",vc)
	else:
		vc1=cons*0.60
		print("Valor total:","R$",vc1)
-- OUTPUT:
Entradas: -56 e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 11:01:06) 
-- CODE:
cons=int(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()

print("Entradas:",cons,"e","tipo",tip)

if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
	print("Dados invalidos")
elif(tip=="R"):
	if(cons<=500):
		vr=cons*0.44
		print("Valor total:","R$",vr)
	else:
		vr1=cons*0.65
		print("Valor total:","R$",vr1)
elif(tip=="I"):
	if(cons<=5000):
		vi=cons*0.55
		print("Valor total:","R$",vi)
	else:
		vi1=cons*0.60
		print("Valor total:","R$",vi1)
elif(tip=="C"):
	if(cons<=1000):
		vc=cons*0.55
		print("Valor total:","R$",vc)
	else:
		vc1=cons*0.60
		print("Valor total:","R$",vc1)
-- EXECUTION TIME:
0.137241
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56 e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:01:30) 
-- CODE:
cons=int(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()

print("Entradas:",cons,"e","tipo",tip)

if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
	print("Dados invalidos")
elif(tip=="R"):
	if(cons<=500):
		vr=cons*0.44
		print("Valor total:","R$",vr)
	else:
		vr1=cons*0.65
		print("Valor total:","R$",vr1)
elif(tip=="I"):
	if(cons<=5000):
		vi=cons*0.55
		print("Valor total:","R$",vi)
	else:
		vi1=cons*0.60
		print("Valor total:","R$",vi1)
elif(tip=="C"):
	if(cons<=1000):
		vc=cons*0.55
		print("Valor total:","R$",vc)
	else:
		vc1=cons*0.60
		print("Valor total:","R$",vc1)
-- OUTPUT:
Entradas: -56 e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:02:22) 
-- CODE:
cons=int(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()

print("Entradas:",cons,"kwh","e","tipo",tip)

if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
	print("Dados invalidos")
elif(tip=="R"):
	if(cons<=500):
		vr=cons*0.44
		print("Valor total:","R$",vr)
	else:
		vr1=cons*0.65
		print("Valor total:","R$",vr1)
elif(tip=="I"):
	if(cons<=5000):
		vi=cons*0.55
		print("Valor total:","R$",vi)
	else:
		vi1=cons*0.60
		print("Valor total:","R$",vi1)
elif(tip=="C"):
	if(cons<=1000):
		vc=cons*0.55
		print("Valor total:","R$",vc)
	else:
		vc1=cons*0.60
		print("Valor total:","R$",vc1)
-- OUTPUT:
Entradas: -56 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 11:02:39) 
-- CODE:
cons=int(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()

print("Entradas:",cons,"kwh","e","tipo",tip)

if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
	print("Dados invalidos")
elif(tip=="R"):
	if(cons<=500):
		vr=cons*0.44
		print("Valor total:","R$",vr)
	else:
		vr1=cons*0.65
		print("Valor total:","R$",vr1)
elif(tip=="I"):
	if(cons<=5000):
		vi=cons*0.55
		print("Valor total:","R$",vi)
	else:
		vi1=cons*0.60
		print("Valor total:","R$",vi1)
elif(tip=="C"):
	if(cons<=1000):
		vc=cons*0.55
		print("Valor total:","R$",vc)
	else:
		vc1=cons*0.60
		print("Valor total:","R$",vc1)
-- EXECUTION TIME:
0.183413
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:02:54) 
-- CODE:
cons=int(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()

print("Entradas:",cons,"KWh","e","tipo",tip)

if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
	print("Dados invalidos")
elif(tip=="R"):
	if(cons<=500):
		vr=cons*0.44
		print("Valor total:","R$",vr)
	else:
		vr1=cons*0.65
		print("Valor total:","R$",vr1)
elif(tip=="I"):
	if(cons<=5000):
		vi=cons*0.55
		print("Valor total:","R$",vi)
	else:
		vi1=cons*0.60
		print("Valor total:","R$",vi1)
elif(tip=="C"):
	if(cons<=1000):
		vc=cons*0.55
		print("Valor total:","R$",vc)
	else:
		vc1=cons*0.60
		print("Valor total:","R$",vc1)
-- OUTPUT:
Entradas: -56 KWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 11:03:02) 
-- CODE:
cons=int(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()

print("Entradas:",cons,"KWh","e","tipo",tip)

if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
	print("Dados invalidos")
elif(tip=="R"):
	if(cons<=500):
		vr=cons*0.44
		print("Valor total:","R$",vr)
	else:
		vr1=cons*0.65
		print("Valor total:","R$",vr1)
elif(tip=="I"):
	if(cons<=5000):
		vi=cons*0.55
		print("Valor total:","R$",vi)
	else:
		vi1=cons*0.60
		print("Valor total:","R$",vi1)
elif(tip=="C"):
	if(cons<=1000):
		vc=cons*0.55
		print("Valor total:","R$",vc)
	else:
		vc1=cons*0.60
		print("Valor total:","R$",vc1)
-- EXECUTION TIME:
0.139137
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56 KWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:03:14) 
-- CODE:
cons=int(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()

print("Entradas:",cons,"KWh","e","tipo",tip)

if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
	print("Dados invalidos")
elif(tip=="R"):
	if(cons<=500):
		vr=cons*0.44
		print("Valor total:","R$",vr)
	else:
		vr1=cons*0.65
		print("Valor total:","R$",vr1)
elif(tip=="I"):
	if(cons<=5000):
		vi=cons*0.55
		print("Valor total:","R$",vi)
	else:
		vi1=cons*0.60
		print("Valor total:","R$",vi1)
elif(tip=="C"):
	if(cons<=1000):
		vc=cons*0.55
		print("Valor total:","R$",vc)
	else:
		vc1=cons*0.60
		print("Valor total:","R$",vc1)
-- OUTPUT:
Entradas: -56 KWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 11:03:55) 
-- CODE:
cons=float(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()

print("Entradas:",cons,"KWh","e","tipo",tip)

if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
	print("Dados invalidos")
elif(tip=="R"):
	if(cons<=500):
		vr=cons*0.44
		print("Valor total:","R$",vr)
	else:
		vr1=cons*0.65
		print("Valor total:","R$",vr1)
elif(tip=="I"):
	if(cons<=5000):
		vi=cons*0.55
		print("Valor total:","R$",vi)
	else:
		vi1=cons*0.60
		print("Valor total:","R$",vi1)
elif(tip=="C"):
	if(cons<=1000):
		vc=cons*0.55
		print("Valor total:","R$",vc)
	else:
		vc1=cons*0.60
		print("Valor total:","R$",vc1)
-- EXECUTION TIME:
0.196318
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 KWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 KWh e tipo R
Valor total: R$ 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:04:08) 
-- CODE:
cons=float(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()

print("Entradas:",cons,"KWh","e","tipo",tip)

if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
	print("Dados invalidos")
elif(tip=="R"):
	if(cons<=500):
		vr=cons*0.44
		print("Valor total:","R$",vr)
	else:
		vr1=cons*0.65
		print("Valor total:","R$",vr1)
elif(tip=="I"):
	if(cons<=5000):
		vi=cons*0.55
		print("Valor total:","R$",vi)
	else:
		vi1=cons*0.60
		print("Valor total:","R$",vi1)
elif(tip=="C"):
	if(cons<=1000):
		vc=cons*0.55
		print("Valor total:","R$",vc)
	else:
		vc1=cons*0.60
		print("Valor total:","R$",vc1)
-- OUTPUT:
Entradas: -56.0 KWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:05:55) 
-- CODE:
cons=float(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()

print("Entradas:",cons,"KWh","e","tipo",tip)

if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
	print("Dados invalidos")
elif(tip=="R"):
	if(cons<=500):
		vr=cons*0.44
		print("Valor total:","R$",round(2,vr))
	else:
		vr1=cons*0.65
		print("Valor total:","R$",round(2,vr1))
elif(tip=="I"):
	if(cons<=5000):
		vi=cons*0.55
		print("Valor total:","R$",round(2,vi))
	else:
		vi1=cons*0.60
		print("Valor total:","R$",round(2,vi1))
elif(tip=="C"):
	if(cons<=1000):
		vc=cons*0.55
		print("Valor total:","R$",round(2,vc))
	else:
		vc1=cons*0.60
		print("Valor total:","R$",round(2,vc1))
-- OUTPUT:
Entradas: -56.0 KWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:06:31) 
-- CODE:
cons=float(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()

print("Entradas:",cons,"KWh","e","tipo",tip)

if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
	print("Dados invalidos")
elif(tip=="R"):
	if(cons<=500):
		vr=cons*0.44
		print("Valor total:","R$",round(2,vr))
	else:
		vr1=cons*0.65
		print("Valor total:","R$",round(2,vr1))
elif(tip=="I"):
	if(cons<=5000):
		vi=cons*0.55
		print("Valor total:","R$",round(2,vi))
	else:
		vi1=cons*0.60
		print("Valor total:","R$",round(2,vi1))
elif(tip=="C"):
	if(cons<=1000):
		vc=cons*0.55
		print("Valor total:","R$",round(2,vc))
	else:
		vc1=cons*0.60
		print("Valor total:","R$",round(2,vc1)
-- ERROR:
File "XXXX", line 29
    
                                            ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:06:36) 
-- CODE:
cons=float(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()

print("Entradas:",cons,"KWh","e","tipo",tip)

if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
	print("Dados invalidos")
elif(tip=="R"):
	if(cons<=500):
		vr=cons*0.44
		print("Valor total:","R$",round(2,vr))
	else:
		vr1=cons*0.65
		print("Valor total:","R$",round(2,vr1))
elif(tip=="I"):
	if(cons<=5000):
		vi=cons*0.55
		print("Valor total:","R$",round(2,vi))
	else:
		vi1=cons*0.60
		print("Valor total:","R$",round(2,vi1))
elif(tip=="C"):
	if(cons<=1000):
		vc=cons*0.55
		print("Valor total:","R$",round(2,vc))
	else:
		vc1=cons*0.60
		print("Valor total:","R$",round(2,vc1))
-- OUTPUT:
Entradas: -56.0 KWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:08:29) 
-- CODE:
cons=float(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()

print("Entradas:",cons,"KWh","e","tipo",tip)

if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
	print("Dados invalidos")
elif(tip=="R"):
	if(cons<=500):
		vr=cons*0.44
		print("Valor total:","R$",round(vr,2))
	else:
		vr1=cons*0.65
		print("Valor total:","R$",round(vr1,2))
elif(tip=="I"):
	if(cons<=5000):
		vi=cons*0.55
		print("Valor total:","R$",round(vi,2))
	else:
		vi1=cons*0.60
		print("Valor total:","R$",round(vi1,2))
elif(tip=="C"):
	if(cons<=1000):
		vc=cons*0.55
		print("Valor total:","R$",round(vc,2))
	else:
		vc1=cons*0.60
		print("Valor total:","R$",round(vc1,2))
-- OUTPUT:
Entradas: -56.0 KWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:08:43) 
-- CODE:
cons=float(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()

print("Entradas:",cons,"KWh","e","tipo",tip)

if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
	print("Dados invalidos")
elif(tip=="R"):
	if(cons<=500):
		vr=cons*0.44
		print("Valor total:","R$",round(vr,2))
	else:
		vr1=cons*0.65
		print("Valor total:","R$",round(vr1,2))
elif(tip=="I"):
	if(cons<=5000):
		vi=cons*0.55
		print("Valor total:","R$",round(vi,2))
	else:
		vi1=cons*0.60
		print("Valor total:","R$",round(vi1,2))
elif(tip=="C"):
	if(cons<=1000):
		vc=cons*0.55
		print("Valor total:","R$",round(vc,2))
	else:
		vc1=cons*0.60
		print("Valor total:","R$",round(vc1,2))
-- OUTPUT:
Entradas: -56.0 KWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 11:09:05) 
-- CODE:
cons=float(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()

print("Entradas:",cons,"KWh","e","tipo",tip)

if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
	print("Dados invalidos")
elif(tip=="R"):
	if(cons<=500):
		vr=cons*0.44
		print("Valor total:","R$",round(vr,2))
	else:
		vr1=cons*0.65
		print("Valor total:","R$",round(vr1,2))
elif(tip=="I"):
	if(cons<=5000):
		vi=cons*0.55
		print("Valor total:","R$",round(vi,2))
	else:
		vi1=cons*0.60
		print("Valor total:","R$",round(vi1,2))
elif(tip=="C"):
	if(cons<=1000):
		vc=cons*0.55
		print("Valor total:","R$",round(vc,2))
	else:
		vc1=cons*0.60
		print("Valor total:","R$",round(vc1,2))
-- EXECUTION TIME:
0.148771
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 KWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 KWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:09:14) 
-- CODE:
cons=float(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()

print("Entradas:",cons,"KWh","e","tipo",tip)

if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
	print("Dados invalidos")
elif(tip=="R"):
	if(cons<=500):
		vr=cons*0.44
		print("Valor total:","R$",round(vr,2))
	else:
		vr1=cons*0.65
		print("Valor total:","R$",round(vr1,2))
elif(tip=="I"):
	if(cons<=5000):
		vi=cons*0.55
		print("Valor total:","R$",round(vi,2))
	else:
		vi1=cons*0.60
		print("Valor total:","R$",round(vi1,2))
elif(tip=="C"):
	if(cons<=1000):
		vc=cons*0.55
		print("Valor total:","R$",round(vc,2))
	else:
		vc1=cons*0.60
		print("Valor total:","R$",round(vc1,2))
-- OUTPUT:
Entradas: -56.0 KWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:10:41) 
-- CODE:
cons=float(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()

print("Entradas:",cons,"KWh","e","tipo",tip)

if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
	print("Dados invalidos")
elif(tip=="R"):
	if(cons<=500):
		vr=cons*0.44
		print("Valor total:","R$",round(vr,2))
	else:
		vr1=cons*0.65
		print("Valor total:","R$",round(vr1,2))
elif(tip=="I"):
	if(cons<=5000):
		vi=cons*0.55
		print("Valor total:","R$",round(vi,2))
	else:
		vi1=cons*0.60
		print("Valor total:","R$",round(vi1,2))
elif(tip=="C"):
	if(cons<=1000):
		vc=cons*0.55
		print("Valor total:","R$",round(vc,2))
	else:
		vc1=cons*0.60
		print("Valor total:","R$",round(vc1,2))
-- OUTPUT:
Entradas: -56.0 KWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:11:15) 
-- CODE:
cons=float(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()

print("Entradas:",cons,"KWh","e","tipo",tip)

if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
	print("Dados invalidos")
elif(tip=="R"):
	if(cons<=500):
		vr=cons*0.44
		print("Valor total:","R$",round(vr,2))
	else:
		vr1=cons*0.65
		print("Valor total:","R$",round(vr1,2))
elif(tip=="I"):
	if(cons<=5000):
		vi=cons*0.55
		print("Valor total:","R$",round(vi,2))
	else:
		vi1=cons*0.60
		print("Valor total:","R$",round(vi1,2))
elif(tip=="C"):
	if(cons<=1000):
		vc=cons*0.55
		print("Valor total:","R$",round(vc,2))
	else:
		vc1=cons*0.60
		print("Valor total:","R$",round(vc1,2))
-- OUTPUT:
Entradas: -56.0 KWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:11:24) 
-- CODE:
cons=float(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()

print("Entradas:",cons,"KWh","e","tipo",tip)

if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
	print("Dados invalidos")
elif(tip=="R"):
	if(cons<=500):
		vr=cons*0.44
		print("Valor total:","R$",round(vr,2))
	else:
		vr1=cons*0.65
		print("Valor total:","R$",round(vr1,2))
elif(tip=="I"):
	if(cons<=5000):
		vi=cons*0.55
		print("Valor total:","R$",round(vi,2))
	else:
		vi1=cons*0.60
		print("Valor total:","R$",round(vi1,2))
elif(tip=="C"):
	if(cons<=1000):
		vc=cons*0.55
		print("Valor total:","R$",round(vc,2))
	else:
		vc1=cons*0.60
		print("Valor total:","R$",round(vc1,2))
-- OUTPUT:
Entradas: -56.0 KWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:11:27) 
-- CODE:
cons=float(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()

print("Entradas:",cons,"KWh","e","tipo",tip)

if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
	print("Dados invalidos")
elif(tip=="R"):
	if(cons<=500):
		vr=cons*0.44
		print("Valor total:","R$",round(vr,2))
	else:
		vr1=cons*0.65
		print("Valor total:","R$",round(vr1,2))
elif(tip=="I"):
	if(cons<=5000):
		vi=cons*0.55
		print("Valor total:","R$",round(vi,2))
	else:
		vi1=cons*0.60
		print("Valor total:","R$",round(vi1,2))
elif(tip=="C"):
	if(cons<=1000):
		vc=cons*0.55
		print("Valor total:","R$",round(vc,2))
	else:
		vc1=cons*0.60
		print("Valor total:","R$",round(vc1,2))
-- OUTPUT:
Entradas: -56.0 KWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:14:49) 
-- CODE:
cons=float(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()

print("Entradas:",cons,"KWh","e","tipo",tip)

if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
	print("Dados invalidos")
elif(tip=="R"):
	if(cons<=500):
		vr=cons*0.44
		print("Valor total:","R$",round(vr,2))
	else:
		vr1=cons*0.65
		print("Valor total:","R$",round(vr1,2))
elif(tip=="I"):
	if(cons<=5000):
		vi=cons*0.55
		print("Valor total:","R$",round(vi,2))
	else:
		vi1=cons*0.60
		print("Valor total:","R$",round(vi1,2))
elif(tip=="C"):
	if(cons<=1000):
		vc=cons*0.55
		print("Valor total:","R$",round(vc,2))
	else:
		vc1=cons*0.60
		print("Valor total:","R$",round(vc1,2))
-- OUTPUT:
Entradas: -56.0 KWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 11:18:05) 
-- CODE:
cons=float(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()

print("Entradas:",cons,"KWh","e","tipo",tip)

if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
	print("Dados invalidos")
elif(tip=="R"):
	if(cons<=500):
		vr=cons*0.44
		print("Valor total:","R$",round(vr,2))
	else:
		vr1=cons*0.65
		print("Valor total:","R$",round(vr1,2))
elif(tip=="I"):
	if(cons<=5000):
		vi=cons*0.55
		print("Valor total:","R$",round(vi,2))
	else:
		vi1=cons*0.60
		print("Valor total:","R$",round(vi1,2))
elif(tip=="C"):
	if(cons<=1000):
		vc=cons*0.55
		print("Valor total:","R$",round(vc,2))
	else:
		vc1=cons*0.60
		print("Valor total:","R$",round(vc1,2))
-- EXECUTION TIME:
0.184897
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 KWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 KWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:18:07) 
-- CODE:
cons=float(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()

print("Entradas:",cons,"KWh","e","tipo",tip)

if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
	print("Dados invalidos")
elif(tip=="R"):
	if(cons<=500):
		vr=cons*0.44
		print("Valor total:","R$",round(vr,2))
	else:
		vr1=cons*0.65
		print("Valor total:","R$",round(vr1,2))
elif(tip=="I"):
	if(cons<=5000):
		vi=cons*0.55
		print("Valor total:","R$",round(vi,2))
	else:
		vi1=cons*0.60
		print("Valor total:","R$",round(vi1,2))
elif(tip=="C"):
	if(cons<=1000):
		vc=cons*0.55
		print("Valor total:","R$",round(vc,2))
	else:
		vc1=cons*0.60
		print("Valor total:","R$",round(vc1,2))
-- OUTPUT:
Entradas: -56.0 KWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:18:26) 
-- CODE:
cons=float(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()

print("Entradas:",cons,"KWh","e","tipo",tip)

if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
	print("Dados invalidos")
elif(tip=="R"):
	if(cons<=500):
		vr=cons*0.44
		print("Valor total:","R$",round(vr,2))
	else:
		vr1=cons*0.65
		print("Valor total:","R$",round(vr1,2))
elif(tip=="I"):
	if(cons<=5000):
		vi=cons*0.55
		print("Valor total:","R$",round(vi,2))
	else:
		vi1=cons*0.60
		print("Valor total:","R$",round(vi1,2))
elif(tip=="C"):
	if(cons<=1000):
		vc=cons*0.55
		print("Valor total:","R$",round(vc,2))
	else:
		vc1=cons*0.60
		print("Valor total:","R$",round(vc1,2))
-- OUTPUT:
Entradas: -56.0 KWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:23:36) 
-- CODE:
cons=float(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()
print("Entradas:",cons,"KWh","e","tipo",tip)
if(tip=="R" and tip=="I" and tip=="C"):
	if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
		print("Dados invalidos")
	elif(tip=="R"):
		if(cons<=500):
			vr=cons*0.44
			print("Valor total:","R$",round(vr,2))
		else:
			vr1=cons*0.65
			print("Valor total:","R$",round(vr1,2))
	elif(tip=="I"):
		if(cons<=5000):
			vi=cons*0.55
			print("Valor total:","R$",round(vi,2))
		else:
			vi1=cons*0.60
			print("Valor total:","R$",round(vi1,2))
	elif(tip=="C"):
		if(cons<=1000):
			vc=cons*0.55
			print("Valor total:","R$",round(vc,2))
		else:
			vc1=cons*0.60
			print("Valor total:","R$",round(vc1,2))
else:
	print()
-- OUTPUT:
Entradas: -56.0 KWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:24:04) 
-- CODE:
cons=float(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()
print("Entradas:",cons,"KWh","e","tipo",tip)
if(tip=="R" and tip=="I" and tip=="C"):
	if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
		print("Dados invalidos")
	elif(tip=="R"):
		if(cons<=500):
			vr=cons*0.44
			print("Valor total:","R$",round(vr,2))
		else:
			vr1=cons*0.65
			print("Valor total:","R$",round(vr1,2))
	elif(tip=="I"):
		if(cons<=5000):
			vi=cons*0.55
			print("Valor total:","R$",round(vi,2))
		else:
			vi1=cons*0.60
			print("Valor total:","R$",round(vi1,2))
	elif(tip=="C"):
		if(cons<=1000):
			vc=cons*0.55
			print("Valor total:","R$",round(vc,2))
		else:
			vc1=cons*0.60
			print("Valor total:","R$",round(vc1,2))
else:
	print("Dados invaidos")
-- OUTPUT:
Entradas: -56.0 KWh e tipo I
Dados invaidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 11:24:22) 
-- CODE:
cons=float(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()
print("Entradas:",cons,"KWh","e","tipo",tip)
if(tip=="R" and tip=="I" and tip=="C"):
	if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
		print("Dados invalidos")
	elif(tip=="R"):
		if(cons<=500):
			vr=cons*0.44
			print("Valor total:","R$",round(vr,2))
		else:
			vr1=cons*0.65
			print("Valor total:","R$",round(vr1,2))
	elif(tip=="I"):
		if(cons<=5000):
			vi=cons*0.55
			print("Valor total:","R$",round(vi,2))
		else:
			vi1=cons*0.60
			print("Valor total:","R$",round(vi1,2))
	elif(tip=="C"):
		if(cons<=1000):
			vc=cons*0.55
			print("Valor total:","R$",round(vc,2))
		else:
			vc1=cons*0.60
			print("Valor total:","R$",round(vc1,2))
else:
	print("Dados invaidos")
-- EXECUTION TIME:
0.149221
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 KWh e tipo I
Dados invaidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 KWh e tipo R
Dados invaidos
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 11:24:38) 
-- CODE:
cons=float(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()
print("Entradas:",cons,"KWh","e","tipo",tip)
if(tip=="R" and tip=="I" and tip=="C"):
	if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
		print("Dados invalidos")
	elif(tip=="R"):
		if(cons<=500):
			vr=cons*0.44
			print("Valor total:","R$",round(vr,2))
		else:
			vr1=cons*0.65
			print("Valor total:","R$",round(vr1,2))
	elif(tip=="I"):
		if(cons<=5000):
			vi=cons*0.55
			print("Valor total:","R$",round(vi,2))
		else:
			vi1=cons*0.60
			print("Valor total:","R$",round(vi1,2))
	elif(tip=="C"):
		if(cons<=1000):
			vc=cons*0.55
			print("Valor total:","R$",round(vc,2))
		else:
			vc1=cons*0.60
			print("Valor total:","R$",round(vc1,2))
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.126704
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 KWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 KWh e tipo R
Dados invalidos
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 11:24:40) 
-- CODE:
cons=float(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()
print("Entradas:",cons,"KWh","e","tipo",tip)
if(tip=="R" and tip=="I" and tip=="C"):
	if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
		print("Dados invalidos")
	elif(tip=="R"):
		if(cons<=500):
			vr=cons*0.44
			print("Valor total:","R$",round(vr,2))
		else:
			vr1=cons*0.65
			print("Valor total:","R$",round(vr1,2))
	elif(tip=="I"):
		if(cons<=5000):
			vi=cons*0.55
			print("Valor total:","R$",round(vi,2))
		else:
			vi1=cons*0.60
			print("Valor total:","R$",round(vi1,2))
	elif(tip=="C"):
		if(cons<=1000):
			vc=cons*0.55
			print("Valor total:","R$",round(vc,2))
		else:
			vc1=cons*0.60
			print("Valor total:","R$",round(vc1,2))
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.114082
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 KWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 KWh e tipo R
Dados invalidos
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 11:24:49) 
-- CODE:
cons=float(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()
print("Entradas:",cons,"kwh","e","tipo",tip)
if(tip=="R" and tip=="I" and tip=="C"):
	if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
		print("Dados invalidos")
	elif(tip=="R"):
		if(cons<=500):
			vr=cons*0.44
			print("Valor total:","R$",round(vr,2))
		else:
			vr1=cons*0.65
			print("Valor total:","R$",round(vr1,2))
	elif(tip=="I"):
		if(cons<=5000):
			vi=cons*0.55
			print("Valor total:","R$",round(vi,2))
		else:
			vi1=cons*0.60
			print("Valor total:","R$",round(vi1,2))
	elif(tip=="C"):
		if(cons<=1000):
			vc=cons*0.55
			print("Valor total:","R$",round(vc,2))
		else:
			vc1=cons*0.60
			print("Valor total:","R$",round(vc1,2))
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.151337
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Dados invalidos
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 11:25:03) 
-- CODE:
cons=float(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()
print("Entradas:",cons,"KWh","e","tipo",tip)
if(tip=="R" and tip=="I" and tip=="C"):
	if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
		print("Dados invalidos")
	elif(tip=="R"):
		if(cons<=500):
			vr=cons*0.44
			print("Valor total:","R$",round(vr,2))
		else:
			vr1=cons*0.65
			print("Valor total:","R$",round(vr1,2))
	elif(tip=="I"):
		if(cons<=5000):
			vi=cons*0.55
			print("Valor total:","R$",round(vi,2))
		else:
			vi1=cons*0.60
			print("Valor total:","R$",round(vi1,2))
	elif(tip=="C"):
		if(cons<=1000):
			vc=cons*0.55
			print("Valor total:","R$",round(vc,2))
		else:
			vc1=cons*0.60
			print("Valor total:","R$",round(vc1,2))
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.20311
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 KWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 KWh e tipo R
Dados invalidos
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:25:04) 
-- CODE:
cons=float(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()
print("Entradas:",cons,"KWh","e","tipo",tip)
if(tip=="R" and tip=="I" and tip=="C"):
	if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
		print("Dados invalidos")
	elif(tip=="R"):
		if(cons<=500):
			vr=cons*0.44
			print("Valor total:","R$",round(vr,2))
		else:
			vr1=cons*0.65
			print("Valor total:","R$",round(vr1,2))
	elif(tip=="I"):
		if(cons<=5000):
			vi=cons*0.55
			print("Valor total:","R$",round(vi,2))
		else:
			vi1=cons*0.60
			print("Valor total:","R$",round(vi1,2))
	elif(tip=="C"):
		if(cons<=1000):
			vc=cons*0.55
			print("Valor total:","R$",round(vc,2))
		else:
			vc1=cons*0.60
			print("Valor total:","R$",round(vc1,2))
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 KWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:25:46) 
-- CODE:
cons=float(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()
print("Entradas:",cons,"KWh","e","tipo",tip)
if(tip=="R" and tip=="I" and tip=="C"):
	if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
		print("Dados invalidos")
	elif(tip=="R"):
		if(cons<=500):
			vr=cons*0.44
			print("Valor total:","R$",round(vr,2))
		else:
			vr1=cons*0.65
			print("Valor total:","R$",round(vr1,2))
	elif(tip=="I"):
		if(cons<=5000):
			vi=cons*0.55
			print("Valor total:","R$",round(vi,2))
		else:
			vi1=cons*0.60
			print("Valor total:","R$",round(vi1,2))
	elif(tip=="C"):
		if(cons<=1000):
			vc=cons*0.55
			print("Valor total:","R$",round(vc,2))
		else:
			vc1=cons*0.60
			print("Valor total:","R$",round(vc1,2))
else:
	print("Dados invalid")
-- OUTPUT:
Entradas: -56.0 KWh e tipo I
Dados invalid
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:29:11) 
-- CODE:
cons=float(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()
print("Entradas:",cons,"KWh","e","tipo",tip)
if(tip!="R" or tip!="I" or tip!="C"):
	
	print("Dados invalidos")
	
else:
	if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
			print("Dados invalidos")
		elif(tip=="R"):
			if(cons<=500):
				vr=cons*0.44
				print("Valor total:","R$",round(vr,2))
			else:
				vr1=cons*0.65
				print("Valor total:","R$",round(vr1,2))
		elif(tip=="I"):
			if(cons<=5000):
				vi=cons*0.55
				print("Valor total:","R$",round(vi,2))
			else:
				vi1=cons*0.60
				print("Valor total:","R$",round(vi1,2))
		elif(tip=="C"):
			if(cons<=1000):
				vc=cons*0.55
				print("Valor total:","R$",round(vc,2))
			else:
				vc1=cons*0.60
				print("Valor total:","R$",round(vc1,2))

-- ERROR:
File "XXXX", line 11
    elif(tip=="R"):
                  ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:29:24) 
-- CODE:
cons=float(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()
print("Entradas:",cons,"KWh","e","tipo",tip)
if(tip!="R" or tip!="I" or tip!="C"):
	
	print("Dados invalidos")
	
else:
	if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
			print("Dados invalidos")
	elif(tip=="R"):
			if(cons<=500):
				vr=cons*0.44
				print("Valor total:","R$",round(vr,2))
			else:
				vr1=cons*0.65
				print("Valor total:","R$",round(vr1,2))
		elif(tip=="I"):
			if(cons<=5000):
				vi=cons*0.55
				print("Valor total:","R$",round(vi,2))
			else:
				vi1=cons*0.60
				print("Valor total:","R$",round(vi1,2))
		elif(tip=="C"):
			if(cons<=1000):
				vc=cons*0.55
				print("Valor total:","R$",round(vc,2))
			else:
				vc1=cons*0.60
				print("Valor total:","R$",round(vc1,2))

-- ERROR:
File "XXXX", line 18
    elif(tip=="I"):
                  ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:29:30) 
-- CODE:
cons=float(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()
print("Entradas:",cons,"KWh","e","tipo",tip)
if(tip!="R" or tip!="I" or tip!="C"):
	
	print("Dados invalidos")
	
else:
	if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
			print("Dados invalidos")
	elif(tip=="R"):
			if(cons<=500):
				vr=cons*0.44
				print("Valor total:","R$",round(vr,2))
			else:
				vr1=cons*0.65
				print("Valor total:","R$",round(vr1,2))
	elif(tip=="I"):
			if(cons<=5000):
				vi=cons*0.55
				print("Valor total:","R$",round(vi,2))
			else:
				vi1=cons*0.60
				print("Valor total:","R$",round(vi1,2))
		elif(tip=="C"):
			if(cons<=1000):
				vc=cons*0.55
				print("Valor total:","R$",round(vc,2))
			else:
				vc1=cons*0.60
				print("Valor total:","R$",round(vc1,2))

-- ERROR:
File "XXXX", line 25
    elif(tip=="C"):
                  ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:29:47) 
-- CODE:
cons=float(input("entre com o valor da conta: "))
tip=input("Entre com o tipo de instalacao: (R/I/C)").upper()
print("Entradas:",cons,"KWh","e","tipo",tip)
if(tip!="R" or tip!="I" or tip!="C"):
	
	print("Dados invalidos")
	
else:
	if((cons<0)and(tip!="R"or tip!="R" or tip!="C")):
			print("Dados invalidos")
	elif(tip=="R"):
			if(cons<=500):
				vr=cons*0.44
				print("Valor total:","R$",round(vr,2))
			else:
				vr1=cons*0.65
				print("Valor total:","R$",round(vr1,2))
	elif(tip=="I"):
			if(cons<=5000):
				vi=cons*0.55
				print("Valor total:","R$",round(vi,2))
			else:
				vi1=cons*0.60
				print("Valor total:","R$",round(vi1,2))
	elif(tip=="C"):
			if(cons<=1000):
				vc=cons*0.55
				print("Valor total:","R$",round(vc,2))
			else:
				vc1=cons*0.60
				print("Valor total:","R$",round(vc1,2))

-- OUTPUT:
Entradas: -56.0 KWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:34:55) 
-- CODE:
a = float(input("consumo de energia: "))
b = input("tipo de instalacao: ").upper()

print("Entradas:", a, "kWh", "e", "tipo", b)

if(b=="R" and a>=0):
	if(a<=500):
		print("Valor total: R$", round((0.44*a),2))
	else:
        print("Valor total: R$", round((0.65*a),2))
elif(b=="C" and a>=0):
	if(a<=1000):
		print("Valor total: R$", round((0.55*a),2))
	else:
        print("Valor total: R$", round((0.60*a),2))
       
elif(b=="C") and (a>=0):
	if(a<=5000):
		print("Valor total: R$", round((0.55*a),2))
	else:
		print("Valor total: R$", round((0.60*a),2))

else:
    print("Dados invalidos")
-- ERROR:
File "XXXX", line 10
    print("Valor total: R$", round((0.65*a),2))
                                              ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:35:03) 
-- CODE:
a = float(input("consumo de energia: "))
b = input("tipo de instalacao: ").upper()

print("Entradas:", a, "kWh", "e", "tipo", b)

if(b=="R" and a>=0):
	if(a<=500):
		print("Valor total: R$", round((0.44*a),2))
	else:
       print("Valor total: R$", round((0.65*a),2))
elif(b=="C" and a>=0):
	if(a<=1000):
		print("Valor total: R$", round((0.55*a),2))
	else:
        print("Valor total: R$", round((0.60*a),2))
       
elif(b=="C") and (a>=0):
	if(a<=5000):
		print("Valor total: R$", round((0.55*a),2))
	else:
		print("Valor total: R$", round((0.60*a),2))

else:
    print("Dados invalidos")
-- ERROR:
File "XXXX", line 10
    print("Valor total: R$", round((0.65*a),2))
                                              ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:35:06) 
-- CODE:
a = float(input("consumo de energia: "))
b = input("tipo de instalacao: ").upper()

print("Entradas:", a, "kWh", "e", "tipo", b)

if(b=="R" and a>=0):
	if(a<=500):
		print("Valor total: R$", round((0.44*a),2))
	else:
      print("Valor total: R$", round((0.65*a),2))
elif(b=="C" and a>=0):
	if(a<=1000):
		print("Valor total: R$", round((0.55*a),2))
	else:
        print("Valor total: R$", round((0.60*a),2))
       
elif(b=="C") and (a>=0):
	if(a<=5000):
		print("Valor total: R$", round((0.55*a),2))
	else:
		print("Valor total: R$", round((0.60*a),2))

else:
    print("Dados invalidos")
-- ERROR:
File "XXXX", line 10
    print("Valor total: R$", round((0.65*a),2))
                                              ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:35:18) 
-- CODE:
a = float(input("consumo de energia: "))
b = input("tipo de instalacao: ").upper()

print("Entradas:", a, "kWh", "e", "tipo", b)

if(b=="R" and a>=0):
	if(a<=500):
		print("Valor total: R$", round((0.44*a),2))
	else:
		print("Valor total: R$", round((0.65*a),2))
elif(b=="C" and a>=0):
	if(a<=1000):
		print("Valor total: R$", round((0.55*a),2))
	else:
        print("Valor total: R$", round((0.60*a),2))
       
elif(b=="C") and (a>=0):
	if(a<=5000):
		print("Valor total: R$", round((0.55*a),2))
	else:
		print("Valor total: R$", round((0.60*a),2))

else:
    print("Dados invalidos")
-- ERROR:
File "XXXX", line 15
    print("Valor total: R$", round((0.60*a),2))
                                              ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:35:21) 
-- CODE:
a = float(input("consumo de energia: "))
b = input("tipo de instalacao: ").upper()

print("Entradas:", a, "kWh", "e", "tipo", b)

if(b=="R" and a>=0):
	if(a<=500):
		print("Valor total: R$", round((0.44*a),2))
	else:
		print("Valor total: R$", round((0.65*a),2))
elif(b=="C" and a>=0):
	if(a<=1000):
		print("Valor total: R$", round((0.55*a),2))
	else:
        print("Valor total: R$", round((0.60*a),2))
       
elif(b=="C") and (a>=0):
	if(a<=5000):
		print("Valor total: R$", round((0.55*a),2))
	else:
		print("Valor total: R$", round((0.60*a),2))

else:
    print("Dados invalidos")
-- ERROR:
File "XXXX", line 15
    print("Valor total: R$", round((0.60*a),2))
                                              ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:35:22) 
-- CODE:
a = float(input("consumo de energia: "))
b = input("tipo de instalacao: ").upper()

print("Entradas:", a, "kWh", "e", "tipo", b)

if(b=="R" and a>=0):
	if(a<=500):
		print("Valor total: R$", round((0.44*a),2))
	else:
		print("Valor total: R$", round((0.65*a),2))
elif(b=="C" and a>=0):
	if(a<=1000):
		print("Valor total: R$", round((0.55*a),2))
	else:
        print("Valor total: R$", round((0.60*a),2))
       
elif(b=="C") and (a>=0):
	if(a<=5000):
		print("Valor total: R$", round((0.55*a),2))
	else:
		print("Valor total: R$", round((0.60*a),2))

else:
    print("Dados invalidos")
-- ERROR:
File "XXXX", line 15
    print("Valor total: R$", round((0.60*a),2))
                                              ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:35:32) 
-- CODE:
a = float(input("consumo de energia: "))
b = input("tipo de instalacao: ").upper()

print("Entradas:", a, "kWh", "e", "tipo", b)

if(b=="R" and a>=0):
	if(a<=500):
		print("Valor total: R$", round((0.44*a),2))
	else:
		print("Valor total: R$", round((0.65*a),2))
elif(b=="C" and a>=0):
	if(a<=1000):
		print("Valor total: R$", round((0.55*a),2))
	else:
		print("Valor total: R$", round((0.60*a),2))
       
elif(b=="C") and (a>=0):
	if(a<=5000):
		print("Valor total: R$", round((0.55*a),2))
	else:
		print("Valor total: R$", round((0.60*a),2))

else:
    print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 11:36:00) 
-- CODE:
a = float(input("consumo de energia: "))
b = input("tipo de instalacao: ").upper()

print("Entradas:", a, "kWh", "e", "tipo", b)

if(b=="R" and a>=0):
	if(a<=500):
		print("Valor total: R$", round((0.44*a),2))
	else:
		print("Valor total: R$", round((0.65*a),2))
elif(b=="C" and a>=0):
	if(a<=1000):
		print("Valor total: R$", round((0.55*a),2))
	else:
		print("Valor total: R$", round((0.60*a),2))
       
elif(b=="C") and (a>=0):
	if(a<=5000):
		print("Valor total: R$", round((0.55*a),2))
	else:
		print("Valor total: R$", round((0.60*a),2))

else:
    print("Dados invalidos")
-- EXECUTION TIME:
0.175805
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
