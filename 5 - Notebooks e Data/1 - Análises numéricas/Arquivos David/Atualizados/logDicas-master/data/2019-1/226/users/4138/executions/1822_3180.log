== TEST (2019-06-13 11:17:54) 
-- CODE:
from numpy import *

v = array(eval(input("insira os numeros:")))

cont = zeros(4,dtype =int)

for i in range(size(v)):
	if(v[i] == 1):
		cont[0] = cont[0] + 1
	elif(v[i] == 2):
		cont[1] = cont[1] + 1
	elif(v[i] == 3):
		cont[2] = cont[2] + 1
	elif(v[i] == 4):
		cont[3] = cont[3] + 1
print(cont)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 11:18:18) 
-- CODE:
from numpy import *

v = array(eval(input("insira os numeros:")))

cont = zeros(4,dtype =int)

for i in range(size(v)):
	if(v[i] == 1):
		cont[0] = cont[0] + 1
	elif(v[i] == 2):
		cont[1] = cont[1] + 1
	elif(v[i] == 3):
		cont[2] = cont[2] + 1
	elif(v[i] == 4):
		cont[3] = cont[3] + 1
print(cont)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 11:18:31) 
-- CODE:
from numpy import *

v = array(eval(input("insira os numeros:")))

cont = zeros(4,dtype =int)

for i in range(size(v)):
	if(v[i] == 1):
		cont[0] = cont[0] + 1
	elif(v[i] == 2):
		cont[1] = cont[1] + 1
	elif(v[i] == 3):
		cont[2] = cont[2] + 1
	elif(v[i] == 4):
		cont[3] = cont[3] + 1
print(cont)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 11:18:38) 
-- CODE:
from numpy import *

v = array(eval(input("insira os numeros:")))

cont = zeros(4,dtype =int)

for i in range(size(v)):
	if(v[i] == 1):
		cont[0] = cont[0] + 1
	elif(v[i] == 2):
		cont[1] = cont[1] + 1
	elif(v[i] == 3):
		cont[2] = cont[2] + 1
	elif(v[i] == 4):
		cont[3] = cont[3] + 1
print(cont)
-- EXECUTION TIME:
1.22299
-- TEST CASE 1:
---- input:
[1,2,3,4,3,2,1,2,3,2,4,1]
---- correct output:
[3 4 3 2]
---- user output:
[3 4 3 2]
-- TEST CASE 2:
---- input:
[1,3,3,4,1,3,1]
---- correct output:
[3 0 3 1]
---- user output:
[3 0 3 1]
-- TEST CASE 3:
---- input:
[1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4]
---- correct output:
[4 4 4 4]
---- user output:
[4 4 4 4]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
