== TEST (2019-03-25 13:16:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
lado1 = float(input("lado 1: "))
lado2 = float(input("lado 2: "))
lado3 = float(input("lado 3: "))
semip = ((lado1 + lado2 + lado3) / 2)
from math import sqrt

-- OUTPUT:
63.617
381.704
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:16:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
lado1 = float(input("lado 1: "))
lado2 = float(input("lado 2: "))
lado3 = float(input("lado 3: "))
semip = ((lado1 + lado2 + lado3) / 2)
from math import sqrt

-- OUTPUT:
63.617
381.704
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:17:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
lado1 = float(input("lado 1: "))
lado2 = float(input("lado 2: "))
lado3 = float(input("lado 3: "))
semip = ((lado1 + lado2 + lado3) / 2)
from math import sqrt

-- OUTPUT:
63.617
381.704
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:17:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
lado1 = float(input("lado 1: "))
lado2 = float(input("lado 2: "))
lado3 = float(input("lado 3: "))
semip = ((lado1 + lado2 + lado3) / 2)
from math import sqrt

-- OUTPUT:
63.617
381.704
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:21:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
lado1 = float(input("lado 1: "))
lado2 = float(input("lado 2: "))
lado3 = float(input("lado 3: "))
semip = ((lado1 + lado2 + lado3) / 2)
from math import sqrt
area = print(round(sqrt(semip * (semip - lado1) * (semip - lado2) * (semip - lado3))), 5)


-- OUTPUT:
69 5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:22:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
lado1 = float(input("lado 1: "))
lado2 = float(input("lado 2: "))
lado3 = float(input("lado 3: "))
semip = ((lado1 + lado2 + lado3) / 2)
from math import sqrt
area = (sqrt(semip * (semip - lado1) * (semip - lado2) * (semip - lado3))
print(area, 5)


-- ERROR:
File "XXXX", line 10
    print(area, 5)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:22:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
lado1 = float(input("lado 1: "))
lado2 = float(input("lado 2: "))
lado3 = float(input("lado 3: "))
semip = ((lado1 + lado2 + lado3) / 2)
from math import sqrt
area = (sqrt(semip * (semip - lado1) * (semip - lado2) * (semip - lado3))
print(round(area, 5))
		 


-- ERROR:
File "XXXX", line 10
    print(round(area, 5))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:23:40) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
lado1 = float(input("lado 1: "))
lado2 = float(input("lado 2: "))
lado3 = float(input("lado 3: "))
semip = ((lado1 + lado2 + lado3) / 2)
from math import sqrt
area = (sqrt(semip * (semip - lado1) * (semip - lado2) * (semip - lado3))
print(round(area,5))
		 


-- ERROR:
File "XXXX", line 10
    print(round(area,5))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:24:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
lado1 = float(input("lado 1: "))
lado2 = float(input("lado 2: "))
lado3 = float(input("lado 3: "))
semip = ((lado1 + lado2 + lado3) / 2)
from math import sqrt
area = (sqrt(semip * (semip - lado1) * (semip - lado2) * (semip - lado3))
print(round(area,5))
		 


-- ERROR:
File "XXXX", line 10
    print(round(area,5))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:24:40) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
lado1 = float(input("lado 1: "))
lado2 = float(input("lado 2: "))
lado3 = float(input("lado 3: "))
semip = ((lado1 + lado2 + lado3) / 2)
from math import sqrt
area = (sqrt(semip * (semip - lado1) * (semip - lado2) * (semip - lado3))
print(round(area, 5))
		 


-- ERROR:
File "XXXX", line 10
    print(round(area, 5))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:27:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
lado1 = float(input("lado 1: "))
lado2 = float(input("lado 2: "))
lado3 = float(input("lado 3: "))
semip = ((lado1 + lado2 + lado3) / 2)
from math import sqrt
area = sqrt (semip * (semip - lado1) * (semip - lado2) * (semip - lado3))
print(round(area, 5))
		 


-- OUTPUT:
69.41967
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 13:27:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
lado1 = float(input("lado 1: "))
lado2 = float(input("lado 2: "))
lado3 = float(input("lado 3: "))
semip = ((lado1 + lado2 + lado3) / 2)
from math import sqrt
area = sqrt (semip * (semip - lado1) * (semip - lado2) * (semip - lado3))
print(round(area, 5))
		 


-- EXECUTION TIME:
0.148263
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.41967
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
lado 1: lado 2: lado 3: 709.16654
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:27:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
lado1 = float(input("lado 1: "))
lado2 = float(input("lado 2: "))
lado3 = float(input("lado 3: "))
semip = ((lado1 + lado2 + lado3) / 2)
from math import sqrt
area = sqrt (semip * (semip - lado1) * (semip - lado2) * (semip - lado3))
print(round(area, 5))
		 


-- OUTPUT:
69.41967
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:28:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
lado1 = float(input("lado 1: "))
lado2 = float(input("lado 2: "))
lado3 = float(input("lado 3: "))
semip = (lado1 + lado2 + lado3) / 2
from math import sqrt
area = sqrt (semip * (semip - lado1) * (semip - lado2) * (semip - lado3))
print(round(area, 5))
		 


-- OUTPUT:
69.41967
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 13:28:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
lado1 = float(input("lado 1: "))
lado2 = float(input("lado 2: "))
lado3 = float(input("lado 3: "))
semip = (lado1 + lado2 + lado3) / 2
from math import sqrt
area = sqrt (semip * (semip - lado1) * (semip - lado2) * (semip - lado3))
print(round(area, 5))
		 


-- EXECUTION TIME:
0.131369
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.41967
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709.16654
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
