== TEST (2019-05-13 13:06:20) 
-- CODE:


h = int(input("insira um numero:"))

n = 2
c = 0
s = 0
x = 1
y = 0

while(s < h):
	pi = (12**1/2)*(c) 
	c = (1 /x*3**y)*(-1)**(n) 
	y = y + 1
	s = s + 1
	n = n + 1
print(round(pi, 8))
-- OUTPUT:
-118098.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 13:08:17) 
-- CODE:


h = int(input("insira um numero:"))

n = 2
c = 0
s = 0
x = 1
y = 0

while(s < h):
	pi = (12**1/2)*(c) 
	c = (1 /x*(3**y)) *(-1)**(n) 
	y = y + 1
	s = s + 1
	n = n + 1
print(round(pi, 8))
-- OUTPUT:
-118098.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 13:08:23) 
-- CODE:


h = int(input("insira um numero:"))

n = 2
c = 0
s = 0
x = 1
y = 0

while(s < h):
	pi = (12**1/2)*(c) 
	c = (1 /x*(3**y)) *(-1)**(n) 
	y = y + 1
	s = s + 1
	n = n + 1
print(round(pi, 8))
-- OUTPUT:
-118098.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 13:09:45) 
-- CODE:


h = int(input("insira um numero:"))

n = 2
c = 1
s = 0
x = 1
y = 0

while(s < h):
	pi = (12**1/2)*(c) 
	c = (1 /x*(3**y)) *(-1)**(n) 
	y = y + 1
	s = s + 1
	n = n + 1
print(round(pi, 8))
-- OUTPUT:
-118098.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 13:10:13) 
-- CODE:


h = int(input("insira um numero:"))

n = 2
c = 0
s = 0
x = 1
y = 0

while(s < h):
	pi = (12**1/2)*(c) 
	c = (1 /x*(3**y)) *(-1)**(n) 
	x = x + 2
	y = y + 1
	s = s + 1
	n = n + 1
print(round(pi, 8))
-- OUTPUT:
-6215.68421053
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 13:10:31) 
-- CODE:


h = int(input("insira um numero:"))

n = 2
c = 1
s = 0
x = 1
y = 0

while(s < h):
	pi = (12**1/2)*(c) 
	c = (1 /x*(3**y)) *(-1)**(n) 
	x = x + 2
	y = y + 1
	s = s + 1
	n = n + 1
print(round(pi, 8))
-- OUTPUT:
-6215.68421053
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 17:18:38) 
-- CODE:
h = int(input("insira um numero:"))

n = 2
c = 1
s = 0
x = 1
y = 0

while(s < h):
	pi = (12**1/2)*(c) 
	c = (1 /x*(3**y)) *(-1)**(n) 
	x = x + 2
	y = y + 1 
	s = s + 1 #alcançar o valor de h
	n = n + 1 #mudar o sinal
print(round(pi, 8))
-- EXECUTION TIME:
0.18408
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
-6215.68421053
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
-354294.0
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
336.46153846
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 17:20:50) 
-- CODE:
h = int(input("insira um numero:"))

n = 2
c = 1
s = 0
x = 1
y = 0

while(s < h):
	pi = (12**1/2)*(0) 
	c = (1 /x*(3**y)) *(-1)**(n) 
	x = x + 2
	y = y + 1 
	s = s + 1 #alcançar o valor de h
	n = n + 1 #mudar o sinal
print(round(pi, 8))
-- OUTPUT:
0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 17:21:10) 
-- CODE:
h = int(input("insira um numero:"))

n = 2
c = 1
s = 0
x = 1
y = 0

while(s < h):
	pi = (12**1/2)*(1) 
	c = (1 /x*(3**y)) *(-1)**(n) 
	x = x + 2
	y = y + 1 
	s = s + 1 #alcançar o valor de h
	n = n + 1 #mudar o sinal
print(round(pi, 8))
-- OUTPUT:
6.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 17:21:13) 
-- CODE:
h = int(input("insira um numero:"))

n = 2
c = 1
s = 0
x = 1
y = 0

while(s < h):
	pi = (12**1/2)*(1) 
	c = (1 /x*(3**y)) *(-1)**(n) 
	x = x + 2
	y = y + 1 
	s = s + 1 #alcançar o valor de h
	n = n + 1 #mudar o sinal
print(round(pi, 8))
-- OUTPUT:
6.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 17:27:21) 
-- CODE:
h = int(input("insira um numero:"))

expoente = 2
constante = 1
termo = 0
x = 1
y = 0

while(termo < h):
	pi = (12**1/2)*(constante) 
	constante = (1/x*(3**y))*(-1)**(expoente) 
	x = x + 2
	y = y + 1 
	termo = termo + 1 #alcançar o valor de h
	expoente = expoente + 1 #mudar o sinal
print(round(pi, 8))
-- OUTPUT:
-6215.68421053
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 17:27:34) 
-- CODE:
h = int(input("insira um numero:"))

expoente = 2
constante = 1
termo = 0
x = 1
y = 0

while(termo < h):
	pi = (12**1/2)*(constante) 
	constante = (1/x*(3**y))*(-1)**(expoente) 
	x = x + 2
	y = y + 1 
	termo = termo + 1 #alcançar o valor de h
	expoente = expoente + 1 #mudar o sinal
print(round(pi, 8))
-- OUTPUT:
-6215.68421053
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 17:29:31) 
-- CODE:
h = int(input("insira um numero:"))

raiz = 12**1/2
expoente = 2
constante = 1
termo = 0
x = 1
y = 0

while(termo < h):
	pi = raiz*(constante) 
	constante = (1/x*(3**y))*(-1)**(expoente) 
	x = x + 2
	y = y + 1 
	termo = termo + 1 #alcançar o valor de h
	expoente = expoente + 1 #mudar o sinal
print(round(pi, 8))
-- OUTPUT:
-6215.68421053
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 17:30:15) 
-- CODE:
h = int(input("insira um numero:"))

raiz = 12**1/2
expoente = 2
constante = 1
termo = 0
x = 1
y = 0

while(termo < h):
	pi = raiz*(constante) 
	constante = (1/(x*(3**y)))*(-1)**(expoente) 
	x = x + 2
	y = y + 1 
	termo = termo + 1 #alcançar o valor de h
	expoente = expoente + 1 #mudar o sinal
print(round(pi, 8))
-- OUTPUT:
-1.604e-05
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 17:31:14) 
-- CODE:
h = int(input("insira um numero:"))

raiz = 12**1/2
expoente = 2
constante = (1/(x*(3**y)))*(-1)**(expoente) 
termo = 0
x = 1
y = 0

while(termo < h):
	pi = raiz*(constante) 
	constante = (1/(x*(3**y)))*(-1)**(expoente) 
	x = x + 2
	y = y + 1 
	termo = termo + 1 #alcançar o valor de h
	expoente = expoente + 1 #mudar o sinal
print(round(pi, 8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    constante = (1/(x*(3**y)))*(-1)**(expoente) 
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 17:31:33) 
-- CODE:
h = int(input("insira um numero:"))

raiz = 12**1/2
expoente = 2
termo = 0
x = 1
y = 0
constante = (1/(x*(3**y)))*(-1)**(expoente) 


while(termo < h):
	pi = raiz*(constante) 
	constante = (1/(x*(3**y)))*(-1)**(expoente) 
	x = x + 2
	y = y + 1 
	termo = termo + 1 #alcançar o valor de h
	expoente = expoente + 1 #mudar o sinal
print(round(pi, 8))
-- OUTPUT:
-1.604e-05
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 17:32:11) 
-- CODE:
h = int(input("insira um numero:"))

raiz = 12**1/2
expoente = 2
termo = 0
x = 1
y = 0
constante = (1/(x*(3**y)))*(-1)**(expoente) 


while(termo < h):
	pi = raiz*(constante) 
	constante = (1/(x*(3**y)))*(-1)**(expoente)- constante 
	x = x + 2
	y = y + 1 
	termo = termo + 1 #alcançar o valor de h
	expoente = expoente + 1 #mudar o sinal
print(round(pi, 8))
-- OUTPUT:
-0.843107
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 17:33:08) 
-- CODE:
h = int(input("insira um numero:"))

raiz = 12**1/2
expoente = 2
termo = 0
x = 1
y = 0
constante = (1/(x*(3**y)))*(-1)**(expoente) 


while(termo < h):
	pi = raiz*(constante) 
	constante = (1/(x*(3**y)))*(-1)**(expoente)
	x = x + 2
	y = y + 1 
	termo = termo + 1 #alcançar o valor de h
	expoente = expoente + 1 #mudar o sinal
print(round(pi, 8))
-- OUTPUT:
-1.604e-05
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 17:35:46) 
-- CODE:
h = int(input("insira um numero:"))

raiz = 12**1/2
expoente = 2
termo = 0
x = 1
y = 0
constante = 1


while(termo < h):
	constante = (1/(x*(3**y)))*(-1)**(expoente)
	x = x + 2
	y = y + 1 
	termo = termo + 1 #alcançar o valor de h
	expoente = expoente + 1 #mudar o sinal
	pi = raiz * constante
print(round(pi, 8)) 
-- OUTPUT:
4.84e-06
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 17:36:27) 
-- CODE:
h = int(input("insira um numero:"))

raiz = 12**1/2
expoente = 2
termo = 0
x = 1
y = 0


while(termo < h):
	constante = (1/(x*(3**y)))*(-1)**(expoente)
	x = x + 2
	y = y + 1 
	termo = termo + 1 #alcançar o valor de h
	expoente = expoente + 1 #mudar o sinal
	pi = raiz * constante
print(round(pi, 8)) 
-- OUTPUT:
4.84e-06
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 17:36:56) 
-- CODE:
h = int(input("insira um numero:"))

raiz = 12**1/2
expoente = 2
termo = 0
x = 1
y = 0


while(termo < h):
	constante = (1/(x*(3**y)))*(-1)**(expoente) + constante
	x = x + 2
	y = y + 1 
	termo = termo + 1 #alcançar o valor de h
	expoente = expoente + 1 #mudar o sinal
	pi = raiz * constante
print(round(pi, 8)) 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    constante = (1/(x*(3**y)))*(-1)**(expoente) + constante
NameError: name 'constante' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 17:37:07) 
-- CODE:
h = int(input("insira um numero:"))

raiz = 12**1/2
expoente = 2
termo = 0
x = 1
y = 0
constante = 1

while(termo < h):
	constante = (1/(x*(3**y)))*(-1)**(expoente) + constante
	x = x + 2
	y = y + 1 
	termo = termo + 1 #alcançar o valor de h
	expoente = expoente + 1 #mudar o sinal
	pi = raiz * constante
print(round(pi, 8)) 
-- OUTPUT:
11.44139922
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 17:37:40) 
-- CODE:
h = int(input("insira um numero:"))

raiz = 12**1/2
expoente = 2
termo = 0
x = 1
y = 0
constante = 1

while(termo < h):
	pi = raiz * constante
	x = x + 2
	y = y + 1 
	termo = termo + 1 #alcançar o valor de h
	expoente = expoente + 1 #mudar o sinal
	constante = (1/(x*(3**y)))*(-1)**(expoente) + constante
print(round(pi, 8)) 
-- OUTPUT:
5.44139922
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 17:38:18) 
-- CODE:
h = int(input("insira um numero:"))

raiz = 12**1/2
expoente = 2
termo = 0
x = 1
y = 0
constante = 1

while(termo < h):
	pi = raiz 
	x = x + 2
	y = y + 1 
	termo = termo + 1 #alcançar o valor de h
	expoente = expoente + 1 #mudar o sinal
	constante = pi * (1/(x*(3**y)))*(-1)**(expoente) + constante
print(round(pi, 8)) 
-- OUTPUT:
6.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 17:38:34) 
-- CODE:
h = int(input("insira um numero:"))

raiz = 12**1/2
expoente = 2
termo = 0
x = 1
y = 0
constante = 1

while(termo < h):
	pi = raiz 
	x = x + 2
	y = y + 1 
	termo = termo + 1 #alcançar o valor de h
	expoente = expoente + 1 #mudar o sinal
	constante = pi * (1/(x*(3**y)))*(-1)**(expoente) + constante
print(round(constante, 8)) 
-- OUTPUT:
0.44139775
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 17:38:50) 
-- CODE:
h = int(input("insira um numero:"))

raiz = 12**1/2
expoente = 2
termo = 0
x = 1
y = 0
constante = 1

while(termo < h):
	pi = raiz 
	constante = pi * (1/(x*(3**y)))*(-1)**(expoente) + constante
	x = x + 2
	y = y + 1 
	termo = termo + 1 #alcançar o valor de h
	expoente = expoente + 1 #mudar o sinal

print(round(constante, 8)) 
-- OUTPUT:
6.44139922
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 17:39:50) 
-- CODE:
h = int(input("insira um numero:"))

raiz = 12**1/2
expoente = 2
termo = 0
x = 1
y = 0
constante = 1

while(termo < h):
	pi = raiz 
	constante = pi * (1/(x*(3**y)))*(-1)**(expoente) + constante
	x = x + 2
	y = y + 1 
	termo = termo + 1       #alcançar o valor de h
	expoente = expoente + 1 #mudar o sinal

print(round(raiz, 8)) 
-- OUTPUT:
6.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 17:40:00) 
-- CODE:
h = int(input("insira um numero:"))

raiz = 12**1/2
expoente = 2
termo = 0
x = 1
y = 0
constante = 1

while(termo < h):
	pi = raiz 
	constante = pi * (1/(x*(3**y)))*(-1)**(expoente) + constante
	x = x + 2
	y = y + 1 
	termo = termo + 1       #alcançar o valor de h
	expoente = expoente + 1 #mudar o sinal

print(round(raiz, 8)) 
-- OUTPUT:
6.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 17:40:47) 
-- CODE:
h = int(input("insira um numero:"))

raiz = 12**1/2
expoente = 2
termo = 0
x = 1
y = 0
constante = 1

while(termo < h):
	pi = raiz 
	constante = pi * (1/(x*(3**y)))*(-1)**(expoente) + constante
	x = x + 2
	y = y + 1 
	termo = termo + 1       #alcançar o valor de h
	expoente = expoente + 1 #mudar o sinal

print(round(raiz, 8)) 

print(constante)
print(pi)
print(x)
print(y)
-- OUTPUT:
6.0
6.441399220117539
6.0
23
11
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 17:41:31) 
-- CODE:
h = int(input("insira um numero:"))

raiz = 12**1/2
expoente = 2
termo = 0
x = 1
y = 0
constante = 1

while(termo < h):
	pi = raiz * constante
	constante = pi * (1/(x*(3**y)))*(-1)**(expoente) + constante
	x = x + 2
	y = y + 1 
	termo = termo + 1       #alcançar o valor de h
	expoente = expoente + 1 #mudar o sinal

print(round(pi, 8)) 
print(constante)
print(pi)
print(x)
print(y)
-- OUTPUT:
15.46217826
2.5770421793601916
15.462178260919277
23
11
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 18:32:22) 
-- CODE:
N = int(input("Qtde. de termos: "))
# Valores iniciais
soma = 0 # Variavel acumuladora
i = 0 # Variavel contadora
sinal = +1 # Sinal do 1o. termo
# Laco de acumulacao
while (i < N):
	soma = soma + sinal / (2 * i + 1)**3
	sinal = - sinal # Troca sinal
	i = i + 1
	novo_pi = (32 * soma)**(1./3)
# Impressao de resultados
print(round(novo_pi,8))

-- OUTPUT:
3.14164279
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 19:01:14) 
-- CODE:
h = int(input("insira um numero:"))

raiz = 12**1/2
expoente = 2
termo = 0
x = 1
y = 0
constante = 1

while(termo < h):
	pi = raiz * constante
	constante = pi * (1/(x*(3**y)))*(-1)**(expoente) + constante
	x = x + 2
	y = y + 1 
	termo = termo + 1       #alcançar o valor de h
	expoente = expoente + 1 #mudar o sinal

print(round(pi, 8)) 
print(constante)

-- EXECUTION TIME:
0.138856
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
15.46217826
2.5770421793601916
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
15.46223513
2.577039300440528
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
15.46442303
2.5769324330724124
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 19:01:15) 
-- CODE:
h = int(input("insira um numero:"))

raiz = 12**1/2
expoente = 2
termo = 0
x = 1
y = 0
constante = 1

while(termo < h):
	pi = raiz * constante
	constante = pi * (1/(x*(3**y)))*(-1)**(expoente) + constante
	x = x + 2
	y = y + 1 
	termo = termo + 1       #alcançar o valor de h
	expoente = expoente + 1 #mudar o sinal

print(round(pi, 8)) 
print(constante)

-- OUTPUT:
15.46217826
2.5770421793601916
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:10:20) 
-- CODE:
h = int(input("insira um numero:"))

raiz = 12**1/2
expoente = 2
t = 0
x = 1
y = 0
constante = 1

while(t < h):
	pi = raiz * (constante)
	constante = pi * (1/(x*(3**y)))*(-1)**(expoente) + constante
	x = x + 2
	y = y + 1 
	t = t + 1       #alcançar o valor de h
	expoente = expoente + 1 #mudar o sinal

print(round(pi, 8)) 

-- OUTPUT:
15.46217826
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:12:31) 
-- CODE:
h = int(input("insira um numero:"))

raiz = 12**1/2
expoente = 2
t = 0
x = 1
y = 0
constante = 1

while(t < h):
	constante = raiz * (1/(x*(3**y)))*(-1)**(expoente) + constante(constante)
	x = x + 2
	y = y + 1 
	t = t + 1       #alcançar o valor de h
	expoente = expoente + 1 #mudar o sinal

print(round(pi, 8)) 

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    constante = raiz * (1/(x*(3**y)))*(-1)**(expoente) + constante(constante)
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:13:04) 
-- CODE:
h = int(input("insira um numero:"))

raiz = 12**1/2
expoente = 2
t = 0
x = 1
y = 0
constante = 0

while(t < h):
	constante = raiz * (1/(x*(3**y)))*(-1)**(expoente) + constante
	x = x + 2
	y = y + 1 
	t = t + 1       #alcançar o valor de h
	expoente = expoente + 1 #mudar o sinal

print(round(pi, 8)) 

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 17, in <module>
    print(round(pi, 8)) 
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:13:24) 
-- CODE:
h = int(input("insira um numero:"))

raiz = 12**1/2
expoente = 2
t = 0
x = 1
y = 0
constante = 0

while(t < h):
	constante = raiz * (1/(x*(3**y)))*(-1)**(expoente) + constante
	x = x + 2
	y = y + 1 
	t = t + 1       #alcançar o valor de h
	expoente = expoente + 1 #mudar o sinal

print(round(constante, 8)) 

-- OUTPUT:
5.44139922
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:14:30) 
-- CODE:
h = int(input("insira um numero:"))

raiz = 12**1/2
expoente = 2
t = 0
x = 1
y = 0
constante = 0

while(t < h):
	constante = raiz * (1//(x*(3**y)))*(-1)**(expoente) + constante
	x = x + 2
	y = y + 1 
	t = t + 1       #alcançar o valor de h
	expoente = expoente + 1 #mudar o sinal

print(round(constante, 8)) 

-- OUTPUT:
6.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:16:45) 
-- CODE:
h = int(input("insira um numero:"))

raiz = 12**1/2
e = 2
t = 0
x = 1
y = 0
c = 0

while(t < h):
	c = raiz *(1 / x * (3**y)) * (-1)**e + (c)
	x = x + 2
	y = y + 1 
	t = t + 1       #alcançar o valor de h
	expoente = expoente + 1 #mudar o sinal

print(round(constante, 8)) 

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 15, in <module>
    expoente = expoente + 1 #mudar o sinal
NameError: name 'expoente' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:17:07) 
-- CODE:
h = int(input("insira um numero:"))

raiz = 12**1/2
e = 2
t = 0
x = 1
y = 0
c = 0

while(t < h):
	c = raiz *(1 / x * (3**y)) * (-1)**e + (c)
	x = x + 2
	y = y + 1 
	t = t + 1       #alcançar o valor de h
	e = e + 1 #mudar o sinal

print(round(c, 8)) 

-- OUTPUT:
12341.87893221
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:18:42) 
-- CODE:
h = int(input("insira um numero:"))

raiz = 12**1/2
e = 2
t = 0
x = 1
y = 0
c = 0

while(t < h):
	c = raiz *(1 / x * (3**y)) * (-1)**e + (c)
	x = x + 2
	y = y + 1 
	t = t + 1       #alcançar o valor de h
	e = e + 1 #mudar o sinal

print(round(c, 8)) 
print(c)
print(x)
print(raiz)

-- OUTPUT:
12341.87893221
12341.878932213296
23
6.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:19:52) 
-- CODE:
from math import*
h = int(input("insira um numero:"))

raiz = sqrt(12)
e = 2
t = 0
x = 1
y = 0
c = 0

while(t < h):
	c = raiz *(1 / x * (3**y)) * (-1)**e + (c)
	x = x + 2
	y = y + 1 
	t = t + 1       #alcançar o valor de h
	e = e + 1 #mudar o sinal

print(round(c, 8)) 
print(c)
print(x)
print(raiz)

-- OUTPUT:
7125.58712382
7125.5871238191185
23
3.4641016151377544
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 10:20:14) 
-- CODE:
from math import*
h = int(input("insira um numero:"))

raiz = sqrt(12)
e = 2
t = 0
x = 1
y = 0
c = 0

while(t < h):
	c = raiz *(1 / x * (3**y)) * (-1)**e + (c)
	x = x + 2
	y = y + 1 
	t = t + 1       #alcançar o valor de h
	e = e + 1 #mudar o sinal

print(round(c, 8)) 

-- EXECUTION TIME:
0.166939
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
7125.58712382
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
420865.97458955
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
-363.2842469
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:20:24) 
-- CODE:
from math import*
h = int(input("insira um numero:"))

raiz = sqrt(12)
e = 2
t = 0
x = 1
y = 0
c = 0

while(t < h):
	c = raiz *(1 / x * (3**y)) * (-1)**e + (c)
	x = x + 2
	y = y + 1 
	t = t + 1       #alcançar o valor de h
	e = e + 1      #mudar o sinal

print(round(c, 8)) 

-- OUTPUT:
7125.58712382
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:20:34) 
-- CODE:
from math import*
h = int(input("insira um numero:"))

raiz = sqrt(12)
e = 2
t = 0
x = 1
y = 0
c = 0

while(t < h):
	c = raiz *(1 / x * (3**y)) * (-1)**e + (c)
	x = x + 2
	y = y + 1 
	t = t + 1       #alcançar o valor de h
	e = e + 1      #mudar o sinal

print(round(c, 8)) 

-- OUTPUT:
7125.58712382
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:21:52) 
-- CODE:
from math import*
h = int(input("insira um numero:"))

raiz = sqrt(12)
e = 2
t = 0
x = 1
y = 0
c = 1

while(t < h):
	c = raiz *(1 / x * (3**y)) * (-1)**e + (c)
	x = x + 2
	y = y + 1 
	t = t + 1       #alcançar o valor de h
	e = e + 1      #mudar o sinal

print(round(c, 8)) 

-- OUTPUT:
7126.58712382
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:22:08) 
-- CODE:
from math import*
h = int(input("insira um numero:"))

raiz = sqrt(12)
e = 2
t = 0
x = 1
y = 0
c = 0

while(t < h):
	c = raiz *(1 / x * (3**y)) * (-1)**e + (c)
	x = x + 2
	y = y + 1 
	t = t + 1       #alcançar o valor de h
	e = e + 1      #mudar o sinal

print(round(c, 8)) 

-- OUTPUT:
7125.58712382
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:22:21) 
-- CODE:
from math import*
h = int(input("insira um numero:"))

raiz = sqrt(12)
e = 2
t = 0
x = 1
y = 0
c = 0

while(t < h):
	c = raiz *(1 / x * (3**y)) * (-1)**e + (c)
	x = x + 2
	y = y + 1 
	t = t + 1       #alcançar o valor de h
	e = e + 1      #mudar o sinal

print(round(c, 8)) 

-- OUTPUT:
7125.58712382
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 10:22:23) 
-- CODE:
from math import*
h = int(input("insira um numero:"))

raiz = sqrt(12)
e = 2
t = 0
x = 1
y = 0
c = 0

while(t < h):
	c = raiz *(1 / x * (3**y)) * (-1)**e + (c)
	x = x + 2
	y = y + 1 
	t = t + 1       #alcançar o valor de h
	e = e + 1      #mudar o sinal

print(round(c, 8)) 

-- EXECUTION TIME:
0.176087
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
7125.58712382
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
420865.97458955
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
-363.2842469
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:23:42) 
-- CODE:
from math import*
h = int(input("insira um numero:"))

raiz = sqrt(12)
e = 2
t = 0
x = 1
y = 0
c = 0

while(t < h):
	c = raiz *(1 / x * (3**y)) * (-1)**e 
	x = x + 2
	y = y + 1 
	t = t + 1       #alcançar o valor de h
	e = e + 1      #mudar o sinal

print(round(c, 8)) 

-- OUTPUT:
9740.55887011
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:23:45) 
-- CODE:
from math import*
h = int(input("insira um numero:"))

raiz = sqrt(12)
e = 2
t = 0
x = 1
y = 0
c = 0

while(t < h):
	c = raiz *(1 / x * (3**y)) * (-1)**e 
	x = x + 2
	y = y + 1 
	t = t + 1       #alcançar o valor de h
	e = e + 1      #mudar o sinal

print(round(c, 8)) 

-- OUTPUT:
9740.55887011
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:24:02) 
-- CODE:
from math import*
h = int(input("insira um numero:"))

raiz = sqrt(12)
e = 2
t = 0
x = 1
y = 0
c = 0

while(t < h):
	c = raiz *(1 / x * (3**y)) * (-1)**e 
	x = x + 2
	y = y + 1 
	t = t + 1       #alcançar o valor de h
	e = e + 1      #mudar o sinal

print(round(c, 8)) 

-- OUTPUT:
9740.55887011
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:24:20) 
-- CODE:
from math import*
h = int(input("insira um numero:"))

raiz = sqrt(12)
e = 2
t = 0
x = 1
y = 0
c = 0

while(t < h):
	c = raiz *(1 / x * (3**y)) * (-1)**e -(c)
	x = x + 2
	y = y + 1 
	t = t + 1       #alcançar o valor de h
	e = e + 1      #mudar o sinal

print(round(c, 8)) 

-- OUTPUT:
15499.67463964
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:24:55) 
-- CODE:
from math import*
h = int(input("insira um numero:"))

raiz = sqrt(12)
e = 2
t = 0
x = 1
y = 0
c = 0

while(t < h):
	c = raiz *(1 / x * (3**y)) * (-1)**e +(c)
	x = x + 2
	y = y + 1 
	t = t + 1       #alcançar o valor de h
	e = e + 1      #mudar o sinal

print(round(c, 8)) 

-- OUTPUT:
7125.58712382
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:27:37) 
-- CODE:
from math import*
h = int(input("insira um numero:"))

raiz = sqrt(12)
e = 2
t = 0
x = 1
y = 0
c = 0

while(t < h):
	c = raiz *(1 / x * (3**y)) * (-1)**e +(c)
	x = x + 2
	y = y + 1 
	t = t + 1       #alcançar o valor de h
	e = e + 1      #mudar o sinal

print(round(c, 8)) 
print(raiz)
print(x)
-- OUTPUT:
7125.58712382
3.4641016151377544
23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:28:23) 
-- CODE:
from math import*
h = int(input("insira um numero:"))

raiz = sqrt(12)
e = 2
t = 0
x = 1
y = 0
c = 0

while(t < h):
	c = raiz *(1 / x * (3**y)) * (-1)**e +(c)
	x = x + 2
	y = y + 1 
	t = t + 1       #alcançar o valor de h
	e = e + 1      #mudar o sinal

print(round(c, 8)) 
print(raiz)
print(x)

-- OUTPUT:
7125.58712382
3.4641016151377544
23
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:28:57) 
-- CODE:
from math import*
h = int(input("insira um numero:"))

raiz = sqrt(12)
e = 2
t = 0
x = 1
y = 0
c = 0

while(t < h):
	c = raiz *(1 / x * (3**y)) * (-1)**e +(c)
	x = x + 2
	y = y + 1 
	t = t + 1       #alcançar o valor de h
	e = e + 1      #mudar o sinal

print(round(c, 8)) 
print(raiz)
print(x)
print(y)

-- OUTPUT:
7125.58712382
3.4641016151377544
23
11
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:29:16) 
-- CODE:
from math import*
h = int(input("insira um numero:"))

raiz = sqrt(12)
e = 2
t = 0
x = 1
y = 0
c = 0

while(t < h):
	c = raiz *(1 / x * (3**y)) * (-1)**e +(c)
	x = x + 2
	y = y + 1 
	t = t + 1       #alcançar o valor de h
	e = e + 1      #mudar o sinal

print(round(c, 8)) 
print(raiz)
print(x)
print(y)

-- OUTPUT:
7125.58712382
3.4641016151377544
23
11
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:30:06) 
-- CODE:
from math import*
h = int(input("insira um numero:"))

raiz = sqrt(12)
e = 2
t = 0
x = 1
y = 0
c = 0

while(t < h):
	c = raiz *(1 / x * (3**y)) * (-1)**e +(c)
	x = x + 2
	y = y + 1 
	t = t + 1       #alcançar o valor de h
	e = e + 1      #mudar o sinal

print(round(c, 8)) 
print(raiz)
print(x)
print(y)

-- OUTPUT:
7125.58712382
3.4641016151377544
23
11
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:30:54) 
-- CODE:
from math import*
h = int(input("insira um numero:"))

raiz = sqrt(12)
e = 2
t = 0
x = 1
y = 0
c = 0

while(t < h):
	c = raiz *(1 / x * (3**y)) * (-1)**e 
	x = x + 2
	y = y + 1 
	t = t + 1       #alcançar o valor de h
	e = e + 1      #mudar o sinal

print(round(c, 8)) 
print(raiz)
print(x)
print(y)

-- OUTPUT:
9740.55887011
3.4641016151377544
23
11
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 10:43:31) 
-- CODE:
from math import*
h = int(input("insira um numero:"))

raiz = sqrt(12)
e = 2
t = 0
x = 1
y = 0
c = 0

while(t < h):
	c = raiz *((1 / x * (3**y)) * (-1)**e) + c
	x = x + 2
	y = y + 1 
	t = t + 1       #alcançar o valor de h
	e = e + 1      #mudar o sinal

print(round(c, 8)) 

-- EXECUTION TIME:
0.152985
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
7125.58712382
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
420865.97458955
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
-363.2842469
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:43:32) 
-- CODE:
from math import*
h = int(input("insira um numero:"))

raiz = sqrt(12)
e = 2
t = 0
x = 1
y = 0
c = 0

while(t < h):
	c = raiz *((1 / x * (3**y)) * (-1)**e) + c
	x = x + 2
	y = y + 1 
	t = t + 1       #alcançar o valor de h
	e = e + 1      #mudar o sinal

print(round(c, 8)) 

-- OUTPUT:
7125.58712382
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 10:43:32) 
-- CODE:
from math import*
h = int(input("insira um numero:"))

raiz = sqrt(12)
e = 2
t = 0
x = 1
y = 0
c = 0

while(t < h):
	c = raiz *((1 / x * (3**y)) * (-1)**e) + c
	x = x + 2
	y = y + 1 
	t = t + 1       #alcançar o valor de h
	e = e + 1      #mudar o sinal

print(round(c, 8)) 

-- EXECUTION TIME:
0.200711
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
7125.58712382
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
420865.97458955
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
insira um numero:-363.2842469
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 10:43:32) 
-- CODE:
from math import*
h = int(input("insira um numero:"))

raiz = sqrt(12)
e = 2
t = 0
x = 1
y = 0
c = 0

while(t < h):
	c = raiz *((1 / x * (3**y)) * (-1)**e) + c
	x = x + 2
	y = y + 1 
	t = t + 1       #alcançar o valor de h
	e = e + 1      #mudar o sinal

print(round(c, 8)) 

-- EXECUTION TIME:
0.286352
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
7125.58712382
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
420865.97458955
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
insira um numero:-363.2842469
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 10:43:32) 
-- CODE:
from math import*
h = int(input("insira um numero:"))

raiz = sqrt(12)
e = 2
t = 0
x = 1
y = 0
c = 0

while(t < h):
	c = raiz *((1 / x * (3**y)) * (-1)**e) + c
	x = x + 2
	y = y + 1 
	t = t + 1       #alcançar o valor de h
	e = e + 1      #mudar o sinal

print(round(c, 8)) 

-- EXECUTION TIME:
0.41926
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
420865.97458955
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
420865.97458955
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
insira um numero:-363.2842469
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 10:43:32) 
-- CODE:
from math import*
h = int(input("insira um numero:"))

raiz = sqrt(12)
e = 2
t = 0
x = 1
y = 0
c = 0

while(t < h):
	c = raiz *((1 / x * (3**y)) * (-1)**e) + c
	x = x + 2
	y = y + 1 
	t = t + 1       #alcançar o valor de h
	e = e + 1      #mudar o sinal

print(round(c, 8)) 

-- EXECUTION TIME:
0.517068
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
420865.97458955
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
-363.2842469
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
insira um numero:-363.2842469
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 10:43:32) 
-- CODE:
from math import*
h = int(input("insira um numero:"))

raiz = sqrt(12)
e = 2
t = 0
x = 1
y = 0
c = 0

while(t < h):
	c = raiz *((1 / x * (3**y)) * (-1)**e) + c
	x = x + 2
	y = y + 1 
	t = t + 1       #alcançar o valor de h
	e = e + 1      #mudar o sinal

print(round(c, 8)) 

-- EXECUTION TIME:
0.569232
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
420865.97458955
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
insira um numero:-363.2842469
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:43:43) 
-- CODE:
from math import*
h = int(input("insira um numero:"))

raiz = sqrt(12)
e = 2
t = 0
x = 1
y = 0
c = 0

while(t < h):
	c = raiz *((1 / x * (3**y)) * (-1)**e) + c
	x = x + 2
	y = y + 1 
	t = t + 1       #alcançar o valor de h
	e = e + 1      #mudar o sinal

print(round(c, 8)) 

-- OUTPUT:
7125.58712382
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:43:55) 
-- CODE:
from math import*
h = int(input("insira um numero:"))

raiz = sqrt(12)
e = 2
t = 0
x = 1
y = 0
c = 0

while(t < h):
	c = raiz *((1 / x * (3**y)) * (-1)**e) 
	x = x + 2
	y = y + 1 
	t = t + 1       #alcançar o valor de h
	e = e + 1      #mudar o sinal

print(round(c, 8)) 

-- OUTPUT:
9740.55887011
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:44:09) 
-- CODE:
from math import*
h = int(input("insira um numero:"))

raiz = sqrt(12)
e = 2
t = 0
x = 1
y = 0
c = 0

while(t < h):
	c = raiz *((1 / x * (3**y)) * (-1)**e) - c
	x = x + 2
	y = y + 1 
	t = t + 1       #alcançar o valor de h
	e = e + 1      #mudar o sinal

print(round(c, 8)) 

-- OUTPUT:
15499.67463964
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:47:14) 
-- CODE:
from math import*
h = int(input("insira um numero:"))

raiz = sqrt(12)
e = 2
t = 0
x = 1
y = 0
c = 0

while(t < h):
	c = c  + ((1 / x * (3**y)) * (-1)**e) 
	x = x + 2
	y = y + 1 
	t = t + 1       #alcançar o valor de h
	e = e + 1      #mudar o sinal
	c = c * raiz
print(round(c, 8)) 

-- OUTPUT:
698493.28708023
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:47:21) 
-- CODE:
from math import*
h = int(input("insira um numero:"))

raiz = sqrt(12)
e = 2
t = 0
x = 1
y = 0
c = 0

while(t < h):
	c = c  + ((1 / x * (3**y)) * (-1)**e) 
	x = x + 2
	y = y + 1 
	t = t + 1       #alcançar o valor de h
	e = e + 1      #mudar o sinal
	c = c * raiz
print(round(c, 8)) 

-- OUTPUT:
698493.28708023
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:48:11) 
-- CODE:
from math import*
h = int(input("insira um numero:"))

raiz = sqrt(12)
e = 2
t = 0
x = 1
y = 0
c = 0

while(t < h):
	c = c  + ((1 / x * (3**y)) * (-1)**e) 
	x = x + 2
	y = y + 1 
	t = t + 1       #alcançar o valor de h
	e = e + 1      #mudar o sinal
	c = raiz * c
print(round(c, 8)) 

-- OUTPUT:
698493.28708023
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:49:15) 
-- CODE:
from math import*
h = int(input("insira um numero:"))

raiz = sqrt(12)
e = 2
t = 0
x = 1
y = 0
c = 0

while(t < h):
	c = c  + ((1 / x * (3**y)) * (-1)**e) 
	x = x + 2
	y = y + 1 
	t = t + 1       #alcançar o valor de h
	e = e + 1      #mudar o sinal
	c = raiz * c
print(round(c, 8)) 

-- OUTPUT:
698493.28708023
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:54:22) 
-- CODE:
from math import*
h = int(input("insira um numero:"))

raiz = sqrt(12)
e = 2
t = 0
x = 1
y = 0
c = 0

while(t < h):
	c = c - ((1 / x * (3**y)) * (-1)**e) 
	x = x + 2
	y = y + 1 
	t = t + 1       #alcançar o valor de h
	e = e + 1      #mudar o sinal
	c = raiz * c
print(round(c, 8)) 

-- OUTPUT:
-698493.28708023
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:54:28) 
-- CODE:
from math import*
h = int(input("insira um numero:"))

raiz = sqrt(12)
e = 2
t = 0
x = 1
y = 0
c = 0

while(t < h):
	c = c - ((1 / x * (3**y)) * (-1)**e) 
	x = x + 2
	y = y + 1 
	t = t + 1       #alcançar o valor de h
	e = e + 1      #mudar o sinal
	c = raiz * c
print(round(c, 8)) 

-- OUTPUT:
-698493.28708023
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:54:35) 
-- CODE:
from math import*
h = int(input("insira um numero:"))

raiz = sqrt(12)
e = 2
t = 0
x = 1
y = 0
c = 0

while(t < h):
	c = c + ((1 / x * (3**y)) * (-1)**e) 
	x = x + 2
	y = y + 1 
	t = t + 1       #alcançar o valor de h
	e = e + 1      #mudar o sinal
	c = raiz * c
print(round(c, 8)) 

-- OUTPUT:
698493.28708023
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:58:35) 
-- CODE:
from math import*
h = int(input("insira um numero:"))

raiz = sqrt(12)
e = 2
t = 0
x = 1
y = 0
c = 0

while(t < h):
	c = c + ((1 / x * (3**y)) * (-1)**e) 
	x = x*2 + 1
	y = y + 1 
	t = t + 1       #alcançar o valor de h
	e = e + 1      #mudar o sinal
	c = raiz * c
print(round(c, 8)) 

-- OUTPUT:
679184.19863021
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:59:29) 
-- CODE:
from math import*
h = int(input("insira um numero:"))

raiz = sqrt(12)
e = 2
t = 0
x = 0
y = 0
c = 0

while(t < h):
	c = c + ((1 / x * (3**y)) * (-1)**e) 
	x = x*2 + 1
	y = y + 1 
	t = t + 1       #alcançar o valor de h
	e = e + 1      #mudar o sinal
	c = raiz * c
print(round(c, 8)) 

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    c = c + ((1 / x * (3**y)) * (-1)**e) 
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 11:04:33) 
-- CODE:
from math import*
h = int(input("insira um numero:"))

raiz = sqrt(12)
t = 0
c = 0

while(t < h):
	c = c +(-1) ** (t) * 1 /((2 * t + 1) * 3** t) * raiz 
	t = t + 1       #alcançar o valor de h
	
print(round(c, 8)) 

-- OUTPUT:
3.1415933
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 11:04:37) 
-- CODE:
from math import*
h = int(input("insira um numero:"))

raiz = sqrt(12)
t = 0
c = 0

while(t < h):
	c = c +(-1) ** (t) * 1 /((2 * t + 1) * 3** t) * raiz 
	t = t + 1       #alcançar o valor de h
	
print(round(c, 8)) 

-- OUTPUT:
3.1415933
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 11:04:43) 
-- CODE:
from math import*
h = int(input("insira um numero:"))

raiz = sqrt(12)
t = 0
c = 0

while(t < h):
	c = c +(-1) ** (t) * 1 /((2 * t + 1) * 3** t) * raiz 
	t = t + 1       #alcançar o valor de h
	
print(round(c, 8)) 

-- EXECUTION TIME:
0.135073
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.1415933
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.14159266
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
3.14156872
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
