== TEST (2019-05-02 11:23:31) 
-- CODE:
from math import*
x = float(input("Valor de x"))

if(x <= -1 OR x >= 1):
	print(x**0.5)
elif( x > -1 and x < 0 or x > 0 and x < 1):
	print(abs(x))
elif( x == 0):
	print(0)
-- ERROR:
File "XXXX", line 4
    if(x <= -1 OR x >= 1):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:23:39) 
-- CODE:
from math import*
x = float(input("Valor de x"))

if(x <= -1 or x >= 1):
	print(x**0.5)
elif( x > -1 and x < 0 or x > 0 and x < 1):
	print(abs(x))
elif( x == 0):
	print(0)
-- OUTPUT:
(8.637884531957315e-17+1.4106735979665885j)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 11:23:41) 
-- CODE:
from math import*
x = float(input("Valor de x"))

if(x <= -1 or x >= 1):
	print(x**0.5)
elif( x > -1 and x < 0 or x > 0 and x < 1):
	print(abs(x))
elif( x == 0):
	print(0)
-- EXECUTION TIME:
0.197007
-- TEST CASE 1:
---- input:
-1.99
---- correct output:
1.41
---- user output:
(8.637884531957315e-17+1.4106735979665885j)
-- TEST CASE 2:
---- input:
0.01
---- correct output:
0.01
---- user output:
0.01
-- TEST CASE 3:
---- input:
-256.0
---- correct output:
16.0
---- user output:
(9.797174393178826e-16+16j)
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:24:23) 
-- CODE:
from math import*
x = float(input("Valor de x:"))

if(x <= -1 or x >= 1):
	print(round(x**0.5), 2)
elif( x > -1 and x < 0 or x > 0 and x < 1):
	print(round(abs(x), 2)
elif( x == 0):
	print(0)
-- ERROR:
File "XXXX", line 8
    elif( x == 0):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:24:33) 
-- CODE:
from math import*
x = float(input("Valor de x:"))

if(x <= -1 or x >= 1):
	print(round(x**0.5), 2)
elif( x > -1 and x < 0 or x > 0 and x < 1):
	print(round(abs(x), 2))
elif( x == 0):
	print(0)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(round(x**0.5), 2)
TypeError: type complex doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:24:43) 
-- CODE:
from math import*
x = float(input("Valor de x:"))

if(x <= -1 or x >= 1):
	print(round(x**0.5), 2)
elif( x > -1 and x < 0 or x > 0 and x < 1):
	print(round(abs(x), 2))
elif( x == 0):
	print(0)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(round(x**0.5), 2)
TypeError: type complex doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:24:47) 
-- CODE:
from math import*
x = float(input("Valor de x:"))

if(x <= -1 or x >= 1):
	print(round(x**0.5), 2)
elif( x > -1 and x < 0 or x > 0 and x < 1):
	print(round(abs(x), 2))
elif( x == 0):
	print(0)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(round(x**0.5), 2)
TypeError: type complex doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:25:30) 
-- CODE:
from math import*
x = float(input("Valor de x:"))

if(x <= -1 or x >= 1):
	print(round(x**0.5), 2)
elif( x > -1 and x < 0 or x > 0 and x < 1):
	print(round(abs(x), 2))
elif( x == 0):
	print(0)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(round(x**0.5), 2)
TypeError: type complex doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:25:43) 
-- CODE:
from math import*
x = float(input("Valor de x:"))

if(x <= -1 or x >= 1):
	print(round(abs(x**0.5), 2))
elif( x > -1 and x < 0 or x > 0 and x < 1):
	print(round(abs(x), 2))
elif( x == 0):
	print(0)
-- OUTPUT:
1.41
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 11:25:47) 
-- CODE:
from math import*
x = float(input("Valor de x:"))

if(x <= -1 or x >= 1):
	print(round(abs(x**0.5), 2))
elif( x > -1 and x < 0 or x > 0 and x < 1):
	print(round(abs(x), 2))
elif( x == 0):
	print(0)
-- EXECUTION TIME:
0.222301
-- TEST CASE 1:
---- input:
-1.99
---- correct output:
1.41
---- user output:
1.41
-- TEST CASE 2:
---- input:
0.01
---- correct output:
0.01
---- user output:
0.01
-- TEST CASE 3:
---- input:
-256.0
---- correct output:
16.0
---- user output:
16.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
