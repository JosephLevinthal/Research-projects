== TEST (2019-04-09 11:48:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("Digite o raio do tanque: "))
x = float(input("Digite a altura da coluna de ar (x) na parte superior do tanque "))
n = int(input("Digite a opcao (1 ou 2): "))
from math import *
#esfera do raio r TOTAL:
v1 = (4 * pi * r ** 3) / 3
#calota esferica de raio r e altura x:
v2 = (pi * x**2 (3*r - x))/ 3

if (n == 1):
	resp = v2
	print(resp)
else: 
	resp = v1 - v2
	print(resp)
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    v2 = (pi * x**2 (3*r - x))/ 3
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:49:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("Digite o raio do tanque: "))
x = float(input("Digite a altura da coluna de ar (x) na parte superior do tanque "))
n = int(input("Digite a opcao (1 ou 2): "))
from math import *
#esfera do raio r TOTAL:
v1 = (4 * pi * r ** 3) / 3
#calota esferica de raio r e altura x:
v2 = (pi * x**2 *(3*r - x))/ 3

if (n == 1):
	resp = v2
	print(resp)
else: 
	resp = v1 - v2
	print(resp)
	
	
-- OUTPUT:
9.025664794069577
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:49:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("Digite o raio do tanque: "))
x = float(input("Digite a altura da coluna de ar (x) na parte superior do tanque "))
n = int(input("Digite a opcao (1 ou 2): "))
from math import *
#esfera do raio r TOTAL:
v1 = (4 * pi * r ** 3) / 3
#calota esferica de raio r e altura x:
v2 = (pi * x**2 *(3*r - x))/ 3

if (n == 1):
	resp = v2
	print(round(resp,2))
else: 
	resp = v1 - v2
	print(round(resp,2))
	
	
-- OUTPUT:
9.03
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:49:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("Digite o raio do tanque: "))
x = float(input("Digite a altura da coluna de ar (x) na parte superior do tanque "))
n = int(input("Digite a opcao (1 ou 2): "))
from math import *
#esfera do raio r TOTAL:
v1 = (4 * pi * r ** 3) / 3
#calota esferica de raio r e altura x:
v2 = (pi * x**2 *(3*r - x))/ 3

if (n == 1):
	resp = v2
	print(round(resp,2))
else: 
	resp = v1 - v2
	print(round(resp,2))
	
	
-- EXECUTION TIME:
0.134558
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.03
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.34
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:49:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("Digite o raio do tanque: "))
x = float(input("Digite a altura da coluna de ar (x) na parte superior do tanque "))
n = int(input("Digite a opcao (1 ou 2): "))
from math import *
#esfera do raio r TOTAL:
v1 = (4 * pi * r ** 3) / 3
#calota esferica de raio r e altura x:
v2 = (pi * x**2 *(3*r - x))/ 3

if (n == 1):
	resp = v2
	print(round(resp,2))
else: 
	resp = v1 - v2
	print(round(resp,2))
	
	
-- OUTPUT:
9.03
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:50:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("Digite o raio do tanque: "))
x = float(input("Digite a altura da coluna de ar (x) na parte superior do tanque "))
n = int(input("Digite a opcao (1 ou 2): "))
from math import *
#esfera do raio r TOTAL:
v1 = (4 * pi * r ** 3) / 3
#calota esferica de raio r e altura x:
v2 = (pi * x**2 *(3*r - x))/ 3

if (n == 1):
	resp = v2
	print(round(resp,n))
else: 
	resp = v1 - v2
	print(round(resp,n))
	
	
-- OUTPUT:
9.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:51:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("Digite o raio do tanque: "))
x = float(input("Digite a altura da coluna de ar (x) na parte superior do tanque: "))
n = int(input("Digite a opcao (1 ou 2): "))
from math import *
#esfera do raio r TOTAL:
v1 = (4 * pi * r ** 3) / 3
#calota esferica de raio r e altura x:
v2 = (pi * x**2 *(3*r - x))/ 3

if (n == 1):
	resp = v2
	print(round(resp,n))
else: 
	resp = v1 - v2
	print(round(resp,n))
	
	
-- EXECUTION TIME:
0.110249
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.34
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:51:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("Digite o raio do tanque: "))
x = float(input("Digite a altura da coluna de ar (x) na parte superior do tanque: "))
n = int(input("Digite a opcao (1 ou 2): "))
from math import *
#esfera do raio r TOTAL:
v1 = (4 * pi * r ** 3) / 3
#calota esferica de raio r e altura x:
v2 = (pi * x**2 *(3*r - x))/ 3

if (n == 1):
	resp = v2
	print(round(resp,4))
else: 
	resp = v1 - v2
	print(round(resp,4))
	
	
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:51:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("Digite o raio do tanque: "))
x = float(input("Digite a altura da coluna de ar (x) na parte superior do tanque: "))
n = int(input("Digite a opcao (1 ou 2): "))
from math import *
#esfera do raio r TOTAL:
v1 = (4 * pi * r ** 3) / 3
#calota esferica de raio r e altura x:
v2 = (pi * x**2 *(3*r - x))/ 3

if (n == 1):
	resp = v2
	print(round(resp,4))
else: 
	resp = v1 - v2
	print(round(resp,4))
	
	
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:51:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("Digite o raio do tanque: "))
x = float(input("Digite a altura da coluna de ar (x) na parte superior do tanque: "))
n = int(input("Digite a opcao (1 ou 2): "))
from math import *
#esfera do raio r TOTAL:
v1 = (4 * pi * r ** 3) / 3
#calota esferica de raio r e altura x:
v2 = (pi * x**2 *(3*r - x))/ 3

if (n == 1):
	resp = v2
	print(round(resp,4))
else: 
	resp = v1 - v2
	print(round(resp,4))
	
	
-- EXECUTION TIME:
0.145125
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
