== TEST (2019-05-02 11:43:50) 
-- CODE:
a = float(input("Valor de x: "))

if ((-1000 <= a < -2) or (2 < a <= 1000)):
	elif (-1000 <= a < -2):
		f =  (-(1/(x+2))
		print(f)
	else:
		f = ((1)/(x-2))
		print(f)
else:
	print("entrada invalida")
		
-- ERROR:
File "XXXX", line 4
    elif (-1000 <= a < -2):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:44:09) 
-- CODE:
a = float(input("Valor de x: "))

if ((-1000 <= a < -2) or (2 < a <= 1000)):
	if (-1000 <= a < -2):
		f =  (-(1/(x+2))
		print(f)
	else:
		f = ((1)/(x-2))
		print(f)
else:
	print("entrada invalida")
		
-- ERROR:
File "XXXX", line 6
    print(f)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:44:21) 
-- CODE:
a = float(input("Valor de x: "))

if ((-1000 <= a < -2) or (2 < a <= 1000)):
	if (-1000 <= a < -2):
		f =  (-(1/(x+2))
	print(f)
	else:
		f = ((1)/(x-2))
		print(f)
else:
	print("entrada invalida")
		
-- ERROR:
File "XXXX", line 6
    print(f)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:44:33) 
-- CODE:
a = float(input("Valor de x: "))

if ((-1000 <= a < -2) or (2 < a <= 1000)):
	if (-1000 <= a < -2):
		f = (-(1/(x+2))
	print(f)
	else:
		f = ((1)/(x-2))
		print(f)
else:
	print("entrada invalida")
		
-- ERROR:
File "XXXX", line 6
    print(f)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:44:50) 
-- CODE:
a = float(input("Valor de x: "))

if ((-1000 <= a < -2) or (2 < a <= 1000)):
	if (-1000 <= a < -2):
	f = (-(1/(x+2))
	print(f)
	else:
		h = ((1)/(x-2))
		print(f)
else:
	print("entrada invalida")
		
-- ERROR:
File "XXXX", line 5
    f = (-(1/(x+2))
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:45:20) 
-- CODE:
a = float(input("Valor de x: "))

if ((-1000 <= a < -2) or (2 < a <= 1000)):
	elif (-1000 <= a < -2):
	f = (-(1/(a+2))
	print(f)
	else:
		h = ((1)/(a-2))
		print(f)
else:
	print("entrada invalida")
		
-- ERROR:
File "XXXX", line 4
    elif (-1000 <= a < -2):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:45:43) 
-- CODE:
a = float(input("Valor de x: "))

if ((-1000 <= a < -2) or (2 < a <= 1000)):
	if (-1000 <= a < -2):
	f = (-(1/(a+2))
	print(f)
	else:
		h = ((1)/(a-2))
		print(f)
else:
	print("entrada invalida")
		
-- ERROR:
File "XXXX", line 5
    f = (-(1/(a+2))
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:45:52) 
-- CODE:
a = float(input("Valor de x: "))

if ((-1000 <= a < -2) or (2 < a <= 1000)):
	if (-1000 <= a < -2):
		f = (-(1/(a+2))
	print(f)
	else:
		h = ((1)/(a-2))
		print(f)
else:
	print("entrada invalida")
		
-- ERROR:
File "XXXX", line 6
    print(f)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:46:22) 
-- CODE:
a = float(input("Valor de x: "))

if ((-1000 <= a < -2) or (2 < a <= 1000)):
	if (-1000 <= a < -2):
		j = -(1/(a+2)
	print(j)
	else:
		h = ((1)/(a-2))
		print(f)
else:
	print("entrada invalida")
		
-- ERROR:
File "XXXX", line 6
    print(j)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:46:28) 
-- CODE:
a = float(input("Valor de x: "))

if ((-1000 <= a < -2) or (2 < a <= 1000)):
	if (-1000 <= a < -2):
		j = -(1/(a+2)
		print(j)
	else:
		h = ((1)/(a-2))
		print(f)
else:
	print("entrada invalida")
		
-- ERROR:
File "XXXX", line 6
    print(j)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:48:34) 
-- CODE:
x = float(input("Valor de x: "))

if ((-1000 <= x < -2) or (2 < x <= 1000)):
	if (-1000 <= x < -2):
		a = (-(1/x+2))
		print(round(a, 4)
	else:
		b = (1/x+2)
		print(round(b, 4))
else:
	print("entradas invalidas")
-- ERROR:
File "XXXX", line 7
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:49:10) 
-- CODE:
x = float(input("Valor de x: "))

if ((-1000 <= x < -2) or (2 < x <= 1000)):
	elif (-1000 <= x < -2):
		a = (-(1/x+2))
		print(round(a, 4)
	else:
		b = (1/x+2)
		print(round(b, 4))
else:
	print("entradas invalidas")
-- ERROR:
File "XXXX", line 4
    elif (-1000 <= x < -2):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:49:26) 
-- CODE:
x = float(input("Valor de x: "))

if ((-1000 <= x < -2) or (2 < x <= 1000)):
	if (-1000 <= x < -2):
		a = (-(1/x+2))
		print(round(a, 4)
	else:
		b = (1/x+2)
		print(round(b, 4))
else:
	print("entradas invalidas")
-- ERROR:
File "XXXX", line 7
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:49:28) 
-- CODE:
x = float(input("Valor de x: "))

if ((-1000 <= x < -2) or (2 < x <= 1000)):
	if (-1000 <= x < -2):
		a = (-(1/x+2))
		print(round(a, 4)
	else:
		b = (1/x+2)
		print(round(b, 4))
else:
	print("entradas invalidas")
-- ERROR:
File "XXXX", line 7
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:49:43) 
-- CODE:
x = float(input("Valor de x: "))

if ((-1000 <= x < -2) or (2 < x <= 1000)):
	if (-1000 <= x < -2):
		a = (-(1/x+2))
		print(round(a, 4)
	else:
		b = (1/x+2)
		print(round(b, 4))
else:
	print("entradas invalidas")
-- ERROR:
File "XXXX", line 7
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:49:46) 
-- CODE:
x = float(input("Valor de x: "))

if ((-1000 <= x < -2) or (2 < x <= 1000)):
	if (-1000 <= x < -2):
		a = (-(1/x+2))
		print(round(a, 4)
	else:
				
		b = (1/x+2)
		print(round(b, 4))
else:
	print("entradas invalidas")
-- ERROR:
File "XXXX", line 7
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:49:53) 
-- CODE:
x = float(input("Valor de x: "))

if ((-1000 <= x < -2) or (2 < x <= 1000)):
	if (-1000 <= x < -2):
		a = (-(1/x+2))
		print(round(a, 4)
else:
		b = (1/x+2)
		print(round(b, 4))
else:
	print("entradas invalidas")
-- ERROR:
File "XXXX", line 7
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:49:55) 
-- CODE:
x = float(input("Valor de x: "))

if ((-1000 <= x < -2) or (2 < x <= 1000)):
	if (-1000 <= x < -2):
		a = (-(1/x+2))
		print(round(a, 4)
		else:
		b = (1/x+2)
		print(round(b, 4))
else:
	print("entradas invalidas")
-- ERROR:
File "XXXX", line 7
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:49:57) 
-- CODE:
x = float(input("Valor de x: "))

if ((-1000 <= x < -2) or (2 < x <= 1000)):
	if (-1000 <= x < -2):
		a = (-(1/x+2))
		print(round(a, 4)
	else:
		b = (1/x+2)
		print(round(b, 4))
else:
	print("entradas invalidas")
-- ERROR:
File "XXXX", line 7
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:50:43) 
-- CODE:
x = float(input("Valor de x: "))

if ((-1000 <= x < -2) or (2 < x <= 1000)):
	if (-1000 <= x < -2):
		a = (-(1/x+2))
		print(round(a, 4)
else:
	print("entradas invalidas")
-- ERROR:
File "XXXX", line 7
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:51:07) 
-- CODE:
x = float(input("Valor de x: "))

if ((-1000 <= x < -2) or (2 < x <= 1000)):
	if (-1000 <= x < -2):
		a = (-(1/x+2))
		print(round(a, 4)
else:
	print("entradas invalidas")
-- ERROR:
File "XXXX", line 7
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:51:12) 
-- CODE:
x = float(input("Valor de x: "))

if ((-1000 <= x < -2) or (2 < x <= 1000)):
	if (-1000 <= x < -2):
		a = (-(1/x+2))
		print(round(a, 4)
	else:
	print("entradas invalidas")
-- ERROR:
File "XXXX", line 7
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:52:41) 
-- CODE:
x = float(input("Valor de x: "))

if ((-1000 <= x < -2) or (2 < x <= 1000)):
	if (-1000 <= x < -2):
	eq = (-1/x+2)
		print(round(eq, 4))
else:
	print("entradas invalidas")
-- ERROR:
File "XXXX", line 5
    eq = (-1/x+2)
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:52:45) 
-- CODE:
x = float(input("Valor de x: "))

if ((-1000 <= x < -2) or (2 < x <= 1000)):
	if (-1000 <= x < -2):
		eq = (-1/x+2)
		print(round(eq, 4))
else:
	print("entradas invalidas")
-- OUTPUT:
2.001
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:53:08) 
-- CODE:
x = float(input("Valor de x: "))

if ((-1000 <= x < -2) or (2 < x <= 1000)):
	if (-1000 <= x < -2):
		eq = (-1/x+2)
		print(round(eq, 4))
else:
	print("entradas invalidas")
-- OUTPUT:
2.001
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 11:53:27) 
-- CODE:
x = float(input("Valor de x: "))

if ((-1000 <= x < -2) or (2 < x <= 1000)):
	if (-1000 <= x < -2):
		eq = (-1/x+2)
		print(round(eq, 4))
else:
	print("entrada invalida")
-- EXECUTION TIME:
0.148619
-- TEST CASE 1:
---- input:
-999.99
---- correct output:
0.001
---- user output:
2.001
-- TEST CASE 2:
---- input:
1.5
---- correct output:
entrada invalida
---- user output:
entrada invalida
-- TEST CASE 3:
---- input:
-2.01
---- correct output:
100.0
---- user output:
2.4975
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:53:53) 
-- CODE:
x = float(input("Valor de x: "))

if ((-1000 <= x < -2) or (2 < x <= 1000)):
	if (-1000 <= x < -2):
		eq = (-1/x+2)
		print(round(eq, 4))
		else:
			eq2 = (1/x+2)
			print(round(eq2, 4))
else:
	print("entrada invalida")
-- ERROR:
File "XXXX", line 7
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
