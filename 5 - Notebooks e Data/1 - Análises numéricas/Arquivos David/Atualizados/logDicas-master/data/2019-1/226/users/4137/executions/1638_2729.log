== TEST (2019-04-08 21:28:11) 
-- CODE:
num = int(input("Digite um numero inteiro:"))
num1 = int(input("Digite um numero inteiro:"))

if((num+num1)%2 == 0):
	print(num+num1)
else:
	print(num1-num)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 21:29:12) 
-- CODE:
num = int(input("Digite um numero inteiro:"))
num1 = int(input("Digite um numero inteiro:"))

if((num/2 + num1/2)%2 == 0):
	print(num+num1)
else:
	print(num1-nu)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(num1-nu)
NameError: name 'nu' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 21:29:56) 
-- CODE:
num = int(input("Digite um numero inteiro:"))
num1 = int(input("Digite um numero inteiro:"))

if(abs(num/2 + num1/2)%2 == 0):
	print(num+num1)
else:
	print(num1-nu)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(num1-nu)
NameError: name 'nu' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 21:30:09) 
-- CODE:
num = int(input("Digite um numero inteiro:"))
num1 = int(input("Digite um numero inteiro:"))

if((abs(num/2 + num1/2))%2 == 0):
	print(num+num1)
else:
	print(num1-nu)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(num1-nu)
NameError: name 'nu' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 21:30:32) 
-- CODE:
num = int(input("Digite um numero inteiro:"))
num1 = int(input("Digite um numero inteiro:"))

if(abs(num//2 + num1//2)%2 == 0):
	print(num+num1)
else:
	print(num1-nu)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(num1-nu)
NameError: name 'nu' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 21:30:44) 
-- CODE:
num = int(input("Digite um numero inteiro:"))
num1 = int(input("Digite um numero inteiro:"))

if(abs(num//2 + num1//2)%2 == 0):
	print(num+num1)
else:
	print(num1-num)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 21:30:48) 
-- CODE:
num = int(input("Digite um numero inteiro:"))
num1 = int(input("Digite um numero inteiro:"))

if(abs(num//2 + num1//2)%2 == 0):
	print(num+num1)
else:
	print(num1-num)
-- EXECUTION TIME:
0.172113
-- TEST CASE 1:
---- input:
9
10
---- correct output:
19
---- user output:
1
-- TEST CASE 2:
---- input:
3
7
---- correct output:
4
---- user output:
10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 21:30:59) 
-- CODE:
num = int(input("Digite um numero inteiro:"))
num1 = int(input("Digite um numero inteiro:"))

if(abs(num//2 + num1//2)%2 == 0):
	print(num+num1)
else:
	print(num1-num)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 21:31:09) 
-- CODE:
num = int(input("Digite um numero inteiro:"))
num1 = int(input("Digite um numero inteiro:"))

if(abs(num//2 + num1//2)%2 == 0):
	print(num+num1)
else:
	print(num1-num)
-- EXECUTION TIME:
0.188151
-- TEST CASE 1:
---- input:
9
10
---- correct output:
19
---- user output:
1
-- TEST CASE 2:
---- input:
3
7
---- correct output:
4
---- user output:
10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 21:31:09) 
-- CODE:
num = int(input("Digite um numero inteiro:"))
num1 = int(input("Digite um numero inteiro:"))

if(abs(num//2 + num1//2)%2 == 0):
	print(num+num1)
else:
	print(num1-num)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 21:31:56) 
-- CODE:
num = int(input("Digite um numero inteiro:"))
num1 = int(input("Digite um numero inteiro:"))

if((num*num1)%2 == 0):
	print(num+num1)
else:
	print(num1-num)
-- OUTPUT:
19
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 21:32:04) 
-- CODE:
num = int(input("Digite um numero inteiro:"))
num1 = int(input("Digite um numero inteiro:"))

if((num*num1)%2 == 0):
	print(num+num1)
else:
	print(num1-num)
-- EXECUTION TIME:
0.13995
-- TEST CASE 1:
---- input:
9
10
---- correct output:
19
---- user output:
19
-- TEST CASE 2:
---- input:
3
7
---- correct output:
4
---- user output:
4
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
