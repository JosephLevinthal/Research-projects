== TEST (2019-03-26 11:17:15) 
-- CODE:
nA = int(input("Digite um numero de quatro digitos: "))

nB = nA // 1000
nC = nA // 100 - (nB * 10)
nD = nA // 10 - (nA // 100) * 10
nE = nA % nD

print(nB + nC + nD + nE)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    nE = nA % nD
ZeroDivisionError: integer division or modulo by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 11:17:23) 
-- CODE:
nA = int(input("Digite um numero de quatro digitos: "))

nB = nA // 1000
nC = nA // 100 - (nB * 10)
nD = nA // 10 - (nA // 100) * 10
nE = nA % nD

print(nB + nC + nD + nE)
-- EXECUTION TIME:
0.154603
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1593/1803/main.py", line 6, in <module>
    nE = nA % nD
ZeroDivisionError: integer division or modulo by zero

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:19:10) 
-- CODE:
nA = int(input("Digite um numero de quatro digitos: "))

nB = nA // 1000
nC = nA // 100 - (nB * 10)
nD = nA // 10 - (nA // 100) * 10
nE = nA % 10

print((5 * nB) + (4 * nC) + (2 * nD) + nE) % 11
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print((5 * nB) + (4 * nC) + (2 * nD) + nE) % 11
TypeError: unsupported operand type(s) for %: 'NoneType' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:19:30) 
-- CODE:
nA = int(input("Digite um numero de quatro digitos: "))

nB = nA // 1000
nC = nA // 100 - (nB * 10)
nD = nA // 10 - (nA // 100) * 10
nE = nA % 10

print((5 * nB) + (4 * nC) + (2 * nD) + nE) % 11)
-- ERROR:
File "XXXX", line 8
    print((5 * nB) + (4 * nC) + (2 * nD) + nE) % 11)
                                                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 11:19:55) 
-- CODE:
nA = int(input("Digite um numero de quatro digitos: "))

nB = nA // 1000
nC = nA // 100 - (nB * 10)
nD = nA // 10 - (nA // 100) * 10
nE = nA % 10

print(((5 * nB) + (4 * nC) + (2 * nD) + nE) % 11)
-- EXECUTION TIME:
0.149746
-- TEST CASE 1:
---- input:
2000
---- correct output:
10
---- user output:
10
-- TEST CASE 2:
---- input:
3550
---- correct output:
6
---- user output:
1
-- TEST CASE 3:
---- input:
0007
---- correct output:
3
---- user output:
7
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:19:55) 
-- CODE:
nA = int(input("Digite um numero de quatro digitos: "))

nB = nA // 1000
nC = nA // 100 - (nB * 10)
nD = nA // 10 - (nA // 100) * 10
nE = nA % 10

print(((5 * nB) + (4 * nC) + (2 * nD) + nE) % 11)
-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 11:20:03) 
-- CODE:
nA = int(input("Digite um numero de quatro digitos: "))

nB = nA // 1000
nC = nA // 100 - (nB * 10)
nD = nA // 10 - (nA // 100) * 10
nE = nA % 10

print(((5 * nB) + (4 * nC) + (2 * nD) + nE) % 11)
-- EXECUTION TIME:
0.140855
-- TEST CASE 1:
---- input:
2000
---- correct output:
10
---- user output:
10
-- TEST CASE 2:
---- input:
3550
---- correct output:
6
---- user output:
1
-- TEST CASE 3:
---- input:
0007
---- correct output:
3
---- user output:
7
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:21:48) 
-- CODE:
nA = int(input("Digite um numero de quatro digitos: "))

nB = nA // 1000
nC = nA // 100 - (nB * 10)
nD = nA // 10 - (nA // 100) * 10
nE = nA % 10

x = (5 * nB + 4 * nC + 2 * nD + nE) % 11

print(X)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(X)
NameError: name 'X' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:22:11) 
-- CODE:
nA = int(input("Digite um numero de quatro digitos: "))

nB = nA // 1000
nC = nA // 100 - (nB * 10)
nD = nA // 10 - (nA // 100) * 10
nE = nA % 10

x = ((5 * nB + 4 * nC + 2 * nD + nE) % 11)

print(x)
-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 11:22:16) 
-- CODE:
nA = int(input("Digite um numero de quatro digitos: "))

nB = nA // 1000
nC = nA // 100 - (nB * 10)
nD = nA // 10 - (nA // 100) * 10
nE = nA % 10

x = ((5 * nB + 4 * nC + 2 * nD + nE) % 11)

print(x)
-- EXECUTION TIME:
0.160948
-- TEST CASE 1:
---- input:
2000
---- correct output:
10
---- user output:
10
-- TEST CASE 2:
---- input:
3550
---- correct output:
6
---- user output:
1
-- TEST CASE 3:
---- input:
0007
---- correct output:
3
---- user output:
7
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:23:35) 
-- CODE:
nA = int(input("Digite um numero de quatro digitos: "))

nB = nA // 1000
nC = nA // 100 - (nB * 10)
nD = nA // 10 - (nA // 100) * 10
nE = nA % 10

x = (5 * nB + 4 * nC + 3 * nD + 2 * nE) % 11

print(x)
-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 11:23:42) 
-- CODE:
nA = int(input("Digite um numero de quatro digitos: "))

nB = nA // 1000
nC = nA // 100 - (nB * 10)
nD = nA // 10 - (nA // 100) * 10
nE = nA % 10

x = (5 * nB + 4 * nC + 3 * nD + 2 * nE) % 11

print(x)
-- EXECUTION TIME:
0.184103
-- TEST CASE 1:
---- input:
2000
---- correct output:
10
---- user output:
10
-- TEST CASE 2:
---- input:
3550
---- correct output:
6
---- user output:
6
-- TEST CASE 3:
---- input:
0007
---- correct output:
3
---- user output:
3
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:33:17) 
-- CODE:
nA = int(input("Digite um numero de quatro digitos: "))

nB = nA // 1000
nC = nA // 100 - (nB * 10)
nD = nA // 10 - (nA // 100) * 10
nE = nA % 10

x = (5 * nB + 4 * nC + 3 * nD + 2 * nE) % 11

print(x)
-- EXECUTION TIME:
0.145176
-- TEST CASE 1:
---- input:
2000
---- correct output:
10
---- user output:
10
-- TEST CASE 2:
---- input:
3550
---- correct output:
6
---- user output:
6
-- TEST CASE 3:
---- input:
0007
---- correct output:
3
---- user output:
3
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
