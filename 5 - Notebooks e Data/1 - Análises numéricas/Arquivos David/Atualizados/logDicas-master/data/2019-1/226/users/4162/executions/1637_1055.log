== TEST (2019-04-04 20:16:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v0=float(input("insira a velocidade inicial: "))
an= radians(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
print(an)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    an= radians(input())
TypeError: must be real number, not str
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 20:16:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v0=float(input("insira a velocidade inicial: "))
an= radians(float(input("insira o angulo: ")))
d= float(input("insira a distancia entre o porco e o passaro: "))
print(an)
-- OUTPUT:
0.7941248096574199
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 20:19:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v0=float(input("insira a velocidade inicial: "))
an= radians(float(input("insira o angulo: ")))
d= float(input("insira a distancia entre o porco e o passaro: "))
g=9,8
r=((v0**2)*(sin*(2*an)))/g
print(r)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    r=((v0**2)*(sin*(2*an)))/g
TypeError: unsupported operand type(s) for *: 'builtin_function_or_method' and 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 20:24:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
v0=float(input("insira a velocidade inicial: "))
an= float(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
g=9,8
from math import *
a=(v0**2)
b= sin(radians(2**an))
r=(a*b)/g
print(r)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    r=(a*b)/g
TypeError: unsupported operand type(s) for /: 'float' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 20:27:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
v0=float(input("insira a velocidade inicial: "))
an= float(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
g=9,8
from math import *
a=(v0**2)
b= sin(radians(an))
r=(a*b)/g
print(r)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    r=(a*b)/g
TypeError: unsupported operand type(s) for /: 'float' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 21:13:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
v0=float(input("insira a velocidade inicial: "))
an= float(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
g=9.8
from math import *
a=(v0**2)
b= sin(radians(2*an))
r=(a*b)/g
print(r)

-- OUTPUT:
11.2482865705094
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 21:19:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
v0=float(input("insira a velocidade inicial: "))
an= float(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
g=9.8
from math import *
a=(v0**2)
b= sin(radians(2*an))
r=(a*b)/g
if (d-0.1)<=r<=(s+0.1):
	print("sim")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    if (d-0.1)<=r<=(s+0.1):
NameError: name 's' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 21:20:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
v0=float(input("insira a velocidade inicial: "))
an= float(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
c=(d-0.1)<=r<=(s+0.1)
g=9.8
from math import *
a=(v0**2)
b= sin(radians(2*an))
r=(a*b)/g
if c:
	print("sim")
if r!=c:
	print("nao")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    c=(d-0.1)<=r<=(s+0.1)
NameError: name 'r' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 21:23:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
v0=float(input("insira a velocidade inicial: "))
an= float(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
g=9.8
from math import *
a=(v0**2)
b= sin(radians(2*an))
r=(a*b)/g
if abs((d-0.1)<=r<=(s+0.1)):
	print("sim")
if r>(d+0.1)
	print("nao")
-- ERROR:
File "XXXX", line 14
    if r>(d+0.1)
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 21:23:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
v0=float(input("insira a velocidade inicial: "))
an= float(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
g=9.8
from math import *
a=(v0**2)
b= sin(radians(2*an))
r=(a*b)/g
if abs((d-0.1)<=r<=(s+0.1)):
	print("sim")
if r>(d+0.1):
	print("nao")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    if abs((d-0.1)<=r<=(s+0.1)):
NameError: name 's' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 21:25:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
v0=float(input("insira a velocidade inicial: "))
an= float(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
g=9.8
from math import *
a=(v0**2)
b= sin(radians(2*an))
r=(a*b)/g
if abs((d-0.1)<=r<=(s+0.1)):
	print("sim")
if r>(d+0.1) or r<(d-0.1):
	print("nao")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    if abs((d-0.1)<=r<=(s+0.1)):
NameError: name 's' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-04 21:25:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
v0=float(input("insira a velocidade inicial: "))
an= float(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
g=9.8
from math import *
a=(v0**2)
b= sin(radians(2*an))
r=(a*b)/g
if abs((d-0.1)<=r<=(s+0.1)):
	print("sim")
if r>(d+0.1) or r<(d-0.1):
	print("nao")
-- EXECUTION TIME:
0.215136
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1637/1055/main.py", line 12, in <module>
    if abs((d-0.1)<=r<=(s+0.1)):
NameError: name 's' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 21:27:36) 
-- CODE:
v0=float(input("insira a velocidade inicial: "))
an= float(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
g=9.8
from math import *
a=(v0**2)
b= sin(radians(2*an))
r=(a*b)/g
if abs((d-0.1)<=r<=(s+0.1)):
	print("sim")
else:
	print("nao")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    if abs((d-0.1)<=r<=(s+0.1)):
NameError: name 's' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-04 21:27:48) 
-- CODE:
v0=float(input("insira a velocidade inicial: "))
an= float(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
g=9.8
from math import *
a=(v0**2)
b= sin(radians(2*an))
r=(a*b)/g
if abs((d-0.1)<=r<=(s+0.1)):
	print("sim")
else:
	print("nao")
-- EXECUTION TIME:
0.143338
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1637/1055/main.py", line 9, in <module>
    if abs((d-0.1)<=r<=(s+0.1)):
NameError: name 's' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 21:29:21) 
-- CODE:
v0=float(input("insira a velocidade inicial: "))
an= float(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
g=9.8
from math import *
a=(v0**2)
b= sin(radians(2*an))
r=(a*b)/g
print (r)
-- OUTPUT:
11.2482865705094
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 21:33:33) 
-- CODE:
v0=float(input("insira a velocidade inicial: "))
an= float(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
g=9.8
from math import *
a=(v0**2)
b= sin(radians(2*an))
r=(a*b)/g
if abs(d-r == 0 or 0.1):
	print('sim')
else:
	print("nao")
-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 21:34:12) 
-- CODE:
v0=float(input("insira a velocidade inicial: "))
an= float(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
g=9.8
from math import *
a=(v0**2)
b= sin(radians(2*an))
r=(a*b)/g
if abs((d-r) == 0 or 0.1):
	print('sim')
else:
	print("nao")
-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-04 21:43:59) 
-- CODE:
v0=float(input("insira a velocidade inicial: "))
an= float(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
g=9.8
from math import *
a=(v0**2)
b= sin(radians(2*an))
r=(a*b)/g
if abs((d-r) == 0 or 0.1):
	print('sim')
else:
	print("nao")
-- EXECUTION TIME:
0.237192
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
sim
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 21:47:17) 
-- CODE:
v0=float(input("insira a velocidade inicial: "))
an= float(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
from math import *
r=((v0**2)*sin(radians(2*an)))/9.8

if abs((d-r) == 0 or 0.1):
	print('sim')
else:
	print("nao")
-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 21:52:57) 
-- CODE:
v0=float(input("insira a velocidade inicial: "))
an= float(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
from math import *
r=((v0**2)*sin(radians(2*an)))/9.8

if abs((d-r) == 0):
	print('sim')
	if abs((d-r)==0.01)
else:
	print("nao")
-- ERROR:
File "XXXX", line 9
    if abs((d-r)==0.01)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 21:56:05) 
-- CODE:
v0=float(input("insira a velocidade inicial: "))
an= float(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
r=(v0**2)*(sin*(radians(2*an)))/9.8
print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    r=(v0**2)*(sin*(radians(2*an)))/9.8
NameError: name 'sin' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 21:56:24) 
-- CODE:
v0=float(input("insira a velocidade inicial: "))
an= float(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
from math import *
r=(v0**2)*(sin*(radians(2*an)))/9.8
print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    r=(v0**2)*(sin*(radians(2*an)))/9.8
TypeError: unsupported operand type(s) for *: 'builtin_function_or_method' and 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 21:58:10) 
-- CODE:
v0=float(input("insira a velocidade inicial: "))
an= float(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
from math import *
r=((v0**2)*sin(radians(2*an)))/9.8
print(r)
-- OUTPUT:
11.2482865705094
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 22:01:29) 
-- CODE:
v0=float(input("insira a velocidade inicial: "))
an= float(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
from math import *
r=((v0**2)*sin(radians(2*an)))/9.8
if abs(d==r):
	print("sim")
if abs(d+0.01==r):
	print("sim")
if abs(d-0.01==r):
	print("sim")
else: 
	print("nao")
-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-04 22:01:38) 
-- CODE:
v0=float(input("insira a velocidade inicial: "))
an= float(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
from math import *
r=((v0**2)*sin(radians(2*an)))/9.8
if abs(d==r):
	print("sim")
if abs(d+0.01==r):
	print("sim")
if abs(d-0.01==r):
	print("sim")
else: 
	print("nao")
-- EXECUTION TIME:
0.156314
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 22:02:35) 
-- CODE:
v0=float(input("insira a velocidade inicial: "))
an= float(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
from math import *
r=((v0**2)*sin(radians(2*an)))/9.8
if abs(d==r):
	print("sim")
if abs(d+0.01==r):
	print("sim")
if abs(d-0.01==r):
	print("sim")
else: 
	print("nao")
-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 22:05:50) 
-- CODE:
v0=float(input("insira a velocidade inicial: "))
an= float(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
from math import *
r=((v0**2)*sin(radians(2*an)))/9.8
if abs(d-r)==0:
	print("sim")
if abs(d-r)==0.1:
	print("sim")
else: 
	print("nao")
-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-04 22:06:02) 
-- CODE:
v0=float(input("insira a velocidade inicial: "))
an= float(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
from math import *
r=((v0**2)*sin(radians(2*an)))/9.8
if abs(d-r)==0:
	print("sim")
if abs(d-r)==0.1:
	print("sim")
else: 
	print("nao")
-- EXECUTION TIME:
0.17043
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 22:07:31) 
-- CODE:
v0=float(input("insira a velocidade inicial: "))
an= float(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
from math import *
r=((v0**2)*sin(radians(2*an)))/9.8
if abs(d-r)==0:
	print("sim")
if abs(d-r)==0.1:
	print("sim")
if abs(d-r)<0.1: 
	print("nao")
if abs(d-r)>0.1: 
	print("nao")
-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-04 22:07:35) 
-- CODE:
v0=float(input("insira a velocidade inicial: "))
an= float(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
from math import *
r=((v0**2)*sin(radians(2*an)))/9.8
if abs(d-r)==0:
	print("sim")
if abs(d-r)==0.1:
	print("sim")
if abs(d-r)<0.1: 
	print("nao")
if abs(d-r)>0.1: 
	print("nao")
-- EXECUTION TIME:
0.261811
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 22:07:41) 
-- CODE:
v0=float(input("insira a velocidade inicial: "))
an= float(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
from math import *
r=((v0**2)*sin(radians(2*an)))/9.8
if abs(d-r)==0:
	print("sim")
if abs(d-r)==0.1:
	print("sim")
if abs(d-r)<0.1: 
	print("nao")
if abs(d-r)>0.1: 
	print("nao")
-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 22:09:44) 
-- CODE:
v0=float(input("insira a velocidade inicial: "))
an= float(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
from math import *
r=((v0**2)*sin(radians(2*an)))/9.8
if abs(d-r)==0 or 0.1:
	print("sim")
else: 
	print("nao)")

-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 22:09:49) 
-- CODE:
v0=float(input("insira a velocidade inicial: "))
an= float(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
from math import *
r=((v0**2)*sin(radians(2*an)))/9.8
if abs(d-r)==0 or 0.1:
	print("sim")
else: 
	print("nao)"

-- ERROR:
File "XXXX", line 10
    
                 ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 22:10:02) 
-- CODE:
v0=float(input("insira a velocidade inicial: "))
an= float(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
from math import *
r=((v0**2)*sin(radians(2*an)))/9.8
if abs(d-r)==0 or 0.1:
	print("sim")
else: 
	print("nao")

-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 22:10:05) 
-- CODE:
v0=float(input("insira a velocidade inicial: "))
an= float(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
from math import *
r=((v0**2)*sin(radians(2*an)))/9.8
if abs(d-r)==0 or 0.1:
	print("sim")
else: 
	print("nao")

-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 15:27:29) 
-- CODE:
v0=float(input("insira a velocidade inicial: "))
an= float(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
from math import *
r=((v0**2)*sin(radians(2*an)))/9.8
 if abs(d-r)==0:
	print("sim")
else: 
	print("nao")

-- ERROR:
File "XXXX", line 6
    if abs(d-r)==0:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 15:27:42) 
-- CODE:
v0=float(input("insira a velocidade inicial: "))
an= float(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
from math import *
r=((v0**2)*sin(radians(2*an)))/9.8
6if abs(d-r)==0:
	print("sim")
else: 
	print("nao")

-- ERROR:
File "XXXX", line 6
    6if abs(d-r)==0:
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 15:27:47) 
-- CODE:
v0=float(input("insira a velocidade inicial: "))
an= float(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
from math import *
r=((v0**2)*sin(radians(2*an)))/9.8
if abs(d-r)==0:
	print("sim")
else: 
	print("nao")

-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 15:29:01) 
-- CODE:
v0=float(input("insira a velocidade inicial: "))
an= float(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
from math import *
r=((v0**2)*sin(radians(2*an)))/9.8
if abs(d-r)==0:
	print("sim")
if abs(d-r)==0.1:
	print("sim")
else:
	print("nao")

-- EXECUTION TIME:
0.133049
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 15:29:02) 
-- CODE:
v0=float(input("insira a velocidade inicial: "))
an= float(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
from math import *
r=((v0**2)*sin(radians(2*an)))/9.8
if abs(d-r)==0:
	print("sim")
if abs(d-r)==0.1:
	print("sim")
else:
	print("nao")

-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 15:29:36) 
-- CODE:
v0=float(input("insira a velocidade inicial: "))
an= float(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
from math import *
r=((v0**2)*sin(radians(2*an)))/9.8
if abs(d-r)==0:
	print("sim")
if abs(d-r)==0.1:
	print("sim")
else:
	print("nao")

-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 18:32:44) 
-- CODE:
v0= float(input("insira a velocidade inicial: "))
an= float(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
from math import *
r=((v0**2)*sin(radians(2*an)))/9.8
if abs(d-r)=0:
	print("sim")
if abs(d-r)=0.1:
	print("sim")
else:
	print("nao")

-- ERROR:
File "XXXX", line 6
    if abs(d-r)=0:
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 18:32:55) 
-- CODE:
v0= float(input("insira a velocidade inicial: "))
an= float(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
from math import *
r=((v0**2)*sin(radians(2*an)))/9.8
if abs(d-r)==0:
	print("sim")
if abs(d-r)=0.1:
	print("sim")
else:
	print("nao")

-- ERROR:
File "XXXX", line 8
    if abs(d-r)=0.1:
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 18:33:00) 
-- CODE:
v0= float(input("insira a velocidade inicial: "))
an= float(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
from math import *
r=((v0**2)*sin(radians(2*an)))/9.8
if abs(d-r)==0:
	print("sim")
if abs(d-r)==0.1:
	print("sim")
else:
	print("nao")

-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 18:34:16) 
-- CODE:
v0= float(input("insira a velocidade inicial: "))
an= float(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
from math import *
r=((v0**2)*sin(radians(2*an)))/9.8
if abs(d-r)<0:
	print("sim")
else:
	print("nao")

-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 18:34:24) 
-- CODE:
v0= float(input("insira a velocidade inicial: "))
an= float(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
from math import *
r=((v0**2)*sin(radians(2*an)))/9.8
if abs(d-r)<0.1:
	print("sim")
else:
	print("nao")

-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 18:34:37) 
-- CODE:
v0= float(input("insira a velocidade inicial: "))
an= float(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
from math import *
r=((v0**2)*sin(radians(2*an)))/9.8
if abs(d-r)<=0.1:
	print("sim")
else:
	print("nao")

-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 18:35:15) 
-- CODE:
v0= float(input("insira a velocidade inicial: "))
an= float(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
from math import *
r=((v0**2)*sin(radians(2*an)))/9.8
if abs(d-r)<=0.1:
	print("sim")
else:
	print("nao")

-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 18:35:17) 
-- CODE:
v0= float(input("insira a velocidade inicial: "))
an= float(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
from math import *
r=((v0**2)*sin(radians(2*an)))/9.8
if abs(d-r)<=0.1:
	print("sim")
else:
	print("nao")

-- EXECUTION TIME:
0.13671
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 11:37:12) 
-- CODE:
v0= float(input("insira a velocidade inicial: "))
an= float(input("insira o angulo: "))
d= float(input("insira a distancia entre o porco e o passaro: "))
from math import *
r=((v0**2)*sin(radians(2*an)))/9.8
if abs(d-r)<=0.1:
	print("sim")
else:
	print("nao")

-- EXECUTION TIME:
0.185158
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
